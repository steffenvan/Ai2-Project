<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002520">
<title confidence="0.9991615">
Generating Templates of Entity Summaries
with an Entity-Aspect Model and Pattern Mining
</title>
<author confidence="0.999613">
Peng Li&apos; and Jing Jiang&apos; and Yinglin Wang&apos;
</author>
<affiliation confidence="0.998337">
&apos;Department of Computer Science and Engineering, Shanghai Jiao Tong University
&apos;School of Information Systems, Singapore Management University
</affiliation>
<email confidence="0.996259">
{lipeng,ylwang}@sjtu.edu.cn jingjiang@smu.edu.sg
</email>
<sectionHeader confidence="0.997332" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999967090909091">
In this paper, we propose a novel approach
to automatic generation of summary tem-
plates from given collections of summary
articles. This kind of summary templates
can be useful in various applications. We
first develop an entity-aspect LDA model
to simultaneously cluster both sentences
and words into aspects. We then apply fre-
quent subtree pattern mining on the depen-
dency parse trees of the clustered and la-
beled sentences to discover sentence pat-
terns that well represent the aspects. Key
features of our method include automatic
grouping of semantically related sentence
patterns and automatic identification of
template slots that need to be filled in. We
apply our method on five Wikipedia entity
categories and compare our method with
two baseline methods. Both quantitative
evaluation based on human judgment and
qualitative comparison demonstrate the ef-
fectiveness and advantages of our method.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999953142857143">
In this paper, we study the task of automatically
generating templates for entity summaries. An en-
tity summary is a short document that gives the
most important facts about an entity. In Wikipedia,
for instance, most articles have an introduction
section that summarizes the subject entity before
the table of contents and other elaborate sections.
These introduction sections are examples of en-
tity summaries we consider. Summaries of enti-
ties from the same category usually share some
common structure. For example, biographies of
physicists usually contain facts about the national-
ity, educational background, affiliation and major
contributions of the physicist, whereas introduc-
tions of companies usually list information such
as the industry, founder and headquarter of the
company. Our goal is to automatically construct
a summary template that outlines the most salient
types of facts for an entity category, given a col-
lection of entity summaries from this category.
Such kind of summary templates can be very
useful in many applications. First of all, they
can uncover the underlying structures of summary
articles and help better organize the information
units, much in the same way as infoboxes do in
Wikipedia. In fact, automatic template genera-
tion provides a solution to induction of infobox
structures, which are still highly incomplete in
Wikipedia (Wu and Weld, 2007). A template
can also serve as a starting point for human edi-
tors to create new summary articles. Furthermore,
with summary templates, we can potentially ap-
ply information retrieval and extraction techniques
to construct summaries for new entities automati-
cally on the fly, improving the user experience for
search engine and question answering systems.
Despite its usefulness, the problem has not been
well studied. The most relevant work is by Fila-
tova et al. (2006) on automatic creation of domain
templates, where the defintion of a domain is sim-
ilar to our notion of an entity category. Filatova
et al. (2006) first identify the important verbs for
a domain using corpus statistics, and then find fre-
quent parse tree patterns from sentences contain-
ing these verbs to construct a domain template.
There are two major limitations of their approach.
First, the focus on verbs restricts the template pat-
terns that can be found. Second, redundant or
related patterns using different verbs to express
the same or similar facts cannot be grouped to-
gether. For example, “won X award” and “re-
ceived X prize” are considered two different pat-
terns by this approach. We propose a method that
can overcome these two limitations. Automatic
template generation is also related to a number of
other problems that have been studied before, in-
</bodyText>
<page confidence="0.969399">
640
</page>
<note confidence="0.943343">
Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649,
Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.99991868292683">
cluding unsupervised IE pattern discovery (Sudo
et al., 2003; Shinyama and Sekine, 2006; Sekine,
2006; Yan et al., 2009) and automatic generation
of Wikipedia articles (Sauper and Barzilay, 2009).
We discuss the differences of our work from exist-
ing related work in Section 6.
In this paper we propose a novel approach to
the task of automatically generating entity sum-
mary templates. We first develop an entity-aspect
model that extends standard LDA to identify clus-
ters of words that can represent different aspects
of facts that are salient in a given summary col-
lection (Section 3). For example, the words “re-
ceived,” “award,” “won” and “Nobel” may be
clustered together from biographies of physicists
to represent one aspect, even though they may ap-
pear in different sentences from different biogra-
phies. Simultaneously, the entity-aspect model
separates words in each sentence into background
words, document words and aspect words, and
sentences likely about the same aspect are natu-
rally clustered together. After this aspect identi-
fication step, we mine frequent subtree patterns
from the dependency parse trees of the clustered
sentences (Section 4). Different from previous
work, we leverage the word labels assigned by the
entity-aspect model to prune the patterns and to
locate template slots to be filled in.
We evaluate our method on five entity cate-
gories using Wikipedia articles (Section 5). Be-
cause the task is new and thus there is no stan-
dard evaluation criteria, we conduct both quanti-
tative evaluation using our own human judgment
and qualitative comparison. Our evaluation shows
that our method can obtain better sentence patterns
in terms of f1 measure compared with two baseline
methods, and it can also achieve reasonably good
quality of aspect clusters in terms of purity. Com-
pared with standard LDA and K-means sentence
clustering, the aspects identified by our method are
also more meaningful.
</bodyText>
<sectionHeader confidence="0.966434" genericHeader="method">
2 The Task
</sectionHeader>
<bodyText confidence="0.99983575">
Given a collection of entity summaries from the
same entity category, our task is to automatically
construct a summary template that outlines the
most important information one should include in
a summary for this entity category. For example,
given a collection of biographies of physicists, ide-
ally the summary template should indicate that im-
portant facts about a physicist include his/her ed-
</bodyText>
<table confidence="0.996269428571429">
Aspect Pattern
1 ENT received his phd from ? university
ENT studied ? under ?
ENT earned his ? in physics from university of
?
2 ENT was awarded the medal in ?
ENT won the ? award
ENT received the nobel prize in physics in ?
3 ENT was ? director
ENT was the head of ?
ENT worked for ?
4 ENT made contributions to ?
ENT is best known for work on ?
ENT is noted for ?
</table>
<tableCaption confidence="0.9219285">
Table 1: Examples of some good template patterns
and their aspects generated by our method.
</tableCaption>
<bodyText confidence="0.996573638888889">
ucational background, affiliation, major contribu-
tions, awards received, etc.
However, it is not clear what is the best repre-
sentation of such templates. Should a template
comprise a list of subtopic labels (e.g. “educa-
tion” and “affiliation”) or a set of explicit ques-
tions? Here we define a template format based on
the usage of the templates as well as our obser-
vations from Wikipedia entity summaries. First,
since we expect that the templates can be used by
human editors for creating new summaries, we use
sentence patterns that are human readable as basic
units of the templates. For example, we may have
a sentence pattern “ENT graduated from ? Uni-
versity” for the entity category “physicist,” where
ENT is a placeholder for the entity that the sum-
mary is about, and ‘?’ is a slot to be filled in. Sec-
ond, we observe that information about entities of
the same category can be grouped into subtopics.
For example, the sentences “Bohr is a Nobel lau-
reate” and “Einstein received the Nobel Prize” are
paraphrases of the same type of facts, while the
sentences “Taub earned his doctorate at Prince-
ton University” and “he graduated from MIT” are
slightly different but both describe a person’s ed-
ucational background. Therefore, it makes sense
to group sentence patterns based on the subtopics
they pertain to. Here we call these subtopics the
aspects of a summary template.
Formally, we define a summary template to be a
set of sentence patterns grouped into aspects. Each
sentence pattern has a placeholder for the entity to
be summarized and possibly one or more template
slots to be filled in. Table 1 shows some sentence
patterns our method has generated for the “physi-
cist” category.
</bodyText>
<page confidence="0.99738">
641
</page>
<subsectionHeader confidence="0.992375">
2.1 Overview of Our Method
</subsectionHeader>
<bodyText confidence="0.999385571428572">
Our automatic template generation method con-
sists of two steps:
Aspect Identification: In this step, our goal is
to automatically identify the different aspects or
subtopics of the given summary collection. We si-
multaneously cluster sentences and words into as-
pects, using an entity-aspect model extended from
the standard LDA model that is widely used in
text mining (Blei et al., 2003). The output of this
step are sentences clustered into aspects, with each
word labeled as a stop word, a background word,
a document word or an aspect word.
Sentence Pattern Generation: In this step, we
generate human-readable sentence patterns to rep-
resent each aspect. We use frequent subtree pat-
tern mining to find the most representative sen-
tence structures for each aspect. The fixed struc-
ture of a sentence pattern consists of aspect words,
background words and stop words, while docu-
ment words become template slots whose values
can vary from summary to summary.
</bodyText>
<sectionHeader confidence="0.986905" genericHeader="method">
3 Aspect Identification
</sectionHeader>
<bodyText confidence="0.999985093023256">
At the aspect identification step, our goal is to dis-
cover the most salient aspects or subtopics con-
tained in a summary collection. Here we propose
a principled method based on a modified LDA
model to simultaneously cluster both sentences
and words to discover aspects.
We first make the following observation. In en-
tity summaries such as the introduction sections
of Wikipedia articles, most sentences are talk-
ing about a single fact of the entity. If we look
closely, there are a few different kinds of words in
these sentences. First of all, there are stop words
that occur frequently in any document collection.
Second, for a given entity category, some words
are generally used in all aspects of the collection.
Third, some words are clearly associated with the
aspects of the sentences they occur in. And finally,
there are also words that are document or entity
specific. For example, in Table 2 we show two
sentences related to the “affiliation” aspect from
the “physicist” summary collection. Stop words
such as “is” and “the” are labeled with “S.” The
word “physics” can be regarded as a background
word for this collection. “Professor” and “univer-
sity” are clearly related to the “affiliation” aspect.
Finally words such as “Modena” and “Chicago”
are specifically associated with the subject enti-
ties being discussed, that is, they are specific to
the summary documents.
To capture background words and document-
specific words, Chemudugunta et al. (2007)
proposed to introduce a background topic and
document-specific topics. Here we borrow their
idea and also include a background topic as well
as document-specific topics. To discover aspects
that are local to one or a few adjacent sentences but
may occur in many documents, Titov and McDon-
ald (2008) proposed a multi-grain topic model,
which relies on word co-occurrences within short
paragraphs rather than documents in order to dis-
cover aspects. Inspired by their model, we rely
on word co-occurrences within single sentences to
identify aspects.
</bodyText>
<subsectionHeader confidence="0.706526">
3.1 Entity-Aspect Model
</subsectionHeader>
<bodyText confidence="0.999992787878788">
We now formally present our entity-aspect model.
First, we assume that stop words can be identified
using a standard stop word list. We then assume
that for a given entity category there are three
kinds of unigram language models (i.e. multino-
mial word distributions). There is a background
model OB that generates words commonly used
in all documents and all aspects. There are D
document models Od (1 &lt; d &lt; D), where D
is the number of documents in the given sum-
mary collection, and there are A aspect models 0a
(1 &lt; a &lt; A), where A is the number of aspects.
We assume that these word distributions have a
uniform Dirichlet prior with parameter Q.
Since not all aspects are discussed equally fre-
quently, we assume that there is a global aspect
distribution 0 that controls how often each aspect
occurs in the collection. 0 is sampled from another
Dirichlet prior with parameter a. There is also a
multinomial distribution 7r that controls in each
sentence how often we encounter a background
word, a document word, or an aspect word. 7r has
a Dirichlet prior with parameter -y.
Let Sd denote the number of sentences in doc-
ument d, Nd,s denote the number of words (after
stop word removal) in sentence s of document d,
and wd,s,n denote the n’th word in this sentence.
We introduce hidden variables zd,s for each sen-
tence to indicate the aspect a sentence belongs to.
We also introduce hidden variables yd,s,n for each
word to indicate whether a word is generated from
the background model, the document model, or
the aspect model. Figure 1 shows the process of
</bodyText>
<page confidence="0.913571">
642
</page>
<equation confidence="0.744969">
Venturi/D is/S a/S professor/A of/S physics/B at/S the/S University/A of/S
Modena/D /S
He/S was/S a/S professor/A of/S physics/B at/S the/S University/A of/S
Chicago/D until/S 1982/D /S
</equation>
<tableCaption confidence="0.921664">
Table 2: Two sentences on “affiliation” from the “physicist” entity category. S: stop word. B: background
word. A: aspect word. D: document word.
</tableCaption>
<figure confidence="0.830876666666667">
1. Draw θ ∼ Dir(α), φB ∼ Dir(β), π ∼ Dir(γ)
2. For each aspect a = 1, ... ,A,
(a) draw φa ∼ Dir(β)
3. For each document d = 1, ... ,D,
(a) draw ψd ∼ Dir(β)
(b) for each sentence s = 1, ... ,Sd
i. draw zd,s ∼ Multi(θ)
ii. for each word n = 1, ... , Nd,s
A. draw yd,s,n ∼ Multi(π)
B. draw wd,s,n ∼ Multi(φB) if yd,s,n = 1,
wd,s,n ∼ Multi(ψd) if yd,s,n = 2, or
wd,s,n ∼ Multi(φzd,s) if yd,s,n = 3
</figure>
<figureCaption confidence="0.9999635">
Figure 1: The document generation process.
Figure 2: The entity-aspect model.
</figureCaption>
<bodyText confidence="0.99956025">
generating the whole document collection. The
plate notation of the model is shown in Figure 2.
Note that the values of α, Q and -y are fixed. The
number of aspects A is also manually set.
</bodyText>
<subsectionHeader confidence="0.987497">
3.2 Inference
</subsectionHeader>
<bodyText confidence="0.9805621">
Given a summary collection, i.e. the set of all
wd,s,n, our goal is to find the most likely assign-
ment of zd,s and yd,s,n, that is, the assignment that
maximizes p(z, y|w; α, β, γ), where z, y and w rep-
resent the set of all z, y and w variables, respec-
tively. With the assignment, sentences are natu-
rally clustered into aspects, and words are labeled
as either a background word, a document word, or
an aspect word.
We approximate p(y, z|w; α, β, γ) by
</bodyText>
<equation confidence="0.963094333333333">
B d D a A B
p(y, z|w; φ, {ψ} �d=1i { } �r
a=1i B, ),
</equation>
<bodyText confidence="0.999901444444444">
where ,
{ ψd}Dd=1, { φa}Aa=1, θ and π are estimated using
Gibbs sampling, which is commonly used for
inference for LDA models (Griffiths and Steyvers,
2004). Due to space limit, we give the formulas
for the Gibbs sampler below without derivation.
First, given sentence s in document d, we sam-
ple a value for zd,s given the values of all other z
and y variables using the following formula:
</bodyText>
<equation confidence="0.9984814">
p(zd,s = a|z¬{d,s}, y, w)
��1v E(v) (/Ca + i + /�
lv=111i=0 l (v) N)
�E(�) .
i=0 (Ca (·) + i + Vβ)
</equation>
<bodyText confidence="0.998281653846154">
In the formula above, z¬{d,s} is the current aspect
assignment of all sentences excluding the current
sentence. CA(a) is the number of sentences assigned
to aspect a, and CA(·) is the total number of sen-
tences. V is the vocabulary size. Ca(v) is the num-
ber of times word v has been assigned to aspect
a. Ca(·) is the total number of words assigned to
aspect a. All the counts above exclude the current
sentence. E(v) is the number of times word v oc-
curs in the current sentence and is assigned to be
an aspect word, as indicated by y, and E(·) is the
total number of words in the current sentence that
are assigned to be an aspect word.
We then sample a value for yd,s,n for each word
in the current sentence using the following formu-
las:
In the formulas above, y¬{d,s,n} is the set of all y
variables excluding yd,s,n. Cπ(1), Cπ(2) and Cπ(3) are
the numbers of words assigned to be a background
word, a document word, or an aspect word, respec-
tively, and Cπ(·) is the total number of words. CB
and Cd are counters similar to Ca but are for the
background model and the document models. In
all these counts, the current word is excluded.
With one Gibbs sample, we can make the fol-
lowing estimation:
</bodyText>
<figure confidence="0.995005571428571">
D
OP
fl
0 A
0
W
B
Nd,s
� B
Y
y a
Z
Sd
A
</figure>
<equation confidence="0.9577598125">
∝ C(a) + α ·
CA(·) + Aα
p(yd,s,n = 1|z, y¬{d,s,n}) ∝ Cπ CB (wd,s,n) + β
p(yd,s,n = 2|z, y¬{d,s,n}) ∝ (1) + γ · CB (·) + V β ,
Cπ(·) + 3γ Cd (wd,s,n) + β
Cπ(2) + γ · Cd(·) + V β ,
Cπ(·) + 3γ
p(yd,s,n = 3|z, y¬{d,s,n}) ∝ Cπ Ca
(3) + γ · (wd,s,n) + β
Cπ(·) + 3γ β
Ca + V .
643
B _ CB(v) + β ,,/&apos;d _ Cd(v) + a _ Ca(v) + β
φv C(·) + Vβ , 4&apos;v C() + Vβ φv Ca (·) + Vβ ,
it = C(t) + 7 (1 &lt; t &lt; 3).
C(·) + 3
</equation>
<bodyText confidence="0.999896210526316">
Here the counts include all sentences and all
words.
In our experiments, we set α = 5, Q = 0.01 and
-y = 20. We run 100 burn-in iterations through all
documents in a collection to stabilize the distri-
bution of z and y before collecting samples. We
found that empirically 100 burn-in iterations were
sufficient for our data set. We take 10 samples with
a gap of 10 iterations between two samples, and
average over these 10 samples to get the estima-
tion for the parameters.
After estimating fiB, { fid}Dd=1, {�φa}Aa=1, θ� and �r,
we find the values of each zd,s and yd,s,,, that max-
imize p(y, z|w; �φB, {�ψd}Dd=1, {�φa}Aa=1, �θ, fr). This as-
signment, together with the standard stop word list
we use, gives us sentences clustered into A as-
pects, where each word is labeled as either a stop
word, a background word, a document word or an
aspect word.
</bodyText>
<subsectionHeader confidence="0.999696">
3.3 Comparison with Other Models
</subsectionHeader>
<bodyText confidence="0.999996064516129">
A major difference of our entity-aspect model
from standard LDA model is that we assume each
sentence belongs to a single aspect while in LDA
words in the same sentence can be assigned to
different topics. Our one-aspect-per-sentence as-
sumption is important because our goal is to clus-
ter sentences into aspects so that we can mine
common sentence patterns for each aspect.
To cluster sentences, we could have used a
straightforward solution similar to document clus-
tering, where sentences are represented as feature
vectors using the vector space model, and a stan-
dard clustering algorithm such as K-means can
be applied to group sentences together. However,
there are some potential problems with directly ap-
plying this typical document clustering method.
First, unlike documents, sentences are short, and
the number of words in a sentence that imply its
aspect is even smaller. Besides, we do not know
the aspect-related words in advance. As a result,
the cosine similarity between two sentences may
not reflect whether they are about the same aspect.
We can perform heuristic term weighting, but the
method becomes less robust. Second, after sen-
tence clustering, we may still want to identify the
the aspect words in each sentence, which are use-
ful in the next pattern mining step. Directly taking
the most frequent words from each sentence clus-
ter as aspect words may not work well even af-
ter stop word removal, because there can be back-
ground words commonly used in all aspects.
</bodyText>
<sectionHeader confidence="0.987858" genericHeader="method">
4 Sentence Pattern Generation
</sectionHeader>
<bodyText confidence="0.983884372093023">
At the pattern generation step, we want to iden-
tify human-readable sentence patterns that best
represent each cluster. Following the basic idea
from (Filatova et al., 2006), we start with the parse
trees of sentences in each cluster, and apply a
frequent subtree pattern mining algorithm to find
sentence structures that have occurred at least K
times in the cluster. Here we use dependency parse
trees.
However, different from (Filatova et al., 2006),
the word labels (S, B, D and A) assigned by the
entity-aspect model give us some advantages. In-
tuitively, a representative sentence pattern for an
aspect should contain at least one aspect word. On
the other hand, document words are entity-specific
and therefore should not appear in the generic tem-
plate patterns; instead, they correspond to tem-
plate slots that need to be filled in. Furthermore,
since we work on entity summaries, in each sen-
tence there is usually a word or phrase that refers
to the subject entity, and we should have a place-
holder for the subject entity in each pattern.
Based on the intuitions above, we have the fol-
lowing sentence pattern generation process.
1. Locate subject entities: In each sentence, we
want to locate the word or phrase that refers to the
subject entity. For example, in a biography, usu-
ally a pronoun “he” or “she” is used to refer to
the subject person. We use the following heuristic
to locate the subject entities: For each summary
document, we first find the top 3 frequent base
noun phrases that are subjects of sentences. For
example, in a company introduction, the phrase
“the company” is probably used frequently as a
sentence subject. Then for each sentence, we first
look for the title of the Wikipedia article. If it oc-
curs, it is tagged as the subject entity. Otherwise,
we check whether one of the top 3 subject base
noun phrases occurs, and if so, it is tagged as the
subject entity. Otherwise, we tag the subject of the
sentence as the subject entity. Finally, for the iden-
tified subject entity word or phrase, we replace the
label assigned by the entity-aspect model with a
</bodyText>
<equation confidence="0.93364575">
A
C(a) + α
CA(·) + Aα,
�θa =
</equation>
<page confidence="0.993126">
644
</page>
<figureCaption confidence="0.9961865">
Figure 3: An example labeled dependency parse
tree.
</figureCaption>
<table confidence="0.999074571428571">
Category D S Sd
min max avg
US Actress 407 1721 1 21 4
Physicist 697 4238 1 49 6
US CEO 179 1040 1 24 5
US Company 375 2477 1 36 6
Restaurant 152 1195 1 37 7
</table>
<tableCaption confidence="0.995738">
Table 3: The number of documents (D), total
</tableCaption>
<bodyText confidence="0.8975645">
number of sentences (S) and minimum, maximum
and average numbers of sentences per document
(Sd) of the data set.
new label E.
</bodyText>
<listItem confidence="0.935128130434782">
2. Generate labeled parse trees: We parse each
sentence using the Stanford Parser1. After parsing,
for each sentence we obtain a dependency parse
tree where each node is a single word and each
edge is labeled with a dependency relation. Each
word is also labeled with one of {E, S, B, D,
Al. We replace words labeled with E by a place-
holder ENT, and replace words labeled with D by
a question mark to indicate that these correspond
to template slots. For the other words, we attach
their labels to the tree nodes. Figure 3 shows an
example labeled dependency parse tree.
3. Mine frequent subtree patterns: For the set
of parse trees in each cluster, we use FREQT2, a
software that implements the frequent subtree pat-
tern mining algorithm proposed in (Zaki, 2002), to
find all subtrees with a minimum support of K.
4. Prune patterns: We remove subtree patterns
found by FREQT that do not contain ENT or any
aspect word. We also remove small patterns that
are contained in some other larger pattern in the
same cluster.
5. Covert subtree patterns to sentence patterns:
</listItem>
<bodyText confidence="0.9459445">
The remaining patterns are still represented as sub-
trees. To covert them back to human-readable sen-
tence patterns, we map each pattern back to one of
the sentences that contain the pattern to order the
tree nodes according to their original order in the
sentence.
In the end, for each summary collection, we ob-
tain A clusters of sentence patterns, where each
cluster presumably corresponds to a single aspect
or subtopic.
</bodyText>
<footnote confidence="0.99503175">
1http://nlp.stanford.edu/software/
lex-parser.shtml
2http://chasen.org/˜taku/software/
freqt/
</footnote>
<sectionHeader confidence="0.998496" genericHeader="evaluation">
5 Evaluation
</sectionHeader>
<bodyText confidence="0.99996975">
Because we study a non-standard task, there is no
existing annotated data set. We therefore created a
small data set and made our own human judgment
for quantitative evaluation purpose.
</bodyText>
<subsectionHeader confidence="0.962505">
5.1 Data
</subsectionHeader>
<bodyText confidence="0.9999822">
We downloaded five collections of Wikipedia ar-
ticles from different entity categories. We took
only the introduction sections of each article (be-
fore the tables of contents) as entity summaries.
Some statistics of the data set are given in Table 3.
</bodyText>
<subsectionHeader confidence="0.999164">
5.2 Quantitative Evaluation
</subsectionHeader>
<bodyText confidence="0.999971">
To quantitatively evaluate the summary templates,
we want to check (1) whether our sentence pat-
terns are meaningful and can represent the corre-
sponding entity categories well, and (2) whether
semantically related sentence patterns are grouped
into the same aspect. It is hard to evaluate both
together. We therefore separate these two criteria.
</bodyText>
<subsectionHeader confidence="0.993381">
5.2.1 Quality of sentence patterns
</subsectionHeader>
<bodyText confidence="0.999954117647059">
To judge the quality of sentence patterns without
looking at aspect clusters, ideally we want to com-
pute the precision and recall of our patterns, that
is, the percentage of our sentence patterns that are
meaningful, and the percentage of true meaningful
sentence patterns of each category that our method
can capture. The former is relatively easy to obtain
because we can ask humans to judge the quality of
our patterns. The latter is much harder to com-
pute because we need human judges to find the set
of true sentence patterns for each entity category,
which can be very subjective.
We adopt the following pooling strategy bor-
rowed from information retrieval. Assume we
want to compare a number of methods that each
can generate a set of sentence patterns from a sum-
mary collection. We take the union of these sets
</bodyText>
<page confidence="0.998155">
645
</page>
<bodyText confidence="0.999579035714286">
of patterns generated by the different methods and
order them randomly. We then ask a human judge
to decide whether each sentence pattern is mean-
ingful for the given category. We can then treat
the set of meaningful sentence patterns found by
the human judge this way as the ground truth, and
precision and recall of each method can be com-
puted. If our goal is only to compare the different
methods, this pooling strategy should suffice.
We compare our method with the following two
baseline methods.
Baseline 1: In this baseline, we use the same
subtree pattern mining algorithm to find sentence
patterns from each summary collection. We also
locate the subject entities and replace them with
ENT. However, we do not have aspect words or
document words in this case. Therefore we do not
prune any pattern except to merge small patterns
with the large ones that contain them. The pat-
terns generated by this method do not have tem-
plate slots.
Baseline 2: In the second baseline, we apply a
verb-based pruning on the patterns generated by
the first baseline, similar to (Filatova et al., 2006).
We first find the top-20 verbs using the scoring
function below that is taken from (Filatova et al.,
2006), and then prune patterns that do not contain
any of the top-20 verbs.
</bodyText>
<equation confidence="0.9976135">
N(vi) M(vi)
s(vi) =
</equation>
<bodyText confidence="0.999947714285714">
where N(vi) is the frequency of verb vi in the
collection, V is the set of all verbs, D is the total
number of documents in the collection, and M(vi)
is the number of documents in the collection that
contains vi.
In Table 4, we show the precision, recall and f1
of the sentence patterns generated by our method
and the two baseline methods for the five cate-
gories. For our method, we set the support of
the subtree patterns K to 2, that is, each pattern
has occurred in at least two sentences in the cor-
responding aspect cluster. For the two baseline
methods, because sentences are not clustered, we
use a larger support K of 3; otherwise, we find
that there can be too many patterns. We can see
that overall our method gives better f1 measures
than the two baseline methods for most categories.
Our method achieves a good balance between pre-
cision and recall. For BL-1, the precision is high
but recall is low. Intuitively BL-1 should have a
higher recall than our method because our method
</bodyText>
<table confidence="0.998598166666667">
Category B Purity
US Actress 4 0.626
Physicist 6 0.714
US CEO 4 0.674
US Company 4 0.614
Restaurant 3 0.587
</table>
<tableCaption confidence="0.981807">
Table 5: The true numbers of aspects as judged
</tableCaption>
<bodyText confidence="0.963606043478261">
by the human annotator (B), and the purity of the
clusters.
does more pattern pruning than BL-1 using aspect
words. Here it is not the case mainly because we
used a higher frequency threshold (K = 3) to se-
lect frequent patterns in BL-1, giving overall fewer
patterns than in our method. For BL-2, the preci-
sion is higher than BL-1 but recall is lower. It is
expected because the patterns of BL-2 is a subset
of that of BL-1.
There are some advantages of our method that
are not reflected in Table 4. First, many of our pat-
terns contain template slots, which make the pat-
tern more meaningful. In contrast the baseline pat-
terns do not contain template slots. Because the
human judge did not give preference over patterns
with slots, both “ENT won the award” and “ENT
won the ? award” were judged to be meaningful
without any distinction, although the former one
generated by our method is more meaningful. Sec-
ond, compared with BL-2, our method can obtain
patterns that do not contain a non-auxiliary verb,
such as “ENT was ? director.”
</bodyText>
<subsectionHeader confidence="0.974253">
5.2.2 Quality of aspect clusters
</subsectionHeader>
<bodyText confidence="0.999994363636364">
We also want to judge the quality of the aspect
clusters. To do so, we ask the human judge to
group the ground truth sentence patterns of each
category based on semantic relatedness. We then
compute the purity of the automatically generated
clusters against the human judged clusters using
purity. The results are shown in Table 5. In our
experiments, we set the number of clusters A used
in the entity-aspect model to be 10. We can see
from Table 5 that our generated aspect clusters can
achieve reasonably good performance.
</bodyText>
<subsectionHeader confidence="0.993966">
5.3 Qualitative evaluation
</subsectionHeader>
<bodyText confidence="0.92905825">
We also conducted qualitative comparison be-
tween our entity-aspect model and standard LDA
model as well as a K-means sentence clustering
method. In Table 6, we show the top 5 fre-
quent words of three sample aspects as found by
our method, standard LDA, and K-means. Note
that although we try to align the aspects, there is
&amp;j EV N(vj) �D ,
</bodyText>
<page confidence="0.930581">
646
</page>
<table confidence="0.998746363636363">
Method Category
US Actress Physicist US CEO US Company Restaurant
BL-1 precision 0.714 0.695 0.778 0.622 0.706
recall 0.545 0.300 0.367 0.425 0.361
f1 0.618 0.419 0.499 0.505 0.478
BL-2 precision 0.845 0.767 0.829 0.809 1.000
recall 0.260 0.096 0.127 0.167 0.188
f1 0.397 0.17 0.220 0.276 0.316
Ours precision 0.544 0.607 0.586 0.450 0.560
recall 0.710 0.785 0.712 0.618 0.701
f1 0.616 0.684 0.643 0.520 0.624
</table>
<tableCaption confidence="0.993102">
Table 4: Quality of sentence patterns in terms of precision, recall and f1.
</tableCaption>
<table confidence="0.999816823529412">
Method Sample Aspects
1 2 3
Our university prize academy
entity- received nobel sciences
aspect ph.d. physics member
model college awarded national
degree medal society
Standard physics nobel physics
LDA american prize institute
professor physicist research
received awarded member
university john sciences
K-means physics physicist physics
university american academy
institute physics sciences
work university university
research nobel new
</table>
<tableCaption confidence="0.9539125">
Table 6: Comparison of the top 5 words of three
sample aspects using different methods.
</tableCaption>
<bodyText confidence="0.9998791">
no correspondence between clusters numbered the
same but generated by different methods.
We can see that our method gives very mean-
ingful aspect clusters. Standard LDA also gives
meaningful words, but background words such
as “physics” and “physicist” are mixed with as-
pect words. Entity-specific words such as “john”
also appear mixed with aspect words. K-means
clusters are much less meaningful, with too many
background words mixed with aspect words.
</bodyText>
<sectionHeader confidence="0.999988" genericHeader="related work">
6 Related Work
</sectionHeader>
<bodyText confidence="0.999974632653061">
The most related existing work is on domain tem-
plate generation by Filatova et al. (2006). There
are several differences between our work and
theirs. First, their template patterns must contain a
non-auxiliary verb whereas ours do not have this
restriction. Second, their verb-centered patterns
are independent of each other, whereas we group
semantically related patterns into aspects, giving
more meaningful templates. Third, in their work,
named entities, numbers and general nouns are
treated as template slots. In our method, we ap-
ply the entity-aspect model to automatically iden-
tify words that are document-specific, and treat
these words as template slots, which can be poten-
tially more robust as we do not rely on the quality
of named entity recognition. Last but not least,
their documents are event-centered while ours are
entity-centered. Therefore we can use heuristics to
anchor our patterns on the subject entities.
Sauper and Barzilay (2009) proposed a frame-
work to learn to automatically generate Wikipedia
articles. There is a fundamental difference be-
tween their task and ours. The articles they gen-
erate are long, comprehensive documents consist-
ing of several sections on different subtopics of
the subject entity, and they focus on learning the
topical structures from complete Wikipedia arti-
cles. We focus on learning sentence patterns of the
short, concise introduction sections of Wikipedia
articles.
Our entity-aspect model is related to a num-
ber of previous extensions of LDA models.
Chemudugunta et al. (2007) proposed to intro-
duce a background topic and document-specific
topics. Our background and document language
models are similar to theirs. However, they still
treat documents as bags of words rather than sets
of sentences as in our model. Titov and McDon-
ald (2008) exploited the idea that a short paragraph
within a document is likely to be about the same
aspect. Our one-aspect-per-sentence assumption
is a stricter than theirs, but it is required in our
model for the purpose of mining sentence patterns.
The way we separate words into stop words, back-
ground words, document words and aspect words
bears similarity to that used in (Daum´e III and
Marcu, 2006; Haghighi and Vanderwende, 2009),
but their task is multi-document summarization
while ours is to induce summary templates.
</bodyText>
<page confidence="0.997787">
647
</page>
<sectionHeader confidence="0.997071" genericHeader="conclusions">
7 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999985769230769">
In this paper, we studied the task of automati-
cally generating templates for entity summaries.
We proposed an entity-aspect model that can auto-
matically cluster sentences and words into aspects.
The model also labels words in sentences as either
a stop word, a background word, a document word
or an aspect word. We then applied frequent sub-
tree pattern mining to generate sentence patterns
that can represent the aspects. We took advan-
tage of the labels generated by the entity-aspect
model to prune patterns and to locate template
slots. We conducted both quantitative and qualita-
tive evaluation using five collections of Wikipedia
entity summaries. We found that our method gave
overall better template patterns than two baseline
methods, and the aspect clusters generated by our
method are reasonably good.
There are a number of directions we plan to pur-
sue in the future in order to improve our method.
First, we can possibly apply linguistic knowledge
to improve the quality of sentence patterns. Cur-
rently the method may generate similar sentence
patterns that differ only slightly, e.g. change of a
preposition. Also, the sentence patterns may not
form complete, meaningful sentences. For exam-
ple, a sentence pattern may contain an adjective
but not the noun it modifies. We plan to study
how to use linguistic knowledge to guide the con-
struction of sentence patterns and make them more
meaningful. Second, we have not quantitatively
evaluated the quality of the template slots, because
our judgment is only at the whole sentence pattern
level. We plan to get more human judges and more
rigorously judge the relevance and usefulness of
both the sentence patterns and the template slots.
It is also possible to introduce certain rules or con-
straints to selectively form template slots rather
than treating all words labeled with D as template
slots.
</bodyText>
<sectionHeader confidence="0.998964" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99973925">
This work was done during Peng Li’s visit to the
Singapore Management University. This work
was partially supported by the National High-tech
Research and Development Project of China (863)
under the grant number 2009AA04Z106 and the
National Science Foundation of China (NSFC) un-
der the grant number 60773088. We thank the
anonymous reviewers for their helpful comments.
</bodyText>
<sectionHeader confidence="0.998473" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9997055">
David Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet allocation. Journal of Ma-
chine Learning Research, 3:993–1022.
Chaitanya Chemudugunta, Padhraic Smyth, and Mark
Steyvers. 2007. Modeling general and specific as-
pects of documents with a probabilistic topic model.
In Advances in Neural Information Processing Sys-
tems 19, pages 241–248.
Hal Daum´e III and Daniel Marcu. 2006. Bayesian
query-focused summarization. In Proceedings of
the 21st International Conference on Computational
Linguistics and 44th Annual Meeting of the Associa-
tion for Computational Linguistics, pages 305–312.
Elena Filatova, Vasileios Hatzivassiloglou, and Kath-
leen McKeown. 2006. Automatic creation of do-
main templates. In Proceedings of 21st Interna-
tional Conference on Computational Linguistics and
the 44th Annual Meeting of the Association for Com-
putational Linguistics, pages 207–214.
Thomas L. Griffiths and Mark Steyvers. 2004. Find-
ing scientific topics. Proceedings of the National
Academy of Sciences of the United States of Amer-
ica, 101(Suppl. 1):5228–5235.
Aria Haghighi and Lucy Vanderwende. 2009. Explor-
ing content models for multi-document summariza-
tion. In Proceedings of the Human Language Tech-
nology Conference of the North American Chapter
of the Association for Computational Linguistics,
pages 362–370.
Christina Sauper and Regina Barzilay. 2009. Automat-
ically generating Wikipedia articles: A structure-
aware approach. In Proceedings of the Joint Confer-
ence of the 47th Annual Meeting of the ACL and the
4th International Joint Conference on Natural Lan-
guage Processing of the AFNLP, pages 208–216.
Satoshi Sekine. 2006. On-demand information extrac-
tion. In Proceedings of 21st International Confer-
ence on Computational Linguistics and the 44th An-
nual Meeting of the Association for Computational
Linguistics, pages 731–738.
Yusuke Shinyama and Satoshi Sekine. 2006. Preemp-
tive information extraction using unrestricted rela-
tion discovery. In Proceedings of the Human Lan-
guage Technology Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics, pages 304–311.
Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman.
2003. An improved extraction pattern representa-
tion model for automatic IE pattern acquisition. In
Proceedings of the 41st Annual Meeting of the Asso-
ciation for Computational Linguistics, pages 224–
231.
Ivan Titov and Ryan McDonald. 2008. Modeling
online reviews with multi-grain topic models. In
</reference>
<page confidence="0.979504">
648
</page>
<reference confidence="0.996004277777778">
Proceeding of the 17th International Conference on
World Wide Web, pages 111–120.
Fei Wu and Daniel S. Weld. 2007. Autonomously se-
mantifying Wikipedia. In Proceedings of the 16th
ACM Conference on Information and Knowledge
Management, pages 41–50.
Yulan Yan, Naoaki Okazaki, Yutaka Matsuo, Zhenglu
Yang, and Mitsuru Ishizuka. 2009. Unsupervised
relation extraction by mining Wikipedia texts using
information from the Web. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on
Natural Language Processing of the AFNLP, pages
1021–1029.
Mohammed J. Zaki. 2002. Efficiently mining fre-
quent trees in a forest. In Proceedings of the 8th
ACM SIGKDD International Conference on Knowl-
edge Discovery and Data Mining, pages 71–80.
</reference>
<page confidence="0.999006">
649
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.599876">
<title confidence="0.9838995">Generating Templates of Entity Summaries with an Entity-Aspect Model and Pattern Mining</title>
<affiliation confidence="0.9994425">apos;Department of Computer Science and Engineering, Shanghai Jiao Tong University &apos;School of Information Systems, Singapore Management University</affiliation>
<email confidence="0.966406">jingjiang@smu.edu.sg</email>
<abstract confidence="0.997325260869565">In this paper, we propose a novel approach to automatic generation of summary templates from given collections of summary articles. This kind of summary templates can be useful in various applications. We first develop an entity-aspect LDA model to simultaneously cluster both sentences and words into aspects. We then apply frequent subtree pattern mining on the dependency parse trees of the clustered and labeled sentences to discover sentence patterns that well represent the aspects. Key features of our method include automatic grouping of semantically related sentence patterns and automatic identification of template slots that need to be filled in. We apply our method on five Wikipedia entity categories and compare our method with two baseline methods. Both quantitative evaluation based on human judgment and qualitative comparison demonstrate the effectiveness and advantages of our method.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>David Blei</author>
<author>Andrew Y Ng</author>
<author>Michael I Jordan</author>
</authors>
<title>Latent dirichlet allocation.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<pages>3--993</pages>
<contexts>
<context position="9058" citStr="Blei et al., 2003" startWordPosition="1462" endWordPosition="1465"> has a placeholder for the entity to be summarized and possibly one or more template slots to be filled in. Table 1 shows some sentence patterns our method has generated for the “physicist” category. 641 2.1 Overview of Our Method Our automatic template generation method consists of two steps: Aspect Identification: In this step, our goal is to automatically identify the different aspects or subtopics of the given summary collection. We simultaneously cluster sentences and words into aspects, using an entity-aspect model extended from the standard LDA model that is widely used in text mining (Blei et al., 2003). The output of this step are sentences clustered into aspects, with each word labeled as a stop word, a background word, a document word or an aspect word. Sentence Pattern Generation: In this step, we generate human-readable sentence patterns to represent each aspect. We use frequent subtree pattern mining to find the most representative sentence structures for each aspect. The fixed structure of a sentence pattern consists of aspect words, background words and stop words, while document words become template slots whose values can vary from summary to summary. 3 Aspect Identification At the</context>
</contexts>
<marker>Blei, Ng, Jordan, 2003</marker>
<rawString>David Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent dirichlet allocation. Journal of Machine Learning Research, 3:993–1022.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chaitanya Chemudugunta</author>
<author>Padhraic Smyth</author>
<author>Mark Steyvers</author>
</authors>
<title>Modeling general and specific aspects of documents with a probabilistic topic model.</title>
<date>2007</date>
<booktitle>In Advances in Neural Information Processing Systems 19,</booktitle>
<pages>241--248</pages>
<contexts>
<context position="11116" citStr="Chemudugunta et al. (2007)" startWordPosition="1799" endWordPosition="1802">ds that are document or entity specific. For example, in Table 2 we show two sentences related to the “affiliation” aspect from the “physicist” summary collection. Stop words such as “is” and “the” are labeled with “S.” The word “physics” can be regarded as a background word for this collection. “Professor” and “university” are clearly related to the “affiliation” aspect. Finally words such as “Modena” and “Chicago” are specifically associated with the subject entities being discussed, that is, they are specific to the summary documents. To capture background words and documentspecific words, Chemudugunta et al. (2007) proposed to introduce a background topic and document-specific topics. Here we borrow their idea and also include a background topic as well as document-specific topics. To discover aspects that are local to one or a few adjacent sentences but may occur in many documents, Titov and McDonald (2008) proposed a multi-grain topic model, which relies on word co-occurrences within short paragraphs rather than documents in order to discover aspects. Inspired by their model, we rely on word co-occurrences within single sentences to identify aspects. 3.1 Entity-Aspect Model We now formally present our</context>
<context position="32487" citStr="Chemudugunta et al. (2007)" startWordPosition="5563" endWordPosition="5566">he subject entities. Sauper and Barzilay (2009) proposed a framework to learn to automatically generate Wikipedia articles. There is a fundamental difference between their task and ours. The articles they generate are long, comprehensive documents consisting of several sections on different subtopics of the subject entity, and they focus on learning the topical structures from complete Wikipedia articles. We focus on learning sentence patterns of the short, concise introduction sections of Wikipedia articles. Our entity-aspect model is related to a number of previous extensions of LDA models. Chemudugunta et al. (2007) proposed to introduce a background topic and document-specific topics. Our background and document language models are similar to theirs. However, they still treat documents as bags of words rather than sets of sentences as in our model. Titov and McDonald (2008) exploited the idea that a short paragraph within a document is likely to be about the same aspect. Our one-aspect-per-sentence assumption is a stricter than theirs, but it is required in our model for the purpose of mining sentence patterns. The way we separate words into stop words, background words, document words and aspect words </context>
</contexts>
<marker>Chemudugunta, Smyth, Steyvers, 2007</marker>
<rawString>Chaitanya Chemudugunta, Padhraic Smyth, and Mark Steyvers. 2007. Modeling general and specific aspects of documents with a probabilistic topic model. In Advances in Neural Information Processing Systems 19, pages 241–248.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hal Daum´e</author>
<author>Daniel Marcu</author>
</authors>
<title>Bayesian query-focused summarization.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>305--312</pages>
<marker>Daum´e, Marcu, 2006</marker>
<rawString>Hal Daum´e III and Daniel Marcu. 2006. Bayesian query-focused summarization. In Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics, pages 305–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Elena Filatova</author>
<author>Vasileios Hatzivassiloglou</author>
<author>Kathleen McKeown</author>
</authors>
<title>Automatic creation of domain templates.</title>
<date>2006</date>
<booktitle>In Proceedings of 21st International Conference on Computational Linguistics and the 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>207--214</pages>
<contexts>
<context position="3105" citStr="Filatova et al. (2006)" startWordPosition="467" endWordPosition="471">, automatic template generation provides a solution to induction of infobox structures, which are still highly incomplete in Wikipedia (Wu and Weld, 2007). A template can also serve as a starting point for human editors to create new summary articles. Furthermore, with summary templates, we can potentially apply information retrieval and extraction techniques to construct summaries for new entities automatically on the fly, improving the user experience for search engine and question answering systems. Despite its usefulness, the problem has not been well studied. The most relevant work is by Filatova et al. (2006) on automatic creation of domain templates, where the defintion of a domain is similar to our notion of an entity category. Filatova et al. (2006) first identify the important verbs for a domain using corpus statistics, and then find frequent parse tree patterns from sentences containing these verbs to construct a domain template. There are two major limitations of their approach. First, the focus on verbs restricts the template patterns that can be found. Second, redundant or related patterns using different verbs to express the same or similar facts cannot be grouped together. For example, “</context>
<context position="19464" citStr="Filatova et al., 2006" startWordPosition="3351" endWordPosition="3354">form heuristic term weighting, but the method becomes less robust. Second, after sentence clustering, we may still want to identify the the aspect words in each sentence, which are useful in the next pattern mining step. Directly taking the most frequent words from each sentence cluster as aspect words may not work well even after stop word removal, because there can be background words commonly used in all aspects. 4 Sentence Pattern Generation At the pattern generation step, we want to identify human-readable sentence patterns that best represent each cluster. Following the basic idea from (Filatova et al., 2006), we start with the parse trees of sentences in each cluster, and apply a frequent subtree pattern mining algorithm to find sentence structures that have occurred at least K times in the cluster. Here we use dependency parse trees. However, different from (Filatova et al., 2006), the word labels (S, B, D and A) assigned by the entity-aspect model give us some advantages. Intuitively, a representative sentence pattern for an aspect should contain at least one aspect word. On the other hand, document words are entity-specific and therefore should not appear in the generic template patterns; inst</context>
<context position="26156" citStr="Filatova et al., 2006" startWordPosition="4503" endWordPosition="4506">following two baseline methods. Baseline 1: In this baseline, we use the same subtree pattern mining algorithm to find sentence patterns from each summary collection. We also locate the subject entities and replace them with ENT. However, we do not have aspect words or document words in this case. Therefore we do not prune any pattern except to merge small patterns with the large ones that contain them. The patterns generated by this method do not have template slots. Baseline 2: In the second baseline, we apply a verb-based pruning on the patterns generated by the first baseline, similar to (Filatova et al., 2006). We first find the top-20 verbs using the scoring function below that is taken from (Filatova et al., 2006), and then prune patterns that do not contain any of the top-20 verbs. N(vi) M(vi) s(vi) = where N(vi) is the frequency of verb vi in the collection, V is the set of all verbs, D is the total number of documents in the collection, and M(vi) is the number of documents in the collection that contains vi. In Table 4, we show the precision, recall and f1 of the sentence patterns generated by our method and the two baseline methods for the five categories. For our method, we set the support o</context>
<context position="31040" citStr="Filatova et al. (2006)" startWordPosition="5340" endWordPosition="5343">he top 5 words of three sample aspects using different methods. no correspondence between clusters numbered the same but generated by different methods. We can see that our method gives very meaningful aspect clusters. Standard LDA also gives meaningful words, but background words such as “physics” and “physicist” are mixed with aspect words. Entity-specific words such as “john” also appear mixed with aspect words. K-means clusters are much less meaningful, with too many background words mixed with aspect words. 6 Related Work The most related existing work is on domain template generation by Filatova et al. (2006). There are several differences between our work and theirs. First, their template patterns must contain a non-auxiliary verb whereas ours do not have this restriction. Second, their verb-centered patterns are independent of each other, whereas we group semantically related patterns into aspects, giving more meaningful templates. Third, in their work, named entities, numbers and general nouns are treated as template slots. In our method, we apply the entity-aspect model to automatically identify words that are document-specific, and treat these words as template slots, which can be potentially</context>
</contexts>
<marker>Filatova, Hatzivassiloglou, McKeown, 2006</marker>
<rawString>Elena Filatova, Vasileios Hatzivassiloglou, and Kathleen McKeown. 2006. Automatic creation of domain templates. In Proceedings of 21st International Conference on Computational Linguistics and the 44th Annual Meeting of the Association for Computational Linguistics, pages 207–214.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas L Griffiths</author>
<author>Mark Steyvers</author>
</authors>
<title>Finding scientific topics.</title>
<date>2004</date>
<booktitle>Proceedings of the National Academy of Sciences of the United States of America,</booktitle>
<volume>101</volume>
<pages>1--5228</pages>
<contexts>
<context position="14925" citStr="Griffiths and Steyvers, 2004" startWordPosition="2487" endWordPosition="2490">the set of all wd,s,n, our goal is to find the most likely assignment of zd,s and yd,s,n, that is, the assignment that maximizes p(z, y|w; α, β, γ), where z, y and w represent the set of all z, y and w variables, respectively. With the assignment, sentences are naturally clustered into aspects, and words are labeled as either a background word, a document word, or an aspect word. We approximate p(y, z|w; α, β, γ) by B d D a A B p(y, z|w; φ, {ψ} �d=1i { } �r a=1i B, ), where , { ψd}Dd=1, { φa}Aa=1, θ and π are estimated using Gibbs sampling, which is commonly used for inference for LDA models (Griffiths and Steyvers, 2004). Due to space limit, we give the formulas for the Gibbs sampler below without derivation. First, given sentence s in document d, we sample a value for zd,s given the values of all other z and y variables using the following formula: p(zd,s = a|z¬{d,s}, y, w) ��1v E(v) (/Ca + i + /� lv=111i=0 l (v) N) �E(�) . i=0 (Ca (·) + i + Vβ) In the formula above, z¬{d,s} is the current aspect assignment of all sentences excluding the current sentence. CA(a) is the number of sentences assigned to aspect a, and CA(·) is the total number of sentences. V is the vocabulary size. Ca(v) is the number of times w</context>
</contexts>
<marker>Griffiths, Steyvers, 2004</marker>
<rawString>Thomas L. Griffiths and Mark Steyvers. 2004. Finding scientific topics. Proceedings of the National Academy of Sciences of the United States of America, 101(Suppl. 1):5228–5235.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aria Haghighi</author>
<author>Lucy Vanderwende</author>
</authors>
<title>Exploring content models for multi-document summarization.</title>
<date>2009</date>
<booktitle>In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>362--370</pages>
<contexts>
<context position="33180" citStr="Haghighi and Vanderwende, 2009" startWordPosition="5677" endWordPosition="5680">c topics. Our background and document language models are similar to theirs. However, they still treat documents as bags of words rather than sets of sentences as in our model. Titov and McDonald (2008) exploited the idea that a short paragraph within a document is likely to be about the same aspect. Our one-aspect-per-sentence assumption is a stricter than theirs, but it is required in our model for the purpose of mining sentence patterns. The way we separate words into stop words, background words, document words and aspect words bears similarity to that used in (Daum´e III and Marcu, 2006; Haghighi and Vanderwende, 2009), but their task is multi-document summarization while ours is to induce summary templates. 647 7 Conclusions and Future Work In this paper, we studied the task of automatically generating templates for entity summaries. We proposed an entity-aspect model that can automatically cluster sentences and words into aspects. The model also labels words in sentences as either a stop word, a background word, a document word or an aspect word. We then applied frequent subtree pattern mining to generate sentence patterns that can represent the aspects. We took advantage of the labels generated by the en</context>
</contexts>
<marker>Haghighi, Vanderwende, 2009</marker>
<rawString>Aria Haghighi and Lucy Vanderwende. 2009. Exploring content models for multi-document summarization. In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics, pages 362–370.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christina Sauper</author>
<author>Regina Barzilay</author>
</authors>
<title>Automatically generating Wikipedia articles: A structureaware approach.</title>
<date>2009</date>
<booktitle>In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP,</booktitle>
<pages>208--216</pages>
<contexts>
<context position="4353" citStr="Sauper and Barzilay, 2009" startWordPosition="667" endWordPosition="670">ived X prize” are considered two different patterns by this approach. We propose a method that can overcome these two limitations. Automatic template generation is also related to a number of other problems that have been studied before, in640 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics cluding unsupervised IE pattern discovery (Sudo et al., 2003; Shinyama and Sekine, 2006; Sekine, 2006; Yan et al., 2009) and automatic generation of Wikipedia articles (Sauper and Barzilay, 2009). We discuss the differences of our work from existing related work in Section 6. In this paper we propose a novel approach to the task of automatically generating entity summary templates. We first develop an entity-aspect model that extends standard LDA to identify clusters of words that can represent different aspects of facts that are salient in a given summary collection (Section 3). For example, the words “received,” “award,” “won” and “Nobel” may be clustered together from biographies of physicists to represent one aspect, even though they may appear in different sentences from differen</context>
<context position="31908" citStr="Sauper and Barzilay (2009)" startWordPosition="5473" endWordPosition="5476">as we group semantically related patterns into aspects, giving more meaningful templates. Third, in their work, named entities, numbers and general nouns are treated as template slots. In our method, we apply the entity-aspect model to automatically identify words that are document-specific, and treat these words as template slots, which can be potentially more robust as we do not rely on the quality of named entity recognition. Last but not least, their documents are event-centered while ours are entity-centered. Therefore we can use heuristics to anchor our patterns on the subject entities. Sauper and Barzilay (2009) proposed a framework to learn to automatically generate Wikipedia articles. There is a fundamental difference between their task and ours. The articles they generate are long, comprehensive documents consisting of several sections on different subtopics of the subject entity, and they focus on learning the topical structures from complete Wikipedia articles. We focus on learning sentence patterns of the short, concise introduction sections of Wikipedia articles. Our entity-aspect model is related to a number of previous extensions of LDA models. Chemudugunta et al. (2007) proposed to introduc</context>
</contexts>
<marker>Sauper, Barzilay, 2009</marker>
<rawString>Christina Sauper and Regina Barzilay. 2009. Automatically generating Wikipedia articles: A structureaware approach. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 208–216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Satoshi Sekine</author>
</authors>
<title>On-demand information extraction.</title>
<date>2006</date>
<booktitle>In Proceedings of 21st International Conference on Computational Linguistics and the 44th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>731--738</pages>
<contexts>
<context position="4245" citStr="Sekine, 2006" startWordPosition="653" endWordPosition="654">ess the same or similar facts cannot be grouped together. For example, “won X award” and “received X prize” are considered two different patterns by this approach. We propose a method that can overcome these two limitations. Automatic template generation is also related to a number of other problems that have been studied before, in640 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics cluding unsupervised IE pattern discovery (Sudo et al., 2003; Shinyama and Sekine, 2006; Sekine, 2006; Yan et al., 2009) and automatic generation of Wikipedia articles (Sauper and Barzilay, 2009). We discuss the differences of our work from existing related work in Section 6. In this paper we propose a novel approach to the task of automatically generating entity summary templates. We first develop an entity-aspect model that extends standard LDA to identify clusters of words that can represent different aspects of facts that are salient in a given summary collection (Section 3). For example, the words “received,” “award,” “won” and “Nobel” may be clustered together from biograp</context>
</contexts>
<marker>Sekine, 2006</marker>
<rawString>Satoshi Sekine. 2006. On-demand information extraction. In Proceedings of 21st International Conference on Computational Linguistics and the 44th Annual Meeting of the Association for Computational Linguistics, pages 731–738.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yusuke Shinyama</author>
<author>Satoshi Sekine</author>
</authors>
<title>Preemptive information extraction using unrestricted relation discovery.</title>
<date>2006</date>
<booktitle>In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>304--311</pages>
<contexts>
<context position="4245" citStr="Shinyama and Sekine, 2006" startWordPosition="651" endWordPosition="654">verbs to express the same or similar facts cannot be grouped together. For example, “won X award” and “received X prize” are considered two different patterns by this approach. We propose a method that can overcome these two limitations. Automatic template generation is also related to a number of other problems that have been studied before, in640 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics cluding unsupervised IE pattern discovery (Sudo et al., 2003; Shinyama and Sekine, 2006; Sekine, 2006; Yan et al., 2009) and automatic generation of Wikipedia articles (Sauper and Barzilay, 2009). We discuss the differences of our work from existing related work in Section 6. In this paper we propose a novel approach to the task of automatically generating entity summary templates. We first develop an entity-aspect model that extends standard LDA to identify clusters of words that can represent different aspects of facts that are salient in a given summary collection (Section 3). For example, the words “received,” “award,” “won” and “Nobel” may be clustered together from biograp</context>
</contexts>
<marker>Shinyama, Sekine, 2006</marker>
<rawString>Yusuke Shinyama and Satoshi Sekine. 2006. Preemptive information extraction using unrestricted relation discovery. In Proceedings of the Human Language Technology Conference of the North American Chapter of the Association for Computational Linguistics, pages 304–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kiyoshi Sudo</author>
<author>Satoshi Sekine</author>
<author>Ralph Grishman</author>
</authors>
<title>An improved extraction pattern representation model for automatic IE pattern acquisition.</title>
<date>2003</date>
<booktitle>In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>224--231</pages>
<contexts>
<context position="4218" citStr="Sudo et al., 2003" startWordPosition="647" endWordPosition="650">ns using different verbs to express the same or similar facts cannot be grouped together. For example, “won X award” and “received X prize” are considered two different patterns by this approach. We propose a method that can overcome these two limitations. Automatic template generation is also related to a number of other problems that have been studied before, in640 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics cluding unsupervised IE pattern discovery (Sudo et al., 2003; Shinyama and Sekine, 2006; Sekine, 2006; Yan et al., 2009) and automatic generation of Wikipedia articles (Sauper and Barzilay, 2009). We discuss the differences of our work from existing related work in Section 6. In this paper we propose a novel approach to the task of automatically generating entity summary templates. We first develop an entity-aspect model that extends standard LDA to identify clusters of words that can represent different aspects of facts that are salient in a given summary collection (Section 3). For example, the words “received,” “award,” “won” and “Nobel” may be clus</context>
</contexts>
<marker>Sudo, Sekine, Grishman, 2003</marker>
<rawString>Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman. 2003. An improved extraction pattern representation model for automatic IE pattern acquisition. In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics, pages 224– 231.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Titov</author>
<author>Ryan McDonald</author>
</authors>
<title>Modeling online reviews with multi-grain topic models.</title>
<date>2008</date>
<booktitle>In Proceeding of the 17th International Conference on World Wide Web,</booktitle>
<pages>111--120</pages>
<contexts>
<context position="11415" citStr="Titov and McDonald (2008)" startWordPosition="1847" endWordPosition="1851">ofessor” and “university” are clearly related to the “affiliation” aspect. Finally words such as “Modena” and “Chicago” are specifically associated with the subject entities being discussed, that is, they are specific to the summary documents. To capture background words and documentspecific words, Chemudugunta et al. (2007) proposed to introduce a background topic and document-specific topics. Here we borrow their idea and also include a background topic as well as document-specific topics. To discover aspects that are local to one or a few adjacent sentences but may occur in many documents, Titov and McDonald (2008) proposed a multi-grain topic model, which relies on word co-occurrences within short paragraphs rather than documents in order to discover aspects. Inspired by their model, we rely on word co-occurrences within single sentences to identify aspects. 3.1 Entity-Aspect Model We now formally present our entity-aspect model. First, we assume that stop words can be identified using a standard stop word list. We then assume that for a given entity category there are three kinds of unigram language models (i.e. multinomial word distributions). There is a background model OB that generates words commo</context>
<context position="32751" citStr="Titov and McDonald (2008)" startWordPosition="5605" endWordPosition="5609">eral sections on different subtopics of the subject entity, and they focus on learning the topical structures from complete Wikipedia articles. We focus on learning sentence patterns of the short, concise introduction sections of Wikipedia articles. Our entity-aspect model is related to a number of previous extensions of LDA models. Chemudugunta et al. (2007) proposed to introduce a background topic and document-specific topics. Our background and document language models are similar to theirs. However, they still treat documents as bags of words rather than sets of sentences as in our model. Titov and McDonald (2008) exploited the idea that a short paragraph within a document is likely to be about the same aspect. Our one-aspect-per-sentence assumption is a stricter than theirs, but it is required in our model for the purpose of mining sentence patterns. The way we separate words into stop words, background words, document words and aspect words bears similarity to that used in (Daum´e III and Marcu, 2006; Haghighi and Vanderwende, 2009), but their task is multi-document summarization while ours is to induce summary templates. 647 7 Conclusions and Future Work In this paper, we studied the task of automat</context>
</contexts>
<marker>Titov, McDonald, 2008</marker>
<rawString>Ivan Titov and Ryan McDonald. 2008. Modeling online reviews with multi-grain topic models. In Proceeding of the 17th International Conference on World Wide Web, pages 111–120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Wu</author>
<author>Daniel S Weld</author>
</authors>
<title>Autonomously semantifying Wikipedia.</title>
<date>2007</date>
<booktitle>In Proceedings of the 16th ACM Conference on Information and Knowledge Management,</booktitle>
<pages>41--50</pages>
<contexts>
<context position="2637" citStr="Wu and Weld, 2007" startWordPosition="393" endWordPosition="396">arter of the company. Our goal is to automatically construct a summary template that outlines the most salient types of facts for an entity category, given a collection of entity summaries from this category. Such kind of summary templates can be very useful in many applications. First of all, they can uncover the underlying structures of summary articles and help better organize the information units, much in the same way as infoboxes do in Wikipedia. In fact, automatic template generation provides a solution to induction of infobox structures, which are still highly incomplete in Wikipedia (Wu and Weld, 2007). A template can also serve as a starting point for human editors to create new summary articles. Furthermore, with summary templates, we can potentially apply information retrieval and extraction techniques to construct summaries for new entities automatically on the fly, improving the user experience for search engine and question answering systems. Despite its usefulness, the problem has not been well studied. The most relevant work is by Filatova et al. (2006) on automatic creation of domain templates, where the defintion of a domain is similar to our notion of an entity category. Filatova</context>
</contexts>
<marker>Wu, Weld, 2007</marker>
<rawString>Fei Wu and Daniel S. Weld. 2007. Autonomously semantifying Wikipedia. In Proceedings of the 16th ACM Conference on Information and Knowledge Management, pages 41–50.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yulan Yan</author>
<author>Naoaki Okazaki</author>
<author>Yutaka Matsuo</author>
<author>Zhenglu Yang</author>
<author>Mitsuru Ishizuka</author>
</authors>
<title>Unsupervised relation extraction by mining Wikipedia texts using information from the Web.</title>
<date>2009</date>
<booktitle>In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP,</booktitle>
<pages>1021--1029</pages>
<contexts>
<context position="4278" citStr="Yan et al., 2009" startWordPosition="657" endWordPosition="660">s cannot be grouped together. For example, “won X award” and “received X prize” are considered two different patterns by this approach. We propose a method that can overcome these two limitations. Automatic template generation is also related to a number of other problems that have been studied before, in640 Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 640–649, Uppsala, Sweden, 11-16 July 2010. c�2010 Association for Computational Linguistics cluding unsupervised IE pattern discovery (Sudo et al., 2003; Shinyama and Sekine, 2006; Sekine, 2006; Yan et al., 2009) and automatic generation of Wikipedia articles (Sauper and Barzilay, 2009). We discuss the differences of our work from existing related work in Section 6. In this paper we propose a novel approach to the task of automatically generating entity summary templates. We first develop an entity-aspect model that extends standard LDA to identify clusters of words that can represent different aspects of facts that are salient in a given summary collection (Section 3). For example, the words “received,” “award,” “won” and “Nobel” may be clustered together from biographies of physicists to represent o</context>
</contexts>
<marker>Yan, Okazaki, Matsuo, Yang, Ishizuka, 2009</marker>
<rawString>Yulan Yan, Naoaki Okazaki, Yutaka Matsuo, Zhenglu Yang, and Mitsuru Ishizuka. 2009. Unsupervised relation extraction by mining Wikipedia texts using information from the Web. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 1021–1029.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohammed J Zaki</author>
</authors>
<title>Efficiently mining frequent trees in a forest.</title>
<date>2002</date>
<booktitle>In Proceedings of the 8th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,</booktitle>
<pages>71--80</pages>
<contexts>
<context position="22556" citStr="Zaki, 2002" startWordPosition="3909" endWordPosition="3910">where each node is a single word and each edge is labeled with a dependency relation. Each word is also labeled with one of {E, S, B, D, Al. We replace words labeled with E by a placeholder ENT, and replace words labeled with D by a question mark to indicate that these correspond to template slots. For the other words, we attach their labels to the tree nodes. Figure 3 shows an example labeled dependency parse tree. 3. Mine frequent subtree patterns: For the set of parse trees in each cluster, we use FREQT2, a software that implements the frequent subtree pattern mining algorithm proposed in (Zaki, 2002), to find all subtrees with a minimum support of K. 4. Prune patterns: We remove subtree patterns found by FREQT that do not contain ENT or any aspect word. We also remove small patterns that are contained in some other larger pattern in the same cluster. 5. Covert subtree patterns to sentence patterns: The remaining patterns are still represented as subtrees. To covert them back to human-readable sentence patterns, we map each pattern back to one of the sentences that contain the pattern to order the tree nodes according to their original order in the sentence. In the end, for each summary co</context>
</contexts>
<marker>Zaki, 2002</marker>
<rawString>Mohammed J. Zaki. 2002. Efficiently mining frequent trees in a forest. In Proceedings of the 8th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 71–80.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>