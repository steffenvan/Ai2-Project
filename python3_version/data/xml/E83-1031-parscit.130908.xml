<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.730763">
CASE ROLE FILLING AS A SIDE EFFECT OF VISUAL SEARCH
</title>
<author confidence="0.814426">
Heinz Marburger
</author>
<affiliation confidence="0.826631333333333">
Research Unit for Information Science
and Artificial Intelligence
University of Hamburg
</affiliation>
<address confidence="0.915742">
Mittelweg 179
D-2000 Hamburg 13, F.R. Germany
</address>
<email confidence="0.644679">
ABSTRACT
</email>
<bodyText confidence="0.999971214285714">
This paper addresses the problem of generating
comTunicatively adequate extended responses in the
absence of specific knowledge concerning the
intensions of the questioner. We formulate and
justify a heuristic for the selection of optional
deep case slots not contained in the question as
candidates for the additional information con-
tained in an extended response. It is shown that,
in a visually present domain of discourse, case
role filling for the construction of an extended
response can be regarded as a side effect of the
visual search necessary to answer a question con-
taining a locomotion verb. The paper describes the
various representation constructions used in the
German language dialog system HAM-ANS for dealing
with the semantics of locomotion verbs and illus-
trates their use in generating extended responses.
In particular, we outline the structure of the
geometrical scene description, the representation
of events in a logic-oriented semantic representa-
tion language, the case-frame lexicon and the
representation of the referential semantics based
on the Flavor system. The emphasis is on a
detailed presentation of the application of
object-oriented programming methods for coping
with the semantics of locomotion verbs. The pro-
cess of generating an extended response is illus-
trated by an extensively annotated trace.
</bodyText>
<sectionHeader confidence="0.998049" genericHeader="abstract">
1. INTRODUCTION
</sectionHeader>
<bodyText confidence="0.991489111111111">
Frequently a questioner expects more than a
direct, literal response although he must assume
that the answerer is not informed about what par-
ticular information he is seeking. The questioner
imputes to a cooperative dialogue partner the com-
municative competence to reply to a simple yes-no
question like (1) with an extended response (cf.
(127, (1111 like (la) rather than with a simple
Yes.
</bodyText>
<listItem confidence="0.9858035">
(1) Are you going to travel this summer?
(1a) Yes, to Sicily.
</listItem>
<bodyText confidence="0.980933">
In the absence of special information about the
previous course of the dialog or the intentions of
the questioner (the unmarked case) an answer like
(la) seems more appropriate than (lb) or (lc).
(lb) Yes, with an old school friend.
(lc) Yes, by plane.
OF course, there are numerous dialog situations in
which (lb) or (lc) could be generated as a commun-
icatively adequate response on the basis of a par.
tAcular partner model. But it still must ter! asked
why in dialogs of the type &apos;information .upply&apos;
the unmarked response takes the form (1a) And not
(1h) or (lc).
jr this paper we will present the results of a
computational study of this problem for the domain
Research on HAM-ANS is currently being supported
by the German Ministry of Research and Te(hnology
(BMFT) under contract 081715038
</bodyText>
<figure confidence="0.9335705">
Wolfgang Wahlster
FB10 - Angewandte Mathematik
und lnformatik
University of SaarbrUcken
Im Stadtwald
U-6600 SaarbrUcken 11, F.R. Germany
</figure>
<bodyText confidence="0.998143333333333">
&apos;locomotion verbs&apos; in dialogs based on a visually
present world of discourse. This question is par-
ticularly important for the construction of
cooperative dialoo systems, since, in many appli-
cations, no explicit knowledge about the dialog
goals of the questioner is available at the
outset. If a system is nevertheless expected to
&apos;over-answer&apos;, i.e. to volunteer information that
has not specifically been requested, it must com-
mand a set of heuristic criteria for selecting the
additional information that is to be verbalized
(11).
It is noteworthy that the three additional points
of information in (la), (lb), (1c) correspond to
filled deep case slots of the verb used in the
question (GOAL. CO-AGENT and INSTRUMENT, respec-
tively). This suggests that the unfilled optional
case slots in the question are candidates for
additional information. For a question like (2),
in which all the deep case slots of &apos;break&apos; are
filled, only a direct response like (2a) is to be
expected as a positive answer, while in (3), where
only the obligatory deep case slots are filled, an
extended response like (3a) can be expected.
</bodyText>
<listItem confidence="0.9820048">
(2) Did you break the window with your slingshot
yesterday?
(2a) Yes.
(3) Did you break the window?
(3a) Yes, with my slingshot.
</listItem>
<bodyText confidence="0.999267636363636">
Since not every optional deep case of a given verb
unspecified in the question is suitable for an
unmarked extended response (e.g. (1a)-(1c)) we may
define the problem more precisely by asking which
of the deep case slots unspecified in the question
are to be chosen as the unmarked values.
For our domain of investigation &apos;locomotion verbs&apos;
let us consider questions (4) and (5), which refer
to a visually present world of discourse. In each
case perceptual processes are assumed as a prere-
quisite for the answer.
</bodyText>
<listItem confidence="0.982986428571429">
(4) Which vehicle stopped?
(4a) The bus, on Hartungstreet.
(4b) The bus, because the driver stepped on the
brake.
(5) Did the bus turn off?
(5a) Yes, from Hartungstreet onto Schlueterstreet.
(5b) Yes, together with the taxi cab.
</listItem>
<bodyText confidence="0.602673">
The instantiation of the locative slut in answer
</bodyText>
<listItem confidence="0.933976333333333">
(4a) and the source and goal slots in (5a) is
predictable in contrast to the causative slot in
(4b) and the co agent slut in (5b). As examples
(4) and (5) demonstrate, the same optional deep
case slot is not always selected as the unmarked
option. The choice is dependent upon the verb con-
tained in the question. Moreover, (5a) shows that
combinations of deep cases are possible in
unmarked extended responses.
</listItem>
<bodyText confidence="0.995946">
In the area under investigation here, the follow-
ing heuristic can be employed to determine the
</bodyText>
<page confidence="0.996979">
188
</page>
<figureCaption confidence="0.99515">
Fig. 1: Situational context of the dialog
</figureCaption>
<figure confidence="0.9891354">
PDP-10
NL DIALOG SYSTEM
HAM
ANS
IMAGE SEQUENCE
ANALYSIS SYSTEM
NAOS
MORIO
,
Thw
STREET INTERSECTION
USER:
FAMILIAR WITH
SCENE BUT
CANNOT SEE IT
</figure>
<bodyText confidence="0.958521117647059">
selection of the deep case slots for an unmarked
extended response: Select the deep caso slots
which contain the concepts necessary for the per-
ceptual verification of the motion described by
the verb.
In order to verify a stop-event it is necessary to
determine the end point of the motion (cf. (4a))
but not the cause (cf. (4b)). For a turn-off event
a change of direction between source and goal must
be established (cf. (8a)). It is not essential to
determine whether other objects make this change
of direction at the same time (cf. (5b)).
Hence case role filling for the construction of an
extended response can be regarded as a side effect
of the visual search necessary to answer the ques-
tion.
This also appears plausible when seen in the light
of the beliefs that the questioner imputes to the
answerer. The questioner believes that the
answerer will fill in the case slots necessary for
answering the question and that it is therefore
unnecessary to explicitly mention these in the
question. Additionally the questioner believes
that the answerer believes that the questioner
expects an extended reply and for this reason did
not explicitly request the additional information.
A cooperative dialog system fulfills this user
expectation by applying the heuristic formulated
above.
A prerequisite for the application of this heuris-
tic is that the system have knowledge about which
deep case slots are relevant for the verification
of a movement. This prerequisite is not met by
most natural language (NL) systems since they sim-
ply represent events in the domain of discourse in
fully instantiated form using case frames, e.g. as
part of a semantic net or frame hierarchy. In con-
trast, the German language dialog system HAM-ANS
(Hamburg application-oriented natural language
system) [6], which we have developed, can apply
this heuristic because in addition to the case
frame of each verb the system includes a represen-
tation of the referential semantics of predica-
tions associated with that verb which makes it
possible to evaluate the visual input data for the
movement in question.
The goal of. this article is to elucidate the
representation constructions for case frames and
referential semantics of verbs of motion used in
HAM-ANS and to illustrate their use in generating
unmarked extended responses.
</bodyText>
<sectionHeader confidence="0.993407" genericHeader="method">
2. A SHORT OVERVIEW OF HAM-ANS
</sectionHeader>
<bodyText confidence="0.999006382352941">
HAM-ANS is a large German natural language dialog
system of both considerable depth and breadth
which presently provides access to three different
application classes, namely an expert system
(hotel reservation situation), a database system
(fishery data) and a scene analysis system
(traffic scene).
The communicative situations the system handles
are characterized as follows:
In the hotel reservation situation the system
takes the role of a hotel manager, who tries to
persuade the user to book a room. The caller is
assumed to have the overall goal of determining
whether the room offered meets his requirements.
The system must attempt to recognize the user&apos;s
specific desires concerning the room as they are
revealed - usually indirectly - in his utterances
and to make use of the various devices available
in natural language that permit the room in ques-
tion to be presented in a particularly favorable
light (e.g. the generation of tendentious descrip-
tions using hedged relative adjectives).
In the database application [8] HAM-ANS provides
marine scientists with NL access to a fishery
database, which contains data collected during
international expeditions. in the South Atlantic
and the Indian Ocean. The complex structured data
sets, which consist of cruise data concerning the
vessels&apos; voyages , krill biology data, relevant
net hauls and oceanographic data, are stored in a
relational database (76 relations, 11 MByte) with
a PASCAL/R data base management system.
In the traffic domain we presuppose the following
situational context: The system has observed a
</bodyText>
<page confidence="0.998385">
189
</page>
<bodyText confidence="0.9938913">
street intersection and supplies on the phone the
user, who is familiar with the scene but cannot
see it from his remote location, with information
about the traffic at that intersection (cf. fig.
1). A geometrical description of the observed
scene is provided by the image sequence analysis
system NAOS/MORIO [9]. In this application our
research efforts are concerned with the handling
of time (tense and temporal adverbs) and the
semantics of locomotion verbs (cf. fig. 2).
</bodyText>
<figure confidence="0.9557896875">
? How many trucks have you seen?
TWO.
? Which trucks have gone by?
A LIGHT-COLORED ONE ON HARTUNGSTREET.
? Did a yellow car and a green station wagon
turn off first?
NO, A YELLOW CAR TURNED OFF HARTUNGSTREET
ONTO SCHLUETERSTREET,BUT THE GREEN STATION
DID NOT TURN OFF FIRST.
? Were a young man and an old woman walking
down Schlbeterstreet during this time?
YES, AN OLD WOMAN AND A YOUNG MAN.
? Did the green station wagon stop on
Schlueterstreet?
YES.
? How many station wagons altogether have
stopped?
ONE OF THE THREE ON SCHLUETERSTREET.
? What did I just ask you? .
YOU ASKED: HOW MANY STATION WAGONS STOPPED.
? Did a station wagon drive off?
YES, ONE ON SCHLUETERSTREET.
? By the way, the light-colored truck: Did
it drive down Schlueterstreet too?
YES.
9 How many cars are there in all?
SIXTEEN.
? Is one of these cars blue&apos;
YES, TWO OF THEM ARE KIND OF BLUE.
? Did a blue car drive down both streets?
YES, ONE BLUE CAR.
So long!
</figure>
<figureCaption confidence="0.9859095">
Fig. 2: A transcript of an actual dialog
(translated from German)
</figureCaption>
<sectionHeader confidence="0.999645" genericHeader="method">
3. REPRESENTATION FORMALISMS FOR THE SEMANTICS OF
LOCOMOTION VERBS
</sectionHeader>
<subsectionHeader confidence="0.992501">
3.1. THE GEOMETRICAL SCENE DESCRIPTION
</subsectionHeader>
<bodyText confidence="0.999828258064516">
A basic requirement for answering questions about
movements that have occurred in real sequences of
scenes is an adequate representation of these
sequences. Not only the shape, the centers of
gravity, coir, etc. of objects must be
represented, but also the trajectories of moving
objects.
This geometrical scene description consists of a
combination of automatically generated outputs of
the scene analysis processes (insofar as this IS
presently possible) and a number of manual augmen-
tations.
The length in time of the scene under considera-
tion is ca. 14 sec., which corresponds to ca. 360
single TV images. From these 360 images 72
snapshots are coded in a relational formalism,
denoting which objects were observed, the shape of
these objects, their current center of gravity and
some other properties (e.g. color). The represen-
tation of the first snapshot contains information
about all objects that are visible at that time.
For the successive snapshots only changes with
respect to the predecessors are recorded, i.e.
objects and their descriptions are only entered if
they have changed location or appeared in the
scene. A trajectory of an object is determined by
its different centers of gravity relative to an
underlying coordinate system. In contrast to the
real TV image sequence this representation is only
2 dimensional and thus provides a bird&apos;s-eye view
of the scene.
</bodyText>
<subsectionHeader confidence="0.971631">
3.2. THE REPRESENTATION LANGUAGES SURF AND DEEP
</subsectionHeader>
<bodyText confidence="0.999937157894737">
The logic-oriented semantic representation
languages SURF and DEEP are the central represen-
tation formalisms used in HAM-ANS. These languages
are designed to be declarative and easily extend-
able. SURF is the target language of the analysis
components and source language for the generation
components and thus as close as possible to NL
utterances, whereas DEEP is better suited for the
evaluation of utterances on the basis of the
system&apos;s domain-specific knowledge sources.
Originally SURF and DEEP were designed to
represent term and predicate structures which
serve as a representation formalism for state
descriptions occurring typically in the hotel
reservation situation. For an adequate representa-
tion of the semantics of questions containing
verbs, the definition of SURF and DEEP was aug-
mented by meta-predicates for marking deep cases,
tense and voice adapted from Fillmore&apos;s deep case
</bodyText>
<listItem confidence="0.8063764">
theory [3]. Since events can be existentially
quantified as in (6) or explicitly quantified as
in (7)
(6) Did John fly to Hamburg?
(7) Did John fly to Hamburg three times last week?
</listItem>
<bodyText confidence="0.9228628">
SURF and DEEP provide a means of representing
quantification of events. A special quantifier
E-ACT denotes an existential quantification of
events. Other quantifiers like those in (7) are
currently not available but can easily be
included. Examples of SURF and DEEP expressions
are shown in the annotated example (cf. fig. 8).
In this paper only some of the features of SURF
and DEEP are discussed, see [6] for a more
detailed description.
</bodyText>
<subsectionHeader confidence="0.940889">
3.3. THE CASE-FRAME LEXICON
</subsectionHeader>
<bodyText confidence="0.99999424137931">
The case frames for verbs used in the system are
stored in the case-frame lexicon [5]. Each entry
in the word lexicon for a verb contains a pointer
to its applicable case frame which describes the
semantics of that verb in terms of case relations.
A case frame is represented as a combination of
deep case descriptions specifying for each deep
case its name, a marker, whether the deep case is
obligatory (0) or optional (F), and the semantic
restrictions which are required from a syntactic
substructure to fill the deep case (cf. fig. 3).
This pointer technique permits the use of a
specific case frame for several verbs during the
analysis phase without predetermining a single
process for these verbs during the evaluation of
whole utterances. For verbs with different
referential semantics, e.g. &apos;to accelerate&apos; and
to stop&apos;, a single case frame, namely that speci-
fying an obligatory AGENT of type &apos;vehicle&apos; and a
optional LOCATIVE of type &apos;thoroughfare&apos;, is
applied during the analysis phase.
Case frames are formulated in SURF so that the
checking of the semantic restrictions can be
accomplished by the inference rules usually
applied during the evaluation of a complete utter-
ance. The selectional restriction that, e.g., the
NP &apos;a car&apos; describe an object of the class of
vehicles, and therefore be a possible candidate to
fill&amp;quot; the agent role of the verb &apos;to stop&apos;, can be
</bodyText>
<page confidence="0.983701">
190
</page>
<bodyText confidence="0.9987912">
verified because of the transitivity of the super-
set relation in the conceptual semantic net.
In the case-frame lexicon the case frames are not
recorded in the form shown in fig. 3, but rather
are represented as constructor calls for building
</bodyText>
<equation confidence="0.926384928571428">
[r1-s: ageat:
(d-l: role-marker: 0
restrictions:
(lambda: xl (af-a: ISA xl VEHICLE)))
objective
source:
locative.
(d-l: role-marker: F
restrictions:
(lambda: xl (af-a: ISA xl THOROUGHFARE)))
goal:
time:
path:
instrument:3 •
</equation>
<figureCaption confidence="0.878724">
Fig. 3: Case frames for verbs of type to sto.p.
</figureCaption>
<bodyText confidence="0.90874025">
a case frame according to the actual syntax defin-
ition of SURF. This guarantees that all possible
modifications of SURF are immediately present in
the case frames.
</bodyText>
<sectionHeader confidence="0.9940935" genericHeader="method">
3.4. OBJECT-ORIENTED REPRESENTATION OF MOTION
CONCEPTS
</sectionHeader>
<bodyText confidence="0.999954083333333">
In object-oriented programming languages program-
ming is more or less the activity of creatin9 a
world of entities called objects and of specifying
a set of generic operations that can be performed
on them. Objects can communicate with each other
by sending and receiving messages. Essentially,
running a program means that the object sends a
message to an object (possibly to itself) which in
turn sends a message etc., until the required task
is fulfilled. An important benefit of the object-
oriented style is that it lends itself to a par-
ticularly simple and lucid kind of modularity.
</bodyText>
<subsubsectionHeader confidence="0.679139">
3.4.1. THE FLAVOR SYSTEM
</subsubsectionHeader>
<bodyText confidence="0.999906851351351">
The Flavor system [2] [13] is an implementation of
the language features that support object-oriented
programming. Two kinds of objects exist in a Fla-
vor system, namely one called flavor and the other
instance of a flavor. A flavor represents a gen-
eric object and an instance an individual realiza-
tion of a generic object. It is possible to send
messages to both kinds of objects. Flavors are
organized in d directed graph called the flavor
graph. There is one designated flavor, the
vanilla flavor, which corresponds to the thing
frame in FRL [10]. Since the heritage of informa-
tion for each flavor is provided by the flavor
graph, it is necessary to specify for each newly
defined flavor its location in the graph by naming
its direct predecessors (its superflavors). The
information contained in a flavor is a combination
of all the information inherited from its super-
flavors and the added information given by its own
definition. The added information can also over-
ride, augment or modify the Inherited information.
This is one dimension of the information contained
in a flavor: owned or inherited. Another is the
declarative/procedural distinction. The declara-
tive knowledge of a flavor is stored in variables
of different kinds whereas procedural knowledge is
encoded in so called methods.
One kind of variable - the instance variable - is
used to give instances of the same generic object
their individual information. The other kind - the
class variable - is owned by a flavor, can be
&apos;bequeathed&apos; to other flavors, and accessed by any
object in the flavor system. However, a flavor is
only allowed to change a value of a class vari-
able, if it owns this variable.
Methods are function definitions that implement
the operations defined for each flavor. The combi-
nation of methods from different flavors is called
mixing flavors.
In comparison with FRL the Flavor system has
mainly three distinguishing features;
The &apos;A kind of&apos; slot in FRL serves both for
establishing an inheritance hierarchy and for
connecting instances to superclasses, i.e. no
clear distinction is made between generic
frames and instances. On the other hand the
flavor graph is built by specifying the
superflavors for each flavor, instances are
created by the make-instance-method.
Because the distinction between generic
frames and instances is not made in FRL there
is also no distinction between instance vari-
ables and class variables. In the Flavor sys-
tem the semantics of variables is more
clearly defined in that instance variables
can only be modified in instances and class
variables can only be modified in flavors.
Frames in FRL are passive data structures,
whereas flavors can be )re-)activated,
created and modified; they are autonomous;
they are declarative and procedural at the
same time and hence are entities which are
better suited for as formalisms for
representing common knowledge (cf. [2]).
Although the flavor system is a tool for the
development of large software systems and not a
knowledge representation language, it includes the
basic concepts for the rapid design of specific
knowledge representation formalisms. In contrast,
to a full-fledged knowledge representation
language this approach requires some additional
programming in the beginning, but it avoids any
permanent overhead for features which are super-
fluous for the task at hand.
</bodyText>
<subsubsectionHeader confidence="0.796215">
3.4.2. THE MOTION CONCEPT HIERARCHY
</subsubsectionHeader>
<bodyText confidence="0.999964833333333">
The Flavor system is used in HAM-ANS for
representing a specialization hierarchy of motion
concepts (cf. fig. 4). The root flavor of this
hierarchy is the motion concept MOVE. Descendants
in the tree, e.g. GO_BY, TURN inherit the
declarative and procedural information contained
</bodyText>
<figureCaption confidence="0.991726">
Fig. 4: The motion concept hierarchy
</figureCaption>
<table confidence="0.888823888888889">
VANILLA
MOVE
1
SPACE
TIME
GO_BY
STOP TURN DRIVE_OFF
TURN120 SUBFLAVOR
INSTANCE OF
</table>
<page confidence="0.885992">
191
</page>
<figure confidence="0.950329428571429">
*a&apos;
t
•
•
•
HAS A YELLOW CAR TURNED OFF?
HAM-ANS
</figure>
<sectionHeader confidence="0.984210714285714" genericHeader="method">
FLAVOR :TURN SUPERFLAVORS : GO_BY
VARS : AGENT, SOURCE ...
METHODS: ONLY_AGENT_SLOT_FILLED
FIND A SOURCE
CHECK DIRECTION CHANGE
FIND A GOAL NEQ SOURCE
INSTANCE_OF APPLICATION_OF
TURN120 :
AGENT: CAR120
SOURCE: HARTUNGSTREET 1
DIRECTION_CHANGE?: T
GOAL: BIB ERSTREET
CHES, ONE YELLOW ONE FROM
ARTUNGSTREET ONTO BIBERSTREET)
</sectionHeader>
<page confidence="0.548976">
;14
</page>
<figureCaption confidence="0.996351">
Fig. 5: Case slot filling as side effect of visual search
</figureCaption>
<bodyText confidence="0.999267535714286">
in their parents. Instance variables comprise
information about the deep cases associated with
the motion concept as well as information needed
and extracted by methods. The methods are respon-
sible for checking the referential semantics of
the motion concepts. Instances of a flavor denote
specific events in the domain of discourse that
Could be verified by the application of the
methods.
The methods of the additionally defined flavors
TIME and SPACE are responsible for temporal and
spatial computations. Instances of these flavors
determine the temporal and spatial description of
the actual scene: the length of the scene in time,
the number of snapshots, the spatial extent, etc.
The task of checking the truth value of the propo-
sition in ;1 user&apos;s question is accomplished
through messaqe passing. These messages include:
creating iii Lances of motion concepts, e.g.
TURN120, instAntiating deep case slots specified
in the question, and activating appropriate
methods.
Let&apos;s now con,.ider the example given in fig. 5 in
more detail. &apos;.ince only the AGENT was specified in
the question, the selected method is
ONLY AGENT SLfj fILLED. After determining an
interval .(f consideration this method calls
further m,thods, namely FIND _ A _SOURCE,
</bodyText>
<equation confidence="0.6276325">
DIRECTION _CHANGE and FIND _A GOAL NE0 SOURCE.
— — _ _
</equation>
<bodyText confidence="0.991876592592593">
DIRECTION_CHAVGE is a special method of the flavor
TURN. The first and last methods are inherited
(cf. fig. GI from flavor GO_BY because they are
also needed in that flavor for answering questions
like: &apos;Has the yellow car driven from Biberstreet
to Hartungstreet7&apos;.
FIND A SOURCE identifies the first entry of the
agent&apos;s trajectory in the interval of considera-
tion and checks which of the objects of the static
background these coordinates belong to. For this
test only those static objects are selected that
satisfy the selectional restrictions for the
source slot specified in the case-frame lexicon.
If the test succeeds for an object, the name of
this object is stored in the source slot.
DIRECTION CHANGE now follows the agent&apos;s trajec-
tory looking for a significant change of direc-
tion. If this test is also positive,
FIND A GOAL NEO SOURCE is tried. This method
searches for i point on the trajectory which is
not inside the object identified in the source
slot. If there is such a point, the same selec-
tional check as for the source slot is executed
for the possible goal object. The successful
application of these methods yields a fully
instantiated flavor instance, e.g. TURN120 (cf.
fig. 7).
</bodyText>
<sectionHeader confidence="0.962445" genericHeader="method">
4. AN EXAMPLE OF THE PROCESSING OF AN UTTERANCE
</sectionHeader>
<bodyText confidence="0.7664798">
The processing of a user&apos;s utterance may be illus-
trated by an example taken from the dialog in fig.
2.
USER: Which trucks have gone by?
HAM-ANS: A YELLOW ONE ON HARTUNGSTREET.
</bodyText>
<page confidence="0.996827">
192
</page>
<figureCaption confidence="0.988102">
Fig. 6: Instance variables and methods in the
motion concept hierarchy
</figureCaption>
<figure confidence="0.998885210526316">
INSTANCES
NAME MOVE
TYPE FLAVOR
(ROOTI
SUPERFLAVORS
NSTANCE—VARIABLES
AGENT SOURCE GOAL
EXACT_SOURCE EXACLOOAL
iNTERVAL.CF_CONSIDERATiON
CURRENT_TIME
CURRENT_SPACE
METHS
AGENT_MOVED ?
FINCLMOVEMENIT
FINELLOCATION_OF_AGENT
FIND_A_SOuRCE
FIND_A_GOAL
FinO_A_GOAL_NECI_SCLRCE
NAME GO_BY
TYPE FLAVOR
SUPERFLAVORS
INSTANCE —VARIABLES
INHERITED
1
ADDITIONAL
METHODS
INHERITED
ACOITIONAL
CHOME_METHCO
ONLY_ADENT.S.CIT_FILLED
AGENT_ANO_SCURCE_SPECIFIED
AGENT_ANLGOAL_SPECIFIED
AGENT_ANO_LOCATIvE_SPECIFIED
AGENT_SCLFDLGOAL _SPECIFIED
INSTANCES
MOVE
SUBFLAVORS
ITURNI
NAME TURN j
TYPE FLAVOR
SUPMFLAVORS
INSTANCE VARIABLES
MERITED
ACDMONAL
[oncaNswwx? I
METHODS
mano
REDEFINED
0100SLWMOD
M4Y_AOONT31.1519180
ADDITIONAL
CHEY_OPECTION_OIANGE
GO_BY
SUBFLAVORS
ITURN NTO1
INSTANCES
&apos;TURN 1201
</figure>
<bodyText confidence="0.998930894736842">
The following discussion of some of the processing
phases can bust be understood if continual refer-
ence is made to fig. 8, which shows a traced ver-
sion of the example.
The processing of a user&apos;s NL input starts with a
rather elaborate lexical and morphological
analysis - a process which on the one hand reduces
single words to their canonical forms with their
morphologi.cal and syntactic features (e.g. gender,
person, number) and on the Other hand recognizes
syntagmatic groups of words and discontinuous verb
constituents, transforming them according to
predefined rules.
The generated structure - the preterminal string
(not shown in fig. 8) - forms the input to the
parser. The syntactic analysis consists of two
different strategies, both of which use the same
ATN-definitions of syntactic categories, e.g. for
noun phrases and prepositional phrases. One of
</bodyText>
<figureCaption confidence="0.433019">
Fly. 7: An instance of TURN
</figureCaption>
<bodyText confidence="0.999918901960784">
these strategies - always applied for sentences
with copula verbs - uses a surface grammar to cope
with word order variations. The other is a case-
driven analysis strategy which is used for sen-
tences containing verbs with an associated case
frame.
Since in the example the verb &apos;to go by&apos; has a
case frame the second strategy is applied. After
an access to the case-frame lexicon the case frame
is constructed. This case frame is used to guide
the parsing in the following manner: The algorithm
first attempts to recognize those syntactic con-
stituents that are possible candidates for a deep
case marked obligatory, and then to recognize
those constituents that are possible candidates
for optional deep cases. When the input is com-
pletely consumed and all obligatory deep cases are
filled the process ends.
The test for determining if a syntactic consti-
tuent is a possible candidate to fill a specific
deep case is divided into a syntactic and a seman-
tic check. The syntactic check requires, e.g.,
that in order to fill the agent role a constituent
must contain the attribute &apos;nominative (sentence
in active voice) and that its number must
correspond to that of the verb. The semantic check
requires that the noun of the constituent fulfill
the semantic restrictions specified for the
specific deep case. This is accomplished through
the building of a SURF expression for the consti-
tuent, the transformation of this expression into
a DEEP expression, and the evaluation of the DEEP
expression on the basis of the conceptual net.
In our example only the agent case is marked as
obligatory and the noun phrase &apos;which trucks&apos; ful-
fills both the syntactic and semantic requirements
to fill this slot. Since no other syntactic con-
stituents are encountered, the complete SURF
representation is constructed.
The structure is normalized into a DEEP structure.
One of the main tasks of this process is the
determination of the scope. of quantifiers. The
algorithm used for this purpose is modelled after
the one described by Hendrix (47: it takes into
account the relative strength of natural language
quantifiers (e.g. &apos;a&apos;, &apos;both&apos;) and question opera-
tors (e.g. &apos;which&apos;, &apos;how many&apos;). The strength is
determined by a numeric value, which in some cases
is modified by the degree of generality of the
noun. E.g. the existential quantifier &apos;a&apos; is
weaker than the more specific quantifier &apos;both&apos;.
</bodyText>
<table confidence="0.996501142857143">
NAME TURN 120
INSTANCE_OF 171:7
TYPE INSTANCE
INSTANCE VARIABLES ,FILL ED_BY_METHOO
NAVE VALUE MAKE_ INSTANCE
AGENT CAR 20 OETERMINE_INTERVAL
CURRENT_TI ME ISO 128 OF_CONSIOERATION
CURRENT_SPACE SSO 128
INTEMLOF_CONSIDERATION ( 21 . 64)
SOURCE BIBERSTREET
EXACT—SOURCE 50 . 70 ) J FINO_A_SOURCE
OIRECTION_CHANGE ? T CHECK _OIRECTION_CHANGE
GOAL HARTUNGSTREET FINO_A_GOAL —NE0—
EXACT_GOAL ( 300 .100 ) I SOURCE
</table>
<page confidence="0.791073">
193
</page>
<table confidence="0.950533981818183">
P Which trucks hero gone by
Syntactic analysts
Case frame
(ri-a: agent:
(d-1: role-marker: 0
reetrictions•
(lambda: 11 (at-a: ISA z1 VEHICLE)))
objectiva:
source:
11-1: role-marker: F
restrictions:
(lambda: z1 1st,: ISA x1 THOROUGHFARE)))
locative:
(d-1, role- aaaaaa F
restrictions:
Ilembda: RI (id-a: ISA 21 THOROUGHFARE)))
goal:
(d-1: role- rrrrrr : F
restrictions:
(lambda, of lat-a, ISA z1 THOROUGHFAREIll
time:
path:
instrument :I
AGENT parsed
(lambda: x9
lat-a: AGENT
X6
(t-s: (q-w: WHICH) (lambda: 16 (of-a: ISA el TAUCA11111
SURF representation of input sentence
)et-d: EVENT
(t-s: (4-qt: E-ACT) (lawbda: 110 let-e: ACT all 60_9&apos;1111
(d-e: role-list:
(rl-s: agent,
(lambda, 19
(at-a: AGENT
z9
(t-s: (q-w, WHICHI (lambda: at tat-a: ISA eg TRUCE11111
objective:
source:
locative:
time:
path:
instrument&apos;)
mod:
Id-m: tense,
Ilembda, all (at-a: TENSE ill PERF)(
vols.:
(lambda:s12 (at-a: VOICE 212 ACTIVE)11)1
a. Normalisation: Teen.&apos; g into DEEP rrrrrrrr tation
DEEP structure
1f-d: It-q: (for: (q-w, WHICH) 214) (af-a: ISA x14 TRUCE))
)t-d: (t-q: (for, (q-qt, E-ACTI 2131 (at-a, ACT x13 GO_OT))
(f-e: role-list:
(rl-d, agent:
(at-a: AGENT all 014)
objective
source:
locative:
gaol:
time:
Path:
inetrument I
mod:
(t-m: tense let-a: TENSE all PERF) voice: (af-e, VOICE .13 ACTIVE)))
)1
Evaluation
Evaluation of • formula with the quitaititr
(q-lo WHICH)
Evaluation at a format. with the quantifier
[q-qt E-ACT)
Object Trim:Kt has not moved during the entire scene
Evaluation of a formula with the quantifier
lq-qt: C-ACT)
Teating of • partially instantiated case frame
role-lIst,
lrl-d. agent
(at-a, AGENT Gaff( TRUCKS)
objective.
source:
locetive,
goal,
time:
path:
instrument I
mod:
It-m, tense. (at-, TENSE GO_BY PERT) voice (at-e, VOICE GO_DY ACTIVE)))
Interval of coneideretion determined from tenet land adverb)
(1 . 64)
The object becomes visible between time points 56 and 65
The interval of consideration modified in accordence with abject time is:
(56 64)
Change determined between time points 56 and 57
Completed case frame
If-e, role-list,
Irl-d: agent:
(at-a: AGENT 00_97 TROUT)
objective:
source:
locative:
(at-a: LOCATIVE GO_ST .ON HARTONGSTREET)
goal:
time:
path,
instruwent:1
mod:
(f-m: tense: (at-a: TENSE GD_BY PERF) voice, (at-a, VOICE 00_117 ACTIVE)))
.Verification of event was possible
Result of the Evaluation
(f-d: It-q: (for: (q-s: (MUM)) s141 TI
If-d: It-q: (for: (q-qt: E-ACT) :13) (of,: ACT 113 00_9Y11
It-et role-list,
agent:
(et-a: AGENT x13 114)
objective,
source:
locative:
(al-al LOCATIVE 113 .ON HARTUNGSTREETI
goal,
time:
path,
instrument,)
mod:
(f-m, tense: (af-a, TENSE 013 PERF) voice (at-a: VOICE x13 ACTIVE)))))
an Inverse n rrrrr Transforming into SURF representation
SURF rrrrrrr ntation of answer
(at-a: EVENT
(t-s: (4-0: E-ACT1 (lambda: all (at-a: ACT 113 GO_BT)II
(d-e: role-list:
(rl-s: effest:
:
all let-e: AGENT 113 (t-s, (4-s, (TROCHE() 7111
objective:
seam:
locative:
(lambda: 113 lat-a: LOCATIVE 213 ON HARTIINGSTREET)I
goel,
time:
path,
instrument:1
mod:
(d-m: ten&amp;quot;,
(lambda: x13 let-a: TENSE x13 PERM
voile:
(lambda: 113 (at-a: VOICE 113 ACTIVE)))))
at Ellipsis generation
Elliptified SURF rrrrrrr ntetion of answer
(rl-s, agent:
(1 10 (at-a: AGENT 20 10-s: lq-s, (TROUT)) 1)1)
objective:
source:
locative:
(lambda: z0 (at-u: LOCATIVE x0 .09 HARTONGSTREET)I
goal:
time:
path:
instrument:I
Verbalisetion
NP-G rrrrr tion for TROUT
The rrrrrr tad EP tor TRUCKS it:
)t-q: (for: (q-qt: A) s151 If-o: AND (at, ISA 115
TRUCE) (et-a, REF all LIGHT-COLORED())
Verbalieed structure of
(SENTENCE (AGENT (NP (NP (N: SG) A LIGHT-COLORED (ELLIPSIS TRUCT1111
(LOCATIVE (PP .ON INP (N, SG) HART5015TREET1111
Surface transformations
</table>
<note confidence="0.574043">
A LIGHT-COLORED ONE ON HARTUNGSTREET
</note>
<figureCaption confidence="0.978962">
Fig. 8: Annotated example interaction
</figureCaption>
<page confidence="0.995075">
194
</page>
<bodyText confidence="0.997175797619048">
Since, in the example discussed, the question
operator &apos;which&apos; is stronger than the existential
quantifier for verbs &apos;E-ACT&apos;, the structure is
rearranged.
The task of evaluating a DEEP formula is governed
by a generate and test strategy. Generate and test
procedures can be viewed as being activated by
pattern-directed invocation and differ from each
other in that the generate procedures assign
internal object identifiers to variables in DEEP
formulas, while the test procedures yield two
values, the first of which is either a fully
instantiated formula equivalent to the input for-
mula or a modified formula, and the second of
which indicates the truth value of the input for-
mula in the range [OM. In the interpretation
phase these two processes interact in such a way
that a test attempt activates generate procedures
which in turn call test procedures and so on.
A closer look at our example shows that after the
first test attempt has discovered a structure con-
taining a variable - in this case the term
representing the noun phrase which trucks&apos; - a
package of generate procedures is activated to
produce the set of object identifiers denoting the
referential set of objects that are trucks - here
TRUCK1 and TRUCK2. The rest of the formula is
then recursively sent to a test process with the
variable x14 replaced by elements of the refer-
ence set for trucks one after the other.
The next formula to be tested requires the genera-
tion of a set of instances of the type GO_BY.
Since events are not represented in fully
instantiated form but rather must be extracted
from the geometrical scene description, a special
set of procedures - the methods specified in the
verb flavor hierarchy - is activated. (See section
3.4.2 for how this process functions.)
A verification of an event GO BY is possible only
for TRUCK2. The additional information extracted
during the process of visual search - the specific
location of the event - is recorded in the loca-
tive slot.
During the formation of the result of the evalua-
tion, the system, guided by general heuristics,
decides whether the additional detail will cause
too great a complexity in the answer or not 111].
In this case the complexity is suitable and the
location will be mentioned in the answer.
The word &apos;which&apos; is defined as quantifier that
causes a description of a set of objects to be
returned (instead of a truth value). Thus the set
of reference objects for which the proposition in
question could be verified, i.e. TRUCK2. is sub-
stituted for the noun phrase &apos;which trucks&apos;.
The resulting DEEP expression is transformed by
the inverse normalization process into a SURF
expression. In order to verbalize extended
responses in a manner both informative and concise
as possible, the ellipsis generation process
elides those parts of the semantic representation
of complete responses that are identical to the
stored representation of the question [7].
The verbalization component produces a string of
canonical words and their grammatical features
using translation rules attached to the various
categories of SURF expressions. A special subcom-
ponent provides for the generation of noun phrases
as descriptions of domain individuals, in our
example TRUCK2. In this case the NP-generator
decides not to generate a definite description
since neither the system nor the user has already
referred to TRUCK2 in the previous dialog and the
existence of TRUCK2 as a moving object is not
implied by the existential assumptions supplied by
the a priori user model (cf. [7]). Instead, the
indefinite NP a light-colored truck&apos; is gen-
erated, using the property &apos;light-colored&apos; as an
initial characterization.
•
Finally the &apos;surface transformation&apos; component [1]
pronominalizes the noun &apos;truck&apos; and yields a
standard word order of the utterance and the
correctly inflected forms of the canonical words.
</bodyText>
<sectionHeader confidence="0.995552" genericHeader="conclusions">
5. CONCLUSION
</sectionHeader>
<bodyText confidence="0.999985583333333">
We have attempted to show that case role filling
for the construction of an unmarked extended
response can be regarded as a side effect of the
visual search necessary to answer questions refer-
ring to a visually present domain of discourse. A
new method for the representation of the referen-
tial semantics associated with locomotion verbs
has been presented in the framework of object-
oriented programming based on the Flavor system..
The approach presented has been useful in extend-
ing the communicative capabilities of the dialog
system HAM-ANS as an interface to a vision system.
</bodyText>
<sectionHeader confidence="0.998595" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.999812388888889">
[1] BUSEMANN, S.: Problems involving the
automatic generation of utterances in German.
Memo ANS-8, Research Unit for Information
Science and Al, Univ. of Hamburg. April 1982.
121 DI PRIMIO, F., CHRISTALLER, T.: A poor man&apos;s
flavor system. Working paper No. 47, ISSCO,
Univ. de Geneve, 1983.
DI FILLMORE. C. J.: The case for case. In: Bach,
E., Harms, R. T. (eds.): Universals in
linguistic theory. Holt, Rinehart &amp; Winston,
1968, pp. 1-88.
[4] HENDRIX, G. G.: Semantic aspects of transla-
tion. In: Walker, D. E. (ed.): Understanding
spoken language. New York, North-Holland,
1978. pp. 193-228.
[5] HOEPPNER, W.: ATN-Steuerung durch Kasusrah-
men. In: Wahlster, W. (ed.): GWAI-82. Proc.
6th German Workshop on At. Berlin: Springer,
1982, pp. 215-226.
181 HOEPPNER, W., CHRISTALLER, TH., MARBURGER,
H., MORIK, K., NEBEL, B., O&apos;LEARY. M., WAHL-
STER, W.: Beyond domain independence: Experi-
ence with the development of a German
language access system to highly diverse
background systems. In: Proc. 8th IJCAI,
Karlsruhe 1983, pp. 588-594.
[7] JAMESON. A., WAHLSTER, W.: User modelling in
anaphora generation: Ellipsis and definite
description. In: Proc. ECAI-82, Orsay 1982,
pp. 222-227.
[8] MARBURGER, H., NEBEL, B.: Natuerli-
chsprachlicher Datenbankzugang mit HAM-ANS:
Syntaktische Korrespondenz, natuerlichspra-
chliche Ouantifizierung und semantisches
Modell des Diskursbereichs. In: Kupka. I.
(ed.): GI-13. Jahrestagung. (To appear)
[91 NEUMANN, B. Towards natural language
description of real- world image sequences.
In: Nehmer, J. (ed.): GI-12. Jahrestagung,
Berlin: Springer, 1982, PP. 343-358.
[103 ROBERTS, R.B., GOLDSTEIN. I.P.: The FRL
manual. Al Memo 409, Al Lab., MIT, Cambridge,
1977.
[11] WAHLSTER, W.. MARBURGER, H.. JAMESON, A.,
BUSEMANN, S.: Over-answering yes-no ques-
tions: Extended responses in a NL interface
to a vision system. In: Proc. 8th IJCAI,
Karlsruhe 1983, pp. 643-646.
1121 WEBBER, B., JOSHI, A., MAYS, E., MCKEOWN, K.:
Extended natural language database interac-
tion. In: Int. J. Computers and Mathematics,
Spring 1983.
[13] WEINREB, D., MOON, D.: Lisp Machine Manual
(4th ed.). MIT, 1981.
</reference>
<page confidence="0.998943">
195
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.784299">
<title confidence="0.971432">CASE ROLE FILLING AS A SIDE EFFECT OF VISUAL SEARCH</title>
<author confidence="0.998748">Heinz Marburger</author>
<affiliation confidence="0.993258333333333">Research Unit for Information Science and Artificial Intelligence University of Hamburg</affiliation>
<address confidence="0.993883">Mittelweg 179 D-2000 Hamburg 13, F.R. Germany</address>
<abstract confidence="0.994000275862069">This paper addresses the problem of generating comTunicatively adequate extended responses in the absence of specific knowledge concerning the intensions of the questioner. We formulate and justify a heuristic for the selection of optional deep case slots not contained in the question as candidates for the additional information contained in an extended response. It is shown that, in a visually present domain of discourse, case role filling for the construction of an extended response can be regarded as a side effect of the visual search necessary to answer a question containing a locomotion verb. The paper describes the various representation constructions used in the German language dialog system HAM-ANS for dealing with the semantics of locomotion verbs and illustrates their use in generating extended responses. In particular, we outline the structure of the geometrical scene description, the representation of events in a logic-oriented semantic representation language, the case-frame lexicon and the representation of the referential semantics based on the Flavor system. The emphasis is on a detailed presentation of the application of object-oriented programming methods for coping with the semantics of locomotion verbs. The process of generating an extended response is illustrated by an extensively annotated trace.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S BUSEMANN</author>
</authors>
<title>Problems involving the automatic generation of utterances in German. Memo ANS-8,</title>
<date>1982</date>
<institution>Research Unit for Information Science and Al, Univ. of Hamburg.</institution>
<marker>BUSEMANN, 1982</marker>
<rawString>[1] BUSEMANN, S.: Problems involving the automatic generation of utterances in German. Memo ANS-8, Research Unit for Information Science and Al, Univ. of Hamburg. April 1982.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F DI PRIMIO</author>
<author>T CHRISTALLER</author>
</authors>
<title>A poor man&apos;s flavor system.</title>
<date>1983</date>
<booktitle>Working paper No. 47, ISSCO, Univ. de Geneve,</booktitle>
<marker>DI PRIMIO, CHRISTALLER, 1983</marker>
<rawString>121 DI PRIMIO, F., CHRISTALLER, T.: A poor man&apos;s flavor system. Working paper No. 47, ISSCO, Univ. de Geneve, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C J</author>
</authors>
<title>The case for case.</title>
<date>1968</date>
<booktitle>Universals in linguistic theory.</booktitle>
<pages>1--88</pages>
<editor>In: Bach, E., Harms, R. T. (eds.):</editor>
<location>Holt, Rinehart &amp; Winston,</location>
<marker>J, 1968</marker>
<rawString>DI FILLMORE. C. J.: The case for case. In: Bach, E., Harms, R. T. (eds.): Universals in linguistic theory. Holt, Rinehart &amp; Winston, 1968, pp. 1-88.</rawString>
</citation>
<citation valid="true">
<title>Semantic aspects of translation. In:</title>
<date>1978</date>
<pages>193--228</pages>
<editor>[4] HENDRIX, G. G.:</editor>
<location>New York, North-Holland,</location>
<marker>1978</marker>
<rawString>[4] HENDRIX, G. G.: Semantic aspects of translation. In: Walker, D. E. (ed.): Understanding spoken language. New York, North-Holland, 1978. pp. 193-228.</rawString>
</citation>
<citation valid="true">
<date>1982</date>
<booktitle>GWAI-82. Proc. 6th German Workshop on At.</booktitle>
<pages>215--226</pages>
<editor>[5] HOEPPNER, W.: ATN-Steuerung durch Kasusrahmen. In: Wahlster, W. (ed.):</editor>
<publisher>Springer,</publisher>
<location>Berlin:</location>
<marker>1982</marker>
<rawString>[5] HOEPPNER, W.: ATN-Steuerung durch Kasusrahmen. In: Wahlster, W. (ed.): GWAI-82. Proc. 6th German Workshop on At. Berlin: Springer, 1982, pp. 215-226.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M WAHLSTER</author>
<author>W</author>
</authors>
<title>Beyond domain independence: Experience with the development of a German language access system to highly diverse background systems. In:</title>
<date>1983</date>
<booktitle>Proc. 8th IJCAI,</booktitle>
<pages>588--594</pages>
<location>Karlsruhe</location>
<marker>WAHLSTER, W, 1983</marker>
<rawString>181 HOEPPNER, W., CHRISTALLER, TH., MARBURGER, H., MORIK, K., NEBEL, B., O&apos;LEARY. M., WAHLSTER, W.: Beyond domain independence: Experience with the development of a German language access system to highly diverse background systems. In: Proc. 8th IJCAI, Karlsruhe 1983, pp. 588-594.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A WAHLSTER</author>
<author>W</author>
</authors>
<title>User modelling in anaphora generation: Ellipsis and definite description. In:</title>
<date>1982</date>
<booktitle>Proc. ECAI-82,</booktitle>
<pages>222--227</pages>
<location>Orsay</location>
<marker>WAHLSTER, W, 1982</marker>
<rawString>[7] JAMESON. A., WAHLSTER, W.: User modelling in anaphora generation: Ellipsis and definite description. In: Proc. ECAI-82, Orsay 1982, pp. 222-227.</rawString>
</citation>
<citation valid="false">
<title>Datenbankzugang mit HAM-ANS: Syntaktische Korrespondenz, natuerlichsprachliche Ouantifizierung und semantisches Modell des Diskursbereichs.</title>
<date>1982</date>
<pages>343--358</pages>
<editor>[8] MARBURGER, H., NEBEL, B.: Natuerlichsprachlicher</editor>
<publisher>Springer,</publisher>
<location>Berlin:</location>
<marker>1982</marker>
<rawString>[8] MARBURGER, H., NEBEL, B.: Natuerlichsprachlicher Datenbankzugang mit HAM-ANS: Syntaktische Korrespondenz, natuerlichsprachliche Ouantifizierung und semantisches Modell des Diskursbereichs. In: Kupka. I. (ed.): GI-13. Jahrestagung. (To appear) [91 NEUMANN, B. Towards natural language description of real- world image sequences. In: Nehmer, J. (ed.): GI-12. Jahrestagung, Berlin: Springer, 1982, PP. 343-358.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I P</author>
</authors>
<title>The FRL manual. Al Memo 409,</title>
<date>1977</date>
<location>Al Lab., MIT, Cambridge,</location>
<marker>P, 1977</marker>
<rawString>[103 ROBERTS, R.B., GOLDSTEIN. I.P.: The FRL manual. Al Memo 409, Al Lab., MIT, Cambridge, 1977.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W MARBURGER WAHLSTER</author>
<author>H JAMESON</author>
<author>A BUSEMANN</author>
<author>S</author>
</authors>
<title>Over-answering yes-no questions: Extended responses in a NL interface to a vision system. In:</title>
<date>1983</date>
<booktitle>Proc. 8th IJCAI,</booktitle>
<pages>643--646</pages>
<location>Karlsruhe</location>
<marker>WAHLSTER, JAMESON, BUSEMANN, S, 1983</marker>
<rawString>[11] WAHLSTER, W.. MARBURGER, H.. JAMESON, A., BUSEMANN, S.: Over-answering yes-no questions: Extended responses in a NL interface to a vision system. In: Proc. 8th IJCAI, Karlsruhe 1983, pp. 643-646.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B WEBBER</author>
<author>A JOSHI</author>
<author>E MAYS</author>
<author>K MCKEOWN</author>
</authors>
<title>Extended natural language database interaction.</title>
<date>1983</date>
<journal>In: Int. J. Computers and Mathematics, Spring</journal>
<marker>WEBBER, JOSHI, MAYS, MCKEOWN, 1983</marker>
<rawString>1121 WEBBER, B., JOSHI, A., MAYS, E., MCKEOWN, K.: Extended natural language database interaction. In: Int. J. Computers and Mathematics, Spring 1983.</rawString>
</citation>
<citation valid="true">
<date>1981</date>
<booktitle>Lisp Machine Manual (4th ed.). MIT,</booktitle>
<editor>[13] WEINREB, D., MOON, D.:</editor>
<marker>1981</marker>
<rawString>[13] WEINREB, D., MOON, D.: Lisp Machine Manual (4th ed.). MIT, 1981.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>