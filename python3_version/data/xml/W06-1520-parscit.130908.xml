<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000843">
<title confidence="0.992841">
Handling Unlike Coordinated Phrases in TAG by Mixing Syntactic
Category and Grammatical Function
</title>
<note confidence="0.510684">
Carlos A. Prolo
Faculdade de Inform´atica - PUCRS
</note>
<address confidence="0.842467">
Porto Alegre, RS, 90619-900, Brazil
</address>
<email confidence="0.997942">
prolo@inf.pucrs.br
</email>
<sectionHeader confidence="0.994781" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999808176470588">
Coordination of phrases of different syn-
tactic categories has posed a problem for
generative systems based only on syntactic
categories. Although some prefer to treat
them as exceptional cases that should re-
quire some extra mechanism (as for ellip-
tical constructions), or to allow for unre-
stricted cross-category coordination, they
can be naturally derived in a grammatic
functional generative approach. In this
paper we explore the ideia on how mix-
ing syntactic categories and grammatical
functions in the label set of a Tree Adjoin-
ing Grammar allows us to develop gram-
mars that elegantly handle both the cases
of same- and cross-category coordination
in an uniform way.
</bodyText>
<sectionHeader confidence="0.998783" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999769342857143">
Generative grammars that we commonly hear
about in computational linguistics are usually
based on syntactic categories. This is also the case
when the formalism used is the Tree Adjoining
Grammars (TAGs). Large scale handcrafted gram-
mars for many languages have been built based
on this paradigm (Joshi, 2001; XTAG Research
Group, 2001; Kroch and Joshi, 1985; Abeill´e
and Candito, 2000; Candito, 1998; Becker, 1993;
Frank, 2002; Joshi and Schabes, 1997; Abeill´e
and Rambow, 2000) as well as grammars extracted
from corpora (Chen and Vijay-Shanker, 2000;
Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia,
2001). The latter is partly due to the fact that large
scale annotated corpora such as the Penn Treebank
(Marcus et al., 1994; Bies et al., 1995) give pri-
macy to syntactic categories. After all this is the
most strongly sedimented generative approach at
least since (Chomsky, 1957).
Computational approaches of grammar based
on grammatical function such as that of Susumu
Kuno (Kuno, 1987) have been given less impor-
tance. Although we can think of simply inserting
functional labels in elementary trees or use them
in a meta-level to generate the grammar, such as
in (Candito, 1998; Kinyon, 2000; Cl´ement and
Kinyon, 2003), such tags are generally not seen
as an essential part of the derivational process.
Nevertheless coordination is such an inherently
functional phenomenon as we show next. Con-
sider the sentences in (1) and (2). These are ex-
amples of regular coordination between phrases
of the same category. They can easily be handled
in the traditional grammar approaches of syntactic
category.
</bodyText>
<listItem confidence="0.957180666666667">
(1) She flew [PP on May 1st and on July 4th ].
(2) They sell [ADJP electric and electronic ]
products.
</listItem>
<bodyText confidence="0.9972346">
Now look at the cases in (3) and (4). They
are different in the sense that the coordination is
across categories. This poses a strong problem
to the traditional grammar of syntactic categories.
This has been noticed for TAGs in (Prolo, 2002).
Recently this has also been tackled in the HPSG
framework by (Sag, 2003) and (Abeill´e, 2004).
The Penn Treebank calls this constituents UCP for
“Unlike Coordinated Phrases” (Bies et al., 1995).
The problem is that we would need rules of the
kind below (using context-free rules for short –
see (Prolo, 2002) for TAGs). Basically all pairs of
constituents can be coordinated but we can not as-
sign to the resulting constituents either of the sub-
constituent tags.
</bodyText>
<page confidence="0.982014">
137
</page>
<bodyText confidence="0.7162865">
Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 137–140,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</bodyText>
<sectionHeader confidence="0.42478" genericHeader="introduction">
Main
</sectionHeader>
<construct confidence="0.733019">
UCP —* ADVP CC PP
UCP —* PP CC ADVP
UCP —* ADJP CC NP
UCP —* NP CC ADJP
</construct>
<listItem confidence="0.908297666666667">
(3) She flew [?? yesterday and on July 4th ].
(4) They sell [?? electronic and computer ] de-
vices.
</listItem>
<bodyText confidence="0.94052628">
However, UCP coordination is not random.
Two constituents can be coordinated only when
they are fulfilling the same grammatical function
(with respect to a third head). In (3) they are play-
ing the role of adverbial adjuncts of went. Either
one can engage in that relation individually and
hence they can be coordinated while playing that
role. Likewise in (4) the adjective electronic and
the noun computer are both fine as left NP modi-
fiers. Therefore they can be conjoined as such. As
a final example, consider the sentences in (5). Be-
cause the direct object of the verb know can be re-
alized as either an NP or a sentential complement,
they can be coordinated in that role as shown in
(6).
(5) I know the answer.
I know that you don’t know it.
(6) I know [ the answer and that you don’t know
it ].
Clearly the recursive process of conjoining the
constituents is at the grammatic functional level.
We show next how we can solve this problem el-
egantly by mixing grammatical function and syn-
tactic category in the set of symbols for the tree
nodes of a TAG.
</bodyText>
<sectionHeader confidence="0.702715" genericHeader="method">
2 A Grammar of Grammatical
Functions and Syntactic Categories
</sectionHeader>
<bodyText confidence="0.999957375">
The elementary trees in our grammar are the pro-
jection of a lexical item as usual in Lexicalized
TAGs. However, root nodes do not correspond to
syntactic categories, but to grammatical functions.
The node for the function then dominates syntactic
category nodes, according to the way the function
is realized syntactically. Figure 1 shows trees for
an intransitive main clause and an NP subject.&apos;
</bodyText>
<figure confidence="0.9894728">
S Subj
✟✟❍❍
Subj 1 Pred NP
V P No
V o
</figure>
<figureCaption confidence="0.9589105">
Figure 1: Elementary trees for Intransitive Main
Clause and NP Subject.
</figureCaption>
<figure confidence="0.9990104">
NP NP
✟✟✟ ❍ ❍ ❍ ✟✟✟ ❍ ❍ ❍
AdnAdjLeft NP* AdnAdjLeft NP*
NP ADJP
No Ao
</figure>
<figureCaption confidence="0.95556575">
Figure 2: Elementary trees for Left Adnominal
Adjuncts.
Figure 2 has trees for NP left modifiers (adnom-
inal adjunct) realized either as an NP or an ADJP.
</figureCaption>
<bodyText confidence="0.994877769230769">
Finally, in Figure 3 we can see the trees for
coordination of left adnominal adjuncts. Notice
that they adjoin at the function node (AdnAdjLeft)
therefore allowing for the coordination of anything
that can fulfill that role, be them equal categories
as in (2) or the UCP case in (4). In Figure 4
we show an additional example with a PP right
NP modifier. It should be straightforward to see
how to build trees for AdnAdjRight coordination of
constituents realized by a PP or a relative clause.
In Figure 5 we finally get to subcategorization.
In any approach to grammar development we have
to make decisions between explicitly modeling
certain restrictions in the tree structure or through
features (of a feature based TAG). That can be
seen ubiquitously in the XTAG grammar (XTAG
Research Group, 2001). We can use the tree of the
figure with verbs such like eat and know, having
trees to realize the direct object as either an NP
or a sentence. Features in the lexical items would
prevent the derivation of eat with a sentential com-
plement. Another approach would be to further
detail the tree into one with a built in NP object
&apos;Figures generally show templates where a diamond indi-
cates where the lexical item would be substituted in, though
occasionally we insert the lexical item itself.
</bodyText>
<page confidence="0.969985">
138
</page>
<figure confidence="0.993257875">
AdnAdjLeft
�
������ � � � � �
NP ↓ CC* AdnAdjLeft∗
AdnAdjLeft
�
������ � � � � �
ADJP ↓ CC* AdnAdjLeft∗
</figure>
<figureCaption confidence="0.804812">
Figure 3: Elementary trees for Coordination of
Left Adnominal Adjuncts.
</figureCaption>
<figure confidence="0.984700666666667">
NP
��� � � �
NP∗ AdnAdjRight
PP
�� ��
Po NP ↓
</figure>
<figureCaption confidence="0.993485">
Figure 4: Elementary trees for a PP as Right Ad-
nominal Adjunct.
</figureCaption>
<bodyText confidence="0.99956">
and another with a sentential complement. How-
ever, realization constraints would still have to be
present to allow for the coordination of only the
constituents that are allowed for the specific verb.
For the reader unfamiliar with grammar modeling
we notice this is not a drawback of the approach.
Constraints beyond those represented in the struc-
ture are constantly made as a way to avoid irra-
tional growth of a grammar.
In Figure 6 we show still another interesting
case: the predicative clauses.2 We include it for
</bodyText>
<figure confidence="0.922192666666667">
2Again this is one approach to modeling predicatives,
Main
5
��� � � �
5ubj ↓ Pred
V P
�� �
�
Vo DirObj ↓
</figure>
<figureCaption confidence="0.994377">
Figure 5: Elementary tree for a Verb that has a
</figureCaption>
<figure confidence="0.884322555555556">
Direct Object
Main
5
�
���� � � �
5ubj ↓ NomPred
V P
��� � � �
Vaux[be] Predicative ↓
</figure>
<figureCaption confidence="0.999579">
Figure 6: Elementary tree for Predicative Clauses
</figureCaption>
<bodyText confidence="0.964601166666667">
this is a rich context for unlike coordination. One
can easily see how to generate trees for coordi-
nating NPs, PPs and ADJPs, as predicative con-
stituents so as to allow for (7).
(7) John was [ a gentlemen, always happy, and
never in bad mood ].
</bodyText>
<sectionHeader confidence="0.99903" genericHeader="conclusions">
3 Conclusions
</sectionHeader>
<bodyText confidence="0.977443068965517">
We showed in this paper how to build a Tree Ad-
joining Grammar of grammatical functions and
syntactic categories, mixed together in a princi-
pled way of function and possible realizations. It
brings the benefits of allowing handling language
phenomena which are generative at each of the
two sides.
In particular, we showed how it solves the prob-
lem of coordination of constituents of distinct syn-
tactic categories.
Elementary trees are not clumsy. On the con-
trary they bring additional information to the
structure with minimal addition of nodes. This in-
formation could otherwise be hidden in node fea-
tures, which are generally used to represent infor-
mation that would be costly to maintain explicit in
the tree structure.
Finally we can see that this structure can be eas-
ily incorporated in a supervised grammar infer-
ence algorithm such as that of (Xia, 2001), pro-
vided the annotated corpus has grammatical func-
tion information. In fact this is the case in the Penn
Treebank, and Xia’s algorithm allows it to be used
3. Inferring the different kinds of verbs, with re-
spect to the functions they subcategorize for and
with the auxiliary verb be anchoring the tree and the predica-
tive as a substitution node. The alternative used in the XTAG
grammar of having the predicative head as anchor would be
possible as well.
</bodyText>
<footnote confidence="0.9551225">
3The same is true of other algorithms such as (Chen and
Vijay-Shanker, 2000)’s.
</footnote>
<page confidence="0.997421">
139
</page>
<bodyText confidence="0.9839445">
their realizations is an important issue here, and is
also feasible (see (Kinyon and Prolo, 2002)).
</bodyText>
<sectionHeader confidence="0.879809" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.980616153846154">
Anne Abeill´e and Marie-Helene Candito. 2000. Ftag:
A lexicalized Tree Adjoining Grammar for French.
In Abeill´e and Rambow (Abeill´e and Rambow,
2000), pages 305–329.
Anne Abeill´e and Owen Rambow, editors. 2000.
Tree Adjoining Grammars: formalisms, linguistic
analysis and processing. CSLI, Stanford, CA, USA.
Anne Abeill´e. 2004. A lexicalist and construction-
based approach to coordinations. In Stefan
Mller, editor, Proceedings of the 10th International
Conference on HPSG (HPSG’03), Michigan State
University, Michigan, USA. Available at:
http://cslipublications.stanford.edu/HPSG/4.
Tilman Becker. 1993. HyTAG: A new Type of
Tree Adjoining Grammars for Hybrid Syntactic
Representation of Free Word Order Lang uages.
Ph.D. thesis, Universit¨at des Saarlandes.
Ann Bies, Mark Ferguson, Karen Katz, and Robert
MacIntyre. 1995. Bracketing guidelines for the
Penn Treebank II style Penn Treebank Project.
Marie-Helene Candito. 1998. Building parallel
LTAG for french and italian. In Proceedings of
the 36th Annual Meeting of the Association for
Computational Linguistics and 16th International
Conference on Computational Linguistics, pages
211–217, Montreal, Canada.
John Chen and K. Vijay-Shanker. 2000. Automated
extraction of TAGs from the Penn Treebank. In
Proceedings of the 6th International Workshop on
Parsing Technologies, Trento, Italy.
David Chiang. 2000. Statistical parsing with an
automatically-extracted Tree Adjoining Grammar.
In Proceedings of the 38th Annual Meeting of the
Association for Computational Linguistics, Hong
Kong, China.
N. Chomsky. 1957. Syntactic Structures. Mouton,
The Hague.
L. Cl´ement and A. Kinyon. 2003. Generating paral-
lel multilingual LFG-TAG grammars using a Meta-
Grammar. In Proceedings of the 41st Annual
Meeting of the Association for Computational
Linguistics, Sapporo, Japan.
Robert Frank. 2002. Phrase Structure Composition
and Syntactic Dependencies. MIT Press, Cam-
bridge, MA, USA.
Rebecca Hwa. 1999. Supervised Grammar Induction
Using Training Data with Limited Constituent Infor-
mation. In Proceedings of 37th Annual Meeting of
the Association for Computational Linguistics (ACL
’99), pages 20–26, College Park, MD, USA.
Aravind K. Joshi and Yves Schabes. 1997. Tree-
Adjoining Grammars. In A. Salomaa and G. Rozen-
berg, editors, Handbook of Formal Languages, vol-
ume 3, pages 69–123. Springer-Verlag, Berlin.
Aravind K. Joshi. 2001. The XTAG project at Penn.
In Proceedings of the 7th International Workshop on
Parsing Technologies (IWPT-2001), Beijing, China.
Invited speaker.
Alexandra Kinyon and Carlos A. Prolo. 2002. Iden-
tifying verb arguments and their syntactic function
in the Penn Treebank. In Proceedings of the Third
International Conference on Language Resources
and Evaluation (LREC), pages 1982–87, Las Pal-
mas, Spain.
Alexandra Kinyon. 2000. Hypertags. In
Proceedings of the 18th International Conference
on Computational Linguistics (COLING’2000),
Saarbr¨ucken, Germany.
Anthony S. Kroch and Aravind K. Joshi. 1985. The
linguistic relevance Tree Adjoining Grammar. Tech-
nical Report MS-CIS-85-16, University of Pennsyl-
vania.
Sususmu Kuno. 1987. Functional Grammar. Univer-
sity of Chicago Press, Chicago, Il, USA.
Mitchell Marcus, Grace Kim, Mary Ann
Marcinkiewicz, Robert MacIntyre, Ann Bies,
Mark Ferguson, Karen Katz, and Britta Schas-
berger. 1994. The Penn Treebank: Annotating
predicate argument structure. In Proceedings of the
1994 Human Language Technology Workshop.
Carlos A. Prolo. 2002. Coping with problems
in grammars automatically extracted from tree-
banks. In Proceedings of the Workshop on Grammar
Engineering and Evaluation, pages 36–42, Taipei,
Taiwan.
Ivan Sag. 2003. Coordination and underspecifi-
cation. In Jongbok Kim and Stephen Wechsler,
editors, Proceedings of the 9th International
Conference on HPSG (HPSG’02), Kyung-
Hee University, Seoul, Korea. Available at:
http://cslipublications.stanford.edu/HPSG/3/hpsg02.htm.
Fei Xia, Chung-Hye Han, Martha Palmer, and Aravind
Joshi. 2001. Automatically Extracting and Compar-
ing Lexicalized Grammars for Different Languages.
In Proc. of the Seventeenth International Joint
Conference on Artificial Intelligence (IJCAI-2001),
Seattle, Washington.
Fei Xia. 2001. Investigating the Relationship between
Grammars and Treebanks for Natural Languages.
Ph.D. thesis, Department of Computer and Informa-
tion Science, University of Pennsylvania.
The XTAG Research Group. 2001. A Lexicalized Tree
Adjoining Grammar for English. Technical Report
IRCS 01-03, University of Pennsylvania.
</reference>
<page confidence="0.997512">
140
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.940987">
<title confidence="0.9995775">Handling Unlike Coordinated Phrases in TAG by Mixing Category and Grammatical Function</title>
<author confidence="0.99208">A Carlos</author>
<affiliation confidence="0.98448">Faculdade de Inform´atica -</affiliation>
<address confidence="0.991624">Porto Alegre, RS, 90619-900,</address>
<email confidence="0.983967">prolo@inf.pucrs.br</email>
<abstract confidence="0.998903">Coordination of phrases of different syntactic categories has posed a problem for generative systems based only on syntactic categories. Although some prefer to treat them as exceptional cases that should require some extra mechanism (as for elliptical constructions), or to allow for unrestricted cross-category coordination, they can be naturally derived in a grammatic functional generative approach. In this paper we explore the ideia on how mixing syntactic categories and grammatical functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of sameand cross-category coordination in an uniform way.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anne Abeill´e</author>
<author>Marie-Helene Candito</author>
</authors>
<title>Ftag: A lexicalized Tree Adjoining Grammar for French. In Abeill´e and Rambow (Abeill´e and Rambow,</title>
<date>2000</date>
<pages>305--329</pages>
<marker>Abeill´e, Candito, 2000</marker>
<rawString>Anne Abeill´e and Marie-Helene Candito. 2000. Ftag: A lexicalized Tree Adjoining Grammar for French. In Abeill´e and Rambow (Abeill´e and Rambow, 2000), pages 305–329.</rawString>
</citation>
<citation valid="true">
<title>Tree Adjoining Grammars: formalisms, linguistic analysis and processing. CSLI,</title>
<date>2000</date>
<editor>Anne Abeill´e and Owen Rambow, editors.</editor>
<location>Stanford, CA, USA.</location>
<marker>2000</marker>
<rawString>Anne Abeill´e and Owen Rambow, editors. 2000. Tree Adjoining Grammars: formalisms, linguistic analysis and processing. CSLI, Stanford, CA, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anne Abeill´e</author>
</authors>
<title>A lexicalist and constructionbased approach to coordinations.</title>
<date>2004</date>
<booktitle>Proceedings of the 10th International Conference on HPSG (HPSG’03),</booktitle>
<editor>In Stefan Mller, editor,</editor>
<institution>Michigan State University,</institution>
<location>Michigan, USA.</location>
<note>Available at: http://cslipublications.stanford.edu/HPSG/4.</note>
<marker>Abeill´e, 2004</marker>
<rawString>Anne Abeill´e. 2004. A lexicalist and constructionbased approach to coordinations. In Stefan Mller, editor, Proceedings of the 10th International Conference on HPSG (HPSG’03), Michigan State University, Michigan, USA. Available at: http://cslipublications.stanford.edu/HPSG/4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tilman Becker</author>
</authors>
<title>HyTAG: A new Type of Tree Adjoining Grammars for Hybrid Syntactic Representation of Free Word Order Lang uages.</title>
<date>1993</date>
<tech>Ph.D. thesis,</tech>
<institution>Universit¨at des Saarlandes.</institution>
<contexts>
<context position="1313" citStr="Becker, 1993" startWordPosition="199" endWordPosition="200">functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less </context>
</contexts>
<marker>Becker, 1993</marker>
<rawString>Tilman Becker. 1993. HyTAG: A new Type of Tree Adjoining Grammars for Hybrid Syntactic Representation of Free Word Order Lang uages. Ph.D. thesis, Universit¨at des Saarlandes.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ann Bies</author>
<author>Mark Ferguson</author>
<author>Karen Katz</author>
<author>Robert MacIntyre</author>
</authors>
<title>Bracketing guidelines for the Penn Treebank II style Penn Treebank Project.</title>
<date>1995</date>
<contexts>
<context position="1647" citStr="Bies et al., 1995" startWordPosition="254" endWordPosition="257">o the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement and Kinyon, 2003), such tags are generally not seen as an essential part of the derivational process. Nevertheless coordination is such an </context>
<context position="3044" citStr="Bies et al., 1995" startWordPosition="484" endWordPosition="487">easily be handled in the traditional grammar approaches of syntactic category. (1) She flew [PP on May 1st and on July 4th ]. (2) They sell [ADJP electric and electronic ] products. Now look at the cases in (3) and (4). They are different in the sense that the coordination is across categories. This poses a strong problem to the traditional grammar of syntactic categories. This has been noticed for TAGs in (Prolo, 2002). Recently this has also been tackled in the HPSG framework by (Sag, 2003) and (Abeill´e, 2004). The Penn Treebank calls this constituents UCP for “Unlike Coordinated Phrases” (Bies et al., 1995). The problem is that we would need rules of the kind below (using context-free rules for short – see (Prolo, 2002) for TAGs). Basically all pairs of constituents can be coordinated but we can not assign to the resulting constituents either of the subconstituent tags. 137 Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 137–140, Sydney, July 2006. c�2006 Association for Computational Linguistics Main UCP —* ADVP CC PP UCP —* PP CC ADVP UCP —* ADJP CC NP UCP —* NP CC ADJP (3) She flew [?? yesterday and on July 4th ]. (4) They sell [?? electro</context>
</contexts>
<marker>Bies, Ferguson, Katz, MacIntyre, 1995</marker>
<rawString>Ann Bies, Mark Ferguson, Karen Katz, and Robert MacIntyre. 1995. Bracketing guidelines for the Penn Treebank II style Penn Treebank Project.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marie-Helene Candito</author>
</authors>
<title>Building parallel LTAG for french and italian.</title>
<date>1998</date>
<booktitle>In Proceedings of the 36th Annual Meeting of the Association for Computational Linguistics and 16th International Conference on Computational Linguistics,</booktitle>
<pages>211--217</pages>
<location>Montreal, Canada.</location>
<contexts>
<context position="1299" citStr="Candito, 1998" startWordPosition="197" endWordPosition="198">nd grammatical functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have be</context>
</contexts>
<marker>Candito, 1998</marker>
<rawString>Marie-Helene Candito. 1998. Building parallel LTAG for french and italian. In Proceedings of the 36th Annual Meeting of the Association for Computational Linguistics and 16th International Conference on Computational Linguistics, pages 211–217, Montreal, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Chen</author>
<author>K Vijay-Shanker</author>
</authors>
<title>Automated extraction of TAGs from the Penn Treebank.</title>
<date>2000</date>
<booktitle>In Proceedings of the 6th International Workshop on Parsing Technologies,</booktitle>
<location>Trento, Italy.</location>
<contexts>
<context position="1452" citStr="Chen and Vijay-Shanker, 2000" startWordPosition="218" endWordPosition="221">f same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the gra</context>
</contexts>
<marker>Chen, Vijay-Shanker, 2000</marker>
<rawString>John Chen and K. Vijay-Shanker. 2000. Automated extraction of TAGs from the Penn Treebank. In Proceedings of the 6th International Workshop on Parsing Technologies, Trento, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Chiang</author>
</authors>
<title>Statistical parsing with an automatically-extracted Tree Adjoining Grammar.</title>
<date>2000</date>
<booktitle>In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Hong Kong, China.</location>
<contexts>
<context position="1466" citStr="Chiang, 2000" startWordPosition="222" endWordPosition="223">rdination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as </context>
</contexts>
<marker>Chiang, 2000</marker>
<rawString>David Chiang. 2000. Statistical parsing with an automatically-extracted Tree Adjoining Grammar. In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics, Hong Kong, China.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<title>Syntactic Structures.</title>
<date>1957</date>
<publisher>Mouton, The Hague.</publisher>
<contexts>
<context position="1783" citStr="Chomsky, 1957" startWordPosition="277" endWordPosition="278">t based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement and Kinyon, 2003), such tags are generally not seen as an essential part of the derivational process. Nevertheless coordination is such an inherently functional phenomenon as we show next. Consider the sentences in (1) and (2). These are examples of regular coordination betw</context>
</contexts>
<marker>Chomsky, 1957</marker>
<rawString>N. Chomsky. 1957. Syntactic Structures. Mouton, The Hague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Cl´ement</author>
<author>A Kinyon</author>
</authors>
<title>Generating parallel multilingual LFG-TAG grammars using a MetaGrammar.</title>
<date>2003</date>
<booktitle>In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Sapporo, Japan.</location>
<marker>Cl´ement, Kinyon, 2003</marker>
<rawString>L. Cl´ement and A. Kinyon. 2003. Generating parallel multilingual LFG-TAG grammars using a MetaGrammar. In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Frank</author>
</authors>
<title>Phrase Structure Composition and Syntactic Dependencies.</title>
<date>2002</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA, USA.</location>
<contexts>
<context position="1326" citStr="Frank, 2002" startWordPosition="201" endWordPosition="202">he label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. A</context>
</contexts>
<marker>Frank, 2002</marker>
<rawString>Robert Frank. 2002. Phrase Structure Composition and Syntactic Dependencies. MIT Press, Cambridge, MA, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca Hwa</author>
</authors>
<title>Supervised Grammar Induction Using Training Data with Limited Constituent Information.</title>
<date>1999</date>
<booktitle>In Proceedings of 37th Annual Meeting of the Association for Computational Linguistics (ACL ’99),</booktitle>
<pages>20--26</pages>
<location>College Park, MD, USA.</location>
<contexts>
<context position="1477" citStr="Hwa, 1999" startWordPosition="224" endWordPosition="225">n uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito</context>
</contexts>
<marker>Hwa, 1999</marker>
<rawString>Rebecca Hwa. 1999. Supervised Grammar Induction Using Training Data with Limited Constituent Information. In Proceedings of 37th Annual Meeting of the Association for Computational Linguistics (ACL ’99), pages 20–26, College Park, MD, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind K Joshi</author>
<author>Yves Schabes</author>
</authors>
<title>TreeAdjoining Grammars.</title>
<date>1997</date>
<booktitle>Handbook of Formal Languages,</booktitle>
<volume>3</volume>
<pages>69--123</pages>
<editor>In A. Salomaa and G. Rozenberg, editors,</editor>
<publisher>Springer-Verlag,</publisher>
<location>Berlin.</location>
<contexts>
<context position="1351" citStr="Joshi and Schabes, 1997" startWordPosition="203" endWordPosition="206">of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of s</context>
</contexts>
<marker>Joshi, Schabes, 1997</marker>
<rawString>Aravind K. Joshi and Yves Schabes. 1997. TreeAdjoining Grammars. In A. Salomaa and G. Rozenberg, editors, Handbook of Formal Languages, volume 3, pages 69–123. Springer-Verlag, Berlin.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aravind K Joshi</author>
</authors>
<title>The XTAG project at Penn.</title>
<date>2001</date>
<booktitle>In Proceedings of the 7th International Workshop on Parsing Technologies (IWPT-2001),</booktitle>
<location>Beijing,</location>
<note>Invited speaker.</note>
<contexts>
<context position="1206" citStr="Joshi, 2001" startWordPosition="183" endWordPosition="184">enerative approach. In this paper we explore the ideia on how mixing syntactic categories and grammatical functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approac</context>
</contexts>
<marker>Joshi, 2001</marker>
<rawString>Aravind K. Joshi. 2001. The XTAG project at Penn. In Proceedings of the 7th International Workshop on Parsing Technologies (IWPT-2001), Beijing, China. Invited speaker.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexandra Kinyon</author>
<author>Carlos A Prolo</author>
</authors>
<title>Identifying verb arguments and their syntactic function in the Penn Treebank.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third International Conference on Language Resources and Evaluation (LREC),</booktitle>
<pages>1982--87</pages>
<location>Las Palmas,</location>
<marker>Kinyon, Prolo, 2002</marker>
<rawString>Alexandra Kinyon and Carlos A. Prolo. 2002. Identifying verb arguments and their syntactic function in the Penn Treebank. In Proceedings of the Third International Conference on Language Resources and Evaluation (LREC), pages 1982–87, Las Palmas, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexandra Kinyon</author>
</authors>
<title>Hypertags.</title>
<date>2000</date>
<booktitle>In Proceedings of the 18th International Conference on Computational Linguistics (COLING’2000),</booktitle>
<location>Saarbr¨ucken, Germany.</location>
<contexts>
<context position="2097" citStr="Kinyon, 2000" startWordPosition="328" endWordPosition="329"> al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement and Kinyon, 2003), such tags are generally not seen as an essential part of the derivational process. Nevertheless coordination is such an inherently functional phenomenon as we show next. Consider the sentences in (1) and (2). These are examples of regular coordination between phrases of the same category. They can easily be handled in the traditional grammar approaches of syntactic category. (1) She flew [PP on May 1st and on July 4th ]. (2) They sell [ADJP electric and electronic ] products. Now look at the cases in (3) and (4). They are different in the sense that the coordinati</context>
</contexts>
<marker>Kinyon, 2000</marker>
<rawString>Alexandra Kinyon. 2000. Hypertags. In Proceedings of the 18th International Conference on Computational Linguistics (COLING’2000), Saarbr¨ucken, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anthony S Kroch</author>
<author>Aravind K Joshi</author>
</authors>
<title>The linguistic relevance Tree Adjoining Grammar.</title>
<date>1985</date>
<tech>Technical Report MS-CIS-85-16,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="1256" citStr="Kroch and Joshi, 1985" startWordPosition="189" endWordPosition="192">lore the ideia on how mixing syntactic categories and grammatical functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such </context>
</contexts>
<marker>Kroch, Joshi, 1985</marker>
<rawString>Anthony S. Kroch and Aravind K. Joshi. 1985. The linguistic relevance Tree Adjoining Grammar. Technical Report MS-CIS-85-16, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sususmu Kuno</author>
</authors>
<title>Functional Grammar.</title>
<date>1987</date>
<publisher>University of Chicago Press,</publisher>
<location>Chicago, Il, USA.</location>
<contexts>
<context position="1891" citStr="Kuno, 1987" startWordPosition="293" endWordPosition="294">2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement and Kinyon, 2003), such tags are generally not seen as an essential part of the derivational process. Nevertheless coordination is such an inherently functional phenomenon as we show next. Consider the sentences in (1) and (2). These are examples of regular coordination between phrases of the same category. They can easily be handled in the traditional grammar approaches of syntac</context>
</contexts>
<marker>Kuno, 1987</marker>
<rawString>Sususmu Kuno. 1987. Functional Grammar. University of Chicago Press, Chicago, Il, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell Marcus</author>
<author>Grace Kim</author>
<author>Mary Ann Marcinkiewicz</author>
<author>Robert MacIntyre</author>
<author>Ann Bies</author>
<author>Mark Ferguson</author>
<author>Karen Katz</author>
<author>Britta Schasberger</author>
</authors>
<title>The Penn Treebank: Annotating predicate argument structure.</title>
<date>1994</date>
<booktitle>In Proceedings of the 1994 Human Language Technology Workshop.</booktitle>
<contexts>
<context position="1627" citStr="Marcus et al., 1994" startWordPosition="250" endWordPosition="253">tegories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement and Kinyon, 2003), such tags are generally not seen as an essential part of the derivational process. Nevertheless coor</context>
</contexts>
<marker>Marcus, Kim, Marcinkiewicz, MacIntyre, Bies, Ferguson, Katz, Schasberger, 1994</marker>
<rawString>Mitchell Marcus, Grace Kim, Mary Ann Marcinkiewicz, Robert MacIntyre, Ann Bies, Mark Ferguson, Karen Katz, and Britta Schasberger. 1994. The Penn Treebank: Annotating predicate argument structure. In Proceedings of the 1994 Human Language Technology Workshop.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carlos A Prolo</author>
</authors>
<title>Coping with problems in grammars automatically extracted from treebanks.</title>
<date>2002</date>
<booktitle>In Proceedings of the Workshop on Grammar Engineering and Evaluation,</booktitle>
<pages>36--42</pages>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="2849" citStr="Prolo, 2002" startWordPosition="455" endWordPosition="456">s such an inherently functional phenomenon as we show next. Consider the sentences in (1) and (2). These are examples of regular coordination between phrases of the same category. They can easily be handled in the traditional grammar approaches of syntactic category. (1) She flew [PP on May 1st and on July 4th ]. (2) They sell [ADJP electric and electronic ] products. Now look at the cases in (3) and (4). They are different in the sense that the coordination is across categories. This poses a strong problem to the traditional grammar of syntactic categories. This has been noticed for TAGs in (Prolo, 2002). Recently this has also been tackled in the HPSG framework by (Sag, 2003) and (Abeill´e, 2004). The Penn Treebank calls this constituents UCP for “Unlike Coordinated Phrases” (Bies et al., 1995). The problem is that we would need rules of the kind below (using context-free rules for short – see (Prolo, 2002) for TAGs). Basically all pairs of constituents can be coordinated but we can not assign to the resulting constituents either of the subconstituent tags. 137 Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 137–140, Sydney, July 2006. c�</context>
</contexts>
<marker>Prolo, 2002</marker>
<rawString>Carlos A. Prolo. 2002. Coping with problems in grammars automatically extracted from treebanks. In Proceedings of the Workshop on Grammar Engineering and Evaluation, pages 36–42, Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Sag</author>
</authors>
<title>Coordination and underspecification.</title>
<date>2003</date>
<booktitle>Proceedings of the 9th International Conference on HPSG (HPSG’02), KyungHee University, Seoul, Korea. Available at: http://cslipublications.stanford.edu/HPSG/3/hpsg02.htm.</booktitle>
<editor>In Jongbok Kim and Stephen Wechsler, editors,</editor>
<contexts>
<context position="2923" citStr="Sag, 2003" startWordPosition="468" endWordPosition="469">tences in (1) and (2). These are examples of regular coordination between phrases of the same category. They can easily be handled in the traditional grammar approaches of syntactic category. (1) She flew [PP on May 1st and on July 4th ]. (2) They sell [ADJP electric and electronic ] products. Now look at the cases in (3) and (4). They are different in the sense that the coordination is across categories. This poses a strong problem to the traditional grammar of syntactic categories. This has been noticed for TAGs in (Prolo, 2002). Recently this has also been tackled in the HPSG framework by (Sag, 2003) and (Abeill´e, 2004). The Penn Treebank calls this constituents UCP for “Unlike Coordinated Phrases” (Bies et al., 1995). The problem is that we would need rules of the kind below (using context-free rules for short – see (Prolo, 2002) for TAGs). Basically all pairs of constituents can be coordinated but we can not assign to the resulting constituents either of the subconstituent tags. 137 Proceedings of the 8th International Workshop on Tree Adjoining Grammar and Related Formalisms, pages 137–140, Sydney, July 2006. c�2006 Association for Computational Linguistics Main UCP —* ADVP CC PP UCP </context>
</contexts>
<marker>Sag, 2003</marker>
<rawString>Ivan Sag. 2003. Coordination and underspecification. In Jongbok Kim and Stephen Wechsler, editors, Proceedings of the 9th International Conference on HPSG (HPSG’02), KyungHee University, Seoul, Korea. Available at: http://cslipublications.stanford.edu/HPSG/3/hpsg02.htm.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Xia</author>
<author>Chung-Hye Han</author>
<author>Martha Palmer</author>
<author>Aravind Joshi</author>
</authors>
<title>Automatically Extracting and Comparing Lexicalized Grammars for Different Languages.</title>
<date>2001</date>
<booktitle>In Proc. of the Seventeenth International Joint</booktitle>
<contexts>
<context position="1495" citStr="Xia et al., 2001" startWordPosition="226" endWordPosition="229">ay. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 20</context>
</contexts>
<marker>Xia, Han, Palmer, Joshi, 2001</marker>
<rawString>Fei Xia, Chung-Hye Han, Martha Palmer, and Aravind Joshi. 2001. Automatically Extracting and Comparing Lexicalized Grammars for Different Languages. In Proc. of the Seventeenth International Joint</rawString>
</citation>
<citation valid="false">
<booktitle>Conference on Artificial Intelligence (IJCAI-2001),</booktitle>
<location>Seattle, Washington.</location>
<marker></marker>
<rawString>Conference on Artificial Intelligence (IJCAI-2001), Seattle, Washington.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fei Xia</author>
</authors>
<title>Investigating the Relationship between Grammars and Treebanks for Natural Languages.</title>
<date>2001</date>
<tech>Ph.D. thesis,</tech>
<institution>Department of Computer and Information Science, University of Pennsylvania.</institution>
<contexts>
<context position="1507" citStr="Xia, 2001" startWordPosition="230" endWordPosition="231"> Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on grammatical function such as that of Susumu Kuno (Kuno, 1987) have been given less importance. Although we can think of simply inserting functional labels in elementary trees or use them in a meta-level to generate the grammar, such as in (Candito, 1998; Kinyon, 2000; Cl´ement</context>
<context position="9032" citStr="Xia, 2001" startWordPosition="1557" endWordPosition="1558"> which are generative at each of the two sides. In particular, we showed how it solves the problem of coordination of constituents of distinct syntactic categories. Elementary trees are not clumsy. On the contrary they bring additional information to the structure with minimal addition of nodes. This information could otherwise be hidden in node features, which are generally used to represent information that would be costly to maintain explicit in the tree structure. Finally we can see that this structure can be easily incorporated in a supervised grammar inference algorithm such as that of (Xia, 2001), provided the annotated corpus has grammatical function information. In fact this is the case in the Penn Treebank, and Xia’s algorithm allows it to be used 3. Inferring the different kinds of verbs, with respect to the functions they subcategorize for and with the auxiliary verb be anchoring the tree and the predicative as a substitution node. The alternative used in the XTAG grammar of having the predicative head as anchor would be possible as well. 3The same is true of other algorithms such as (Chen and Vijay-Shanker, 2000)’s. 139 their realizations is an important issue here, and is also </context>
</contexts>
<marker>Xia, 2001</marker>
<rawString>Fei Xia. 2001. Investigating the Relationship between Grammars and Treebanks for Natural Languages. Ph.D. thesis, Department of Computer and Information Science, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>The XTAG Research Group</author>
</authors>
<title>A Lexicalized Tree Adjoining Grammar for English.</title>
<date>2001</date>
<tech>Technical Report IRCS 01-03,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="1233" citStr="Group, 2001" startWordPosition="187" endWordPosition="188"> paper we explore the ideia on how mixing syntactic categories and grammatical functions in the label set of a Tree Adjoining Grammar allows us to develop grammars that elegantly handle both the cases of same- and cross-category coordination in an uniform way. 1 Introduction Generative grammars that we commonly hear about in computational linguistics are usually based on syntactic categories. This is also the case when the formalism used is the Tree Adjoining Grammars (TAGs). Large scale handcrafted grammars for many languages have been built based on this paradigm (Joshi, 2001; XTAG Research Group, 2001; Kroch and Joshi, 1985; Abeill´e and Candito, 2000; Candito, 1998; Becker, 1993; Frank, 2002; Joshi and Schabes, 1997; Abeill´e and Rambow, 2000) as well as grammars extracted from corpora (Chen and Vijay-Shanker, 2000; Chiang, 2000; Hwa, 1999; Xia et al., 2001; Xia, 2001). The latter is partly due to the fact that large scale annotated corpora such as the Penn Treebank (Marcus et al., 1994; Bies et al., 1995) give primacy to syntactic categories. After all this is the most strongly sedimented generative approach at least since (Chomsky, 1957). Computational approaches of grammar based on gra</context>
<context position="6324" citStr="Group, 2001" startWordPosition="1067" endWordPosition="1068">ything that can fulfill that role, be them equal categories as in (2) or the UCP case in (4). In Figure 4 we show an additional example with a PP right NP modifier. It should be straightforward to see how to build trees for AdnAdjRight coordination of constituents realized by a PP or a relative clause. In Figure 5 we finally get to subcategorization. In any approach to grammar development we have to make decisions between explicitly modeling certain restrictions in the tree structure or through features (of a feature based TAG). That can be seen ubiquitously in the XTAG grammar (XTAG Research Group, 2001). We can use the tree of the figure with verbs such like eat and know, having trees to realize the direct object as either an NP or a sentence. Features in the lexical items would prevent the derivation of eat with a sentential complement. Another approach would be to further detail the tree into one with a built in NP object &apos;Figures generally show templates where a diamond indicates where the lexical item would be substituted in, though occasionally we insert the lexical item itself. 138 AdnAdjLeft � ������ � � � � � NP ↓ CC* AdnAdjLeft∗ AdnAdjLeft � ������ � � � � � ADJP ↓ CC* AdnAdjLeft∗ F</context>
</contexts>
<marker>Group, 2001</marker>
<rawString>The XTAG Research Group. 2001. A Lexicalized Tree Adjoining Grammar for English. Technical Report IRCS 01-03, University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>