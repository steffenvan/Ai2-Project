<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.010838">
<title confidence="0.993597">
Event Extraction for Balkan Languages
</title>
<author confidence="0.967983">
Vanni Zavarella, Dilek K¨uc¸¨uk, Hristo Tanev Ali H¨urriyeto˘glu
</author>
<affiliation confidence="0.7228475">
European Commission Center for Language Studies
Joint Research Centre Radboud University Nijmegen
</affiliation>
<address confidence="0.6657025">
Via E. Fermi 2749 P.O. Box 9103
21027 Ispra (VA), Italy NL-6500 HD Nijmegen
</address>
<email confidence="0.996472">
first.last@jrc.ec.europa.eu a.hurriyetoglu@let.ru.nl
</email>
<sectionHeader confidence="0.993786" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999913157894737">
We describe a system for real-time detec-
tion of security and crisis events from on-
line news in three Balkan languages: Turk-
ish, Romanian and Bulgarian. The system
classifies the events according to a fine-
grained event type set. It extracts struc-
tured information from news reports, by
using a blend of keyword matching and
finite-state grammars for entity recogni-
tion. We apply a multilingual methodol-
ogy for the development of the system’s
language resources, based on adaptation
of language-independent grammars and on
weakly-supervised learning of lexical re-
sources. Detailed performance evaluation
proves that the approach is effective in de-
veloping real-world semantic processing
applications for relatively less-resourced
languages.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999887466666667">
We describe a real-time event extraction system
for three less-resourced languages: Bulgarian, Ro-
manian and Turkish1. The goal of event extraction
is to identify instances of a specified set of event
types in natural language texts, and to retrieve
database-like, structured information about event
participants and attributes: these are the entities
that are involved in the event and fill type-specific
event roles (Ashish et al., 2006). For example,
in the fragment “Three workers were injured in
a building collapse”, the phrase “three workers”
will be assigned a semantic role Injured of the
event type ManMadeDisaster template.
Gathering and tracking such information over
time from electronic news media plays a crucial
</bodyText>
<footnote confidence="0.828290333333333">
1While belonging to three distant language families,
namely Slavic, Romance and Turkic, respectively, they are
spoken in the same geopolitical area, the Balkans.
</footnote>
<bodyText confidence="0.999736851851852">
role for the development of open-source intelli-
gence systems, particularly in the context of global
news monitoring of security threats, mass emer-
gencies and disease outbreaks (Yangarber et al.,
2005). In this view, it has been proved that be-
ing able to rely on highly multilingual text mining
tools and language resources is of paramount im-
portance, in order to achieve an unbiased coverage
of global news content (Steinberger, 2012).
The system language components include fi-
nite state-based entity extraction grammars and
domain-specific semantic lexica. These are
adapted to the target language from existing
language-independent resources or built by using
semi-supervised machine learning algorithms, re-
spectively. Most importantly, the lexical acquisi-
tion methods we put into place neither make use
of any language knowledge nor require to have an-
notated corpora available.
Section 2 outlines the main processing stages of
the application. In Section 3 we describe the meth-
ods applied to acquire and adapt the system’s lan-
guage knowledge bases. Finally, in Section 4 we
report on an evaluation on event type classification
and on the extraction of slot fillers for event tem-
plates, and we briefly discuss system performance
and prospective improvements.
</bodyText>
<sectionHeader confidence="0.922488" genericHeader="method">
2 System Architecture
</sectionHeader>
<bodyText confidence="0.99990675">
As depicted in Figure 1 (Tanev et al., 2009), first
news feeds are clustered, upstream of the event
extraction engine, by applying similarity metrics
over meta data (named entities, locations, cate-
gories) extracted from single articles by dedicated,
multilingual software.
Event extraction begins by preprocessing the ti-
tle and first three sentences of each article within
a cluster. This encompasses: fine-grained tok-
enization, sentence splitting, domain-specific dic-
tionary look-up (i.e. matching of key terms in-
dicating numbers, quantifiers, person titles, per-
</bodyText>
<page confidence="0.996667">
65
</page>
<note confidence="0.960423">
Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 65–68,
Gothenburg, Sweden, April 26-30 2014. c�2014 Association for Computational Linguistics
</note>
<figureCaption confidence="0.999806">
Figure 1: Event extraction processing chain
</figureCaption>
<bodyText confidence="0.999653526315789">
son groups descriptors like civilians, policemen
and Shiite), and finally morphological analysis,
simply consisting of lexicon look-up on large
domain-independent morphological dictionaries
from the MULTEXT project (Erjavec, 2004). Sub-
sequently, a multi-layer cascade of finite-state ex-
traction grammars in the ExPRESS formalism
(Piskorski, 2007) is applied on such more ab-
stract representation of the article text, in order
to: a)identify entity referring phrases, such as
persons, person groups, organizations, weapons,
etc. b) assign them to event specific roles by lin-
ear combination with event triggering surface pat-
terns. For example, in the text “Iraqi policemen
shot dead an alleged suicide bomber” the gram-
mar should extract the phrase “Iraqi policemen”
and assign to it the semantic role Perpetrator,
while the phrase “alleged suicide bomber” should
be extracted as Dead. We use a “lexicon” of 1/2-
slot patterns of the form:
&lt;DEAD[Per]&gt; was shot by &lt;PERP&gt;
&lt;KIDNAP[Per]&gt; has been taken hostage
where each slot position is assigned an event-
specific semantic role and includes a type restric-
tion (e.g. Person) on the entity which may fill
the slot.
Finally, we aggregate and validate information
extracted locally from each single article in the
same cluster, such as entity role assignment, vic-
tim counts and event type.
We categorize the main event from each cluster
with respect to a fine-grained event type set, shown
in Table 1.
The event classification module consists of a
blend of keyword matching, event role detection
and a set of rules controlling their interaction.
First, for each event type, we deploy: a) a list
of weighted regular expression keyword patterns:
each pattern match is awarded the corresponding
weight, and an event type is triggered when the
weight sum exceeds a defined threshold; b) a set of
boolean pattern combinations: OR pattern lists are
combined by the AND operator, each pattern is a
restricted regular expression and conjunctions are
restricted by proximity constraints. For example
in order to detect TerroristAttack we use the fol-
lowing combination (translated here in English):
(“bomb” OR “explosion” OR....) AND (“terrorist”
OR “Al Qaida” OR..).
Besides the event TYPE, the other main
slots of an output event frame include:
TYPE, DEAD, DEAD-COUNT, ARRESTED,
ARRESTED-COUNT, PERPETRATOR, WEAPON,
etc.
The system will be demonstrated using a KML-
aware earth browser2. Figure 2 shows a sample
output event template.
</bodyText>
<sectionHeader confidence="0.838325" genericHeader="method">
3 Development of language resources
</sectionHeader>
<bodyText confidence="0.944197703703703">
The system’s language components are:
Event grammar rules They consist of regular
expressions over flat feature structures whose el-
ements include, among the others, semantic types
from the domain lexica. We use them to locally
parse semantic entities such as person names, per-
son group descriptions, and their clausal combi-
nation with verbal event patterns (see Section 2).
Grammars in target languages are compiled by
adapting the existing rules from source languages,
such as English, while the bulk of grammar devel-
opment mostly consists of providing suitable lexi-
cal resources.
Semantic dictionaries Domain-specific lexica,
listing a number of (possibly multi-word) expres-
sions sub-categorized into semantic classes rel-
evant for the event domain, with limited or no
linguistic annotation, are used by entity recogni-
tion grammar rules. Such lexica were created us-
ing the weakly supervised terminology extraction
algorithm LexiClass (Ontopopulis), described in
(Tanev et al., 2009). In order to enforce syntactic
2E.g. Google Earth. Notice that Geocoding is cur-
rently performed at the level of article text by a language-
independent algorithm which is not yet integrated within the
event detection process, while Document Creation Date is
currently used as the event Date slot filler.
</bodyText>
<figure confidence="0.987805875">
Entity Role Victim
Disambiguator Arithmetic
Core Linguistic Analysis
Cascaded Event
Extraction Grammar
Application
Real Time Clusterer
Meta-Data Creation
Event Description
Assembly
Geo-Locating
News
News
Event Type
Classifier
66
</figure>
<figureCaption confidence="0.999832">
Figure 2: A sample output template of the system
</figureCaption>
<bodyText confidence="0.999874451612903">
constraints (e.g. Case) into event clause rules for
Romanian language, we have enriched learnt lex-
ical entries for the semantic classes with morpho-
logical annotations, using MULTEXT resources.
For Turkish, as we do not currently perform mor-
phological analysis, we have rather included com-
mon inflected forms of the applicable lexical en-
tries, resulting in larger lexica.
Event triggering patterns They are also ac-
quired semi-automatically, starting with a set of
seed examples and an article clustering, by deploy-
ing the paraphrase learning algorithm described in
(Tanev et al., 2008). For Bulgarian, the grammar,
semantic dictionaries and event patterns were cre-
ated simultaneously, following a semi-automatic
approach, described in (Tanev and Steinberger,
2013). In particular, we learned a list of terms
referring to people, institutions and organizations
and the corresponding pre- and post-modifiers
(about 5000 terms). In the same manner, we
learned about 550 surface patterns for killing, in-
juring, kidnapping and arresting actions, together
with a 4 level grammar cascade.
Keyword terms The keyword sets used in the
event type definitions, namely the OR lists in
the boolean pattern combinations (see Section 2
above), can be viewed as instances of some more
abstract semantic classes, that a domain expert
uses to model a target event scenario. These
classes are semi-automatically acquired using the
LexiClass algorithm, and then manually com-
</bodyText>
<tableCaption confidence="0.996955">
Table 1: Event type set
</tableCaption>
<table confidence="0.530719764705882">
AirMissileAttack Landslide
ArmedConflict LightningStrike
Arrest ManMadeDisaster
Assassination MaritimeAccident
Avalanche PhysicalAttack
BioChemicalAttack Robbery
Bombing Shooting
Disorder/Protest/Mutiny Stabbing
Earthquake Storm
Execution TerroristAttack
Explosion TropicalStorm
Floods Tsunami
HeatWave Vandalism
HeavyWeaponsFire VolcanicEruption
HostageVideoRelease Wildfire
HumanitarianCrisis WinterStorm
Kidnapping NONE
</table>
<bodyText confidence="0.979076">
bined. As Turkish is an agglutinative language,
we have frequently added wildcards at the ends of
keywords to cover possible inflected forms.
</bodyText>
<sectionHeader confidence="0.994002" genericHeader="evaluation">
4 Experiments and Evaluation
</sectionHeader>
<bodyText confidence="0.999687666666667">
System performance is evaluated on three differ-
ent extractive tasks, carried out on the titles and
first three sentences of single news articles: event
type classification, event role name/description ex-
traction and victim counting.
We collected test corpora of 52, 126 and 115
news articles for Bulgarian, Romanian and Turk-
ish, respectively, spanning over a time range of 2
months3. For each article in the gold standard, we
</bodyText>
<footnote confidence="0.997213">
3Articles were manually selected using news aggregators
such as Google News. Type distribution resulted in zeroes for
</footnote>
<page confidence="0.999492">
67
</page>
<tableCaption confidence="0.998482">
Table 2: System performance in single article extraction mode.
</tableCaption>
<table confidence="0.999018">
Lang Type Dead Injured Arrested Kidnapped Perpetrator Weapon
MRR mF MF MSE mF MF MSE mF MF MSE mF MF MSE mF MF mF MF
BG 0.34 0.27 0.68 17.08 0.44 0.6 108.82 0.22 1.0 7.69 0.4 0.5 0.71 0.0 0.0 0.39 1.0
RO 0.22 0.48 0.73 36.53 0.46 0.97 18.57 0.39 0.82 80.5 0.2 1.0 2.14 0.07 0.67 0.1 0.2
TR 0.66 0.73 0.79 16.41 0.85 0.91 0.24 0.31 0.36 52.17 0.4 0.33 0.82 0.25 0.67 0.77 1.0
</table>
<bodyText confidence="0.99886375">
annotated: a list of applicable types, ordered by
relevance, for the main event reported in the arti-
cle; the set of all the names/descriptions occurring
in the text for each applicable event role, merging
morphological variants; the cumulative count for
the roles Dead, Injured, Kidnapped and Arrested.
Event type classification is evaluated by apply-
ing an adapted version of the mean reciprocal rank
(MRR) score, used in Information Retrieval to
evaluate processes producing a list of relevance or-
dered query responses. In our case, the MRR for a
set of N articles is:
</bodyText>
<equation confidence="0.78898">
1
MRR = |N|
</equation>
<bodyText confidence="0.998318235294118">
where rank is the rank of the system type re-
sponse within the gold standard type list for each
article.
For each role name/description extraction sepa-
rately, we compute standard Precision, Recall and
F1-measure on system responses, based on partial,
n-gram match with gold standard responses, ignor-
ing morphological suffixes.
Finally, we record the root Mean Squared Er-
ror (MSE) of system output victim count values
against gold standard, over all applicable roles.
Table 2 summarizes the evaluation results. mF
and MF columns for each role description task
represent respectively the micro and macro aver-
age F1-measure over the test set.
Overall, the performance figures are in line with
previous evaluations on other languages (Tanev et
al., 2009). This proves the methodology is ef-
fective on adapting the system to new languages
even with little lexical and syntactical proximity.
Turkish system consistently outperforms the oth-
ers, and it also underwent the most resource devel-
opment cycles: this suggests that applying learn-
ing iterations, alternated with human filtering, to
the language resources, can increase system ac-
curacy, eventually making it usable for real-world
applications. System accuracy is still unreliable
for victim counting. One of the main reasons for
large errors in victim counting is that the system
some less frequent event types.
interprets historical victim statistics reported in ar-
ticles as event instances. We are currently imple-
menting temporal and discourse heuristics to mit-
igate this problem.
</bodyText>
<sectionHeader confidence="0.998288" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.993807">
This study is supported in part by a postdoctoral
research grant from T ¨UB˙ITAK and by the Dutch
national program COMMIT.
</bodyText>
<sectionHeader confidence="0.998931" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999556666666666">
Naveen Ashish, Doug Appelt, Dayne Freitag, and
Dmitry Zelenko. 2006. Proceedings of the work-
shop on event extraction and synthesis. Technical
report, AAAI.
Tomaz Erjavec. 2004. MULTEXT-East morphosyn-
tactic specifications.
Jakub Piskorski. 2007. ExPRESS–extraction pattern
recognition engine and specification suite. In Pro-
ceedings of the International Workshop Finite-State
Methods and Natural language Processing.
Ralf Steinberger. 2012. A survey of methods to ease
the development of highly multilingual text mining
applications. Language Resources and Evaluation,
46(2):155–176.
Hristo Tanev and Josef Steinberger. 2013. Semi-
automatic acquisition of lexical resources and gram-
mars for event extraction in Bulgarian and Czech. In
Proceedings of the 4th Biennial International Work-
shop on Balto-Slavic Natural Language Processing,
pages 110–118.
Hristo Tanev, Jakub Piskorski, and Martin Atkinson.
2008. Real-time news event extraction for global
crisis monitoring. In E. Kapetanios, V. Sugumaran,
and M. Spiliopoulou, editors, Natural Language and
Information Systems, volume 5039 of Lecture Notes
in Computer Science, pages 207–218.
Hristo Tanev, Vanni Zavarella, Jens Linge, Mijail
Kabadjov, Jakub Piskorski, Martin Atkinson, and
Ralf Steinberger. 2009. Exploiting Machine Learn-
ing Techniques to Build an Event Extraction Sys-
tem for Portuguese and Spanish. Linguam´atica,
1(2):55–66.
Roman Yangarber, Lauri Jokipii, Antti Rauramo, and
Silja Huttunen. 2005. Extracting information about
outbreaks of infectious epidemics. In Proceedings
of the HLT/EMNLP.
</reference>
<footnote confidence="0.4343245">
N 1
i=1 ranki
</footnote>
<page confidence="0.996044">
68
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.551099">
<title confidence="0.998771">Event Extraction for Balkan Languages</title>
<author confidence="0.780846">Dilek Hristo Tanev Ali H¨urriyeto˘glu Zavarella</author>
<affiliation confidence="0.828633">European Commission Center for Language Studies Joint Research Centre Radboud University Nijmegen</affiliation>
<address confidence="0.981286">Via E. Fermi 2749 P.O. Box 9103 21027 Ispra (VA), Italy NL-6500 HD</address>
<email confidence="0.92266">first.last@jrc.ec.europa.eua.hurriyetoglu@let.ru.nl</email>
<abstract confidence="0.99696295">We describe a system for real-time detection of security and crisis events from online news in three Balkan languages: Turkish, Romanian and Bulgarian. The system classifies the events according to a finegrained event type set. It extracts structured information from news reports, by using a blend of keyword matching and finite-state grammars for entity recognition. We apply a multilingual methodology for the development of the system’s language resources, based on adaptation of language-independent grammars and on weakly-supervised learning of lexical resources. Detailed performance evaluation proves that the approach is effective in developing real-world semantic processing applications for relatively less-resourced languages.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Naveen Ashish</author>
<author>Doug Appelt</author>
<author>Dayne Freitag</author>
<author>Dmitry Zelenko</author>
</authors>
<title>workshop on event extraction and synthesis.</title>
<date>2006</date>
<booktitle>Proceedings of the</booktitle>
<tech>Technical report, AAAI.</tech>
<contexts>
<context position="1531" citStr="Ashish et al., 2006" startWordPosition="215" endWordPosition="218">tailed performance evaluation proves that the approach is effective in developing real-world semantic processing applications for relatively less-resourced languages. 1 Introduction We describe a real-time event extraction system for three less-resourced languages: Bulgarian, Romanian and Turkish1. The goal of event extraction is to identify instances of a specified set of event types in natural language texts, and to retrieve database-like, structured information about event participants and attributes: these are the entities that are involved in the event and fill type-specific event roles (Ashish et al., 2006). For example, in the fragment “Three workers were injured in a building collapse”, the phrase “three workers” will be assigned a semantic role Injured of the event type ManMadeDisaster template. Gathering and tracking such information over time from electronic news media plays a crucial 1While belonging to three distant language families, namely Slavic, Romance and Turkic, respectively, they are spoken in the same geopolitical area, the Balkans. role for the development of open-source intelligence systems, particularly in the context of global news monitoring of security threats, mass emergen</context>
</contexts>
<marker>Ashish, Appelt, Freitag, Zelenko, 2006</marker>
<rawString>Naveen Ashish, Doug Appelt, Dayne Freitag, and Dmitry Zelenko. 2006. Proceedings of the workshop on event extraction and synthesis. Technical report, AAAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tomaz Erjavec</author>
</authors>
<title>MULTEXT-East morphosyntactic specifications.</title>
<date>2004</date>
<contexts>
<context position="4336" citStr="Erjavec, 2004" startWordPosition="627" endWordPosition="628">pecific dictionary look-up (i.e. matching of key terms indicating numbers, quantifiers, person titles, per65 Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 65–68, Gothenburg, Sweden, April 26-30 2014. c�2014 Association for Computational Linguistics Figure 1: Event extraction processing chain son groups descriptors like civilians, policemen and Shiite), and finally morphological analysis, simply consisting of lexicon look-up on large domain-independent morphological dictionaries from the MULTEXT project (Erjavec, 2004). Subsequently, a multi-layer cascade of finite-state extraction grammars in the ExPRESS formalism (Piskorski, 2007) is applied on such more abstract representation of the article text, in order to: a)identify entity referring phrases, such as persons, person groups, organizations, weapons, etc. b) assign them to event specific roles by linear combination with event triggering surface patterns. For example, in the text “Iraqi policemen shot dead an alleged suicide bomber” the grammar should extract the phrase “Iraqi policemen” and assign to it the semantic role Perpetrator, while the phrase “a</context>
</contexts>
<marker>Erjavec, 2004</marker>
<rawString>Tomaz Erjavec. 2004. MULTEXT-East morphosyntactic specifications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jakub Piskorski</author>
</authors>
<title>ExPRESS–extraction pattern recognition engine and specification suite.</title>
<date>2007</date>
<booktitle>In Proceedings of the International Workshop Finite-State Methods and Natural language Processing.</booktitle>
<contexts>
<context position="4452" citStr="Piskorski, 2007" startWordPosition="643" endWordPosition="644">edings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 65–68, Gothenburg, Sweden, April 26-30 2014. c�2014 Association for Computational Linguistics Figure 1: Event extraction processing chain son groups descriptors like civilians, policemen and Shiite), and finally morphological analysis, simply consisting of lexicon look-up on large domain-independent morphological dictionaries from the MULTEXT project (Erjavec, 2004). Subsequently, a multi-layer cascade of finite-state extraction grammars in the ExPRESS formalism (Piskorski, 2007) is applied on such more abstract representation of the article text, in order to: a)identify entity referring phrases, such as persons, person groups, organizations, weapons, etc. b) assign them to event specific roles by linear combination with event triggering surface patterns. For example, in the text “Iraqi policemen shot dead an alleged suicide bomber” the grammar should extract the phrase “Iraqi policemen” and assign to it the semantic role Perpetrator, while the phrase “alleged suicide bomber” should be extracted as Dead. We use a “lexicon” of 1/2- slot patterns of the form: &lt;DEAD[Per]</context>
</contexts>
<marker>Piskorski, 2007</marker>
<rawString>Jakub Piskorski. 2007. ExPRESS–extraction pattern recognition engine and specification suite. In Proceedings of the International Workshop Finite-State Methods and Natural language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralf Steinberger</author>
</authors>
<title>A survey of methods to ease the development of highly multilingual text mining applications. Language Resources and Evaluation,</title>
<date>2012</date>
<pages>46--2</pages>
<contexts>
<context position="2416" citStr="Steinberger, 2012" startWordPosition="354" endWordPosition="355">media plays a crucial 1While belonging to three distant language families, namely Slavic, Romance and Turkic, respectively, they are spoken in the same geopolitical area, the Balkans. role for the development of open-source intelligence systems, particularly in the context of global news monitoring of security threats, mass emergencies and disease outbreaks (Yangarber et al., 2005). In this view, it has been proved that being able to rely on highly multilingual text mining tools and language resources is of paramount importance, in order to achieve an unbiased coverage of global news content (Steinberger, 2012). The system language components include finite state-based entity extraction grammars and domain-specific semantic lexica. These are adapted to the target language from existing language-independent resources or built by using semi-supervised machine learning algorithms, respectively. Most importantly, the lexical acquisition methods we put into place neither make use of any language knowledge nor require to have annotated corpora available. Section 2 outlines the main processing stages of the application. In Section 3 we describe the methods applied to acquire and adapt the system’s language</context>
</contexts>
<marker>Steinberger, 2012</marker>
<rawString>Ralf Steinberger. 2012. A survey of methods to ease the development of highly multilingual text mining applications. Language Resources and Evaluation, 46(2):155–176.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hristo Tanev</author>
<author>Josef Steinberger</author>
</authors>
<title>Semiautomatic acquisition of lexical resources and grammars for event extraction in Bulgarian and Czech.</title>
<date>2013</date>
<booktitle>In Proceedings of the 4th Biennial International Workshop on Balto-Slavic Natural Language Processing,</booktitle>
<pages>110--118</pages>
<contexts>
<context position="8934" citStr="Tanev and Steinberger, 2013" startWordPosition="1329" endWordPosition="1332"> with morphological annotations, using MULTEXT resources. For Turkish, as we do not currently perform morphological analysis, we have rather included common inflected forms of the applicable lexical entries, resulting in larger lexica. Event triggering patterns They are also acquired semi-automatically, starting with a set of seed examples and an article clustering, by deploying the paraphrase learning algorithm described in (Tanev et al., 2008). For Bulgarian, the grammar, semantic dictionaries and event patterns were created simultaneously, following a semi-automatic approach, described in (Tanev and Steinberger, 2013). In particular, we learned a list of terms referring to people, institutions and organizations and the corresponding pre- and post-modifiers (about 5000 terms). In the same manner, we learned about 550 surface patterns for killing, injuring, kidnapping and arresting actions, together with a 4 level grammar cascade. Keyword terms The keyword sets used in the event type definitions, namely the OR lists in the boolean pattern combinations (see Section 2 above), can be viewed as instances of some more abstract semantic classes, that a domain expert uses to model a target event scenario. These cla</context>
</contexts>
<marker>Tanev, Steinberger, 2013</marker>
<rawString>Hristo Tanev and Josef Steinberger. 2013. Semiautomatic acquisition of lexical resources and grammars for event extraction in Bulgarian and Czech. In Proceedings of the 4th Biennial International Workshop on Balto-Slavic Natural Language Processing, pages 110–118.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hristo Tanev</author>
<author>Jakub Piskorski</author>
<author>Martin Atkinson</author>
</authors>
<title>Real-time news event extraction for global crisis monitoring.</title>
<date>2008</date>
<booktitle>Natural Language and Information Systems,</booktitle>
<volume>5039</volume>
<pages>207--218</pages>
<editor>In E. Kapetanios, V. Sugumaran, and M. Spiliopoulou, editors,</editor>
<contexts>
<context position="8755" citStr="Tanev et al., 2008" startWordPosition="1306" endWordPosition="1309">mple output template of the system constraints (e.g. Case) into event clause rules for Romanian language, we have enriched learnt lexical entries for the semantic classes with morphological annotations, using MULTEXT resources. For Turkish, as we do not currently perform morphological analysis, we have rather included common inflected forms of the applicable lexical entries, resulting in larger lexica. Event triggering patterns They are also acquired semi-automatically, starting with a set of seed examples and an article clustering, by deploying the paraphrase learning algorithm described in (Tanev et al., 2008). For Bulgarian, the grammar, semantic dictionaries and event patterns were created simultaneously, following a semi-automatic approach, described in (Tanev and Steinberger, 2013). In particular, we learned a list of terms referring to people, institutions and organizations and the corresponding pre- and post-modifiers (about 5000 terms). In the same manner, we learned about 550 surface patterns for killing, injuring, kidnapping and arresting actions, together with a 4 level grammar cascade. Keyword terms The keyword sets used in the event type definitions, namely the OR lists in the boolean p</context>
</contexts>
<marker>Tanev, Piskorski, Atkinson, 2008</marker>
<rawString>Hristo Tanev, Jakub Piskorski, and Martin Atkinson. 2008. Real-time news event extraction for global crisis monitoring. In E. Kapetanios, V. Sugumaran, and M. Spiliopoulou, editors, Natural Language and Information Systems, volume 5039 of Lecture Notes in Computer Science, pages 207–218.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hristo Tanev</author>
<author>Vanni Zavarella</author>
<author>Jens Linge</author>
<author>Mijail Kabadjov</author>
<author>Jakub Piskorski</author>
<author>Martin Atkinson</author>
<author>Ralf Steinberger</author>
</authors>
<date>2009</date>
<booktitle>Exploiting Machine Learning Techniques to Build an Event Extraction System for Portuguese</booktitle>
<contexts>
<context position="3309" citStr="Tanev et al., 2009" startWordPosition="488" endWordPosition="491">espectively. Most importantly, the lexical acquisition methods we put into place neither make use of any language knowledge nor require to have annotated corpora available. Section 2 outlines the main processing stages of the application. In Section 3 we describe the methods applied to acquire and adapt the system’s language knowledge bases. Finally, in Section 4 we report on an evaluation on event type classification and on the extraction of slot fillers for event templates, and we briefly discuss system performance and prospective improvements. 2 System Architecture As depicted in Figure 1 (Tanev et al., 2009), first news feeds are clustered, upstream of the event extraction engine, by applying similarity metrics over meta data (named entities, locations, categories) extracted from single articles by dedicated, multilingual software. Event extraction begins by preprocessing the title and first three sentences of each article within a cluster. This encompasses: fine-grained tokenization, sentence splitting, domain-specific dictionary look-up (i.e. matching of key terms indicating numbers, quantifiers, person titles, per65 Proceedings of the Demonstrations at the 14th Conference of the European Chapt</context>
<context position="7590" citStr="Tanev et al., 2009" startWordPosition="1130" endWordPosition="1133">ction 2). Grammars in target languages are compiled by adapting the existing rules from source languages, such as English, while the bulk of grammar development mostly consists of providing suitable lexical resources. Semantic dictionaries Domain-specific lexica, listing a number of (possibly multi-word) expressions sub-categorized into semantic classes relevant for the event domain, with limited or no linguistic annotation, are used by entity recognition grammar rules. Such lexica were created using the weakly supervised terminology extraction algorithm LexiClass (Ontopopulis), described in (Tanev et al., 2009). In order to enforce syntactic 2E.g. Google Earth. Notice that Geocoding is currently performed at the level of article text by a languageindependent algorithm which is not yet integrated within the event detection process, while Document Creation Date is currently used as the event Date slot filler. Entity Role Victim Disambiguator Arithmetic Core Linguistic Analysis Cascaded Event Extraction Grammar Application Real Time Clusterer Meta-Data Creation Event Description Assembly Geo-Locating News News Event Type Classifier 66 Figure 2: A sample output template of the system constraints (e.g. C</context>
<context position="12557" citStr="Tanev et al., 2009" startWordPosition="1890" endWordPosition="1893">tion extraction separately, we compute standard Precision, Recall and F1-measure on system responses, based on partial, n-gram match with gold standard responses, ignoring morphological suffixes. Finally, we record the root Mean Squared Error (MSE) of system output victim count values against gold standard, over all applicable roles. Table 2 summarizes the evaluation results. mF and MF columns for each role description task represent respectively the micro and macro average F1-measure over the test set. Overall, the performance figures are in line with previous evaluations on other languages (Tanev et al., 2009). This proves the methodology is effective on adapting the system to new languages even with little lexical and syntactical proximity. Turkish system consistently outperforms the others, and it also underwent the most resource development cycles: this suggests that applying learning iterations, alternated with human filtering, to the language resources, can increase system accuracy, eventually making it usable for real-world applications. System accuracy is still unreliable for victim counting. One of the main reasons for large errors in victim counting is that the system some less frequent ev</context>
</contexts>
<marker>Tanev, Zavarella, Linge, Kabadjov, Piskorski, Atkinson, Steinberger, 2009</marker>
<rawString>Hristo Tanev, Vanni Zavarella, Jens Linge, Mijail Kabadjov, Jakub Piskorski, Martin Atkinson, and Ralf Steinberger. 2009. Exploiting Machine Learning Techniques to Build an Event Extraction System for Portuguese and Spanish. Linguam´atica, 1(2):55–66.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roman Yangarber</author>
<author>Lauri Jokipii</author>
<author>Antti Rauramo</author>
<author>Silja Huttunen</author>
</authors>
<title>Extracting information about outbreaks of infectious epidemics.</title>
<date>2005</date>
<booktitle>In Proceedings of the HLT/EMNLP.</booktitle>
<contexts>
<context position="2182" citStr="Yangarber et al., 2005" startWordPosition="312" endWordPosition="315">nt “Three workers were injured in a building collapse”, the phrase “three workers” will be assigned a semantic role Injured of the event type ManMadeDisaster template. Gathering and tracking such information over time from electronic news media plays a crucial 1While belonging to three distant language families, namely Slavic, Romance and Turkic, respectively, they are spoken in the same geopolitical area, the Balkans. role for the development of open-source intelligence systems, particularly in the context of global news monitoring of security threats, mass emergencies and disease outbreaks (Yangarber et al., 2005). In this view, it has been proved that being able to rely on highly multilingual text mining tools and language resources is of paramount importance, in order to achieve an unbiased coverage of global news content (Steinberger, 2012). The system language components include finite state-based entity extraction grammars and domain-specific semantic lexica. These are adapted to the target language from existing language-independent resources or built by using semi-supervised machine learning algorithms, respectively. Most importantly, the lexical acquisition methods we put into place neither mak</context>
</contexts>
<marker>Yangarber, Jokipii, Rauramo, Huttunen, 2005</marker>
<rawString>Roman Yangarber, Lauri Jokipii, Antti Rauramo, and Silja Huttunen. 2005. Extracting information about outbreaks of infectious epidemics. In Proceedings of the HLT/EMNLP.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>