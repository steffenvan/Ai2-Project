<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.010251">
<title confidence="0.826548">
Decipherment
</title>
<author confidence="0.959797">
Kevin Knight
</author>
<affiliation confidence="0.792235">
USC/ISI
</affiliation>
<address confidence="0.830501">
4676 Admiralty Way
Marina del Rey CA 90292
</address>
<email confidence="0.999361">
knight@isi.edu
</email>
<sectionHeader confidence="0.995648" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999713818181818">
The first natural language processing sys-
tems had a straightforward goal: deci-
pher coded messages sent by the en-
emy. This tutorial explores connections
between early decipherment research and
today’s NLP work. We cover classic mili-
tary and diplomatic ciphers, automatic de-
cipherment algorithms, unsolved ciphers,
language translation as decipherment, and
analyzing ancient writing as decipher-
ment.
</bodyText>
<sectionHeader confidence="0.987179" genericHeader="method">
1 Tutorial Overview
</sectionHeader>
<bodyText confidence="0.999935888888889">
The first natural language processing systems had
a straightforward goal: decipher coded messages
sent by the enemy. Sixty years later, we have many
more applications, including web search, ques-
tion answering, summarization, speech recogni-
tion, and language translation. This tutorial ex-
plores connections between early decipherment
research and today’s NLP work. We find that
many ideas from the earlier era have become core
to the field, while others still remain to be picked
up and developed.
We first cover classic military and diplomatic
cipher types, including complex substitution ci-
phers implemented in the first electro-mechanical
encryption machines. We look at mathematical
tools (language recognition, frequency counting,
smoothing) developed to decrypt such ciphers on
proto-computers. We show algorithms and exten-
sive empirical results for solving different types of
ciphers, and we show the role of algorithms in re-
cent decipherments of historical documents.
We then look at how foreign language can be
viewed as a code for English, a concept devel-
oped by Alan Turing and Warren Weaver. We de-
scribe recently published work on building auto-
matic translation systems from non-parallel data.
We also demonstrate how some of the same algo-
rithmic tools can be applied to natural language
tasks like part-of-speech tagging and word align-
ment.
Turning back to historical ciphers, we explore a
number of unsolved ciphers, giving results of ini-
tial computer experiments on several of them. Fi-
nally, we look briefly at writing as a way to enci-
pher phoneme sequences, covering ancient scripts
and modern applications.
</bodyText>
<sectionHeader confidence="0.87289" genericHeader="method">
2 Outline
</sectionHeader>
<listItem confidence="0.983440947368421">
1. Classical military/diplomatic ciphers (15
minutes)
• 60 cipher types (ACA)
• Ciphers vs. codes
• Enigma cipher: the mother of natural
language processing
– computer analysis of text
– language recognition
– Good-Turing smoothing
2. Foreign language as a code (10 minutes)
• Alan Turing’s ”Thinking Machines”
• Warren Weaver’s Memorandum
3. Automatic decipherment (55 minutes)
• Cipher type detection
• Substitution ciphers (simple, homo-
phonic, polyalphabetic, etc)
– plaintext language recognition
∗ how much plaintext knowledge is
needed
</listItem>
<page confidence="0.945021">
3
</page>
<bodyText confidence="0.70970875">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 3–4,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
* index of coincidence, unicity dis-
tance, and other measures
</bodyText>
<listItem confidence="0.879057">
– navigating a difficult search space
* frequencies of letters and words
* pattern words and cribs
* EM, ILP, Bayesian models, sam-
pling
– recent decipherments
* Jefferson cipher, Copiale cipher,
civil war ciphers, naval Enigma
• Application to part-of-speech tagging,
word alignment
• Application to machine translation with-
out parallel text
• Parallel development of cryptography
and translation
• Recently released NSA internal
newsletter (1974-1997)
4. *** Break *** (30 minutes)
5. Unsolved ciphers (40 minutes)
• Zodiac 340 (1969), including computa-
tional work
• Voynich Manuscript (early 1400s), in-
cluding computational work
• Beale (1885)
• Dorabella (1897)
• Taman Shud (1948)
• Kryptos (1990), including computa-
tional work
• McCormick (1999)
• Shoeboxes in attics: DuPonceau jour-
nal, Finnerana, SYP, Mopse, diptych
6. Writing as a code (20 minutes)
• Does writing encode ideas, or does it en-
code phonemes?
• Ancient script decipherment
– Egyptian hieroglyphs
– Linear B
– Mayan glyphs
– Ugaritic, including computational
work
– Chinese N¨ushu, including computa-
tional work
• Automatic phonetic decipherment
• Application to transliteration
7. Undeciphered writing systems (15 minutes)
• Indus Valley Script (3300BC)
• Linear A (1900BC)
• Phaistos disc (1700BC?)
• Rongorongo (1800s?)
8. Conclusion and further questions (15 min-
utes)
</listItem>
<sectionHeader confidence="0.989138" genericHeader="method">
3 About the Presenter
</sectionHeader>
<bodyText confidence="0.983771625">
Kevin Knight is a Senior Research Scientist and
Fellow at the Information Sciences Institute of the
University of Southern California (USC), and a
Research Professor in USC’s Computer Science
Department. He received a PhD in computer sci-
ence from Carnegie Mellon University and a bach-
elor’s degree from Harvard University. Profes-
sor Knight’s research interests include natural lan-
guage processing, machine translation, automata
theory, and decipherment. In 2001, he co-founded
Language Weaver, Inc., and in 2011, he served
as President of the Association for Computational
Linguistics. Dr. Knight has taught computer sci-
ence courses at USC for more than fifteen years
and co-authored the widely adopted textbook Ar-
tificial Intelligence.
</bodyText>
<page confidence="0.99297">
4
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.008034">
<title confidence="0.983467">Decipherment</title>
<author confidence="0.790451">Kevin</author>
<address confidence="0.768082">4676 Admiralty</address>
<author confidence="0.98873">Marina del Rey CA</author>
<email confidence="0.999214">knight@isi.edu</email>
<abstract confidence="0.917551601694916">The first natural language processing systems had a straightforward goal: decipher coded messages sent by the enemy. This tutorial explores connections between early decipherment research and today’s NLP work. We cover classic military and diplomatic ciphers, automatic decipherment algorithms, unsolved ciphers, language translation as decipherment, and analyzing ancient writing as decipherment. 1 Tutorial Overview The first natural language processing systems had a straightforward goal: decipher coded messages sent by the enemy. Sixty years later, we have many more applications, including web search, question answering, summarization, speech recognition, and language translation. This tutorial explores connections between early decipherment research and today’s NLP work. We find that many ideas from the earlier era have become core to the field, while others still remain to be picked up and developed. We first cover classic military and diplomatic cipher types, including complex substitution ciphers implemented in the first electro-mechanical encryption machines. We look at mathematical tools (language recognition, frequency counting, smoothing) developed to decrypt such ciphers on proto-computers. We show algorithms and extensive empirical results for solving different types of ciphers, and we show the role of algorithms in recent decipherments of historical documents. We then look at how foreign language can be viewed as a code for English, a concept developed by Alan Turing and Warren Weaver. We describe recently published work on building automatic translation systems from non-parallel data. We also demonstrate how some of the same algorithmic tools can be applied to natural language tasks like part-of-speech tagging and word alignment. Turning back to historical ciphers, we explore a number of unsolved ciphers, giving results of initial computer experiments on several of them. Finally, we look briefly at writing as a way to encipher phoneme sequences, covering ancient scripts and modern applications. 2 Outline 1. Classical military/diplomatic ciphers (15 minutes) • 60 cipher types (ACA) • Ciphers vs. codes • Enigma cipher: the mother of natural language processing analysis of text recognition smoothing 2. Foreign language as a code (10 minutes) • Alan Turing’s ”Thinking Machines” • Warren Weaver’s Memorandum 3. Automatic decipherment (55 minutes) • Cipher type detection • Substitution ciphers (simple, homophonic, polyalphabetic, etc) language recognition much plaintext knowledge is needed 3 of the 51st Annual Meeting of the Association for Computational pages 3–4, Bulgaria, August 4-9 2013. Association for Computational Linguistics of coincidence, unicity distance, and other measures a difficult search space of letters and words words and cribs ILP, Bayesian models, sampling decipherments cipher, Copiale cipher, civil war ciphers, naval Enigma • Application to part-of-speech tagging, word alignment • Application to machine translation without parallel text • Parallel development of cryptography and translation • Recently released NSA internal newsletter (1974-1997) 4. *** Break *** (30 minutes) 5. Unsolved ciphers (40 minutes) • Zodiac 340 (1969), including computational work • Voynich Manuscript (early 1400s), including computational work • Beale (1885) • Dorabella (1897) • Taman Shud (1948) • Kryptos (1990), including computational work • McCormick (1999) • Shoeboxes in attics: DuPonceau journal, Finnerana, SYP, Mopse, diptych 6. Writing as a code (20 minutes) • Does writing encode ideas, or does it encode phonemes? • Ancient script decipherment hieroglyphs B glyphs including computational work N¨ushu, including computational work • Automatic phonetic decipherment • Application to transliteration 7. Undeciphered writing systems (15 minutes)</abstract>
<note confidence="0.841496111111111">Indus Valley Script (3300BC) • Linear A (1900BC) • Phaistos disc (1700BC?) • Rongorongo (1800s?) 8. Conclusion and further questions (15 minutes) 3 About the Presenter Kevin Knight is a Senior Research Scientist and Fellow at the Information Sciences Institute of the</note>
<affiliation confidence="0.836347">University of Southern California (USC), and a Research Professor in USC’s Computer Science</affiliation>
<abstract confidence="0.980880636363636">Department. He received a PhD in computer science from Carnegie Mellon University and a bachelor’s degree from Harvard University. Professor Knight’s research interests include natural language processing, machine translation, automata theory, and decipherment. In 2001, he co-founded Language Weaver, Inc., and in 2011, he served as President of the Association for Computational Linguistics. Dr. Knight has taught computer science courses at USC for more than fifteen years co-authored the widely adopted textbook Ar-</abstract>
<intro confidence="0.653932">4</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>