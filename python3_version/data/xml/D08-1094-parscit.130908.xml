<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002153">
<title confidence="0.95647">
A Structured Vector Space Model for Word Meaning in Context
</title>
<author confidence="0.994926">
Katrin Erk Sebastian Pad´o
</author>
<affiliation confidence="0.998345">
Department of Linguistics Department of Linguistics
University of Texas at Austin Stanford University
</affiliation>
<email confidence="0.999021">
katrin.erk@mail.utexas.edu pado@stanford.edu
</email>
<sectionHeader confidence="0.997388" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999129375">
We address the task of computing vector space
representations for the meaning of word oc-
currences, which can vary widely according to
context. This task is a crucial step towards a
robust, vector-based compositional account of
sentence meaning. We argue that existing mod-
els for this task do not take syntactic structure
sufficiently into account.
We present a novel structured vector space
model that addresses these issues by incorpo-
rating the selectional preferences for words’
argument positions. This makes it possible to
integrate syntax into the computation of word
meaning in context. In addition, the model per-
forms at and above the state of the art for mod-
eling the contextual adequacy of paraphrases.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999923769230769">
Semantic spaces are a popular framework for the rep-
resentation of word meaning, encoding the meaning
of lemmas as high-dimensional vectors. In the de-
fault case, the components of these vectors measure
the co-occurrence of the lemma with context features
over a large corpus. These vectors are able to pro-
vide a robust model of semantic similarity that has
been used in NLP (Salton et al., 1975; McCarthy and
Carroll, 2003; Manning et al., 2008) and to model
experimental results in cognitive science (Landauer
and Dumais, 1997; McDonald and Ramscar, 2001).
Semantic spaces are attractive because they provide a
model of word meaning that is independent of dictio-
nary senses and their much-discussed problems (Kil-
garriff, 1997; McCarthy and Navigli, 2007).
In a default semantic space as described above,
each vector represents one lemma, averaging over
all its possible usages (Landauer and Dumais, 1997;
Lund and Burgess, 1996). Since the meaning of
words can vary substantially between occurrences
(e.g., for polysemous words), the next necessary step
is to characterize the meaning of individual words in
context.
There have been several approaches in the liter-
ature (Smolensky, 1990; Sch¨utze, 1998; Kintsch,
2001; McDonald and Brew, 2004; Mitchell and La-
pata, 2008) that compute meaning in context from
lemma vectors. Most of these studies phrase the prob-
lem as one of vector composition: The meaning of a
target occurrence a in context b is a single new vector
c that is a function (for example, the centroid) of the
vectors: c = a O b.
The context b can consist of as little as one word,
as shown in Example (1). In (1a), the meaning of
catch combined with ball is similar to grab, while in
(1b), combined with disease, it can be paraphrased
by contract. Conversely, verbs can influence the in-
terpretation of nouns: In (1a), ball is understood as a
spherical object, and in (1c) as a dancing event.
</bodyText>
<listItem confidence="0.954399">
(1) a. catch a ball
b. catch a disease
c. attend a ball
</listItem>
<bodyText confidence="0.9988353">
In this paper, we argue that models of word mean-
ing relying on this procedure of vector composition
are limited both in their scope and scalability. The
underlying shortcoming is a failure to consider syntax
in two important ways.
The syntactic relation is ignored. The first problem
concerns the manner of vector composition, which
ignores the relation between the target a and its con-
text b. This relation can have a decisive influence on
their interpretation, as Example (2) shows:
</bodyText>
<page confidence="0.969196">
897
</page>
<note confidence="0.9565675">
Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 897–906,
Honolulu, October 2008.c�2008 Association for Computational Linguistics
</note>
<bodyText confidence="0.98379645">
(2) a. a horse draws
b. draw a horse
In (2a), the meaning of the verb draw can be para-
phrased as pull, while in (2b) it is similar to sketch.
This difference in meaning is due to the difference in
relation: in (2a), horse is the subject, while in (2b)
it is the object. On the modeling side, however, a
vector combination function that ignores the relation
will assign the same representation to (2a) and (2b).
Thus, existing models are systematically unable to
capture this class of phenomena.
Single vectors are too weak to represent phrases.
The second problem arises in the context of the im-
portant open question of how semantic spaces can
“scale up” to provide interesting meaning representa-
tions for entire sentences. We believe that the current
vector composition methods, which result in a single
vector c, are not informative enough for this purpose.
One proposal for “scaling up” is to straightforwardly
interpret c = a O b as the meaning of the phrase
a + b (Kintsch, 2001; Mitchell and Lapata, 2008).
The problem is that the vector c can only encode a
fixed amount of structural information if its dimen-
sionality is fixed, but there is no upper limit on sen-
tence length, and hence on the amount of structure
to be encoded. It is difficult to conceive how c could
encode deeper semantic properties, like predicate-
argument structure (distinguishing “dog bites man”
and “man bites dog”), that are crucial for sentence-
level semantic tasks such as the recognition of textual
entailment (Dagan et al., 2006). An alternative ap-
proach to sentence meaning would be to use the vec-
tor space representation only for representing word
meaning, and to represent sentence structure sepa-
rately. Unfortunately, present models cannot provide
this grounding either, since they compute a single
vector c that provides the same representations for
both the meanings of a and b in context.
In this paper, we propose a new, structured vector
space model for word meaning (SVS) that addresses
these problems. A SVS representation of a lemma
comprises several vectors representing the word’s
lexical meaning as well as the selectional preferences
that it has for its argument positions. The meaning
of word a in context b is computed by combining a
with b’s selectional preference vector specific to the
relation between a and b, addressing the first problem
above. In an expression a + b, the meanings of a
and b in this context are computed as two separate
vectors a&apos; and b�. These vectors can then be combined
with a representation of the structure’s expression
(e.g., a parse tree), to address the second problem
discussed above. We test the SVS model on the task
of recognizing contextually appropriate paraphrases,
finding that SVS performs at and above the state-of-
the-art.
Plan of the paper. Section 2 reviews related work.
Section 3 presents the SVS model for word meaning
in context. Sections 4 to 6 relate experiments on the
paraphrase appropriateness task.
</bodyText>
<sectionHeader confidence="0.999918" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999531666666667">
In this section we give a short overview over existing
vector space based approaches to computing word
meaning in context.
General context effects. The first category of
models aims at integrating the widest possible range
of context information without recourse to linguistic
structure. The best-known work in this category is
Sch¨utze (1998). He first computes “first-order” vec-
tor representations for word meaning by collecting
co-occurrence counts from the entire corpus. Then,
he determines “second-order” vectors for individual
word instances in their context, which is taken to be a
simple surface window, by summing up all first-order
vectors of the words in this context. The resulting
vectors form sense clusters.
McDonald and Brew (2004) present a similar
model. They compute the expectation for a word
wz in a sequence by summing the first-order vectors
for the words wi to wz_i and showed that the dis-
tance between expectation and first-order vector for
wz correlates with human reading times.
Predicate-argument combination. The second
category of prior studies concentrates on contexts
consisting of a single word only, typically modeling
the combination of a predicate p and an argument a.
Kintsch (2001) uses vector representations of p and
a to identify the set of words that are similar to both
p and a. After this set has been narrowed down in a
self-inhibitory network, the meaning of the predicate-
argument combination is obtained by computing the
</bodyText>
<page confidence="0.997313">
898
</page>
<bodyText confidence="0.9995952">
centroid of its members’ vectors. The procedure does
not take the relation between p and a into account.
Mitchell and Lapata (2008) propose a framework
to represent the meaning of the combination p + a as
a function f operating on four components:
</bodyText>
<equation confidence="0.96569">
c = f(p, a, R, K) (3)
</equation>
<bodyText confidence="0.999719782608696">
R is the relation holding between p and a, and K
additional knowledge. This framework allows sen-
sitivity to the relation. However, the concrete in-
stantiations that Mitchell and Lapata consider disre-
gards K and R, thus sharing the other models’ limi-
tations. They focus instead on methods for the direct
combination of p and a: In a comparison between
component-wise addition and multiplication of p and
a, they find far superior results for the multiplication
approach.
Tensor product-based models. Smolensky (1990)
uses tensor product to combine two word vectors a
and b into a vector c representing the expression a+b.
The vector c is located in a very high-dimensional
space and is thus capable of encoding the structure
of the expression; however, this makes the model
infeasible in practice, as dimensionality rises with
every word added to the representation. Jones and
Mewhort (2007) represent lemma meaning by using
circular convolution to encode n-gram co-occurrence
information into vectors of fixed dimensionality. Sim-
ilar to Brew and McDonald (2004), they predict most
likely next words in a sequence, without taking syn-
tax into account.
Kernel methods. One of the main tests for the
quality of models of word meaning in context is the
ability to predict the appropriateness of paraphrases
in given a context. Typically, a paraphrase applies
only to some senses of a word, not all, as can be seen
in the paraphrases “grab” and “contract” of “catch”.
Vector space models generally predict paraphrase ap-
propriateness based on the similarity between vectors.
This task can also be addressed with kernel methods,
which project items into an implicit feature space
for efficient similarity computation. Consequently,
vector space methods and kernel methods have both
been used for NLP tasks based on similarity, no-
tably Information Retrieval and Textual Entailment.
Nevertheless, they place their emphasis on different
types of information. Current kernels are mostly tree
kernels that compare syntactic structure, and use se-
mantic information mostly for smoothing syntactic
similarity (Moschitti and Quarteroni, 2008). In con-
trast, vector-space models focus on the interaction
between the lexical meaning of words in composi-
tion.
</bodyText>
<sectionHeader confidence="0.844968" genericHeader="method">
3 A structured vector space model for
</sectionHeader>
<subsectionHeader confidence="0.745793">
word meaning in context
</subsectionHeader>
<bodyText confidence="0.999972918918919">
In this section, we define the structured vector space
(SVS) model of word meaning.
The main intuition behind our model is to view
the interpretation of a word in context as guided by
expectations about typical events. For example, in
(1a), we assume that upon hearing the phrase “catch a
ball”, the hearer will interpret the meaning of “catch”
to match typical actions that can be performed with a
ball. Similarly, the interpretation of “ball” will reflect
the hearer’s expectations about typical things that can
be caught. This move to include typical arguments
and predicates into a model of word meaning can be
motivated both on cognitive and linguistic grounds.
In cognitive science, the central role of expecta-
tions about typical events for human language pro-
cessing is well-established. Expectations affect read-
ing times (McRae et al., 1998), the interpretation of
participles (Ferretti et al., 2003), and sentence pro-
cessing generally (Narayanan and Jurafsky, 2002;
Pad´o et al., 2006). Expectations exist both for verbs
and nouns (McRae et al., 1998; McRae et al., 2005).
In linguistics, expectations, in the form of selec-
tional restrictions and selectional preferences, have
long been used in semantic theories (Katz and Fodor,
1964; Wilks, 1975), and more recently induced
from corpora (Resnik, 1996; Brockmann and Lapata,
2003). Attention has mostly been limited to selec-
tional preferences of verbs, which have been used
for example for syntactic disambiguation (Hindle
and Rooth, 1993), word sense disambiguation (Mc-
Carthy and Carroll, 2003) and semantic role label-
ing (Gildea and Jurafsky, 2002). Recently, a vector-
spaced model of selectional preferences has been
proposed that computes the typicality of an argument
simply through similarity to previously seen argu-
ments (Erk, 2007; Pad´o et al., 2007).
We first present the SVS model of word meaning
</bodyText>
<page confidence="0.990094">
899
</page>
<figure confidence="0.966735888888889">
accuse
say
claim
comp-1
catch
subj
he cold red
fielder baseball golf
dog drift elegant
</figure>
<figureCaption confidence="0.9874705">
Figure 1: Structured meaning representations for noun
ball and verb catch: lexical information plus expectations
</figureCaption>
<bodyText confidence="0.99982403030303">
that integrates lexical information with selectional
preferences. Then, we show how the SVS model pro-
vides a new way of computing meaning in context.
Representing lemma meaning. We abandon the
traditional choice of representing word meaning as
a single vector. Instead, we encode each word as
a combination of (a) one vector that models the
lexical meaning of the word, and (b) a set of vec-
tors, each of which represents the semantic expecta-
tions/selectional preferences for one particular rela-
tion that the word supports.1
The idea is illustrated in Fig. 1. In the representa-
tion of the verb catch, the central square stands for
the lexical vector of catch itself. The three arrows
link it to catch’s preferences for its subjects (subj),
its objects (obj), and for verbs for which it appears
as a complement (comp−1). The figure shows the se-
lectional preferences as word lists for readability; in
practice, each selectional preference is a single vector
(cf. Section 4). Likewise, ball is represented by one
vector for ball itself, one for ball’s preferences for its
modifiers (mod), one vector for the verbs of which it
is a subject (subj−1), and one for the verbs of which
is an object (obj−1).
This representation includes selectional prefer-
ences (like subj, obj, mod) exactly parallel to
inverse selectional preferences (subj−1, obj−1,
comp−1). To our knowledge, preferences of the lat-
ter kind have not been studied in computational lin-
guistics. However, their existence is supported in
psycholinguistics by priming effects from nouns to
typical verbs (McRae et al., 2005).
Formally, let D be a vector space (the set of possi-
</bodyText>
<footnote confidence="0.937514">
1We do not commit to a particular set of relations; see the
discussion at the end of this section.
</footnote>
<figureCaption confidence="0.998121">
Figure 2: Combining predicate and argument via relation-
specific semantic expectations
</figureCaption>
<bodyText confidence="0.993095666666667">
ble vectors), and let R be some set of relation labels.
In the structured vector space (SVS) model, we rep-
resent the meaning of a lemma w as a triple
</bodyText>
<equation confidence="0.939217">
w = (v, R, R−1)
</equation>
<bodyText confidence="0.9976238">
where v E D is a lexical vector describing the word
w itself, R : R —* D maps each relation label onto
a vector that describes w’s selectional preferences,
and R−1 : R —* D maps from role labels to vec-
tors describing inverse selectional preferences of w.
Both R and R−1 are partial functions. For example,
the direct object preference would be undefined for
intransitive verbs.
Computing meaning in context. The SVS model
of lemma meaning permits us to compute the mean-
ing of a word a in the context of another word b
in a new way, via their selectional preferences. Let
(va, Ra, R−1
a ) and (vb, Rb, R−1
b ) be the representa-
tions of the two words, and let r E R be the relation
linking a to b. Then, we define the meaning of a and
b in this context as a pair (a0, b0) of vectors, where
a0 is the meaning of a in the context of b, and b0 the
meaning of b in the context of a:
</bodyText>
<equation confidence="0.989113">
a0 = (va O Rb 1(r), Ra − {r}, Rb, 1)
b0 = (vb O Ra(r), Rb, Rb 1 − {r}) (4)
</equation>
<bodyText confidence="0.999584428571429">
where v1 O v2 is a direct vector combination function
as in traditional models, e.g. addition or component-
wise multiplication. If either Ra(r) or R−1
b (r) are
not defined, the combination fails. Afterwards, the ar-
gument position r is considered filled, and is deleted
from Ra and R−1
</bodyText>
<figure confidence="0.999444793103448">
b .
catch
...
subj
obj
obj-1 subj-1
throw
catch
organise
...
cold
baseball
drift
ball
...
comp-1
mod
...
throw
catch
organise
obj-1
whirl
fly
provide
subj-1
ball
mod
obj
</figure>
<page confidence="0.958547">
900
</page>
<bodyText confidence="0.999251054054054">
Figure 2 illustrates this procedure on the represen-
tations from Figure 1. The dotted lines indicate that
the lexical vector for catch is combined with the in-
verse object preference of ball. Likewise, the lexical
vector for ball is combined with the object preference
vector of catch.
Note that our procedure for computing meaning
in context can be expressed within the framework of
Mitchell and Lapata (Eq. (3)). We can encode the
expectations of a and b as additional knowledge K.
The combined representation c is the pair (a&apos;, b&apos;) that
is computed according to our model (Eq. (4)).
The SVS scheme we have proposed incorporates
syntactic information in a more general manner than
previous models, and thus addresses the issues we
have discussed in Section 1. Since the representation
retains individual selectional preferences for all rela-
tions, combining the same words through different
relations can (and will in general) result in different
adapted representations. For instance, in the case of
Example (2), we would expect the inverse subject
preference of horse (“things that a horse typically
does”) to push the lexical vector of draw into the di-
rection of pulling, while its inverse object preference
(“things that are done to horses”) suggest a different
interpretation.
Rather than yielding a single, joint vector for the
whole expression, our procedure for computing mean-
ing in context results in one context-adapted meaning
representation per word, similar to the output of a
WSD system. As a consequence, our model can
be combined with any formalism representing the
structure of an expression. (The formalism used then
determines the set R of relations.) For example, com-
bining SVS with a dependency tree would yield a tree
in which each node is labeled by a SVS tuple that
represents the word’s meaning in context.
</bodyText>
<sectionHeader confidence="0.999281" genericHeader="method">
4 Experimental setup
</sectionHeader>
<bodyText confidence="0.999671">
This section provides the background to the following
experimental evaluation of SVS, including parameters
used for computing the SVS representations that will
be used in the experiments.
</bodyText>
<subsectionHeader confidence="0.981539">
4.1 Experimental rationale
</subsectionHeader>
<bodyText confidence="0.9999529375">
In this paper, we evaluate the SVS model against the
task of predicting, given a predicate-argument pair,
how appropriate a paraphrase (of either the predicate
or the argument) is in that context. We perform two
experiments that both use the paraphrase task, but
differ in their emphasis. Experiment 1 replicates an
existing evaluation against human judgments. This
evaluation uses synthetic dataset, limited to one par-
ticular construction, and constructed to provide max-
imally distinct paraphrase candidates. Experiment 2
considers a broader class of constructions along with
annotator-generated paraphrase candidates that are
not screened for distinctness. In both experiments,
we compare the SVS model against the state-of-the-
art model by Mitchell and Lapata 2008 (henceforth
M&amp;L; cf. Sec. 2 for model details).
</bodyText>
<subsectionHeader confidence="0.974145">
4.2 Parameter choices
</subsectionHeader>
<bodyText confidence="0.999945827586207">
Vector space. In our parameterization of the vector
space, we largely follow M&amp;L because their model
has been rigorously evaluated and found to outper-
form a range of other models.
Our first space is a traditional “bag-of-words” vec-
tor space (BOW, (Lund and Burgess, 1996)). For
each pair of a target word and context word, the BOW
space records a function of their co-occurrence fre-
quency within a surface window of size 10. The
space is constructed from the British National Cor-
pus (BNC), and uses the 2,000 most frequent context
words as dimensions.
We also consider a “dependency-based” vector
space (SYN, (Pad´o and Lapata, 2007)). In this space,
target and context words have to be linked by a “valid”
dependency path in a dependency graph to count as
co-occurring.2 This space was built from BNC de-
pendency parses obtained from Minipar (Lin, 1993).
For both spaces, we used pre-experiments to com-
pare two methods for the computation of vector com-
ponents, namely raw co-occurrence counts, the stan-
dard model, and the pointwise mutual information
(PMI) definition employed by M&amp;L.
Selectional preferences. We use a simple,
knowledge-lean representation for selectional
preferences inspired by Erk (2007), who models
selectional preference through similarity to seen filler
vectors va,: We compute the selectional preference
vector for word b and relation r as the weighted
</bodyText>
<footnote confidence="0.6907335">
2More specifically, we used the minimal context specification
and plain weight function. See Pad´o and Lapata (2007).
</footnote>
<page confidence="0.996865">
901
</page>
<bodyText confidence="0.925456777777778">
centroid of seen filler vectors va. We collect seen
fillers from the Minipar-parse of the BNC.
Let f(a, r, b) denote the frequency of a occurring
in relation r to b in the parsed BNC, then
verb subject landmark sim judgment
slump shoulder slouch high 7
slump shoulder decline low 2
slump value slouch low 3
slump value decline high 7
</bodyText>
<equation confidence="0.9603455">
�Rb(r)SELPREF = f(a, r, b) &apos; va (5) Figure 3: Experiment 1: Human similarity judgements for
a:f(a,r,b)&gt;0 subject-verb pair with high- and low-similarity landmarks
</equation>
<bodyText confidence="0.999922888888889">
We call this base model SELPREF. We will also
study two variants of SELPREF, based on two dif-
ferent hypotheses about what properties of the se-
lectional preferences are particularly important for
meaning adaption. The first model aims specifically
at alleviating noise introduced by infrequent fillers, a
common problem in data-driven approaches. It only
uses fillers seen more often than a threshold 0. We
call this model SELPREF-CUT:
</bodyText>
<equation confidence="0.998089">
�Rb(r)SELPREF-CUT = f(a, r, b) &apos; va (6)
a:f(a,r,b)&gt;0
</equation>
<bodyText confidence="0.998223125">
Our second variant again aims at alleviating noise,
but noise introduced by low-valued dimensions rather
than infrequent fillers. It achieves this by taking each
component of the selectional preference vector to
the nth power. In this manner, dimensions with high
counts are further inflated, while dimensions with low
counts are depressed.3 This model, SELPREF-POW, is
defined as follows: If Rb(r)SELPREF = (v1, . . . , vM),
</bodyText>
<equation confidence="0.996022">
Rb(r)SELPREF-POW = (v1 , . . . , v�M� (7)
</equation>
<bodyText confidence="0.953433684210527">
The inverse selectional preferences R�1
b are de-
fined analogously for all three model variants. We
instantiate the vector combination function O as
component-wise multiplication, following M&amp;L.
Baselines and significance testing. All tasks that
we consider below involve judgments for the mean-
ing of a word a in the context of a word b. A first
baseline that every model must beat is simply using
the original vector for a. We call this baseline “target
only”. Since we assume that the selectional prefer-
ences of b model the expectations for a, we use b’s
selectional preference vector for the given relation as
a second baseline, “selpref only”.
3Since we focus on the size-invariant cosine similarity, the
use of this model does not require normalization.
Differences between the performance of mod-
els were tested for significance using a stratified
shuffling-based randomization test (Yeh, 2000).4.
</bodyText>
<sectionHeader confidence="0.98408" genericHeader="method">
5 Exp. 1: Predicting similarity ratings
</sectionHeader>
<bodyText confidence="0.999882655172414">
In our first experiment, we attempt to predict human
similarity judgments. This experiment is a replication
of the evaluation of M&amp;L on their dataset5.
Dataset. The M&amp;L dataset comprises a total of
3,600 human similarity judgements for 120 experi-
mental items. Each item, as shown in Figure 3, con-
sists of an intransitive verb and a subject noun that
are combined with a “landmark”, a synonym of the
verb that is chosen to be either similar or dissimilar
to the verb in the context of the given subject.
The dataset was constructed by extracting pairs
of subjects and intransitive verbs from a parsed ver-
sion of the BNC. Each item was paired with two
landmarks, chosen to be as dissimilar as possible ac-
cording to a WordNet similarity measure. All nouns
and verbs were subjected to a pretest, where only
those with highly significant variations in human
judgments across landmarks were retained.
For each item of the final dataset, judgements on
a 7-point scale were elicited. For example, judges
considered the compatible landmark “slouch” to be
much more similar to “shoulder slumps” than the
incompatible landmark “decline”. In Figure 3, the
column sim shows whether the experiment designers
considered the respective landmark to have high or
low similarity to the verb, and the column judgment
shows a participant’s judgments.
Experimental procedure. We used cosine to com-
pute similarity to the lexical vector of the landmark.
</bodyText>
<footnote confidence="0.998174333333333">
4The software is available at http://www.nlpado.de/
—sebastian/sigf.html.
5We thank J. Mitchell and M. Lapata for providing their data.
</footnote>
<page confidence="0.989932">
902
</page>
<table confidence="0.967291588235294">
Model high low p
BOW space
Target only 0.32 0.32 0.0
Selpref only 0.46 0.4 0.06**
M&amp;L 0.25 0.15 0.20**
SELPREF 0.32 0.26 0.12**
SELPREF-CUT, 8=10 0.31 0.24 0.11**
SELPREF-POW, n=20 0.11 0.03 0.27**
Upper bound – – 0.4
SYN space
Target only 0.2 0.2 0.08**
Selpref only 0.27 0.21 0.16**
M&amp;L 0.13 0.06 0.24**
SELPREF 0.22 0.16 0.13**
SELPREF-CUT, 8=10 0.2 0.13 0.13**
SELPREF-POW, n=30 0.08 0.04 0.22**
Upper bound – – 0.4
</table>
<tableCaption confidence="0.989987333333333">
Table 1: Experiment 1: Mean cosine similarity for items
with high- and low-similarity landmarks; correlation with
human judgements (p). (**: p &lt; 0.01)
</tableCaption>
<bodyText confidence="0.99971336">
“Target only” compares the landmark against the lexi-
cal vector of the verb, and “selpref only” compares
it to the noun’s subj−1 preference. For the M&amp;L
model, the comparison is to the combined lexical
vectors of verb and noun. For our models SELPREF,
SELPREF-CUT and SELPREF-POW, we combine the
verb’s lexical vector with the subj−1 preference of
the noun. We used a held-out dataset of 10% of the
data to optimize the parameters of 8 of SELPREF-CUT
and n of SELPREF-POW. Vectors with PMI compo-
nents could model the data, while raw frequency
components could not; we report only the former.
We use the same two evaluation scores as M&amp;L:
The first score is the average similarity to compatible
landmarks (high) and incompatible landmarks (low).
The second is Spearman’s p, a nonparametric corre-
lation coefficient. We compute p between individual
human similarity scores and our predictions. Based
on agreement between human judges, M&amp;L estimate
an upper bound p of 0.4 for the dataset.
Results and discussion. Table 1 shows the results
of Exp. 1 on the test set. In the upper half (BOW), we
replicate M&amp;L’s main finding that simple component-
wise multiplication of the predicate and argument
vectors results in a highly significant correlation of
</bodyText>
<table confidence="0.9973835">
Model lex. vector obj−1 selpref
SELPREF 0.23 (0.09) 0.88 (0.07)
SELPREF-CUT (10) 0.20 (0.10) 0.72 (0.18)
SELPREF-POW (30) 0.03 (0.08) 0.52 (0.48)
</table>
<tableCaption confidence="0.9976825">
Table 2: Experiment 1: Average similarity (and standard
deviation) between the inverse subject preferences of a
noun and (left) its lexical vector and (right) inverse object
preferences vector (cosine similarity in SYN space)
</tableCaption>
<bodyText confidence="0.999959578947369">
p = 0.2, significantly outperforming both baselines.
It is interesting, though, that the subj−1 preference
itself (“Selpref only”) is already highly significantly
correlated with the human judgments.
A comparison of the upper half (BOW) with the
lower half (SYN) shows that the dependency-based
space generally shows better correlation with human
judgements. This corresponds to a beneficial effect of
syntactic information found for other applications of
semantic spaces (Lin, 1998; Pad´o and Lapata, 2007).
All instances of the SELPREF model show highly
significant correlations. SELPREF and SELPREF-CUT
show very similar performance. They do better than
both baselines in the BOW space; however, in the
cleaner SYN space, their performance is numerically
lower than using selectional preferences only (p =
0.13 vs. 0.16). SELPREF-POW is always significantly
better than SELPREF and SELPREF-CUT, and shows
the best result of all tested models (p = 0.27, BOW
space). The performance is somewhat lower in the
SYN space (p = 0.22). However, this difference, and
the difference to the best M&amp;L model at p = 0.24,
are not statistically significant.
The SVS model computes meaning in context by
combining a word’s lexical representation with the
preference vector of its context. In this, it differs from
previous models, including that by M&amp;L, which used
what we have been calling “direct combination”. So
it is important to ask to what extent this difference
in method translate to a difference in predictions.
We analyzed this by measuring the similarity by the
nouns’ lexical vectors, used by direct combination
methods, and their inverse subject preferences, which
SVS uses. The result is shown in the first column
in Table 2, computed as mean cosine similarities
and standard deviations between noun vectors and
selectional preferences. The table shows that these
vectors have generally low similarity, which is further
</bodyText>
<page confidence="0.997296">
903
</page>
<bodyText confidence="0.999745454545454">
reduced by applying cutoff and potentiation. Thus,
the predictions of SVS will differ from those of direct
combination models like M&amp;L.
A related question is whether syntax-aware vec-
tor combination makes a difference: Does the model
encode different expectations for different syntactic
relations (cf. Example 2)? The second column of Ta-
ble 2 explores this question by comparing inverse se-
lectional preferences for the subject and object slots.
We observe that the similarity is very high for raw
preferences, but becomes lower when noise is elim-
inated. Since the SELPREF-POW model performed
best in our evaluation, we read this as evidence that
potentiation helps to suppress noise introduced by
mis-identified subject and object fillers.
In Experiment 1, all experimental items were
verbs, which means that all disambiguation was done
through inverse selectional preferences. As inverse
selectional preferences are currently largely unex-
plored, it is interesting to note that the evidence that
they provide for the paraphrase task is as strong as
that of the context nouns themselves.
</bodyText>
<sectionHeader confidence="0.963777" genericHeader="method">
6 Exp. 2: Ranking paraphrases
</sectionHeader>
<bodyText confidence="0.990005071428572">
This section reports on a second, more NLP-oriented
experiment whose task is to distinguish between ap-
propriate and inappropriate paraphrases on a broader
range of constructions.
Dataset. For this experiment, we use the SemEval-
1 lexical substitution (lexsub) dataset (McCarthy and
Navigli, 2007), which contains 10 instances each of
200 target words in sentential contexts, drawn from
Sharoff’s (2006) English Internet Corpus. Contex-
tually appropriate paraphrases for each instance of
each target word were elicited from up to 6 partic-
ipants. Fig. 4 shows two instances for the verb to
work. The distribution over paraphrases can be seen
as a characterization of the target word’s meaning in
each context.
Experimental procedure. In this paper, we pre-
dict appropriate paraphrases solely on the basis of a
single context word that stands in a direct predicate-
argument relation to the target word. We extracted
all instances from the lexsub test data with such a
relation. After parsing all sentences with verbal and
nominal targets with Minipar, this resulted in three
Sentence Substitutes
By asking people who work be employed 4;
there, I have since determined labour 1
that he didn’t. (# 2002)
Remember how hard your an- toil 4; labour 3;
cestors worked. (# 2005) task 1
</bodyText>
<figureCaption confidence="0.993728">
Figure 4: Lexical substitution example items for “work”
</figureCaption>
<bodyText confidence="0.999971757575758">
sets of sentences: (a), target intransitive verbs with
noun subjects (V-SUBJ, 48 sentences); (b), target tran-
sitive verbs with noun objects (V-OBJ, 213 sent.); and
(c), target nouns occurring as objects of verbs (N-OBJ,
102 sent.).6 Note that since we use only part of the
lexical substitution dataset in this experiment, a di-
rect comparison with results from the SemEval task
is not possible.
As in the original SemEval task, we phrase the
task as a ranking problem. For each target word, the
paraphrases given for all 10 instances are pooled. The
task is to rank the list for each item so that appropriate
paraphrases (such as “be employed” for # 2002) rank
higher than paraphrases not given (e.g., “toil”).
Our model ranks paraphrases by their similarity
to the following combinations (Eq. (4)): for V-SUBJ,
verb plus the noun’s subj−1 preferences; for V-OBJ,
verb plus the noun’s obj−1 preferences; and for N-
OBJ, the noun plus the verb’s obj preferences. Our
comparison model, M&amp;L, ranks all paraphrases by
their similarity to the direct noun-verb combination.
To avoid overfitting, we consider only the two mod-
els that performed optimally in in the SYN space in
Experiment 1 (SELPREF-POW with n=30 and M&amp;L).
However, since we found that vectors with raw fre-
quency components could model the data, while PMI
components could not, we only report the former.
For evaluation, we adopt the SemEval “out of
ten” precision metric POOT. It uses the model’s ten
top-ranked paraphrases as its guesses for appropri-
ate paraphrases. Let Gi be the gold paraphrases for
item i, Mi the model’s top ten paraphrases for i, and
f(s, i) the frequency of s as paraphrase for i:
</bodyText>
<construct confidence="0.686016">
E
sEMinGi (f (s, i) (8)
EsEGi f (s, i)
</construct>
<bodyText confidence="0.788518">
McCarthy and Navigli propose this metric for the
</bodyText>
<footnote confidence="0.875002">
6The specification of this dataset will be made available.
</footnote>
<equation confidence="0.928015">
POOT = 1/|I |�
i
</equation>
<page confidence="0.993135">
904
</page>
<table confidence="0.9993702">
Model V-SUBJ V-OBJ N-OBJ
Target only 47.9 47.4 49.6
Selpref only 54.8 51.4 55.0
M&amp;L 50.3 52.0 53.4
SELPREF-POW, n=30 63.1 55.8 56.9
</table>
<tableCaption confidence="0.999963">
Table 3: Experiment 2: Mean “out of ten” precision (POOT)
</tableCaption>
<bodyText confidence="0.999859514285715">
dataset for robustness. Due to the sparsity of para-
phrases, a metric that considers fewer guesses leads
to artificially low results when a “good” paraphrase
was not mentioned by the annotators by chance but
is ranked highly by a model.
Results and discussion. Table 6 shows the mean
out-of-ten precision for all models. The behavior is
fairly uniform across all three datasets. Unsurpris-
ingly, “target only”, which uses the same ranking for
all instances of a target, yields the worst results.7
M&amp;L’s direct combination model outperforms “tar-
get only” significantly (p &lt; 0.05). However, on both
the V-SUBJ and the N-OBJ the “selpref only” baseline
does better than direct combination. The best results
on all datasets are obtained by SELPREF-POW. The
difference between SELPREF-POW and the “target
only” baseline is highly significant (p &lt; 0.01). The
difference to M&amp;L’s model is significant at p = 0.05.
We interpret these results as encouraging evidence
for the usefulness of selectional preferences for judg-
ing substitutability in context. Knowledge about the
selectional preferences of a single context word can
already lead to a significant improvement in precision.
We find this overall effect even though the word is
not informative in all cases. For instance, the subject
of item 2002 in Fig. 4, “who”, presumably helps little
in determining the verb’s context-adapted meaning.
It is interesting that the improvement of SELPREF-
POW over “selpref only” is smallest for the N-OBJ
dataset (1.9% POOT). N-OBJ uses selectional prefer-
ences for nouns that may fill the direct object position,
, while V-SUBJ and V-OBJ use inverse selectional
preferences for verbs (cf. the two graphs in Fig. 1).
7“Target only” still does very much better than a random
baseline, which performs at 22% POOT.
</bodyText>
<sectionHeader confidence="0.998438" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.967334204545455">
In this paper, we have considered semantic space
models that can account for the meaning of word
occurrences in context. Arguing that existing models
do not sufficiently take syntax into account, we have
introduced the new structured vector space (SVS)
model of word meaning. In addition to a vector rep-
resenting a word’s lexical meaning, it contains vec-
tors representing the word’s selectional preferences.
These selectional preferences play a central role in
the computation of meaning in context.
We have evaluated the SVS model on two datasets
on the task of predicting the felicitousness of para-
phrases in given contexts. On the M&amp;L dataset,
SVS outperforms the state-of-the-art model of M&amp;L,
though the difference is not significant. On the Lex-
ical Substitution dataset, SVS significantly outper-
forms the state-of-the-art. This is especially interest-
ing as the Lexical Substitution dataset, in contrast to
the M&amp;L data, uses “realistic” paraphrase candidates
that are not necessarily maximally distinct.
The most important limitation of the evaluation
that we have given in this paper is that we have only
considered single words as context. Our next step
will be to integrate information from multiple rela-
tions (such as both the subject and object positions
of a verb) into the computation of context-specific
meaning. Our eventual aim is a model that can give
a compositional account of a word’s meaning in con-
text, where all words in an expression disambiguate
one another according to the relations between them.
We will explore the usability of vector space mod-
els of word meaning in NLP applications, formulated
as the question of how to perform inferences on them
in the context of the Textual Entailment task (Dagan
et al., 2006). Paraphrase-based inference rules play
a large role in several recent approaches to Textual
Entailment (e.g. Szpektor et al (2008)); appropriate-
ness judgments of paraphrases in context, the task of
Experiments 1 and 2 above, can be viewed as testing
the applicability of these inferences rules.
Acknowledgments. Many thanks for helpful dis-
cussion to Jason Baldridge, David Beaver, Dedre
Gentner, James Hampton, Dan Jurafsky, Alexander
Koller, Brad Love, and Ray Mooney.
</bodyText>
<page confidence="0.998481">
905
</page>
<sectionHeader confidence="0.998346" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999843388349515">
C. Brockmann, M. Lapata. 2003. Evaluating and combin-
ing approaches to selectional preference acquisition. In
Proceedings of EACL, 27–34.
I. Dagan, O. Glickman, B. Magnini. 2006. The PASCAL
Recognising Textual Entailment Challenge. In Ma-
chine Learning Challenges, Lecture Notes in Computer
Science, 177–190. Springer.
K. Erk. 2007. A simple, similarity-based model for selec-
tional preferences. In Proceedings of ACL, 216–223.
T. Ferretti, C. Gagn´e, K. McRae. 2003. Thematic role fo-
cusing by participle inflections: evidence form concep-
tual combination. Journal of Experimental Psychology,
29(1):118–127.
D. Gildea, D. Jurafsky. 2002. Automatic labeling of
semantic roles. Computational Linguistics, 28(3):245–
288.
D. Hindle, M. Rooth. 1993. Structural ambiguity and
lexical relations. Computational Linguistics, 19(1):103–
120.
M. Jones, D. Mewhort. 2007. Representing word mean-
ing and order information in a composite holographic
lexicon. Psychological review, 114:1–37.
J. J. Katz, J. A. Fodor. 1964. The structure of a semantic
theory. In The Structure of Language. Prentice-Hall.
A. Kilgarriff. 1997. I don’t believe in word senses. Com-
puters and the Humanities, 31(2):91–113.
W. Kintsch. 2001. Predication. Cognitive Science,
25:173–202.
T. Landauer, S. Dumais. 1997. A solution to Platos prob-
lem: the latent semantic analysis theory of acquisition,
induction, and representation of knowledge. Psycho-
logical Review, 104(2):211–240.
D. Lin. 1993. Principle-based parsing without overgener-
ation. In Proceedings of ACL, 112–120.
D. Lin. 1998. Automatic retrieval and clustering of simi-
lar words. In Proceedings of COLING-ACL, 768–774.
K. Lund, C. Burgess. 1996. Producing high-dimensional
semantic spaces from lexical co-occurrence. Behav-
ior Research Methods, Instruments, and Computers,
28:203—208.
C. D. Manning, P. Raghavan, H. Sch¨utze. 2008. Introduc-
tion to Information Retrieval. CUP.
D. McCarthy, J. Carroll. 2003. Disambiguating nouns,
verbs, and adjectives using automatically acquired
selectional preferences. Computational Linguistics,
29(4):639–654.
D. McCarthy, R. Navigli. 2007. SemEval-2007 Task 10:
English Lexical Substitution Task. In Proceedings of
SemEval, 48–53.
S. McDonald, C. Brew. 2004. A distributional model
of semantic context effects in lexical processing. In
Proceedings of ACL, 17–24.
S. McDonald, M. Ramscar. 2001. Testing the distribu-
tional hypothesis: The influence of context on judge-
ments of semantic similarity. In Proceedings of CogSci,
611–616.
K. McRae, M. Spivey-Knowlton, M. Tanenhaus. 1998.
Modeling the influence of thematic fit (and other con-
straints) in on-line sentence comprehension. Journal of
Memory and Language, 38:283–312.
K. McRae, M. Hare, J. Elman, T. Ferretti. 2005. A
basis for generating expectancies for verbs from nouns.
Memory and Cognition, 33(7):1174–1184.
J. Mitchell, M. Lapata. 2008. Vector-based models of
semantic composition. In Proceedings of ACL, 236–
244.
A. Moschitti, S. Quarteroni. 2008. Kernels on linguistic
structures for answer extraction. In Proceedings of
ACL, 113–116, Columbus, OH.
S. Narayanan, D. Jurafsky. 2002. A Bayesian model
predicts human parse preference and reading time in
sentence processing. In Proceedings of NIPS, 59–65.
S. Pad´o, M. Lapata. 2007. Dependency-based construc-
tion of semantic space models. Computational Linguis-
tics, 33(2):161–199.
U. Pad´o, F. Keller, M. W. Crocker. 2006. Combining syn-
tax and thematic fit in a probabilistic model of sentence
processing. In Proceedings of CogSci, 657–662.
S. Pad´o, U. Pad´o, K. Erk. 2007. Flexible, corpus-based
modelling of human plausibility judgements. In Pro-
ceedings of EMNLP/CoNLL, 400–409.
P. Resnik. 1996. Selectional constraints: An information-
theoretic model and its computational realization. Cog-
nition, 61:127–159.
G. Salton, A. Wang, C. Yang. 1975. A vector-space model
for information retrieval. Journal of the American So-
ciety for Information Science, 18:613–620.
H. Sch¨utze. 1998. Automatic word sense discrimination.
Computational Linguistics, 24(1):97–124.
S. Sharoff. 2006. Open-source corpora: Using the net to
fish for linguistic data. International Journal of Corpus
Linguistics, 11(4):435–462.
P. Smolensky. 1990. Tensor product variable binding and
the representation of symbolic structures in connection-
ist systems. Artificial Intelligence, 46:159–216.
I. Szpektor, I. Dagan, R. Bar-Haim, J. Goldberger. 2008.
Contextual preferences. In Proceedings of ACL, 683–
691, Columbus, OH.
Y. Wilks. 1975. Preference semantics. In Formal Seman-
tics of Natural Language. CUP.
A. Yeh. 2000. More accurate tests for the statistical
significance of result differences. In Proceeedings of
COLING, 947–953.
</reference>
<page confidence="0.9986">
906
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.989380">
<title confidence="0.999756">A Structured Vector Space Model for Word Meaning in Context</title>
<author confidence="0.997867">Katrin Erk Sebastian Pad´o</author>
<affiliation confidence="0.9999695">Department of Linguistics Department of Linguistics University of Texas at Austin Stanford University</affiliation>
<email confidence="0.998968">katrin.erk@mail.utexas.edupado@stanford.edu</email>
<abstract confidence="0.999563411764706">We address the task of computing vector space representations for the meaning of word occurrences, which can vary widely according to context. This task is a crucial step towards a robust, vector-based compositional account of sentence meaning. We argue that existing models for this task do not take syntactic structure sufficiently into account. present a novel vector space model that addresses these issues by incorporating the selectional preferences for words’ argument positions. This makes it possible to integrate syntax into the computation of word meaning in context. In addition, the model performs at and above the state of the art for modeling the contextual adequacy of paraphrases.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C Brockmann</author>
<author>M Lapata</author>
</authors>
<title>Evaluating and combining approaches to selectional preference acquisition.</title>
<date>2003</date>
<booktitle>In Proceedings of EACL,</booktitle>
<pages>27--34</pages>
<contexts>
<context position="11948" citStr="Brockmann and Lapata, 2003" startWordPosition="1933" endWordPosition="1936">ectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he cold red fielder baseball golf </context>
</contexts>
<marker>Brockmann, Lapata, 2003</marker>
<rawString>C. Brockmann, M. Lapata. 2003. Evaluating and combining approaches to selectional preference acquisition. In Proceedings of EACL, 27–34.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dagan</author>
<author>O Glickman</author>
<author>B Magnini</author>
</authors>
<title>The PASCAL Recognising Textual Entailment Challenge.</title>
<date>2006</date>
<booktitle>In Machine Learning Challenges, Lecture Notes in Computer Science,</booktitle>
<pages>177--190</pages>
<publisher>Springer.</publisher>
<contexts>
<context position="5109" citStr="Dagan et al., 2006" startWordPosition="838" endWordPosition="841">o straightforwardly interpret c = a O b as the meaning of the phrase a + b (Kintsch, 2001; Mitchell and Lapata, 2008). The problem is that the vector c can only encode a fixed amount of structural information if its dimensionality is fixed, but there is no upper limit on sentence length, and hence on the amount of structure to be encoded. It is difficult to conceive how c could encode deeper semantic properties, like predicateargument structure (distinguishing “dog bites man” and “man bites dog”), that are crucial for sentencelevel semantic tasks such as the recognition of textual entailment (Dagan et al., 2006). An alternative approach to sentence meaning would be to use the vector space representation only for representing word meaning, and to represent sentence structure separately. Unfortunately, present models cannot provide this grounding either, since they compute a single vector c that provides the same representations for both the meanings of a and b in context. In this paper, we propose a new, structured vector space model for word meaning (SVS) that addresses these problems. A SVS representation of a lemma comprises several vectors representing the word’s lexical meaning as well as the sel</context>
</contexts>
<marker>Dagan, Glickman, Magnini, 2006</marker>
<rawString>I. Dagan, O. Glickman, B. Magnini. 2006. The PASCAL Recognising Textual Entailment Challenge. In Machine Learning Challenges, Lecture Notes in Computer Science, 177–190. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Erk</author>
</authors>
<title>A simple, similarity-based model for selectional preferences.</title>
<date>2007</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>216--223</pages>
<contexts>
<context position="12405" citStr="Erk, 2007" startWordPosition="2004" endWordPosition="2005">ng been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he cold red fielder baseball golf dog drift elegant Figure 1: Structured meaning representations for noun ball and verb catch: lexical information plus expectations that integrates lexical information with selectional preferences. Then, we show how the SVS model provides a new way of computing meaning in context. Representing lemma meaning. We abandon the traditional choice of representing word meaning as a single vector. Instead, we encode each word as a combination of (a) one vector t</context>
<context position="20182" citStr="Erk (2007)" startWordPosition="3312" endWordPosition="3313">space (SYN, (Pad´o and Lapata, 2007)). In this space, target and context words have to be linked by a “valid” dependency path in a dependency graph to count as co-occurring.2 This space was built from BNC dependency parses obtained from Minipar (Lin, 1993). For both spaces, we used pre-experiments to compare two methods for the computation of vector components, namely raw co-occurrence counts, the standard model, and the pointwise mutual information (PMI) definition employed by M&amp;L. Selectional preferences. We use a simple, knowledge-lean representation for selectional preferences inspired by Erk (2007), who models selectional preference through similarity to seen filler vectors va,: We compute the selectional preference vector for word b and relation r as the weighted 2More specifically, we used the minimal context specification and plain weight function. See Pad´o and Lapata (2007). 901 centroid of seen filler vectors va. We collect seen fillers from the Minipar-parse of the BNC. Let f(a, r, b) denote the frequency of a occurring in relation r to b in the parsed BNC, then verb subject landmark sim judgment slump shoulder slouch high 7 slump shoulder decline low 2 slump value slouch low 3 s</context>
</contexts>
<marker>Erk, 2007</marker>
<rawString>K. Erk. 2007. A simple, similarity-based model for selectional preferences. In Proceedings of ACL, 216–223.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Ferretti</author>
<author>C Gagn´e</author>
<author>K McRae</author>
</authors>
<title>Thematic role focusing by participle inflections: evidence form conceptual combination.</title>
<date>2003</date>
<journal>Journal of Experimental Psychology,</journal>
<volume>29</volume>
<issue>1</issue>
<marker>Ferretti, Gagn´e, McRae, 2003</marker>
<rawString>T. Ferretti, C. Gagn´e, K. McRae. 2003. Thematic role focusing by participle inflections: evidence form conceptual combination. Journal of Experimental Psychology, 29(1):118–127.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gildea</author>
<author>D Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>3</issue>
<pages>288</pages>
<contexts>
<context position="12218" citStr="Gildea and Jurafsky, 2002" startWordPosition="1974" endWordPosition="1977">al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he cold red fielder baseball golf dog drift elegant Figure 1: Structured meaning representations for noun ball and verb catch: lexical information plus expectations that integrates lexical information with selectional preferences. Then, we show how the SVS model provides a new way of computing meaning i</context>
</contexts>
<marker>Gildea, Jurafsky, 2002</marker>
<rawString>D. Gildea, D. Jurafsky. 2002. Automatic labeling of semantic roles. Computational Linguistics, 28(3):245– 288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Hindle</author>
<author>M Rooth</author>
</authors>
<title>Structural ambiguity and lexical relations.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<pages>120</pages>
<contexts>
<context position="12107" citStr="Hindle and Rooth, 1993" startWordPosition="1957" endWordPosition="1960">ticiples (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he cold red fielder baseball golf dog drift elegant Figure 1: Structured meaning representations for noun ball and verb catch: lexical information plus expectations that integrates lexical info</context>
</contexts>
<marker>Hindle, Rooth, 1993</marker>
<rawString>D. Hindle, M. Rooth. 1993. Structural ambiguity and lexical relations. Computational Linguistics, 19(1):103– 120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Jones</author>
<author>D Mewhort</author>
</authors>
<title>Representing word meaning and order information in a composite holographic lexicon. Psychological review,</title>
<date>2007</date>
<pages>114--1</pages>
<contexts>
<context position="9199" citStr="Jones and Mewhort (2007)" startWordPosition="1505" endWordPosition="1508">us instead on methods for the direct combination of p and a: In a comparison between component-wise addition and multiplication of p and a, they find far superior results for the multiplication approach. Tensor product-based models. Smolensky (1990) uses tensor product to combine two word vectors a and b into a vector c representing the expression a+b. The vector c is located in a very high-dimensional space and is thus capable of encoding the structure of the expression; however, this makes the model infeasible in practice, as dimensionality rises with every word added to the representation. Jones and Mewhort (2007) represent lemma meaning by using circular convolution to encode n-gram co-occurrence information into vectors of fixed dimensionality. Similar to Brew and McDonald (2004), they predict most likely next words in a sequence, without taking syntax into account. Kernel methods. One of the main tests for the quality of models of word meaning in context is the ability to predict the appropriateness of paraphrases in given a context. Typically, a paraphrase applies only to some senses of a word, not all, as can be seen in the paraphrases “grab” and “contract” of “catch”. Vector space models generall</context>
</contexts>
<marker>Jones, Mewhort, 2007</marker>
<rawString>M. Jones, D. Mewhort. 2007. Representing word meaning and order information in a composite holographic lexicon. Psychological review, 114:1–37.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J J Katz</author>
<author>J A Fodor</author>
</authors>
<title>The structure of a semantic theory.</title>
<date>1964</date>
<booktitle>In The Structure of Language.</booktitle>
<publisher>Prentice-Hall.</publisher>
<contexts>
<context position="11851" citStr="Katz and Fodor, 1964" startWordPosition="1919" endWordPosition="1922">ed both on cognitive and linguistic grounds. In cognitive science, the central role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SV</context>
</contexts>
<marker>Katz, Fodor, 1964</marker>
<rawString>J. J. Katz, J. A. Fodor. 1964. The structure of a semantic theory. In The Structure of Language. Prentice-Hall.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Kilgarriff</author>
</authors>
<title>I don’t believe in word senses.</title>
<date>1997</date>
<journal>Computers and the Humanities,</journal>
<volume>31</volume>
<issue>2</issue>
<contexts>
<context position="1695" citStr="Kilgarriff, 1997" startWordPosition="260" endWordPosition="262">s as high-dimensional vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Mo</context>
</contexts>
<marker>Kilgarriff, 1997</marker>
<rawString>A. Kilgarriff. 1997. I don’t believe in word senses. Computers and the Humanities, 31(2):91–113.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Kintsch</author>
</authors>
<date>2001</date>
<journal>Predication. Cognitive Science,</journal>
<pages>25--173</pages>
<contexts>
<context position="2187" citStr="Kintsch, 2001" startWordPosition="335" endWordPosition="336">vide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase the problem as one of vector composition: The meaning of a target occurrence a in context b is a single new vector c that is a function (for example, the centroid) of the vectors: c = a O b. The context b can consist of as little as one word, as shown in Example (1). In (1a), the meaning of catch combined with ball is similar to grab, while in (1b), combined with disease, it can be paraphrased by contract. Conversely, verbs can influence the interpretation of n</context>
<context position="4579" citStr="Kintsch, 2001" startWordPosition="751" endWordPosition="752">he same representation to (2a) and (2b). Thus, existing models are systematically unable to capture this class of phenomena. Single vectors are too weak to represent phrases. The second problem arises in the context of the important open question of how semantic spaces can “scale up” to provide interesting meaning representations for entire sentences. We believe that the current vector composition methods, which result in a single vector c, are not informative enough for this purpose. One proposal for “scaling up” is to straightforwardly interpret c = a O b as the meaning of the phrase a + b (Kintsch, 2001; Mitchell and Lapata, 2008). The problem is that the vector c can only encode a fixed amount of structural information if its dimensionality is fixed, but there is no upper limit on sentence length, and hence on the amount of structure to be encoded. It is difficult to conceive how c could encode deeper semantic properties, like predicateargument structure (distinguishing “dog bites man” and “man bites dog”), that are crucial for sentencelevel semantic tasks such as the recognition of textual entailment (Dagan et al., 2006). An alternative approach to sentence meaning would be to use the vect</context>
<context position="7787" citStr="Kintsch (2001)" startWordPosition="1268" endWordPosition="1269">indow, by summing up all first-order vectors of the words in this context. The resulting vectors form sense clusters. McDonald and Brew (2004) present a similar model. They compute the expectation for a word wz in a sequence by summing the first-order vectors for the words wi to wz_i and showed that the distance between expectation and first-order vector for wz correlates with human reading times. Predicate-argument combination. The second category of prior studies concentrates on contexts consisting of a single word only, typically modeling the combination of a predicate p and an argument a. Kintsch (2001) uses vector representations of p and a to identify the set of words that are similar to both p and a. After this set has been narrowed down in a self-inhibitory network, the meaning of the predicateargument combination is obtained by computing the 898 centroid of its members’ vectors. The procedure does not take the relation between p and a into account. Mitchell and Lapata (2008) propose a framework to represent the meaning of the combination p + a as a function f operating on four components: c = f(p, a, R, K) (3) R is the relation holding between p and a, and K additional knowledge. This f</context>
</contexts>
<marker>Kintsch, 2001</marker>
<rawString>W. Kintsch. 2001. Predication. Cognitive Science, 25:173–202.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Landauer</author>
<author>S Dumais</author>
</authors>
<title>A solution to Platos problem: the latent semantic analysis theory of acquisition, induction, and representation of knowledge.</title>
<date>1997</date>
<journal>Psychological Review,</journal>
<volume>104</volume>
<issue>2</issue>
<contexts>
<context position="1496" citStr="Landauer and Dumais, 1997" startWordPosition="229" endWordPosition="232">and above the state of the art for modeling the contextual adequacy of paraphrases. 1 Introduction Semantic spaces are a popular framework for the representation of word meaning, encoding the meaning of lemmas as high-dimensional vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There hav</context>
</contexts>
<marker>Landauer, Dumais, 1997</marker>
<rawString>T. Landauer, S. Dumais. 1997. A solution to Platos problem: the latent semantic analysis theory of acquisition, induction, and representation of knowledge. Psychological Review, 104(2):211–240.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Lin</author>
</authors>
<title>Principle-based parsing without overgeneration.</title>
<date>1993</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>112--120</pages>
<contexts>
<context position="19828" citStr="Lin, 1993" startWordPosition="3261" endWordPosition="3262">OW, (Lund and Burgess, 1996)). For each pair of a target word and context word, the BOW space records a function of their co-occurrence frequency within a surface window of size 10. The space is constructed from the British National Corpus (BNC), and uses the 2,000 most frequent context words as dimensions. We also consider a “dependency-based” vector space (SYN, (Pad´o and Lapata, 2007)). In this space, target and context words have to be linked by a “valid” dependency path in a dependency graph to count as co-occurring.2 This space was built from BNC dependency parses obtained from Minipar (Lin, 1993). For both spaces, we used pre-experiments to compare two methods for the computation of vector components, namely raw co-occurrence counts, the standard model, and the pointwise mutual information (PMI) definition employed by M&amp;L. Selectional preferences. We use a simple, knowledge-lean representation for selectional preferences inspired by Erk (2007), who models selectional preference through similarity to seen filler vectors va,: We compute the selectional preference vector for word b and relation r as the weighted 2More specifically, we used the minimal context specification and plain weig</context>
</contexts>
<marker>Lin, 1993</marker>
<rawString>D. Lin. 1993. Principle-based parsing without overgeneration. In Proceedings of ACL, 112–120.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Lin</author>
</authors>
<title>Automatic retrieval and clustering of similar words.</title>
<date>1998</date>
<booktitle>In Proceedings of COLING-ACL,</booktitle>
<pages>768--774</pages>
<contexts>
<context position="27109" citStr="Lin, 1998" startWordPosition="4425" endWordPosition="4426">erences of a noun and (left) its lexical vector and (right) inverse object preferences vector (cosine similarity in SYN space) p = 0.2, significantly outperforming both baselines. It is interesting, though, that the subj−1 preference itself (“Selpref only”) is already highly significantly correlated with the human judgments. A comparison of the upper half (BOW) with the lower half (SYN) shows that the dependency-based space generally shows better correlation with human judgements. This corresponds to a beneficial effect of syntactic information found for other applications of semantic spaces (Lin, 1998; Pad´o and Lapata, 2007). All instances of the SELPREF model show highly significant correlations. SELPREF and SELPREF-CUT show very similar performance. They do better than both baselines in the BOW space; however, in the cleaner SYN space, their performance is numerically lower than using selectional preferences only (p = 0.13 vs. 0.16). SELPREF-POW is always significantly better than SELPREF and SELPREF-CUT, and shows the best result of all tested models (p = 0.27, BOW space). The performance is somewhat lower in the SYN space (p = 0.22). However, this difference, and the difference to the</context>
</contexts>
<marker>Lin, 1998</marker>
<rawString>D. Lin. 1998. Automatic retrieval and clustering of similar words. In Proceedings of COLING-ACL, 768–774.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Lund</author>
<author>C Burgess</author>
</authors>
<title>Producing high-dimensional semantic spaces from lexical co-occurrence.</title>
<date>1996</date>
<journal>Behavior Research Methods, Instruments, and Computers,</journal>
<pages>28--203</pages>
<contexts>
<context position="1898" citStr="Lund and Burgess, 1996" startWordPosition="290" endWordPosition="293">ide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase the problem as one of vector composition: The meaning of a target occurrence a in context b is a single new vector c that is a function (for example, the centroid) of the vecto</context>
<context position="19246" citStr="Lund and Burgess, 1996" startWordPosition="3160" endWordPosition="3163">t paraphrase candidates. Experiment 2 considers a broader class of constructions along with annotator-generated paraphrase candidates that are not screened for distinctness. In both experiments, we compare the SVS model against the state-of-theart model by Mitchell and Lapata 2008 (henceforth M&amp;L; cf. Sec. 2 for model details). 4.2 Parameter choices Vector space. In our parameterization of the vector space, we largely follow M&amp;L because their model has been rigorously evaluated and found to outperform a range of other models. Our first space is a traditional “bag-of-words” vector space (BOW, (Lund and Burgess, 1996)). For each pair of a target word and context word, the BOW space records a function of their co-occurrence frequency within a surface window of size 10. The space is constructed from the British National Corpus (BNC), and uses the 2,000 most frequent context words as dimensions. We also consider a “dependency-based” vector space (SYN, (Pad´o and Lapata, 2007)). In this space, target and context words have to be linked by a “valid” dependency path in a dependency graph to count as co-occurring.2 This space was built from BNC dependency parses obtained from Minipar (Lin, 1993). For both spaces,</context>
</contexts>
<marker>Lund, Burgess, 1996</marker>
<rawString>K. Lund, C. Burgess. 1996. Producing high-dimensional semantic spaces from lexical co-occurrence. Behavior Research Methods, Instruments, and Computers, 28:203—208.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C D Manning</author>
<author>P Raghavan</author>
<author>H Sch¨utze</author>
</authors>
<title>Introduction to Information Retrieval.</title>
<date>2008</date>
<publisher>CUP.</publisher>
<marker>Manning, Raghavan, Sch¨utze, 2008</marker>
<rawString>C. D. Manning, P. Raghavan, H. Sch¨utze. 2008. Introduction to Information Retrieval. CUP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McCarthy</author>
<author>J Carroll</author>
</authors>
<title>Disambiguating nouns, verbs, and adjectives using automatically acquired selectional preferences.</title>
<date>2003</date>
<journal>Computational Linguistics,</journal>
<volume>29</volume>
<issue>4</issue>
<contexts>
<context position="1391" citStr="McCarthy and Carroll, 2003" startWordPosition="213" endWordPosition="216">e to integrate syntax into the computation of word meaning in context. In addition, the model performs at and above the state of the art for modeling the contextual adequacy of paraphrases. 1 Introduction Semantic spaces are a popular framework for the representation of word meaning, encoding the meaning of lemmas as high-dimensional vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous</context>
<context position="12163" citStr="McCarthy and Carroll, 2003" startWordPosition="1964" endWordPosition="1968">ssing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he cold red fielder baseball golf dog drift elegant Figure 1: Structured meaning representations for noun ball and verb catch: lexical information plus expectations that integrates lexical information with selectional preferences. Then, we show how </context>
</contexts>
<marker>McCarthy, Carroll, 2003</marker>
<rawString>D. McCarthy, J. Carroll. 2003. Disambiguating nouns, verbs, and adjectives using automatically acquired selectional preferences. Computational Linguistics, 29(4):639–654.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McCarthy</author>
<author>R Navigli</author>
</authors>
<title>SemEval-2007 Task 10: English Lexical Substitution Task.</title>
<date>2007</date>
<booktitle>In Proceedings of SemEval,</booktitle>
<pages>48--53</pages>
<contexts>
<context position="1724" citStr="McCarthy and Navigli, 2007" startWordPosition="263" endWordPosition="266">nal vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase th</context>
<context position="29965" citStr="McCarthy and Navigli, 2007" startWordPosition="4867" endWordPosition="4870">verbs, which means that all disambiguation was done through inverse selectional preferences. As inverse selectional preferences are currently largely unexplored, it is interesting to note that the evidence that they provide for the paraphrase task is as strong as that of the context nouns themselves. 6 Exp. 2: Ranking paraphrases This section reports on a second, more NLP-oriented experiment whose task is to distinguish between appropriate and inappropriate paraphrases on a broader range of constructions. Dataset. For this experiment, we use the SemEval1 lexical substitution (lexsub) dataset (McCarthy and Navigli, 2007), which contains 10 instances each of 200 target words in sentential contexts, drawn from Sharoff’s (2006) English Internet Corpus. Contextually appropriate paraphrases for each instance of each target word were elicited from up to 6 participants. Fig. 4 shows two instances for the verb to work. The distribution over paraphrases can be seen as a characterization of the target word’s meaning in each context. Experimental procedure. In this paper, we predict appropriate paraphrases solely on the basis of a single context word that stands in a direct predicateargument relation to the target word.</context>
</contexts>
<marker>McCarthy, Navigli, 2007</marker>
<rawString>D. McCarthy, R. Navigli. 2007. SemEval-2007 Task 10: English Lexical Substitution Task. In Proceedings of SemEval, 48–53.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S McDonald</author>
<author>C Brew</author>
</authors>
<title>A distributional model of semantic context effects in lexical processing.</title>
<date>2004</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>17--24</pages>
<contexts>
<context position="2212" citStr="McDonald and Brew, 2004" startWordPosition="337" endWordPosition="340"> word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase the problem as one of vector composition: The meaning of a target occurrence a in context b is a single new vector c that is a function (for example, the centroid) of the vectors: c = a O b. The context b can consist of as little as one word, as shown in Example (1). In (1a), the meaning of catch combined with ball is similar to grab, while in (1b), combined with disease, it can be paraphrased by contract. Conversely, verbs can influence the interpretation of nouns: In (1a), ball is un</context>
<context position="7315" citStr="McDonald and Brew (2004)" startWordPosition="1191" endWordPosition="1194">eneral context effects. The first category of models aims at integrating the widest possible range of context information without recourse to linguistic structure. The best-known work in this category is Sch¨utze (1998). He first computes “first-order” vector representations for word meaning by collecting co-occurrence counts from the entire corpus. Then, he determines “second-order” vectors for individual word instances in their context, which is taken to be a simple surface window, by summing up all first-order vectors of the words in this context. The resulting vectors form sense clusters. McDonald and Brew (2004) present a similar model. They compute the expectation for a word wz in a sequence by summing the first-order vectors for the words wi to wz_i and showed that the distance between expectation and first-order vector for wz correlates with human reading times. Predicate-argument combination. The second category of prior studies concentrates on contexts consisting of a single word only, typically modeling the combination of a predicate p and an argument a. Kintsch (2001) uses vector representations of p and a to identify the set of words that are similar to both p and a. After this set has been n</context>
</contexts>
<marker>McDonald, Brew, 2004</marker>
<rawString>S. McDonald, C. Brew. 2004. A distributional model of semantic context effects in lexical processing. In Proceedings of ACL, 17–24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S McDonald</author>
<author>M Ramscar</author>
</authors>
<title>Testing the distributional hypothesis: The influence of context on judgements of semantic similarity.</title>
<date>2001</date>
<booktitle>In Proceedings of CogSci,</booktitle>
<pages>611--616</pages>
<contexts>
<context position="1525" citStr="McDonald and Ramscar, 2001" startWordPosition="233" endWordPosition="236">art for modeling the contextual adequacy of paraphrases. 1 Introduction Semantic spaces are a popular framework for the representation of word meaning, encoding the meaning of lemmas as high-dimensional vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in </context>
</contexts>
<marker>McDonald, Ramscar, 2001</marker>
<rawString>S. McDonald, M. Ramscar. 2001. Testing the distributional hypothesis: The influence of context on judgements of semantic similarity. In Proceedings of CogSci, 611–616.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K McRae</author>
<author>M Spivey-Knowlton</author>
<author>M Tanenhaus</author>
</authors>
<title>Modeling the influence of thematic fit (and other constraints) in on-line sentence comprehension.</title>
<date>1998</date>
<journal>Journal of Memory and Language,</journal>
<pages>38--283</pages>
<contexts>
<context position="11457" citStr="McRae et al., 1998" startWordPosition="1859" endWordPosition="1862">e, in (1a), we assume that upon hearing the phrase “catch a ball”, the hearer will interpret the meaning of “catch” to match typical actions that can be performed with a ball. Similarly, the interpretation of “ball” will reflect the hearer’s expectations about typical things that can be caught. This move to include typical arguments and predicates into a model of word meaning can be motivated both on cognitive and linguistic grounds. In cognitive science, the central role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for</context>
</contexts>
<marker>McRae, Spivey-Knowlton, Tanenhaus, 1998</marker>
<rawString>K. McRae, M. Spivey-Knowlton, M. Tanenhaus. 1998. Modeling the influence of thematic fit (and other constraints) in on-line sentence comprehension. Journal of Memory and Language, 38:283–312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K McRae</author>
<author>M Hare</author>
<author>J Elman</author>
<author>T Ferretti</author>
</authors>
<title>A basis for generating expectancies for verbs from nouns.</title>
<date>2005</date>
<journal>Memory and Cognition,</journal>
<volume>33</volume>
<issue>7</issue>
<contexts>
<context position="11688" citStr="McRae et al., 2005" startWordPosition="1895" endWordPosition="1898">e hearer’s expectations about typical things that can be caught. This move to include typical arguments and predicates into a model of word meaning can be motivated both on cognitive and linguistic grounds. In cognitive science, the central role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been p</context>
<context position="14256" citStr="McRae et al., 2005" startWordPosition="2303" endWordPosition="2306">. Section 4). Likewise, ball is represented by one vector for ball itself, one for ball’s preferences for its modifiers (mod), one vector for the verbs of which it is a subject (subj−1), and one for the verbs of which is an object (obj−1). This representation includes selectional preferences (like subj, obj, mod) exactly parallel to inverse selectional preferences (subj−1, obj−1, comp−1). To our knowledge, preferences of the latter kind have not been studied in computational linguistics. However, their existence is supported in psycholinguistics by priming effects from nouns to typical verbs (McRae et al., 2005). Formally, let D be a vector space (the set of possi1We do not commit to a particular set of relations; see the discussion at the end of this section. Figure 2: Combining predicate and argument via relationspecific semantic expectations ble vectors), and let R be some set of relation labels. In the structured vector space (SVS) model, we represent the meaning of a lemma w as a triple w = (v, R, R−1) where v E D is a lexical vector describing the word w itself, R : R —* D maps each relation label onto a vector that describes w’s selectional preferences, and R−1 : R —* D maps from role labels t</context>
</contexts>
<marker>McRae, Hare, Elman, Ferretti, 2005</marker>
<rawString>K. McRae, M. Hare, J. Elman, T. Ferretti. 2005. A basis for generating expectancies for verbs from nouns. Memory and Cognition, 33(7):1174–1184.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Mitchell</author>
<author>M Lapata</author>
</authors>
<title>Vector-based models of semantic composition.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>236--244</pages>
<contexts>
<context position="2240" citStr="Mitchell and Lapata, 2008" startWordPosition="341" endWordPosition="345">ependent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase the problem as one of vector composition: The meaning of a target occurrence a in context b is a single new vector c that is a function (for example, the centroid) of the vectors: c = a O b. The context b can consist of as little as one word, as shown in Example (1). In (1a), the meaning of catch combined with ball is similar to grab, while in (1b), combined with disease, it can be paraphrased by contract. Conversely, verbs can influence the interpretation of nouns: In (1a), ball is understood as a spherical obje</context>
<context position="4607" citStr="Mitchell and Lapata, 2008" startWordPosition="753" endWordPosition="756">ntation to (2a) and (2b). Thus, existing models are systematically unable to capture this class of phenomena. Single vectors are too weak to represent phrases. The second problem arises in the context of the important open question of how semantic spaces can “scale up” to provide interesting meaning representations for entire sentences. We believe that the current vector composition methods, which result in a single vector c, are not informative enough for this purpose. One proposal for “scaling up” is to straightforwardly interpret c = a O b as the meaning of the phrase a + b (Kintsch, 2001; Mitchell and Lapata, 2008). The problem is that the vector c can only encode a fixed amount of structural information if its dimensionality is fixed, but there is no upper limit on sentence length, and hence on the amount of structure to be encoded. It is difficult to conceive how c could encode deeper semantic properties, like predicateargument structure (distinguishing “dog bites man” and “man bites dog”), that are crucial for sentencelevel semantic tasks such as the recognition of textual entailment (Dagan et al., 2006). An alternative approach to sentence meaning would be to use the vector space representation only</context>
<context position="8171" citStr="Mitchell and Lapata (2008)" startWordPosition="1333" endWordPosition="1336">es with human reading times. Predicate-argument combination. The second category of prior studies concentrates on contexts consisting of a single word only, typically modeling the combination of a predicate p and an argument a. Kintsch (2001) uses vector representations of p and a to identify the set of words that are similar to both p and a. After this set has been narrowed down in a self-inhibitory network, the meaning of the predicateargument combination is obtained by computing the 898 centroid of its members’ vectors. The procedure does not take the relation between p and a into account. Mitchell and Lapata (2008) propose a framework to represent the meaning of the combination p + a as a function f operating on four components: c = f(p, a, R, K) (3) R is the relation holding between p and a, and K additional knowledge. This framework allows sensitivity to the relation. However, the concrete instantiations that Mitchell and Lapata consider disregards K and R, thus sharing the other models’ limitations. They focus instead on methods for the direct combination of p and a: In a comparison between component-wise addition and multiplication of p and a, they find far superior results for the multiplication ap</context>
<context position="18904" citStr="Mitchell and Lapata 2008" startWordPosition="3104" endWordPosition="3107">her the predicate or the argument) is in that context. We perform two experiments that both use the paraphrase task, but differ in their emphasis. Experiment 1 replicates an existing evaluation against human judgments. This evaluation uses synthetic dataset, limited to one particular construction, and constructed to provide maximally distinct paraphrase candidates. Experiment 2 considers a broader class of constructions along with annotator-generated paraphrase candidates that are not screened for distinctness. In both experiments, we compare the SVS model against the state-of-theart model by Mitchell and Lapata 2008 (henceforth M&amp;L; cf. Sec. 2 for model details). 4.2 Parameter choices Vector space. In our parameterization of the vector space, we largely follow M&amp;L because their model has been rigorously evaluated and found to outperform a range of other models. Our first space is a traditional “bag-of-words” vector space (BOW, (Lund and Burgess, 1996)). For each pair of a target word and context word, the BOW space records a function of their co-occurrence frequency within a surface window of size 10. The space is constructed from the British National Corpus (BNC), and uses the 2,000 most frequent contex</context>
</contexts>
<marker>Mitchell, Lapata, 2008</marker>
<rawString>J. Mitchell, M. Lapata. 2008. Vector-based models of semantic composition. In Proceedings of ACL, 236– 244.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Moschitti</author>
<author>S Quarteroni</author>
</authors>
<title>Kernels on linguistic structures for answer extraction.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>113--116</pages>
<location>Columbus, OH.</location>
<contexts>
<context position="10434" citStr="Moschitti and Quarteroni, 2008" startWordPosition="1692" endWordPosition="1695">edict paraphrase appropriateness based on the similarity between vectors. This task can also be addressed with kernel methods, which project items into an implicit feature space for efficient similarity computation. Consequently, vector space methods and kernel methods have both been used for NLP tasks based on similarity, notably Information Retrieval and Textual Entailment. Nevertheless, they place their emphasis on different types of information. Current kernels are mostly tree kernels that compare syntactic structure, and use semantic information mostly for smoothing syntactic similarity (Moschitti and Quarteroni, 2008). In contrast, vector-space models focus on the interaction between the lexical meaning of words in composition. 3 A structured vector space model for word meaning in context In this section, we define the structured vector space (SVS) model of word meaning. The main intuition behind our model is to view the interpretation of a word in context as guided by expectations about typical events. For example, in (1a), we assume that upon hearing the phrase “catch a ball”, the hearer will interpret the meaning of “catch” to match typical actions that can be performed with a ball. Similarly, the inter</context>
</contexts>
<marker>Moschitti, Quarteroni, 2008</marker>
<rawString>A. Moschitti, S. Quarteroni. 2008. Kernels on linguistic structures for answer extraction. In Proceedings of ACL, 113–116, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Narayanan</author>
<author>D Jurafsky</author>
</authors>
<title>A Bayesian model predicts human parse preference and reading time in sentence processing.</title>
<date>2002</date>
<booktitle>In Proceedings of NIPS,</booktitle>
<pages>59--65</pages>
<contexts>
<context position="11581" citStr="Narayanan and Jurafsky, 2002" startWordPosition="1876" endWordPosition="1879"> to match typical actions that can be performed with a ball. Similarly, the interpretation of “ball” will reflect the hearer’s expectations about typical things that can be caught. This move to include typical arguments and predicates into a model of word meaning can be motivated both on cognitive and linguistic grounds. In cognitive science, the central role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role</context>
</contexts>
<marker>Narayanan, Jurafsky, 2002</marker>
<rawString>S. Narayanan, D. Jurafsky. 2002. A Bayesian model predicts human parse preference and reading time in sentence processing. In Proceedings of NIPS, 59–65.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Pad´o</author>
<author>M Lapata</author>
</authors>
<title>Dependency-based construction of semantic space models.</title>
<date>2007</date>
<journal>Computational Linguistics,</journal>
<volume>33</volume>
<issue>2</issue>
<marker>Pad´o, Lapata, 2007</marker>
<rawString>S. Pad´o, M. Lapata. 2007. Dependency-based construction of semantic space models. Computational Linguistics, 33(2):161–199.</rawString>
</citation>
<citation valid="true">
<authors>
<author>U Pad´o</author>
<author>F Keller</author>
<author>M W Crocker</author>
</authors>
<title>Combining syntax and thematic fit in a probabilistic model of sentence processing.</title>
<date>2006</date>
<booktitle>In Proceedings of CogSci,</booktitle>
<pages>657--662</pages>
<marker>Pad´o, Keller, Crocker, 2006</marker>
<rawString>U. Pad´o, F. Keller, M. W. Crocker. 2006. Combining syntax and thematic fit in a probabilistic model of sentence processing. In Proceedings of CogSci, 657–662.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Pad´o</author>
<author>U Pad´o</author>
<author>K Erk</author>
</authors>
<title>Flexible, corpus-based modelling of human plausibility judgements.</title>
<date>2007</date>
<booktitle>In Proceedings of EMNLP/CoNLL,</booktitle>
<pages>400--409</pages>
<marker>Pad´o, Pad´o, Erk, 2007</marker>
<rawString>S. Pad´o, U. Pad´o, K. Erk. 2007. Flexible, corpus-based modelling of human plausibility judgements. In Proceedings of EMNLP/CoNLL, 400–409.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Resnik</author>
</authors>
<title>Selectional constraints: An informationtheoretic model and its computational realization.</title>
<date>1996</date>
<journal>Cognition,</journal>
<pages>61--127</pages>
<contexts>
<context position="11919" citStr="Resnik, 1996" startWordPosition="1931" endWordPosition="1932">al role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of word meaning 899 accuse say claim comp-1 catch subj he co</context>
</contexts>
<marker>Resnik, 1996</marker>
<rawString>P. Resnik. 1996. Selectional constraints: An informationtheoretic model and its computational realization. Cognition, 61:127–159.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Salton</author>
<author>A Wang</author>
<author>C Yang</author>
</authors>
<title>A vector-space model for information retrieval.</title>
<date>1975</date>
<journal>Journal of the American Society for Information Science,</journal>
<pages>18--613</pages>
<contexts>
<context position="1363" citStr="Salton et al., 1975" startWordPosition="209" endWordPosition="212">This makes it possible to integrate syntax into the computation of word meaning in context. In addition, the model performs at and above the state of the art for modeling the contextual adequacy of paraphrases. 1 Introduction Semantic spaces are a popular framework for the representation of word meaning, encoding the meaning of lemmas as high-dimensional vectors. In the default case, the components of these vectors measure the co-occurrence of the lemma with context features over a large corpus. These vectors are able to provide a robust model of semantic similarity that has been used in NLP (Salton et al., 1975; McCarthy and Carroll, 2003; Manning et al., 2008) and to model experimental results in cognitive science (Landauer and Dumais, 1997; McDonald and Ramscar, 2001). Semantic spaces are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occur</context>
</contexts>
<marker>Salton, Wang, Yang, 1975</marker>
<rawString>G. Salton, A. Wang, C. Yang. 1975. A vector-space model for information retrieval. Journal of the American Society for Information Science, 18:613–620.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Sch¨utze</author>
</authors>
<title>Automatic word sense discrimination.</title>
<date>1998</date>
<journal>Computational Linguistics,</journal>
<volume>24</volume>
<issue>1</issue>
<marker>Sch¨utze, 1998</marker>
<rawString>H. Sch¨utze. 1998. Automatic word sense discrimination. Computational Linguistics, 24(1):97–124.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Sharoff</author>
</authors>
<title>Open-source corpora: Using the net to fish for linguistic data.</title>
<date>2006</date>
<journal>International Journal of Corpus Linguistics,</journal>
<volume>11</volume>
<issue>4</issue>
<marker>Sharoff, 2006</marker>
<rawString>S. Sharoff. 2006. Open-source corpora: Using the net to fish for linguistic data. International Journal of Corpus Linguistics, 11(4):435–462.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Smolensky</author>
</authors>
<title>Tensor product variable binding and the representation of symbolic structures in connectionist systems.</title>
<date>1990</date>
<journal>Artificial Intelligence,</journal>
<pages>46--159</pages>
<contexts>
<context position="2156" citStr="Smolensky, 1990" startWordPosition="331" endWordPosition="332">s are attractive because they provide a model of word meaning that is independent of dictionary senses and their much-discussed problems (Kilgarriff, 1997; McCarthy and Navigli, 2007). In a default semantic space as described above, each vector represents one lemma, averaging over all its possible usages (Landauer and Dumais, 1997; Lund and Burgess, 1996). Since the meaning of words can vary substantially between occurrences (e.g., for polysemous words), the next necessary step is to characterize the meaning of individual words in context. There have been several approaches in the literature (Smolensky, 1990; Sch¨utze, 1998; Kintsch, 2001; McDonald and Brew, 2004; Mitchell and Lapata, 2008) that compute meaning in context from lemma vectors. Most of these studies phrase the problem as one of vector composition: The meaning of a target occurrence a in context b is a single new vector c that is a function (for example, the centroid) of the vectors: c = a O b. The context b can consist of as little as one word, as shown in Example (1). In (1a), the meaning of catch combined with ball is similar to grab, while in (1b), combined with disease, it can be paraphrased by contract. Conversely, verbs can in</context>
<context position="8824" citStr="Smolensky (1990)" startWordPosition="1445" endWordPosition="1446"> meaning of the combination p + a as a function f operating on four components: c = f(p, a, R, K) (3) R is the relation holding between p and a, and K additional knowledge. This framework allows sensitivity to the relation. However, the concrete instantiations that Mitchell and Lapata consider disregards K and R, thus sharing the other models’ limitations. They focus instead on methods for the direct combination of p and a: In a comparison between component-wise addition and multiplication of p and a, they find far superior results for the multiplication approach. Tensor product-based models. Smolensky (1990) uses tensor product to combine two word vectors a and b into a vector c representing the expression a+b. The vector c is located in a very high-dimensional space and is thus capable of encoding the structure of the expression; however, this makes the model infeasible in practice, as dimensionality rises with every word added to the representation. Jones and Mewhort (2007) represent lemma meaning by using circular convolution to encode n-gram co-occurrence information into vectors of fixed dimensionality. Similar to Brew and McDonald (2004), they predict most likely next words in a sequence, w</context>
</contexts>
<marker>Smolensky, 1990</marker>
<rawString>P. Smolensky. 1990. Tensor product variable binding and the representation of symbolic structures in connectionist systems. Artificial Intelligence, 46:159–216.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Szpektor</author>
<author>I Dagan</author>
<author>R Bar-Haim</author>
<author>J Goldberger</author>
</authors>
<title>Contextual preferences.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL, 683– 691,</booktitle>
<location>Columbus, OH.</location>
<marker>Szpektor, Dagan, Bar-Haim, Goldberger, 2008</marker>
<rawString>I. Szpektor, I. Dagan, R. Bar-Haim, J. Goldberger. 2008. Contextual preferences. In Proceedings of ACL, 683– 691, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Wilks</author>
</authors>
<title>Preference semantics. In Formal Semantics of Natural Language.</title>
<date>1975</date>
<publisher>CUP.</publisher>
<contexts>
<context position="11865" citStr="Wilks, 1975" startWordPosition="1923" endWordPosition="1924">nd linguistic grounds. In cognitive science, the central role of expectations about typical events for human language processing is well-established. Expectations affect reading times (McRae et al., 1998), the interpretation of participles (Ferretti et al., 2003), and sentence processing generally (Narayanan and Jurafsky, 2002; Pad´o et al., 2006). Expectations exist both for verbs and nouns (McRae et al., 1998; McRae et al., 2005). In linguistics, expectations, in the form of selectional restrictions and selectional preferences, have long been used in semantic theories (Katz and Fodor, 1964; Wilks, 1975), and more recently induced from corpora (Resnik, 1996; Brockmann and Lapata, 2003). Attention has mostly been limited to selectional preferences of verbs, which have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (McCarthy and Carroll, 2003) and semantic role labeling (Gildea and Jurafsky, 2002). Recently, a vectorspaced model of selectional preferences has been proposed that computes the typicality of an argument simply through similarity to previously seen arguments (Erk, 2007; Pad´o et al., 2007). We first present the SVS model of wor</context>
</contexts>
<marker>Wilks, 1975</marker>
<rawString>Y. Wilks. 1975. Preference semantics. In Formal Semantics of Natural Language. CUP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Yeh</author>
</authors>
<title>More accurate tests for the statistical significance of result differences.</title>
<date>2000</date>
<booktitle>In Proceeedings of COLING,</booktitle>
<pages>947--953</pages>
<contexts>
<context position="22825" citStr="Yeh, 2000" startWordPosition="3738" endWordPosition="3739"> meaning of a word a in the context of a word b. A first baseline that every model must beat is simply using the original vector for a. We call this baseline “target only”. Since we assume that the selectional preferences of b model the expectations for a, we use b’s selectional preference vector for the given relation as a second baseline, “selpref only”. 3Since we focus on the size-invariant cosine similarity, the use of this model does not require normalization. Differences between the performance of models were tested for significance using a stratified shuffling-based randomization test (Yeh, 2000).4. 5 Exp. 1: Predicting similarity ratings In our first experiment, we attempt to predict human similarity judgments. This experiment is a replication of the evaluation of M&amp;L on their dataset5. Dataset. The M&amp;L dataset comprises a total of 3,600 human similarity judgements for 120 experimental items. Each item, as shown in Figure 3, consists of an intransitive verb and a subject noun that are combined with a “landmark”, a synonym of the verb that is chosen to be either similar or dissimilar to the verb in the context of the given subject. The dataset was constructed by extracting pairs of su</context>
</contexts>
<marker>Yeh, 2000</marker>
<rawString>A. Yeh. 2000. More accurate tests for the statistical significance of result differences. In Proceeedings of COLING, 947–953.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>