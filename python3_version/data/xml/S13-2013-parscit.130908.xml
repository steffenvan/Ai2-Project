<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.030792">
<title confidence="0.95972">
SUTIME: Evaluation in TempEval-3
</title>
<author confidence="0.997821">
Angel X. Chang Christopher D. Manning
</author>
<affiliation confidence="0.999322">
Stanford University Stanford University
</affiliation>
<email confidence="0.999428">
angelx@cs.stanford.edu manning@cs.stanford.edu
</email>
<sectionHeader confidence="0.99565" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999711888888889">
We analyze the performance of SUTIME, a
temporal tagger for recognizing and normal-
izing temporal expressions, on TempEval-3
Task A for English. SUTIME is available as
part of the Stanford CoreNLP pipeline and can
be used to annotate documents with temporal
information. Testing on the TempEval-3 eval-
uation corpus showed that this system is com-
petitive with state-of-the-art techniques.
</bodyText>
<sectionHeader confidence="0.998799" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999767173913044">
The importance of modeling temporal information
is increasingly apparent in natural language appli-
cations, such as information extraction and ques-
tion answering. Extracting temporal information re-
quires the ability to recognize temporal expressions,
and to convert them from text to a normalized form
that is easy to process. Temporal tagging systems
are designed to address this problem. In this paper,
we evaluate the performance of the SUTIME (Chang
and Manning, 2012) rule-based temporal tagging
system.
We evaluate the performance of SUTIME on ex-
tracting temporal information in TempEval-3 (Uz-
Zaman et al., 2013), which requires systems to auto-
matically annotate documents with temporal infor-
mation using TimeML (Pustejovsky et al., 2003).
The TempEval-3 training data contains gold human
annotated data from TimeBank, AQUAINT, and a
new dataset of silver data automatically annotated
using a combination of TipSem (Llorens et al., 2010)
and TRIOS (UzZaman and Allen, 2010), two of the
best performing systems from TempEval-2 (Verha-
gen et al., 2010).
</bodyText>
<sectionHeader confidence="0.991445" genericHeader="method">
2 System Description
</sectionHeader>
<bodyText confidence="0.999943222222222">
We use the Stanford CoreNLP1 pipeline with SU-
TIME to identify and normalize TIMEX32 ex-
pressions. SUTIME is incorporated into Stanford
CoreNLP as part of the Named Entity Recognition
annotator. For TempEval-3, we use the standard set
of rules provided with SUTIME. Since SUTIME can
also recognize temporal expressions whose values
are not specified by TIMEX3, we ran SUTIME in
a TIMEX3 compatible mode.3
</bodyText>
<subsectionHeader confidence="0.878633">
2.1 SUTime
</subsectionHeader>
<bodyText confidence="0.9987146875">
SUTIME is a rule-based temporal tagger built on
regular expression patterns over tokens. Tempo-
ral expressions are bounded in their complexity, so
many of them can be captured using finite automata.
As shown by systems such as FASTUS (Hobbs et
al., 1997), a cascade of finite automata can be very
effective at extracting information from text. With
SUTIME, we follow a similar staged strategy of
(i) building up patterns over individual words to
find numerical expressions; then (ii) using patterns
over words and numerical expressions to find sim-
ple temporal expressions; and finally (iii) forming
composite patterns over the discovered temporal ex-
pressions.
SUTIME recognizes Time, Duration, Interval,
and Set according to the TIMEX3 specification. In
</bodyText>
<footnote confidence="0.997901666666667">
1nlp.stanford.edu/software/corenlp.shtml
2www.timeml.org
3sutime.restrictToTimex3 = true
</footnote>
<page confidence="0.98723">
78
</page>
<bodyText confidence="0.996386704545455">
Second Joint Conference on Lexical and Computational Semantics (*SEM), Volume 2: Seventh International Workshop on Semantic
Evaluation (SemEval 2013), pages 78–82, Atlanta, Georgia, June 14-15, 2013. c�2013 Association for Computational Linguistics
addition, it recognizes nested time expressions and
duration ranges. To achieve this it uses a temporal
pattern language defined over tokens (a regular ex-
pression language for expressing how tokenized text
should be mapped to temporal objects). SUTIME is
built on top of TOKENSREGEX,4 a generic frame-
work included in Stanford CoreNLP for definining
patterns over text and mapping to semantic objects.
With TOKENSREGEX we have access to any anno-
tations provided by the Stanford CoreNLP system,
such as the part-of-speech tag or the lemma. The full
specification of the pattern language is available at
nlp.stanford.edu/software/sutime.shtml.
To recognize temporal expressions, SUTIME ap-
plies three types of rules, in the following order: 1)
text regex rules: mappings from simple regular ex-
pressions over characters or tokens to temporal rep-
resentations; 2) compositional rules: mappings from
regular expressions over chunks (both tokens and
temporal objects) to temporal representations and
3) filtering rules: in which ambiguous expressions
that are likely to not be temporal expressions are re-
moved from the list of candidates (such as fall and
spring by themselves). The compositional rules are
applied repeatedly until the final list of time expres-
sions stablizes.
After all the temporal expressions have been rec-
ognized, each temporal expression is associated with
a temporal object. Each temporal object is resolved
with respect to the reference date using heuristic
rules. In this step, relative times are converted to
an absolute time, and composite time objects are
simplified as much as possible. The final resolution
of relative temporal expressions is currently limited
due to the usage of simple hard-coded rules (e.g. rel-
ative to document date with local context inform-
ing before and after heuristics). Finally, SUTIME
will take the internal time representation and pro-
duce a TIMEX3 annotation for each temporal ex-
pression. SUTIME currently only handles English.
It can however, be extended to other languages by
creating sets of rules for additional languages.
</bodyText>
<sectionHeader confidence="0.998359" genericHeader="method">
3 Evaluation
</sectionHeader>
<bodyText confidence="0.991531130434783">
We evaluated SUTIME’s performance on the
TempEval-3 Task A for English. Task A consists
4nlp.stanford.edu/software/tokensregex.shtml
of determining the extent of time expressions as de-
fined by the TimeML TIMEX3 tag, as well as pro-
viding normalized attributes for type and value. Ex-
tracted temporal expressions from the system and
the gold are matched, and precision, recall, and F1
are computed. For the evaluation of extents, there
are two metrics: a relaxed match score for identi-
fying a matching temporal expression, and a strict
match that requires the text to be matched exactly.
For example, identifying the twentieth century when
the gold is twentieth centry will give a relaxed match
but not a strict match. For the type and value at-
tributes, an accuracy and a measure of the F1 with
respect to the relaxed match is given.
We compare SUTIME’s performance with several
other top systems on the English TempEval-3 Task
A. We also include TIPSem which was used to cre-
ate the silver data for TempEval-3 as a baseline. Of
the systems that prepared multiple runs, we selected
the best performing run to report. Table 1 gives the
results for these systems on the TempEval-3 evalu-
ation set. Interestingly, NavyTime which uses SU-
TIME for Task A, actually did better than SUTIME
in the value normalization and is effectively the 2nd
best system in Task A. The performance of Navy-
Time is otherwise identical to SUTIME. In Navy-
Time the normalization was tuned to the TimeBank
annotation whereas the SUTIME submission was
untuned. SUTIME has the highest recall in discov-
ering temporal expressions. It also has the high-
est overall relaxed F1, slightly higher than Heidel-
Time (Str¨otgen and Gertz, 2010) (cleartk had the
highest strict F1 of 82.71). Not surprisingly, the sys-
tem used to generate the silver data, TIPSem, had
the highest precision when extracting temporal ex-
pressions. For normalization, HeidelTime had the
overall best performance on value and type. Both
SUTIME and HeidelTime are rule-based, indicating
the effectiveness of using rules for this domain. An-
other top performing system, ManTime used condi-
tional random fields, a machine learning approach,
for identifying temporal expressions and rules for
normalization.
</bodyText>
<page confidence="0.986953">
79
</page>
<table confidence="0.9999035">
Identification Normalization
Relaxed Strict Value Type
System Fl P R Fl P R Fl Accuracy Fl Accuracy
SUTime 90.32 89.36 91.30 79.57 78.72 80.43 67.38 74.60 80.29 88.90
NavyTime 90.32 89.36 91.30 79.57 78.72 80.43 70.97 78.58 80.29 88.90
HeidelTime 90.30 93.08 87.68 81.34 83.85 78.99 77.61 85.95 82.09 90.91
ManTime 89.66 95.12 84.78 74.33 78.86 70.29 68.97 76.92 77.39 86.31
TIPSem 84.90 97.20 75.36 81.63 93.46 72.46 65.31 76.93 75.92 89.42
</table>
<tableCaption confidence="0.999917">
Table 1: TempEval-3; English Platinum Test set.
</tableCaption>
<sectionHeader confidence="0.998313" genericHeader="method">
4 Error Analysis
</sectionHeader>
<bodyText confidence="0.967998825">
Given the small size of the platinum data set, we
were able to perform thorough error analysis of the
errors made by SUTIME on the data set.
Table 2 shows the number of temporal expres-
sions marked by the evaluation script as being in-
correct. The errors can be grouped into three broad
categories: i) those proposed by the system but not
in the gold (relaxed precision errors), ii) those in the
gold but not identified by the system (relaxed recall
errors), and iii) temporal expressions with the wrong
value (and sometimes type) normalization.
Of the 14 precision errors, many of the temporal
expressions suggested by the system are reasonable.
For instance, current is identified by the system. A
few of the errors are not actual temporal expres-
sions. For example, in the phrase British Summer
Time, Summer was identified as a temporal expres-
sion which is not correct.
Given SUTime’s high recall, only a few temporal
expressions in the gold are not found by the system.
In most cases, the temporal expressions missed by
SUTIME do not have a well defined value associated
with them (e.g. “digital age”, “each season”).
Performance using the strict match metric is not
as good as some other systems. SUTIME was
derived from GUTime (Mani, 2004) and focuses
on matching longer time expressions as per ear-
lier guidelines. Thus it is less conformant to the
more current TimeML guidelines of having minimal
blocks. For instance, SUTIME treats 2009-2010 as
a range, whereas the gold standard treats it as two
separate dates. This results in an incorrect value nor-
malization and a recall error.
We now examine the cases where the SUTIME
normalization differed from the gold. Table 3 shows
a further breakdown of these errors.
Error type Count
System not in gold (precision)
Gold not in system (recall)
Wrong value
</bodyText>
<tableCaption confidence="0.776504769230769">
Table 2: Summary of errors made by SUTIME on the
platinum data set
Error type Count
Value incorrectly resolved wrt to DCT
Value should not be resolved wrt to DCT
DURATION resolved to DATE
DATE misidentified as DURATION
Wrong granularity
Wrong normalization for set
Different normalization
Other
Table 3: Break down of value errors made by SUTime on
the platinum data set
</tableCaption>
<bodyText confidence="0.9998755">
One weakness of SUTIME is that temporal ex-
pressions are always resolved with respect to the
document creation time (DCT). While this heuris-
tic works fairly well in most cases, and SUTime can
achieve reasonable performance, there are obvious
limitations with this approach. For instance, some-
times it is more appropriate to resolve the tempo-
ral expression with respect to nearby dates or events
in the text. As an example, in the test document
CNN 20130322 1003 there is the sentence Call me
Sunday night at 8 PM at the resort that is part of
an email of an unknown date. In this case, SUTIME
still attempts to resolve the temporal expression Sun-
day night at 8 PM using the document creation time
which is incorrect.
There can be inherent ambiguity as to which time
point a time expression refers to. For instance, given
a reference date of 2011-09-19, a Monday, it is un-
</bodyText>
<figure confidence="0.9416996">
14
12
32
7
5
6
3
4
2
3
</figure>
<page confidence="0.779283">
2
80
</page>
<bodyText confidence="0.999926025">
clear whether Friday refers to 2011-09-16 or 2011-
09-23. SUTIME will normally resolve to the closest
date/time with respect to the reference date. SU-
TIME also has some rules that will use the verb tense
of the surrounding words to attempt to resolve the
ambiguity. For instance, if a verb close to the tem-
poral expression has a POS tag of VBD (past tense
verb) then the expression will be resolved so that it
occurs before the document date.
Most of the type errors are due to confusions be-
tween DATE and DURATION. Often SUTIME will
attempt to resolve a DURATION as a DATE. For
instance, given the phrase “the following decade”,
SUTIME will attempt to resolve that as a DATE with
value 202X (using a DCT of 2013-03-22). While
this can be desirable in some cases, this is not what
the gold annotation contains: type of DURATION
and value of P1DE. In some other cases, SUTIME
misidentifies DURATION as a DATE. For instance,
it lacks rules to parse the 3:07:35 in finishing in
3:07:35 as a duration.
Another problem faced by SUTIME is in figuring
out the correct granularity to use. Given a document
date of 2013-03-22, it will identify two years ago as
being 2011-03-22. However, since these expressions
indicate a less precise date, the gold annotation is a
simple 2011.
SUTIME also provided the wrong normalization
for SET in several cases. For the expression every
morning, SUTIME reported a value of TMO when
the gold annotation was XXXX-XX-XXTMO. In
other cases, SUTIME offered an alternative normal-
ization, for instance, a value of 19XX for the 20th
century instead of just 19. And PTXM instead of
PXM for minutes. In this case, the PTXM is more
correct as the T is required by ISO-8601 to differ-
entiate between M for month, and M for minutes.
The remaining errors are due to lacking rules such
as SUTIME’s inability to handle time zones in cer-
tain cases.
</bodyText>
<sectionHeader confidence="0.999766" genericHeader="method">
5 Discussion
</sectionHeader>
<bodyText confidence="0.999953033333333">
As a rule-based system, SUTIME is limited by the
coverage of its rule set for the different types of
temporal expressions it can recognize. Many of the
errors in SUTIME can be resolved by adding more
rules to the system.
One key to improving the normalization of the
value is to have better resolution of ambiguous tem-
poral expressions. Identifying when temporal ex-
pressions should not be resolved using the document
creation time, and how the temporal expression re-
lates to other temporal expressions or events within
the document is also critical. This suggests that nor-
malization can benefit from being able to perform
TempEval-3 Task C well.
Another approach to improving the system would
be to provide different modes of use: a mode for end
users that would like complex temporal expressions
to be identified, or a mode for more basic temporal
expressions that can be used as input for other tem-
poral systems. Allowing for nested TIMEXes would
also benefit the system’s performance. For example,
2009-2010 should be a range, with a nested timex
for 2009 and 2010.
Another interesting direction to explore would
be to evaluate the performance of SUTIME on do-
mains other than current news. Since SUTIME also
supports temporal expressions such as holidays and
more distant dates such as 400 B.C., it would be in-
teresting to see how well SUTIME can extract these
different types of temporal expressions.
</bodyText>
<sectionHeader confidence="0.999233" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999928">
We have evaluated SUTIME by participating in
TempEval-3 Task A and have shown that it is a
competitive system for extracting time expressions.
By providing it as part of the Stanford CoreNLP
pipeline, we hope that it can be easily used as a basic
component for building temporally aware systems.
</bodyText>
<sectionHeader confidence="0.99495" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999805">
We would like to acknowledge Justin Heermann,
Jonathan Potter, Garrett Schlesinger and John Bauer
for helping to implement parts of the system for
TempEval-3.
</bodyText>
<sectionHeader confidence="0.998837" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9894055">
Angel X. Chang and Christopher D. Manning. 2012.
SUTIME: A library for recognizing and normalizing
time expressions. In 8th International Conference on
Language Resources and Evaluation (LREC 2012).
Jerry R. Hobbs, Douglas E. Appelt, John Bear, David Is-
rael, Megumi Kameyama, Mark Stickel, and Mabry
</reference>
<page confidence="0.983669">
81
</page>
<reference confidence="0.999631682926829">
Tyson. 1997. FASTUS: A cascaded finite-state
transducer for extracting information from natural-
language text. Finite State Devices for Natural Lan-
guage Processing, pages 383–406.
Hector Llorens, Estela Saquete, and Borja Navarro.
2010. TIPSem (English and Spanish): Evaluating
CRFs and semantic roles in TempEval-2. In Proceed-
ings of the 5th International Workshop on Semantic
Evaluation, pages 284–291. Association for Compu-
tational Linguistics.
Inderjeet Mani. 2004. Recent developments in temporal
information extraction. In Proceedings of RANLP03,
pages 45–60.
James Pustejovsky, Jos Castao, Robert Ingria, Roser
Saur, Robert Gaizauskas, Andrea Setzer, and Graham
Katz. 2003. TimeML: Robust specification of event
and temporal expressions in text. In in Fifth Interna-
tional Workshop on Computational Semantics (IWCS-
5.
Jannik Str¨otgen and Michael Gertz. 2010. HeidelTime:
High quality rule-based extraction and normalization
of temporal expressions. In Proceedings of the 5th In-
ternational Workshop on Semantic Evaluation, pages
321–324.
Naushad UzZaman and James F Allen. 2010. TRIPS and
TRIOS system for TempEval-2: Extracting temporal
information from text. In Proceedings of the 5th In-
ternational Workshop on Semantic Evaluation, pages
276–283. Association for Computational Linguistics.
Naushad UzZaman, Hector Llorens, Leon Derczynski,
Marc Verhagen, James Allen, and James Pustejovsky.
2013. SemEval-2013 Task 1: TempEval-3: Evaluat-
ing time expressions, events, and temporal relations.
In Proceedings of the 7th International Workshop on
Semantic Evaluation, SemEval ’13.
Marc Verhagen, Roser Saur´ı, Tommaso Caselli, and
James Pustejovsky. 2010. SemEval-2010 task 13:
TempEval-2. In Proceedings of the 5th Interna-
tional Workshop on Semantic Evaluation, SemEval
’10, pages 57–62. Association for Computational Lin-
guistics.
</reference>
<page confidence="0.99912">
82
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.951120">
<title confidence="0.978215">Evaluation in TempEval-3</title>
<author confidence="0.999654">Angel X Chang Christopher D Manning</author>
<affiliation confidence="0.999938">Stanford University Stanford University</affiliation>
<email confidence="0.999301">angelx@cs.stanford.edumanning@cs.stanford.edu</email>
<abstract confidence="0.9969995">analyze the performance of a temporal tagger for recognizing and normalizing temporal expressions, on TempEval-3 A for English. available as part of the Stanford CoreNLP pipeline and can be used to annotate documents with temporal information. Testing on the TempEval-3 evaluation corpus showed that this system is competitive with state-of-the-art techniques.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Angel X Chang</author>
<author>Christopher D Manning</author>
</authors>
<title>SUTIME: A library for recognizing and normalizing time expressions.</title>
<date>2012</date>
<booktitle>In 8th International Conference on Language Resources and Evaluation (LREC</booktitle>
<contexts>
<context position="1040" citStr="Chang and Manning, 2012" startWordPosition="145" endWordPosition="148">emporal information. Testing on the TempEval-3 evaluation corpus showed that this system is competitive with state-of-the-art techniques. 1 Introduction The importance of modeling temporal information is increasingly apparent in natural language applications, such as information extraction and question answering. Extracting temporal information requires the ability to recognize temporal expressions, and to convert them from text to a normalized form that is easy to process. Temporal tagging systems are designed to address this problem. In this paper, we evaluate the performance of the SUTIME (Chang and Manning, 2012) rule-based temporal tagging system. We evaluate the performance of SUTIME on extracting temporal information in TempEval-3 (UzZaman et al., 2013), which requires systems to automatically annotate documents with temporal information using TimeML (Pustejovsky et al., 2003). The TempEval-3 training data contains gold human annotated data from TimeBank, AQUAINT, and a new dataset of silver data automatically annotated using a combination of TipSem (Llorens et al., 2010) and TRIOS (UzZaman and Allen, 2010), two of the best performing systems from TempEval-2 (Verhagen et al., 2010). 2 System Descri</context>
</contexts>
<marker>Chang, Manning, 2012</marker>
<rawString>Angel X. Chang and Christopher D. Manning. 2012. SUTIME: A library for recognizing and normalizing time expressions. In 8th International Conference on Language Resources and Evaluation (LREC 2012).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerry R Hobbs</author>
<author>Douglas E Appelt</author>
<author>John Bear</author>
<author>David Israel</author>
<author>Megumi Kameyama</author>
<author>Mark Stickel</author>
<author>Mabry Tyson</author>
</authors>
<title>FASTUS: A cascaded finite-state transducer for extracting information from naturallanguage text. Finite State Devices for Natural Language Processing,</title>
<date>1997</date>
<pages>383--406</pages>
<contexts>
<context position="2313" citStr="Hobbs et al., 1997" startWordPosition="345" endWordPosition="348">E to identify and normalize TIMEX32 expressions. SUTIME is incorporated into Stanford CoreNLP as part of the Named Entity Recognition annotator. For TempEval-3, we use the standard set of rules provided with SUTIME. Since SUTIME can also recognize temporal expressions whose values are not specified by TIMEX3, we ran SUTIME in a TIMEX3 compatible mode.3 2.1 SUTime SUTIME is a rule-based temporal tagger built on regular expression patterns over tokens. Temporal expressions are bounded in their complexity, so many of them can be captured using finite automata. As shown by systems such as FASTUS (Hobbs et al., 1997), a cascade of finite automata can be very effective at extracting information from text. With SUTIME, we follow a similar staged strategy of (i) building up patterns over individual words to find numerical expressions; then (ii) using patterns over words and numerical expressions to find simple temporal expressions; and finally (iii) forming composite patterns over the discovered temporal expressions. SUTIME recognizes Time, Duration, Interval, and Set according to the TIMEX3 specification. In 1nlp.stanford.edu/software/corenlp.shtml 2www.timeml.org 3sutime.restrictToTimex3 = true 78 Second J</context>
</contexts>
<marker>Hobbs, Appelt, Bear, Israel, Kameyama, Stickel, Tyson, 1997</marker>
<rawString>Jerry R. Hobbs, Douglas E. Appelt, John Bear, David Israel, Megumi Kameyama, Mark Stickel, and Mabry Tyson. 1997. FASTUS: A cascaded finite-state transducer for extracting information from naturallanguage text. Finite State Devices for Natural Language Processing, pages 383–406.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hector Llorens</author>
<author>Estela Saquete</author>
<author>Borja Navarro</author>
</authors>
<title>TIPSem (English and Spanish): Evaluating CRFs and semantic roles in TempEval-2.</title>
<date>2010</date>
<booktitle>In Proceedings of the 5th International Workshop on Semantic Evaluation,</booktitle>
<pages>284--291</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="1511" citStr="Llorens et al., 2010" startWordPosition="215" endWordPosition="218">ess. Temporal tagging systems are designed to address this problem. In this paper, we evaluate the performance of the SUTIME (Chang and Manning, 2012) rule-based temporal tagging system. We evaluate the performance of SUTIME on extracting temporal information in TempEval-3 (UzZaman et al., 2013), which requires systems to automatically annotate documents with temporal information using TimeML (Pustejovsky et al., 2003). The TempEval-3 training data contains gold human annotated data from TimeBank, AQUAINT, and a new dataset of silver data automatically annotated using a combination of TipSem (Llorens et al., 2010) and TRIOS (UzZaman and Allen, 2010), two of the best performing systems from TempEval-2 (Verhagen et al., 2010). 2 System Description We use the Stanford CoreNLP1 pipeline with SUTIME to identify and normalize TIMEX32 expressions. SUTIME is incorporated into Stanford CoreNLP as part of the Named Entity Recognition annotator. For TempEval-3, we use the standard set of rules provided with SUTIME. Since SUTIME can also recognize temporal expressions whose values are not specified by TIMEX3, we ran SUTIME in a TIMEX3 compatible mode.3 2.1 SUTime SUTIME is a rule-based temporal tagger built on reg</context>
</contexts>
<marker>Llorens, Saquete, Navarro, 2010</marker>
<rawString>Hector Llorens, Estela Saquete, and Borja Navarro. 2010. TIPSem (English and Spanish): Evaluating CRFs and semantic roles in TempEval-2. In Proceedings of the 5th International Workshop on Semantic Evaluation, pages 284–291. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
</authors>
<title>Recent developments in temporal information extraction.</title>
<date>2004</date>
<booktitle>In Proceedings of RANLP03,</booktitle>
<pages>45--60</pages>
<contexts>
<context position="9225" citStr="Mani, 2004" startWordPosition="1434" endWordPosition="1435">e reasonable. For instance, current is identified by the system. A few of the errors are not actual temporal expressions. For example, in the phrase British Summer Time, Summer was identified as a temporal expression which is not correct. Given SUTime’s high recall, only a few temporal expressions in the gold are not found by the system. In most cases, the temporal expressions missed by SUTIME do not have a well defined value associated with them (e.g. “digital age”, “each season”). Performance using the strict match metric is not as good as some other systems. SUTIME was derived from GUTime (Mani, 2004) and focuses on matching longer time expressions as per earlier guidelines. Thus it is less conformant to the more current TimeML guidelines of having minimal blocks. For instance, SUTIME treats 2009-2010 as a range, whereas the gold standard treats it as two separate dates. This results in an incorrect value normalization and a recall error. We now examine the cases where the SUTIME normalization differed from the gold. Table 3 shows a further breakdown of these errors. Error type Count System not in gold (precision) Gold not in system (recall) Wrong value Table 2: Summary of errors made by S</context>
</contexts>
<marker>Mani, 2004</marker>
<rawString>Inderjeet Mani. 2004. Recent developments in temporal information extraction. In Proceedings of RANLP03, pages 45–60.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Jos Castao</author>
<author>Robert Ingria</author>
<author>Roser Saur</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Graham Katz</author>
</authors>
<title>TimeML: Robust specification of event and temporal expressions in text.</title>
<date>2003</date>
<booktitle>In in Fifth International Workshop on Computational Semantics (IWCS5.</booktitle>
<contexts>
<context position="1312" citStr="Pustejovsky et al., 2003" startWordPosition="185" endWordPosition="188">ormation extraction and question answering. Extracting temporal information requires the ability to recognize temporal expressions, and to convert them from text to a normalized form that is easy to process. Temporal tagging systems are designed to address this problem. In this paper, we evaluate the performance of the SUTIME (Chang and Manning, 2012) rule-based temporal tagging system. We evaluate the performance of SUTIME on extracting temporal information in TempEval-3 (UzZaman et al., 2013), which requires systems to automatically annotate documents with temporal information using TimeML (Pustejovsky et al., 2003). The TempEval-3 training data contains gold human annotated data from TimeBank, AQUAINT, and a new dataset of silver data automatically annotated using a combination of TipSem (Llorens et al., 2010) and TRIOS (UzZaman and Allen, 2010), two of the best performing systems from TempEval-2 (Verhagen et al., 2010). 2 System Description We use the Stanford CoreNLP1 pipeline with SUTIME to identify and normalize TIMEX32 expressions. SUTIME is incorporated into Stanford CoreNLP as part of the Named Entity Recognition annotator. For TempEval-3, we use the standard set of rules provided with SUTIME. Si</context>
</contexts>
<marker>Pustejovsky, Castao, Ingria, Saur, Gaizauskas, Setzer, Katz, 2003</marker>
<rawString>James Pustejovsky, Jos Castao, Robert Ingria, Roser Saur, Robert Gaizauskas, Andrea Setzer, and Graham Katz. 2003. TimeML: Robust specification of event and temporal expressions in text. In in Fifth International Workshop on Computational Semantics (IWCS5.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jannik Str¨otgen</author>
<author>Michael Gertz</author>
</authors>
<title>HeidelTime: High quality rule-based extraction and normalization of temporal expressions.</title>
<date>2010</date>
<booktitle>In Proceedings of the 5th International Workshop on Semantic Evaluation,</booktitle>
<pages>321--324</pages>
<marker>Str¨otgen, Gertz, 2010</marker>
<rawString>Jannik Str¨otgen and Michael Gertz. 2010. HeidelTime: High quality rule-based extraction and normalization of temporal expressions. In Proceedings of the 5th International Workshop on Semantic Evaluation, pages 321–324.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Naushad UzZaman</author>
<author>James F Allen</author>
</authors>
<title>TRIPS and TRIOS system for TempEval-2: Extracting temporal information from text.</title>
<date>2010</date>
<booktitle>In Proceedings of the 5th International Workshop on Semantic Evaluation,</booktitle>
<pages>276--283</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="1547" citStr="UzZaman and Allen, 2010" startWordPosition="221" endWordPosition="224"> designed to address this problem. In this paper, we evaluate the performance of the SUTIME (Chang and Manning, 2012) rule-based temporal tagging system. We evaluate the performance of SUTIME on extracting temporal information in TempEval-3 (UzZaman et al., 2013), which requires systems to automatically annotate documents with temporal information using TimeML (Pustejovsky et al., 2003). The TempEval-3 training data contains gold human annotated data from TimeBank, AQUAINT, and a new dataset of silver data automatically annotated using a combination of TipSem (Llorens et al., 2010) and TRIOS (UzZaman and Allen, 2010), two of the best performing systems from TempEval-2 (Verhagen et al., 2010). 2 System Description We use the Stanford CoreNLP1 pipeline with SUTIME to identify and normalize TIMEX32 expressions. SUTIME is incorporated into Stanford CoreNLP as part of the Named Entity Recognition annotator. For TempEval-3, we use the standard set of rules provided with SUTIME. Since SUTIME can also recognize temporal expressions whose values are not specified by TIMEX3, we ran SUTIME in a TIMEX3 compatible mode.3 2.1 SUTime SUTIME is a rule-based temporal tagger built on regular expression patterns over tokens</context>
</contexts>
<marker>UzZaman, Allen, 2010</marker>
<rawString>Naushad UzZaman and James F Allen. 2010. TRIPS and TRIOS system for TempEval-2: Extracting temporal information from text. In Proceedings of the 5th International Workshop on Semantic Evaluation, pages 276–283. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Naushad UzZaman</author>
<author>Hector Llorens</author>
<author>Leon Derczynski</author>
<author>Marc Verhagen</author>
<author>James Allen</author>
<author>James Pustejovsky</author>
</authors>
<title>SemEval-2013 Task 1: TempEval-3: Evaluating time expressions, events, and temporal relations.</title>
<date>2013</date>
<booktitle>In Proceedings of the 7th International Workshop on Semantic Evaluation, SemEval ’13.</booktitle>
<contexts>
<context position="1186" citStr="UzZaman et al., 2013" startWordPosition="166" endWordPosition="170">ion The importance of modeling temporal information is increasingly apparent in natural language applications, such as information extraction and question answering. Extracting temporal information requires the ability to recognize temporal expressions, and to convert them from text to a normalized form that is easy to process. Temporal tagging systems are designed to address this problem. In this paper, we evaluate the performance of the SUTIME (Chang and Manning, 2012) rule-based temporal tagging system. We evaluate the performance of SUTIME on extracting temporal information in TempEval-3 (UzZaman et al., 2013), which requires systems to automatically annotate documents with temporal information using TimeML (Pustejovsky et al., 2003). The TempEval-3 training data contains gold human annotated data from TimeBank, AQUAINT, and a new dataset of silver data automatically annotated using a combination of TipSem (Llorens et al., 2010) and TRIOS (UzZaman and Allen, 2010), two of the best performing systems from TempEval-2 (Verhagen et al., 2010). 2 System Description We use the Stanford CoreNLP1 pipeline with SUTIME to identify and normalize TIMEX32 expressions. SUTIME is incorporated into Stanford CoreNL</context>
</contexts>
<marker>UzZaman, Llorens, Derczynski, Verhagen, Allen, Pustejovsky, 2013</marker>
<rawString>Naushad UzZaman, Hector Llorens, Leon Derczynski, Marc Verhagen, James Allen, and James Pustejovsky. 2013. SemEval-2013 Task 1: TempEval-3: Evaluating time expressions, events, and temporal relations. In Proceedings of the 7th International Workshop on Semantic Evaluation, SemEval ’13.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Verhagen</author>
<author>Roser Saur´ı</author>
<author>Tommaso Caselli</author>
<author>James Pustejovsky</author>
</authors>
<date>2010</date>
<booktitle>SemEval-2010 task 13: TempEval-2. In Proceedings of the 5th International Workshop on Semantic Evaluation, SemEval ’10,</booktitle>
<pages>57--62</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>Verhagen, Saur´ı, Caselli, Pustejovsky, 2010</marker>
<rawString>Marc Verhagen, Roser Saur´ı, Tommaso Caselli, and James Pustejovsky. 2010. SemEval-2010 task 13: TempEval-2. In Proceedings of the 5th International Workshop on Semantic Evaluation, SemEval ’10, pages 57–62. Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>