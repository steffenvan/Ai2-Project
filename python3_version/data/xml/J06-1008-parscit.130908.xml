<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.004349">
<subsectionHeader confidence="0.1995">
Computational and Quantitative Studies
</subsectionHeader>
<bodyText confidence="0.29877025">
M. A. K. Halliday and edited by Jonathan J. Webster
(City University of Hong Kong)
London: Continuum (The collected works of M. A. K. Halliday, volume 6),
2005, x+300 pp; hardbound, ISBN 0-8264-5872-6, $150.00
</bodyText>
<figure confidence="0.6506295">
Reviewed by
Chris Mellish
</figure>
<affiliation confidence="0.503464">
University of Aberdeen
</affiliation>
<bodyText confidence="0.995103029850747">
Michael Halliday is a linguist whose ideas have inspired computational linguists over
a prolonged period. His earliest research work took place in China and with Chinese
languages. In the late 1950s, as an assistant lecturer in Chinese at Cambridge, he worked
in a project concerned with machine translation at the Cambridge Language Research
Unit (directed by Margaret Masterman and which was later to host researchers such as
Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a
major feature of Winograd’s influential work (Winograd 1972) that did a great deal to
put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most
enduring influence on work in natural language generation, from Davey’s pioneering
work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent
NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman
1997).
This book is Volume 6 of the collected works of Halliday, specifically devoted to
his computational and quantitative work. His collected works are a retrospective of
around 50 years of work. Halliday formally retired around 1987, but the 11 papers
in this book date from 1956 to 2002, with at least seven coming from after 1990.
The book is in three parts, covering his early years in MT, works on corpora and
probabilistic grammar, and some papers about intelligent computing. My personal
feeling is that the second of these is the part most of interest to computational lin-
guists, the first being of restricted interest because so much has happened in MT in
the last 50 years; and the last being perhaps overly oriented to the vision of Sugeno
(1995) that intelligent computing could use natural language as a metalanguage (which
Halliday does not specifically endorse or feel able to comment on in detail). The pa-
pers tend to be quite general, non-formal, overview/discursive articles, apart from
Chapter 6, which presents a quantitative study with Z. James investigating the man-
ifestations of polarity and primary tense in the English clause using the COBUILD
corpus (Halliday and James 1993). A useful appendix to the book shows the gram-
mar of the English clause that Halliday provided to the PENMAN project around
1978.
What has made Halliday’s approach to grammatical description appealing to com-
putational linguists are the importance it places on meaning/context, the concern
with real language, and also the specific formalism he uses. As regards the last of
these, the notation of Systemic Grammar has been formalized (Patten and Ritchie
1987) and theorems proved about its computational properties (Brew 1991). Halliday,
however, believes that language is inherently fuzzy and so he probably resists this
level of formality in the description. What computational linguists have not picked
up on (perhaps because this was not so fashionable until more recently) is Halliday’s
Computational Linguistics Volume 32, Number 1
view that “a linguistic system is inherently probabilistic in nature.” Halliday sees no
distinction between corpus linguistics and theoretical linguistics, adapting the principle
that “frequency in text instantiates probability in the system.” But he criticizes early
MT work that gets involved with “the counting of orthographic words in isolation”
and believes that corpora should be as useful for grammarians as they have been for
lexicologists. But “the grammar is much harder to get at” and “the main limitation on
the use of corpuses [sic] for probabilistic grammar is the familiar catch that what is
easy to recognize is usually too trivial to be worth recognizing.” So the joint work with
James referred to above has to use a number of complex heuristics (in a way that will
be familiar to computational linguists) to extract the desired grammatical information
from the corpus. Recent developments in wide-coverage parsing and the exploitation
of huge corpora should mean that the boundaries are moving very fast in this area, if
there are grammarians out there willing to have a go ...
There are a number of intriguing ideas and comments to be found in the pa-
pers. For instance, there is the hypothesis (with some empirical support) that binary
choice systems in languages tend to have either equal probabilities for the two options
(“equiprobable”) or with probabilities around 0.1 and 0.9 (“skew”). Interestingly, the
latter case corresponds to where the information-theoretic entropy is about 0.5 (which
is also about the figure for the entropy for English in terms of characters, as calculated by
Shannon and Weaver). Also there are some interesting speculations about how language
changes that manifest themselves initially through probabilities might eventually lead
to changes in the underlying systems themselves.
Although I don’t think that computational linguists will find any ideas in this book
that will directly inspire computational implementation, I found it an interesting read
that gave me a number of insights into the history of linguistics and into how Halliday’s
thinking relates to computational issues. Halliday’s writing is erudite and clear, but it
is also quite dense and uses terminology that has to be mastered. The examples and
grammar fragments help a lot to make the ideas precise, but I’d have liked there to be
more of these.
</bodyText>
<sectionHeader confidence="0.964881" genericHeader="abstract">
References
</sectionHeader>
<bodyText confidence="0.71488">
Bateman, John. 1997. Enabling technology
for multilingual natural language
generation: The KPML development
environment. Natural Language
Engineering, 3(1):15–55.
Brew, Chris. 1991. Systemic classification and
its efficiency. Computational Linguistics,
17(4):375–408.
</bodyText>
<reference confidence="0.956676567567568">
Davey, Anthony. 1978. Discourse Production:
A Computer Model of Some Aspects of a
Speaker. Edinburgh University Press,
Edinburgh.
Fawcett, Robin and Gordon Tucker. 1990.
Demonstration of GENESYS: A very
large, semantically based systemic
functional generator. In Proceedings
of the 13th International Conference on
Computational Linguistics, pages 47–49,
Helsinki.
Halliday, Michael and Zoe James. 1993. A
quantitative study of polarity and
primary tense in the English finite clause.
In John Sinclair, Michael Hoey, and
Gwyneth Fox, editors, Techniques of
Description: Spoken and Written Discourse.
Routledge.
Mann, William. 1983. An overview of the
PENMAN text generation system. In
Proceedings of the National Conference on
Artificial Intelligence, pages 261–265.
American Association for Artificial
Intelligence, August.
Patten, Terry and Graeme Ritchie. 1987. A
formal model of systemic grammar. In
Gerard Kempen, editor, Natural Language
Generation: New Results in Artificial
Intelligence, Psychology and Linguistics.
Martinus Nijhoff.
Sugeno, Michio. 1995. Intelligent fuzzy
computing. In Proceedings of PACLING II
(Second Conference of the Pacific Association
of Computational Linguistics), Brisbane.
Winograd, Terry. 1972. Understanding Natural
Language. Edinburgh University Press,
Edinburgh.
</reference>
<page confidence="0.980752">
150
</page>
<reference confidence="0.973970285714286">
Book Reviews
Chris Mellish has been working in Computational Linguistics since his Ph.D. research at the
University of Edinburgh, which was published in 1981. After a period at the University of
Sussex, he returned to Edinburgh as a lecturer and in Edinburgh was appointed to a chair
in Natural Language Processing in 2001. Mellish is now at the Department of Computing
Science, University of Aberdeen, King’s College, Aberdeen AB24 3UE, UK. His e-mail address
is cmellish@csd.abdn.ac.uk.
</reference>
<page confidence="0.998319">
151
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000045">
<title confidence="0.999913">Computational and Quantitative Studies</title>
<author confidence="0.999961">M A K Halliday</author>
<author confidence="0.999961">edited by Jonathan J Webster</author>
<affiliation confidence="0.9737715">(City University of Hong Kong) London: Continuum (The collected works of M. A. K. Halliday, volume 6),</affiliation>
<address confidence="0.946646">2005, x+300 pp; hardbound, ISBN 0-8264-5872-6, $150.00</address>
<note confidence="0.894753">Reviewed by</note>
<author confidence="0.999274">Chris Mellish</author>
<affiliation confidence="0.99934">University of Aberdeen</affiliation>
<author confidence="0.912615">Michael Halliday is a linguist whose ideas have inspired computational linguists over</author>
<abstract confidence="0.989164337837838">a prolonged period. His earliest research work took place in China and with Chinese languages. In the late 1950s, as an assistant lecturer in Chinese at Cambridge, he worked in a project concerned with machine translation at the Cambridge Language Research Unit (directed by Margaret Masterman and which was later to host researchers such as Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a major feature of Winograd’s influential work (Winograd 1972) that did a great deal to put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most enduring influence on work in natural language generation, from Davey’s pioneering work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman 1997). This book is Volume 6 of the collected works of Halliday, specifically devoted to his computational and quantitative work. His collected works are a retrospective of around 50 years of work. Halliday formally retired around 1987, but the 11 papers in this book date from 1956 to 2002, with at least seven coming from after 1990. The book is in three parts, covering his early years in MT, works on corpora and probabilistic grammar, and some papers about intelligent computing. My personal feeling is that the second of these is the part most of interest to computational linguists, the first being of restricted interest because so much has happened in MT in the last 50 years; and the last being perhaps overly oriented to the vision of Sugeno (1995) that intelligent computing could use natural language as a metalanguage (which Halliday does not specifically endorse or feel able to comment on in detail). The papers tend to be quite general, non-formal, overview/discursive articles, apart from Chapter 6, which presents a quantitative study with Z. James investigating the manifestations of polarity and primary tense in the English clause using the COBUILD corpus (Halliday and James 1993). A useful appendix to the book shows the grammar of the English clause that Halliday provided to the PENMAN project around 1978. What has made Halliday’s approach to grammatical description appealing to computational linguists are the importance it places on meaning/context, the concern with real language, and also the specific formalism he uses. As regards the last of these, the notation of Systemic Grammar has been formalized (Patten and Ritchie 1987) and theorems proved about its computational properties (Brew 1991). Halliday, however, believes that language is inherently fuzzy and so he probably resists this level of formality in the description. What computational linguists have not picked up on (perhaps because this was not so fashionable until more recently) is Halliday’s Computational Linguistics Volume 32, Number 1 view that “a linguistic system is inherently probabilistic in nature.” Halliday sees no distinction between corpus linguistics and theoretical linguistics, adapting the principle that “frequency in text instantiates probability in the system.” But he criticizes early MT work that gets involved with “the counting of orthographic words in isolation” and believes that corpora should be as useful for grammarians as they have been for lexicologists. But “the grammar is much harder to get at” and “the main limitation on the use of corpuses [sic] for probabilistic grammar is the familiar catch that what is easy to recognize is usually too trivial to be worth recognizing.” So the joint work with James referred to above has to use a number of complex heuristics (in a way that will be familiar to computational linguists) to extract the desired grammatical information from the corpus. Recent developments in wide-coverage parsing and the exploitation of huge corpora should mean that the boundaries are moving very fast in this area, if there are grammarians out there willing to have a go ... There are a number of intriguing ideas and comments to be found in the papers. For instance, there is the hypothesis (with some empirical support) that binary choice systems in languages tend to have either equal probabilities for the two options (“equiprobable”) or with probabilities around 0.1 and 0.9 (“skew”). Interestingly, the latter case corresponds to where the information-theoretic entropy is about 0.5 (which also about the figure for the entropy for English in terms of as calculated by Shannon and Weaver). Also there are some interesting speculations about how language changes that manifest themselves initially through probabilities might eventually lead to changes in the underlying systems themselves. Although I don’t think that computational linguists will find any ideas in this book that will directly inspire computational implementation, I found it an interesting read that gave me a number of insights into the history of linguistics and into how Halliday’s thinking relates to computational issues. Halliday’s writing is erudite and clear, but it is also quite dense and uses terminology that has to be mastered. The examples and grammar fragments help a lot to make the ideas precise, but I’d have liked there to be more of these. References Bateman, John. 1997. Enabling technology for multilingual natural language generation: The KPML development Language 3(1):15–55. Brew, Chris. 1991. Systemic classification and efficiency.</abstract>
<note confidence="0.744942">17(4):375–408. Anthony. 1978. Production:</note>
<affiliation confidence="0.777257333333333">A Computer Model of Some Aspects of a Edinburgh University Press, Edinburgh.</affiliation>
<address confidence="0.614159">Fawcett, Robin and Gordon Tucker. 1990.</address>
<affiliation confidence="0.464971">Demonstration of GENESYS: A very</affiliation>
<abstract confidence="0.9806195">large, semantically based systemic generator. In of the 13th International Conference on pages 47–49, Helsinki. Halliday, Michael and Zoe James. 1993. A quantitative study of polarity and primary tense in the English finite clause.</abstract>
<note confidence="0.663130153846154">In John Sinclair, Michael Hoey, and Fox, editors, of Spoken and Written Routledge. Mann, William. 1983. An overview of the PENMAN text generation system. In Proceedings of the National Conference on pages 261–265. American Association for Artificial Intelligence, August. Patten, Terry and Graeme Ritchie. 1987. A formal model of systemic grammar. In Kempen, editor, Language</note>
<title confidence="0.779636">Generation: New Results in Artificial Psychology and</title>
<author confidence="0.535984">Martinus Nijhoff</author>
<affiliation confidence="0.7736415">Sugeno, Michio. 1995. Intelligent fuzzy In of PACLING II (Second Conference of the Pacific Association Computational Linguistics),</affiliation>
<address confidence="0.555832">Terry. 1972. Natural</address>
<affiliation confidence="0.995739">Edinburgh University Press,</affiliation>
<address confidence="0.6727405">Edinburgh. 150</address>
<note confidence="0.91011175">Book Reviews Mellish been working in Computational Linguistics since his Ph.D. research at the University of Edinburgh, which was published in 1981. After a period at the University of Sussex, he returned to Edinburgh as a lecturer and in Edinburgh was appointed to a chair in Natural Language Processing in 2001. Mellish is now at the Department of Computing Science, University of Aberdeen, King’s College, Aberdeen AB24 3UE, UK. His e-mail address is cmellish@csd.abdn.ac.uk. 151</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Anthony Davey</author>
</authors>
<title>Discourse Production: A Computer Model of Some Aspects of a Speaker.</title>
<date>1978</date>
<publisher>Edinburgh University Press,</publisher>
<location>Edinburgh.</location>
<contexts>
<context position="1084" citStr="Davey 1978" startWordPosition="169" endWordPosition="170">ages. In the late 1950s, as an assistant lecturer in Chinese at Cambridge, he worked in a project concerned with machine translation at the Cambridge Language Research Unit (directed by Margaret Masterman and which was later to host researchers such as Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a major feature of Winograd’s influential work (Winograd 1972) that did a great deal to put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most enduring influence on work in natural language generation, from Davey’s pioneering work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman 1997). This book is Volume 6 of the collected works of Halliday, specifically devoted to his computational and quantitative work. His collected works are a retrospective of around 50 years of work. Halliday formally retired around 1987, but the 11 papers in this book date from 1956 to 2002, with at least seven coming from after 1990. The book is in three parts, covering his early years in MT, works on corpora and probabilistic grammar, and some </context>
</contexts>
<marker>Davey, 1978</marker>
<rawString>Davey, Anthony. 1978. Discourse Production: A Computer Model of Some Aspects of a Speaker. Edinburgh University Press, Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robin Fawcett</author>
<author>Gordon Tucker</author>
</authors>
<title>Demonstration of GENESYS: A very large, semantically based systemic functional generator.</title>
<date>1990</date>
<booktitle>In Proceedings of the 13th International Conference on Computational Linguistics,</booktitle>
<pages>47--49</pages>
<location>Helsinki.</location>
<contexts>
<context position="1225" citStr="Fawcett and Tucker 1990" startWordPosition="191" endWordPosition="194">ion at the Cambridge Language Research Unit (directed by Margaret Masterman and which was later to host researchers such as Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a major feature of Winograd’s influential work (Winograd 1972) that did a great deal to put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most enduring influence on work in natural language generation, from Davey’s pioneering work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman 1997). This book is Volume 6 of the collected works of Halliday, specifically devoted to his computational and quantitative work. His collected works are a retrospective of around 50 years of work. Halliday formally retired around 1987, but the 11 papers in this book date from 1956 to 2002, with at least seven coming from after 1990. The book is in three parts, covering his early years in MT, works on corpora and probabilistic grammar, and some papers about intelligent computing. My personal feeling is that the second of these is the part most of interest to computational linguists, </context>
</contexts>
<marker>Fawcett, Tucker, 1990</marker>
<rawString>Fawcett, Robin and Gordon Tucker. 1990. Demonstration of GENESYS: A very large, semantically based systemic functional generator. In Proceedings of the 13th International Conference on Computational Linguistics, pages 47–49, Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Halliday</author>
<author>Zoe James</author>
</authors>
<title>A quantitative study of polarity and primary tense in the English finite clause.</title>
<date>1993</date>
<contexts>
<context position="2438" citStr="Halliday and James 1993" startWordPosition="391" endWordPosition="394">linguists, the first being of restricted interest because so much has happened in MT in the last 50 years; and the last being perhaps overly oriented to the vision of Sugeno (1995) that intelligent computing could use natural language as a metalanguage (which Halliday does not specifically endorse or feel able to comment on in detail). The papers tend to be quite general, non-formal, overview/discursive articles, apart from Chapter 6, which presents a quantitative study with Z. James investigating the manifestations of polarity and primary tense in the English clause using the COBUILD corpus (Halliday and James 1993). A useful appendix to the book shows the grammar of the English clause that Halliday provided to the PENMAN project around 1978. What has made Halliday’s approach to grammatical description appealing to computational linguists are the importance it places on meaning/context, the concern with real language, and also the specific formalism he uses. As regards the last of these, the notation of Systemic Grammar has been formalized (Patten and Ritchie 1987) and theorems proved about its computational properties (Brew 1991). Halliday, however, believes that language is inherently fuzzy and so he p</context>
</contexts>
<marker>Halliday, James, 1993</marker>
<rawString>Halliday, Michael and Zoe James. 1993. A quantitative study of polarity and primary tense in the English finite clause.</rawString>
</citation>
<citation valid="false">
<booktitle>Techniques of Description: Spoken and Written Discourse.</booktitle>
<editor>In John Sinclair, Michael Hoey, and Gwyneth Fox, editors,</editor>
<publisher>Routledge.</publisher>
<marker></marker>
<rawString>In John Sinclair, Michael Hoey, and Gwyneth Fox, editors, Techniques of Description: Spoken and Written Discourse. Routledge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Mann</author>
</authors>
<title>An overview of the PENMAN text generation system.</title>
<date>1983</date>
<booktitle>In Proceedings of the National Conference on Artificial Intelligence,</booktitle>
<pages>261--265</pages>
<publisher>American Association</publisher>
<institution>for Artificial Intelligence,</institution>
<contexts>
<context position="1127" citStr="Mann 1983" startWordPosition="176" endWordPosition="177">turer in Chinese at Cambridge, he worked in a project concerned with machine translation at the Cambridge Language Research Unit (directed by Margaret Masterman and which was later to host researchers such as Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a major feature of Winograd’s influential work (Winograd 1972) that did a great deal to put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most enduring influence on work in natural language generation, from Davey’s pioneering work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman 1997). This book is Volume 6 of the collected works of Halliday, specifically devoted to his computational and quantitative work. His collected works are a retrospective of around 50 years of work. Halliday formally retired around 1987, but the 11 papers in this book date from 1956 to 2002, with at least seven coming from after 1990. The book is in three parts, covering his early years in MT, works on corpora and probabilistic grammar, and some papers about intelligent computing. My pers</context>
</contexts>
<marker>Mann, 1983</marker>
<rawString>Mann, William. 1983. An overview of the PENMAN text generation system. In Proceedings of the National Conference on Artificial Intelligence, pages 261–265. American Association for Artificial Intelligence, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Patten</author>
<author>Graeme Ritchie</author>
</authors>
<title>A formal model of systemic grammar.</title>
<date>1987</date>
<booktitle>Natural Language Generation: New Results in Artificial Intelligence, Psychology and Linguistics. Martinus Nijhoff.</booktitle>
<editor>In Gerard Kempen, editor,</editor>
<contexts>
<context position="2896" citStr="Patten and Ritchie 1987" startWordPosition="464" endWordPosition="467">antitative study with Z. James investigating the manifestations of polarity and primary tense in the English clause using the COBUILD corpus (Halliday and James 1993). A useful appendix to the book shows the grammar of the English clause that Halliday provided to the PENMAN project around 1978. What has made Halliday’s approach to grammatical description appealing to computational linguists are the importance it places on meaning/context, the concern with real language, and also the specific formalism he uses. As regards the last of these, the notation of Systemic Grammar has been formalized (Patten and Ritchie 1987) and theorems proved about its computational properties (Brew 1991). Halliday, however, believes that language is inherently fuzzy and so he probably resists this level of formality in the description. What computational linguists have not picked up on (perhaps because this was not so fashionable until more recently) is Halliday’s Computational Linguistics Volume 32, Number 1 view that “a linguistic system is inherently probabilistic in nature.” Halliday sees no distinction between corpus linguistics and theoretical linguistics, adapting the principle that “frequency in text instantiates proba</context>
</contexts>
<marker>Patten, Ritchie, 1987</marker>
<rawString>Patten, Terry and Graeme Ritchie. 1987. A formal model of systemic grammar. In Gerard Kempen, editor, Natural Language Generation: New Results in Artificial Intelligence, Psychology and Linguistics. Martinus Nijhoff.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michio Sugeno</author>
</authors>
<title>Intelligent fuzzy computing.</title>
<date>1995</date>
<booktitle>In Proceedings of PACLING II (Second Conference of the Pacific Association of Computational Linguistics),</booktitle>
<location>Brisbane.</location>
<contexts>
<context position="1994" citStr="Sugeno (1995)" startWordPosition="325" endWordPosition="326">rks are a retrospective of around 50 years of work. Halliday formally retired around 1987, but the 11 papers in this book date from 1956 to 2002, with at least seven coming from after 1990. The book is in three parts, covering his early years in MT, works on corpora and probabilistic grammar, and some papers about intelligent computing. My personal feeling is that the second of these is the part most of interest to computational linguists, the first being of restricted interest because so much has happened in MT in the last 50 years; and the last being perhaps overly oriented to the vision of Sugeno (1995) that intelligent computing could use natural language as a metalanguage (which Halliday does not specifically endorse or feel able to comment on in detail). The papers tend to be quite general, non-formal, overview/discursive articles, apart from Chapter 6, which presents a quantitative study with Z. James investigating the manifestations of polarity and primary tense in the English clause using the COBUILD corpus (Halliday and James 1993). A useful appendix to the book shows the grammar of the English clause that Halliday provided to the PENMAN project around 1978. What has made Halliday’s a</context>
</contexts>
<marker>Sugeno, 1995</marker>
<rawString>Sugeno, Michio. 1995. Intelligent fuzzy computing. In Proceedings of PACLING II (Second Conference of the Pacific Association of Computational Linguistics), Brisbane.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
</authors>
<title>Understanding Natural Language.</title>
<date>1972</date>
<publisher>Edinburgh University Press,</publisher>
<location>Edinburgh.</location>
<contexts>
<context position="870" citStr="Winograd 1972" startWordPosition="132" endWordPosition="133">d by Chris Mellish University of Aberdeen Michael Halliday is a linguist whose ideas have inspired computational linguists over a prolonged period. His earliest research work took place in China and with Chinese languages. In the late 1950s, as an assistant lecturer in Chinese at Cambridge, he worked in a project concerned with machine translation at the Cambridge Language Research Unit (directed by Margaret Masterman and which was later to host researchers such as Karen Sp¨arck Jones and Yorick Wilks). The use of Halliday’s Systemic Grammar was a major feature of Winograd’s influential work (Winograd 1972) that did a great deal to put NLP on the map in the late 1970s. But Halliday’s approach has probably had its most enduring influence on work in natural language generation, from Davey’s pioneering work (Davey 1978) through the ISI PENMAN project (Mann 1983) to a number of recent NLG systems that are influenced particularly by it (Fawcett and Tucker 1990; Bateman 1997). This book is Volume 6 of the collected works of Halliday, specifically devoted to his computational and quantitative work. His collected works are a retrospective of around 50 years of work. Halliday formally retired around 1987</context>
</contexts>
<marker>Winograd, 1972</marker>
<rawString>Winograd, Terry. 1972. Understanding Natural Language. Edinburgh University Press, Edinburgh.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Book Reviews</author>
</authors>
<title>Chris Mellish has been working in Computational Linguistics since his Ph.D. research at the University of Edinburgh, which was published in 1981. After a period at the University of Sussex, he returned to Edinburgh as a lecturer and in Edinburgh was appointed to a chair in Natural Language Processing in</title>
<date>2001</date>
<booktitle>Mellish is now at the</booktitle>
<institution>Department of Computing Science, University of Aberdeen, King’s College,</institution>
<location>Aberdeen</location>
<marker>Reviews, 2001</marker>
<rawString>Book Reviews Chris Mellish has been working in Computational Linguistics since his Ph.D. research at the University of Edinburgh, which was published in 1981. After a period at the University of Sussex, he returned to Edinburgh as a lecturer and in Edinburgh was appointed to a chair in Natural Language Processing in 2001. Mellish is now at the Department of Computing Science, University of Aberdeen, King’s College, Aberdeen AB24 3UE, UK. His e-mail address is cmellish@csd.abdn.ac.uk.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>