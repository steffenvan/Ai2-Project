<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000685">
<title confidence="0.996107">
Using Multiple Sources to Construct a Sentiment Sensitive Thesaurus
for Cross-Domain Sentiment Classification
</title>
<author confidence="0.879667">
Danushka Bollegala
</author>
<affiliation confidence="0.94525">
The University of Tokyo
</affiliation>
<address confidence="0.715675666666667">
7-3-1, Hongo, Tokyo,
113-8656, Japan
danushka@
</address>
<email confidence="0.605472">
iba.t.u-tokyo.ac.jp
</email>
<author confidence="0.994496">
David Weir
</author>
<affiliation confidence="0.9955635">
School of Informatics
University of Sussex
</affiliation>
<address confidence="0.731980666666667">
Falmer, Brighton,
BN1 9QJ, UK
d.j.weir@
</address>
<email confidence="0.708103">
sussex.ac.uk
</email>
<author confidence="0.987678">
John Carroll
</author>
<affiliation confidence="0.9954705">
School of Informatics
University of Sussex
</affiliation>
<address confidence="0.9160345">
Falmer, Brighton,
BN1 9QJ, UK
</address>
<email confidence="0.5684325">
j.a.carroll@
sussex.ac.uk
</email>
<sectionHeader confidence="0.985229" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999412238095238">
We describe a sentiment classification method
that is applicable when we do not have any la-
beled data for a target domain but have some
labeled data for multiple other domains, des-
ignated as the source domains. We automat-
ically create a sentiment sensitive thesaurus
using both labeled and unlabeled data from
multiple source domains to find the associa-
tion between words that express similar senti-
ments in different domains. The created the-
saurus is then used to expand feature vectors
to train a binary classifier. Unlike previous
cross-domain sentiment classification meth-
ods, our method can efficiently learn from
multiple source domains. Our method signif-
icantly outperforms numerous baselines and
returns results that are better than or com-
parable to previous cross-domain sentiment
classification methods on a benchmark dataset
containing Amazon user reviews for different
types of products.
</bodyText>
<sectionHeader confidence="0.999125" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.9998714">
Users express opinions about products or services
they consume in blog posts, shopping sites, or re-
view sites. It is useful for both consumers as well
as for producers to know what general public think
about a particular product or service. Automatic
document level sentiment classification (Pang et al.,
2002; Turney, 2002) is the task of classifying a given
review with respect to the sentiment expressed by
the author of the review. For example, a sentiment
classifier might classify a user review about a movie
as positive or negative depending on the sentiment
expressed in the review. Sentiment classification
has been applied in numerous tasks such as opinion
mining (Pang and Lee, 2008), opinion summariza-
tion (Lu et al., 2009), contextual advertising (Fan
and Chang, 2010), and market analysis (Hu and Liu,
2004).
Supervised learning algorithms that require la-
beled data have been successfully used to build sen-
timent classifiers for a specific domain (Pang et al.,
2002). However, sentiment is expressed differently
in different domains, and it is costly to annotate
data for each new domain in which we would like
to apply a sentiment classifier. For example, in the
domain of reviews about electronics products, the
words “durable” and “light” are used to express pos-
itive sentiment, whereas “expensive” and “short bat-
tery life” often indicate negative sentiment. On the
other hand, if we consider the books domain the
words “exciting” and “thriller” express positive sen-
timent, whereas the words “boring” and “lengthy”
usually express negative sentiment. A classifier
trained on one domain might not perform well on
a different domain because it would fail to learn the
sentiment of the unseen words.
Work in cross-domain sentiment classification
(Blitzer et al., 2007) focuses on the challenge of
training a classifier from one or more domains
(source domains) and applying the trained classi-
fier in a different domain (target domain). A cross-
domain sentiment classification system must over-
come two main challenges. First, it must identify
which source domain features are related to which
target domain features. Second, it requires a learn-
ing framework to incorporate the information re-
</bodyText>
<page confidence="0.960958">
132
</page>
<note confidence="0.9796305">
Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics, pages 132–141,
Portland, Oregon, June 19-24, 2011. c�2011 Association for Computational Linguistics
</note>
<bodyText confidence="0.999935870967742">
garding the relatedness of source and target domain
features. Following previous work, we define cross-
domain sentiment classification as the problem of
learning a binary classifier (i.e. positive or negative
sentiment) given a small set of labeled data for the
source domain, and unlabeled data for both source
and target domains. In particular, no labeled data is
provided for the target domain.
In this paper, we describe a cross-domain senti-
ment classification method using an automatically
created sentiment sensitive thesaurus. We use la-
beled data from multiple source domains and unla-
beled data from source and target domains to rep-
resent the distribution of features. We represent a
lexical element (i.e. a unigram or a bigram of word
lemma) in a review using a feature vector. Next, for
each lexical element we measure its relatedness to
other lexical elements and group related lexical ele-
ments to create a thesaurus. The thesaurus captures
the relatedness among lexical elements that appear
in source and target domains based on the contexts
in which the lexical elements appear (their distribu-
tional context). A distinctive aspect of our approach
is that, in addition to the usual co-occurrence fea-
tures typically used in characterizing a word’s dis-
tributional context, we make use, where possible, of
the sentiment label of a document: i.e. sentiment la-
bels form part of our context features. This is what
makes the distributional thesaurus sensitive to senti-
ment. Unlabeled data is cheaper to collect compared
to labeled data and is often available in large quan-
tities. The use of unlabeled data enables us to ac-
curately estimate the distribution of words in source
and target domains. Our method can learn from a
large amount of unlabeled data to leverage a robust
cross-domain sentiment classifier.
We model the cross-domain sentiment classifica-
tion problem as one of feature expansion, where we
append additional related features to feature vectors
that represent source and target domain reviews in
order to reduce the mismatch of features between the
two domains. Methods that use related features have
been successfully used in numerous tasks such as
query expansion (Fang, 2008), and document classi-
fication (Shen et al., 2009). However, feature expan-
sion techniques have not previously been applied to
the task of cross-domain sentiment classification.
In our method, we use the automatically created
thesaurus to expand feature vectors in a binary clas-
sifier at train and test times by introducing related
lexical elements from the thesaurus. We use L1 reg-
ularized logistic regression as the classification al-
gorithm. (However, the method is agnostic to the
properties of the classifier and can be used to expand
feature vectors for any binary classifier). L1 regular-
ization enables us to select a small subset of features
for the classifier. Unlike previous work which at-
tempts to learn a cross-domain classifier using a sin-
gle source domain, we leverage data from multiple
source domains to learn a robust classifier that gen-
eralizes across multiple domains. Our contributions
can be summarized as follows.
</bodyText>
<listItem confidence="0.994457833333333">
• We describe a fully automatic method to create
a thesaurus that is sensitive to the sentiment of
words expressed in different domains.
• We describe a method to use the created the-
saurus to expand feature vectors at train and test
times in a binary classifier.
</listItem>
<sectionHeader confidence="0.919462" genericHeader="method">
2 A Motivating Example
</sectionHeader>
<bodyText confidence="0.99996796">
To explain the problem of cross-domain sentiment
classification, consider the reviews shown in Ta-
ble 1 for the domains books and kitchen appliances.
Table 1 shows two positive and one negative re-
view from each domain. We have emphasized in
boldface the words that express the sentiment of
the authors of the reviews. We see that the words
excellent, broad, high quality, interesting, and
well researched are used to express positive senti-
ment in the books domain, whereas the word disap-
pointed indicates negative sentiment. On the other
hand, in the kitchen appliances domain the words
thrilled, high quality, professional, energy sav-
ing, lean, and delicious express positive sentiment,
whereas the words rust and disappointed express
negative sentiment. Although high quality would
express positive sentiment in both domains, and dis-
appointed negative sentiment, it is unlikely that we
would encounter well researched in kitchen appli-
ances reviews, or rust or delicious in book reviews.
Therefore, a model that is trained only using book
reviews might not have any weights learnt for deli-
cious or rust, which would make it difficult for this
model to accurately classify reviews of kitchen ap-
pliances.
</bodyText>
<page confidence="0.997446">
133
</page>
<table confidence="0.9110195">
books kitchen appliances
+ Excellent and broad survey of the development of I was so thrilled when I unpack my processor. It is
civilization with all the punch of high quality fiction. so high quality and professional in both looks and
performance.
+ This is an interesting and well researched book. Energy saving grill. My husband loves the burgers
that I make from this grill. They are lean and deli-
cious.
- Whenever a new book by Philippa Gregory comes These knives are already showing spots of rust de-
out, I buy it hoping to have the same experience, and spite washing by hand and drying. Very disap-
lately have been sorely disappointed. pointed.
</table>
<tableCaption confidence="0.998923">
Table 1: Positive (+) and negative (-) sentiment reviews in two different domains.
</tableCaption>
<table confidence="0.994979625">
sentence Excellent and broad survey of
the development of civilization.
POS tags Excellent/JJ and/CC broad/JJ
survey/NN1 of/IO the/AT
development/NN1 of/IO civi-
lization/NN1
lexical elements excellent, broad, survey, devel-
(unigrams) opment, civilization
lexical elements excellent+broad, broad+survey,
(bigrams) survey+development, develop-
ment+civilization
sentiment fea- excellent*P, broad*P, sur-
tures (lemma) vey*P, excellent+broad*P,
broad+survey*P
sentiment fea- JJ*P, NN1*P, JJ+NN1*P
tures (POS)
</table>
<tableCaption confidence="0.989563">
Table 2: Generating lexical elements and sentiment fea-
tures from a positive review sentence.
</tableCaption>
<sectionHeader confidence="0.942183" genericHeader="method">
3 Sentiment Sensitive Thesaurus
</sectionHeader>
<bodyText confidence="0.99998894">
One solution to the feature mismatch problem out-
lined above is to use a thesaurus that groups differ-
ent words that express the same sentiment. For ex-
ample, if we know that both excellent and delicious
are positive sentiment words, then we can use this
knowledge to expand a feature vector that contains
the word delicious using the word excellent, thereby
reducing the mismatch between features in a test in-
stance and a trained model. Below we describe a
method to construct a sentiment sensitive thesaurus
for feature expansion.
Given a labeled or an unlabeled review, we first
split the review into individual sentences. We carry
out part-of-speech (POS) tagging and lemmatiza-
tion on each review sentence using the RASP sys-
tem (Briscoe et al., 2006). Lemmatization reduces
the data sparseness and has been shown to be effec-
tive in text classification tasks (Joachims, 1998). We
then apply a simple word filter based on POS tags to
select content words (nouns, verbs, adjectives, and
adverbs). In particular, previous work has identified
adjectives as good indicators of sentiment (Hatzi-
vassiloglou and McKeown, 1997; Wiebe, 2000).
Following previous work in cross-domain sentiment
classification, we model a review as a bag of words.
We select unigrams and bigrams from each sentence.
For the remainder of this paper, we will refer to un-
igrams and bigrams collectively as lexical elements.
Previous work on sentiment classification has shown
that both unigrams and bigrams are useful for train-
ing a sentiment classifier (Blitzer et al., 2007). We
note that it is possible to create lexical elements both
from source domain labeled reviews as well as from
unlabeled reviews in source and target domains.
Next, we represent each lexical element u using a
set of features as follows. First, we select other lex-
ical elements that co-occur with u in a review sen-
tence as features. Second, from each source domain
labeled review sentence in which u occurs, we cre-
ate sentiment features by appending the label of the
review to each lexical element we generate from that
review. For example, consider the sentence selected
from a positive review of a book shown in Table 2.
In Table 2, we use the notation “*P” to indicate posi-
tive sentiment features and “*N” to indicate negative
sentiment features. The example sentence shown in
Table 2 is selected from a positively labeled review,
and generates positive sentiment features as shown
in Table 2. In addition to word-level sentiment fea-
tures, we replace words with their POS tags to create
</bodyText>
<page confidence="0.993398">
134
</page>
<bodyText confidence="0.999928235294118">
POS-level sentiment features. POS tags generalize
the word-level sentiment features, thereby reducing
feature sparseness.
Let us denote the value of a feature w in the fea-
ture vector u representing a lexical element u by
f(u, w). The vector u can be seen as a compact rep-
resentation of the distribution of a lexical element u
over the set of features that co-occur with u in the re-
views. From the construction of the feature vector u
described in the previous paragraph, it follows that
w can be either a sentiment feature or another lexical
element that co-occurs with u in some review sen-
tence. The distributional hypothesis (Harris, 1954)
states that words that have similar distributions are
semantically similar. We compute f(u, w) as the
pointwise mutual information between a lexical ele-
ment u and a feature w as follows:
</bodyText>
<equation confidence="0.9802105">
�
c(u,w)
N
1
) E3T=1 c(uj) (1)
N X N
</equation>
<bodyText confidence="0.99953325">
Here, c(u, w) denotes the number of review sen-
tences in which a lexical element u and a feature
w co-occur, n and m respectively denote the total
number of lexical elements and the total number of
</bodyText>
<equation confidence="0.7277575">
features, and N = En E� ��1 c(i, j). Pointwise
��1
</equation>
<bodyText confidence="0.99970075">
mutual information is known to be biased towards
infrequent elements and features. We follow the dis-
counting approach of Pantel &amp; Ravichandran (2004)
to overcome this bias.
Next, for two lexical elements u and v (repre-
sented by feature vectors u and v, respectively), we
compute the relatedness T(v, u) of the feature v to
the feature u as follows,
</bodyText>
<equation confidence="0.979174">
T(v u) = EwE{xjf(v,x)&gt;0} f(/u,w) (2)
EwE{xj f (u,x)&gt;0} f (u, w)
</equation>
<bodyText confidence="0.978472037037037">
Here, we use the set notation {x�f(v, x) &gt; 01 to
denote the set of features that co-occur with v. Re-
latedness of a lexical element u to another lexical
element v is the fraction of feature weights in the
feature vector for the element u that also co-occur
with the features in the feature vector for the ele-
ment v. If there are no features that co-occur with
both u and v, then the relatedness reaches its min-
imum value of 0. On the other hand if all features
that co-occur with u also co-occur with v, then the
relatedness , T(v, u), reaches its maximum value of
1. Note that relatedness is an asymmetric measure
by the definition given in Equation 2, and the relat-
edness T(v, u) of an element v to another element u
is not necessarily equal to T(u, v), the relatedness of
u to v.
We use the relatedness measure defined in Equa-
tion 2 to construct a sentiment sensitive thesaurus in
which, for each lexical element u we list lexical el-
ements v that co-occur with u (i.e. f(u, v) &gt; 0) in
descending order of relatedness values T(v, u). In
the remainder of the paper, we use the term base en-
try to refer to a lexical element u for which its related
lexical elements v (referred to as the neighbors of u)
are listed in the thesaurus. Note that relatedness val-
ues computed according to Equation 2 are sensitive
to sentiment labels assigned to reviews in the source
domain, because co-occurrences are computed over
both lexical and sentiment elements extracted from
reviews. In other words, the relatedness of an ele-
ment u to another element v depends upon the sen-
timent labels assigned to the reviews that generate u
and v. This is an important fact that differentiates
our sentiment-sensitive thesaurus from other distri-
butional thesauri which do not consider sentiment
information.
Moreover, we only need to retain lexical elements
in the sentiment sensitive thesaurus because when
predicting the sentiment label for target reviews (at
test time) we cannot generate sentiment elements
from those (unlabeled) reviews, therefore we are
not required to find expansion candidates for senti-
ment elements. However, we emphasize the fact that
the relatedness values between the lexical elements
listed in the sentiment-sensitive thesaurus are com-
puted using co-occurrences with both lexical and
sentiment features, and therefore the expansion can-
didates selected for the lexical elements in the tar-
get domain reviews are sensitive to sentiment labels
assigned to reviews in the source domain. Using
a sparse matrix format and approximate similarity
matching techniques (Sarawagi and Kirpal, 2004),
we can efficiently create a thesaurus from a large set
of reviews.
</bodyText>
<sectionHeader confidence="0.998407" genericHeader="method">
4 Feature Expansion
</sectionHeader>
<bodyText confidence="0.9990055">
Our feature expansion phase augments a feature vec-
tor with additional related features selected from the
</bodyText>
<equation confidence="0.8916625">
f(u, w) = log
(i,
c
w
</equation>
<page confidence="0.976186">
135
</page>
<bodyText confidence="0.999947384615385">
sentiment-sensitive thesaurus created in Section 3 to
overcome the feature mismatch problem. First, fol-
lowing the bag-of-words model, we model a review
d using the set {w1, ... , wNI, where the elements
wi are either unigrams or bigrams that appear in the
review d. We then represent a review d by a real-
valued term-frequency vector d E RN, where the
value of the j-th element dj is set to the total number
of occurrences of the unigram or bigram wj in the
review d. To find the suitable candidates to expand a
vector d for the review d, we define a ranking score
score(ui, d) for each base entry in the thesaurus as
follows:
</bodyText>
<equation confidence="0.99703975">
�N j=1 dj�(wj, ui)
score(ui, d) � (3)
N
El=1 dl
</equation>
<bodyText confidence="0.999969884615385">
According to this definition, given a review d, a base
entry ui will have a high ranking score if there are
many words wj in the review d that are also listed
as neighbors for the base entry ui in the sentiment-
sensitive thesaurus. Moreover, we weight the re-
latedness scores for each word wj by its normal-
ized term-frequency to emphasize the salient uni-
grams and bigrams in a review. Recall that related-
ness is defined as an asymmetric measure in Equa-
tion 2, and we use T(wj, ui) in the computation of
score(ui, d) in Equation 3. This is particularly im-
portant because we would like to score base entries
ui considering all the unigrams and bigrams that ap-
pear in a review d, instead of considering each uni-
gram or bigram individually.
To expand a vector, d, for a review d, we first
rank the base entries, ui using the ranking score
in Equation 3 and select the top k ranked base en-
tries. Let us denote the r-th ranked (1 &lt; r &lt; k)
base entry for a review d by vrd. We then extend the
original set of unigrams and bigrams {w1, ... , wNI
by the base entries v1d, ... , vkd to create a new vec-
tor d&apos; E R(N+k) with dimensions corresponding to
w1, ... , wN, v1d, ... , vkdfor a review d. The values
of the extended vector d&apos; are set as follows. The
values of the first N dimensions that correspond to
unigrams and bigrams wi that occur in the review d
are set to di, their frequency in d. The subsequent k
dimensions that correspond to the top ranked based
entries for the review d are weighted according to
their ranking score. Specifically, we set the value of
the r-th ranked base entry vrd to 1/r. Alternatively,
one could use the ranking score, score(vrd, d), itself
as the value of the appended base entries. However,
both relatedness scores as well as normalized term-
frequencies can be small in practice, which leads to
very small absolute ranking scores. By using the
inverse rank, we only take into account the rela-
tive ranking of base entries and ignore their absolute
scores.
Note that the score of a base entry depends on a
review d. Therefore, we select different base en-
tries as additional features for expanding different
reviews. Furthermore, we do not expand each wi
individually when expanding a vector d for a re-
view. Instead, we consider all unigrams and bi-
grams in d when selecting the base entries for ex-
pansion. One can think of the feature expansion pro-
cess as a lower dimensional latent mapping of fea-
tures onto the space spanned by the base entries in
the sentiment-sensitive thesaurus. The asymmetric
property of the relatedness (Equation 2) implicitly
prefers common words that co-occur with numerous
other words as expansion candidates. Such words
act as domain independent pivots and enable us to
transfer the information regarding sentiment from
one domain to another.
Using the extended vectors d&apos; to represent re-
views, we train a binary classifier from the source
domain labeled reviews to predict positive and neg-
ative sentiment in reviews. We differentiate the ap-
pended base entries vrd from wi that existed in the
original vector d (prior to expansion) by assigning
different feature identifiers to the appended base en-
tries. For example, a unigram excellent in a feature
vector is differentiated from the base entry excellent
by assigning the feature id, “BASE=excellent” to the
latter. This enables us to learn different weights for
base entries depending on whether they are useful
for expanding a feature vector. We use L1 regu-
larized logistic regression as the classification algo-
rithm (Ng, 2004), which produces a sparse model in
which most irrelevant features are assigned a zero
weight. This enables us to select useful features for
classification in a systematic way without having to
preselect features using heuristic approaches. The
regularization parameter is set to its default value
of 1 for all the experiments described in this paper.
</bodyText>
<page confidence="0.999027">
136
</page>
<sectionHeader confidence="0.998188" genericHeader="evaluation">
5 Experiments
</sectionHeader>
<subsectionHeader confidence="0.85429">
5.1 Dataset
</subsectionHeader>
<bodyText confidence="0.9999605">
To evaluate our method we use the cross-domain
sentiment classification dataset prepared by Blitzer
et al. (2007). This dataset consists of Amazon prod-
uct reviews for four different product types: books
(B), DVDs (D), electronics (E) and kitchen appli-
ances (K). There are 1000 positive and 1000 neg-
ative labeled reviews for each domain. Moreover,
the dataset contains some unlabeled reviews (on av-
erage 17,547) for each domain. This benchmark
dataset has been used in much previous work on
cross-domain sentiment classification and by eval-
uating on it we can directly compare our method
against existing approaches.
Following previous work, we randomly select 800
positive and 800 negative labeled reviews from each
domain as training instances (i.e. 1600 x 4 = 6400);
the remainder is used for testing (i.e. 400 x 4 =
1600). In our experiments, we select each domain in
turn as the target domain, with one or more other do-
mains as sources. Note that when we combine more
than one source domain we limit the total number
of source domain labeled reviews to 1600, balanced
between the domains. For example, if we combine
two source domains, then we select 400 positive and
400 negative labeled reviews from each domain giv-
ing (400 + 400) x 2 = 1600. This enables us to
perform a fair evaluation when combining multiple
source domains. The evaluation metric is classifica-
tion accuracy on a target domain, computed as the
percentage of correctly classified target domain re-
views out of the total number of reviews in the target
domain.
</bodyText>
<subsectionHeader confidence="0.999733">
5.2 Effect of Feature Expansion
</subsectionHeader>
<bodyText confidence="0.999851272727273">
To study the effect of feature expansion at train time
compared to test time, we used Amazon reviews for
two further domains, music and video, which were
also collected by Blitzer et al. (2007) but are not
part of the benchmark dataset. Each validation do-
main has 1000 positive and 1000 negative labeled
reviews, and 15000 unlabeled reviews. Using the
validation domains as targets, we vary the number
of top k ranked base entries (Equation 3) used for
feature expansion during training (Traink) and test-
ing (Testk), and measure the average classification
</bodyText>
<figure confidence="0.96693725">
0.776
00 200 400 600 800 1000
Traink
Source Domains
</figure>
<figureCaption confidence="0.999931">
Figure 2: Effect of using multiple source domains.
</figureCaption>
<bodyText confidence="0.999964461538462">
accuracy. Figure 1 illustrates the results using a heat
map, where dark colors indicate low accuracy val-
ues and light colors indicate high accuracy values.
We see that expanding features only at test time (the
left-most column) does not work well because we
have not learned proper weights for the additional
features. Similarly, expanding features only at train
time (the bottom-most row) also does not perform
well because the expanded features are not used dur-
ing testing. The maximum classification accuracy is
obtained when Testk = 400 and Traink = 800, and
we use these values for the remainder of the experi-
ments described in the paper.
</bodyText>
<subsectionHeader confidence="0.999732">
5.3 Combining Multiple Sources
</subsectionHeader>
<bodyText confidence="0.9983174">
Figure 2 shows the effect of combining multiple
source domains to build a sentiment classifier for
the electronics domain. We see that the kitchen do-
main is the single best source domain when adapt-
ing to the electronics target domain. This behavior
</bodyText>
<figureCaption confidence="0.998526">
Figure 1: Feature expansion at train vs. test times.
</figureCaption>
<figure confidence="0.991885291666667">
B D K B+D B+K D+K B+D+K
85
Accuracy on electronics domain
80
75
70
65
60
55
50
1000
800
600
Testk
400
200
0.786
0.784
0.782
0.78
0.778
137
Positive/Negative instances
Source unlabeled dataset size
</figure>
<figureCaption confidence="0.999984">
Figure 4: Effect of source domain unlabeled data.
</figureCaption>
<bodyText confidence="0.998504772727273">
is explained by the fact that in general kitchen appli-
ances and electronic items have similar aspects. But
a more interesting observation is that the accuracy
that we obtain when we use two source domains is
always greater than the accuracy if we use those do-
mains individually. The highest accuracy is achieved
when we use all three source domains. Although
not shown here for space limitations, we observed
similar trends with other domains in the benchmark
dataset.
To investigate the impact of the quantity of source
domain labeled data on our method, we vary the
amount of data from zero to 800 reviews, with equal
amounts of positive and negative labeled data. Fig-
ure 3 shows the accuracy with the DVD domain as
the target. Note that source domain labeled data is
used both to create the sentiment sensitive thesaurus
as well as to train the sentiment classifier. When
there are multiple source domains we limit and bal-
ance the number of labeled instances as outlined in
Section 5.1. The amount of unlabeled data is held
constant, so that any change in classification accu-
</bodyText>
<figure confidence="0.708811">
Target unlabeled dataset size
</figure>
<figureCaption confidence="0.99945">
Figure 5: Effect of target domain unlabeled data.
</figureCaption>
<bodyText confidence="0.999781735294118">
racy is directly attributable to the source domain la-
beled instances. Because this is a binary classifica-
tion task (i.e. positive vs. negative sentiment), a ran-
dom classifier that does not utilize any labeled data
would report a 50% classification accuracy. From
Figure 3, we see that when we increase the amount
of source domain labeled data the accuracy increases
quickly. In fact, by selecting only 400 (i.e. 50% of
the total 800) labeled instances per class, we achieve
the maximum performance in most of the cases.
To study the effect of source and target domain
unlabeled data on the performance of our method,
we create sentiment sensitive thesauri using differ-
ent proportions of unlabeled data. The amount of
labeled data is held constant and is balanced across
multiple domains as outlined in Section 5.1, so any
changes in classification accuracy can be directly at-
tributed to the contribution of unlabeled data. Figure
4 shows classification accuracy on the DVD target
domain when we vary the proportion of source do-
main unlabeled data (target domain’s unlabeled data
is fixed).
Likewise, Figure 5 shows the classification ac-
curacy on the DVD target domain when we vary
the proportion of the target domain’s unlabeled data
(source domains’ unlabeled data is fixed). From Fig-
ures 4 and 5, we see that irrespective of the amount
being used, there is a clear performance gain when
we use unlabeled data from multiple source domains
compared to using a single source domain. How-
ever, we could not observe a clear gain in perfor-
mance when we increase the amount of the unla-
beled data used to create the sentiment sensitive the-
saurus.
</bodyText>
<figure confidence="0.967823727272727">
85
80
75
70
65
60
55
50
45
400 200 400 600 800
B E K B+E B+K E+K B+E+K
</figure>
<figureCaption confidence="0.963002">
Figure 3: Effect of source domain labeled data.
</figureCaption>
<figure confidence="0.997733133333333">
70
65
60
55
500 0.2 0.4 0.6 0.8 1
Accuracy
B E K B+E B+K E+K B+E+K
70
65
60
55
500 0.2 0.4 0.6 0.8 1
B E K B+E B+K E+K B+E+K
Accuracy
Accuracy
</figure>
<page confidence="0.980978">
138
</page>
<table confidence="0.9995716">
Method K D E B
No Thesaurus 72.61 68.97 70.53 62.72
SCL 80.83 74.56 78.43 72.76
SCL-MI 82.06 76.30 78.93 74.56
SFA 81.48 76.31 75.30 77.73
LSA 79.00 73.50 77.66 70.83
FALSA 80.83 76.33 77.33 73.33
NSS 77.50 73.50 75.50 71.46
Proposed 85.18 78.77 83.63 76.32
Within-Domain 87.70 82.40 84.40 80.40
</table>
<tableCaption confidence="0.999679">
Table 3: Cross-domain sentiment classification accuracy.
</tableCaption>
<subsectionHeader confidence="0.978188">
5.4 Cross-Domain Sentiment Classification
</subsectionHeader>
<bodyText confidence="0.999979568965518">
Table 3 compares our method against a number of
baselines and previous cross-domain sentiment clas-
sification techniques using the benchmark dataset.
For all previous techniques we give the results re-
ported in the original papers. The No Thesaurus
baseline simulates the effect of not performing any
feature expansion. We simply train a binary clas-
sifier using unigrams and bigrams as features from
the labeled reviews in the source domains and ap-
ply the trained classifier on the target domain. This
can be considered to be a lower bound that does
not perform domain adaptation. SCL is the struc-
tural correspondence learning technique of Blitzer
et al. (2006). In SCL-MI, features are selected us-
ing the mutual information between a feature (uni-
gram or bigram) and a domain label. After selecting
salient features, the SCL algorithm is used to train a
binary classifier. SFA is the spectral feature align-
ment technique of Pan et al. (2010). Both the LSA
and FALSA techniques are based on latent semantic
analysis (Pan et al., 2010). For the Within-Domain
baseline, we train a binary classifier using the la-
beled data from the target domain. This upper base-
line represents the classification accuracy we could
hope to obtain if we were to have labeled data for the
target domain. Note that this is not a cross-domain
classification setting. To evaluate the benefit of us-
ing sentiment features on our method, we give a NSS
(non-sentiment sensitive) baseline in which we cre-
ate a thesaurus without using any sentiment features.
Proposed is our method.
From Table 3, we see that our proposed method
returns the best cross-domain sentiment classifica-
tion accuracy (shown in boldface) for the three do-
mains kitchen appliances, DVDs, and electronics.
For the books domain, the best results are returned
by SFA. The books domain has the lowest number
of unlabeled reviews (around 5000) in the dataset.
Because our method relies upon the availability of
unlabeled data for the construction of a sentiment
sensitive thesaurus, we believe that this accounts for
our lack of performance on the books domain. How-
ever, given that it is much cheaper to obtain unla-
beled than labeled data for a target domain, there is
strong potential for improving the performance of
our method in this domain. The analysis of vari-
ance (ANOVA) and Tukey’s honestly significant dif-
ferences (HSD) tests on the classification accuracies
for the four domains show that our method is sta-
tistically significantly better than both the No The-
saurus and NSS baselines, at confidence level 0.05.
We therefore conclude that using the sentiment sen-
sitive thesaurus for feature expansion is useful for
cross-domain sentiment classification. The results
returned by our method are comparable to state-of-
the-art techniques such as SCL-MI and SFA. In par-
ticular, the differences between those techniques and
our method are not statistically significant.
</bodyText>
<sectionHeader confidence="0.999983" genericHeader="related work">
6 Related Work
</sectionHeader>
<bodyText confidence="0.9998265">
Compared to single-domain sentiment classifica-
tion, which has been studied extensively in previous
work (Pang and Lee, 2008; Turney, 2002), cross-
domain sentiment classification has only recently re-
ceived attention in response to advances in the area
of domain adaptation. Aue and Gammon (2005) re-
port a number of empirical tests into domain adap-
tation of sentiment classifiers using an ensemble of
classifiers. However, most of these tests were un-
able to outperform a simple baseline classifier that
is trained using all labeled data for all domains.
Blitzer et al. (2007) apply the structural corre-
spondence learning (SCL) algorithm to train a cross-
domain sentiment classifier. They first chooses a set
of pivot features using pointwise mutual informa-
tion between a feature and a domain label. Next,
linear predictors are learnt to predict the occur-
rences of those pivots. Finally, they use singular
value decomposition (SVD) to construct a lower-
dimensional feature space in which a binary classi-
</bodyText>
<page confidence="0.962288">
139
</page>
<bodyText confidence="0.968553509803922">
fier is trained. The selection of pivots is vital to the References
performance of SCL and heuristically selected pivot Anthony Aue and Michael Gamon. 2005. Customiz-
features might not guarantee the best performance ing sentiment classifiers to new domains: a case study.
on target domains. In contrast, our method uses all Technical report, Microsoft Research.
features when creating the thesaurus and selects a John Blitzer, Ryan McDonald, and Fernando Pereira.
subset of features during training using L1 regular- 2006. Domain adaptation with structural correspon-
ization. Moreover, we do not require SVD, which dence learning. In EMNLP 2006.
has cubic time complexity so can be computation- John Blitzer, Mark Dredze, and Fernando Pereira. 2007.
ally expensive for large datasets. Biographies, bollywood, boom-boxes and blenders:
Pan et al. (2010) use structural feature alignment Domain adaptation for sentiment classification. In
(SFA) to find an alignment between domain spe- ACL 2007, pages 440–447.
cific and domain independent features. The mu- Ted Briscoe, John Carroll, and Rebecca Watson. 2006.
tual information of a feature with domain labels is The second release of the rasp system. In COL-
used to classify domain specific and domain inde- ING/ACL 2006 Interactive Presentation Sessions.
pendent features. Next, spectral clustering is per- Teng-Kai Fan and Chia-Hui Chang. 2010. Sentiment-
formed on a bipartite graph that represents the re- oriented contextual advertising. Knowledge and Infor-
lationship between the two sets of features. Fi- mation Systems, 23(3):321–344.
nally, the top eigenvectors are selected to construct Hui Fang. 2008. A re-examination of query expansion
a lower-dimensional projection. However, not all using lexical resources. In ACL 2008, pages 139–147.
words can be cleanly classified into domain spe- Z. Harris. 1954. Distributional structure. Word, 10:146–
cific or domain independent, and this process is con- 162.
ducted prior to training a classifier. In contrast, our Vasileios Hatzivassiloglou and Kathleen R. McKeown.
method lets a particular lexical entry to be listed as 1997. Predicting the semantic orientation of adjec-
a neighour for multiple base entries. Moreover, we tives. In ACL 1997, pages 174–181.
expand each feature vector individually and do not Minqing Hu and Bing Liu. 2004. Mining and summariz-
require any clustering. Furthermore, unlike SCL and ing customer reviews. In KDD 2004, pages 168–177.
SFA, which consider a single source domain, our Thorsten Joachims. 1998. Text categorization with sup-
method can efficiently adapt from multiple source port vector machines: Learning with many relevant
domains. features. In ECML 1998, pages 137–142.
7 Conclusions Yue Lu, ChengXiang Zhai, and Neel Sundaresan. 2009.
We have described and evaluated a method to Rated aspect summarization of short comments. In
construct a sentiment-sensitive thesaurus to bridge WWW 2009, pages 131–140.
the gap between source and target domains in Andrew Y. Ng. 2004. Feature selection, l1 vs. l2 regular-
cross-domain sentiment classification using multi- ization, and rotational invariance. In ICML 2004.
ple source domains. Experimental results using a Sinno Jialin Pan, Xiaochuan Ni, Jian-Tao Sun, Qiang
benchmark dataset for cross-domain sentiment clas- Yang, and Zheng Chen. 2010. Cross-domain senti-
sification show that our proposed method can im- ment classification via spectral feature alignment. In
prove classification accuracy in a sentiment classi- WWW 2010.
fier. In future, we intend to apply the proposed Bo Pang and Lillian Lee. 2008. Opinion mining and
method to other domain adaptation tasks. sentiment analysis. Foundations and Trends in Infor-
Acknowledgements mation Retrieval, 2(1-2):1–135.
This research was conducted while the first author Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan.
was a visiting research fellow at Sussex university 2002. Thumbs up? sentiment classification using ma-
under the postdoctoral fellowship of the Japan Soci- chine learning techniques. In EMNLP 2002, pages 79–
ety for the Promotion of Science (JSPS). 86.
140 Patrick Pantel and Deepak Ravichandran. 2004. Au-
tomatically labeling semantic classes. In NAACL-
HLT’04, pages 321 – 328.
Sunita Sarawagi and Alok Kirpal. 2004. Efficient set
joins on similarity predicates. In SIGMOD ’04, pages
743–754.
</bodyText>
<reference confidence="0.997774111111111">
Dou Shen, Jianmin Wu, Bin Cao, Jian-Tao Sun, Qiang
Yang, Zheng Chen, and Ying Li. 2009. Exploit-
ing term relationship to boost text classification. In
CIKM’09, pages 1637 – 1640.
Peter D. Turney. 2002. Thumbs up or thumbs down?
semantic orientation applied to unsupervised classifi-
cation of reviews. In ACL 2002, pages 417–424.
Janyce M. Wiebe. 2000. Learning subjective adjective
from corpora. In AAAI 2000, pages 735–740.
</reference>
<page confidence="0.998262">
141
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.325615">
<title confidence="0.999717">Using Multiple Sources to Construct a Sentiment Sensitive for Cross-Domain Sentiment Classification</title>
<author confidence="0.963076">Danushka</author>
<affiliation confidence="0.997785">The University of</affiliation>
<address confidence="0.9188025">7-3-1, Hongo, 113-8656,</address>
<email confidence="0.875595">iba.t.u-tokyo.ac.jp</email>
<author confidence="0.888168">David</author>
<affiliation confidence="0.950777">School of University of Falmer,</affiliation>
<address confidence="0.931526">BN1 9QJ,</address>
<email confidence="0.994868">sussex.ac.uk</email>
<author confidence="0.773004">John</author>
<affiliation confidence="0.950659666666667">School of University of Falmer,</affiliation>
<address confidence="0.931677">BN1 9QJ,</address>
<email confidence="0.998353">sussex.ac.uk</email>
<abstract confidence="0.999696409090909">We describe a sentiment classification method that is applicable when we do not have any ladata for a but have some labeled data for multiple other domains, desas the We automatcreate a sensitive using both labeled and unlabeled data from multiple source domains to find the association between words that express similar sentiments in different domains. The created thesaurus is then used to expand feature vectors to train a binary classifier. Unlike previous cross-domain sentiment classification methods, our method can efficiently learn from source Our method significantly outperforms numerous baselines and returns results that are better than or comparable to previous cross-domain sentiment classification methods on a benchmark dataset containing Amazon user reviews for different types of products.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Dou Shen</author>
<author>Jianmin Wu</author>
<author>Bin Cao</author>
<author>Jian-Tao Sun</author>
<author>Qiang Yang</author>
<author>Zheng Chen</author>
<author>Ying Li</author>
</authors>
<title>Exploiting term relationship to boost text classification.</title>
<date>2009</date>
<booktitle>In CIKM’09,</booktitle>
<pages>1637--1640</pages>
<contexts>
<context position="6005" citStr="Shen et al., 2009" startWordPosition="927" endWordPosition="930">tely estimate the distribution of words in source and target domains. Our method can learn from a large amount of unlabeled data to leverage a robust cross-domain sentiment classifier. We model the cross-domain sentiment classification problem as one of feature expansion, where we append additional related features to feature vectors that represent source and target domain reviews in order to reduce the mismatch of features between the two domains. Methods that use related features have been successfully used in numerous tasks such as query expansion (Fang, 2008), and document classification (Shen et al., 2009). However, feature expansion techniques have not previously been applied to the task of cross-domain sentiment classification. In our method, we use the automatically created thesaurus to expand feature vectors in a binary classifier at train and test times by introducing related lexical elements from the thesaurus. We use L1 regularized logistic regression as the classification algorithm. (However, the method is agnostic to the properties of the classifier and can be used to expand feature vectors for any binary classifier). L1 regularization enables us to select a small subset of features fo</context>
</contexts>
<marker>Shen, Wu, Cao, Sun, Yang, Chen, Li, 2009</marker>
<rawString>Dou Shen, Jianmin Wu, Bin Cao, Jian-Tao Sun, Qiang Yang, Zheng Chen, and Ying Li. 2009. Exploiting term relationship to boost text classification. In CIKM’09, pages 1637 – 1640.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter D Turney</author>
</authors>
<title>Thumbs up or thumbs down? semantic orientation applied to unsupervised classification of reviews.</title>
<date>2002</date>
<booktitle>In ACL</booktitle>
<pages>417--424</pages>
<contexts>
<context position="1686" citStr="Turney, 2002" startWordPosition="247" endWordPosition="248">e source domains. Our method significantly outperforms numerous baselines and returns results that are better than or comparable to previous cross-domain sentiment classification methods on a benchmark dataset containing Amazon user reviews for different types of products. 1 Introduction Users express opinions about products or services they consume in blog posts, shopping sites, or review sites. It is useful for both consumers as well as for producers to know what general public think about a particular product or service. Automatic document level sentiment classification (Pang et al., 2002; Turney, 2002) is the task of classifying a given review with respect to the sentiment expressed by the author of the review. For example, a sentiment classifier might classify a user review about a movie as positive or negative depending on the sentiment expressed in the review. Sentiment classification has been applied in numerous tasks such as opinion mining (Pang and Lee, 2008), opinion summarization (Lu et al., 2009), contextual advertising (Fan and Chang, 2010), and market analysis (Hu and Liu, 2004). Supervised learning algorithms that require labeled data have been successfully used to build sentime</context>
<context position="31167" citStr="Turney, 2002" startWordPosition="5174" endWordPosition="5175"> statistically significantly better than both the No Thesaurus and NSS baselines, at confidence level 0.05. We therefore conclude that using the sentiment sensitive thesaurus for feature expansion is useful for cross-domain sentiment classification. The results returned by our method are comparable to state-ofthe-art techniques such as SCL-MI and SFA. In particular, the differences between those techniques and our method are not statistically significant. 6 Related Work Compared to single-domain sentiment classification, which has been studied extensively in previous work (Pang and Lee, 2008; Turney, 2002), crossdomain sentiment classification has only recently received attention in response to advances in the area of domain adaptation. Aue and Gammon (2005) report a number of empirical tests into domain adaptation of sentiment classifiers using an ensemble of classifiers. However, most of these tests were unable to outperform a simple baseline classifier that is trained using all labeled data for all domains. Blitzer et al. (2007) apply the structural correspondence learning (SCL) algorithm to train a crossdomain sentiment classifier. They first chooses a set of pivot features using pointwise </context>
</contexts>
<marker>Turney, 2002</marker>
<rawString>Peter D. Turney. 2002. Thumbs up or thumbs down? semantic orientation applied to unsupervised classification of reviews. In ACL 2002, pages 417–424.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janyce M Wiebe</author>
</authors>
<title>Learning subjective adjective from corpora.</title>
<date>2000</date>
<booktitle>In AAAI</booktitle>
<pages>735--740</pages>
<contexts>
<context position="10871" citStr="Wiebe, 2000" startWordPosition="1697" endWordPosition="1698">expansion. Given a labeled or an unlabeled review, we first split the review into individual sentences. We carry out part-of-speech (POS) tagging and lemmatization on each review sentence using the RASP system (Briscoe et al., 2006). Lemmatization reduces the data sparseness and has been shown to be effective in text classification tasks (Joachims, 1998). We then apply a simple word filter based on POS tags to select content words (nouns, verbs, adjectives, and adverbs). In particular, previous work has identified adjectives as good indicators of sentiment (Hatzivassiloglou and McKeown, 1997; Wiebe, 2000). Following previous work in cross-domain sentiment classification, we model a review as a bag of words. We select unigrams and bigrams from each sentence. For the remainder of this paper, we will refer to unigrams and bigrams collectively as lexical elements. Previous work on sentiment classification has shown that both unigrams and bigrams are useful for training a sentiment classifier (Blitzer et al., 2007). We note that it is possible to create lexical elements both from source domain labeled reviews as well as from unlabeled reviews in source and target domains. Next, we represent each le</context>
</contexts>
<marker>Wiebe, 2000</marker>
<rawString>Janyce M. Wiebe. 2000. Learning subjective adjective from corpora. In AAAI 2000, pages 735–740.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>