<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.9990485">
A Machine Learning Approach to
Coreference Resolution of Noun Phrases
</title>
<author confidence="0.975388">
Wee Meng Soon* Hwee Tou Ngt
</author>
<affiliation confidence="0.640715">
DSO National Laboratories DSO National Laboratories
</affiliation>
<author confidence="0.921775">
Daniel Chung Yong LimI
</author>
<sectionHeader confidence="0.433981" genericHeader="method">
DSO National Laboratories
</sectionHeader>
<bodyText confidence="0.9983193">
In this paper, we present a learning approach to coreference resolution of noun phrases in unre-
stricted text. The approach learns from a small, annotated corpus and the task includes resolving
not just a certain type of noun phrase (e.g., pronouns) but rather general noun phrases. It also
does not restrict the entity types of the noun phrases; that is, coreference is assigned whether
they are of &amp;quot;organization,&amp;quot; &amp;quot;person,&amp;quot; or other types. We evaluate our approach on common data
sets (namely, the MUC-6 and MUC-7 coreference corpora) and obtain encouraging results, in-
dicating that on the general noun phrase coreference task, the learning approach holds promise
and achieves accuracy comparable to that of nonlearning approaches. Our system is the first
learning-based system that offers performance comparable to that of state-of-the-art nonlearning
systems on these data sets.
</bodyText>
<sectionHeader confidence="0.990234" genericHeader="method">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999929888888889">
Coreference resolution is the process of determining whether two expressions in nat-
ural language refer to the same entity in the world. It is an important subtask in nat-
ural language processing systems. In particular, information extraction (IE) systems
like those built in the DARPA Message Understanding Conferences (Chinchor 1998;
Sundheim 1995) have revealed that coreference resolution is such a critical component
of IE systems that a separate coreference subtask has been defined and evaluated since
MUC-6 (MUC-6 1995).
In this paper, we focus on the task of determining coreference relations as defined
in MUC-6 (MUC-6 1995) and MUC-7 (MUC-7 1997). Specifically, a coreference relation
denotes an identity of reference and holds between two textual elements known as
markables, which can be definite noun phrases, demonstrative noun phrases, proper
names, appositives, subâ€”noun phrases that act as modifiers, pronouns, and so on. Thus,
our coreference task resolves general noun phrases and is not restricted to a certain
type of noun phrase such as pronouns. Also, we do not place any restriction on the
possible candidate markables; that is, all markables, whether they are &amp;quot;organization,&amp;quot;
&amp;quot;person,&amp;quot; or other entity types, are considered. The ability to link coreferring noun
phrases both within and across sentences is critical to discourse analysis and language
understanding in general.
</bodyText>
<note confidence="0.555859">
* 20 Science Park Drive, Singapore 118230. E-mail: sweemeng@dso.org.sg
</note>
<footnote confidence="0.92516275">
t 20 Science Park Drive, Singapore 118230. E-mail: nhweetou@dso.org.sg. This author is also affiliated
with the Department of Computer Science, School of Computing, National University of Singapore.
Web address: http://www.comp.nus.edu.sg/--Tight
t 20 Science Park Drive, Singapore 118230. E-mail: Ichungyo@dso.org.sg
</footnote>
<note confidence="0.9202525">
C) 2001 Association for Computational Linguistics
Computational Linguistics Volume 27, Number 4
</note>
<figureCaption confidence="0.968814">
Figure 1
</figureCaption>
<bodyText confidence="0.548474">
System architecture of natural language processing pipeline.
</bodyText>
<sectionHeader confidence="0.888727" genericHeader="method">
2. A Machine Learning Approach to Coreference Resolution
</sectionHeader>
<bodyText confidence="0.9999947">
We adopt a corpus-based, machine learning approach to noun phrase coreference
resolution. This approach requires a relatively small corpus of training documents that
have been annotated with coreference chains of noun phrases. All possible markables
in a training document are determined by a pipeline of language-processing modules,
and training examples in the form of feature vectors are generated for appropriate pairs
of markables. These training examples are then given to a learning algorithm to build
a classifier. To determine the coreference chains in a new document, all markables are
determined and potential pairs of coreferring markables are presented to the classifier,
which decides whether the two markables actually corefer. We give the details of these
steps in the following subsections.
</bodyText>
<subsectionHeader confidence="0.99982">
2.1 Determination of Markables
</subsectionHeader>
<bodyText confidence="0.999879043478261">
A prerequisite for coreference resolution is to obtain most, if not all, of the possi-
ble markables in a raw input text. To determine the markables, a pipeline of natural
language processing (NLP) modules is used, as shown in Figure 1. They consist of to-
kenization, sentence segmentation, morphological processing, part-of-speech tagging,
noun phrase identification, named entity recognition, nested noun phrase extraction,
and semantic class determination. As far as coreference resolution is concerned, the
goal of these NLP modules is to determine the boundary of the markables, and to
provide the necessary information about each markable for subsequent generation of
features in the training examples.
Our part-of-speech tagger is a standard statistical tagger based on the Hidden
Markov Model (HMM) (Church 1988). Similarly, we built a statistical HMM-based
noun phrase identification module that determines the noun phrase boundaries solely
based on the part-of-speech tags assigned to the words in a sentence. We also im-
plemented a module that recognizes MUC-style named entities, that is, organization,
person, location, date, time, money, and percent. Our named entity recognition module
uses the HMM approach of Bikel, Schwartz, and Weischedel (1999), which learns from
a tagged corpus of named entities. That is, our part-of-speech tagger, noun phrase
identification module, and named entity recognition module are all based on HMMs
and learn from corpora tagged with parts of speech, noun phrases, and named entities,
respectively. Next, both the noun phrases determined by the noun phrase identifica-
tion module and the named entities are merged in such a way that if the noun phrase
overlaps with a named entity, the noun phrase boundaries will be adjusted to subsume
the named entity.
</bodyText>
<figure confidence="0.993096461538462">
Free text Tokenization &amp; Morphological POS tagger Noun Phrase
Sentence ^-3&amp;quot;-
Segmentation Processing
Identification
V
Named Entity
Recognition
Nested
Noun Phrase
Extraction
Semantic Class
Determination
Markables
</figure>
<page confidence="0.995135">
522
</page>
<note confidence="0.925146">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.999807333333333">
The nested noun phrase extraction module subsequently accepts the noun phrases
and determines the nested phrases for each noun phrase. The nested noun phrases
are divided into two groups:
</bodyText>
<listItem confidence="0.9692455">
1. Nested noun phrases from possessive noun phrases. Consider two
possessive noun phrases marked by the noun phrase module, his
long-range strategy and Eastern&apos;s parent. The nested noun phrase for the
first phrase is the pronoun his, while for the second one, it is the proper
name Eastern.
2. Nested noun phrases that are modifier nouns (or prenominals). For
example, the nested noun phrase for wage reductions is wage, and for
Union representatives, it is Union.
</listItem>
<bodyText confidence="0.999932846153846">
Finally, the markables needed for coreference resolution are the union of the noun
phrases, named entities, and nested noun phrases found. For markables without any
named entity type, semantic class is determined by the semantic class determination
module. More details regarding this module are given in the description of the seman-
tic class agreement feature.
To achieve acceptable recall for coreference resolution, it is most critical that the
eligible candidates for coreference be identified correctly in the first place. In order to
test our system&apos;s effectiveness in determining the markables, we attempted to match
the markables generated by our system against those appearing in the coreference
chains annotated in 100 SGML documents, a subset of the training documents available
in MUC-6. We found that our system is able to correctly identify about 85% of the
noun phrases appearing in coreference chains in the 100 annotated SGML documents.
Most of the unmatched noun phrases are of the following types:
</bodyText>
<listItem confidence="0.962348">
1. Our system generated a head noun that is a subset of the noun phrase in
the annotated corpus. For example, Saudi Arabia, the cartel&apos;s biggest
producer was annotated as a markable, but our system generated only
Saudi Arabia.
2. Our system extracted a sequence of words that cannot be considered as a
markable.
3. Our system extracted markables that appear to be correct but do not
match what was annotated. For example, our system identified selective
wage reductions, but wage reductions was annotated instead.
</listItem>
<subsectionHeader confidence="0.950317">
2.2 Determination of Feature Vectors
</subsectionHeader>
<bodyText confidence="0.999898181818182">
To build a learning-based coreference engine, we need to devise a set of features that is
useful in determining whether two markables corefer or not. In addition, these features
must be generic enough to be used across different domains. Since the MUC-6 and
MUC-7 tasks define coreference guidelines for all types of noun phrases and different
types of noun phrases behave differently in terms of how they corefer, our features
must be able to handle this and give different coreference decisions based on different
types of noun phrases. In general, there must be some features that indicate the type of
a noun phrase. Altogether, we have five features that indicate whether the markables
are definite noun phrases, demonstrative noun phrases, pronouns, or proper names.
There are many important knowledge sources useful for coreference. We wanted
to use those that are not too difficult to compute. One important factor is the distance
</bodyText>
<page confidence="0.996826">
523
</page>
<note confidence="0.881678">
Computational Linguistics Volume 27, Number 4
</note>
<bodyText confidence="0.998668857142857">
between the two markables. McEnery, Tanaka, and Botley (1997) have done a study on
how distance affects coreference, particularly for pronouns. One of their conclusions is
that the antecedents of pronouns do exhibit clear quantitative patterns of distribution.
The distance feature has different effects on different noun phrases. For proper names,
locality of the antecedents may not be so important. We include the distance feature
so that the learning algorithm can best decide the distribution for different classes of
noun phrases.
There are other features that are related to the gender, number, and semantic class
of the two markables. Such knowledge sources are commonly used for the task of
determining coreference.
Our feature vector consists of a total of 12 features described below, and is derived
based on two extracted markables, i and j, where i is the potential antecedent and j
is the anaphor. Information needed to derive the feature vectors is provided by the
pipeline of language-processing modules prior to the coreference engine.
</bodyText>
<listItem confidence="0.8940558">
1. Distance Feature (DIST): Its possible values are 0, 1,2,3, .... This feature
captures the distance between i and j. If i and j are in the same sentence,
the value is 0; if they are one sentence apart, the value is 1; and so on.
2. i-Pronoun Feature (I_PRONOUN): Its possible values are true or false. If
i is a pronoun, return true; else return false. Pronouns include reflexive
pronouns (himself, herself), personal pronouns (he, him, you), and
possessive pronouns (hers, her).
3. j-Pronoun Feature (J PRONOUN): Its possible values are true or false. If
j is a pronoun (as described above), then return true; else return false.
4. String Match Feature (STR_MATCH): Its possible values are true or
</listItem>
<bodyText confidence="0.949144444444444">
false. If the string of i matches the string of j, return true; else return
false. We first remove articles (a, an, the) and demonstrative pronouns
(this, these, that, those) from the strings before performing the string
comparison. Therefore, the license matches this license, that computer
matches computer.
5. Definite Noun Phrase Feature (DEF_NP): Its possible values are true or
false. In our definition, a definite noun phrase is a noun phrase that
starts with the word the. For example, the car is a definite noun phrase. If
j is a definite noun phrase, return true; else return false.
</bodyText>
<listItem confidence="0.646893">
6. Demonstrative Noun Phrase Feature (DEM_NP): Its possible values are
</listItem>
<bodyText confidence="0.880035555555556">
true or false. A demonstrative noun phrase is one that starts with the
word this, that, these, or those. If] is a demonstrative noun phrase, then
return true; else return false.
7. Number Agreement Feature (NUMBER): Its possible values are true or
false. If i and j agree in number (i.e., they are both singular or both
plural), the value is true; otherwise false. Pronouns such as they and them
are plural, while it, him, and so on, are singular. The morphological root
of a noun is used to determine whether it is singular or plural if the
noun is not a pronoun.
</bodyText>
<sectionHeader confidence="0.316123" genericHeader="method">
8. Semantic Class Agreement Feature (SEMCLASS): Its possible values
</sectionHeader>
<bodyText confidence="0.639746666666667">
are true, false, or unknown. In our system, we defined the following
semantic classes: &amp;quot;female,&amp;quot; &amp;quot;male,&amp;quot; &amp;quot;person,&amp;quot; &amp;quot;organization,&amp;quot; &amp;quot;location,&amp;quot;
&amp;quot;date,&amp;quot; &amp;quot;time,&amp;quot; &amp;quot;money,&amp;quot; &amp;quot;percent,&amp;quot; and &amp;quot;object.&amp;quot; These semantic classes
</bodyText>
<page confidence="0.993694">
524
</page>
<note confidence="0.680547">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.989175541666667">
are arranged in a simple ISA hierarchy. Each of the &amp;quot;female&amp;quot; and &amp;quot;male&amp;quot;
semantic classes is a subclass of the semantic class &amp;quot;person,&amp;quot; while each
of the semantic classes &amp;quot;organization,&amp;quot; &amp;quot;location,&amp;quot; &amp;quot;date,&amp;quot; &amp;quot;time,&amp;quot;
&amp;quot;money,&amp;quot; and &amp;quot;percent&amp;quot; is a subclass of the semantic class &amp;quot;object.&amp;quot; Each
of these defined semantic classes is then mapped to a WordNet synset
(Miller 1990). For example, &amp;quot;male&amp;quot; is mapped to the second sense of the
noun male in WordNet, &amp;quot;location&amp;quot; is mapped to the first sense of the
noun location, and so on.
The semantic class determination module assumes that the semantic
class for every markable extracted is the first sense of the head noun of
the markable. Since WordNet orders the senses of a noun by their
frequency, this is equivalent to choosing the most frequent sense as the
semantic class for each noun. If the selected semantic class of a markable
is a subclass of one of our defined semantic classes C, then the semantic
class of the markable is C; else its semantic class is &amp;quot;unknown.&amp;quot;
The semantic classes of markables i and j are in agreement if one is
the parent of the other (e.g., chairman with semantic class &amp;quot;person&amp;quot; and
Mr. Lim with semantic class &amp;quot;male&amp;quot;), or they are the same (e.g., Mr. Lim
and he, both of semantic class &amp;quot;male&amp;quot;). The value returned for such cases
is true. If the semantic classes of i and j are not the same (e.g., IBM with
semantic class &amp;quot;organization&amp;quot; and Mr. Lim with semantic class &amp;quot;male&amp;quot;),
return false. If either semantic class is &amp;quot;unknown,&amp;quot; then the head noun
strings of both markables are compared. If they are the same, return true;
else return unknown.
</bodyText>
<listItem confidence="0.979996923076923">
9. Gender Agreement Feature (GENDER): Its possible values are true,
false, or unknown. The gender of a markable is determined in several
ways. Designators and pronouns such as Mr., Mrs., she, and he, can
determine the gender. For a markable that is a person&apos;s name, such as
Peter H. Diller, the gender cannot be determined by the above method. In
our system, the gender of such a markable can be determined if
markables are found later in the document that refer to Peter H. Diller by
using the designator form of the name, such as Mr. Diller. If the
designator form of the name is not present, the system will look through
its database of common human first names to determine the gender of
that markable. The gender of a markable will be unknown for noun
phrases such as the president and chief executive officer. The gender of other
markables that are not &amp;quot;person&amp;quot; is determined by their semantic classes.
Unknown semantic classes will have unknown gender while those that
are objects will have &amp;quot;neutral&amp;quot; gender. If the gender of either markable i
or j is unknown, then the gender agreement feature value is unknown;
else if i and j agree in gender, then the feature value is true; otherwise its
value is false.
10. Both-Proper-Names Feature (PROPER-NAME): Its possible values are
true or false. A proper name is determined based on capitalization.
Prepositions appearing in the name such as of and and need not be in
uppercase. If i and j are both proper names, return true; else return false.
11. Alias Feature (ALIAS): Its possible values are true or false. If i is an alias
of j or vice versa, return true; else return false. That is, this feature value
is true if i and j are named entities (person, date, organization, etc.) that
refer to the same entity. The alias module works differently depending
</listItem>
<page confidence="0.994141">
525
</page>
<note confidence="0.441519">
Computational Linguistics Volume 27, Number 4
</note>
<bodyText confidence="0.997513074074074">
on the named entity type. For i and j that are dates (e.g., 01-08 and
Jan. 8), by using string comparison, the day, month, and year values are
extracted and compared. If they match, then j is an alias of i. For i and j
that are &amp;quot;person,&amp;quot; such as Mr. Simpson and Bent Simpson, the last words
of the noun phrases are compared to determine whether one is an alias
of the other. For organization names, the alias function also checks for
acronym match such as IBM and International Business Machines Corp. In
this case, the longer string is chosen to be the one that is converted into
the acronym form. The first step is to remove all postmodifiers such as
Corp. and Ltd. Then, the acronym function considers each word in turn,
and if the first letter is capitalized, it is used to form the acronym. Two
variations of the acronyms are produced: one with a period after each
letter, and one without.
12. Appositive Feature (APPOSITIVE): Its possible values are true or false.
If j is in apposition to i, return true; else return false. For example, the
markable the chairman of Microsoft Corp. is in apposition to Bill Gates in the
sentence Bill Gates, the chairman of Microsoft Corp., . . . . Our system
determines whether j is a possible appositive construct by first checking
for the existence of verbs and proper punctuation. Like the above
example, most appositives do not have any verb; and an appositive is
separated by a comma from the most immediate antecedent, i, to which
it refers. Further, at least one of i and j must be a proper name. The
MUC-6 and MUC-7 coreference task definitions are slightly different. In
MUC-6, j needs to be a definite noun phrase to be an appositive, while
both indefinite and definite noun phrases are acceptable in MUC-7.
As an example, Table 1 shows the feature vector associated with the antecedent i,
Frank Newman, and the anaphor j, vice chairman, in the following sentence:
</bodyText>
<listItem confidence="0.790454666666667">
(1) Separately, Clinton transition officials said that Frank Newman, 50, vice
chairman and chief financial officer of BankAmerica Corp., is expected to
be nominated as assistant Treasury secretary for domestic finance.
</listItem>
<tableCaption confidence="0.934105">
Table 1
</tableCaption>
<bodyText confidence="0.784526">
Feature vector of the markable pair (i = Frank Newman, j = vice chairman).
</bodyText>
<subsectionHeader confidence="0.938563">
Feature Value Comments
</subsectionHeader>
<construct confidence="0.804286125">
DIST
I_PRONOUN
J_PRONOUN
STR_MATCH
DEF_NP
DEM_NP
NUMBER
SEMCLASS
</construct>
<equation confidence="0.819167444444444">
GENDER
PROPER_NAME
ALIAS
APPOSITIVE
0 i and j are in the same sentence
- i is not a pronoun
j is not a pronoun
i and j do not match
- j is not a definite noun phrase
j is not a demonstrative noun phrase
i and j are both singular
1 i and j are both persons (This feature has three values:
false(0), true(1), unknown(2).)
1 i and j are both males (This feature has three values:
false(0), true(1), unknown(2).)
Only i is a proper name
- j is not an alias of i
j is in apposition to i
</equation>
<page confidence="0.992007">
526
</page>
<note confidence="0.679906">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.999516428571429">
Because of capitalization, markables in the headlines of MUC-6 and MUC-7 doc-
uments are always considered proper names even though some are not. Our system
solves this inaccuracy by first preprocessing a headline to correct the capitalization
before passing it into the pipeline of NLP modules. Only those markables in the head-
line that appear in the text body as proper names have their capitalization changed
to match those found in the text body. All other headline markables are changed to
lowercase.
</bodyText>
<subsectionHeader confidence="0.999972">
2.3 Generating Training Examples
</subsectionHeader>
<bodyText confidence="0.9998161">
Consider a coreference chain Al - A2 - A3 - A4 found in an annotated training docu-
ment. Only pairs of noun phrases in the chain that are immediately adjacent (i.e., Al -
A2, A2 - A3, and A3 - A4) are used to generate the positive training examples. The
first noun phrase in a pair is always considered the antecedent, while the second is
the anaphor. On the other hand, negative training examples are extracted as follows.
Between the two members of each antecedent-anaphor pair, there are other markables
extracted by our language-processing modules that either are not found in any coref-
erence chain or appear in other chains. Each of them is then paired with the anaphor
to form a negative example. For example, if markables a, b, and B1 appear between
Al and A2, then the negative examples are a - A2, b - A2, and B1 - A2. Note that a
and b do not appear in any coreference chain, while B1 appears in another coreference
chain.
For an annotated noun phrase in a coreference chain in a training document, the
same noun phrase must be identified as a markable by our pipeline of language-
processing modules before this noun phrase can be used to form a feature vector
for use as a training example. This is because the information necessary to derive
a feature vector, such as semantic class and gender, is computed by the language-
processing modules. If an annotated noun phrase is not identified as a markable, it
will not contribute any training example. To see more clearly how training examples
are generated, consider the following four sentences:
</bodyText>
<listItem confidence="0.9971938125">
â€¢ Sentence 1
1. (Eastern Air)ai Proposes (Date For Talks on ((Pay)a-Cut)di
Plan)bi
2. (Eastern Air)i Proposes (Date)2 For (Talks)3 on (Pay-Cut Plan)4
â€¢ Sentence 2
1. (Eastern Airlines),2 executives notified (union)ei leaders that the
carrier wishes to discuss selective ((wage),2 reductions)d2 on
(Feb. 3)82.
2. ((Eastern Airlines)5 executives)6 notified ((union)7 leaders)8 that
(the carrier)9 wishes to discuss (selective (wage)io reductions)ii
on (Feb. 3)12.
â€¢ Sentence 3
1. ((lJnion),2 representatives who could be reached)p said (they)fz
hadn&apos;t decided whether (they)f3 would respond.
2. ((Union)13 representatives)14 who could be reached said (they)15
hadn&apos;t decided whether (they)16 would respond.
</listItem>
<page confidence="0.900752">
527
</page>
<note confidence="0.24295">
Computational Linguistics Volume 27, Number 4
</note>
<listItem confidence="0.980972285714286">
â€¢ Sentence 4
1. By proposing (a meeting date)b3, (Eastern)3 moved one step
closer toward reopening current high-cost contract agreements
with ((its)a4 unions),3.
2. By proposing (a meeting date)17, (Eastern)18 moved (one step)19
closer toward reopening (current high-cost contract
agreements)20 with ((its)21 unions)22.
</listItem>
<bodyText confidence="0.995451941176471">
Each sentence is shown twice with different noun phrase boundaries. Sentences
labeled (1) are obtained directly from part of the training document. The letters in the
subscripts uniquely identify the coreference chains, while the numbers identify the
noun phrases. Noun phrases in sentences labeled (2) are extracted by our language-
processing modules and are also uniquely identified by numeric subscripts.
Let&apos;s consider chain e, which is about the union. There are three noun phrases
that corefer, and our system managed to extract the boundaries that correspond to
all of them: (union)7 matches with (union)ei, (union)13 with (union)e2, and (its unions)22
with (its unions)e3. There are two positive training examples formed by ((union)13, (its
unions)22) and ((union)7, (union)13). Noun phrases between (union)7 and (union)13 that
do not corefer with (union)13 are used to form the negative examples. The negative
examples are ((the carrier)9, (union)13), ((wage)io, (union)13), ((selective wage reductions)n,
(union)13), and ((Feb. 3)12, (union)13). Negative examples can also be found similarly
between ((union)13, (its unions)22).
As another example, neither noun phrase in chain d, (Pay-Cut)di and (wage reduc-
tions)d2, matches with any machine-extracted noun phrase boundaries. In this case, no
positive or negative example is formed for noun phrases in chain d.
</bodyText>
<subsectionHeader confidence="0.999945">
2.4 Building a Classifier
</subsectionHeader>
<bodyText confidence="0.9999768">
The next step is to use a machine learning algorithm to learn a classifier based on the
feature vectors generated from the training documents. The learning algorithm used
in our coreference engine is C5, which is an updated version of C4.5 (Quinlan 1993).
C5 is a commonly used decision tree learning algorithm and thus it may be considered
as a baseline method against which other learning algorithms can be compared.
</bodyText>
<subsectionHeader confidence="0.999589">
2.5 Generating Coreference Chains for Test Documents
</subsectionHeader>
<bodyText confidence="0.999643625">
Before determining the coreference chains for a test document, all possible markables
need to be extracted from the document. Every markable is a possible anaphor, and
every markable before the anaphor in document order is a possible antecedent of
the anaphor, except when the anaphor is nested. If the anaphor is a child or nested
markable, then its possible antecedents must not be any markable with the same root
markable as the current anaphor. However, the possible antecedents can be other
root markables and their children that are before the anaphor in document order. For
example, consider the two root markables, Mr. Tom&apos;s daughter and His daughter&apos;s eyes,
appearing in that order in a test document. The possible antecedents of His cannot be
His daughter or His daughter&apos;s eyes, but can be Mr. Tom or Mr. Tom&apos;s daughter. .
The coreference resolution algorithm considers every markable j starting from the
second markable in the document to be a potential candidate as an anaphor. For each
j, the algorithm considers every markable i before j as a potential antecedent. For each
pair i and j, a feature vector is generated and given to the decision tree classifier. A
coreferring antecedent is found if the classifier returns true. The algorithm starts from
the immediately preceding markable and proceeds backward in the reverse order of
</bodyText>
<page confidence="0.962996">
528
</page>
<note confidence="0.600511">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.984425842105263">
the markables in the document until there is no remaining markable to test or an
antecedent is found.
As an example, consider the following text with markables already detected by
the NLP modules:
(2) (Ms. Washington)73&apos;s candidacy is being championed by (several
powerful lawmakers)74 including ((her)76 boss)75, (Chairman John
Dinge11)77 (D., (Mich.)78) of (the House Energy and Commerce
Committee)79. (She)80 currently is (a counse1)81 to (the committee)82. (Ms.
Washington)83 and (Mr. Dinge11)84 have been considered (allies)85 of (the
(securities)87 exchanges)86, while (banks)88 and ((futures)90 exchanges)89
have often fought with (them)91.
We will consider how the boldfaced chains are detected. Table 2 shows the pairs
of markables tested for coreference to form the chain for Ms. Washington-her-She-Ms.
Washington. When the system considers the anaphor, (her)76, all preceding phrases,
except (her boss)75, are tested to see whether they corefer with it. (her boss)75 is not
tested because (her)76 is its nested noun phrase. Finally, the decision tree determines
that the noun phrase (Ms. Washington)73 corefers with (her)76. In Table 2, we only show
the system considering the three anaphors (her)76, (She)80, and (Ms. Washington)83, in
that order.
</bodyText>
<tableCaption confidence="0.474648">
Table 2
Pairs of markables that are tested in forming the coreference chain Ms. Washington-her-She-Ms.
Washington. The feature vector format: DIST, SEMCLASS, NUMBER, GENDER,
PROPER_NAME, ALIAS, J_PRONOUN, DEF_NP, DEM_NP, STR_MATCH, APPOSITIVE,
I_PRONOUN.
</tableCaption>
<figure confidence="0.98651045">
Antecedent
(several powerful
lawmakers)74
(Ms. Washington)73
(the House Energy
and Commerce
Committee)79
(Mich.)78
(Chairman John
Dinge11)77
(her)76
(the committee)82
(a counse1)81
(She)80
(the House Energy
and Commerce
Committee)79
(Mich.)78
(Chairman John
Dinge11)77
</figure>
<footnote confidence="0.7925694">
(her)76
(her boss)75
(several powerful
lawmakers)74
(Ms. Washington)73
</footnote>
<equation confidence="0.915205">
Anaphor
(her)76
(her)76
(She)80
(She)80
(She)80
(She)80
</equation>
<construct confidence="0.9161288">
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
(Ms. Washington)83
</construct>
<figure confidence="0.766171769230769">
Feature Vector Corefers?
No
Yes
1,0,+,0â€ž ,+â€ž â€ž No
2,0,+,0â€ž ,+, , , , , No
3,1,+,0â€ž ,+â€ž , No
3,1,+,1,â€”,â€”,+,â€”,â€”,â€”,â€”,+ Yes
1,0,+,0â€ž , , No
1,1,+,2â€ž No
1,1,+,1â€ž â€ž , , , ,+ No
2,0,+,0,+â€ž , , , , , No
3,0,+,0,+â€ž No
4,1,+,0,+â€ž , , , , , No
</figure>
<footnote confidence="0.9504685">
4,1,+,1, , , , , , ,+ No
4,1â€ž0, â€ž , , , , No
4,1â€ž2â€ž , , , , , , No
4,1,+,1,+,+,â€”,â€”,â€”,+,--,â€” Yes
</footnote>
<page confidence="0.980069">
529
</page>
<note confidence="0.632501">
Computational Linguistics Volume 27, Number 4
</note>
<bodyText confidence="0.9999865">
We use the same method to generate coreference chains for both MUC-6 and MUC-
7, except for the following. For MUC-7, because of slight changes in the coreference
task definition, we include a filtering module to remove certain coreference chains.
The task definition states that a coreference chain must contain at least one element
that is a head noun or a name; that is, a chain containing only prenominal modifiers
is removed by the filtering module.
</bodyText>
<sectionHeader confidence="0.946225" genericHeader="method">
3. Evaluation
</sectionHeader>
<bodyText confidence="0.999973575757576">
In order to evaluate the performance of our learning approach to coreference resolu-
tion on common data sets, we utilized the annotated corpora and scoring programs
from MUC-6 and MUC-7, which assembled a set of newswire documents annotated
with coreference chains. Although we did not participate in either MUC-6 or MUC-7,
we were able to obtain the training and test corpora for both years from the MUC orga-
nizers for research purposes.&apos; To our knowledge, these are the only publicly available
annotated corpora for coreference resolution.
For MUC-6, 30 dry-run documents annotated with coreference information were
used as the training documents for our coreference engine. There are also 30 annotated
training documents from MUC-7. The total size of the 30 training documents is close
to 12,400 words for MUC-6 and 19,000 words for MUC-7. There are altogether 20,910
(48,872) training examples used for MUC-6 (MUC-7), of which only 6.5% (4.4%) are
positive examples in MUC-6 (MUC-7).2
After training a separate classifier for each year, we tested the performance of each
classifier on its corresponding test corpus. For MUC-6, the C5 pruning confidence is set
at 20% and the minimum number of instances per leaf node is set at 5. For MUC-7, the
pruning confidence is 60% and the minimum number of instances is 2. The parameters
are determined by performing 10-fold cross-validation on the whole training set for
each MUC year. The possible pruning confidence values that we tried are 10%, 20%,
40%, 60%, 80%, and 100%, and for minimum instances, we tried 2, 5, 10, 15, and 20.
Thus, a total of 30 (6 x 5) cross-validation runs were executed.
One advantage of using a decision tree learning algorithm is that the resulting
decision tree classifier can be interpreted by humans. The decision tree generated for
MUC-6, shown in Figure 2, seems to encapsulate a reasonable rule of thumb that
matches our intuitive linguistic notion of when two noun phrases can corefer. It is
also interesting to note that only 8 out of the 12 available features in the training
examples are actually used in the final decision tree built.
MUC-6 has a standard set of 30 test documents, which is used by all systems that
participated in the evaluation. Similarly, MUC-7 has a test corpus of 20 documents. We
compared our system&apos;s MUC-6 and MUC-7 performance with that of the systems that
took part in MUC-6 and MUC-7, respectively. When the coreference engine is given
new test documents, its output is in the form of SGML files with the coreference chains
properly annotated according to the guidelines.3 We then used the scoring programs
</bodyText>
<footnote confidence="0.991057888888889">
1 See http://www.itl.nist.gov/iad/894.02/related_projects/muc/index.html for details on obtaining the
corpora.
2 Our system runs on a Pentium III 550MHz PC. It took less than 5 minutes to generate the training
examples from the training documents for MUC-6, and about 7 minutes for MUC-7. The training time
for the C5 algorithm to generate a decision tree from all the training examples was less than 3 seconds
for both MUC years.
3 The time taken to generate the coreference chains for the 30 MUC-6 test documents of close to 13,400
words was less than 3 minutes, while it took less than 2 minutes for the 20 MUC-7 test documents of
about 10,000 words.
</footnote>
<page confidence="0.9817">
530
</page>
<note confidence="0.808538">
Soon, Ng, and Lim Coreference Resolution
</note>
<equation confidence="0.999891235294118">
STR_MATCH = +: +
STR_MATCH =
:...J_PRONOUN =
:...APPOSITIVE = +: +
APPOSITIVE =
:...ALIAS = +: +
ALIAS = -
J_PRONOUN = +:
:...GENDER = 0: -
GENDER = 2: -
GENDER = 1:
:...I_PRONOUN = +: +
I_PRONOUN =
:...DIST &gt; 0: -
DIST &lt;= 0:
:...NUMBER =
NUMBER = :
</equation>
<figureCaption confidence="0.807472">
Figure 2
</figureCaption>
<bodyText confidence="0.998381333333333">
The decision tree classifier learned for MUC-6.
for the respective years to generate the recall and precision scores for our coreference
engine.
Our coreference engine achieves a recall of 58.6% and a precision of 67.3%, yielding
a balanced F-measure of 62.6% for MUC-6. For MUC-7, the recall is 56.1%, the precision
is 65.5%, and the balanced F-measure is 60.4%.4 We plotted the scores of our coreference
engine (square-shaped) against the official test scores of the other systems (cross-
shaped) in Figure 3 and Figure 4.
We also plotted the learning curves of our coreference engine in Figure 5 and
Figure 6, showing its accuracy averaged over three random trials when trained on
1, 2, 3, 4, 5, 10, 15, 20, 25, and 30 training documents. The learning curves indicate
that our coreference engine achieves its peak performance with about 25 training
documents, or about 11,000 to 17,000 words of training documents. This number of
training documents would generate tens of thousands of training examples, sufficient
for the decision tree learning algorithm to learn a good classifier. At higher numbers
of training documents, our system seems to start overfitting the training data. For
example, on MUC-7 data, training on the full set of 30 training documents results in
a more complex decision tree.
Our system&apos;s scores are in the upper region of the MUC-6 and MUC-7 systems.
We performed a simple one-tailed, paired sample t-test at significance level p = 0.05 to
determine whether the difference between our system&apos;s F-measure score and each of
the other systems&apos; F-measure score on the test documents is statistically significant.5
We found that at the 95% significance level (p = 0.05), our system performed better
than three MUC-6 systems, and as well as the rest of the MUC-6 systems. Using the
</bodyText>
<footnote confidence="0.994673166666667">
4 Note that MUC-b did not use balanced F-measure as the official evaluation measure, but MUC-7 did.
5 Though the McNemar test is shown to have low Type I error compared with the paired t-test
(Dietterich 1998), we did not carry out this test in the context of coreference. This is because an
example instance defines a coreference link between two noun phrases, and since this link is transitive
in nature, it is unclear how the number of links misclassified by System A but not by System B and
vice versa can be obtained to execute the McNemar test.
</footnote>
<page confidence="0.987702">
531
</page>
<figure confidence="0.999430714285714">
Computational Linguistics Volume 27, Number 4
100
90
80
70
60
.E13
c.) 50
0- 40
30
20
10
10 20 30 40 50 60 70 80 90 100
Recall
</figure>
<figureCaption confidence="0.864133666666667">
Figure 3
Coreference scores of MUC-6 systems and our system.
Figure 4
</figureCaption>
<bodyText confidence="0.9003824">
Coreference scores of MUC-7 systems and our system.
same significance level, our system performed better than four MUC-7 systems, and as
well as the rest of the MUC-7 systems. Our result is encouraging since it indicates that
a learning approach using relatively shallow features can achieve scores comparable
to those of systems built using nonlearning approaches.
</bodyText>
<page confidence="0.969036">
532
</page>
<figure confidence="0.730518088235294">
100
90
80
70
20
10
10 20 30 40 50 60 70 80 90 100
Recall
o o
Soon, Ng, and Lim Coreference Resolution
63
62
61
60
59
58
57
56
55
54
53
52
51
50
49
48
47
46
-
- -1
_ -
- -
_ -
_ _
- -
^ ^
- -
_ -
-
-
- _
_ -
-
1 1 1
5 10 15 20 25
Number of MUC-6 Documents Trained On
0 30
Figure 5
Learning curve of coreference resolution accuracy for MUC-6.
F-measure
63
62 -
61 -
60 -
59 -
58 -
57 -
a&apos; 56 -
m
al 55 -
? 54 -
LL 53 -
52 -
51 -
50 -
49 -
48 -
47 -
</figure>
<page confidence="0.898143">
46
</page>
<bodyText confidence="0.9003624">
-
-
-
-
-
</bodyText>
<figure confidence="0.95453">
i i I I
0 5 10 15 20 25 30
Number of MUC-7 Documents Trained On
</figure>
<figureCaption confidence="0.932016">
Figure 6
</figureCaption>
<subsectionHeader confidence="0.62576">
Learning curve of coreference resolution accuracy for MUC-7.
</subsectionHeader>
<bodyText confidence="0.9982655">
It should be noted that the accuracy of our coreference resolution engine depends
to a large extent on the performance of the NLP modules that are executed before
the coreference engine. Our current learning-based, HMM named entity recognition
module is trained on 318 documents (a disjoint set from both the MUC-6 and MUC-7
</bodyText>
<page confidence="0.995924">
533
</page>
<note confidence="0.640384">
Computational Linguistics Volume 27, Number 4
</note>
<bodyText confidence="0.998799833333333">
test documents) tagged with named entities, and its score on the MUC-6 named entity
task for the 30 formal test documents is only 88.9%, which is not considered very high
by MUC-6 standards. For example, our named entity recognizer could not identify
the two named entities USAir and Piedmont in the expression USAir and Piedmont but
instead treat them as one single named entity. Our part-of-speech tagger achieves 96%
accuracy, while the accuracy of noun phrase identification is above 90%.
</bodyText>
<sectionHeader confidence="0.933528" genericHeader="method">
4. The Contribution of the Features
</sectionHeader>
<bodyText confidence="0.999302666666667">
One factor that affects the performance of a machine learning approach is the set of
features used. It is interesting to find out how useful each of our 12 features is in the
MUC-6 and MUC-7 coreference tasks. One way to do this is to train and test using just
one feature at a time. Table 3 and Table 4 show the results of the experiment. For both
MUC-6 and MUC-7, the 3 features that give nonzero recall and precision are ALIAS,
STR_MATCH, and APPOSITIVE. The 12 features can be divided into unary and binary
</bodyText>
<tableCaption confidence="0.806509">
Table 3
MUC-6 results of complete and baseline systems to study the contribution of the features.
</tableCaption>
<table confidence="0.999875870967742">
System ID Recall Prec F Remarks
Complete systems
DSO 58.6 67.3 62.6 Our system
DSO_TRG 52.6 67.6 59.2 Our system using RESOLVE&apos;s method
of generating positive and negative
examples
RESOLVE 44.2 50.7 47.2 The RESOLVE coreference system at the
University of Massachusetts
Baseline systems using just one feature
DIST 0.0 0.0 0.0 Only &amp;quot;distance&amp;quot; feature is used
SEMCLASS 0.0 0.0 0.0 Only &amp;quot;semantic class agreement&amp;quot;
NUMBER 0.0 0.0 0.0 Only &amp;quot;number agreement&amp;quot;
GENDER 0.0 0.0 0.0 Only &amp;quot;gender agreement&amp;quot;
PROPER_NAME 0.0 0.0 0.0 Only &amp;quot;both proper names&amp;quot;
ALIAS 24.5 88.7 38.4 Only &amp;quot;alias&amp;quot;
J_PRONOUN 0.0 0.0 0.0 Only &amp;quot;i-pronoun&amp;quot;
DEF_NP 0.0 0.0 0.0 Only &amp;quot;definite noun phrase&amp;quot;
DEM_NP 0.0 0.0 0.0 Only &amp;quot;demonstrative noun phrase&amp;quot;
STRNIATCH 45.7 65.6 53.9 Only &amp;quot;string match&amp;quot;
APPOSITIVE 3.9 57.7 7.3 Only &amp;quot;appositive&amp;quot;
I_PRONOUN 0.0 0.0 0.0 Only &amp;quot;i-pronoun&amp;quot;
Other baseline systems
ALIAS_STR 51.5 66.4 58.0 Only the &amp;quot;alias&amp;quot; and &amp;quot;string match&amp;quot; fea-
tures are used
ALIAS_STR_APPOS 55.2 66.4 60.3 Only the &amp;quot;alias,&amp;quot; &amp;quot;string match,&amp;quot; and
&amp;quot;appositive&amp;quot; features are used
ONE_CHAIN 89.9 31.8 47.0 All markables form one chain
ONE_WRD 55.4 36.6 44.1 Markables corefer if there is at least one
common word
HD_WRD 56.4 50.4 53.2 Markables corefer if their head words are
the same
</table>
<page confidence="0.992316">
534
</page>
<note confidence="0.897105">
Soon, Ng, and Lim Coreference Resolution
</note>
<tableCaption confidence="0.887844">
Table 4
MUC-7 results of complete and baseline systems to study the contribution of the features.
</tableCaption>
<table confidence="0.99355375862069">
System ID Recall Prec F Remarks
Complete systems
DSO 56.1 65.5 60.4 Our system
DSO_TRG 53.3 69.7 60.4 Our system using RESOLVE&apos;s method
of generating positive and negative
examples
Baseline systems using just one feature
DIST 0.0 0.0 0.0 Only &amp;quot;distance&amp;quot; feature is used
SEMCLASS 0.0 0.0 0.0 Only &amp;quot;semantic class agreement&amp;quot;
NUMBER 0.0 0.0 0.0 Only &amp;quot;number agreement&amp;quot;
GENDER 0.0 0.0 0.0 Only &amp;quot;gender agreement&amp;quot;
PROPER_NAME 0.0 0.0 0.0 Only &amp;quot;both proper names&amp;quot;
ALIAS 25.6 81.1 38.9 Only &amp;quot;alias&amp;quot;
J_PRONOUN 0.0 0.0 0.0 Only &amp;quot;j-pronoun&amp;quot;
DEF_NP 0.0 0.0 0.0 Only &amp;quot;definite noun phrase&amp;quot;
DEM_NP 0.0 0.0 0.0 Only &amp;quot;demonstrative noun phrase&amp;quot;
STR_MATCH 43.8 71.4 54.3 Only &amp;quot;string match&amp;quot;
APPOSITIVE 2.4 60.0 4.6 Only &amp;quot;appositive&amp;quot;
I_PRONOUN 0.0 0.0 0.0 Only &amp;quot;i-pronoun&amp;quot;
Other baseline systems
ALIAS_STR 49.4 70.4 58.1 Only the &amp;quot;alias&amp;quot; and &amp;quot;string match&amp;quot; fea-
tures are used
ALIAS_STR_APPOS 51.6 69.9 59.4 Only the &amp;quot;alias,&amp;quot; &amp;quot;string match,&amp;quot; and
,&apos;appositive&amp;quot; features are used
ONE_CHAIN 87.5 30.5 45.2 All markables form one chain
ONE_WRD 55.9 38.7 45.7 Markables corefer if there is at least one
common word
HD_WRD 55.2 55.6 55.4 Markables corefer if their head words are
the same
</table>
<bodyText confidence="0.999959588235294">
features. The unary features are I_PRONOUN, J_PRONOUN, DEF_NP, and DEM_NP,
while the rest are binary in nature. All the unary features score an F-measure of 0. The
binary features with 0 F-measure are DIST, PROPER_NAME, GENDER, SEMCLASS,
and NUMBER.
The ALIAS, APPOSITIVE, and STR_MATCH features give nonzero F-measure.
All these features give rather high precision scores (&gt; 80% for ALIAS, &gt; 65% for
STR_MATCH, and &gt; 57% for APPOSITIVE). Since these features are highly informa-
tive, we were curious to see how much they contribute to our MUC-6 and MUC-7
results of 62.6% and 60.4%, respectively. Systems ALIAS_STR and ALIAS_STR_APPOS
in Table 3 and Table 4 show the results of the experiment. In terms of absolute F-
measure, the difference between using these three features and using all features is
2.3% for MUC-6 and 1% for MUC-7; in other words, the other nine features contribute
just 2.3% and 1% more for each of the MUC years. These nine features will be the
first ones to be considered for pruning away by the C5 algorithm. For example, four
features, namely, SEMCLASS, PROPER_NAME, DEF_NP, and DEM_NP, are not used
in the MUC-6 tree shown in Figure 2. Figure 7 shows the distribution of the test cases
over the five positive leaf nodes of the MUC-6 tree. For example, about 66.3% of all
</bodyText>
<page confidence="0.99289">
535
</page>
<note confidence="0.70774">
Computational Linguistics Volume 27, Number 4
</note>
<equation confidence="0.998518888888889">
STR_MATCH = +: + 944 (66.3%)
STR_MATCH =
:...J_PRONOUN =
:...APPOSITIVE = +: + 111 (7.8%)
STR_MATCH =
:...J_PRONOUN =
:...APPOSITIVE =
:...ALIAS = +: + 163 (11.5%)
STR_MATCH =
:...J_PRONOUN = +:
:...GENDER = 1:
:...I_PRONOUN + 77 (5.4%)
STR_MATCH = + 128 (9.0%)
:...J_PRONOUN = +:
:...GENDER = 1:
:...I_PRONOUN =
:...DIST &lt;= 0:
:...NUMBER =
</equation>
<figureCaption confidence="0.976158">
Figure 7
</figureCaption>
<bodyText confidence="0.870850884615385">
Distribution of test examples from the 30 MUC-6 test documents for positive leaf nodes of the
MUC-6 tree.
the test examples that are classified positive go to the &amp;quot;If STR_MATCH&amp;quot; branch of the
tree.
Other baseline systems that are used are ONE_CHAIN, ONE_WRD, and HD_WRD
(Cardie and Wagstaff 1999). For ONE_CHAIN, all markables formed one chain. In
ONE_WRD, markables corefer if there is at least one common word. In HD_WRD,
markables corefer if their head words are the same. The purpose of ONE-CHAIN is to
determine the maximum recall our system is capable of. The recall level here indirectly
measures how effective the noun phrase identification module is. Both ONE_WRD and
HD_WRD are less stringent variations of STR_MATCH. The performance of ONE_WRD
is the worst. HD_WRD offers better recall compared to STR_MATCH, but poorer pre-
cision. However, its F-measure is comparable to that of STR_MATCH.
The score of the coreference system at the University of Massachusetts (RESOLVE),
which uses C4.5 for coreference resolution, is shown in Table 3. RESOLVE is shown
because among the MUC-6 systems, it is the only machine learningâ€”based system
that we can directly compare to. The other MUC-6 systems were not based on a
learning approach. Also, none of the systems in MUC-7 adopted a learning approach
to coreference resolution (Chinchor 1998).
RESOLVE&apos;s score is not high compared to scores attained by the rest of the MUC-
6 systems. In particular, the system&apos;s recall is relatively low. Our system&apos;s score is
higher than that of RESOLVE, and the difference is statistically significant. The RE-
SOLVE system is described in three papers: McCarthy and Lehnert (1995), Fisher et
al. (1995), and McCarthy (1996). As explained in McCarthy (1996), the reason for this
low recall is that RESOLVE takes only the &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant references&amp;quot;
as input, where the relevant entities and relevant references are restricted to &amp;quot;person&amp;quot;
</bodyText>
<page confidence="0.993447">
536
</page>
<note confidence="0.875381">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.999712047619048">
and &amp;quot;organization.&amp;quot; In addition, because of limitations of the noun phrase detection
module, nested phrases are not extracted and therefore do not take part in coreference.
Nested phrases can include prenominal modifiers, possessive pronouns, and so forth.
Therefore, the number of candidate markables to be used for coreference is small.
On the other hand, the markables extracted by our system include nested noun
phrases, MUC-style named entity types (money, percent, date, etc.), and other types
not defined by MUC. These markables will take part in coreference. About 3,600 top-
level markables are extracted from the 30 MUC-6 test documents by our system. As
detected by our NLP modules, only about 35% of these 3,600 phrases are &amp;quot;person&amp;quot;
and &amp;quot;organization&amp;quot; entities and references. Concentrating on just these types has thus
affected the overall recall of the RESOLVE system.
RESOLVE&apos;s way of generating training examples also differs from our system&apos;s:
instances are created for all possible pairings of &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant ref-
erences,&amp;quot; instead of our system&apos;s method of stopping at the first coreferential noun
phrase when traversing back from the anaphor under consideration. We implemented
RESOLVE&apos;s way of generating training examples, and the results (DSO-TRG) are re-
ported in Table 3 and Table 4. For MUC-7, there is no drop in F-measure; for MUC-6,
the F-measure dropped slightly.
RESOLVE makes use of 39 features, considerably more than our system&apos;s 12 fea-
tures. RESOLVE&apos;s feature set includes the two highly informative features, ALIAS and
STR_MATCH. RESOLVE does not use the APPOSITIVE feature.
</bodyText>
<sectionHeader confidence="0.96082" genericHeader="method">
5. Error Analysis
</sectionHeader>
<bodyText confidence="0.999906714285714">
In order to determine the major classes of errors made by our system, we randomly
chose five test documents from MUC-6 and determined the coreference links that were
either missing (false negatives) or spurious (false positives) in these sample documents.
Missing links result in recall errors; spurious links result in precision errors.
Breakdowns of the number of spurious and missing links are shown in Table 5
and Table 6, respectively. The following two subsections describe the errors in more
detail.
</bodyText>
<subsectionHeader confidence="0.976328">
5.1 Errors Causing Spurious Links
</subsectionHeader>
<bodyText confidence="0.952245">
This section describes the five major types of errors summarized in Table 5 in more
detail.
5.1.1 Prenominal Modifier String Match. This class of errors occurs when some strings
of the prenominal modifiers of two markables match by surface string comparison and
thus, by the C5 decision tree in Figure 2, the markables are treated as coreferring. How-
</bodyText>
<tableCaption confidence="0.378266333333333">
Table 5
The types and frequencies of errors that affect precision.
Types of Errors Causing Spurious Links Frequency %
Prenominal modifier string match 16 42.1%
Strings match but noun phrases refer to 11 28.9%
different entities
Errors in noun phrase identification 4 10.5%
Errors in apposition determination 5 13.2%
Errors in alias determination 2 5.3%
</tableCaption>
<page confidence="0.748645">
537
</page>
<note confidence="0.459205">
Computational Linguistics Volume 27, Number 4
</note>
<tableCaption confidence="0.6698835">
Table 6
The types and frequencies of errors that affect recall.
</tableCaption>
<table confidence="0.926082714285714">
Types of Errors Causing Missing Links Frequency %
Inadequacy of current surface features 38 63.3%
Errors in noun phrase identification 7 â€ž 11.7%
Errors in semantic class determination 7 11.7%
Errors in part-of-speech assignment 5 8.3%
Errors in apposition determination 2 3.3%
Errors in tokenization 1 1.7%
</table>
<bodyText confidence="0.999514285714286">
ever, the entire markable actually does not corefer. The nested noun phrase extraction
module is responsible for obtaining the possible prenominal modifiers from a noun
phrase.
In (3), the noun phrase extraction module mistakenly extracted (vice)1 and (vice)2,
which are not prenominal modifiers. Because of string match, (vice)1 and (vice)2 incor-
rectly corefer. In (4), (undersecretary)2 was correctly extracted as a prenominal modifier,
but incorrectly corefers with (undersecretary)i by string match.
</bodyText>
<listItem confidence="0.99616625">
(3) David J. Bronczek, (vice)1 president and general manager of Federal
Express Canada Ltd., was named senior (vice)2 president, Europe, Africa
and Mediterranean, at this air-express concern.
(4) Tarnoff, a former Carter administration official and president of the
</listItem>
<bodyText confidence="0.56421225">
Council on Foreign Relations, is expected to be named (undersecretary)1
for political affairs.... Former Sen. Tim Wirth is expected to get a newly
created (undersecretary)2 post for global affairs, which would include
refugees, drugs and environmental issues.
</bodyText>
<subsubsectionHeader confidence="0.958686">
5.1.2 Strings Match but Noun Phrases Refer to Different Entities. This error occurs
</subsubsectionHeader>
<bodyText confidence="0.998807">
when the surface strings of two markables match and thus, by the C5 decision tree
in Figure 2, they are treated as coreferring. However, they actually refer to different
entities and should not corefer. In (5), (the committee)i actually refers to the entity the
House Energy and Commerce Committee, and (the committee)2 refers to the Senate Finance
Committee; therefore, they should not corefer. In (6), the two instances of chief executive
officer refer to two different persons, namely, Allan Laufgraben and Milton Petrie, and,
again, should not corefer.
</bodyText>
<listItem confidence="0.930868833333333">
(5) Ms. Washington&apos;s candidacy is being championed by several powerful
lawmakers including her boss, Chairman John Dingell (D., Mich.) of the
House Energy and Commerce Committee. She currently is a counsel to
(the committee)i.... Mr. Bentsen, who headed the Senate Finance
Committee for the past six years, also is expected to nominate Samuel
Sessions, (the committee)2&apos;s chief tax counsel, to one of the top tax jobs
at Treasury.
(6) Directors also approved the election of Allan Laufgraben, 54 years old,
as president and (chief executive officer)i and Peter A. Left, 43, as chief
operating officer. Milton Petrie, 90-year-old chairman, president and
(chief executive officer)2 since the company was founded in 1932, will
continue as chairman.
</listItem>
<page confidence="0.996244">
538
</page>
<note confidence="0.923358">
Soon, Ng, and Lim Coreference Resolution
</note>
<subsubsectionHeader confidence="0.381575">
5.1.3 Errors in Noun Phrase Identification. This class of errors is caused by mistakes
</subsubsectionHeader>
<bodyText confidence="0.986033625">
made by the noun phrase identification module. In (7), May and June are incorrectly
grouped together by the noun phrase identification module as one noun phrase, that
is, May, June. This markable then incorrectly causes the APPOSITIVE feature to be
true, which results in classifying the pair as coreferential. In fact, (the first week of July)2
should not be in apposition to (May, June)i. However, we classified this error as a
noun phrase identification error because it is the first module that causes the error. In
(8), the noun phrase module extracted Metaphor Inc. instead of Metaphor Inc. unit. This
causes (it)2 to refer to Metaphor Inc. instead of Metaphor Inc. unit.
</bodyText>
<listItem confidence="0.9891684">
(7) The women&apos;s apparel specialty retailer said sales at stores open more
than one year, a key barometer of a retail concern&apos;s strength, declined
2.5% in (May, June)i and (the first week of July)2.
(8) ... International Business Machines Corp.&apos;s (Metaphor Inc.)1 unit said
(it)2 will shed 80 employees ...
</listItem>
<subsubsectionHeader confidence="0.886764">
5.1.4 Errors in Apposition Determination. This class of errors occurs when the anaphor
</subsubsectionHeader>
<bodyText confidence="0.99704725">
is incorrectly treated as being in apposition to the antecedent and therefore causes the
noun phrases to corefer. The precision scores obtained when using the APPOSITIVE
feature alone are shown in Table 3 and Table 4, which suggest that the module can be
improved further. Examples where apposition determination is incorrect are shown in
</bodyText>
<listItem confidence="0.9729665">
(9) and (10).
(9) Clinton officials are said to be deciding between recently retired Rep.
</listItem>
<bodyText confidence="0.6259231875">
Matthew McHugh (D., (N.Y.)i) and (environmental activist)2 and
transition official Gus Speth for the director of the Agency for
International Development.
(10) Metaphor, a software subsidiary that IBM purchased in 1991, also named
(Chris Grejtak)2, (43 years old)2, currently a senior vice president,
president and chief executive officer.
5.1.5 Errors in Alias Determination. This class of errors occurs when the anaphor is
incorrectly treated as an alias of the antecedent, thus causing the noun phrase pair to
corefer. In (11), the two phrases (House)i and (the House Energy and Commerce Committee)2
corefer because the ALIAS feature is incorrectly determined to be true.
(11) Consuela Washington, a longtime (House)i staffer and an expert in
securities laws, is a leading candidate to be chairwoman of the Securities
and Exchange Commission in the Clinton administration.... Ms.
Washington&apos;s candidacy is being championed by several powerful
lawmakers including her boss, Chairman John Dingell (D., Mich.) of (the
House Energy and Commerce Committee)2.
</bodyText>
<subsectionHeader confidence="0.997917">
5.2 Errors Causing Missing Links
</subsectionHeader>
<bodyText confidence="0.94353275">
This subsection describes the six major classes of errors summarized in Table 6 in more
detail.
5.2.1 Inadequacy of Current Surface Features. This class of errors is due to the in-
adequacy of the current surface features because they do not have information about
</bodyText>
<page confidence="0.992254">
539
</page>
<note confidence="0.706044">
Computational Linguistics Volume 27, Number 4
</note>
<bodyText confidence="0.99988">
other words (such as the connecting conjunctions, prepositions, or verbs) and other
knowledge sources that may provide important clues for coreference. As a result, the
set of shallow features we used is unable to correctly classify the noun phrases in the
examples below as coreferring.
Example (12) illustrates why resolving (them)2 is difficult. (allies)i, securities ex-
changes, banks, and futures exchanges are all possible antecedents of (them)2, and the
feature set must include more information to be able to pick the correct one. The con-
junction and in (13) and was named in (16) are important cues to determine coreference.
In addition, it may also be possible to capture noun phrases in predicate constructions
like (17), where (Mr. Gleason)i is the subject and (president)2 is the object.
</bodyText>
<listItem confidence="0.9523387">
(12) Ms. Washington and Mr. Dingell have been considered (allies)1 of the
securities exchanges, while banks and futures exchanges have often
fought with (them)2.
(13) Separately, Clinton transition officials said that Frank Newman, 50, (vice
chairman)]. and (chief financial officer)2 of BankAmerica Corp., is
expected to be nominated as assistant Treasury secretary for domestic
finance.
(14) Separately, (Clinton transition officials)i said that Frank Newman, 50,
vice chairman and chief financial officer of BankAmerica Corp., is
expected to be nominated as assistant Treasury secretary for domestic
finance.... As early as today, (the Clinton camp)2 is expected to name
five undersecretaries of state and several assistant secretaries.
(15) (Metro-Goldwyn-Mayer Inc.)]. said it named Larry Gleason president of
world-wide theatrical distribution of (the movie studio)2&apos;s distribution
unit.
(16) ... (general manager)]. of Federal Express Canada Ltd., was named
(senior vice president)2, Europe, Africa and Mediterranean ...
(17) (Mr. Gleason)i, 55 years old, was (president)2 of theatrical exhibition for
Paramount Communications Inc., in charge of the company&apos;s 1,300
movie screens in 12 countries.
</listItem>
<subsubsectionHeader confidence="0.732988">
5.2.2 Errors in Noun Phrase Identification. This class of errors was described in Sec-
</subsubsectionHeader>
<bodyText confidence="0.981665857142857">
tion 5.1.3. The noun phrase identification module may extract noun phrases that do
not match the phrases in the coreference chain, therefore causing missing links and
recall error.
5.2.3 Errors in Semantic Class Determination. These errors are caused by the wrong
assignment of semantic classes to words. For example, (Metaphor)i should be assigned
&amp;quot;organization&amp;quot; but it is assigned &amp;quot;unknown&amp;quot; in (18), and (second-quarter)2 should be
assigned &amp;quot;date&amp;quot; instead of &amp;quot;unknown&amp;quot; in (19). However, correcting these classes will
still not cause the noun phrases in the examples to corefer. This is because the values
of the SEMCLASS feature in the training examples are extremely noisy, a situation
caused largely by our semantic class determination module. In many of the negative
training examples, although the noun phrases are assigned the same semantic classes,
these assignments do not seem to be correct. Some examples are (four-year, NBC), (The
union, Ford Motor Co.), and (base-wage, job-security). A better algorithm for assigning
semantic classes and a more refined semantic class hierarchy are needed.
</bodyText>
<page confidence="0.993993">
540
</page>
<reference confidence="0.959602">
Soon, Ng, and Lim Coreference Resolution
(18) (Metaphor)i, a software subsidiary that IBM purchased in 1991, also
named Chris Grejtak, ... Mr. Grejtak said in an interview that the staff
reductions will affect most areas of (the company)2 related to its early
proprietary software products.
(19) Business briefâ€”Petrie Stores Corp.: Losses for (Fiscal 2nd Period)1, half
seen likely by retailer.... Petrie Stores Corp., Secaucus, N.J., said an
uncertain economy and faltering sales probably will result in a
(second-quarter)2 loss and perhaps a deficit for the first six months of
fiscal 1994.
5.2.4 Errors in Part-of-Speech Assignment. This class of errors is caused by the wrong
assignment of part-of-speech tags to words. In (20), (there)2 is not extracted because
the part-of-speech tag assigned is &amp;quot;RB,&amp;quot; which is an adverb and not a possible noun
phrase.
(20) Jon W. Slangerup, who is 43 and has been director of customer service in
(Canada)j, succeeds Mr. Bronczek as vice president and general manager
(there)2.
5.2.5 Errors in Apposition Determination. This class of errors was described in Sec-
tion 5.1.4.
5.2.6 Errors in Tokenization. This class of errors is due to the incorrect tokenization
of words. In (21), (1-to-2)1 and (15-to-1)2 are not found because the tokenizer breaks
1-to-2 into 1, -, to-2. 15-to-1 is broken up similarly.
</reference>
<bodyText confidence="0.8717146">
(21) Separately, MGM said it completed a previously announced financial
restructuring designed to clean up its balance sheetâ€”removing $900
million in bank debt from MGM&apos;s books and reducing its debt-to-equity
ratio to (1-to-2)i from (15-to-1)2â€”with a view toward a future sale of the
company.
</bodyText>
<subsectionHeader confidence="0.999739">
5.3 Comparing Errors Made by RESOLVE
</subsectionHeader>
<bodyText confidence="0.999649666666667">
McCarthy (1996) has also performed an analysis of errors while conducting an evalua-
tion on the MUC-5 English Joint Venture (EJV) corpus. A large number of the spurious
links are caused by what he terms &amp;quot;feature ambiguity,&amp;quot; which means that feature val-
ues are not computed perfectly. As seen in Table 5, our string match feature accounts
for most of the spurious links. Also, seven of the spurious links are caused by alias
and apposition determination. As with RESOLVE, &amp;quot;feature ambiguity&amp;quot; is the main
source of precision errors.
For RESOLVE, a large number of the missing links are caused by &amp;quot;incomplete
semantic knowledge&amp;quot; (32%) and &amp;quot;unused features&amp;quot; (40.5%). For our system, the errors
due to the inadequacy of surface features and semantic class determination problems
account for about 75% of the missing links. &amp;quot;Unused features&amp;quot; means that some of
the features, or combinations of features, that are needed to classify pairs of phrases
as coreferential are not present in the decision trees (McCarthy 1996). Similarly, the
inadequacy of our system&apos;s surface features means that the current feature set may
not be enough and more information sources should be added.
Because a detailed error analysis of RESOLVE would require not only its MUC-6
response file, but also the output of its various components, we cannot perform the
same error analysis that we did for our system on RESOLVE.
</bodyText>
<page confidence="0.99265">
541
</page>
<note confidence="0.775441">
Computational Linguistics Volume 27, Number 4
</note>
<sectionHeader confidence="0.996957" genericHeader="method">
6. Related Work
</sectionHeader>
<bodyText confidence="0.999984489795918">
There is a long tradition of work on coreference resolution within computational lin-
guistics, but most of it was not subject to empirical evaluation until recently. Among
the papers that have reported quantitative evaluation results, most are not based on
learning from an annotated corpus (Baldwin 1997; Kameyama 1997; Lappin and Leass
1994; Mitkov 1997).
To our knowledge, the research efforts of Aone and Bennett (1995), Ge, Hale, and
Charniak (1998), Kehler (1997), McCarthy and Lehnert (1995), Fisher et al. (1995), and
McCarthy (1996) are the only ones that are based on learning from an annotated corpus.
Ge, Hale, and Charniak (1998) used a statistical model for resolving pronouns, whereas
we used a decision tree learning algorithm and resolved general noun phrases, not
just pronouns. Similarly, Kehler (1997) used maximum entropy modeling to assign a
probability distribution to alternative sets of coreference relationships among noun
phrase entity templates, whereas we used decision tree learning.
The work of Aone and Bennett (1995), McCarthy and Lehnert (1995), Fisher et
al. (1995), and McCarthy (1996) employed decision tree learning. The RESOLVE sys-
tem is presented in McCarthy and Lehnert (1995), Fisher et al. (1995), and McCarthy
(1996). McCarthy and Lehnert (1995) describe how RESOLVE was tested on the MUC-
5 English Joint Ventures (EJV) corpus. It used a total of 8 features, 3 of which were
specific to the EJV domain. For example, the feature JV-CHILD-i determined whether
i referred to a joint venture formed as the result of a tie-up. McCarthy (1996) describes
how the original RESOLVE for MUC-5 EJV was improved to include more features,
8 of which were domain specific, and 30 of which were domain independent. Fisher
et al. (1995) adapted RESOLVE to work in MUC-6. The features used were slightly
changed for this domain. Of the original 30 domain-independent features, 27 were
used. The 8 domain-specific features were completely changed for the MUC-6 task.
For example, JV-CHILD-i was changed to CHILD-i to decide whether i is a &amp;quot;unit&amp;quot; or a
&amp;quot;subsidiary&amp;quot; of a certain parent company. In contrast to RESOLVE, our system makes
use of a smaller set of 12 features and, as in Aone and Bennett&apos;s (1995) system, the
features used are generic and applicable across domains. This makes our coreference
engine a domain-independent module.
Although Aone and Bennett&apos;s (1995) system also made use of decision tree learning
for coreference resolution, they dealt with Japanese texts, and their evaluation focused
only on noun phrases denoting organizations, whereas our evaluation, which dealt
with English texts, encompassed noun phrases of all types, not just those denoting
organizations. In addition, Aone and Bennett evaluated their system on noun phrases
that had been correctly identified, whereas we evaluated our coreference resolution
engine as part of a total system that first has to identify all the candidate noun phrases
and has to deal with the inevitable noisy data when mistakes occur in noun phrase
identification and semantic class determination.
The contribution of our work lies in showing that a learning approach, when
evaluated on common coreference data sets, is able to achieve accuracy competitive
with that of state-of-the-art systems using nonlearning approaches. It is also the first
machine learning-based system to offer performance comparable to that of nonlearning
approaches.
Finally, the work of Cardie and Wagstaff (1999) also falls under the machine learn-
ing approach. However, they used unsupervised learning and their method did not
require any annotated training data. Their clustering method achieved a balanced F-
measure of only 53.6% on MUC-6 test data. This is to be expected: supervised learning
in general outperforms unsupervised learning since a supervised learning algorithm
</bodyText>
<page confidence="0.966202">
542
</page>
<note confidence="0.624859">
Soon, Ng, and Lim Coreference Resolution
</note>
<bodyText confidence="0.99998625">
has access to a richer set of annotated data to learn from. Since our supervised learning
approach requires only a modest number of annotated training documents to achieve
good performance (as can be seen from the learning curves), we argue that the better
accuracy achieved more than justifies the annotation effort incurred.
</bodyText>
<sectionHeader confidence="0.84244" genericHeader="conclusions">
7. Conclusion
</sectionHeader>
<bodyText confidence="0.999879714285714">
In this paper, we presented a learning approach to coreference resolution of noun
phrases in unrestricted text. The approach learns from a small, annotated corpus and
the task includes resolving not just pronouns but general noun phrases. We evalu-
ated our approach on common data sets, namely, the MUC-6 and MUC-7 coreference
corpora. We obtained encouraging results, indicating that on the general noun phrase
coreference task, the learning approach achieves accuracy comparable to that of non-
learning approaches.
</bodyText>
<sectionHeader confidence="0.94578" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.916114785714286">
This paper is an expanded version of a
preliminary paper that appeared in the
Proceedings of the 1999 Joint SIGDAT
Conference on Empirical Methods in Natural
Language Processing and Very Large Corpora.
We would like to thank the MUC organizers
who made available to us the MUC-6 and
MUC-7 data sets, without which this work
would have been impossible. We also thank
Beth Sundheim for helpful comments on an
earlier version of this paper, and Hai Leong
Chieu for his implementation of the
HMM-based named entity
recognition module.
</bodyText>
<sectionHeader confidence="0.839697" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999643507462687">
Aone, Chinatsu and Scott William Bennett.
1995. Evaluating automated and manual
acquisition of anaphora resolution
strategies. In Proceedings of the 33rd Annual
Meeting of the Association for Computational
Linguistics, 122-129.
Baldwin, Breck. 1997. CogNIAC: High
precision coreference with limited
knowledge and linguistic resources. In
Proceedings of the ACL Workshop on
Operational Factors in Practical, Robust
Anaphora Resolution for Unrestricted Texts,
pages 38-45.
Bikel, Daniel M., Richard Schwartz, and
Ralph M. Weischedel. 1999. An algorithm
that learns what&apos;s in a name. Machine
Learning, 34(1-3):211-231, February.
Cardie, Claire and Kiri Wagstaff. 1999.
Noun phrase coreference as clustering. In
Proceedings of the 1999 Joint SIGDAT
Conference on Empirical Methods in Natural
Language Processing and Very Large Corpora,
pages 82-89.
Chinchor, Nancy A. 1998. Overview of
MUC-7/MET-2. In Proceedings of the
Seventh Message Understanding Conference
(MUC-7). http://www.itl.nist.gov/iad/
894.02/related_projects/muc/
proceedings/muc_7_toc.html.
Church, Kenneth. 1988. A stochastic parts
program and noun phrase parser for
unrestricted text. In Proceedings of the
Second Conference on Applied Natural
Language Processing, pages 136-143.
Dietterich, Thomas G. 1998. Approximate
statistical tests for comparing supervised
classification learning algorithms. Neural
Computation, 10(7):1895-1924, October.
Fisher, David, Stephen Soderland, Joseph
McCarthy, Fangfang Feng, and Wendy
Lehnert. 1995. Description of the UMass
system as used for MUC-6. In Proceedings
of the Sixth Message Understanding
Conference (MUC-6), pages 127-140.
Ge, Niyu, John Hale, and Eugene Chamiak.
1998. A statistical approach to anaphora
resolution. In Proceedings of the Sixth
Workshop on Very Large Corpora, pages
161-170.
Kameyama, Megumi. 1997. Recognizing
referential links: An information
extraction perspective. In Proceedings of the
ACL Workshop on Operational Factors in
Practical, Robust Anaphora Resolution for
Unrestricted Texts, pages 46-53.
Kehler, Andrew. 1997. Probabilistic
coreference in information extraction. In
Proceedings of the Second Conference on
Empirical Methods in Natural Language
Processing, pages 163-173.
Lappin, Shalom and Herbert J. Leass. 1994.
An algorithm for pronominal anaphora
resolution. Computational Linguistics,
20(4):535-561, December.
McCarthy, Joseph F. 1996. A Trainable
Approach to Coreference Resolution for
Information Extraction. Ph.D. thesis,
</reference>
<page confidence="0.977564">
543
</page>
<note confidence="0.349248">
Computational Linguistics Volume 27, Number 4
</note>
<reference confidence="0.989292275">
University of Massachusetts Amherst,
Department of Computer Science,
September.
McCarthy, Joseph F. and Wendy Lehnert.
1995. Using decision trees for coreference
resolution. In Proceedings of the Fourteenth
International Joint Conference on Artificial
Intelligence, pages 1050-1055.
McEnery, A., I. Tanaka, and S. Botley. 1997.
Corpus annotation and reference
resolution. In Proceedings of the ACL
Workshop on Operational Factors in Practical,
Robust Anaphora Resolution for Unrestricted
Texts, pages 67-74.
Miller, George A. 1990. WordNet: An
on-line lexical database. International
Journal of Lexicography, 3(4):235-312.
Mitkov, Ruslan. 1997. Factors in anaphora
resolution: They are not the only things
that matter. A case study based on two
different approaches. In Proceedings of the
ACL Workshop on Operational Factors in
Practical, Robust Anaphora Resolution for
Unrestricted Texts, pages 14-21.
MUC-6. 1995. Coreference task definition
(v2.3, 8 Sep 95). In Proceedings of the Sixth
Message Understanding Conference (MUC-6),
pages 335-344.
MUC-7. 1997. Coreference task definition
(v3.0, 13 Jul 97). In Proceedings of the
Seventh Message Understanding Conference
(MUC-7).
Quinlan, John Ross. 1993. C4.5: Programs for
Machine Learning. Morgan Kaufmann, San
Francisco, CA.
Sundheim, Beth M. 1995. Overview of
results of the MUC-6 evaluation. In
Proceedings of the Sixth Message
Understanding Conference (MUC-6), pages
13-31.
</reference>
<page confidence="0.998243">
544
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.807041">
<title confidence="0.9321075">A Machine Learning Approach to Coreference Resolution of Noun Phrases Wee Meng Soon* Hwee Tou Ngt DSO National Laboratories DSO National Laboratories</title>
<author confidence="0.971252">Daniel Chung Yong LimI</author>
<affiliation confidence="0.960575">DSO National Laboratories</affiliation>
<abstract confidence="0.9993359">In this paper, we present a learning approach to coreference resolution of noun phrases in unrestricted text. The approach learns from a small, annotated corpus and the task includes resolving not just a certain type of noun phrase (e.g., pronouns) but rather general noun phrases. It also does not restrict the entity types of the noun phrases; that is, coreference is assigned whether they are of &amp;quot;organization,&amp;quot; &amp;quot;person,&amp;quot; or other types. We evaluate our approach on common data sets (namely, the MUC-6 and MUC-7 coreference corpora) and obtain encouraging results, indicating that on the general noun phrase coreference task, the learning approach holds promise and achieves accuracy comparable to that of nonlearning approaches. Our system is the first learning-based system that offers performance comparable to that of state-of-the-art nonlearning systems on these data sets.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Ng Soon</author>
</authors>
<title>and Lim Coreference Resolution</title>
<marker>Soon, </marker>
<rawString>Soon, Ng, and Lim Coreference Resolution</rawString>
</citation>
<citation valid="false">
<authors>
<author>i</author>
</authors>
<title>a software subsidiary that IBM purchased in 1991, also named Chris Grejtak, ... Mr. Grejtak said in an interview that the staff reductions will affect most areas of (the company)2 related to its early proprietary software products.</title>
<marker>i, </marker>
<rawString>(18) (Metaphor)i, a software subsidiary that IBM purchased in 1991, also named Chris Grejtak, ... Mr. Grejtak said in an interview that the staff reductions will affect most areas of (the company)2 related to its early proprietary software products.</rawString>
</citation>
<citation valid="true">
<title>Business briefâ€”Petrie Stores Corp.: Losses for (Fiscal 2nd Period)1, half seen likely by retailer.... Petrie Stores Corp., Secaucus, N.J., said an uncertain economy and faltering sales probably will result in a (second-quarter)2 loss and perhaps a deficit for the first six months of fiscal</title>
<date></date>
<marker></marker>
<rawString>(19) Business briefâ€”Petrie Stores Corp.: Losses for (Fiscal 2nd Period)1, half seen likely by retailer.... Petrie Stores Corp., Secaucus, N.J., said an uncertain economy and faltering sales probably will result in a (second-quarter)2 loss and perhaps a deficit for the first six months of fiscal 1994.</rawString>
</citation>
<citation valid="false">
<title>5.2.4 Errors in Part-of-Speech Assignment. This class of errors is caused by the wrong assignment of part-of-speech tags to words. In (20), (there)2 is not extracted because the part-of-speech tag assigned is &amp;quot;RB,&amp;quot; which is an adverb and not a possible noun phrase.</title>
<marker></marker>
<rawString>5.2.4 Errors in Part-of-Speech Assignment. This class of errors is caused by the wrong assignment of part-of-speech tags to words. In (20), (there)2 is not extracted because the part-of-speech tag assigned is &amp;quot;RB,&amp;quot; which is an adverb and not a possible noun phrase.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Jon W Slangerup</author>
</authors>
<title>who is 43 and has been director of customer service in (Canada)j, succeeds Mr. Bronczek as vice president and general manager (there)2.</title>
<marker>Slangerup, </marker>
<rawString>(20) Jon W. Slangerup, who is 43 and has been director of customer service in (Canada)j, succeeds Mr. Bronczek as vice president and general manager (there)2.</rawString>
</citation>
<citation valid="false">
<title>5.2.5 Errors in Apposition Determination. This class of errors was described in Section 5.1.4.</title>
<marker></marker>
<rawString>5.2.5 Errors in Apposition Determination. This class of errors was described in Section 5.1.4.</rawString>
</citation>
<citation valid="true">
<title>5.2.6 Errors in Tokenization. This class of errors is due to the incorrect tokenization of words.</title>
<date></date>
<journal>In</journal>
<volume>21</volume>
<marker></marker>
<rawString>5.2.6 Errors in Tokenization. This class of errors is due to the incorrect tokenization of words. In (21), (1-to-2)1 and (15-to-1)2 are not found because the tokenizer breaks 1-to-2 into 1, -, to-2. 15-to-1 is broken up similarly.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chinatsu Aone</author>
<author>Scott William Bennett</author>
</authors>
<title>Evaluating automated and manual acquisition of anaphora resolution strategies.</title>
<date>1995</date>
<booktitle>In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>122--129</pages>
<marker>Aone, Bennett, 1995</marker>
<rawString>Aone, Chinatsu and Scott William Bennett. 1995. Evaluating automated and manual acquisition of anaphora resolution strategies. In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics, 122-129.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Breck Baldwin</author>
</authors>
<title>CogNIAC: High precision coreference with limited knowledge and linguistic resources.</title>
<date>1997</date>
<booktitle>In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts,</booktitle>
<pages>38--45</pages>
<marker>Baldwin, 1997</marker>
<rawString>Baldwin, Breck. 1997. CogNIAC: High precision coreference with limited knowledge and linguistic resources. In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts, pages 38-45.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel M Bikel</author>
<author>Richard Schwartz</author>
<author>Ralph M Weischedel</author>
</authors>
<title>An algorithm that learns what&apos;s in a name.</title>
<date>1999</date>
<booktitle>Machine Learning,</booktitle>
<pages>34--1</pages>
<marker>Bikel, Schwartz, Weischedel, 1999</marker>
<rawString>Bikel, Daniel M., Richard Schwartz, and Ralph M. Weischedel. 1999. An algorithm that learns what&apos;s in a name. Machine Learning, 34(1-3):211-231, February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Cardie</author>
<author>Kiri Wagstaff</author>
</authors>
<title>Noun phrase coreference as clustering.</title>
<date>1999</date>
<booktitle>In Proceedings of the 1999 Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very Large Corpora,</booktitle>
<pages>82--89</pages>
<contexts>
<context position="41379" citStr="Cardie and Wagstaff 1999" startWordPosition="6787" endWordPosition="6790">(66.3%) STR_MATCH = :...J_PRONOUN = :...APPOSITIVE = +: + 111 (7.8%) STR_MATCH = :...J_PRONOUN = :...APPOSITIVE = :...ALIAS = +: + 163 (11.5%) STR_MATCH = :...J_PRONOUN = +: :...GENDER = 1: :...I_PRONOUN + 77 (5.4%) STR_MATCH = + 128 (9.0%) :...J_PRONOUN = +: :...GENDER = 1: :...I_PRONOUN = :...DIST &lt;= 0: :...NUMBER = Figure 7 Distribution of test examples from the 30 MUC-6 test documents for positive leaf nodes of the MUC-6 tree. the test examples that are classified positive go to the &amp;quot;If STR_MATCH&amp;quot; branch of the tree. Other baseline systems that are used are ONE_CHAIN, ONE_WRD, and HD_WRD (Cardie and Wagstaff 1999). For ONE_CHAIN, all markables formed one chain. In ONE_WRD, markables corefer if there is at least one common word. In HD_WRD, markables corefer if their head words are the same. The purpose of ONE-CHAIN is to determine the maximum recall our system is capable of. The recall level here indirectly measures how effective the noun phrase identification module is. Both ONE_WRD and HD_WRD are less stringent variations of STR_MATCH. The performance of ONE_WRD is the worst. HD_WRD offers better recall compared to STR_MATCH, but poorer precision. However, its F-measure is comparable to that of STR_MA</context>
</contexts>
<marker>Cardie, Wagstaff, 1999</marker>
<rawString>Cardie, Claire and Kiri Wagstaff. 1999. Noun phrase coreference as clustering. In Proceedings of the 1999 Joint SIGDAT Conference on Empirical Methods in Natural Language Processing and Very Large Corpora, pages 82-89.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nancy A Chinchor</author>
</authors>
<title>Overview of MUC-7/MET-2.</title>
<date>1998</date>
<booktitle>In Proceedings of the Seventh Message Understanding Conference (MUC-7). http://www.itl.nist.gov/iad/ 894.02/related_projects/muc/</booktitle>
<pages>7</pages>
<contexts>
<context position="1429" citStr="Chinchor 1998" startWordPosition="215" endWordPosition="216">rence task, the learning approach holds promise and achieves accuracy comparable to that of nonlearning approaches. Our system is the first learning-based system that offers performance comparable to that of state-of-the-art nonlearning systems on these data sets. 1. Introduction Coreference resolution is the process of determining whether two expressions in natural language refer to the same entity in the world. It is an important subtask in natural language processing systems. In particular, information extraction (IE) systems like those built in the DARPA Message Understanding Conferences (Chinchor 1998; Sundheim 1995) have revealed that coreference resolution is such a critical component of IE systems that a separate coreference subtask has been defined and evaluated since MUC-6 (MUC-6 1995). In this paper, we focus on the task of determining coreference relations as defined in MUC-6 (MUC-6 1995) and MUC-7 (MUC-7 1997). Specifically, a coreference relation denotes an identity of reference and holds between two textual elements known as markables, which can be definite noun phrases, demonstrative noun phrases, proper names, appositives, subâ€”noun phrases that act as modifiers, pronouns, and s</context>
<context position="42426" citStr="Chinchor 1998" startWordPosition="6956" endWordPosition="6957">he performance of ONE_WRD is the worst. HD_WRD offers better recall compared to STR_MATCH, but poorer precision. However, its F-measure is comparable to that of STR_MATCH. The score of the coreference system at the University of Massachusetts (RESOLVE), which uses C4.5 for coreference resolution, is shown in Table 3. RESOLVE is shown because among the MUC-6 systems, it is the only machine learningâ€”based system that we can directly compare to. The other MUC-6 systems were not based on a learning approach. Also, none of the systems in MUC-7 adopted a learning approach to coreference resolution (Chinchor 1998). RESOLVE&apos;s score is not high compared to scores attained by the rest of the MUC6 systems. In particular, the system&apos;s recall is relatively low. Our system&apos;s score is higher than that of RESOLVE, and the difference is statistically significant. The RESOLVE system is described in three papers: McCarthy and Lehnert (1995), Fisher et al. (1995), and McCarthy (1996). As explained in McCarthy (1996), the reason for this low recall is that RESOLVE takes only the &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant references&amp;quot; as input, where the relevant entities and relevant references are restricted to &amp;quot;person&amp;quot; 536 </context>
</contexts>
<marker>Chinchor, 1998</marker>
<rawString>Chinchor, Nancy A. 1998. Overview of MUC-7/MET-2. In Proceedings of the Seventh Message Understanding Conference (MUC-7). http://www.itl.nist.gov/iad/ 894.02/related_projects/muc/ proceedings/muc_7_toc.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth Church</author>
</authors>
<title>A stochastic parts program and noun phrase parser for unrestricted text.</title>
<date>1988</date>
<booktitle>In Proceedings of the Second Conference on Applied Natural Language Processing,</booktitle>
<pages>136--143</pages>
<contexts>
<context position="4765" citStr="Church 1988" startWordPosition="700" endWordPosition="701">s used, as shown in Figure 1. They consist of tokenization, sentence segmentation, morphological processing, part-of-speech tagging, noun phrase identification, named entity recognition, nested noun phrase extraction, and semantic class determination. As far as coreference resolution is concerned, the goal of these NLP modules is to determine the boundary of the markables, and to provide the necessary information about each markable for subsequent generation of features in the training examples. Our part-of-speech tagger is a standard statistical tagger based on the Hidden Markov Model (HMM) (Church 1988). Similarly, we built a statistical HMM-based noun phrase identification module that determines the noun phrase boundaries solely based on the part-of-speech tags assigned to the words in a sentence. We also implemented a module that recognizes MUC-style named entities, that is, organization, person, location, date, time, money, and percent. Our named entity recognition module uses the HMM approach of Bikel, Schwartz, and Weischedel (1999), which learns from a tagged corpus of named entities. That is, our part-of-speech tagger, noun phrase identification module, and named entity recognition mo</context>
</contexts>
<marker>Church, 1988</marker>
<rawString>Church, Kenneth. 1988. A stochastic parts program and noun phrase parser for unrestricted text. In Proceedings of the Second Conference on Applied Natural Language Processing, pages 136-143.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas G Dietterich</author>
</authors>
<title>Approximate statistical tests for comparing supervised classification learning algorithms.</title>
<date>1998</date>
<journal>Neural Computation,</journal>
<pages>10--7</pages>
<contexts>
<context position="33808" citStr="Dietterich 1998" startWordPosition="5455" endWordPosition="5456">ple one-tailed, paired sample t-test at significance level p = 0.05 to determine whether the difference between our system&apos;s F-measure score and each of the other systems&apos; F-measure score on the test documents is statistically significant.5 We found that at the 95% significance level (p = 0.05), our system performed better than three MUC-6 systems, and as well as the rest of the MUC-6 systems. Using the 4 Note that MUC-b did not use balanced F-measure as the official evaluation measure, but MUC-7 did. 5 Though the McNemar test is shown to have low Type I error compared with the paired t-test (Dietterich 1998), we did not carry out this test in the context of coreference. This is because an example instance defines a coreference link between two noun phrases, and since this link is transitive in nature, it is unclear how the number of links misclassified by System A but not by System B and vice versa can be obtained to execute the McNemar test. 531 Computational Linguistics Volume 27, Number 4 100 90 80 70 60 .E13 c.) 50 0- 40 30 20 10 10 20 30 40 50 60 70 80 90 100 Recall Figure 3 Coreference scores of MUC-6 systems and our system. Figure 4 Coreference scores of MUC-7 systems and our system. same </context>
</contexts>
<marker>Dietterich, 1998</marker>
<rawString>Dietterich, Thomas G. 1998. Approximate statistical tests for comparing supervised classification learning algorithms. Neural Computation, 10(7):1895-1924, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Fisher</author>
<author>Stephen Soderland</author>
<author>Joseph McCarthy</author>
<author>Fangfang Feng</author>
<author>Wendy Lehnert</author>
</authors>
<title>Description of the UMass system as used for MUC-6.</title>
<date>1995</date>
<booktitle>In Proceedings of the Sixth Message Understanding Conference (MUC-6),</booktitle>
<pages>127--140</pages>
<contexts>
<context position="42769" citStr="Fisher et al. (1995)" startWordPosition="7011" endWordPosition="7014">ecause among the MUC-6 systems, it is the only machine learningâ€”based system that we can directly compare to. The other MUC-6 systems were not based on a learning approach. Also, none of the systems in MUC-7 adopted a learning approach to coreference resolution (Chinchor 1998). RESOLVE&apos;s score is not high compared to scores attained by the rest of the MUC6 systems. In particular, the system&apos;s recall is relatively low. Our system&apos;s score is higher than that of RESOLVE, and the difference is statistically significant. The RESOLVE system is described in three papers: McCarthy and Lehnert (1995), Fisher et al. (1995), and McCarthy (1996). As explained in McCarthy (1996), the reason for this low recall is that RESOLVE takes only the &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant references&amp;quot; as input, where the relevant entities and relevant references are restricted to &amp;quot;person&amp;quot; 536 Soon, Ng, and Lim Coreference Resolution and &amp;quot;organization.&amp;quot; In addition, because of limitations of the noun phrase detection module, nested phrases are not extracted and therefore do not take part in coreference. Nested phrases can include prenominal modifiers, possessive pronouns, and so forth. Therefore, the number of candidate markables </context>
</contexts>
<marker>Fisher, Soderland, McCarthy, Feng, Lehnert, 1995</marker>
<rawString>Fisher, David, Stephen Soderland, Joseph McCarthy, Fangfang Feng, and Wendy Lehnert. 1995. Description of the UMass system as used for MUC-6. In Proceedings of the Sixth Message Understanding Conference (MUC-6), pages 127-140.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Niyu Ge</author>
<author>John Hale</author>
<author>Eugene Chamiak</author>
</authors>
<title>A statistical approach to anaphora resolution.</title>
<date>1998</date>
<booktitle>In Proceedings of the Sixth Workshop on Very Large Corpora,</booktitle>
<pages>161--170</pages>
<marker>Ge, Hale, Chamiak, 1998</marker>
<rawString>Ge, Niyu, John Hale, and Eugene Chamiak. 1998. A statistical approach to anaphora resolution. In Proceedings of the Sixth Workshop on Very Large Corpora, pages 161-170.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Megumi Kameyama</author>
</authors>
<title>Recognizing referential links: An information extraction perspective.</title>
<date>1997</date>
<booktitle>In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts,</booktitle>
<pages>46--53</pages>
<marker>Kameyama, 1997</marker>
<rawString>Kameyama, Megumi. 1997. Recognizing referential links: An information extraction perspective. In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts, pages 46-53.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>Probabilistic coreference in information extraction.</title>
<date>1997</date>
<booktitle>In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>163--173</pages>
<marker>Kehler, 1997</marker>
<rawString>Kehler, Andrew. 1997. Probabilistic coreference in information extraction. In Proceedings of the Second Conference on Empirical Methods in Natural Language Processing, pages 163-173.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shalom Lappin</author>
<author>Herbert J Leass</author>
</authors>
<title>An algorithm for pronominal anaphora resolution.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<pages>20--4</pages>
<marker>Lappin, Leass, 1994</marker>
<rawString>Lappin, Shalom and Herbert J. Leass. 1994. An algorithm for pronominal anaphora resolution. Computational Linguistics, 20(4):535-561, December.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joseph F McCarthy</author>
</authors>
<title>A Trainable Approach to Coreference Resolution for Information Extraction.</title>
<date>1996</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Massachusetts Amherst, Department of Computer Science,</institution>
<contexts>
<context position="42790" citStr="McCarthy (1996)" startWordPosition="7016" endWordPosition="7017">tems, it is the only machine learningâ€”based system that we can directly compare to. The other MUC-6 systems were not based on a learning approach. Also, none of the systems in MUC-7 adopted a learning approach to coreference resolution (Chinchor 1998). RESOLVE&apos;s score is not high compared to scores attained by the rest of the MUC6 systems. In particular, the system&apos;s recall is relatively low. Our system&apos;s score is higher than that of RESOLVE, and the difference is statistically significant. The RESOLVE system is described in three papers: McCarthy and Lehnert (1995), Fisher et al. (1995), and McCarthy (1996). As explained in McCarthy (1996), the reason for this low recall is that RESOLVE takes only the &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant references&amp;quot; as input, where the relevant entities and relevant references are restricted to &amp;quot;person&amp;quot; 536 Soon, Ng, and Lim Coreference Resolution and &amp;quot;organization.&amp;quot; In addition, because of limitations of the noun phrase detection module, nested phrases are not extracted and therefore do not take part in coreference. Nested phrases can include prenominal modifiers, possessive pronouns, and so forth. Therefore, the number of candidate markables to be used for corefe</context>
</contexts>
<marker>McCarthy, 1996</marker>
<rawString>McCarthy, Joseph F. 1996. A Trainable Approach to Coreference Resolution for Information Extraction. Ph.D. thesis, University of Massachusetts Amherst, Department of Computer Science, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joseph F McCarthy</author>
<author>Wendy Lehnert</author>
</authors>
<title>Using decision trees for coreference resolution.</title>
<date>1995</date>
<booktitle>In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence,</booktitle>
<pages>1050--1055</pages>
<contexts>
<context position="42747" citStr="McCarthy and Lehnert (1995)" startWordPosition="7007" endWordPosition="7010">n Table 3. RESOLVE is shown because among the MUC-6 systems, it is the only machine learningâ€”based system that we can directly compare to. The other MUC-6 systems were not based on a learning approach. Also, none of the systems in MUC-7 adopted a learning approach to coreference resolution (Chinchor 1998). RESOLVE&apos;s score is not high compared to scores attained by the rest of the MUC6 systems. In particular, the system&apos;s recall is relatively low. Our system&apos;s score is higher than that of RESOLVE, and the difference is statistically significant. The RESOLVE system is described in three papers: McCarthy and Lehnert (1995), Fisher et al. (1995), and McCarthy (1996). As explained in McCarthy (1996), the reason for this low recall is that RESOLVE takes only the &amp;quot;relevant entities&amp;quot; and &amp;quot;relevant references&amp;quot; as input, where the relevant entities and relevant references are restricted to &amp;quot;person&amp;quot; 536 Soon, Ng, and Lim Coreference Resolution and &amp;quot;organization.&amp;quot; In addition, because of limitations of the noun phrase detection module, nested phrases are not extracted and therefore do not take part in coreference. Nested phrases can include prenominal modifiers, possessive pronouns, and so forth. Therefore, the number o</context>
</contexts>
<marker>McCarthy, Lehnert, 1995</marker>
<rawString>McCarthy, Joseph F. and Wendy Lehnert. 1995. Using decision trees for coreference resolution. In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, pages 1050-1055.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A McEnery</author>
<author>I Tanaka</author>
<author>S Botley</author>
</authors>
<title>Corpus annotation and reference resolution.</title>
<date>1997</date>
<booktitle>In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts,</booktitle>
<pages>67--74</pages>
<marker>McEnery, Tanaka, Botley, 1997</marker>
<rawString>McEnery, A., I. Tanaka, and S. Botley. 1997. Corpus annotation and reference resolution. In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts, pages 67-74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George A Miller</author>
</authors>
<title>WordNet: An on-line lexical database.</title>
<date>1990</date>
<journal>International Journal of Lexicography,</journal>
<pages>3--4</pages>
<contexts>
<context position="12895" citStr="Miller 1990" startWordPosition="1997" endWordPosition="1998"> unknown. In our system, we defined the following semantic classes: &amp;quot;female,&amp;quot; &amp;quot;male,&amp;quot; &amp;quot;person,&amp;quot; &amp;quot;organization,&amp;quot; &amp;quot;location,&amp;quot; &amp;quot;date,&amp;quot; &amp;quot;time,&amp;quot; &amp;quot;money,&amp;quot; &amp;quot;percent,&amp;quot; and &amp;quot;object.&amp;quot; These semantic classes 524 Soon, Ng, and Lim Coreference Resolution are arranged in a simple ISA hierarchy. Each of the &amp;quot;female&amp;quot; and &amp;quot;male&amp;quot; semantic classes is a subclass of the semantic class &amp;quot;person,&amp;quot; while each of the semantic classes &amp;quot;organization,&amp;quot; &amp;quot;location,&amp;quot; &amp;quot;date,&amp;quot; &amp;quot;time,&amp;quot; &amp;quot;money,&amp;quot; and &amp;quot;percent&amp;quot; is a subclass of the semantic class &amp;quot;object.&amp;quot; Each of these defined semantic classes is then mapped to a WordNet synset (Miller 1990). For example, &amp;quot;male&amp;quot; is mapped to the second sense of the noun male in WordNet, &amp;quot;location&amp;quot; is mapped to the first sense of the noun location, and so on. The semantic class determination module assumes that the semantic class for every markable extracted is the first sense of the head noun of the markable. Since WordNet orders the senses of a noun by their frequency, this is equivalent to choosing the most frequent sense as the semantic class for each noun. If the selected semantic class of a markable is a subclass of one of our defined semantic classes C, then the semantic class of the markab</context>
</contexts>
<marker>Miller, 1990</marker>
<rawString>Miller, George A. 1990. WordNet: An on-line lexical database. International Journal of Lexicography, 3(4):235-312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ruslan Mitkov</author>
</authors>
<title>Factors in anaphora resolution: They are not the only things that matter. A case study based on two different approaches.</title>
<date>1997</date>
<booktitle>In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts,</booktitle>
<pages>14--21</pages>
<marker>Mitkov, 1997</marker>
<rawString>Mitkov, Ruslan. 1997. Factors in anaphora resolution: They are not the only things that matter. A case study based on two different approaches. In Proceedings of the ACL Workshop on Operational Factors in Practical, Robust Anaphora Resolution for Unrestricted Texts, pages 14-21.</rawString>
</citation>
<citation valid="true">
<authors>
<author>MUC-6</author>
</authors>
<title>Coreference task definition (v2.3, 8 Sep 95).</title>
<date>1995</date>
<booktitle>In Proceedings of the Sixth Message Understanding Conference (MUC-6),</booktitle>
<pages>335--344</pages>
<marker>MUC-6, 1995</marker>
<rawString>MUC-6. 1995. Coreference task definition (v2.3, 8 Sep 95). In Proceedings of the Sixth Message Understanding Conference (MUC-6), pages 335-344.</rawString>
</citation>
<citation valid="true">
<authors>
<author>MUC-7</author>
</authors>
<title>Coreference task definition (v3.0, 13 Jul 97).</title>
<date>1997</date>
<booktitle>In Proceedings of the Seventh Message Understanding Conference (MUC-7).</booktitle>
<marker>MUC-7, 1997</marker>
<rawString>MUC-7. 1997. Coreference task definition (v3.0, 13 Jul 97). In Proceedings of the Seventh Message Understanding Conference (MUC-7).</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Ross Quinlan</author>
</authors>
<title>C4.5: Programs for Machine Learning.</title>
<date>1993</date>
<publisher>Morgan Kaufmann,</publisher>
<location>San Francisco, CA.</location>
<contexts>
<context position="23657" citStr="Quinlan 1993" startWordPosition="3807" endWordPosition="3808">)12, (union)13). Negative examples can also be found similarly between ((union)13, (its unions)22). As another example, neither noun phrase in chain d, (Pay-Cut)di and (wage reductions)d2, matches with any machine-extracted noun phrase boundaries. In this case, no positive or negative example is formed for noun phrases in chain d. 2.4 Building a Classifier The next step is to use a machine learning algorithm to learn a classifier based on the feature vectors generated from the training documents. The learning algorithm used in our coreference engine is C5, which is an updated version of C4.5 (Quinlan 1993). C5 is a commonly used decision tree learning algorithm and thus it may be considered as a baseline method against which other learning algorithms can be compared. 2.5 Generating Coreference Chains for Test Documents Before determining the coreference chains for a test document, all possible markables need to be extracted from the document. Every markable is a possible anaphor, and every markable before the anaphor in document order is a possible antecedent of the anaphor, except when the anaphor is nested. If the anaphor is a child or nested markable, then its possible antecedents must not b</context>
</contexts>
<marker>Quinlan, 1993</marker>
<rawString>Quinlan, John Ross. 1993. C4.5: Programs for Machine Learning. Morgan Kaufmann, San Francisco, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Beth M Sundheim</author>
</authors>
<title>Overview of results of the MUC-6 evaluation.</title>
<date>1995</date>
<booktitle>In Proceedings of the Sixth Message Understanding Conference (MUC-6),</booktitle>
<pages>13--31</pages>
<contexts>
<context position="1445" citStr="Sundheim 1995" startWordPosition="217" endWordPosition="218"> learning approach holds promise and achieves accuracy comparable to that of nonlearning approaches. Our system is the first learning-based system that offers performance comparable to that of state-of-the-art nonlearning systems on these data sets. 1. Introduction Coreference resolution is the process of determining whether two expressions in natural language refer to the same entity in the world. It is an important subtask in natural language processing systems. In particular, information extraction (IE) systems like those built in the DARPA Message Understanding Conferences (Chinchor 1998; Sundheim 1995) have revealed that coreference resolution is such a critical component of IE systems that a separate coreference subtask has been defined and evaluated since MUC-6 (MUC-6 1995). In this paper, we focus on the task of determining coreference relations as defined in MUC-6 (MUC-6 1995) and MUC-7 (MUC-7 1997). Specifically, a coreference relation denotes an identity of reference and holds between two textual elements known as markables, which can be definite noun phrases, demonstrative noun phrases, proper names, appositives, subâ€”noun phrases that act as modifiers, pronouns, and so on. Thus, our </context>
</contexts>
<marker>Sundheim, 1995</marker>
<rawString>Sundheim, Beth M. 1995. Overview of results of the MUC-6 evaluation. In Proceedings of the Sixth Message Understanding Conference (MUC-6), pages 13-31.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>