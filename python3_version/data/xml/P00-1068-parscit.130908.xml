<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.994939">
Diagnostic Processing of Japanese for
Computer-Assisted Second Language Learning
</title>
<author confidence="0.995798">
Jun’ichi Kakegawa, Hisayuki Kanda, Eitaro Fujioka, Makoto Itami, Kohji Itoh
</author>
<affiliation confidence="0.997662">
Department of Applied Electronics,
Science University of Tokyo
</affiliation>
<address confidence="0.966919">
2641 Yamazaki, Noda-shi, Chiba-ken 278-8510, JAPAN
</address>
<email confidence="0.999697">
{kakegawa,kanda,eitaro76,itami,itoh}@itlb.te.noda.sut.ac.jp
</email>
<sectionHeader confidence="0.995671" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999656714285714">
As an application of NLP to
computer-assisted language learn-
ing(CALL) , we propose a diag-
nostic processing of Japanese be-
ing able to detect errors and inap-
propriateness of sentences composed
by the students in the given situ-
ation and the context of the exer-
cise texts. Using LTAG(Lexicalized
Tree Adjoining Grammar) formal-
ism, we have implemented a proto-
type of such a diagnostic parser as a
component of a CALL system being
developed.
</bodyText>
<sectionHeader confidence="0.995725" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999062644067797">
In the recent classroom of second language
learning, communicative approach(H.G. Wid-
dowson, 1977) is promoted in which it mat-
ters for the students to become aware of the
language use, i.e. the functionality of lan-
guage usage and it’s dependence on the sit-
uations and the contexts of communication.
In order to achieve the objective according
to “constructivistic” point of view of learning
(T.M.Duffy et al., 1991), the students are en-
couraged to produce sentences by themselves
in various situations and contexts and guided
to recognize by themselves the erroneous or
inappropriate functions of their misused ex-
pressions.
We have already proposed a Computer-
Assisted Language Learning(CALL) system
(N.Kato et al., 1997) which provides the stu-
dents with sample texts promoting their re-
flection on the errors and inappropriateness,
detected by a diagnostic parser, of the sen-
tences composed by the students filling the
blanks set up in the given contexts and situ-
ations. In this paper we report on prototyp-
ing the diagnostic parser implemented using
LTAG formalism as a component of the sys-
tem.
LTAG(Lexicalized Tree Adjoining Gram-
mar) is a lexicalized grammatical formalism
(XTAG Research Group, 1995). For ease
of diagnosing the erroneous sentences com-
posed by the students, lexicalized type of
grammars seemed most suitable. Comparing
HPSG(Head-driven Phrase Structure Gram-
mar) (C.Pollard et al., 1994) and LTAG,
the well-known two (almost-)lexicalized gram-
mars, LTAG looked more simple and espe-
cially convenient for sentence generation nec-
essary in diagnosis. LTAG systematically as-
sociates an elementary tree structure with a
lexical anchor and the structure is embedded
in the corresponding lexical item. Associated
with each of the external nodes of the embed-
ded tree structure are feature structures such
as inflection, case information, head symbol,
semantic constraints as well as a difference
list for surface expressions. These features
have their origin in the anchored lexical item.
The feature information can, moreover, in-
clude the knowledge of situated language use.
Appearance of the features at the external
nodes of the lexical items greatly facilitates
generation of local phrases which is indispens-
able in diagnostic parsing. These are the rea-
son why we employed LTAG.
Preference of unification to all-procedural
handling excluded the so-called “ dependency
grammar ”(M.Nagao, 1996). Each node is expressed by a predicate for-
malism, in general, as following,
</bodyText>
<sectionHeader confidence="0.704032" genericHeader="introduction">
2 LTAG of Japanese
</sectionHeader>
<subsectionHeader confidence="0.973103">
2.1 The Characteristic of Japanese
</subsectionHeader>
<bodyText confidence="0.99994084">
Japanese phrases are classified in the
first place into two categories: Yougen
phrase(YP) and Taigen phrase(TP). A YP
or TP has a Yougen or a Taigen, respectively,
as it’s head word. Yougen along with Taigen
as categories belong to the category of se-
mantically self-contained (called autonomous)
words. The words, e.g. verbs, adjectives, be-
longing to Yougen have inflections, whereas
the words. e.g. nouns, pronouns, demonstra-
tives, belonging to Taigen have no inflection.
A YP or TP consists of a head word and its
sibling phrases on it’s left semantically modi-
fying the head word. And such a phrase in its
turn can semantically modify an autonomous
word by way of attaching a connective to it’s
right, forming a phrase, or inflecting the head
word of the modifier.
In general, a sentence is constructed by at-
taching to a phrase a few (or void of) func-
tional words expressing the attitude of the lo-
cutor to the proposional part of the phrase
( modality ) and intention of the locution af-
fecting the listener ( illocutionary-act marking
).
</bodyText>
<subsectionHeader confidence="0.996049">
2.2 Elementary Tree
</subsectionHeader>
<bodyText confidence="0.8655055">
Fig.1 shows Elementary Trees of LTAG we
defined for Japanese.
</bodyText>
<figureCaption confidence="0.999133">
Figure 1: Example of Elementary Trees
</figureCaption>
<bodyText confidence="0.9509314">
For example, “ ” is a self-contained
(autonomous) word and its lexical item, com-
prising an initial tree, is expressed by,
Note that tense, aspect, polite expressions,
“Ren-you (te)” are dealt with as inflections
just as in the classes teaching Japanese as Sec-
ond Language. The lexical items are classi-
fied into several categories such as auto, link,
prio, post, compo, according to the embed-
ded tree structures.
</bodyText>
<subsectionHeader confidence="0.905928">
2.3 Tree Operation
</subsectionHeader>
<figureCaption confidence="0.977845333333333">
In LTAG, 2 tree operations are defined(See
Fig. 2). A node of a tree is said to be substi-
tuted by another tree if the root node of the
latter is successfully unified with the node.
A tree is said to be adjoined with another
tree if it is successfully inserted into the lat-
ter by unifying the root node and the foot
node(marked *) of the former, respectively,
with the separated nodes of the latter, all with
a same syntactic category.
Figure 2: Examples of Substitution and Ad-
junction
</figureCaption>
<bodyText confidence="0.995377181818182">
In Japanese, a Yougen requires as ad-
joined modifiers Taigen phrases with connec-
tives(e.g. Fig. 2 (1)) corresponding to the
mandatory “ cases ” ( e.g. Fig.2 (2) ), and it
also require have those corresponding to the
optional “cases”.
The default order of the case phrases
may be changed for the purpose of stress-
ing or avoiding unintended modification. The
change can be dealt with by way of permuta-
tion in unification.
Another type of phrase to modify the
Yougen is YP plus one of the connectives de-
noting cause, reason-why, condition etc.(e.g.
Fig.3 (4)).
A Yougen may be modified by a YP
(Yougen Phrase) with its head Yougen in-
flection in Ren-you form without any connec-
tive(e.g. Fig.3 (3)).
A Taigen is mostly modified by a YP
(Yougen Phrase) with its head Yougen in-
flected in Rentai form with no connective(e.g.
Fig.3 (2)).
For ease and uniformity of processing, es-
pecially in the diagnostic parser, null connec-
tives A-Ren-you and A-Rentai are introduced
when a YP modifies Yougen and Taigen, re-
spectively, by way of inflection(e.g. Fig.3 (3),
(2) ).
The other type of phrase to modify the
Taigen is TP plus connective “ (no)” de-
noting proprietary, kinship or whole-part re-
lationship(e.g. Fig.3 (1)).
</bodyText>
<subsectionHeader confidence="0.9977255">
2.4 Dealing with Situation - Depen-
dent Expression
</subsectionHeader>
<bodyText confidence="0.962625923076923">
By incorporating into the feature structure
an additional item expressing situational con-
straints, the parser has the capability of diag-
nosing usage of situation-dependent Japanese
expressions such as giving and receiving ben-
efits as well as demonstratives. As for demon-
stratives, e.g. “ (kono-hon) ”, “
(sono-hon) ”, “ (ano-hon) ” indi-
cates a book located either in the territory of
the locuter, the listener, or outside the both,
respectively.
In the case of expression for giving and re-
ceiving benefits, for example as shown in Ta-
</bodyText>
<figureCaption confidence="0.998116">
Figure 3: Examples of Tree Structure
</figureCaption>
<bodyText confidence="0.96341405">
ble 1, the empathy relational constraints are
embedded in each of the lexical items for the
underlined word along with the case informa-
tion for “ (ga)”, “ (ni)”
Though the indicated three expressions
have the same propositional function of ex-
pressing giving-benefit whose giver is x and
givee is y, “camera” is placed on the side of
x, y, y with “angles” towards y, x, x respec-
tively. It is seen that the camera angle deter-
mines the requirement to the empathy rela-
tions(S.Kuno, 1989).
Suppose the situation E(X|Z) &lt; E(YIZ) is
given, where X, Y , Z stand for “the nurse”,
“the locutor’s son”, “the locutor”, respec-
tively, for instance, the parser can diagnose
the following.
English :
“ The nurse(:X) reads the book to my son(:Y). ”
: I(:Z) am the locutor.
</bodyText>
<equation confidence="0.533836">
Japanese : incorrect
“ ”
(hobo-san ga watashi no musuko ni hon wo yonde-
</equation>
<tableCaption confidence="0.97597">
Table 1: Situational Constrains in Lexicon
</tableCaption>
<title confidence="0.368797">
Expressions Case Information Empathy constraint
</title>
<equation confidence="0.992212875">
x y ( x ga y ni shite-ageru) x , y E(x|z) &gt; E(y|z)
x y ( x ga y ni shite-kureru ) x , y E(x|z) &lt; E(y|z)
y x ( y ga x ni shite-morau ) y , x E(y|z) &gt; E(x|z)
locutor z : x give benefit to y
ageru . )
Japanese : correct
(watashi no musuko ga hobo-san ni hon wo yonde-
morau .)
</equation>
<subsectionHeader confidence="0.923291">
2.5 Composite Verbs
</subsectionHeader>
<bodyText confidence="0.999434333333333">
The above-mentioned expressions for giving
and receiving, e.g. “ ” yonde-
morau , is an example of “composite verbs”
in Japanese.
Many composite verbs can be produced
with a considerable number of auxiliary verbs
preceded by different main verbs.
Because of the modification of the sense and
the case control due to the auxiliary compo-
nent, as illustrated in the case information
column in Table1, we are forced to generate
the composite tree (See Fig.4), carrying out
modification of the meaning and the case con-
trol, before adjoining of modifiers to the com-
posite verb takes place.
</bodyText>
<figureCaption confidence="0.990451">
Figure 4: Examples of Composite Verb
</figureCaption>
<subsectionHeader confidence="0.840658">
2.6 Modality Words and Illocution-
ary - Act Markers
</subsectionHeader>
<bodyText confidence="0.979022578947368">
In Japanese, “modality words”are func-
tional words expressing the attitude of the lo-
cutor towards the propositional part of the ut-
terance, “illocutionary-act markers” demands
answer from the listener or expresses other in-
tention of the locution affecting the listener.
Some combinations of certain adverbs and
a “modality word” co-occur in the position
interposing that part of the proposition in
which the locutor has concern. The example
shown in Fig.5, “ ”(darou) is a modal-
ity word expressing locutor’s supposition, and
“ ”(osoraku) expresses the extent of
his confidence on the supposition. The lexi-
cal item for the latter includes the demand for
the modality semantics of the locutor’s sup-
position.
English : It will probably rain tomorrow, I’m
sure.
</bodyText>
<figure confidence="0.460074333333333">
Japanese :
(ashita wa , osoraku ame ga huru darou yo
.)
</figure>
<figureCaption confidence="0.7521105">
Figure 5: Modality Word and Illocutionary-
Act Marker
</figureCaption>
<subsectionHeader confidence="0.981318">
2.7 Connective “wa”
</subsectionHeader>
<bodyText confidence="0.999828571428571">
In Japanese, TP plus connective “ ”(wa)
is frequently used. It is said that there are two
kinds of usage of connective “ ” ; the one in-
troduces the theme of the sentence, the other
discriminatorily presents one of the cases of
the head Yougen as shown, respectively, in
the following cases.
</bodyText>
<equation confidence="0.6857452">
“ ”
usage 1
English : Me, I climbed that mountain.
Japanese :
(boku wa ano yama ni nobo-tta.)
usage 2
English : (e.g.) As for me, I’ll have a
dish of eel.
Japanese :
(boku wa unagi da.)
</equation>
<figureCaption confidence="0.999474">
Figure 6: Example of the Usage of “wa”
</figureCaption>
<bodyText confidence="0.999966333333333">
In distinguishing between usage1. and us-
age2., we focus on the head Yougen of YP. If it
has any unfilled-case, and the semantic con-
straint of the Taigen before connective “
” corresponds to that of one of the unfilled-
cases, then our processor regards “ ” as
discriminatory.
Otherwise, “ ” is considered as introduc-
ing the theme of the sentence.
</bodyText>
<subsectionHeader confidence="0.990795">
2.8 Use of a Stack in Parsing
</subsectionHeader>
<bodyText confidence="0.999973794871795">
For implementing a parser for Japanese, a
stack memory can be conveniently employed.
0 In processing the sentence from left to right,
the candidate modifier phrases are kept in
a stack memory until a possible Yougen or
Taigen word appears and inspected if they
can modify the word. The tree-structured
features of the candidate modifier phrases
popped up one by one from the stack are
tried to be unified with those of the word,
and the features of the phrases as far as the
tree adjoining unification succeeds are inte-
grated with the features of the modified word,
to make a Saturated Initial Tree(SIT). The
rest of the phrases of the stack are left there
to be tested on the next Yougen or Taigen
word which will appear later on. Any ordering
of modifiers is syntactically permitted except
when an undesired modification takes place.
b If a connective is found by reading one
word ahead, the thus-far made SIT substi-
tutes the left external node of the tree of
the connective to make a Saturated Auxiliary
Tree(SAT) provided unification succeeds(e.g.
Fig.7). If the read ahead is a modality word,
its yp node is substituted by the yp root of the
SIT, and after interposing modality modifiers
having been processed, the resulting phrase is
considered SIT anew and the procedure goes
to b . If the read ahead is an illocutionary-act
marker or the ending sentence symbol, and
the inflection of SIT is appropriate, parsing
terminates. Otherwise either of the A-Ren-
you or A-Rentai connectives is attached de-
pending on the inflection of the head of the
SIT to make a SAT ( See Fig. 3 and Fig. 7).
In either cases as well as the case with a non-
null connective, the SAT is pushed into the
stack and the procedure recurs to 0.
</bodyText>
<figureCaption confidence="0.996978">
Figure 7: Example of SAT and SIT
</figureCaption>
<sectionHeader confidence="0.985967" genericHeader="method">
3 Generation
</sectionHeader>
<bodyText confidence="0.9930455">
We describe here our algorithm for gener-
ating a sentence when the semantic relation-
</bodyText>
<figureCaption confidence="0.919188">
Figure 8: Example of a Semantic Relationship
and Trees
</figureCaption>
<bodyText confidence="0.998693333333333">
ship, for example as in Fig8, is given. The
generation process progresses as illustrated in
Fig9.
The main stream of our generation algo-
rithm follows.
At first, from the lexical database, an au-
tonomous word is fetched, whose semantic re-
lationship term is unifiable with the root of
the given semantic relationship. Letting the
root and terminal node of the word be the
first and the second arguments, respectively.
generate2 is called
</bodyText>
<listItem confidence="0.9652190625">
• If the first argument can be unified with
the second argument, generation is termi-
nated. Otherwise, the process, carrying
over the second argument, searches for a
prio or link word whose root node can
be unified with the first argument.
• If a prio word is found, letting its right (
foot ) node be the first argument and re-
taining the second argument, generate2
is called.
• If a link word is found, an autonomous
word is searched for whose root node can
be unified with the left ( substitution
) node of the link word. Letting the
word’s root and the terminal node be the
first argument and the second argument,
</listItem>
<bodyText confidence="0.998350222222222">
respectively, generate2 is called. Let-
ting the right ( foot ) node of the link
word be the first argument and retain-
ing the second argument, generate2 is
called.
In the following, searching of the au-
tonomous word and handing their 2 nodes off
to generate2 are dealt with by generate1
predicates.
</bodyText>
<equation confidence="0.818636916666667">
generate1(Node):-
auto(W,Nodejerminal),
generate2(Nodejerminal).
generate2(Node1,Node2):-
unify(Node1,Node2).
generate2(Rootjerminal):-
prio(W,Root,Right),
generate2(Rightjerminal).
generate2(Rootjerminal):-
link(W,Root,Left,Right),
generate1(Left),
generate2(Rightjerminal).
</equation>
<bodyText confidence="0.9737261">
In the case of generation including modality
words, illocutionary-act markers or composite
verbs, the algorithm needs a little more com-
plicated procedures.
4 Case and Semantic Pro-
cessing in Parsing and
Generation
In parsing and generation, case and seman-
tic processing occurs by unification without
any procedural programming.
The initial tree structure of the lexical item
of an autonomous word consists of a root node
and a terminal node.
Especially in the YP initial tree, the root
node has a filled used-case slot and a variable
unused-case slot as well as a variable semantic
slot whose head part is filled. The terminal
node has the null used-case slot and the filled
unused-case slot as well as the semantic slot
consisting only of the head predicate.
</bodyText>
<figureCaption confidence="0.99923">
Figure 9: Example of Generation
</figureCaption>
<bodyText confidence="0.997994666666667">
In parsing, following the process as illus-
trated in Fig. 9 bottom up, when the foot
YP node of a YP SAT ( e.g.
) is unified with the terminal node of a
Yougen autonomous word ( e.g. ) , the
case data, if any, ( e.g. [Y,[ (Y)],
]) corresponding to the SAT is moved from
the unused-case slot to the used-case slot in
the SAT root node. The semantic data from
the SAT is integrated with that of the word
and transferred to the SAT root. The foot
YP node of another YP SAT if any, ( e.g.
) is unified with the said root node the
corresponding case data, if any, ( e.g. [Z,[
(Z)], ]) is further moved from the
unused-case slot to the used-case slot.
The semantic data from the new SAT is
joined with that in the previous SAT root in
the root of the new SAT.
Likewise proceeding, finally, by unifying the
concatenated SAT with the root of the origi-
nal autonomous word ( e.g. ), there re-
mains in the unused case slot those case datas
with no corresponding SAT which may be ex-
plained by omitted SATs or the slash case
whose entity will be found in the Taigen word
to be modified by the thus-constructed mod-
ifying YP.
The whole semantic data from the SATs is
integrated in the root node of the original au-
tonomous word.
The process of adjoining TP SATs ( e.g.
) to modify a Taigen au-
tonomous word ( e.g. ) is similar to that
for YP SATs to a Yougen word, except that
no case data processing occurs.
In generation, following the process as il-
lustrated in Fig. 9 top-down, when the whole
given semantic relationship is unified into the
semantic slot of a Yougen autonomous word
( e.g. ), and if e.g. a link
word ( e.g. ) is found with its
root unifiable with the root of the Yougen
initial tree, the semantic expression is di-
vided into two parts thanks to the case
data ( e.g. [Z,[ (Z)], ] ), the one
part ( e.g. [ ( ,Z, , )]) is trans-
ferred to the right node, and the other part
</bodyText>
<equation confidence="0.542988">
( e.g. [ (X,Z,Y),[ (Y),[
</equation>
<bodyText confidence="0.973505172413793">
(U,Y), ( ,U)]]] ) transferred to
the left ( foot ) node. From the case data
of the used-case slot of the original yougen (
e.g. ), the case data corresponding
to the link word ( e.g. ) is moved from
the used-case slot to the unused-case slot in
the left ( foot ) node.
That part of semantics transferred to the
right node is processed to find the correspond-
ing surface expression ( e.g. ) by con-
structing an SIT. The other part of seman-
tics sent to the left ( foot ) node along with
the remaining used-case slot ( e.g. [[Y,[
(Y)], ]] ) are made use of for finding a
link word ( e.g. ) whose root node is
unifiable with the said left ( foot ) node.
The semantics sent to the new link root
node is divided into two parts; the one part (
e.g. [ (Y),[ (U,Y), ( ,U)]])
sent to the right node to form SIT and con-
struct the corresponding surface expression (
e.g. ), the other part (
e.g. [ (X,Z,Y)]) sent to the left ( foot
) node.
Likewise proceeding, when all the used-case
data is transferred into the unused-case slot
in the foot node, it may be unified with the
terminal node of the original yougen ( e.g.
) , terminating the generation.
</bodyText>
<sectionHeader confidence="0.8195995" genericHeader="method">
5 Mechanism of Semantic
Diagnostic Processing
</sectionHeader>
<subsectionHeader confidence="0.99683">
5.1 Postulation
</subsectionHeader>
<bodyText confidence="0.999799">
In our CALL system, the students are asked
to fill in the blanks for composition in the
given situation and context, using words from
a given list. Therefore no morphological anal-
ysis is needed. In diagnosing the students’
sentence, we assume that the following data
is available for constraining processing.
</bodyText>
<listItem confidence="0.742535428571429">
• Semantic elements and their relation-
ships, which should be expressed by the
sentence with which the students are
asked to fill the blanks.
• The list of words, to be used in the com-
position, corresponding to the semantic
elements.
</listItem>
<bodyText confidence="0.98826">
Fig.10 is an example of relationships of se-
mantic elements represented by a tree struc-
ture. Modifying elements are placed as the
children of the parent, the modified elements.
The list of the words to be used for expressing
an element is linked to the element.
Figure 10: Example of relationships of seman-
tic elements
</bodyText>
<subsectionHeader confidence="0.999276">
5.2 Principle of Semantic Diagnosis
</subsectionHeader>
<bodyText confidence="0.999990605633803">
After an SIT has been constructed, the di-
agnostic parser consults the lexicon with the
succeeding word. If it is a connective, the
parser tries substitution operation with SIT
and, if successful, appends it to the SIT to
form the temporary SAT. In case the parser
fails to append the connective to the SIT, only
the surface expression of the connective along
with the SIT is recorded in the provisional
SAT. Suppose the succeeding word was not
a connective. If it was a Taigen or Yougen
and the SIT is yp and its inflections is Rentai
or Ren-you, respectively, then A-Rentai or A-
Ren-you is appended to the SIT to form an
SAT, even though the inflection might be in-
correct. If the inflection of the SIT is incon-
sistent with the succeeding word or the SIT is
tp, as no reasonable interpretation is possible,
“Pending Connective” p is appended to
the SIT to make an SAT. In all of the above-
mentioned cases, the obtained SAT is pushed
into the stack. When the parser encounters
a Yougen word[O] or a Taigen word, it pops
up one SAT after another from the stack and
examines, locally generating surface expres-
sions, if it conforms with one of the semantic
children to the parent corresponding to the
target Yougen/Taigen word. If it does, the
parser adjoins the SAT to the word, after, if
necessary, having corrected wrong/missing
connective or wrong inflection of the SAT,
thus making an SIT, including error correc-
tion messages if any. If the popped SAT does
not conform with any of the semantic chil-
dren, it is pushed into a temporary stack,
recording the SAT as a false modifier if SAT
can be falsely adjoined to the Yougen/Taigen
word. In case of SAT accompanying p, the
parser, consulting the semantic relationship
tree data, generating a related phrase, either
replaces p with a suitable missing connec-
tive and/or corrects the wrong inflection if
necessary. When an SAT is popped up which
conforms with one of the semantic children,
the SATs held in temporary stack at that in-
stance, if any, should have been obstacles
for the popped up SAT to modify the target
word. And they are marked “Y”. After all the
SATs in the main stack have been examined,
the SATs recorded in the temporary stack are
returned into the main stack. And then the
SAT constructed as explained in the above is
pushed into the main stack. If, later on, the
SATs marked “Y” are found to modify a tar-
get word, conforming to the semantic relation-
ship, they are commented as causing modifi-
cation crossover. Finally, if the semantic
relationship requires modality expression(s)
and/or illocutionary-act marker(s), the thus-
far-made Yougen SIT is (recursively if neces-
sary) substituted into the yp node of the ex-
pression(s) and, at the same time, correspond-
ing modifiers of the expression(s) are looked
for in the main stack to be popped making an
SIT.
If at [0], the found Yougen word is a part
of a composite verb the semantic relationship
requires, the rest is looked for, supplemented
if lacking, the case information is modified if
necessary, and the same procedures follow as
described after [0].
</bodyText>
<sectionHeader confidence="0.985578" genericHeader="method">
6 Example of Diagnosis
</sectionHeader>
<bodyText confidence="0.99972625">
For example, supposing the student had in-
put the sentence shown in Fig.11, the parser
could detect the errors by using the seman-
tic relationship aforementioned in Fig.10 and
the relation of the degrees of empathy in the
given situation.
The detected errors are listed in the follow-
ing.
</bodyText>
<figureCaption confidence="0.98611">
Figure 11: Example of Result of Diagnosis
</figureCaption>
<bodyText confidence="0.941433208333333">
false modification :
Inappropriate placing “ ”(watashi
no), causing the phrase to modify “
”(hobo-san).
missing connective :
Missing connective “ ”(ga) which “
”(hobo-san) must have for the
phrase to be adjoined to “
”(yo-nde kureru).
obstacle for modification :
“ ” (hobo-san) is in the place of
obstacle for “ ”(watashi no) to mod-
ify “ ”(musuko).
wrong inflection :
”(yo-mi) has to be replaced by “
”(yo-nde) for the verb to form a
composite verb together with auxiliary
verb “ ”(kureru) expressing giv-
ing benefit.
wrong connective :
Wrong connective “ ”(de) has to be
replaced by “ ”(wo) which “ ”(hon)
must have for the phrase to be adjoined
to “ ”(yo-nde kureru).
</bodyText>
<sectionHeader confidence="0.396673" genericHeader="method">
modification crossover :
</sectionHeader>
<bodyText confidence="0.862036666666667">
The sentence
has a modification crossover between “
”(watashi no musuko) and “
”(hobo-san ga
yo-nde kureru).
“
</bodyText>
<sectionHeader confidence="0.594398" genericHeader="evaluation">
Acknowledgment
</sectionHeader>
<bodyText confidence="0.649238">
inappropriate situational expression :
Use of “ ”(ageru) in the given sit-
uation designates empathy relation
</bodyText>
<equation confidence="0.417385">
E(nurse|locutor)
&gt; E(the locutor&apos;s sonllocutor)
</equation>
<bodyText confidence="0.977157">
which contradict with the given empa-
thy relation. It requires less number
of corrections for “ ” to be re-
placed by “ ”(kureru) for conform-
ing with the relation and retaining “
”(musuko ni) than to be replaced by “
”(morau).
</bodyText>
<sectionHeader confidence="0.999238" genericHeader="conclusions">
7 Conclusions
</sectionHeader>
<bodyText confidence="0.999965">
We proposed a diagnostic processing of
Japanese and described its procedures in de-
tail. The parser makes use of LTAG formalism
introducing several additional data structure
such as SIT, SAT, null/pending connectives.
The diagnosis we reported here is local in
principle. Referring to the given relationship
of semantic elements, the error is detected
and corrected locally. The correction mes-
sages are generated and recorded locally in
SITs. The undesired modifications in the stu-
dent sentence, however, can be detected and
commented on. Our CALL system, based
on the detected errors and inappropriateness,
provides the students with sample texts which
will enable the students to correct their sen-
tence by themselves.
The tasks to be achieved are:
</bodyText>
<listItem confidence="0.682416363636364">
1. to establish ontology of semantic rela-
tionship description,
2. efficient methodology for preparing the
lexical items comprising semantic con-
straints,
3. to communicate semantic contexts and
situations to the students through assist-
ing reading the texts by way of bidirec-
tionally linking the text words with an
electronic dictionary,
4. to deal with anaphora.
</listItem>
<bodyText confidence="0.999944">
The authors are grateful to Prof. Jun-ichi
Tsujii, University of Tokyo, for discussing and
providing information on LTAG as well as the
status quo of natural language processing.
The work reported in this paper was par-
tially supported by the Grant-in-Aid for Sci-
entific Research 09680303, Ministry of Educa-
tion.
</bodyText>
<sectionHeader confidence="0.998219" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999400705882353">
The XTAG Research Group ( 1995 ) : “ A Lexi-
calized Tree Adjoining Grammar for English
”, University of Pennsylvania, IRCS Report
95-03, March 1995.
Owen Rambow and Aravind K. Joshi ( 1994 )
: “ A Processing Model for Free Word Or-
der Languages ”, In Perspectives on Sen-
tence Processing, C.Clifton, Jr.,L.Frazier and
K.Rayner, editors. Lawrence Erlbaum Asso-
ciates.
Carl Pollard, Ivan A. Sag ( 1994 ) : “ Head-
Driven Phrase Structure Grammar ”, The
University of Chicago Press.
M.Nagao ( 1996 ) : “ Natural Language Process-
ing ”,Iwanami-Shoten.
V. M. Holland, J. D. Kaplan, M. R. Sams ( 1995
): “ Intelligent Language Tutors – Theory
Shaping Technology – ”, LEA,pp.183-200 .
T. M. Duffy, J. Lowyck, D. H. Jonassen ( 1991
) : “ Designing Environment for Construc-
tive Learning ”, NATO ASI Senes Vol.F105,
Springer-Verlag.
H. G. Widdowson ( 1977 ) : “ Teaching Lan-
guage as Communication ”, Oxford Univer-
sity Press.
Susumu Kuno ( 1989 ) : “Danwa - no - Bunpou(
Grammar of Discours )”, Daisyukan-Syoten.
Nobutaka Kato, Yi Liu, Tomonori Manome,
Hisayuki Kanda, Makoto Itami, Kohji Itoh
( 1997 ) : “ Use of Situation-Functional In-
dices for Diagnosis and Dialogue Database
Retrieval in a Learning Environment for
Japanese as Second Language ”, Proceedings
of AIED ’97, pp.247-254.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.906217">
<title confidence="0.9987005">Diagnostic Processing of Japanese for Computer-Assisted Second Language Learning</title>
<author confidence="0.993736">Jun’ichi Kakegawa</author>
<author confidence="0.993736">Hisayuki Kanda</author>
<author confidence="0.993736">Eitaro Fujioka</author>
<author confidence="0.993736">Makoto Itami</author>
<author confidence="0.993736">Kohji Itoh</author>
<affiliation confidence="0.9997675">Department of Applied Electronics, Science University of Tokyo</affiliation>
<address confidence="0.999035">2641 Yamazaki, Noda-shi, Chiba-ken 278-8510, JAPAN</address>
<abstract confidence="0.994339866666667">As an application of NLP to computer-assisted language learning(CALL) , we propose a diagnostic processing of Japanese being able to detect errors and inappropriateness of sentences composed by the students in the given situation and the context of the exercise texts. Using LTAG(Lexicalized Tree Adjoining Grammar) formalism, we have implemented a prototype of such a diagnostic parser as a component of a CALL system being developed.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>A Lexicalized Tree Adjoining Grammar for English ”,</title>
<date>1995</date>
<booktitle>The XTAG Research Group (</booktitle>
<tech>Report 95-03,</tech>
<institution>University of Pennsylvania, IRCS</institution>
<marker>1995</marker>
<rawString>The XTAG Research Group ( 1995 ) : “ A Lexicalized Tree Adjoining Grammar for English ”, University of Pennsylvania, IRCS Report 95-03, March 1995.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Owen Rambow</author>
<author>K Aravind</author>
</authors>
<title>Erlbaum Associates.</title>
<booktitle>Joshi ( 1994 ) : “ A Processing Model for Free Word Order Languages ”, In Perspectives on Sentence Processing, C.Clifton, Jr.,L.Frazier</booktitle>
<editor>and K.Rayner, editors. Lawrence</editor>
<marker>Rambow, Aravind, </marker>
<rawString>Owen Rambow and Aravind K. Joshi ( 1994 ) : “ A Processing Model for Free Word Order Languages ”, In Perspectives on Sentence Processing, C.Clifton, Jr.,L.Frazier and K.Rayner, editors. Lawrence Erlbaum Associates.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carl Pollard</author>
<author>A Ivan</author>
</authors>
<title>Sag (</title>
<date>1994</date>
<publisher>The University of Chicago Press.</publisher>
<marker>Pollard, Ivan, 1994</marker>
<rawString>Carl Pollard, Ivan A. Sag ( 1994 ) : “ HeadDriven Phrase Structure Grammar ”, The University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Nagao</author>
</authors>
<date>1996</date>
<journal>Natural Language Processing ”,Iwanami-Shoten.</journal>
<contexts>
<context position="3193" citStr="Nagao, 1996" startWordPosition="478" endWordPosition="479">ture structures such as inflection, case information, head symbol, semantic constraints as well as a difference list for surface expressions. These features have their origin in the anchored lexical item. The feature information can, moreover, include the knowledge of situated language use. Appearance of the features at the external nodes of the lexical items greatly facilitates generation of local phrases which is indispensable in diagnostic parsing. These are the reason why we employed LTAG. Preference of unification to all-procedural handling excluded the so-called “ dependency grammar ”(M.Nagao, 1996). Each node is expressed by a predicate formalism, in general, as following, 2 LTAG of Japanese 2.1 The Characteristic of Japanese Japanese phrases are classified in the first place into two categories: Yougen phrase(YP) and Taigen phrase(TP). A YP or TP has a Yougen or a Taigen, respectively, as it’s head word. Yougen along with Taigen as categories belong to the category of semantically self-contained (called autonomous) words. The words, e.g. verbs, adjectives, belonging to Yougen have inflections, whereas the words. e.g. nouns, pronouns, demonstratives, belonging to Taigen have no inflecti</context>
</contexts>
<marker>Nagao, 1996</marker>
<rawString>M.Nagao ( 1996 ) : “ Natural Language Processing ”,Iwanami-Shoten.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V M Holland</author>
<author>J D Kaplan</author>
<author>M R</author>
</authors>
<title>Sams (</title>
<date>1995</date>
<booktitle>Intelligent Language Tutors – Theory Shaping Technology – ”,</booktitle>
<pages>183--200</pages>
<marker>Holland, Kaplan, R, 1995</marker>
<rawString>V. M. Holland, J. D. Kaplan, M. R. Sams ( 1995 ): “ Intelligent Language Tutors – Theory Shaping Technology – ”, LEA,pp.183-200 .</rawString>
</citation>
<citation valid="true">
<authors>
<author>T M Duffy</author>
<author>J Lowyck</author>
<author>D H Jonassen</author>
</authors>
<title>Designing Environment for Constructive Learning ”,</title>
<date>1991</date>
<booktitle>NATO ASI Senes Vol.F105,</booktitle>
<publisher>Springer-Verlag.</publisher>
<contexts>
<context position="1205" citStr="Duffy et al., 1991" startWordPosition="174" endWordPosition="177">of the exercise texts. Using LTAG(Lexicalized Tree Adjoining Grammar) formalism, we have implemented a prototype of such a diagnostic parser as a component of a CALL system being developed. 1 Introduction In the recent classroom of second language learning, communicative approach(H.G. Widdowson, 1977) is promoted in which it matters for the students to become aware of the language use, i.e. the functionality of language usage and it’s dependence on the situations and the contexts of communication. In order to achieve the objective according to “constructivistic” point of view of learning (T.M.Duffy et al., 1991), the students are encouraged to produce sentences by themselves in various situations and contexts and guided to recognize by themselves the erroneous or inappropriate functions of their misused expressions. We have already proposed a ComputerAssisted Language Learning(CALL) system (N.Kato et al., 1997) which provides the students with sample texts promoting their reflection on the errors and inappropriateness, detected by a diagnostic parser, of the sentences composed by the students filling the blanks set up in the given contexts and situations. In this paper we report on prototyping the di</context>
</contexts>
<marker>Duffy, Lowyck, Jonassen, 1991</marker>
<rawString>T. M. Duffy, J. Lowyck, D. H. Jonassen ( 1991 ) : “ Designing Environment for Constructive Learning ”, NATO ASI Senes Vol.F105, Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H G Widdowson</author>
</authors>
<title>Teaching Language as Communication ”,</title>
<date>1977</date>
<publisher>University Press.</publisher>
<location>Oxford</location>
<contexts>
<context position="888" citStr="Widdowson, 1977" startWordPosition="121" endWordPosition="123">kakegawa,kanda,eitaro76,itami,itoh}@itlb.te.noda.sut.ac.jp Abstract As an application of NLP to computer-assisted language learning(CALL) , we propose a diagnostic processing of Japanese being able to detect errors and inappropriateness of sentences composed by the students in the given situation and the context of the exercise texts. Using LTAG(Lexicalized Tree Adjoining Grammar) formalism, we have implemented a prototype of such a diagnostic parser as a component of a CALL system being developed. 1 Introduction In the recent classroom of second language learning, communicative approach(H.G. Widdowson, 1977) is promoted in which it matters for the students to become aware of the language use, i.e. the functionality of language usage and it’s dependence on the situations and the contexts of communication. In order to achieve the objective according to “constructivistic” point of view of learning (T.M.Duffy et al., 1991), the students are encouraged to produce sentences by themselves in various situations and contexts and guided to recognize by themselves the erroneous or inappropriate functions of their misused expressions. We have already proposed a ComputerAssisted Language Learning(CALL) system</context>
</contexts>
<marker>Widdowson, 1977</marker>
<rawString>H. G. Widdowson ( 1977 ) : “ Teaching Language as Communication ”, Oxford University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susumu Kuno</author>
</authors>
<title>Danwa - no -</title>
<date>1989</date>
<journal>Bunpou( Grammar of Discours )”, Daisyukan-Syoten.</journal>
<contexts>
<context position="7708" citStr="Kuno, 1989" startWordPosition="1251" endWordPosition="1253">ly. In the case of expression for giving and receiving benefits, for example as shown in TaFigure 3: Examples of Tree Structure ble 1, the empathy relational constraints are embedded in each of the lexical items for the underlined word along with the case information for “ (ga)”, “ (ni)” Though the indicated three expressions have the same propositional function of expressing giving-benefit whose giver is x and givee is y, “camera” is placed on the side of x, y, y with “angles” towards y, x, x respectively. It is seen that the camera angle determines the requirement to the empathy relations(S.Kuno, 1989). Suppose the situation E(X|Z) &lt; E(YIZ) is given, where X, Y , Z stand for “the nurse”, “the locutor’s son”, “the locutor”, respectively, for instance, the parser can diagnose the following. English : “ The nurse(:X) reads the book to my son(:Y). ” : I(:Z) am the locutor. Japanese : incorrect “ ” (hobo-san ga watashi no musuko ni hon wo yondeTable 1: Situational Constrains in Lexicon Expressions Case Information Empathy constraint x y ( x ga y ni shite-ageru) x , y E(x|z) &gt; E(y|z) x y ( x ga y ni shite-kureru ) x , y E(x|z) &lt; E(y|z) y x ( y ga x ni shite-morau ) y , x E(y|z) &gt; E(x|z) locutor z</context>
</contexts>
<marker>Kuno, 1989</marker>
<rawString>Susumu Kuno ( 1989 ) : “Danwa - no - Bunpou( Grammar of Discours )”, Daisyukan-Syoten.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nobutaka Kato</author>
<author>Yi Liu</author>
</authors>
<title>Tomonori Manome, Hisayuki Kanda, Makoto Itami, Kohji Itoh (</title>
<date>1997</date>
<journal>Proceedings of AIED</journal>
<volume>97</volume>
<pages>247--254</pages>
<marker>Kato, Liu, 1997</marker>
<rawString>Nobutaka Kato, Yi Liu, Tomonori Manome, Hisayuki Kanda, Makoto Itami, Kohji Itoh ( 1997 ) : “ Use of Situation-Functional Indices for Diagnosis and Dialogue Database Retrieval in a Learning Environment for Japanese as Second Language ”, Proceedings of AIED ’97, pp.247-254.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>