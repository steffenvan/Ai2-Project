<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.009511">
<title confidence="0.986215">
K-QARD: A Practical Korean Question Answering Framework for
Restricted Domain
</title>
<author confidence="0.761356">
Young-In Song, HooJung Chung, Jae-Won Lee
Kyoung-Soo Han, JooYoung Lee, Computing Lab.
Hae-Chang Rim Samsung Advanced Institute of Technology
</author>
<affiliation confidence="0.9985105">
Dept. of Computer Science &amp; Engineering Nongseo-ri, Giheung-eup,
Korea University Yongin-si, Gyeonggi-do 449-712, Korea
</affiliation>
<address confidence="0.879718">
Seongbuk-gu, Seoul 136-701, Korea jwonlee@samsung.com
{song, hjchung, kshan, jylee
</address>
<email confidence="0.99388">
rim}@nlp.korea.ac.kr
</email>
<sectionHeader confidence="0.99376" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999665285714286">
We present a Korean question answer-
ing framework for restricted domains,
called K-QARD. K-QARD is developed to
achieve domain portability and robustness,
and the framework is successfully applied
to build question answering systems for
several domains.
</bodyText>
<sectionHeader confidence="0.998796" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999222333333333">
K-QARD is a framework for implementing a fully
automated question answering system including
the Web information extraction (IE). The goal of
the framework is to provide a practical environ-
ment for the restricted domain question answering
(QA) system with the following requirements:
</bodyText>
<listItem confidence="0.99981475">
• Domain portability: Domain adaptation of
QA systems based on the framework should
be possible with minimum human efforts.
• Robustness: The framework has to provide
</listItem>
<bodyText confidence="0.955462375">
methodologies to ensure robust performance
for various expressions of a question.
For the domain portability, K-QARD is de-
signed as a domain-independent architecture and
it keeps all domain-dependent elements in exter-
nal resources. In addition, the framework tries to
employ various techniques for reducing the human
effort, such as simplifying rules based on linguis-
tic information and machine learning approaches.
Our effort for the robustness is focused the
question analysis. Instead of using a technique
for deep understanding of the question, the ques-
tion analysis component of K-QARD tries to ex-
tract only essential information for answering us-
ing the information extraction technique with lin-
guistic information. Such approach is helpful for
</bodyText>
<figureCaption confidence="0.999838">
Figure 1: Architecture of K-QARD
</figureCaption>
<bodyText confidence="0.9999439">
not only the robustness but also the domain porta-
bility because it generally requires smaller size of
hand-crafted rules than a complex semantic gram-
mar.
K-QARD uses the structural information auto-
matically extracted from Web pages which include
domain-speciÞc information for question answer-
ing. It has the disavantage that the coverage of QA
system is limited, but it can simplify the question
answering process with robust performance.
</bodyText>
<subsectionHeader confidence="0.768294">
2 Architecture of K-QARD
</subsectionHeader>
<bodyText confidence="0.998248923076923">
As shown in Figure 1, K-QARD has four major
components: Web information extraction, ques-
tion analysis, answer Þnding, and answer gener-
ation.
The Web information extraction (IE) compo-
nent extracts the domain-speciÞc information for
question answering from Web pages and stores
the information into the relational database. For
the domain portability, the Web IE component
is based on the automatic wrapper induction ap-
proach which can be learned from small size of
training examples.
The question analysis component analyzes an
</bodyText>
<figure confidence="0.9997455">
Domain-dependent Domain-independent
External Resources Framework
Training examples
Domain ontology
TE/TR rules
Semantic frames
Answer frames
Question Analysis
Answer Finding
NL Question
NL Answer
Answer
Generation
Web Information
Extraction
Database
eb Pag
Web Page
</figure>
<page confidence="0.965864">
29
</page>
<bodyText confidence="0.96433625">
Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 29–32,
Sydney, July 2006. c�2006 Association for Computational Linguistics
input question, extracts important information us-
ing the IE approach, and matches the question with
pre-defined semantic frames. The component out-
puts the best-matched frame whose slots are filled
with the information extracted from the question.
In the answer finding component, K-QARD re-
trieves the answers from the database using the
SQL generation script defined in each semantic
frame. The SQL script dynamically generates
SQL using the values of the frame slots.
The answer generation component provides the
answer to the user as a natural language sentence
or a table by using the generation rules and the
answer frames which consist of canned texts.
</bodyText>
<sectionHeader confidence="0.97184" genericHeader="method">
3 Question Analysis
</sectionHeader>
<bodyText confidence="0.999824222222222">
The key component for ensuring the robustness
and domain portability is the question analy-
sis because it naturally requires many domain-
dependent resources and has responsibility to
solve the problem caused by various ways of ex-
pressing a question. In K-QARD, a question is an-
alyzed using the methods devised by the informa-
tion extraction approach. This IE-based question
analysis method consists of several steps:
</bodyText>
<listItem confidence="0.954781894736842">
1. Natural language analysis: Analyzing the
syntactic structure of the user’s question and
also identifiying named-entities and some im-
portant words, such as domain-specific pred-
icate or terms.
2. Question focus recognition: Finding the
intention of the user’s question using the
question focus classifier. It is learned from
the training examples based on decision
tree(C4.5)(Quinlan, 1993).
3. Template Element(TE) recognition: Find-
ing important concept for filling the slots
of the semantic frame, namely template el-
ements, using the rules, NE information, and
ontology, etc.
4. Template Relation(TR) recognition: Find-
ing the relation between TEs and a question
focus based on TR rules, and syntactic infor-
mation, etc.
</listItem>
<bodyText confidence="0.999676157894737">
Finally, the question analysis component selects
the proper frame for the question and fills proper
values of each slot of the selected frame.
Compared to other question analysis methods
such as the complex semantic grammar(Martin et
al., 1996), our approach has several advantages.
First, it shows robust performance for the variation
of a question because IE-based approach does not
require the understanding of the entire sentence. It
is sufficient to identify and process only the impor-
tant concepts. Second, it also enhances the porta-
bility of the QA systems. This method is based on
the divide-and-conquer strategy and uses only lim-
ited context information. By virture of these char-
acteristics, the question analysis can be processed
by using a small number of simple rules.
In the following subsections, we will describe
each component of our question analyzer in K-
QARD.
</bodyText>
<subsectionHeader confidence="0.993338">
3.1 Natural language analysis
</subsectionHeader>
<bodyText confidence="0.999959878787879">
The natural language analyzer in K-QARD iden-
tifies morphemes, tags part-of-speeches to them,
and analyzes dependency relations between the
morphemes. A stochastic part-of-speech tagger
and dependency parser(Chung and Rim, 2004) for
the Korean language are trained on a general do-
main corpus and are used for the analyzer. Then,
several domain-specific named entities, such as a
TV program name, and general named entities,
such as a date, in the question are recognized us-
ing our dictionary and pattern-based named entity
tagger(Lee et al., 2004). Finally some important
words, such as domain-specific predicates, ter-
minologies or interrogatives, are replaced by the
proper concept names in the ontology. The man-
ually constructed ontology includes two different
types of information: domain-specific and general
domain words.
The role of this analyzer is to analyze user’s
question and transform it to the more generalized
representation form. So, the task of the question
focus recognition and the TE/TR recognition can
be simplified because of the generalized linguistic
information without decreasing the performance
of the question analyzer.
One of possible defects of using such linguis-
tic information is the loss of the robustness caused
by the error of the NLP components. However,
our IE-based approach for question analysis uses
the very restricted and essential contextual infor-
mation in each step and can avoid such a risk suc-
cessfully.
The example of the analysis process of this
</bodyText>
<page confidence="0.922106">
30
</page>
<equation confidence="0.6888967">
“”/ “” “” “”/ “프” “”
“” “”/ “”
“ ”
“ ”
“”/ “프”/ “”
“오” “” “”
“오” “N” “”
“”
“”
“”
</equation>
<bodyText confidence="0.790845">
‘NE_*’ denotes that the corresponding word is named entity of *.
‘C_*’ denotes that the corresponding word is belong to the concept C_* in the ontology.
‘TE_*’ denotes that the corresponding word is template element whose type is *.
‘REL_OK’ indicates that the corresponding TE and question focus are related.
</bodyText>
<figureCaption confidence="0.999026">
Figure 2: Example of Question Analysis Process in K-QARD
</figureCaption>
<bodyText confidence="0.714521">
component is shown in Figure 2-(1).
</bodyText>
<subsectionHeader confidence="0.99438">
3.2 Question focus recognition
</subsectionHeader>
<bodyText confidence="0.999697636363636">
We define a question focus as a type of informa-
tion that a user wants to know. For example, in
the question &amp;quot;What movies will be shown on TV
tonight?~, the question focus is a program title, or
titles. For another example, the question focus is
a current rainfall in a question &amp;quot;San Francisco is
raining now, is it raining in Los Angeles too?&amp;quot;.
To find the question focus, we define question
focus region, a part of a question that may contain
clues for deciding the question focus. The ques-
tion focus region is identified with a set of simple
rules which consider the characteristic of the Ko-
rean interrogatives. Generally, the question focus
region has a fixed pattern that is typically used in
interrogative questions(Akiba et al., 2002). Thus
a small number of simple rules is enough to cover
the most of question focus region pattern. Figure
2-(2) shows the part recognized as a question fo-
cus region in the sample question.
After recognizing the region, the actual focus of
the question is determined with features extracted
from the question focus region. For the detection,
we build the question focus classifier using deci-
sion tree (C4.5) and several linguistic or domain-
specific features such as the kind of the interroga-
tive and the concept name of the predicate.
Dividing the focus recognition process into two
parts helps to increase domain portability. While
the second part of deciding the actual question fo-
cus is domain-dependent because every domain-
application has its own set of question foci, the
first part that recognizes the question focus region
is domain-independent.
</bodyText>
<subsectionHeader confidence="0.996218">
3.3 TE recognition
</subsectionHeader>
<bodyText confidence="0.999979166666667">
In the TE identification phase, pre-defined words,
phrases, and named entities are identified as slot-
filler candidates for appropriate slots, according to
TE tagging rules. For instance, movie and NBC
are tagged as Genre and Channel in the sample
question `Tell me the movie on NBC tonight.&amp;quot; (i.e.
movie will be used to fill Genre slot and NBC
will be used to fill Channel slot in a semantic
frame). The hand-crafted TE tagging rules basi-
cally consider the surface form and the concept
name (derived from domain ontologies) of a target
word. The context surrounding the target word or
word dependency information is also considered
in some cases. In the example question of Figure
2, the date expression ‘°�(today)’, time expres-
sion ‘,�j (night)’ and the channel name ‘MBC’
are selected as TE candidates.
In K-QARD, such identification is accom-
plished by a set of simple rules, which only ex-
amines the semantic type of each constituent word
in the question, except the words in the question
region. It is mainly because of our divide-and-
conquer strategy motivated by IE. The result of
this component may include some wrong template
elements, which do not have any relation to the
user’s intention or the question focus. However,
they are expected to be removed in the next com-
ponent, the TR recognizer which examines the re-
lation between the recognized TE and the question
focus.
</bodyText>
<page confidence="0.999741">
31
</page>
<figure confidence="0.726522333333333">
( (2) Answer for sample question,
1) Broadcast—domain QA system
&amp;quot;What soap opera will be played on MBC tonight?”
</figure>
<figureCaption confidence="0.987859">
Figure 3: Broadcast-domain QA System using K-QARD
</figureCaption>
<subsectionHeader confidence="0.759831">
3.4 TR recognition
</subsectionHeader>
<bodyText confidence="0.999835315789474">
In the TR recognition phase, all entities identified
in the TE recognition phase are examined whether
they have any relationships with the question fo-
cus region of the question. For example, in the
question &amp;quot;Is it raining in Los Angeles like in San
Francisco?&amp;quot;, both Los Angeles and San Francisco
are identified as a TE. However, by the TR recog-
nition, only Los Angeles is identified as a related
entity with the question focus region.
Selectional restriction and dependency relations
between TEs are mainly considered in TR tagging
rules. Thus, the TR rules can be quite simplified.
For example, many relations between the TEs and
the question region can be simply identified by ex-
amining whether there is a syntactic dependency
between them as shown in Figure 2-(4). Moreover,
to make up for the errors in dependency parsing,
lexico-semantic patterns are also encoded in the
TR tagging rules.
</bodyText>
<sectionHeader confidence="0.895807" genericHeader="method">
4 Application of K-QARD
</sectionHeader>
<bodyText confidence="0.999886611111111">
To evaluate the K-QARD framework, we built re-
stricted domain question answering systems for
the several domains: weather, broadcast, and traf-
Þc. For the adaptation of QA system to each do-
main, we rewrote the domain ontology consisting
of about 150 concepts, about 30 TE/TR rules, and
7-23 semantic frames and answer templates. In
addition, we learned the question focus classifier
from training examples of about 100 questions for
the each domain. All information for the ques-
tion answering was automatically extracted using
the Web IE module of K-QARD, which was also
learned from training examples consisting of sev-
eral annotated Web pages of the target Web site. It
took about a half of week for two graduate stu-
dents who clearly understood the framework to
build each QA system. Figure 3 shows an example
of QA system applied to the broadcast domain.
</bodyText>
<sectionHeader confidence="0.999447" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.9999598">
In this paper, we described the Korean question
answering framework, namely K-QARD, for re-
stricted domains. Specifically, this framework is
designed to enhance the robustness and domain
portability. To achieve this goal, we use the IE-
based question analyzer using the generalized in-
formation acquired by several NLP components.
We also showed the usability of K-QARD by suc-
cessfully applying the framework to several do-
mains.
</bodyText>
<sectionHeader confidence="0.99811" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.984392894736842">
T. Akiba, K. Itou, A. Fujii, and T Ishikawa. 2002.
Towards speech-driven question answering: Exper-
iments using the NTCIR-3 question answering col-
lection. In Proceedings of the Third NTCIR Work-
shop.
H. Chung and H. Rim. 2004. Unlexicalized de-
pendency parser for variable word order languages
based on local contextual pattern. Lecture Note in
Computer Science, (2945):112–123.
J. Lee, Y. Song, S. Kim, H. Chung, and H. Rim. 2004.
Title recognition using lexical pattern and entity dic-
tionary. In Proceedings of the 1st Asia Information
Retrieval Symposium (AIRS2004), pages 345–348.
P. Martin, F. Crabbe, S. Adams, E. Baatz, and
N. Yankelovich. 1996. Speechacts: a spoken lan-
guage framework. IEEE Computer, 7(29):33–40.
J. Ross Quinlan. 1993. C4.5: Programs for Machine
Learning. Morgan Kaufmann Publishers Inc., San
Francisco, CA, USA.
</reference>
<page confidence="0.999301">
32
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.267011">
<title confidence="0.996658">K-QARD: A Practical Korean Question Answering Framework for Restricted Domain</title>
<author confidence="0.85247">Young-In Song</author>
<author confidence="0.85247">HooJung Chung</author>
<author confidence="0.85247">Jae-Won Lee Han</author>
<author confidence="0.85247">JooYoung Lee</author>
<author confidence="0.85247">Lab</author>
<affiliation confidence="0.986846">Rim Advanced Institute of Technology Dept. of Computer Science &amp; Engineering Nongseo-ri, Giheung-eup,</affiliation>
<address confidence="0.6981975">Korea University Yongin-si, Gyeonggi-do 449-712, Korea Seoul 136-701, Korea jwonlee@samsung.com</address>
<email confidence="0.877316">hjchung,kshan,jylee</email>
<abstract confidence="0.997013">We present a Korean question answering framework for restricted domains, called K-QARD. K-QARD is developed to achieve domain portability and robustness, and the framework is successfully applied to build question answering systems for several domains.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>T Akiba</author>
<author>K Itou</author>
<author>A Fujii</author>
<author>T Ishikawa</author>
</authors>
<title>Towards speech-driven question answering: Experiments using the NTCIR-3 question answering collection.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third NTCIR Workshop.</booktitle>
<contexts>
<context position="8838" citStr="Akiba et al., 2002" startWordPosition="1352" endWordPosition="1355">will be shown on TV tonight?~, the question focus is a program title, or titles. For another example, the question focus is a current rainfall in a question &amp;quot;San Francisco is raining now, is it raining in Los Angeles too?&amp;quot;. To find the question focus, we define question focus region, a part of a question that may contain clues for deciding the question focus. The question focus region is identified with a set of simple rules which consider the characteristic of the Korean interrogatives. Generally, the question focus region has a fixed pattern that is typically used in interrogative questions(Akiba et al., 2002). Thus a small number of simple rules is enough to cover the most of question focus region pattern. Figure 2-(2) shows the part recognized as a question focus region in the sample question. After recognizing the region, the actual focus of the question is determined with features extracted from the question focus region. For the detection, we build the question focus classifier using decision tree (C4.5) and several linguistic or domainspecific features such as the kind of the interrogative and the concept name of the predicate. Dividing the focus recognition process into two parts helps to in</context>
</contexts>
<marker>Akiba, Itou, Fujii, Ishikawa, 2002</marker>
<rawString>T. Akiba, K. Itou, A. Fujii, and T Ishikawa. 2002. Towards speech-driven question answering: Experiments using the NTCIR-3 question answering collection. In Proceedings of the Third NTCIR Workshop.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Chung</author>
<author>H Rim</author>
</authors>
<title>Unlexicalized dependency parser for variable word order languages based on local contextual pattern.</title>
<date>2004</date>
<journal>Lecture Note in Computer Science,</journal>
<pages>2945--112</pages>
<contexts>
<context position="6315" citStr="Chung and Rim, 2004" startWordPosition="929" endWordPosition="932"> also enhances the portability of the QA systems. This method is based on the divide-and-conquer strategy and uses only limited context information. By virture of these characteristics, the question analysis can be processed by using a small number of simple rules. In the following subsections, we will describe each component of our question analyzer in KQARD. 3.1 Natural language analysis The natural language analyzer in K-QARD identifies morphemes, tags part-of-speeches to them, and analyzes dependency relations between the morphemes. A stochastic part-of-speech tagger and dependency parser(Chung and Rim, 2004) for the Korean language are trained on a general domain corpus and are used for the analyzer. Then, several domain-specific named entities, such as a TV program name, and general named entities, such as a date, in the question are recognized using our dictionary and pattern-based named entity tagger(Lee et al., 2004). Finally some important words, such as domain-specific predicates, terminologies or interrogatives, are replaced by the proper concept names in the ontology. The manually constructed ontology includes two different types of information: domain-specific and general domain words. T</context>
</contexts>
<marker>Chung, Rim, 2004</marker>
<rawString>H. Chung and H. Rim. 2004. Unlexicalized dependency parser for variable word order languages based on local contextual pattern. Lecture Note in Computer Science, (2945):112–123.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Lee</author>
<author>Y Song</author>
<author>S Kim</author>
<author>H Chung</author>
<author>H Rim</author>
</authors>
<title>Title recognition using lexical pattern and entity dictionary.</title>
<date>2004</date>
<booktitle>In Proceedings of the 1st Asia Information Retrieval Symposium (AIRS2004),</booktitle>
<pages>345--348</pages>
<contexts>
<context position="6634" citStr="Lee et al., 2004" startWordPosition="983" endWordPosition="986">onent of our question analyzer in KQARD. 3.1 Natural language analysis The natural language analyzer in K-QARD identifies morphemes, tags part-of-speeches to them, and analyzes dependency relations between the morphemes. A stochastic part-of-speech tagger and dependency parser(Chung and Rim, 2004) for the Korean language are trained on a general domain corpus and are used for the analyzer. Then, several domain-specific named entities, such as a TV program name, and general named entities, such as a date, in the question are recognized using our dictionary and pattern-based named entity tagger(Lee et al., 2004). Finally some important words, such as domain-specific predicates, terminologies or interrogatives, are replaced by the proper concept names in the ontology. The manually constructed ontology includes two different types of information: domain-specific and general domain words. The role of this analyzer is to analyze user’s question and transform it to the more generalized representation form. So, the task of the question focus recognition and the TE/TR recognition can be simplified because of the generalized linguistic information without decreasing the performance of the question analyzer. </context>
</contexts>
<marker>Lee, Song, Kim, Chung, Rim, 2004</marker>
<rawString>J. Lee, Y. Song, S. Kim, H. Chung, and H. Rim. 2004. Title recognition using lexical pattern and entity dictionary. In Proceedings of the 1st Asia Information Retrieval Symposium (AIRS2004), pages 345–348.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Martin</author>
<author>F Crabbe</author>
<author>S Adams</author>
<author>E Baatz</author>
<author>N Yankelovich</author>
</authors>
<title>Speechacts: a spoken language framework.</title>
<date>1996</date>
<journal>IEEE Computer,</journal>
<volume>7</volume>
<issue>29</issue>
<contexts>
<context position="5424" citStr="Martin et al., 1996" startWordPosition="793" endWordPosition="796">s based on decision tree(C4.5)(Quinlan, 1993). 3. Template Element(TE) recognition: Finding important concept for filling the slots of the semantic frame, namely template elements, using the rules, NE information, and ontology, etc. 4. Template Relation(TR) recognition: Finding the relation between TEs and a question focus based on TR rules, and syntactic information, etc. Finally, the question analysis component selects the proper frame for the question and fills proper values of each slot of the selected frame. Compared to other question analysis methods such as the complex semantic grammar(Martin et al., 1996), our approach has several advantages. First, it shows robust performance for the variation of a question because IE-based approach does not require the understanding of the entire sentence. It is sufficient to identify and process only the important concepts. Second, it also enhances the portability of the QA systems. This method is based on the divide-and-conquer strategy and uses only limited context information. By virture of these characteristics, the question analysis can be processed by using a small number of simple rules. In the following subsections, we will describe each component o</context>
</contexts>
<marker>Martin, Crabbe, Adams, Baatz, Yankelovich, 1996</marker>
<rawString>P. Martin, F. Crabbe, S. Adams, E. Baatz, and N. Yankelovich. 1996. Speechacts: a spoken language framework. IEEE Computer, 7(29):33–40.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Ross Quinlan</author>
</authors>
<title>C4.5: Programs for Machine Learning.</title>
<date>1993</date>
<publisher>Morgan Kaufmann Publishers Inc.,</publisher>
<location>San Francisco, CA, USA.</location>
<contexts>
<context position="4849" citStr="Quinlan, 1993" startWordPosition="706" endWordPosition="707">problem caused by various ways of expressing a question. In K-QARD, a question is analyzed using the methods devised by the information extraction approach. This IE-based question analysis method consists of several steps: 1. Natural language analysis: Analyzing the syntactic structure of the user’s question and also identifiying named-entities and some important words, such as domain-specific predicate or terms. 2. Question focus recognition: Finding the intention of the user’s question using the question focus classifier. It is learned from the training examples based on decision tree(C4.5)(Quinlan, 1993). 3. Template Element(TE) recognition: Finding important concept for filling the slots of the semantic frame, namely template elements, using the rules, NE information, and ontology, etc. 4. Template Relation(TR) recognition: Finding the relation between TEs and a question focus based on TR rules, and syntactic information, etc. Finally, the question analysis component selects the proper frame for the question and fills proper values of each slot of the selected frame. Compared to other question analysis methods such as the complex semantic grammar(Martin et al., 1996), our approach has severa</context>
</contexts>
<marker>Quinlan, 1993</marker>
<rawString>J. Ross Quinlan. 1993. C4.5: Programs for Machine Learning. Morgan Kaufmann Publishers Inc., San Francisco, CA, USA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>