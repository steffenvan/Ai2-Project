<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.021943">
<title confidence="0.989135">
Parsing Arguments of Nominalizations in English and Chinese*
</title>
<author confidence="0.9925295">
Sameer Pradhan, Honglin Sun,
Wayne Ward, James H. Martin
</author>
<affiliation confidence="0.998637">
Center for Spoken Language Research,
University of Colorado, Boulder, CO 80303
</affiliation>
<email confidence="0.998652">
{spradhan,sunh,whw,martin}@cslr.colorado.edu
</email>
<author confidence="0.995799">
Dan Jurafsky
</author>
<affiliation confidence="0.985998">
Department of Linguistics
Stanford University
</affiliation>
<address confidence="0.930709">
Stanford, CA 94305
</address>
<email confidence="0.999216">
jurafsky@stanford.edu
</email>
<sectionHeader confidence="0.995648" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999856">
In this paper, we use a machine learning frame-
work for semantic argument parsing, and apply
it to the task of parsing arguments of eventive
nominalizations in the FrameNet database. We
create a baseline system using a subset of fea-
tures introduced by Gildea and Jurafsky (2002),
which are directly applicable to nominal pred-
icates. We then investigate new features which
are designed to capture the novelties in nom-
inal argument structure and show a significant
performance improvement using these new fea-
tures. We also investigate the parsing perfor-
mance of nominalizations in Chinese and com-
pare the salience of the features for the two lan-
guages.
</bodyText>
<sectionHeader confidence="0.998991" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999797142857143">
The field of NLP had seen a resurgence of research in
shallow semantic analysis. The bulk of this recent work
views semantic analysis as a tagging, or labeling prob-
lem, and has applied various supervised machine learn-
ing techniques to it (Gildea and Jurafsky (2000, 2002);
Gildea and Palmer (2002); Surdeanu et al. (2003); Ha-
cioglu and Ward (2003); Thompson et al. (2003); Prad-
han et al. (2003)). Note that, while all of these systems
are limited to the analysis of verbal predicates, many un-
derlying semantic relations are expressed via nouns, ad-
jectives, and prepositions. This paper presents a prelimi-
nary investigation into the semantic parsing of eventive
nominalizations (Grimshaw, 1990) in English and Chi-
nese.
</bodyText>
<sectionHeader confidence="0.830172" genericHeader="method">
2 Semantic Annotation and Corpora
</sectionHeader>
<bodyText confidence="0.989801243902439">
For our experiments, we use the FrameNet database
(Baker et al., 1998) which contains frame-specific se-
mantic annotation of a number of predicates in English.
Predicates are grouped by the semantic frame that they
instantiate, depending on the sense of their usage, and
their arguments assume one of the frame elements or
roles specific to that frame. The predicate can be a verb,
noun, adjective, prepositional phrase, etc. FrameNet
contains about 500 different frame types and about 700
distinct frame elements. The following example illus-
trates the general idea. Here, the predicate “complain”
instantiates a “Statement” frame once as a nominal
predicate and once as a verbal predicate.
Did [Speaker she] make an official [Predicate:nomina! com-
plaint] [Addressee to you] [Topic about the attack.]
[Message“Justice has not been done”] [Speaker he]
[Predicate:verba! complained.]
Nominal predicates in FrameNet include ultra-nominals
(Barker and Dowty, 1992), nominals and nominal-
izations. For the purposes of this study, a human analyst
went through the nominal predicates in FrameNet and
selected those that were identified as nominalizations
in NOMLEX (Macleod et al., 1998). Out of those,
the analyst then selected ones that were eventive
nominalizations.
These data comprise 7,333 annotated sentences, with
11,284 roles. There are 105 frames with about 190 dis-
tinct frame role&apos; types. A stratified sampling over predi-
cates was performed to select 80% of this data for train-
ing, 10% for development and another 10% for testing.
For the Chinese semantic parsing experiments, we se-
lected 22 nominalizations from the Penn Chinese Tree-
bank and tagged all the sentences containing these predi-
cates with PropBank (Kingsbury and Palmer, 2002) style
arguments – ARG0, ARG1, etc. These consisted of 630
sentences. These are then split into two parts: 503 (80%)
for training and 127 (20%) for testing.
This research was partially supported by the ARDA
AQUAINT program via contract OCG4423B and by the NSF
via grant IS-9978025
&apos;We will use the terms role and arguments interchangeably
</bodyText>
<sectionHeader confidence="0.977225" genericHeader="method">
3 Baseline System
</sectionHeader>
<bodyText confidence="0.990257159090909">
The primary assumption in our system is that a seman-
tic argument aligns with some syntactic constituent. The
goal is to identify and label constituents in a syntactic
tree that represent valid semantic arguments of a given
predicate. Unlike PropBank, there are no hand-corrected
parses available for the sentences in FrameNet, so we
cannot quantify the possible mis-alignment of the nomi-
nal arguments with syntactic constituents. The arguments
that do not align with any constituent are simply missed
by the current system.
3.1 Features We created a baseline system using
all and only those features introduced by Gildea and
Jurafsky that are directly applicable to nominal pred-
icates. Most of the features are extracted from the
syntactic parse of a sentence. We used the Charniak
parser (Chaniak, 2001) to parse the sentences in order to
perform feature extraction. The features are listed below:
Predicate – The predicate lemma is used as a feature.
Path – The syntactic path through the parse tree from the
parse constituent being classified to the predicate.
Constituent type – This is the syntactic category (NP, PP,
S, etc.) of the constituent corresponding to the semantic
argument.
Position – This is a binary feature identifying whether
the constituent is before or after the predicate.
Head word – The syntactic head of the constituent.
3.2 Classifier and Implementation We formulate the
parsing problem as a multi-class classification problem
and use a Support Vector Machine (SVM) classifier in the
ONE vs ALL (OVA) formalism, which involves training
n classifiers for a n-class problem – including the NULL
class. We use TinySVM2 along with YamCha3 (Kudo
and Matsumoto (2000, 2001)) as the SVM training and
test software.
3.3 Performance We evaluate our system on three
tasks: i) Argument Identification: Identifying parse con-
stituents that represent arguments of a given predicate, ii)
Argument Classification: Labeling the constituents that
are known to represent arguments with the most likely
roles, and iii) Argument Identification and Classification:
Finding constituents that represent arguments of a pred-
icate, and labeling them with the most likely roles. The
baseline performance on the three tasks is shown in Ta-
ble 1.
</bodyText>
<sectionHeader confidence="0.990932" genericHeader="method">
4 New Features
</sectionHeader>
<bodyText confidence="0.998424333333333">
To improve the baseline performance we investigated ad-
ditional features that would provide useful information in
identifying arguments of nominalizations. Following is a
</bodyText>
<table confidence="0.9931678">
Task P R Fp=1 A
(%) (%) (%)
Id. 81.7 65.7 72.8
Classification - - - 70.9
Id. + Classification 65.7 42.1 51.4
</table>
<tableCaption confidence="0.999918">
Table 1: Baseline performance on all three tasks.
</tableCaption>
<bodyText confidence="0.99465925">
description of each feature along with an intuitive justifi-
cation. Some of these features are not instantiated for a
particular constituent. In those cases, the respective fea-
ture values are set to “UNK”.
</bodyText>
<listItem confidence="0.944934">
1. Frame – The frame instantiated by the particular sense
of the predicate in a sentence. This is an oracle feature.
2. Selected words/POS in constituent – Nominal predi-
cates tend to assign arguments, most commonly through
postnominal of-complements, possessive prenominal
modifiers, etc. We added the values of the first and last
word in the constituent as two separate features. Another
two features represent the part of speech of these words.
3. Ordinal constituent position – Arguments of nouns
tend to be located closer to the predicate than those
for verbs. This feature captures the ordinal position
of a particular constituent to the left or right of the
predicate on a left or right tree traversal, eg., first PP
from the predicate, second NP from the predicate, etc.
This feature along with the position will encode the
before/after information for the constituent.
4. Constituent tree distance – Another way of quan-
tifying the position of the constituent is to identify its
index in the list of constituents that are encountered
during linear traversal of the tree from the predicate to
the constituent.
5. Intervening verb features – Support verbs play an
important role in realizing the arguments of nominal
predicates. We use three classes of intervening verbs:
i) auxiliary verbs – ones with part of speech AUX, ii)
light verbs – a small set of known light verbs: took, take,
make, made, give, gave, went and go, and iii) other verbs
– with part of speech VBx. We added three features for
each: i) a binary feature indicating the presence of the
verb in between the predicate and the constituent ii) the
actual word as a feature, and iii) the path through the
tree from the constituent to the verb, as the subject of
intervening verbs sometimes tend to be arguments of
nominalizations. The following example could explain
the intuition behind this feature:
[Speaker Leapor] makes general [Predicate assertions] [Topic
about marriage]
6. Predicate NP expansion rule – This is the noun
</listItem>
<bodyText confidence="0.8821582">
equivalent of the verb sub-categorization feature used by
Gildea and Jurafsky (2002). This is the expansion rule
instantiated by the parser, for the lowermost NP in the
tree, encompassing the predicate. This would tend to
cluster NPs with a similar internal structure and would
</bodyText>
<footnote confidence="0.999234">
2http://cl.aist-nara.ac.jp/˜talus-Au/software/TinySVM/
3http://cl.aist-nara.ac.jp/˜taku-Au/software/yamcha/
</footnote>
<bodyText confidence="0.930518">
thus help finding argumentive modifiers.
</bodyText>
<listItem confidence="0.872096545454545">
7. Noun head of prepositional phrase constituents
– Instead of using the standard head word rule for
prepositional phrases, we use the head word of the first
NP inside the PP as the head of the PP and replace the
constituent type PP with PP-&lt;preposition&gt;.
8. Constituent sibling features – These are six features
representing the constituent type, head word and part of
speech of the head word of the left and right siblings
of the constituent in consideration. These are used
to capture arguments represented by the modifiers of
nominalizations.
9. Partial-path from constituent to predicate – This
is the path from the constituent to the lowest common
parent of the constituent and the predicate. This is used
to generalize the path statistics.
10. Is predicate plural – A binary feature indicating
whether the predicate is singular or plural as they tend to
have different argument selection properties.
11. Genitives in constituent – This is a binary feature
which is true if there is a genitive word (one with the part
of speech POS, PRP, PRP$ or WP$) in the constituent,
as these tend to be markers for nominal arguments as in
</listItem>
<bodyText confidence="0.967799636363636">
[Speaker Burma ’s] [Phenomenon oil] [Predicate search] hits
virgin forests
12. Constituent parent features – Same as the sibling
features, except that that these are extracted from the
constituent’s parent.
13. Verb dominating predicate – The head word of the
first VP ancestor of the predicate.
14. Named Entities in Constituent – As in Surdeanu
et al. (2003), this is represented as seven binary fea-
tures extracted after tagging the sentence with BBN’s
IdentiFinder (Bikel et al., 1999) named entity tagger.
</bodyText>
<sectionHeader confidence="0.949427" genericHeader="method">
5 Feature Analysis and Best System
Performance
</sectionHeader>
<bodyText confidence="0.995329744186047">
5.1 English For the task of argument identification,
features 2, 3, 4, 5 (the verb itself, path to light-verb and
presence of a light verb), 6, 7, 9, 10 an 13 contributed pos-
itively to the performance. The Frame feature degrades
performance significantly. This could be just an artifact
of the data sparsity. We trained a new classifier using all
the features that contributed positively to the performance
and the F0=1 score increased from the baseline of 72.8%
to 76.3% (x2;p &lt; 0.05).
For the task of argument classification, adding the
Frame feature to the baseline features, provided the most
significant improvement, increasing the classification
accuracy from 70.9% to 79.0% (x2;p &lt; 0.05). All
other features added one-by-one to the baseline did
not bring any significant improvement to the baseline,
which might again be owing to the comparatively small
training and test data sizes. All the features together
produced a classification accuracy of 80.9%. Since the
Frame feature is an oracle, we were interested in finding
out what all the other features combined contributed.
We ran an experiment with all features, except Frame,
added to the baseline, and this produced an accuracy of
73.1%, which however, is not a statistically significant
improvement over the baseline of 70.9%.
For the task of argument identification and classifi-
cation, features 8 and 11 (right sibling head word part
of speech) hurt performance. We trained a classifier
using all the features that contributed positively to the
performance and the resulting system had an improved
F0=1 score of 56.5% compared to the baseline of 51.4%
(x2; p &lt; 0.05).
We found that a significant subset of features that con-
tribute marginally to the classification performance, hurt
the identification task. Therefore, we decided to perform
a two-step process in which we use the set of features that
gave optimum performance for the argument identifica-
tion task and identify all likely argument nodes. Then, for
those nodes, we use all the available features and classify
them into one of the possible classes. This “two-pass”
system performs slightly better than the “one-pass” men-
tioned earlier. Again, we performed the second pass of
classification with and without the Frame feature.
Table 2 shows the improved performance numbers.
</bodyText>
<table confidence="0.999741818181818">
Task P R Fp=1 A
(%) (%) (%)
Id. 83.8 70.0 76.3
Classification (w/o Frame) - - - 73.1
Classification (with Frame) - - - 80.9
Id. + Classification 69.4 47.6 56.5
(one-pass, w/o Frame)
Id. + Classification 62.2 53.1 57.3
(two-pass, w/o Frame)
Id. + Classification 69.4 59.2 63.9
(two-pass, with Frame)
</table>
<tableCaption confidence="0.998183">
Table 2: Best performance on all three tasks.
</tableCaption>
<bodyText confidence="0.960646333333333">
5.2 Chinese For the Chinese task, we use the one-pass
algorithm as used for English. A baseline system was
created using the same features as used for English (Sec-
tion 3). We evaluate this system on just the combined task
of argument identification and classification. The base-
line performance is shown in Table 3.
To improve the system’s performance over the base-
line, we added all the features discussed in Section 4, ex-
cept features Frame – as the data was labeled in a Prop-
Bank fashion, there are no frames involved as in Frame-
Net; Plurals and Genitives – as they are not realized the
same way morphologically in Chinese, and Named En-
tities – owing to the unavailability of a Chinese Named
Entity tagger. We found that of these features, 2, 3, 4, 6, 7
and 13 hurt the performance when added to the baseline,
but the other features helped to some degree, although
not significantly. The improved performance is shown in
Table 3
[Bikel et al.1999] Daniel M. Bikel, Richard Schwartz, and
Ralph M. Weischedel. 1999. An algorithm that learns what’s
in a name. Machine Learning, 34:211–231.
</bodyText>
<table confidence="0.9999076">
Features P R Fp=1
(%) (%)
Baseline 86.2 32.2 46.9
Baseline 83.9 44.1 57.8
+ more features
</table>
<tableCaption confidence="0.832565666666667">
Table 3: Parsing performance for Chinese on the com-
bined task of identifying and classifying semantic argu-
ments.
</tableCaption>
<bodyText confidence="0.999762166666667">
An interesting linguistic phenomenon was observed
which explains part of the reason why recall for Chinese
argument parsing is so low. In Chinese, arguments
which are internal to the NP which encompasses the
nominalized predicate, tend to be multi-word, and are
not associated with any node in the parse tree. These
violates our basic assumption of the arguments aligning
with parse tree constituents, and are guaranteed to be
missed. In the case of English however, these tend to be
single word arguments which are represented by a leaf
in the parse tree and stand a chance of getting classified
correctly.
</bodyText>
<sectionHeader confidence="0.999236" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.99693315">
In this paper we investigated the task of identifying and
classifying arguments of eventive nominalizations in
FrameNet. The best system generates an F1 score of
57.3% on the combined task of argument identification
and classification using automatically extracted features
on a test set of about 700 sentences using a classifier
trained on about 6,000 sentences.
As noted earlier, the bulk of past research in this area
has focused on verbal predicates. Two notable exceptions
to this include the work of (Hull and Gomez, 1996) – a
rule based system for identifying the semantic arguments
of nominal predicates, and the work of (Lapata, 2002)
on interpreting the relation between the head of a nom-
inalized compound and its modifier noun. Unfortunately,
meaningful comparisons to these efforts are difficult due
to differing evaluation metrics.
We would like to thank Ralph Weischedel and Scott Miller of
BBN Inc. for letting us use BBN’s named entity tagger – Iden-
tiFinder; Ashley Thornton for identifying the sentences from
FrameNet with predicates that are eventive nominalizations.
</bodyText>
<sectionHeader confidence="0.998291" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999895469387755">
[Baker et al.1998] Collin F. Baker, Charles J. Fillmore, and
John B. Lowe. 1998. The Berkeley FrameNet project. In
COLING/ACL-98, pages 86–90, Montreal.
[Barker and Dowty1992] Chris Barker and David Dowty. 1992.
Non-verbal thematic proto-roles. In NELS-23, Amy Schafer,
ed., GSLA, Amherst, pages 49–62.
[Chaniak2001] Eugene Chaniak. 2001. Immediate-head pars-
ing for language models. In ACL, Toulouse, France.
[Gildea and Jurafsky2000] Daniel Gildea and Daniel Jurafsky.
2000. Automatic labeling of semantic roles. In ACL, pages
512–520, Hong Kong, October.
[Gildea and Jurafsky2002] Daniel Gildea and Daniel Jurafsky.
2002. Automatic labeling of semantic roles. Computational
Linguistics, 28(3):245–288.
[Gildea and Palmer2002] Daniel Gildea and Martha Palmer.
2002. The necessity of syntactic parsing for predicate ar-
gument recognition. In ACL, PA.
[Grimshaw1990] Jane Grimshaw. 1990. Argument Structure.
The MIT Press, US.
[Hacioglu and Ward2003] Kadri Hacioglu and Wayne Ward.
2003. Target word detection and semantic role chunking us-
ing support vector machines. In HLT, Edmonton, Canada.
[Hull and Gomez1996] Richard D. Hull and Fernando Gomez.
1996. Semantic interpretation of nominalizations. In AAAI
Conference, Oregon, pages 1062–1068.
[Kingsbury and Palmer2002] Paul Kingsbury and Martha Pal-
mer. 2002. From Treebank to PropBank. In LREC-2002,
Las Palmas, Canary Islands, Spain.
[Kudo and Matsumoto2000] Taku Kudo and Yuji Matsumoto.
2000. Use of support vector learning for chunk identifica-
tion. In CoNLL-2000, pages 142–144.
[Kudo and Matsumoto2001] Taku Kudo and Yuji Matsumoto.
2001. Chunking with support vector machines. In NAACL.
[Lapata2002] Maria Lapata. 2002. The disambiguation of nom-
inalizations. Computational Linguistics, 28(3):357–388.
[Macleod et al.1998] C. Macleod, R. Grishman, A. Meyers,
L. Barrett, and R. Reeves. 1998. Nomlex: A lexicon of
nominalizations.
[Pradhan et al.2003] Sameer Pradhan, Kadri Hacioglu, Wayne
Ward, James Martin, and Dan Jurafsky. 2003. Semantic role
parsing: Adding semantic structure to unstructured text. In
ICDM, Melbourne, Florida.
[Surdeanu et al.2003] Mihai Surdeanu, Sanda Harabagiu, John
Williams, and Paul Aarseth. 2003. Using predicate-
argument structures for information extraction. In ACL, Sap-
poro, Japan.
[Thompson et al.2003] Cynthia A. Thompson, Roger Levy, and
Christopher D. Manning. 2003. A generative model for se-
mantic role labeling. In ECML.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.303984">
<title confidence="0.938111">Arguments of Nominalizations in English and</title>
<author confidence="0.844125">Sameer Pradhan</author>
<author confidence="0.844125">Honglin Wayne Ward</author>
<author confidence="0.844125">H James</author>
<affiliation confidence="0.996786">Center for Spoken Language</affiliation>
<address confidence="0.688375">University of Colorado, Boulder, CO 80303</address>
<author confidence="0.945722">Dan</author>
<affiliation confidence="0.8711785">Department of Stanford</affiliation>
<address confidence="0.998676">Stanford, CA 94305</address>
<email confidence="0.999769">jurafsky@stanford.edu</email>
<abstract confidence="0.99158475">In this paper, we use a machine learning framework for semantic argument parsing, and apply it to the task of parsing arguments of eventive nominalizations in the FrameNet database. We create a baseline system using a subset of features introduced by Gildea and Jurafsky (2002), which are directly applicable to nominal predicates. We then investigate new features which are designed to capture the novelties in nominal argument structure and show a significant performance improvement using these new features. We also investigate the parsing performance of nominalizations in Chinese and compare the salience of the features for the two languages.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Collin F Baker</author>
<author>Charles J Fillmore</author>
<author>John B Lowe</author>
</authors>
<title>The Berkeley FrameNet project.</title>
<date>1998</date>
<booktitle>In COLING/ACL-98,</booktitle>
<pages>86--90</pages>
<location>Montreal.</location>
<marker>[Baker et al.1998]</marker>
<rawString>Collin F. Baker, Charles J. Fillmore, and John B. Lowe. 1998. The Berkeley FrameNet project. In COLING/ACL-98, pages 86–90, Montreal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Barker</author>
<author>David Dowty</author>
</authors>
<title>Non-verbal thematic proto-roles. In</title>
<date>1992</date>
<pages>49--62</pages>
<editor>NELS-23, Amy Schafer, ed., GSLA,</editor>
<location>Amherst,</location>
<marker>[Barker and Dowty1992]</marker>
<rawString>Chris Barker and David Dowty. 1992. Non-verbal thematic proto-roles. In NELS-23, Amy Schafer, ed., GSLA, Amherst, pages 49–62.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eugene Chaniak</author>
</authors>
<title>Immediate-head parsing for language models.</title>
<date>2001</date>
<booktitle>In ACL,</booktitle>
<location>Toulouse, France.</location>
<marker>[Chaniak2001]</marker>
<rawString>Eugene Chaniak. 2001. Immediate-head parsing for language models. In ACL, Toulouse, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gildea</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2000</date>
<booktitle>In ACL,</booktitle>
<pages>512--520</pages>
<location>Hong Kong,</location>
<marker>[Gildea and Jurafsky2000]</marker>
<rawString>Daniel Gildea and Daniel Jurafsky. 2000. Automatic labeling of semantic roles. In ACL, pages 512–520, Hong Kong, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gildea</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>3</issue>
<marker>[Gildea and Jurafsky2002]</marker>
<rawString>Daniel Gildea and Daniel Jurafsky. 2002. Automatic labeling of semantic roles. Computational Linguistics, 28(3):245–288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Gildea</author>
<author>Martha Palmer</author>
</authors>
<title>The necessity of syntactic parsing for predicate argument recognition.</title>
<date>2002</date>
<booktitle>In ACL, PA.</booktitle>
<marker>[Gildea and Palmer2002]</marker>
<rawString>Daniel Gildea and Martha Palmer. 2002. The necessity of syntactic parsing for predicate argument recognition. In ACL, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jane Grimshaw</author>
</authors>
<title>Argument Structure.</title>
<date>1990</date>
<publisher>The MIT Press, US.</publisher>
<marker>[Grimshaw1990]</marker>
<rawString>Jane Grimshaw. 1990. Argument Structure. The MIT Press, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kadri Hacioglu</author>
<author>Wayne Ward</author>
</authors>
<title>Target word detection and semantic role chunking using support vector machines.</title>
<date>2003</date>
<booktitle>In HLT,</booktitle>
<location>Edmonton, Canada.</location>
<marker>[Hacioglu and Ward2003]</marker>
<rawString>Kadri Hacioglu and Wayne Ward. 2003. Target word detection and semantic role chunking using support vector machines. In HLT, Edmonton, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard D Hull</author>
<author>Fernando Gomez</author>
</authors>
<title>Semantic interpretation of nominalizations.</title>
<date>1996</date>
<booktitle>In AAAI Conference,</booktitle>
<pages>1062--1068</pages>
<location>Oregon,</location>
<marker>[Hull and Gomez1996]</marker>
<rawString>Richard D. Hull and Fernando Gomez. 1996. Semantic interpretation of nominalizations. In AAAI Conference, Oregon, pages 1062–1068.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Paul Kingsbury</author>
<author>Martha Palmer</author>
</authors>
<title>From Treebank to PropBank.</title>
<date>2002</date>
<booktitle>In LREC-2002, Las Palmas, Canary Islands,</booktitle>
<marker>[Kingsbury and Palmer2002]</marker>
<rawString>Paul Kingsbury and Martha Palmer. 2002. From Treebank to PropBank. In LREC-2002, Las Palmas, Canary Islands, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taku Kudo</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Use of support vector learning for chunk identification. In</title>
<date>2000</date>
<booktitle>CoNLL-2000,</booktitle>
<pages>142--144</pages>
<marker>[Kudo and Matsumoto2000]</marker>
<rawString>Taku Kudo and Yuji Matsumoto. 2000. Use of support vector learning for chunk identification. In CoNLL-2000, pages 142–144.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taku Kudo</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Chunking with support vector machines.</title>
<date>2001</date>
<booktitle>In NAACL.</booktitle>
<marker>[Kudo and Matsumoto2001]</marker>
<rawString>Taku Kudo and Yuji Matsumoto. 2001. Chunking with support vector machines. In NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Maria Lapata</author>
</authors>
<title>The disambiguation of nominalizations.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>3</issue>
<marker>[Lapata2002]</marker>
<rawString>Maria Lapata. 2002. The disambiguation of nominalizations. Computational Linguistics, 28(3):357–388.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Macleod</author>
<author>R Grishman</author>
<author>A Meyers</author>
<author>L Barrett</author>
<author>R Reeves</author>
</authors>
<title>Nomlex: A lexicon of nominalizations.</title>
<date>1998</date>
<marker>[Macleod et al.1998]</marker>
<rawString>C. Macleod, R. Grishman, A. Meyers, L. Barrett, and R. Reeves. 1998. Nomlex: A lexicon of nominalizations.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sameer Pradhan</author>
<author>Kadri Hacioglu</author>
<author>Wayne Ward</author>
<author>James Martin</author>
<author>Dan Jurafsky</author>
</authors>
<title>Semantic role parsing: Adding semantic structure to unstructured text.</title>
<date>2003</date>
<booktitle>In ICDM,</booktitle>
<location>Melbourne, Florida.</location>
<marker>[Pradhan et al.2003]</marker>
<rawString>Sameer Pradhan, Kadri Hacioglu, Wayne Ward, James Martin, and Dan Jurafsky. 2003. Semantic role parsing: Adding semantic structure to unstructured text. In ICDM, Melbourne, Florida.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mihai Surdeanu</author>
<author>Sanda Harabagiu</author>
<author>John Williams</author>
<author>Paul Aarseth</author>
</authors>
<title>Using predicateargument structures for information extraction.</title>
<date>2003</date>
<booktitle>In ACL,</booktitle>
<location>Sapporo, Japan.</location>
<marker>[Surdeanu et al.2003]</marker>
<rawString>Mihai Surdeanu, Sanda Harabagiu, John Williams, and Paul Aarseth. 2003. Using predicateargument structures for information extraction. In ACL, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cynthia A Thompson</author>
<author>Roger Levy</author>
<author>Christopher D Manning</author>
</authors>
<title>A generative model for semantic role labeling.</title>
<date>2003</date>
<booktitle>In ECML.</booktitle>
<marker>[Thompson et al.2003]</marker>
<rawString>Cynthia A. Thompson, Roger Levy, and Christopher D. Manning. 2003. A generative model for semantic role labeling. In ECML.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>