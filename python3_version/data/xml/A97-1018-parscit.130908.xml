<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.729078">
CSeg&amp;Tag1.0: A Practical Word Segmenter and POS Tagger
for Chinese Texts
</title>
<author confidence="0.96903">
Sun Maosong, Shen Dayang, Huang Changning
</author>
<affiliation confidence="0.994464333333334">
National Key Lab. of Intelligent Technology &amp; Systems
Department of Computer Science
Tsinghua University
</affiliation>
<address confidence="0.944673">
Beijing 100084, P.R. China
</address>
<email confidence="0.993415">
Ikc-dcs@mail.tsinghua.edu.cn
</email>
<sectionHeader confidence="0.987869" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999715052631579">
Chinese word segmentation and POS tagging are
two key techniques in many applications in
Chinese information processing. Great efforts
have been paid to the research in the last decade,
but unfortunately, no practical system with high
performance for unrestricted texts is available up
to date. CSeg&amp;Tag1.0, a Chinese word
segmenter and POS tagger which unifies these
two procedures into one model, is introduced in
this paper. The preliminary open tests show that
the segmentation precision of CSeg&amp;Tag1.0 is
about 98.0% - 99.3%, POS tagging precision
about 91.0% - 97.1%, and the recall and
precision for unknown words are ranging from
95.0% to 99.0% and from 87.6% to 95.3%
respectively. The processing speed is about 100
characters per second on Pentium 133 PC. The
work of improving the performance of the system
is still ongoing.
</bodyText>
<listItem confidence="0.505868">
1. Background and the Related Issues
</listItem>
<bodyText confidence="0.998372625">
In Chinese, there do not exist delimiters, such as
spacing in English, to explicitly indicate boundaries
between words. Chinese word segmentation is
therefore proposed as the first step in any Chinese
information processing systems. Then we still face the
problem of part-of-speech tagging. These two issues
have been intensively studied by the Chinese language
computing community in the last decade[1-18].
Unfortunately however, no word segmenter and POS
tagger for Chinese with satisfactory performance in
treating unrestricted texts are available so far.
Two main obstacles block the progress of Chinese
word segmentation: one is ambiguity, another is
unknown word. The sentences in (1) are examples of
ambiguity and the sentence (2) and (3) examples of
unknown word.
</bodyText>
<equation confidence="0.9586655">
( I a) A-tiikANIRA.
(Ib) iMilfAM6BL friJEIRV—P.
</equation>
<bodyText confidence="0.806964625">
At least two explanations are possible for the
fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different
segmentations:
correct segmentation for (1a)
I t&amp;quot; I fAfifi II
this CLASSIFIER institute very famous
(This institute is very famous.)
correct segmentation for (1b)
</bodyText>
<sectionHeader confidence="0.51658" genericHeader="method">
fifA I I
</sectionHeader>
<keyword confidence="0.196696">
this CLASSIFIER research AUX
</keyword>
<sectionHeader confidence="0.741477" genericHeader="method">
OR II III.
</sectionHeader>
<bodyText confidence="0.882423857142857">
involve of problem very complex
he problems involved in this research are
very complex.)
Two transliterated foreign personal names(TF/V),
i.e., &apos;VERA&amp;quot; and &amp;quot;RitAt# I FtiVi • A
tt&amp;quot; are involved in the sentence (2):
(2) MITAISEMAttt*MAtg12116-4
</bodyText>
<equation confidence="0.540885857142857">
44 • IK t±/111 • EMS,
They will be wrongly broken into pieces of
isolated characters if not processed:
correct segmentation for (2)
MR I EVLA I VA I AE.O. I flisJ I
accompany TFN1 president visit of
A- I 01 I FIA6444 • IK Flit •
</equation>
<bodyText confidence="0.966498666666667">
have premier TFN2
(Visitors accompanying the president TFN1
include the premier TFN2, ...)
</bodyText>
<equation confidence="0.884439470588235">
wrong segmentation for (2)
MR I VE P-f-A I 31E I iYJ
I A.1 ,Lq131 I JIiVIHI1I -
F Itt101 • IThI*16—
The sentence (3) contains a Chinese personal
1 1 9
name(CN) :
(3) IPIMMVIA.
We have:
correct segmentation for (3)
ill tit 1PIPMA
CN beautiful
(CN is beautiful)
wrong segmentation for (3)
tit I ?NV I I
only clear ChineseSURNAME touching
/* logically ill-formed sentence */
</equation>
<bodyText confidence="0.999895833333333">
POS tagging for Chinese is similar to that of
English, except that an English tagger only need to tag
one word sequence for an input sentence, but in the
case of Chinese, to get a correct tag sequence for a
sentence, a Chinese tagger may be requested to tag
more than one word sequences simultaneously due to
the presence of segmentation ambiguities.
Chinese word segmentation and POS tagging
techniques can be found many applications in the real
world such as information retrieval, text categorization,
text proofreading, OCR, speech recognition and text-
to-speech conversion systems. For instance, in
information retrieval, the incorrect segmentation for the
fragment &amp;quot;liblEfi&amp;quot; in (la) and (lb) will definitely
cause improper access to the texts involving it. Another
typical application is in text-to-speech conversion. The
over-segmentation of TFN1 and TFN2 in the
sentence (2) will result in the synthesized speeches
choppy. The CN in (3) may make the word
segmentation and POS tagging of the whole sentence
totally wrong, and further, the pronunciation of the
character *. totally wrong (*. should be pronounced
as shan4 if it is referred to a surname, whereas as danl
if adjective or adverb).
</bodyText>
<sectionHeader confidence="0.980495" genericHeader="method">
2. The Complexity of the Task
</sectionHeader>
<subsectionHeader confidence="0.9965785">
Combinatorial Explosion 1: Word Segmentation
Candidate Space
</subsectionHeader>
<bodyText confidence="0.990278">
The number of possible segmentations for some
sentences may be rather large. Observe:
</bodyText>
<listItem confidence="0.598228666666667">
(4) AN rri RI Etig tit
totally 76 possible segmentations will be found if we
simply match the sentence with a dictionary:
</listItem>
<equation confidence="0.9422368">
(seg 1 ) A)Nr1:3[11 I TO I It a 44 I
(seg2) AR I +RI I VII I Eq5 I 4+4 I
(seg75) AIN I P14 I IN* I gilt I 544 I +4 I
(seg76)
5 I 44 I +4 I
</equation>
<bodyText confidence="0.997189333333333">
Fig.1 shows the word segmentation candidate
space for the sentence (4).
The situation will be even complicated as
unknown words is under consideration(Fig.2).
Generally, segmentation ambiguities can be
classified into three categories:
</bodyText>
<listItem confidence="0.683421777777778">
(a) ambiguities among common words(refer to all
arcs in Fig.1)
(b) ambiguities among unknown words(see arcs
of representing candidates for Chinese place name and
for Chinese personal names in Fig.2)
(c) ambiguities among common words and
unknown words(see arcs across Chinese personal name
candidates &amp;quot;MA&amp;quot;, &amp;quot;WMA&amp;quot;, &amp;quot;4.M.A&amp;quot; and the arc
across common word &amp;quot;&amp;quot;(love, like) in Fig.2)
</listItem>
<bodyText confidence="0.9753022">
In our experience, ambiguities of type (a) will
cause about 3% loss on the precision rate of
segmentation in the condition of making use of
maximal matching strategy, one of the most popular
methods employed in word segmentation systems, and
type (b) and (c) about 10.0% loss if the processing of
unknown words is ignored (unfortunately, type (b)
and (c) have received less attention than type (a) in the
literature).
3 4 -47 5J11 6 14 7 RI $4 VI&amp;quot;
</bodyText>
<footnote confidence="0.500768">
Corrmon words
Fig.1 The word segmentation candidate space
</footnote>
<page confidence="0.76749">
10
120
</page>
<figure confidence="0.93218075">
-y-
t z
0 2 3 4 5 6 7
Common words
Candidates for Chinese Place Names
Candidates for Chinese Personal Names
Fig.2 The word segmentation candidate space regarding unknown words
012 114 345 JEll 6 Eg 7 a f2f 9 A- 10
Fig.3 The POS tagging candidate space
0 a 2
N
3 1=9 4 -Ox 5 111 6 7 &apos;her &apos;RI 94 10
Words Tags
Combinatorial Explosion 2: POS Tagging
Candidate Space
Given that:
</figure>
<equation confidence="0.9976276">
TAG(A) = {vgm, qnq, ngm}
TAG(J) = {vgm, ns}
TAG() = (j, dm, vgm)
TAG(111) = {ngm, ns}
TAG(*) = {ngm, k}
TAG(T11) = {vgm, urn, pgm}
TAG(E) = {vgm, ngm}
TAG(5) = {ngm)
TAG(44) = {ngn}
TAG(4) = {ngm, vgm, qnq}
</equation>
<bodyText confidence="0.7652005">
we will get 1296 possible tag sequences solely for
seg(76) in the sentence 4 (Fig.3).
</bodyText>
<construct confidence="0.3853285">
Combinatorial Explosion I x Combinatorial
Explosion 2: An Integrated Model
</construct>
<bodyText confidence="0.999962954545455">
We find out through experiments that the word
segmentation and POS tagging are mutually interacted,
the performance of the both will increase if they are
integrated together[l 8]. Scholars ever tried to do so.
The method reported in [11] is: (a) finding out the N-
best segmentation candidates explicitly in terms of
word frequency and length; (b) POS tagging each of
the N-best segmentation candidates, resulting in the N-
best tag sequences accordingly; and (c) using a score
with weighted contributions from (a) and (b) to select
the best solution. Note that the model used in (a) is just
word unigram, and (a) and (b) are being done
successively (denoted as &amp;quot;(a)+(b)&amp;quot;). It is a kind of
pseudo-integration. More truly one, in our point of
view, should be: (a) taking all segmentation
possibilities into account; (b) expanding every
segmentation candidate of the input sentence into a
number of tag sequences one by one, deriving a
considerable huge segmentation and tagging candidate
space; and (c) seeking the optimal path over such space
with a bigram model, obtaining then both word
segmentation and POS tagging result from the path
</bodyText>
<page confidence="0.990291">
121
</page>
<bodyText confidence="0.9998426">
found. In the case, (a) and (b) are being done
simultaneously (denoted by &amp;quot;(a)ll(b)&amp;quot;). We regard this
as a basic strategy and testbed for conducting our
system. Obviously, a much more serious combinatorial
problem is encountered here.
</bodyText>
<sectionHeader confidence="0.760816" genericHeader="method">
3. CSeg&amp;Tag1.0: System Architecture and
Algorithm Design
</sectionHeader>
<bodyText confidence="0.999803916666667">
Although great efforts have been paid to the
related researches by Chinese information processing
community in the last decade, we still have not a
practical word segmenter and POS tagger at hand yet.
What is the problem? The crucial reason, we believe,
lies in the &amp;quot;knowledge&amp;quot;. As indicated in section 2, we
meet a very serious difficulty, without relevant
knowledge, even humanbeings will definitely fail to
solve it. The focus of the research should be no longer
solely on the &apos;pure&apos; or &apos;new&apos; formal algorithms — no
matter what it will be, instead, what is urgently
required is on two issues, i.e., (1) what sorts of and
how many knowledges are needed; and (2) how these
various konwledges can be represented, extracted, and
cooperatively mastered, in a system.
This is also the philosophy in designing
Cseg&amp;Tag1.0, an integrated system for Chinese word
segmentation and POS tagging, which is being
developed at the National Key Lab. of Intelligent
Technology and Systems, Tsinghua University. The
aim of CSeg&amp;Tag is to be able to process unrestricted
running texts. Fig.4 gives its architecture.
Roughly speaking, Cseg&amp;Tag1.0 can be viewed
as a three-level multi-agent(the concept of &amp;quot;agent&amp;quot;
means an entity that can make decision independently
and communicate with others) system plus some other
necessary mechanisms. They are: (I) agents at the low
level for treating unknown words; (2) a competition
agent at the intermediate level for resolving conflicts
among low level agents; (3) a bigram-based agent at
the high level for coping with all the remaining
ambiguities; (4) mechanisms employing the so-called
&amp;quot;global statistics&amp;quot; and &amp;quot;local statistics&amp;quot; (cache); and (5)
a rule base. We will introduce them briefly in turn(the
detailed discussion of each part is beyond the scope of
this paper).
</bodyText>
<subsectionHeader confidence="0.9710975">
3.1. Agents at the Low Level for Treating
Unknown Words
</subsectionHeader>
<bodyText confidence="0.988882714285714">
The types of unknown words CSeg&amp;Tag1.0
currently concerns include Chinese personal
names(C1V), transliterated foreign personal names(TFIV)
and Chinese place names(CPN). They can not be
enumerated in any dictionary even with numerous size.
To study unknown words systematically, we build
up there relevant banks:
</bodyText>
<listItem confidence="0.999884333333333">
• CN Bank(CNB): 200,000 samples
• TFN Bank(TFNB): 38,769 samples
• CPN Bank(CPNB): 17,637 samples
</listItem>
<bodyText confidence="0.977893375">
The difficulty of identifying unknown words in
Chinese arises from characteristics of them:
(a) no any explicit hint such as capitalization in
English exists to signal the presence of unknown words,
and the character sets used for unknown words are strict
subsets of Chinese characters(the size of the complete
Chinese character set is 6763), with some degree of
decentralized distributions;
</bodyText>
<table confidence="0.9970926">
# of chars in char set
CN (surname) 729
CN (given name) 3345
TFN 501
CPN 2595
</table>
<listItem confidence="0.993006818181818">
(b) the length of unknown words may vary
arbitrarily;
(c) some characters used in unknown words may
also be used as mono-syllabic common words in texts;
(d) the mono-syllabic words identified above fall
into the syntactic categories not only notional words but
also function words;
(e) the character sets are mutually intersected to
some extent;
(f) some multi-syllabic words may occur in
unknown words.
</listItem>
<bodyText confidence="0.9949838">
In our system, three agents, CNA gent, TFNA gent
and C P NA gent are set up to be responsible for finding
candidates in input texts accordingly. A candidate can
be regarded as a &amp;quot;guess&amp;quot; with a value of belief. Three
steps are involved in all the three agents in general:
</bodyText>
<tableCaption confidence="0.581675333333333">
Step 1: Applying MM(maximal matching) first as
a pre-processing, then finding candidates over the
resulting fragments of characters
</tableCaption>
<bodyText confidence="0.99891825">
There are two strategies for seeking candidates in
the input sentence. One is simply viewing it as character
string, finding candidates over whole of it in terms of
the relevant character set:
</bodyText>
<page confidence="0.96478">
122
</page>
<figure confidence="0.996321">
Fig.4 The system architecture of CSeg&amp;Tag1.0
Diclnfo
Integration
/
/
Possibilities /
TF N(
Agent Guesses
T\leir Bel iefs
\
Input Text
Agents at Low Level
SentToBeSeg
7
,MainDic
DomainDio
MMSeg
7 CName `\
Agent ,
_ _ \
■LocalStat
_
(Di cManager
TempDic,
CName
KB
CP Name PNaMeT\.
KB Agent
Competiti on
Agent
-\ Intermediate
Level
)Proper Noun Bank
• • •
. _
Corpus TCorpus
Expanded DAG
:RuleBase
Disambiguation
Agent (H i gh Level) )
cha r
B gram
POS
Bigram
-- Results of CSeg&amp;Tag
(5a) A&apos;&apos;Z3K.0)111rililiV-*Ii&amp;quot;:#114J :1 1
CN/ CN2 CN3
</figure>
<figureCaption confidence="0.7962148">
Many noises will be unnecessarily introduced, as
CN2 and CN3 in (5a). Another way is viewing input as
word string, applying MM segmentation as a pre-
processing first, then trying to find candidates only over
the fragments composed of successive single characters:
</figureCaption>
<figure confidence="0.5966122">
(5b) 3E I 1! I I 1Z I * Ivin q4g.1
CN1 will come attend China
f14- I I W9 I
science journal of celebration
(CN1 will come here and attend the celebration
of the journal of &amp;quot;Science in China&apos;)
Step 2: Drawing back some multi-syllabic words
into the candidates
Look at:
(6) 11Lo4iE4U10-Z
</figure>
<footnote confidence="0.4107695">
(His name is Buckinghamshire)
after WI, we get
</footnote>
<page confidence="0.993139">
123
</page>
<bodyText confidence="0.9162365">
obviously, ia(platinum) should be drawn back and
added into the TFN candidate.
Such multi-syllabic words can be collected from
the banks.
</bodyText>
<figure confidence="0.75161721875">
Step 3: Further determining boundaries of the
candidates
All of the useful information, usually language-
specific and unknown-word-type-specific, are activated
to perform this work.
internal information
(i) statistical information
Each candidate will be assigned a belief according
to the statistics derived from the banks.
(ii) structural information
# nature of characters
• absolute closure characters for CNs
They will definitely belong to a Chinese surname
once falling into the control domain of it:
ZAN
• relative closure characters for CNs
In certain conditions, they function as absolute
closure characters:
(7a) mai I
CN1 very clever
(CN1 is very clever)
(7b) VIA Int kt_A
CN2 clever very
(CN2 is very clever)
open characters for CNs
For this sort of characters, possibilities of being
included in a name and excluded out of the name must
be reserved:
(8a) 35k I it I 4\iSt
CNI read novel
(CN1 is reading a novel)
(813) 3KT I
</figure>
<footnote confidence="0.481365">
CN2 like read novel
(CN2 likes to read novels)
</footnote>
<table confidence="0.778313761904762">
# position in unknown words
For instance, &amp;quot; 4:&amp;quot; always occurs in the first
position of given name of CNs, illustrated as
NM&amp; 1,1A5/44 WM,&apos;&amp;quot; V7litiaM31,14‘n
The CN candidate &amp;quot;4TI±:&amp;quot; in (9)
(9) 4STr1iga&amp;quot;
will be therefore properly filtered out, leaving the
correct one:
# affix
Affix(e.g. suffix of CPNs) will be beneficial to
locating the boundaries of some unknown words.
# constructions
CPNs ==&gt; Chinese surname + &amp;quot;Z&amp;quot; +
mono-syllabic CPN suffix
external information
(i) statistical information
Refer to &amp;quot;global &amp; local statistics&amp;quot;.
(ii) structural information
# titles
# special verbs
# special syntactic patterns
</table>
<tableCaption confidence="0.728732">
patten x0: &amp;quot;IA &lt; CN or TF1V&gt; {title} j &lt;title&gt; &amp;quot;
(10) IA4ti7.t1111tA111
The fragment &amp;quot;ati;14.&amp;quot; in (10) will create four
CN candidates &amp;quot;Vi&amp;quot;iffit±*&amp;quot;&amp;quot;#*&amp;quot;&amp;quot;ti t&amp;quot;, but
only &amp;quot;4±44,&amp;quot; passes under the constraint of pattern x0.
</tableCaption>
<subsectionHeader confidence="0.982625666666667">
3.2. The Competition Agent at the
Intermediate Level for Resolving Conflicts
among Low Level Agents
</subsectionHeader>
<bodyText confidence="0.973998">
The candidates given independently by three
agents may contradict each other on some occasions
(see Fig.2). We observe from 497 randomly selected
sentences that low level agents generate multiple(&gt;=2)
unknown word candidates in 17.7% of them(Fig.5), and,
the probability of conflicting is about 88% if candidate
number is 2 and 100% if it is greater than 2(Fig.6).
A competition agent is established to deal with
such conflicts. The evaluation is based on all
information from various resources, that is:
No. of sentences
</bodyText>
<page confidence="0.832238">
01234567
</page>
<bodyText confidence="0.419133">
No. of candidates in a sentence
</bodyText>
<footnote confidence="0.384685">
Fig.5 The distribution of candidates in sentences
</footnote>
<page confidence="0.995079625">
35
30
250
200
15
10
50
124
</page>
<figure confidence="0.8854205">
4 5 6 7
No. of candidates in a sentence
Fig.6 The probability of conflicting
among unknown word candidates
Eval(candidate)= A (InterStatisInfo,
InterStrucInfo,ExterStatisInfo,ExterStrucInfo)
</figure>
<bodyText confidence="0.9922275">
About 77% conflicts can be solved by this agent.
The output of it, including correct candidates and some
unsolved conflicts, are then sent to a high level agent for
further processing.
</bodyText>
<subsectionHeader confidence="0.949857333333333">
3.3. The Bigram-based Agent at the High
Level for Coping with all the Remaining
Ambiguities
</subsectionHeader>
<bodyText confidence="0.999980666666667">
The conventional POS bigram model and a
dynamic programming algorithm are used in this high
level agent. The searching space of the algorithm is the
complete combination of all possible word and tag
sequences, and the complexity of it can be theoretically
and experimentally proved still polynomial.
</bodyText>
<subsectionHeader confidence="0.995783">
3.4. Global Statistics &amp; Local Statistics
</subsectionHeader>
<bodyText confidence="0.999956352941177">
Global statistics are referred to statistical data
derived from very large corpora, as mutual information
and t-test in Cseg&amp;Tag1.0, whereas local statistics to
those derived from the article in which the input
sentence stands — like a chche. Both of them take
characters as basic unit of computation, because any
Chinese word is exactly a combination of characters in
one way or another. Experiments by us reveal that
they(especially the latter) are quite important in the
resolution of ambiguities and unknown words. Refer
back to &amp;quot;tl.&amp;quot; and &amp;quot;gk-A.&amp;quot; in (8a) and (8b) as an
example. The both CN candidates are reasonable given
the isolated sentence only, but by cache, it is in fact a
collection of ambiguous entities unsolved so far in the
current input article, the algorithm will have more
evidence to make decision. We will discuss this in
depth in another paper.
</bodyText>
<subsectionHeader confidence="0.972858">
3.5. Rule Base
</subsectionHeader>
<bodyText confidence="0.99982275">
It contains knowledge in rule form, including
almost all word formation rules in Chinese, a number
of simple but very reliable syntactic rules, and some
heuristic rules.
</bodyText>
<sectionHeader confidence="0.992645" genericHeader="evaluation">
4. Experimental Results
</sectionHeader>
<bodyText confidence="0.998461">
Cseg&amp;Tag1.0 is implemented in Windows
environment with Visual C++I.0 programming
language. The dictionary supporting it contains 60,133
word entries along with word frequencies, parts of
speech, and various types of information necessary for
the purpose of segmentation and tagging. The size of
manually tagged corpus for training the bigram model
is about 0.4 M words, and that of the raw corpus for
achieving global statistics is 20M characters.
We define:
</bodyText>
<construct confidence="0.87271725">
Seg. precision= # words- correctly- segmented
# words- in- input- texts
# words- correctly- tagged
# words- in - input- texts
</construct>
<bodyText confidence="0.999774">
The preliminary open tests show that for
CSeg&amp;Tag1.0, the word segmentation precision is
ranging from 98.0% to 99.3%, POS tagging precision
from 91.0 to 97.1%, and the recall and precision for
unknown words are from 95.0% to 99.0% and from
87.6% to 95.3% respectively. The speed is about 100
characters per second on Pentium 133. A running
sample of Cseg&amp;Tag1.0 is demonstrated as
follows(tokens underlined in the output are unknown
words successfully identified while those in bold are
words wrongly tagged):
</bodyText>
<figure confidence="0.910711875">
[input text]
&lt;illga)34&apos;11, WT:it-Vilif KA*-01-44&gt; (
VAN.
1114)1,--1--1-M9.131E.
tOM4*, Af.,f.
f,AM
[output]
&lt;\x,g \sd 6:tMi *It\vgd i*vd \ngd
\np A\vgd -01-4\ngd xg (\xp -1.E\ngd
1&amp;111\nP \xP VITVIP ) \xP Otb\i 111\sd
Probability of
conflicting (%)
100-
80,
60-
40-
20
0
Tag. precision=
125
\ngd.1=;.3.\td _ELF \td t\vgm OCIM 4Lt \ngd
4-4-\vgd iffi\tdngd , \xp al-0\vgd it-h\mx
*itngd \ed yolovgd mgR\np \xp
1114 \rip \xp \xp fl,M4*\np , \xp
</figure>
<bodyText confidence="0.996538105263158">
\Tip , \xp Ar.4; \np \xp \np \xp IIIER
np \xp np \xp TYOR\np , \xp
\rip&amp;quot;4\ egm riirngd 1-A-A\ngd , \xp
It should be pointed out that Cseg&amp;Tag1.0 is just
the result of the first round of our investigation. To get
our goal, i.e., developing a system with approximately
99% segmentation precision and 95% tagging precision
for any running Chinese texts in any cases, quite a lot
of work is still waiting there to be done. What we can
say now is that we believe it is possible to reach this
destination in a not very far future, and we know
more than before about how to approach it. The second
round work is ongoing currently, with emphasis on two
aspects: (1) to promote the algorithm, particularly those
associated with agents and cache, carefully; (2) to
improve the quality of knowledge base by both
enlarging the size of the relevant resources(textual
corpora, unknown word banks, etc.) and refining the
lexicon, tagged corpus and the rule base.
</bodyText>
<sectionHeader confidence="0.959945" genericHeader="conclusions">
Acknowledgment
</sectionHeader>
<bodyText confidence="0.9886545">
This research is supported by the National Natural
Science Foundation of China and by the Youth Science
Foundation of Tsinghua University, Beijing,
P.R.China.
</bodyText>
<sectionHeader confidence="0.998412" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9999608">
[1] N.Y. Liang, &amp;quot;Automatic Chinese Text Word
Segmentation System — CDWS&amp;quot;, Journal of Chinese
Information Processing, Vol.1, No.2, 1987
[2] C.K. Fan, W.H. Tsai, &amp;quot;Automatic Word
Identification in Chinese Sentences by the Relaxation
Technique&amp;quot;, Computer Processing of Chinese and
Oriental Languages, Vol.!, No.1, 1988
[3] C. Kit, Y. Liu, N. Liang, &amp;quot;On Methods of Chinese
Automatic Word Segmentation&amp;quot;, Journal of Chinese
Information Processing, Vol.3, No.1, 1989
[4] J.S. Zhang, Z.D. Chen, S.D. Chen, &amp;quot;A Method of
Word Identification for Chinese by Constraint
Satisfaction and Statistical Optimization Techniques&amp;quot;,
Proc. of ROCLING-IV, Kenting, 1991
[5] J.S. Chang, S. Chen, Y. Zheng, X.Z. Liu, S.J. Ke,
&amp;quot;A Multiple-Corpus Approach to Identification of
Chinese Surname-names&amp;quot;, Proc. of Natural Language
Processing Pacific Rim Symposium, Singapore, 1991
[6] B.Y. Lai, S. Lun, C.F. Sun, M.S. Sun, &amp;quot;A Tagging-
Based First Order Markov Model Approach to Chinese
Word Identification&amp;quot;, Proc. of ICCPCOL-92, Florida,
1992
[7] K.J. Chan, S.H. Liu, &amp;quot;Word Identification for
Mandarin Chinese Sentences&amp;quot;, Proc. of COLING-92,
Nantes, 1992
[8] L.J. Wang, et al. &amp;quot;Recognizing Unregistered Names
for Mandarin Word Identification&amp;quot;, Proc. of COLING-
92, Nantes, 1992
[9] M.S. Sun, B.Y. Lai, S. Lun, C.F. Sun, &amp;quot;Some Issues
on Statistical Approach to Chinese Word
Identification&amp;quot;, Proc. of 3rd International Conference
on Chinese Information Processing, Beijing, 1992
[10] C.H. Chang, C.D. Chen, &amp;quot;HMM-based Part-of-
Speech Tagging for Chinese Corpora&amp;quot;, Proc. of the
Workshop on Very Large Corpora, Ohio, 1993
[11] C.H. Chang, C.D. Chen, &amp;quot;A Study on Integrating
Chinese Word Segmentation and Part-of-Speech
Tagging&amp;quot;, Communications of COUPS, Vol.3, No.2,
1993
[12] M.S. Sun and W.J. Zhang, &amp;quot;Transliterated English
Name Identification in Chinese Texts&amp;quot;,Computational
Linguistics: Research &amp; Application, Beijing Language
Institute Press, Beijing, 1993
[13] M.S. Sun, C.N. Huang, H.Y. Gao, J. Fang,
&amp;quot;Identifying Chinese Names in Unrestricted Texts&amp;quot;,
Communications of COUPS, Vol.4, No.2, 1994
[14] R. Sproat, C. Shih, W. Gale, N. Chang, &amp;quot;A
Stochastic Finite-State Word Segmentation Algorithm
for Chinese&amp;quot;, Proc. of 32nd Annual Meeting of ACL,
New Mexico, 1994
[15] D.Y. Shen, M.S. Sun and C.N. Huang, &amp;quot;Identifying
Chinese Place Names in Unrestricted Texts&amp;quot;,
Computational Linguistics: Research &amp; Development,
Tsinghua University Press, Beijing, 1995
[16] J.Y. Nie, M.L. Hannan, W. Jin, &amp;quot;Unknown Word
Detection and Segmentation of Chinese Using
Statistical and Heuristic Knowledge&amp;quot;, Communications
of COUPS, Vol.5, No.1 , 1995
[17] M.S. Sun, B.K. T.sou, &amp;quot;Resolving Ambiguities in
Chinese Word Segmentation&amp;quot;, Proc. of PACLIC-10,
Hong Kong, 1995
[18] M.S. Sun, C.N. Huang, &amp;quot;Word Segmentation and
Part-of-speech Tagging for Unrestricted Chinese
Texts&amp;quot;, A Tutorial on the International Conference on
Chinese Computing&apos;96, Singapore, 1996
</reference>
<page confidence="0.998529">
126
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.907395">CSeg&amp;Tag1.0: A Practical Word Segmenter and POS Tagger for Chinese Texts Sun Maosong, Shen Dayang, Huang Changning</title>
<author confidence="0.361462">of Intelligent Technology</author>
<author confidence="0.361462">Systems</author>
<affiliation confidence="0.9996275">Department of Computer Science Tsinghua University</affiliation>
<address confidence="0.997597">Beijing 100084, P.R. China</address>
<email confidence="0.771174">Ikc-dcs@mail.tsinghua.edu.cn</email>
<abstract confidence="0.952308286666667">Chinese word segmentation and POS tagging are two key techniques in many applications in Chinese information processing. Great efforts have been paid to the research in the last decade, but unfortunately, no practical system with high performance for unrestricted texts is available up to date. CSeg&amp;Tag1.0, a Chinese word segmenter and POS tagger which unifies these two procedures into one model, is introduced in this paper. The preliminary open tests show that the segmentation precision of CSeg&amp;Tag1.0 is about 98.0% - 99.3%, POS tagging precision about 91.0% - 97.1%, and the recall and precision for unknown words are ranging from 95.0% to 99.0% and from 87.6% to 95.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. Background and the Related In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1-18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese segmentation: one is is word. sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. I a) iMilfAM6BL At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) t&amp;quot; I fAfifi II this CLASSIFIER institute very famous (This institute is very famous.) correct segmentation for (1b) fifA I I this CLASSIFIER research AUX OR II III. involve of problem very complex he problems involved in this research are very complex.) Two transliterated foreign personal names(TF/V), I FtiVi • A involved in the sentence (2): • IK t±/111 • They will be wrongly broken into pieces of isolated characters if not processed: correct segmentation for (2) I EVLA I VA I I flisJ I accompany TFN1 president visit of I 01 I • IK Flit • have premier TFN2 (Visitors accompanying the president TFN1 include the premier TFN2, ...) wrong segmentation for (2) I VE I 31E I iYJ I JIiVIHI1I - F Itt101 • IThI*16— The sentence (3) contains a Chinese personal 1 1 9 name(CN) : IPIMMVIA. We have: correct segmentation for (3) tit CN beautiful (CN is beautiful) wrong segmentation for (3) I ?NV I only clear ChineseSURNAME touching /* logically ill-formed sentence */ POS tagging for Chinese is similar to that of English, except that an English tagger only need to tag one word sequence for an input sentence, but in the case of Chinese, to get a correct tag sequence for a sentence, a Chinese tagger may be requested to tag more than one word sequences simultaneously due to the presence of segmentation ambiguities. Chinese word segmentation and POS tagging techniques can be found many applications in the real world such as information retrieval, text categorization, text proofreading, OCR, speech recognition and textto-speech conversion systems. For instance, in information retrieval, the incorrect segmentation for the fragment &amp;quot;liblEfi&amp;quot; in (la) and (lb) will definitely cause improper access to the texts involving it. Another typical application is in text-to-speech conversion. The of the sentence (2) will result in the synthesized speeches The (3) may make the word segmentation and POS tagging of the whole sentence totally wrong, and further, the pronunciation of the character *. totally wrong (*. should be pronounced it is referred to a surname, whereas as if adjective or adverb). 2. The Complexity of the Task Combinatorial Explosion 1: Word Segmentation Candidate Space The number of possible segmentations for some sentences may be rather large. Observe: rri RI Etig tit totally 76 possible segmentations will be found if we simply match the sentence with a dictionary: 1 ) I TO I It a 44 I +RI I VII I Eq5 I 4+4 I I P14 I IN* I gilt I 544 I +4 I (seg76) 5 I 44 I +4 I Fig.1 shows the word segmentation candidate space for the sentence (4). The situation will be even complicated as unknown words is under consideration(Fig.2). Generally, segmentation ambiguities can be classified into three categories: (a) ambiguities among common words(refer to all arcs in Fig.1) (b) ambiguities among unknown words(see arcs of representing candidates for Chinese place name and for Chinese personal names in Fig.2) (c) ambiguities among common words and unknown words(see arcs across Chinese personal name &amp;quot;WMA&amp;quot;, &amp;quot;4.M.A&amp;quot; the arc across common word &amp;quot;&amp;quot;(love, like) in Fig.2) In our experience, ambiguities of type (a) will cause about 3% loss on the precision rate of segmentation in the condition of making use of maximal matching strategy, one of the most popular employed in word segmentation type (b) and (c) about 10.0% loss if the processing of unknown words is ignored (unfortunately, type (b) and (c) have received less attention than type (a) in the literature). 4 5J11 6 7 RI Corrmon words Fig.1 The word segmentation candidate space 10 120 t z</abstract>
<phone confidence="0.648135">3 4 5 6 7</phone>
<title confidence="0.950317666666667">Common words Candidates for Chinese Place Names Candidates for Chinese Personal Names</title>
<abstract confidence="0.8814606">Fig.2 The word segmentation candidate space regarding unknown words a 9 Fig.3 The POS tagging candidate space a N</abstract>
<phone confidence="0.552557">1=9 4 7 94 10</phone>
<title confidence="0.893885">Words Tags Combinatorial Explosion 2: POS Tagging Candidate Space</title>
<author confidence="0.364642">Given that</author>
<abstract confidence="0.991884708661417">TAG(A) = {vgm, qnq, ngm} TAG(J) = {vgm, ns} TAG() = (j, dm, vgm) TAG(111) = {ngm, ns} TAG(*) = {ngm, k} TAG(T11) = {vgm, urn, pgm} TAG(E) = {vgm, ngm} TAG(5) = {ngm) TAG(44) = {ngn} TAG(4) = {ngm, vgm, qnq} we will get 1296 possible tag sequences solely for seg(76) in the sentence 4 (Fig.3). Combinatorial Explosion I x Combinatorial Explosion 2: An Integrated Model We find out through experiments that the word segmentation and POS tagging are mutually interacted, the performance of the both will increase if they are integrated together[l 8]. Scholars ever tried to do so. The method reported in [11] is: (a) finding out the Nbest segmentation candidates explicitly in terms of word frequency and length; (b) POS tagging each of the N-best segmentation candidates, resulting in the Nbest tag sequences accordingly; and (c) using a score with weighted contributions from (a) and (b) to select the best solution. Note that the model used in (a) is just word unigram, and (a) and (b) are being done successively (denoted as &amp;quot;(a)+(b)&amp;quot;). It is a kind of pseudo-integration. More truly one, in our point of view, should be: (a) taking all segmentation possibilities into account; (b) expanding every segmentation candidate of the input sentence into a number of tag sequences one by one, deriving a considerable huge segmentation and tagging candidate space; and (c) seeking the optimal path over such space with a bigram model, obtaining then both word segmentation and POS tagging result from the path 121 found. In the case, (a) and (b) are being done simultaneously (denoted by &amp;quot;(a)ll(b)&amp;quot;). We regard this as a basic strategy and testbed for conducting our system. Obviously, a much more serious combinatorial problem is encountered here. 3. CSeg&amp;Tag1.0: System Architecture and Algorithm Design Although great efforts have been paid to the related researches by Chinese information processing community in the last decade, we still have not a practical word segmenter and POS tagger at hand yet. What is the problem? The crucial reason, we believe, lies in the &amp;quot;knowledge&amp;quot;. As indicated in section 2, we meet a very serious difficulty, without relevant knowledge, even humanbeings will definitely fail to solve it. The focus of the research should be no longer solely on the &apos;pure&apos; or &apos;new&apos; formal algorithms — no matter what it will be, instead, what is urgently required is on two issues, i.e., (1) what sorts of and how many knowledges are needed; and (2) how these various konwledges can be represented, extracted, and cooperatively mastered, in a system. This is also the philosophy in designing Cseg&amp;Tag1.0, an integrated system for Chinese word segmentation and POS tagging, which is being developed at the National Key Lab. of Intelligent Technology and Systems, Tsinghua University. The aim of CSeg&amp;Tag is to be able to process unrestricted running texts. Fig.4 gives its architecture. Roughly speaking, Cseg&amp;Tag1.0 can be viewed as a three-level multi-agent(the concept of &amp;quot;agent&amp;quot; means an entity that can make decision independently and communicate with others) system plus some other necessary mechanisms. They are: (I) agents at the low level for treating unknown words; (2) a competition agent at the intermediate level for resolving conflicts among low level agents; (3) a bigram-based agent at the high level for coping with all the remaining ambiguities; (4) mechanisms employing the so-called &amp;quot;global statistics&amp;quot; and &amp;quot;local statistics&amp;quot; (cache); and (5) a rule base. We will introduce them briefly in turn(the detailed discussion of each part is beyond the scope of this paper). 3.1. Agents at the Low Level for Treating Unknown Words The types of unknown words CSeg&amp;Tag1.0 concerns include personal names(C1V), transliterated foreign personal names(TFIV) place names(CPN). can not be enumerated in any dictionary even with numerous size. To study unknown words systematically, we build up there relevant banks: CN Bank(CNB): samples TFN Bank(TFNB): samples CPN Bank(CPNB): samples The difficulty of identifying unknown words in Chinese arises from characteristics of them: (a) no any explicit hint such as capitalization in English exists to signal the presence of unknown words, and the character sets used for unknown words are strict subsets of Chinese characters(the size of the complete Chinese character set is 6763), with some degree of decentralized distributions; CN (surname) 729 CN (given name) 3345 TFN 501 CPN 2595 (b) the length of unknown words may vary arbitrarily; (c) some characters used in unknown words may also be used as mono-syllabic common words in texts; (d) the mono-syllabic words identified above fall into the syntactic categories not only notional words but also function words; (e) the character sets are mutually intersected to some extent; (f) some multi-syllabic words may occur in unknown words. our system, three agents, gent, TFNA gent P NA gent set up to be responsible for finding candidates in input texts accordingly. A candidate can be regarded as a &amp;quot;guess&amp;quot; with a value of belief. Three steps are involved in all the three agents in general: Step 1: Applying MM(maximal matching) first as a pre-processing, then finding candidates over the resulting fragments of characters There are two strategies for seeking candidates in the input sentence. One is simply viewing it as character string, finding candidates over whole of it in terms of the relevant character set:</abstract>
<note confidence="0.611677666666667">122 Fig.4 The system architecture of CSeg&amp;Tag1.0 Diclnfo Integration / /</note>
<title confidence="0.819448428571429">Possibilities / TF N( Agent Guesses Bel iefs \ Input Text Agents at Low Level</title>
<abstract confidence="0.820524733333333">SentToBeSeg 7 ,MainDic DomainDio MMSeg 7CName `\ Agent , _ _ \ ■LocalStat _ (Di cManager TempDic, CName KB CP Name PNaMeT\.</abstract>
<title confidence="0.8210162">KB Agent Competiti on Agent -\ Intermediate Level</title>
<author confidence="0.951994">Proper Noun Bank</author>
<affiliation confidence="0.372389"></affiliation>
<title confidence="0.962496666666667">Corpus TCorpus Expanded DAG Disambiguation</title>
<author confidence="0.8166915">r cha</author>
<note confidence="0.607353428571429">B gram POS Bigram -- Results of CSeg&amp;Tag (5a) 1 CN/ CN2 CN3 Many noises will be unnecessarily introduced, as</note>
<abstract confidence="0.995141012195122">(5a). Another way is viewing input as string, applying as a preprocessing first, then trying to find candidates only over the fragments composed of successive single characters: 3E 1! I I 1Z I * q4g.1 CN1 will come attend China I I W9 I science journal of celebration (CN1 will come here and attend the celebration of the journal of &amp;quot;Science in China&apos;) Step 2: Drawing back some multi-syllabic words into the candidates Look at: (His name is Buckinghamshire) 123 should be drawn back and into the Such multi-syllabic words can be collected from the banks. Step 3: Further determining boundaries of the candidates All of the useful information, usually languagespecific and unknown-word-type-specific, are activated to perform this work. internal information (i) statistical information Each candidate will be assigned a belief according to the statistics derived from the banks. (ii) structural information absolute closure characters for They will definitely belong to a Chinese surname once falling into the control domain of it: ZAN relative closure characters for In certain conditions, they function as absolute closure characters: CN1 very clever (CN1 is very clever) Intkt_A CN2 clever very (CN2 is very clever) characters for For this sort of characters, possibilities of being included in a name and excluded out of the name must be reserved: 35kI it I 4\iSt CNI read novel is reading a I CN2 like read novel (CN2 likes to read novels) For instance, &amp;quot; 4:&amp;quot; always occurs in the first of given name of as 1,1A5/44 &amp;quot;4TI±:&amp;quot; in (9) will be therefore properly filtered out, leaving the correct one: suffix of be beneficial to locating the boundaries of some unknown words. ==&gt; surname + &amp;quot;Z&amp;quot; + external information (i) statistical information Refer to &amp;quot;global &amp; local statistics&amp;quot;. (ii) structural information x0: &amp;quot;IA &lt; j &lt;title&gt; &amp;quot; fragment (10) will create four &amp;quot;Vi&amp;quot;iffit±*&amp;quot;&amp;quot;#*&amp;quot;&amp;quot;ti t&amp;quot;, but only &amp;quot;4±44,&amp;quot; passes under the constraint of pattern x0. 3.2. The Competition Agent at the Intermediate Level for Resolving Conflicts among Low Level Agents The candidates given independently by three agents may contradict each other on some occasions We observe from 497 randomly selected that low level agents generate unknown word candidates in 17.7% of them(Fig.5), and, the probability of conflicting is about 88% if candidate number is 2 and 100% if it is greater than 2(Fig.6). agent established to deal with such conflicts. The evaluation is based on all from various resources, that No. of sentences</abstract>
<date confidence="0.112411">01234567</date>
<note confidence="0.6064307">No. of candidates in a sentence Fig.5 The distribution of candidates in sentences 35 30 250 200 15 10 50 124</note>
<phone confidence="0.574558">4 5 6 7</phone>
<abstract confidence="0.98755951923077">No. of candidates in a sentence Fig.6 The probability of conflicting among unknown word candidates Eval(candidate)= A (InterStatisInfo, InterStrucInfo,ExterStatisInfo,ExterStrucInfo) About 77% conflicts can be solved by this agent. The output of it, including correct candidates and some unsolved conflicts, are then sent to a high level agent for further processing. 3.3. The Bigram-based Agent at the High Level for Coping with all the Remaining Ambiguities The conventional POS bigram model and a dynamic programming algorithm are used in this high level agent. The searching space of the algorithm is the complete combination of all possible word and tag sequences, and the complexity of it can be theoretically and experimentally proved still polynomial. 3.4. Global Statistics &amp; Local Statistics Global statistics are referred to statistical data derived from very large corpora, as mutual information and t-test in Cseg&amp;Tag1.0, whereas local statistics to those derived from the article in which the input sentence stands — like a chche. Both of them take characters as basic unit of computation, because any Chinese word is exactly a combination of characters in one way or another. Experiments by us reveal that they(especially the latter) are quite important in the resolution of ambiguities and unknown words. Refer to &amp;quot;tl.&amp;quot; and (8a) and (8b) as an The both are reasonable given the isolated sentence only, but by cache, it is in fact a collection of ambiguous entities unsolved so far in the current input article, the algorithm will have more evidence to make decision. We will discuss this in depth in another paper. 3.5. Rule Base It contains knowledge in rule form, including almost all word formation rules in Chinese, a number of simple but very reliable syntactic rules, and some heuristic rules. 4. Experimental Results Cseg&amp;Tag1.0 is implemented in Windows environment with Visual C++I.0 programming language. The dictionary supporting it contains 60,133 word entries along with word frequencies, parts of speech, and various types of information necessary for the purpose of segmentation and tagging. The size of manually tagged corpus for training the bigram model is about 0.4 M words, and that of the raw corpus for achieving global statistics is 20M characters. We define: precision= wordscorrectly-segmented The preliminary open tests show that for CSeg&amp;Tag1.0, the word segmentation precision is ranging from 98.0% to 99.3%, POS tagging precision from 91.0 to 97.1%, and the recall and precision for unknown words are from 95.0% to 99.0% and from 87.6% to 95.3% respectively. The speed is about 100 characters per second on Pentium 133. A running sample of Cseg&amp;Tag1.0 is demonstrated as follows(tokens underlined in the output are unknown words successfully identified while those in bold are words wrongly tagged): [input text] ( VAN. [output] \sd 6:tMi i*vd \np (\xp 1&amp;111\nP\xP VITVIP ) \xP Otb\i 111\sd Probability of conflicting (%) 100- 60- 40- 20 0 Tag. precision= 125 _ELF \td t\vgm OCIM iffi\tdngd , \xp \ed mgR\np\xp \rip \xp fl,M4*\np, , \xp Ar.4; \xp \np \xp np TYOR\np, \xp riirngd , \xp It should be pointed out that Cseg&amp;Tag1.0 is just the result of the first round of our investigation. To get our goal, i.e., developing a system with approximately 99% segmentation precision and 95% tagging precision for any running Chinese texts in any cases, quite a lot of work is still waiting there to be done. What we can say now is that we believe it is possible to reach this destination in a not very far future, and we know more than before about how to approach it. The second round work is ongoing currently, with emphasis on two aspects: (1) to promote the algorithm, particularly those associated with agents and cache, carefully; (2) to improve the quality of knowledge base by both enlarging the size of the relevant resources(textual corpora, unknown word banks, etc.) and refining the lexicon, tagged corpus and the rule base. Acknowledgment</abstract>
<note confidence="0.902865692307692">This research is supported by the National Natural Science Foundation of China and by the Youth Science Foundation of Tsinghua University, Beijing, P.R.China. References [1] N.Y. Liang, &amp;quot;Automatic Chinese Text Word System — CDWS&amp;quot;, of Chinese Processing, Vol.1, 1987 [2] C.K. Fan, W.H. Tsai, &amp;quot;Automatic Word Identification in Chinese Sentences by the Relaxation Processing of Chinese and Languages, No.1, 1988 [3] C. Kit, Y. Liu, N. Liang, &amp;quot;On Methods of Chinese Word Segmentation&amp;quot;, of Chinese Processing, No.1, 1989 [4] J.S. Zhang, Z.D. Chen, S.D. Chen, &amp;quot;A Method of Word Identification for Chinese by Constraint Satisfaction and Statistical Optimization Techniques&amp;quot;, of ROCLING-IV, 1991 [5] J.S. Chang, S. Chen, Y. Zheng, X.Z. Liu, S.J. Ke, &amp;quot;A Multiple-Corpus Approach to Identification of Surname-names&amp;quot;, of Natural Language Pacific Rim Symposium, 1991 [6] B.Y. Lai, S. Lun, C.F. Sun, M.S. Sun, &amp;quot;A Tagging- Based First Order Markov Model Approach to Chinese Identification&amp;quot;, of ICCPCOL-92,</note>
<date confidence="0.58803">1992</date>
<note confidence="0.865394477272727">[7] K.J. Chan, S.H. Liu, &amp;quot;Word Identification for Chinese Sentences&amp;quot;, of COLING-92, Nantes, 1992 [8] L.J. Wang, et al. &amp;quot;Recognizing Unregistered Names Mandarin Word Identification&amp;quot;, of COLING- 1992 [9] M.S. Sun, B.Y. Lai, S. Lun, C.F. Sun, &amp;quot;Some Issues on Statistical Approach to Chinese Word of 3rd International Conference Chinese Information Processing, 1992 [10] C.H. Chang, C.D. Chen, &amp;quot;HMM-based Part-of- Tagging for Chinese Corpora&amp;quot;, of the on Very Large Corpora, 1993 [11] C.H. Chang, C.D. Chen, &amp;quot;A Study on Integrating Chinese Word Segmentation and Part-of-Speech of COUPS, No.2, 1993 [12] M.S. Sun and W.J. Zhang, &amp;quot;Transliterated English Identification in Chinese Research &amp; Application, Language Institute Press, Beijing, 1993 [13] M.S. Sun, C.N. Huang, H.Y. Gao, J. Fang, &amp;quot;Identifying Chinese Names in Unrestricted Texts&amp;quot;, of COUPS, No.2, 1994 [14] R. Sproat, C. Shih, W. Gale, N. Chang, &amp;quot;A Stochastic Finite-State Word Segmentation Algorithm Chinese&amp;quot;, of 32nd Annual Meeting of ACL, New Mexico, 1994 [15] D.Y. Shen, M.S. Sun and C.N. Huang, &amp;quot;Identifying Chinese Place Names in Unrestricted Texts&amp;quot;, Computational Linguistics: Research &amp; Development, Tsinghua University Press, Beijing, 1995 [16] J.Y. Nie, M.L. Hannan, W. Jin, &amp;quot;Unknown Word Detection and Segmentation of Chinese Using and Heuristic Knowledge&amp;quot;, COUPS, No.1 , 1995 [17] M.S. Sun, B.K. T.sou, &amp;quot;Resolving Ambiguities in Word Segmentation&amp;quot;, of PACLIC-10, Hong Kong, 1995 [18] M.S. Sun, C.N. Huang, &amp;quot;Word Segmentation and Part-of-speech Tagging for Unrestricted Chinese Tutorial the Conference on Computing&apos;96, 1996 126</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>N Y Liang</author>
</authors>
<title>Automatic Chinese Text Word Segmentation System — CDWS&amp;quot;,</title>
<date>1987</date>
<journal>Journal of Chinese Information Processing,</journal>
<location>Vol.1, No.2,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[1]</marker>
<rawString>N.Y. Liang, &amp;quot;Automatic Chinese Text Word Segmentation System — CDWS&amp;quot;, Journal of Chinese Information Processing, Vol.1, No.2, 1987</rawString>
</citation>
<citation valid="true">
<authors>
<author>C K Fan</author>
<author>W H Tsai</author>
</authors>
<title>Automatic Word Identification in Chinese Sentences by the Relaxation Technique&amp;quot;,</title>
<date>1988</date>
<booktitle>Computer Processing of Chinese and Oriental Languages,</booktitle>
<location>Vol.!, No.1,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[2]</marker>
<rawString>C.K. Fan, W.H. Tsai, &amp;quot;Automatic Word Identification in Chinese Sentences by the Relaxation Technique&amp;quot;, Computer Processing of Chinese and Oriental Languages, Vol.!, No.1, 1988</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Kit</author>
<author>Y Liu</author>
<author>N Liang</author>
</authors>
<title>On Methods of Chinese Automatic Word Segmentation&amp;quot;,</title>
<date>1989</date>
<journal>Journal of Chinese Information Processing,</journal>
<location>Vol.3, No.1,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[3]</marker>
<rawString>C. Kit, Y. Liu, N. Liang, &amp;quot;On Methods of Chinese Automatic Word Segmentation&amp;quot;, Journal of Chinese Information Processing, Vol.3, No.1, 1989</rawString>
</citation>
<citation valid="true">
<authors>
<author>J S Zhang</author>
<author>Z D Chen</author>
<author>S D Chen</author>
</authors>
<title>A Method of Word Identification for Chinese by Constraint Satisfaction and Statistical Optimization Techniques&amp;quot;,</title>
<date>1991</date>
<booktitle>Proc. of ROCLING-IV, Kenting,</booktitle>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[4]</marker>
<rawString>J.S. Zhang, Z.D. Chen, S.D. Chen, &amp;quot;A Method of Word Identification for Chinese by Constraint Satisfaction and Statistical Optimization Techniques&amp;quot;, Proc. of ROCLING-IV, Kenting, 1991</rawString>
</citation>
<citation valid="true">
<authors>
<author>J S Chang</author>
<author>S Chen</author>
<author>Y Zheng</author>
<author>X Z Liu</author>
<author>S J Ke</author>
</authors>
<title>A Multiple-Corpus Approach to Identification of Chinese Surname-names&amp;quot;,</title>
<date>1991</date>
<booktitle>Proc. of Natural Language Processing Pacific Rim Symposium,</booktitle>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[5]</marker>
<rawString>J.S. Chang, S. Chen, Y. Zheng, X.Z. Liu, S.J. Ke, &amp;quot;A Multiple-Corpus Approach to Identification of Chinese Surname-names&amp;quot;, Proc. of Natural Language Processing Pacific Rim Symposium, Singapore, 1991</rawString>
</citation>
<citation valid="false">
<authors>
<author>B Y Lai</author>
<author>S Lun</author>
<author>C F Sun</author>
<author>M S Sun</author>
</authors>
<title>A TaggingBased First Order Markov Model Approach to Chinese Word Identification&amp;quot;,</title>
<booktitle>Proc. of ICCPCOL-92,</booktitle>
<location>Florida,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[6]</marker>
<rawString>B.Y. Lai, S. Lun, C.F. Sun, M.S. Sun, &amp;quot;A TaggingBased First Order Markov Model Approach to Chinese Word Identification&amp;quot;, Proc. of ICCPCOL-92, Florida,</rawString>
</citation>
<citation valid="true">
<authors>
<author>K J Chan</author>
<author>S H Liu</author>
</authors>
<title>Word Identification for Mandarin Chinese Sentences&amp;quot;,</title>
<date>1992</date>
<booktitle>Proc. of COLING-92,</booktitle>
<location>Nantes,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[7]</marker>
<rawString>K.J. Chan, S.H. Liu, &amp;quot;Word Identification for Mandarin Chinese Sentences&amp;quot;, Proc. of COLING-92, Nantes, 1992</rawString>
</citation>
<citation valid="true">
<authors>
<author>L J Wang</author>
</authors>
<title>Recognizing Unregistered Names for Mandarin Word Identification&amp;quot;,</title>
<date>1992</date>
<booktitle>Proc. of COLING92,</booktitle>
<location>Nantes,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[8]</marker>
<rawString>L.J. Wang, et al. &amp;quot;Recognizing Unregistered Names for Mandarin Word Identification&amp;quot;, Proc. of COLING92, Nantes, 1992</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Sun</author>
<author>B Y Lai</author>
<author>S Lun</author>
<author>C F Sun</author>
</authors>
<title>Some Issues on Statistical Approach to Chinese Word Identification&amp;quot;,</title>
<date>1992</date>
<booktitle>Proc. of 3rd International Conference on Chinese Information Processing,</booktitle>
<location>Beijing,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[9]</marker>
<rawString>M.S. Sun, B.Y. Lai, S. Lun, C.F. Sun, &amp;quot;Some Issues on Statistical Approach to Chinese Word Identification&amp;quot;, Proc. of 3rd International Conference on Chinese Information Processing, Beijing, 1992</rawString>
</citation>
<citation valid="true">
<authors>
<author>C H Chang</author>
<author>C D Chen</author>
</authors>
<title>HMM-based Part-ofSpeech Tagging for Chinese Corpora&amp;quot;,</title>
<date>1993</date>
<booktitle>Proc. of the Workshop on Very Large Corpora,</booktitle>
<location>Ohio,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[10]</marker>
<rawString>C.H. Chang, C.D. Chen, &amp;quot;HMM-based Part-ofSpeech Tagging for Chinese Corpora&amp;quot;, Proc. of the Workshop on Very Large Corpora, Ohio, 1993</rawString>
</citation>
<citation valid="false">
<authors>
<author>C H Chang</author>
<author>C D Chen</author>
</authors>
<title>A Study on Integrating Chinese Word Segmentation and Part-of-Speech Tagging&amp;quot;,</title>
<journal>Communications of COUPS,</journal>
<volume>3</volume>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
<context position="7028" citStr="[11]" startWordPosition="1157" endWordPosition="1157">AG(A) = {vgm, qnq, ngm} TAG(J) = {vgm, ns} TAG() = (j, dm, vgm) TAG(111) = {ngm, ns} TAG(*) = {ngm, k} TAG(T11) = {vgm, urn, pgm} TAG(E) = {vgm, ngm} TAG(5) = {ngm) TAG(44) = {ngn} TAG(4) = {ngm, vgm, qnq} we will get 1296 possible tag sequences solely for seg(76) in the sentence 4 (Fig.3). Combinatorial Explosion I x Combinatorial Explosion 2: An Integrated Model We find out through experiments that the word segmentation and POS tagging are mutually interacted, the performance of the both will increase if they are integrated together[l 8]. Scholars ever tried to do so. The method reported in [11] is: (a) finding out the Nbest segmentation candidates explicitly in terms of word frequency and length; (b) POS tagging each of the N-best segmentation candidates, resulting in the Nbest tag sequences accordingly; and (c) using a score with weighted contributions from (a) and (b) to select the best solution. Note that the model used in (a) is just word unigram, and (a) and (b) are being done successively (denoted as &amp;quot;(a)+(b)&amp;quot;). It is a kind of pseudo-integration. More truly one, in our point of view, should be: (a) taking all segmentation possibilities into account; (b) expanding every segmen</context>
</contexts>
<marker>[11]</marker>
<rawString>C.H. Chang, C.D. Chen, &amp;quot;A Study on Integrating Chinese Word Segmentation and Part-of-Speech Tagging&amp;quot;, Communications of COUPS, Vol.3, No.2,</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Sun</author>
<author>W J Zhang</author>
</authors>
<title>Transliterated English Name Identification</title>
<date>1993</date>
<booktitle>in Chinese Texts&amp;quot;,Computational Linguistics: Research &amp; Application, Beijing Language</booktitle>
<publisher>Institute Press,</publisher>
<location>Beijing,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[12]</marker>
<rawString>M.S. Sun and W.J. Zhang, &amp;quot;Transliterated English Name Identification in Chinese Texts&amp;quot;,Computational Linguistics: Research &amp; Application, Beijing Language Institute Press, Beijing, 1993</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Sun</author>
<author>C N Huang</author>
<author>H Y Gao</author>
<author>J Fang</author>
</authors>
<title>Identifying Chinese Names in Unrestricted Texts&amp;quot;,</title>
<date>1994</date>
<journal>Communications of COUPS,</journal>
<volume>4</volume>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[13]</marker>
<rawString>M.S. Sun, C.N. Huang, H.Y. Gao, J. Fang, &amp;quot;Identifying Chinese Names in Unrestricted Texts&amp;quot;, Communications of COUPS, Vol.4, No.2, 1994</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Sproat</author>
<author>C Shih</author>
<author>W Gale</author>
<author>N Chang</author>
</authors>
<title>A Stochastic Finite-State Word Segmentation Algorithm for Chinese&amp;quot;,</title>
<date>1994</date>
<booktitle>Proc. of 32nd Annual Meeting of ACL,</booktitle>
<location>New</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[14]</marker>
<rawString>R. Sproat, C. Shih, W. Gale, N. Chang, &amp;quot;A Stochastic Finite-State Word Segmentation Algorithm for Chinese&amp;quot;, Proc. of 32nd Annual Meeting of ACL, New Mexico, 1994</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Y Shen</author>
<author>M S Sun</author>
<author>C N Huang</author>
</authors>
<title>Identifying Chinese Place Names in Unrestricted Texts&amp;quot;,</title>
<date>1995</date>
<journal>Computational Linguistics: Research &amp; Development, Tsinghua</journal>
<publisher>University Press,</publisher>
<location>Beijing,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[15]</marker>
<rawString>D.Y. Shen, M.S. Sun and C.N. Huang, &amp;quot;Identifying Chinese Place Names in Unrestricted Texts&amp;quot;, Computational Linguistics: Research &amp; Development, Tsinghua University Press, Beijing, 1995</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Y Nie</author>
<author>M L Hannan</author>
<author>W Jin</author>
</authors>
<title>Unknown Word Detection and Segmentation of Chinese Using Statistical and Heuristic Knowledge&amp;quot;,</title>
<date>1995</date>
<journal>Communications of COUPS,</journal>
<volume>5</volume>
<location>No.1 ,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[16]</marker>
<rawString>J.Y. Nie, M.L. Hannan, W. Jin, &amp;quot;Unknown Word Detection and Segmentation of Chinese Using Statistical and Heuristic Knowledge&amp;quot;, Communications of COUPS, Vol.5, No.1 , 1995</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Sun</author>
<author>B K T sou</author>
</authors>
<title>Resolving Ambiguities in Chinese Word Segmentation&amp;quot;,</title>
<date>1995</date>
<booktitle>Proc. of PACLIC-10,</booktitle>
<location>Hong Kong,</location>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[17]</marker>
<rawString>M.S. Sun, B.K. T.sou, &amp;quot;Resolving Ambiguities in Chinese Word Segmentation&amp;quot;, Proc. of PACLIC-10, Hong Kong, 1995</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Sun</author>
<author>C N Huang</author>
</authors>
<title>Word Segmentation and Part-of-speech Tagging for Unrestricted Chinese Texts&amp;quot;,</title>
<date>1996</date>
<booktitle>A Tutorial on the International Conference on Chinese Computing&apos;96,</booktitle>
<contexts>
<context position="1621" citStr="[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]" startWordPosition="236" endWordPosition="236">.3% respectively. The processing speed is about 100 characters per second on Pentium 133 PC. The work of improving the performance of the system is still ongoing. 1. Background and the Related Issues In Chinese, there do not exist delimiters, such as spacing in English, to explicitly indicate boundaries between words. Chinese word segmentation is therefore proposed as the first step in any Chinese information processing systems. Then we still face the problem of part-of-speech tagging. These two issues have been intensively studied by the Chinese language computing community in the last decade[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. Unfortunately however, no word segmenter and POS tagger for Chinese with satisfactory performance in treating unrestricted texts are available so far. Two main obstacles block the progress of Chinese word segmentation: one is ambiguity, another is unknown word. The sentences in (1) are examples of ambiguity and the sentence (2) and (3) examples of unknown word. ( I a) A-tiikANIRA. (Ib) iMilfAM6BL friJEIRV—P. At least two explanations are possible for the fragment &amp;quot;OD-I&amp;quot;&apos; Pfi&amp;quot; in (1), resulting in two different segmentations: correct segmentation for (1a) I t&amp;quot; I fAfifi II this CLASSIFIER inst</context>
</contexts>
<marker>[18]</marker>
<rawString>M.S. Sun, C.N. Huang, &amp;quot;Word Segmentation and Part-of-speech Tagging for Unrestricted Chinese Texts&amp;quot;, A Tutorial on the International Conference on Chinese Computing&apos;96, Singapore, 1996</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>