<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000300">
<note confidence="0.8399">
TRANSPORTABLE NATURAL-LANGUAGE INTERFACES: PROBLEMS AND TECHNIQUES
Barbara J. Grosz
</note>
<sectionHeader confidence="0.431886" genericHeader="method">
Artificial Intelligence Center
</sectionHeader>
<affiliation confidence="0.776162333333333">
SRI International, Menlo Park, CA 94025
Department of Computer and Information Sciencel
University of Pennsylvania, Philadephia, PA 19104
</affiliation>
<sectionHeader confidence="0.964456" genericHeader="method">
I OVERVIEW
</sectionHeader>
<bodyText confidence="0.997869073684211">
I will address the questions posed to the
panel from within the context of a project at SRI,
TEAM [Grosz, 1982b], that is developing techniques
for transportable natural-language interfaces.
The goal of transportability is to enable
nonspecialists to adapt a natural-language
processing system for access to an existing
conventional database. TEAM is designed to
interact with two different kinds of users.
During an acquisition dialogue, a database expert
(DBE) provides TEAM with information about the
files and fields in the conventional database for
which a natural-language interface is desired.
(Typically this database already exists and is
populated, but TEAM also provides facilities for
creating small local databases.) This dialogue
results in extension of the language-processing
and data access components that make it possible
for an end user to query the new database in
natural language.
A major benefit of using natural language is
that it shifts onto the system the burden of
mediating between two views of the data--the way
in which it is stored (the &amp;quot;database view&amp;quot;) and
the way in which an end user thinks about it (the
&amp;quot;user&apos;s view&amp;quot;). Basically, database access is
done in terms of files, records, and fields, while
natural-language expressions refer to the same
information in terms of entities and relationships
in the world.
In my discussion, I will assume the use of a
general grammar of English rather than a semantic
grammar, and also that the interpretation of
queries will pass through an intermediate stage in
which a database-independent representation of the
meaning of the query is derived before
constructing the formal database query. This is
because systems based on semantic grammars
amalgamate irformation about language, about the
domain, d about the database in ways that make
it difficult to transfer those systems to new
databases. I will use the term &amp;quot;conceptual
schema&amp;quot; to refer to the internal representation of
1 Currently visiting under the auspices of the
Program in Cognitive Science at the University of
Pennsylvania.
information about the entities in the domain of
discourse and the relationships that can hold
among them,2 and &amp;quot;database schema&amp;quot; to refer to the
encoding of information about the way concepts in
the conceptual schema map onto the structures of
the database. In addition, I will use the term
&amp;quot;logical form&amp;quot; to refer to the representation of
the literal meaning of an expression in the
context of an utterance.
The insistence on transportability (which
distinguishes TEAM from previous systems such as
LADDER [Hendrix et al., 19781, LUNAR [Woods,
Kaplan, and Webber, 1972], PLANES (Waltz, 1975],
REL [Thompson, 1975], and CHAT [Warren, 1981])
entails two major consequences for the design of a
natural-language interface. First, the database
cannot be restructured to make the way in which it
stores data more compatible with the way in which
a user would pose his questions. Second, because
the DBE cannot be expected to know about the
internal structure of the conceptual schema and
the database schema, these must be organized so
that the information they encode about any
particular database and its corresponding domain
can be obtained systematically (and, therefore,
automatically).
These differences are crucial to any
consideration of the issues before this panel.
Although, for any particular database, it may be
possible to handcraft solutions to each problem,
such an approach is not viable for a transportable
system. Handcrafting requires expertise in
computational linguistics, knowledge of the
internal structures and algorithms used in an
interface, and so forth--none of which the DBE can
be expected to possess. In addition, interfacing
to an existing conventional database introduces
many problems caused by the difference between the
database view and the end user&apos;s view. Many of
these problems can be avoided if one is allowed to
design the database as well as the natural-
language system. However, given the prevalence of
existing conventional databases, approaches that
make this assumption are likely to have limited
applicability in the near future.
Most of the issues the panel has been asked
to address arise (or have analogues) in any
2 This schema is a restricted form of the standard
Al knowledge base.
</bodyText>
<page confidence="0.998864">
46
</page>
<bodyText confidence="0.9979881">
application of natural-language processing. In
the sections that follow, my objective in
discussing each of these issues will be to point
out where I see the constraints of the database
query task as simplifying the general problem and
where, on the other hand, transportability (and
the way in which database systems typically
structure information and view the world) makes
things more difficult. Inevitably, I will be
raising at least as many questions as I answer.
</bodyText>
<sectionHeader confidence="0.92685" genericHeader="method">
II AGGREGATES
</sectionHeader>
<bodyText confidence="0.999913416666667">
It is useful to separate problems involving
aggregates into two categories: (1) those that
involve mapping from natural-language to logical
form, and (2) those that involve translating from
logical form into a formal database query. The
examples presented to the panel have elements of
each of these.
In addressing the question of logical form, I
first want to note how similar &amp;quot;how many&amp;quot; and &amp;quot;how
much&amp;quot; questions are to other degree questions
(e.g., &amp;quot;How tall is John?&amp;quot;). Consider, for
example,
</bodyText>
<listItem confidence="0.912873333333333">
(1) James is old./ How old is James?
(2) The department is big./ How big is the
department?
(3) The department has many employees./ How
many employees does the department have?
(4) The ship is heavy./ How heavy is the
ship?
(5) The ship is carrying much coal./ How
much coal is the ship carrying?
</listItem>
<bodyText confidence="0.990377625">
Hence, it seems that the logical forms for the
queries ought to bear a close resemblance. In
interpreting degree questions, the language-
processing component of TEAM (Grosz et al.,
1982a], applies a higher-order degree operator to
the predicate that underlies the adjective. For
example, the logical form for &amp;quot;How tall is John?&amp;quot;
would be
</bodyText>
<equation confidence="0.6151">
(WHAT H (HEIGHT H) ((DEGREE TALL) JOHN H))
</equation>
<bodyText confidence="0.9998907">
The problem in transferring this treatment to &amp;quot;how
many&amp;quot; and &amp;quot;how much&amp;quot; questions is that while
adjectives like &amp;quot;heavy&amp;quot; are usually treated as
predicates, &amp;quot;many&amp;quot; is usually treated as a
quantifier. So, if &amp;quot;how&amp;quot; is treated by uniformly
applying some kind of higher-order degree
operator, then that operator has to apply to both
predicates and quantifiers. Another possibility
would be to apply the degree operator to an entire
formula, as in
</bodyText>
<equation confidence="0.641715">
(WHAT H (HEIGHT H) ((DEGREE (TALL JOHN) H))
</equation>
<bodyText confidence="0.999902240740741">
rather than just to the head of the formula.
Whether this can be made to work, however, depends
on whether a satisfactory analysis can be provided
when the formula consists of more than just a
predicate and its arguments.
The problem of an appropriate logical form
for these questions is not affected by the need
for transportability. However, transportability
does make the problem of translating from logical
form into a database query more difficult. Fields
that store count totals, like NUMBER-OF-EMPLOYEES,
are semantically complex in much the same way as
the CHILD-OF-ALUMNUS field (the predicate encoded
by a count field can be defined in terms of a
count operator and the domain entities that are to
be counted), and they present similar problems for
transportability and database access (see
section 5). The question therefore (to which I do
not have an answer) is whether this kind of
semantically complex field is any simpler to
handle than the more general case.
In addition, some ways of storing information
about aggregates in these semantically complex
fields may require inferences to be drawn to
answer certain kinds of queries. For example, if
the number of employees in a department must be
calculated from the number of employees in each
office of the department, answering queries about
the number of employees in a department will
require reasoning about the part/whole
relationship between offices and departments and
how the number of employees in a department
depends on that relationship. A general treatment
of such cases would require both the acquisition
of information about the part/whole relationship
implicitly encoded in the database, and the
ability to infer that (in this case) the count for
the whole is the sum of the counts for the parts.
The need for drawing inferences arises with
mass fields as well as with count fields. For
example, consider a database of ships and their
cargoes, with separate entries for the different
kinds of cargo a ship is carrying. Then an answer
to &amp;quot;How much cargo is the ship carrying?&amp;quot; will
require the same kind of totaling operation as
does the query about the number of employees in
the above example. It may be possible to handle
the most straightforward cases of these phenomena
by adding special purpose information (&amp;quot;hacks&amp;quot; to
compensate for the lack of theorem-proving
capabilites) for each operator corresponding to a
data access system aggregate function, specifying
how it interacts with part/whole relationships
(AVERAGE will work differently from TOTAL).
</bodyText>
<page confidence="0.998291">
47
</page>
<sectionHeader confidence="0.788318" genericHeader="method">
III TIME AND TENSE
</sectionHeader>
<bodyText confidence="0.999978923076923">
The context of database querying does not
seem to make questions concerning time and tense
any easier than they are for linguistics or
philosophy in general; in fact, they are actually
more difficult because of the extensional nature
of the temporal information stored in a database.
It does not appear useful, even in the
database query context, to have different
representations for sentences involving concepts
related to points in time and those involving
intervals. The same natural-language expressions
about time may be used to refer to a given time as
either a point or an interval. Consider,
</bodyText>
<listItem confidence="0.995604">
(6) How far did the Fox travel yesterday?
(yesterday as an interval over which an
event extends)
(7) Who was the officer of the day
yesterday? (yesterday as a point in a
sequence of days)
</listItem>
<bodyText confidence="0.999884571428571">
It is fairly easy to imagine databases against
which each of these queries might be posed and, in
each case, &amp;quot;yesterday&amp;quot; might correspond either to
a single database entry or to a set of entries
spanning an interval. Furthermore, the same verb
can be used to refer to activities in terms of
points or intervals--e.g.,
</bodyText>
<listItem confidence="0.990103666666667">
(8) The ship is sailing to Naples.
(interval)
(9) The ship is sailing tomorrow. (point)
</listItem>
<bodyText confidence="0.995843293103448">
--and the same event may be viewed as occurring
during an interval or at some single point [Moore,
1981]. (See Prince [1982] for an interesting
discussion of the differences between (9) and &amp;quot;The
ship sails tomorrow.&amp;quot;)
On the issue of interpolation, we should note
that questions involving temporal attributes also
involve at least one other attribute of an entity
(e.g., its location). To handle adequately
queries about times not explicitly represented in
the database, such factors must be taken into
account as the time scale over which an attribute
changes (e.g., a ship&apos;s position changes more
slowly than an airplane&apos;s), and whether or not the
change is linear. In general, this requires
mechanisms for reasoning about temporal
relationships and complex events, mechanisms
normally absent in database systems. Also note
that, even when interpolation is possible,
additional mechanisms are needed to handlP queries
about times beyond the last record. d (I
have been living in Philadelphia for the last four
month , Jut I will not be two months hence.)
All this suggests that naive interpolation is
likely to result in incorrect answers (entities
may even have ceased to exist since the last data
about them was recorded). I believe it is
misleading to provide direct responses involving
such interpolation, because the user has no way of
knowing that the system&apos;s reasoning is only
approximate, or knowing on what it has based its
answer. If the natural-language interface
isolates a user from the manner in which
information is stored, it must compensate by
furnishing sufficient information in its responses
to allow the user to assess their validity. Of
course, this is a more general issue than one
concerning just time, but the appeal of
interpolation (as a simple solution) may mislead
us into thinking we can provide the user with an
answer that later reflection will reveal as worse
than no answer at all.
In an interface designed for a particular
database, special purpose routines may be provided
that take such factors as time scale into account.
The problem is more difficult to deal with for a
transportable natural-language interface, but two
strategies appear possible. One is to provide the
two values of the attribute being queried that
correspond to times that bracket the time
specified in an actual query. The second is to
associate with each attribute-time pairing an
interval over which the attribute value can be
considered to be constant, as well as possibly a
function for interpolating between values and
extrapolating from them. The problem for
transportability, then, is obtaining the requisite
information from the DBE.
</bodyText>
<sectionHeader confidence="0.974367" genericHeader="method">
IV QUANTIFYING INTO QUESTIONS
</sectionHeader>
<bodyText confidence="0.999956375">
The problem of quantifying into questions may
have a simpler solution in the database query
environment than it does in general. Database
queries usually seek an enumeration (as opposed to
queries seeking a description, as in &amp;quot;Which woman
does every Englishman admire most? His mother.&amp;quot;
[Engdahl, 1982]). For such cases, it seems
possible to analyze a question as a REQUEST to
INFORM (an analysis done in [Cohen and
Perrault, 1979] to allow planning of questions,
taking into account plans and goals of both
speakers and hearers), with REQUEST being the
illocutionary-force operator. If this is done, a
quantifier can outscope the INFORM without
outscoping the REQUEST. Thus, the logical form of
&amp;quot;Who commands each ship&amp;quot; would be something like
</bodyText>
<equation confidence="0.5522425">
(REQUEST (EVERY X (SHIP X)
(INFORM &amp;quot;who commands X&amp;quot;)))
</equation>
<page confidence="0.839717">
48
</page>
<sectionHeader confidence="0.419593" genericHeader="method">
V SEMANTICALLY COMPLEX FIELDS
</sectionHeader>
<bodyText confidence="0.999969897959184">
The predicate represented in a semantically
complex field like CHILD-OF-ALUMNUS typically has .
a definition in terms of simpler concepts, namely
an existential quantifier and whatever entity is
being quantified over (in this case ALUMNUS). In
a nontransportable system, some of the variability
of expression that these fields give rise to can
be handled by enriching the conceptual schema
appropriately (e.g., adding to it the class of
alumni). However, as the query &amp;quot;Did either of
John Jones&apos;s parents attend the college?&amp;quot;
illustrates, this by itself is not sufficient in
general.
In extreme cases, sophisticated deductive
capabilities may be necessary to answer questions
that can arise in connection with semantically
complex fields. For example, the BLUEFILE
database (to which LADDER provided an interface)
has a field DOC that records whether or not a ship
has a doctor on board. To answer a query like &amp;quot;Is
there a doctor within 200 miles of Philadelphia?&amp;quot;
requires not only represention of the connection
between a positive value in the DOC field and the
existence of a doctor, but also the ability to
reason that, if a ship that has a doctor on board
is within 200 miles of Philadelphia, then the
doctor himself is within 200 miles of
Philadelphia.
An apparent precondition for the correct
treatment of semantically complex fields is that
the system should have a richer model of the
domain than the model constituted by the database
itself. Konolige [1981] suggests one possible
approach to this in which a metatheory is employed
to describe both the domain of discourse and the
information the database contains. Axioms in the
metalanguage are used to encode things like the
connection between the existence of an alumnus and
a particular value in the CHILD-OF-ALUMNUS field.
It does not seem possible to handle a wide
variety of semantically complex fields in a
transportable system, unless the system is much
richer than typical DB systems (in which case much
more general knowledge acquisition schemes must be
implemented, such as those proposed by Hendrix and
Haas [19821, for example). However, transportable
systems can provide for a fairly wide range of
fixed phrases corresponding to these fields [Grosz
et at, 1982b]).
</bodyText>
<sectionHeader confidence="0.916385" genericHeader="method">
VI MULTIFILE QUERIES
</sectionHeader>
<bodyText confidence="0.999947104166667">
I will address only those aspects of this
problem that are directly concerned with
interpreting natural-language queries correctly,
and not those that are concerned primarily with
database access (e.g., ensuring that the fields
over which the join must be made possess
compatible values). Two basic problems arise in
coordinating information from multiple files: (1)
determining the relationships among the domains
corresponding to the different fields;
(2) accounting for the composition of relations
across files.
It is relatively straightforward to achieve
correctness in (1) even in a transportable system.
The composition of relations that are introduced
by joins over distinct files presents greater
difficulties because natural-language queries may
refer only implicitly to the composition. I want
to consider two such cases: (1) the use of a field
value (or a synonym) to modify a noun phrase
(e.g., &amp;quot;Italian ships&amp;quot;), and (2) the use of a
field value as a head noun referring to entities
possessing that value for the attribute
represented by the field (e.g., in a database
about cars, &amp;quot;Fords&amp;quot; might refer to those cars with
manufacturer-FORD).
In both cases, it may be ambiguous as to
exactly what relationship is being expressed. If
we restrict natural-language interface systems to
handling only isolated queries, the DBE can be
asked to eliminate certain of these ambiguities by
establishing which fields have values that can be
used to modify (or stand alone for) the entities
in the database. Thus, for example, a DBE might
establish that &amp;quot;Italian ships&amp;quot; will never be used
to refer to ships with a port of departure in
Italy.
Once discourse contexts are taken into
account, the problem becomes more difficult. For
any field, it is fairly easy to create a context
in which the relation represented by that field
can be implicitly expressed by using one of its
values as a modifier. For example, following the
query &amp;quot;Are there more ships sailing from Italy or
France this month?&amp;quot;, the query &amp;quot;What cargoes are
the Italian ships carrying?&amp;quot; uses &amp;quot;Italian ships&amp;quot;
to refer specifically to ships departing from
Italy.
</bodyText>
<sectionHeader confidence="0.743672" genericHeader="method">
VII Acknowledgments
</sectionHeader>
<bodyText confidence="0.763583375">
Robert Moore and Bonnie Webber provided many
helpful comments on the content and form of this
paper. Many of the ideas in it have resulted from
discussions among the members of the TEAM project
at SRI. The TEAM project is supported by the
Defense Advanced Research Projects Agency under
Contract N00039-80-C-0645 with the Naval
Electronic Systems Command.
</bodyText>
<page confidence="0.998062">
49
</page>
<note confidence="0.953223181818182">
Thompson, F. B., and B. H. Thompson [1975]
&amp;quot;Practical Natural Language Processing: The
REL System as Prototype,&amp;quot; in Advances in
Computers 13, M. Rubinoff and M. C. Yovits,
eds. (Academic Press, New York, New York,
1975).
REFERENCES
Cohen, P. R. and C. R. Perrault [1979] &amp;quot;A Plan-
Based Theory of Speech Acts.,&amp;quot; Cognitive
Science, Vol. 3, No. 3, pp. 177-212 (July-
September 1979)
</note>
<reference confidence="0.988464">
Grosz, B. et al. [1982a] &amp;quot;DIALOGIC: A Core
Natural-Language Processing System,&amp;quot; to
appear in Proceedings of the Ninth
International Conference on Computational
Linguistics, Prague, Czechoslovakia (July
1982)
Grosz, B. et al. [1982b] &amp;quot;TEAM: A Transportable
Natural-Language System,&amp;quot; Technical Note No.
263, Artificial Intelligence Center, SRI
International, Menlo Park, California (April
1982).
Engdahl, E. [1982] &amp;quot;Constituent Questions,
Topicalization, and Surface Structure
Interpretation,&amp;quot; to appear in Proceedings
from the First West Coast Conference on
Formal Linguistics, D. Flickinger, M. Macken,
and N. Wiegand, eds., Stanford, California
(1982).
Hendrix, G. G., et al. [1978] &amp;quot;Developing a
Natural Language Interface to Complex Data,&amp;quot;
ACM Transactions on Database Systems, Vol. 3,
No. 2, pp. 105-147 (June 1978).
Hendrix, G. G. and Haas, N. [1982] &amp;quot;Learning by
Being Told: Acquiring Knowledge for
Information Management,&amp;quot; to appear in Machine
Learning, R.S. Michalski, J. Carbonell, and
T. Mitchell, eds. (Tioga Publishing Co., Palo
Alto, California, 1982).
Konolige, K. G. [1981] &amp;quot;A Metalanguage
Representation of Relational Databases for
Deductive Question-Answering Systems,&amp;quot;
Proceedings of the Seventh International
Joint Conference on Artificial Intelligence,
pp. 496-503, Vancouver, British Columbia,
Canada (August 24-28, 1981).
Moore, R. C. [1981] &amp;quot;Problems in Logical Form,&amp;quot;
Proceedings of the 19th Annual Meeting of the
Association for Computational Linguistics,
pp. 117-124, Stanford University, Stanford,
California (June 29-July 1, 1981).
Prince, E. [1982] &amp;quot;The Simple Futurate: Not Simply
Progrssive Futurate Minus Progressive,&amp;quot;
Meeting of the Chicago Linguistics Society,
Chicago, Illinois (April 1982).
Waltz, D. [1975] &amp;quot;Natural Language Access to a
Large Data Base: An Engineering Approach,&amp;quot;
Advance Papers of the Fourth International
Joint Conference on Artificial Intelligence,
pp. 868-872, Tbilisi, Georgia, USSR
(September 1975).
Warren, D. H. [1981] &amp;quot;Efficient Processing of
Interactive Relational Database Queries
Expressed in Logic,&amp;quot; Proc. Seventh
International Conference on Very Large Data
Bases, pp. 272-283, Cannes, France (September
1981).
Woods, W. A., R. M. Kaplan, and B. N-Webber [1972]
&amp;quot;The Lunar Sciences Natural Language
Information System,&amp;quot; BBN Report 2378, Bolt
Beranek and Newman, Cambridge, Massachusetts
(1972).
</reference>
<page confidence="0.997671">
50
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000004">
<title confidence="0.997596">TRANSPORTABLE NATURAL-LANGUAGE INTERFACES: PROBLEMS AND TECHNIQUES</title>
<author confidence="0.999999">Barbara J Grosz</author>
<affiliation confidence="0.999907">Artificial Intelligence Center</affiliation>
<address confidence="0.860115">SRI International, Menlo Park, CA 94025</address>
<affiliation confidence="0.733432">of Computer and Information</affiliation>
<address confidence="0.810481">University of Pennsylvania, Philadephia, PA 19104</address>
<abstract confidence="0.992006393285373">I OVERVIEW I will address the questions posed to the panel from within the context of a project at SRI, TEAM [Grosz, 1982b], that is developing techniques for transportable natural-language interfaces. The goal of transportability is to enable nonspecialists to adapt a natural-language processing system for access to an existing conventional database. TEAM is designed to interact with two different kinds of users. an acquisition dialogue, a expert (DBE) provides TEAM with information about the files and fields in the conventional database for which a natural-language interface is desired. (Typically this database already exists and is populated, but TEAM also provides facilities for creating small local databases.) This dialogue results in extension of the language-processing and data access components that make it possible for an end user to query the new database in natural language. A major benefit of using natural language is that it shifts onto the system the burden of mediating between two views of the data--the way in which it is stored (the &amp;quot;database view&amp;quot;) and the way in which an end user thinks about it (the &amp;quot;user&apos;s view&amp;quot;). Basically, database access is done in terms of files, records, and fields, while natural-language expressions refer to the same information in terms of entities and relationships in the world. In my discussion, I will assume the use of a general grammar of English rather than a semantic grammar, and also that the interpretation of queries will pass through an intermediate stage in which a database-independent representation of the of the query before constructing the formal database query. This is because systems based on semantic grammars amalgamate irformation about language, about the domain, d about the database in ways that make it difficult to transfer those systems to new databases. I will use the term &amp;quot;conceptual schema&amp;quot; to refer to the internal representation of 1Currently visiting under the auspices of the Program in Cognitive Science at the University of Pennsylvania. information about the entities in the domain of discourse and the relationships that can hold and &amp;quot;database schema&amp;quot; to refer to the encoding of information about the way concepts in the conceptual schema map onto the structures of the database. In addition, I will use the term &amp;quot;logical form&amp;quot; to refer to the representation of the literal meaning of an expression in the context of an utterance. The insistence on transportability (which distinguishes TEAM from previous systems such as LADDER [Hendrix et al., 19781, LUNAR [Woods, Kaplan, and Webber, 1972], PLANES (Waltz, 1975], REL [Thompson, 1975], and CHAT [Warren, 1981]) two major consequences for the design a interface. First, the database cannot be restructured to make the way in which it stores data more compatible with the way in which a user would pose his questions. Second, because the DBE cannot be expected to know about the internal structure of the conceptual schema and the database schema, these must be organized so that the information they encode about any particular database and its corresponding domain can be obtained systematically (and, therefore, automatically). These differences are crucial to any consideration of the issues before this panel. Although, for any particular database, it may be possible to handcraft solutions to each problem, such an approach is not viable for a transportable system. Handcrafting requires expertise in computational linguistics, knowledge of the internal structures and algorithms used in an interface, and so forth--none of which the DBE can be expected to possess. In addition, interfacing to an existing conventional database introduces many problems caused by the difference between the database view and the end user&apos;s view. Many of these problems can be avoided if one is allowed to design the database as well as the naturallanguage system. However, given the prevalence of existing conventional databases, approaches that make this assumption are likely to have limited applicability in the near future. Most of the issues the panel has been asked to address arise (or have analogues) in any 2This schema is a restricted form of the standard Al knowledge base. 46 application of natural-language processing. In the sections that follow, my objective in discussing each of these issues will be to point out where I see the constraints of the database query task as simplifying the general problem and where, on the other hand, transportability (and the way in which database systems typically structure information and view the world) makes things more difficult. Inevitably, I will be raising at least as many questions as I answer. II AGGREGATES It is useful to separate problems involving aggregates into two categories: (1) those that involve mapping from natural-language to logical form, and (2) those that involve translating from logical form into a formal database query. The examples presented to the panel have elements of each of these. In addressing the question of logical form, I first want to note how similar &amp;quot;how many&amp;quot; and &amp;quot;how much&amp;quot; questions are to other degree questions (e.g., &amp;quot;How tall is John?&amp;quot;). Consider, for example, (1) James is old./ How old is James? (2) The department is big./ How big is the department? (3) The department has many employees./ How many employees does the department have? (4) The ship is heavy./ How heavy is the ship? (5) The ship is carrying much coal./ How much coal is the ship carrying? seems that the logical forms for the queries ought to bear a close resemblance. In interpreting degree questions, the languageprocessing component of TEAM (Grosz et al., 1982a], applies a higher-order degree operator to the predicate that underlies the adjective. For example, the logical form for &amp;quot;How tall is John?&amp;quot; would be (WHAT H (HEIGHT H) ((DEGREE TALL) JOHN H)) The problem in transferring this treatment to &amp;quot;how many&amp;quot; and &amp;quot;how much&amp;quot; questions is that while adjectives like &amp;quot;heavy&amp;quot; are usually treated as predicates, &amp;quot;many&amp;quot; is usually treated as a quantifier. So, if &amp;quot;how&amp;quot; is treated by uniformly applying some kind of higher-order degree operator, then that operator has to apply to both predicates and quantifiers. Another possibility would be to apply the degree operator to an entire formula, as in (WHAT H (HEIGHT H) ((DEGREE (TALL JOHN) H)) rather than just to the head of the formula. Whether this can be made to work, however, depends on whether a satisfactory analysis can be provided when the formula consists of more than just a predicate and its arguments. The problem of an appropriate logical form for these questions is not affected by the need for transportability. However, transportability does make the problem of translating from logical form into a database query more difficult. Fields that store count totals, like NUMBER-OF-EMPLOYEES, are semantically complex in much the same way as the CHILD-OF-ALUMNUS field (the predicate encoded by a count field can be defined in terms of a count operator and the domain entities that are to be counted), and they present similar problems for transportability and database access (see section 5). The question therefore (to which I do not have an answer) is whether this kind of semantically complex field is any simpler to handle than the more general case. In addition, some ways of storing information about aggregates in these semantically complex fields may require inferences to be drawn to answer certain kinds of queries. For example, if the number of employees in a department must be calculated from the number of employees in each office of the department, answering queries about the number of employees in a department will require reasoning about the part/whole relationship between offices and departments and how the number of employees in a department depends on that relationship. A general treatment of such cases would require both the acquisition of information about the part/whole relationship implicitly encoded in the database, and the ability to infer that (in this case) the count for whole sum of the counts for the parts. The need for drawing inferences arises with mass fields as well as with count fields. For example, consider a database of ships and their cargoes, with separate entries for the different kinds of cargo a ship is carrying. Then an answer to &amp;quot;How much cargo is the ship carrying?&amp;quot; will require the same kind of totaling operation as does the query about the number of employees in the above example. It may be possible to handle the most straightforward cases of these phenomena by adding special purpose information (&amp;quot;hacks&amp;quot; to compensate for the lack of theorem-proving capabilites) for each operator corresponding to a data access system aggregate function, specifying how it interacts with part/whole relationships (AVERAGE will work differently from TOTAL). 47 III TIME AND TENSE The context of database querying does not seem to make questions concerning time and tense any easier than they are for linguistics or philosophy in general; in fact, they are actually more difficult because of the extensional nature of the temporal information stored in a database. It does not appear useful, even in the database query context, to have different representations for sentences involving concepts related to points in time and those involving intervals. The same natural-language expressions about time may be used to refer to a given time as either a point or an interval. Consider, (6) How far did the Fox travel yesterday? (yesterday as an interval over which an event extends) (7) Who was the officer of the day yesterday? (yesterday as a point in a sequence of days) It is fairly easy to imagine databases against which each of these queries might be posed and, in each case, &amp;quot;yesterday&amp;quot; might correspond either to a single database entry or to a set of entries spanning an interval. Furthermore, the same verb can be used to refer to activities in terms of points or intervals--e.g., (8) The ship is sailing to Naples. (interval) (9) The ship is sailing tomorrow. (point) --and the same event may be viewed as occurring during an interval or at some single point [Moore, 1981]. (See Prince [1982] for an interesting discussion of the differences between (9) and &amp;quot;The ship sails tomorrow.&amp;quot;) On the issue of interpolation, we should note that questions involving temporal attributes also involve at least one other attribute of an entity (e.g., its location). To handle adequately queries about times not explicitly represented in the database, such factors must be taken into account as the time scale over which an attribute changes (e.g., a ship&apos;s position changes more slowly than an airplane&apos;s), and whether or not the change is linear. In general, this requires mechanisms for reasoning about temporal relationships and complex events, mechanisms normally absent in database systems. Also note that, even when interpolation is possible, additional mechanisms are needed to handlP queries times beyond the last (I have been living in Philadelphia for the last four month , Jut I will not be two months hence.) All this suggests that naive interpolation is likely to result in incorrect answers (entities may even have ceased to exist since the last data about them was recorded). I believe it is misleading to provide direct responses involving such interpolation, because the user has no way of knowing that the system&apos;s reasoning is only approximate, or knowing on what it has based its answer. If the natural-language interface isolates a user from the manner in which information is stored, it must compensate by furnishing sufficient information in its responses to allow the user to assess their validity. Of course, this is a more general issue than one concerning just time, but the appeal of interpolation (as a simple solution) may mislead us into thinking we can provide the user with an answer that later reflection will reveal as worse than no answer at all. In an interface designed for a particular database, special purpose routines may be provided that take such factors as time scale into account. The problem is more difficult to deal with for a transportable natural-language interface, but two strategies appear possible. One is to provide the two values of the attribute being queried that correspond to times that bracket the time specified in an actual query. The second is to associate with each attribute-time pairing an interval over which the attribute value can be considered to be constant, as well as possibly a function for interpolating between values and extrapolating from them. The problem for transportability, then, is obtaining the requisite information from the DBE. IV QUANTIFYING INTO QUESTIONS The problem of quantifying into questions may have a simpler solution in the database query environment than it does in general. Database queries usually seek an enumeration (as opposed to queries seeking a description, as in &amp;quot;Which woman does every Englishman admire most? His mother.&amp;quot; [Engdahl, 1982]). For such cases, it seems possible to analyze a question as a REQUEST to INFORM (an analysis done in [Cohen and Perrault, 1979] to allow planning of questions, taking into account plans and goals of both speakers and hearers), with REQUEST being the illocutionary-force operator. If this is done, a quantifier can outscope the INFORM without outscoping the REQUEST. Thus, the logical form of &amp;quot;Who commands each ship&amp;quot; would be something like (REQUEST (EVERY X (SHIP X) (INFORM &amp;quot;who commands X&amp;quot;))) 48 V SEMANTICALLY COMPLEX FIELDS The predicate represented in a semantically complex field like CHILD-OF-ALUMNUS typically has . a definition in terms of simpler concepts, namely an existential quantifier and whatever entity is being quantified over (in this case ALUMNUS). In a nontransportable system, some of the variability of expression that these fields give rise to can be handled by enriching the conceptual schema appropriately (e.g., adding to it the class of alumni). However, as the query &amp;quot;Did either of John Jones&apos;s parents attend the college?&amp;quot; illustrates, this by itself is not sufficient in general. In extreme cases, sophisticated deductive capabilities may be necessary to answer questions that can arise in connection with semantically complex fields. For example, the BLUEFILE database (to which LADDER provided an interface) has a field DOC that records whether or not a ship has a doctor on board. To answer a query like &amp;quot;Is there a doctor within 200 miles of Philadelphia?&amp;quot; requires not only represention of the connection between a positive value in the DOC field and the existence of a doctor, but also the ability to reason that, if a ship that has a doctor on board is within 200 miles of Philadelphia, then the doctor himself is within 200 miles of Philadelphia. An apparent precondition for the correct treatment of semantically complex fields is that the system should have a richer model of the domain than the model constituted by the database itself. Konolige [1981] suggests one possible approach to this in which a metatheory is employed to describe both the domain of discourse and the information the database contains. Axioms in the metalanguage are used to encode things like the connection between the existence of an alumnus and a particular value in the CHILD-OF-ALUMNUS field. does not seem possible to handle a variety of semantically complex fields in a transportable system, unless the system is much richer than typical DB systems (in which case much more general knowledge acquisition schemes must be implemented, such as those proposed by Hendrix and Haas [19821, for example). However, transportable systems can provide for a fairly wide range of fixed phrases corresponding to these fields [Grosz et at, 1982b]). VI MULTIFILE QUERIES I will address only those aspects of this problem that are directly concerned with interpreting natural-language queries correctly, and not those that are concerned primarily with database access (e.g., ensuring that the fields over which the join must be made possess compatible values). Two basic problems arise in coordinating information from multiple files: (1) determining the relationships among the domains corresponding to the different fields; (2) accounting for the composition of relations across files. It is relatively straightforward to achieve correctness in (1) even in a transportable system. The composition of relations that are introduced by joins over distinct files presents greater difficulties because natural-language queries may refer only implicitly to the composition. I want to consider two such cases: (1) the use of a field value (or a synonym) to modify a noun phrase (e.g., &amp;quot;Italian ships&amp;quot;), and (2) the use of a field value as a head noun referring to entities possessing that value for the attribute represented by the field (e.g., in a database about cars, &amp;quot;Fords&amp;quot; might refer to those cars with manufacturer-FORD). In both cases, it may be ambiguous as to exactly what relationship is being expressed. If we restrict natural-language interface systems to handling only isolated queries, the DBE can be asked to eliminate certain of these ambiguities by establishing which fields have values that can be used to modify (or stand alone for) the entities in the database. Thus, for example, a DBE might establish that &amp;quot;Italian ships&amp;quot; will never be used to refer to ships with a port of departure in Italy. Once discourse contexts are taken into account, the problem becomes more difficult. For any field, it is fairly easy to create a context in which the relation represented by that field can be implicitly expressed by using one of its values as a modifier. For example, following the query &amp;quot;Are there more ships sailing from Italy or France this month?&amp;quot;, the query &amp;quot;What cargoes are the Italian ships carrying?&amp;quot; uses &amp;quot;Italian ships&amp;quot; to refer specifically to ships departing from Italy. VII Acknowledgments Robert Moore and Bonnie Webber provided many helpful comments on the content and form of this paper. Many of the ideas in it have resulted from discussions among the members of the TEAM project at SRI. The TEAM project is supported by the</abstract>
<note confidence="0.753386571428572">Defense Advanced Research Projects Agency under Contract N00039-80-C-0645 with the Naval Electronic Systems Command. 49 Thompson, F. B., and B. H. Thompson [1975] &amp;quot;Practical Natural Language Processing: The System as Prototype,&amp;quot; in Advancesin Computers13, M. Rubinoff and M. C. Yovits, eds. (Academic Press, New York, New York, 1975). REFERENCES Cohen, P. R. and C. R. Perrault [1979] &amp;quot;A Plan- Theory of Speech Acts.,&amp;quot; Science,Vol. 3, No. 3, pp. 177-212 (July-</note>
<date confidence="0.722234">September 1979</date>
<note confidence="0.737702379310345">Grosz, B. et al. [1982a] &amp;quot;DIALOGIC: A Core Natural-Language Processing System,&amp;quot; to in Proceedingsof the Ninth Conferenceon Linguistics,Prague, Czechoslovakia (July 1982) Grosz, B. et al. [1982b] &amp;quot;TEAM: A Transportable Natural-Language System,&amp;quot; Technical Note No. 263, Artificial Intelligence Center, SRI International, Menlo Park, California (April 1982). Engdahl, E. [1982] &amp;quot;Constituent Questions, Topicalization, and Surface Structure to appear in the First West Coast Conferenceon Linguistics,D. Flickinger, M. Macken, N. Wiegand, California (1982). Hendrix, G. G., et al. [1978] &amp;quot;Developing a Natural Language Interface to Complex Data,&amp;quot; Transactionson Systems,Vol. 3, No. 2, pp. 105-147 (June 1978). Hendrix, G. G. and Haas, N. [1982] &amp;quot;Learning by Being Told: Acquiring Knowledge for Management,&amp;quot; to appear in Learning,R.S. Michalski, J. Carbonell, and T. Mitchell, eds. (Tioga Publishing Co., Palo Alto, California, 1982). Konolige, K. G. [1981] &amp;quot;A Metalanguage</note>
<title confidence="0.790847">Representation of Relational Databases for Deductive Question-Answering Systems,&amp;quot; Proceedingsof the International</title>
<note confidence="0.766933">Conferenceon Intelligence, pp. 496-503, Vancouver, British Columbia, Canada (August 24-28, 1981). Moore, R. C. [1981] &amp;quot;Problems in Logical Form,&amp;quot; Proceedingsof the 19th Meetingof the Associationfor Linguistics, pp. 117-124, Stanford University, Stanford, California (June 29-July 1, 1981). Prince, E. [1982] &amp;quot;The Simple Futurate: Not Simply Progrssive Futurate Minus Progressive,&amp;quot; Meeting of the Chicago Linguistics Society, Chicago, Illinois (April 1982). Waltz, D. [1975] &amp;quot;Natural Language Access to a</note>
<title confidence="0.898846">Large Data Base: An Engineering Approach,&amp;quot; Papersof the Fourth</title>
<note confidence="0.823545">Conferenceon Intelligence, pp. 868-872, Tbilisi, Georgia, USSR (September 1975). Warren, D. H. [1981] &amp;quot;Efficient Processing of</note>
<title confidence="0.926">Interactive Relational Database Queries in Logic,&amp;quot; Proc. Conferenceon VeryLarge Data</title>
<note confidence="0.915998875">Bases, pp. 272-283, Cannes, France (September 1981). Woods, W. A., R. M. Kaplan, and B. N-Webber [1972] &amp;quot;The Lunar Sciences Natural Language Information System,&amp;quot; BBN Report 2378, Bolt Beranek and Newman, Cambridge, Massachusetts (1972). 50</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>B Grosz</author>
</authors>
<title>[1982a] &amp;quot;DIALOGIC: A Core Natural-Language Processing System,&amp;quot; to appear in</title>
<date>1982</date>
<booktitle>Proceedings of the Ninth International Conference on Computational Linguistics,</booktitle>
<location>Prague, Czechoslovakia</location>
<marker>Grosz, 1982</marker>
<rawString>Grosz, B. et al. [1982a] &amp;quot;DIALOGIC: A Core Natural-Language Processing System,&amp;quot; to appear in Proceedings of the Ninth International Conference on Computational Linguistics, Prague, Czechoslovakia (July 1982)</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Grosz</author>
</authors>
<title>[1982b] &amp;quot;TEAM: A Transportable Natural-Language System,&amp;quot;</title>
<date>1982</date>
<tech>Technical Note No. 263,</tech>
<institution>Artificial Intelligence Center, SRI International, Menlo Park,</institution>
<location>California</location>
<marker>Grosz, 1982</marker>
<rawString>Grosz, B. et al. [1982b] &amp;quot;TEAM: A Transportable Natural-Language System,&amp;quot; Technical Note No. 263, Artificial Intelligence Center, SRI International, Menlo Park, California (April 1982).</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Engdahl</author>
</authors>
<title>Constituent Questions, Topicalization, and Surface Structure Interpretation,&amp;quot; to appear</title>
<date>1982</date>
<booktitle>in Proceedings from the First West Coast Conference on Formal Linguistics,</booktitle>
<editor>D. Flickinger, M. Macken, and N. Wiegand, eds.,</editor>
<location>Stanford, California</location>
<contexts>
<context position="13449" citStr="Engdahl, 1982" startWordPosition="2158" endWordPosition="2159">ibute-time pairing an interval over which the attribute value can be considered to be constant, as well as possibly a function for interpolating between values and extrapolating from them. The problem for transportability, then, is obtaining the requisite information from the DBE. IV QUANTIFYING INTO QUESTIONS The problem of quantifying into questions may have a simpler solution in the database query environment than it does in general. Database queries usually seek an enumeration (as opposed to queries seeking a description, as in &amp;quot;Which woman does every Englishman admire most? His mother.&amp;quot; [Engdahl, 1982]). For such cases, it seems possible to analyze a question as a REQUEST to INFORM (an analysis done in [Cohen and Perrault, 1979] to allow planning of questions, taking into account plans and goals of both speakers and hearers), with REQUEST being the illocutionary-force operator. If this is done, a quantifier can outscope the INFORM without outscoping the REQUEST. Thus, the logical form of &amp;quot;Who commands each ship&amp;quot; would be something like (REQUEST (EVERY X (SHIP X) (INFORM &amp;quot;who commands X&amp;quot;))) 48 V SEMANTICALLY COMPLEX FIELDS The predicate represented in a semantically complex field like CHILD</context>
</contexts>
<marker>Engdahl, 1982</marker>
<rawString>Engdahl, E. [1982] &amp;quot;Constituent Questions, Topicalization, and Surface Structure Interpretation,&amp;quot; to appear in Proceedings from the First West Coast Conference on Formal Linguistics, D. Flickinger, M. Macken, and N. Wiegand, eds., Stanford, California (1982).</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data,&amp;quot;</title>
<date>1978</date>
<journal>ACM Transactions on Database Systems,</journal>
<volume>3</volume>
<pages>105--147</pages>
<marker>Hendrix, 1978</marker>
<rawString>Hendrix, G. G., et al. [1978] &amp;quot;Developing a Natural Language Interface to Complex Data,&amp;quot; ACM Transactions on Database Systems, Vol. 3, No. 2, pp. 105-147 (June 1978).</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
<author>N Haas</author>
</authors>
<title>Learning by Being Told: Acquiring Knowledge for Information Management,&amp;quot; to appear in</title>
<date>1982</date>
<booktitle>Machine Learning,</booktitle>
<editor>R.S. Michalski, J. Carbonell, and T. Mitchell, eds.</editor>
<publisher>Tioga Publishing Co.,</publisher>
<location>Palo Alto, California,</location>
<marker>Hendrix, Haas, 1982</marker>
<rawString>Hendrix, G. G. and Haas, N. [1982] &amp;quot;Learning by Being Told: Acquiring Knowledge for Information Management,&amp;quot; to appear in Machine Learning, R.S. Michalski, J. Carbonell, and T. Mitchell, eds. (Tioga Publishing Co., Palo Alto, California, 1982).</rawString>
</citation>
<citation valid="true">
<authors>
<author>K G Konolige</author>
</authors>
<title>A Metalanguage Representation of Relational Databases for Deductive Question-Answering Systems,&amp;quot;</title>
<date>1981</date>
<booktitle>Proceedings of the Seventh International Joint Conference on Artificial Intelligence,</booktitle>
<pages>496--503</pages>
<location>Vancouver, British Columbia, Canada</location>
<marker>Konolige, 1981</marker>
<rawString>Konolige, K. G. [1981] &amp;quot;A Metalanguage Representation of Relational Databases for Deductive Question-Answering Systems,&amp;quot; Proceedings of the Seventh International Joint Conference on Artificial Intelligence, pp. 496-503, Vancouver, British Columbia, Canada (August 24-28, 1981).</rawString>
</citation>
<citation valid="true">
<authors>
<author>R C Moore</author>
</authors>
<title>Problems in Logical Form,&amp;quot;</title>
<date>1981</date>
<booktitle>Proceedings of the 19th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>117--124</pages>
<institution>Stanford University,</institution>
<location>Stanford, California</location>
<contexts>
<context position="10567" citStr="Moore, 1981" startWordPosition="1698" endWordPosition="1699">t extends) (7) Who was the officer of the day yesterday? (yesterday as a point in a sequence of days) It is fairly easy to imagine databases against which each of these queries might be posed and, in each case, &amp;quot;yesterday&amp;quot; might correspond either to a single database entry or to a set of entries spanning an interval. Furthermore, the same verb can be used to refer to activities in terms of points or intervals--e.g., (8) The ship is sailing to Naples. (interval) (9) The ship is sailing tomorrow. (point) --and the same event may be viewed as occurring during an interval or at some single point [Moore, 1981]. (See Prince [1982] for an interesting discussion of the differences between (9) and &amp;quot;The ship sails tomorrow.&amp;quot;) On the issue of interpolation, we should note that questions involving temporal attributes also involve at least one other attribute of an entity (e.g., its location). To handle adequately queries about times not explicitly represented in the database, such factors must be taken into account as the time scale over which an attribute changes (e.g., a ship&apos;s position changes more slowly than an airplane&apos;s), and whether or not the change is linear. In general, this requires mechanism</context>
</contexts>
<marker>Moore, 1981</marker>
<rawString>Moore, R. C. [1981] &amp;quot;Problems in Logical Form,&amp;quot; Proceedings of the 19th Annual Meeting of the Association for Computational Linguistics, pp. 117-124, Stanford University, Stanford, California (June 29-July 1, 1981).</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Prince</author>
</authors>
<title>The Simple Futurate: Not Simply Progrssive Futurate Minus Progressive,&amp;quot; Meeting of the Chicago Linguistics Society,</title>
<date>1982</date>
<location>Chicago, Illinois</location>
<marker>Prince, 1982</marker>
<rawString>Prince, E. [1982] &amp;quot;The Simple Futurate: Not Simply Progrssive Futurate Minus Progressive,&amp;quot; Meeting of the Chicago Linguistics Society, Chicago, Illinois (April 1982).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Waltz</author>
</authors>
<title>Natural Language Access to a Large Data Base: An Engineering Approach,&amp;quot;</title>
<date>1975</date>
<booktitle>Advance Papers of the Fourth International Joint Conference on Artificial Intelligence,</booktitle>
<pages>868--872</pages>
<location>Tbilisi, Georgia, USSR</location>
<contexts>
<context position="2924" citStr="Waltz, 1975" startWordPosition="450" endWordPosition="451">ty of Pennsylvania. information about the entities in the domain of discourse and the relationships that can hold among them,2 and &amp;quot;database schema&amp;quot; to refer to the encoding of information about the way concepts in the conceptual schema map onto the structures of the database. In addition, I will use the term &amp;quot;logical form&amp;quot; to refer to the representation of the literal meaning of an expression in the context of an utterance. The insistence on transportability (which distinguishes TEAM from previous systems such as LADDER [Hendrix et al., 19781, LUNAR [Woods, Kaplan, and Webber, 1972], PLANES (Waltz, 1975], REL [Thompson, 1975], and CHAT [Warren, 1981]) entails two major consequences for the design of a natural-language interface. First, the database cannot be restructured to make the way in which it stores data more compatible with the way in which a user would pose his questions. Second, because the DBE cannot be expected to know about the internal structure of the conceptual schema and the database schema, these must be organized so that the information they encode about any particular database and its corresponding domain can be obtained systematically (and, therefore, automatically). Thes</context>
</contexts>
<marker>Waltz, 1975</marker>
<rawString>Waltz, D. [1975] &amp;quot;Natural Language Access to a Large Data Base: An Engineering Approach,&amp;quot; Advance Papers of the Fourth International Joint Conference on Artificial Intelligence, pp. 868-872, Tbilisi, Georgia, USSR (September 1975).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D H Warren</author>
</authors>
<title>Efficient Processing of Interactive Relational Database Queries Expressed in Logic,&amp;quot;</title>
<date>1981</date>
<booktitle>Proc. Seventh International Conference on Very Large Data Bases,</booktitle>
<pages>272--283</pages>
<location>Cannes, France</location>
<contexts>
<context position="2971" citStr="Warren, 1981" startWordPosition="457" endWordPosition="458">ties in the domain of discourse and the relationships that can hold among them,2 and &amp;quot;database schema&amp;quot; to refer to the encoding of information about the way concepts in the conceptual schema map onto the structures of the database. In addition, I will use the term &amp;quot;logical form&amp;quot; to refer to the representation of the literal meaning of an expression in the context of an utterance. The insistence on transportability (which distinguishes TEAM from previous systems such as LADDER [Hendrix et al., 19781, LUNAR [Woods, Kaplan, and Webber, 1972], PLANES (Waltz, 1975], REL [Thompson, 1975], and CHAT [Warren, 1981]) entails two major consequences for the design of a natural-language interface. First, the database cannot be restructured to make the way in which it stores data more compatible with the way in which a user would pose his questions. Second, because the DBE cannot be expected to know about the internal structure of the conceptual schema and the database schema, these must be organized so that the information they encode about any particular database and its corresponding domain can be obtained systematically (and, therefore, automatically). These differences are crucial to any consideration </context>
</contexts>
<marker>Warren, 1981</marker>
<rawString>Warren, D. H. [1981] &amp;quot;Efficient Processing of Interactive Relational Database Queries Expressed in Logic,&amp;quot; Proc. Seventh International Conference on Very Large Data Bases, pp. 272-283, Cannes, France (September 1981).</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
<author>R M Kaplan</author>
<author>B N-Webber</author>
</authors>
<title>[1972] &amp;quot;The Lunar Sciences Natural Language Information System,&amp;quot;</title>
<date>1972</date>
<tech>BBN Report 2378,</tech>
<institution>Bolt Beranek and Newman,</institution>
<location>Cambridge, Massachusetts</location>
<marker>Woods, Kaplan, N-Webber, 1972</marker>
<rawString>Woods, W. A., R. M. Kaplan, and B. N-Webber [1972] &amp;quot;The Lunar Sciences Natural Language Information System,&amp;quot; BBN Report 2378, Bolt Beranek and Newman, Cambridge, Massachusetts (1972).</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>