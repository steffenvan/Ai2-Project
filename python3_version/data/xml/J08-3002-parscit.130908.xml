<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.996796">
A Twin-Candidate Model for Learning-Based
Anaphora Resolution
</title>
<author confidence="0.99878">
Xiaofeng Yang*
</author>
<affiliation confidence="0.98641">
Institute for Infocomm Research
</affiliation>
<author confidence="0.990826">
Jian Su**
</author>
<affiliation confidence="0.983256">
Institute for Infocomm Research
</affiliation>
<author confidence="0.996485">
Chew Lim Tan†
</author>
<affiliation confidence="0.999498">
School of Computing,
National University of Singapore
</affiliation>
<bodyText confidence="0.997996076923077">
The traditional single-candidate learning model for anaphora resolution considers the antecedent
candidates of an anaphor in isolation, and thus cannot effectively capture the preference relation-
ships between competing candidates for its learning and resolution. To deal with this problem,
we propose a twin-candidate model for anaphora resolution. The main idea behind the model
is to recast anaphora resolution as a preference classification problem. Specifically, the model
learns a classifier that determines the preference between competing candidates, and, during
resolution, chooses the antecedent of a given anaphor based on the ranking of the candidates. We
present in detail the framework of the twin-candidate model for anaphora resolution. Further,
we explore how to deploy the model in the more complicated coreference resolution task. We
evaluate the twin-candidate model in different domains using the Automatic Content Extraction
data sets. The experimental results indicate that our twin-candidate model is superior to the
single-candidate model for the task of pronominal anaphora resolution. For the task of coreference
resolution, it also performs equally well, or better.
</bodyText>
<sectionHeader confidence="0.988695" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999791875">
Anaphora is reference to an entity that has been previously introduced into the dis-
course (Jurafsky and Martin 2000). The referring expression used is called the anaphor
and the expression being referred to is its antecedent. The anaphor is usually used
to refer to the same entity as the antecedent; hence, they are coreferential with each
other. The process of determining the antecedent of an anaphor is called anaphora
resolution. As a key problem in discourse and language understanding, anaphora
resolution is crucial in many natural language applications, such as machine translation,
text summarization, question answering, information extraction, and so on. In recent
</bodyText>
<note confidence="0.814963428571429">
* 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: xiaofengy@i2r.a-star.edu.sg.
** 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: sujian@i2r.a-star.edu.sg.
† 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg.
Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication:
5 May 2007.
© 2008 Association for Computational Linguistics
Computational Linguistics Volume 34, Number 3
</note>
<bodyText confidence="0.989464358974359">
years, supervised learning approaches have been widely applied to anaphora resolu-
tion, and they have achieved considerable success (Aone and Bennett 1995; McCarthy
and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak
1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al.
2004; Ng et al. 2005).
The strength of learning-based anaphora resolution is that resolution regularities
can be automatically learned from annotated data. Traditionally, learning-based ap-
proaches to anaphora resolution adopt the single-candidate model, in which the po-
tential antecedents (i.e., antecedent candidates) are considered in isolation for both
learning and resolution. In such a model, the purpose of classification is to determine if
a candidate is the antecedent of a given anaphor. A training or testing instance is formed
by an anaphor and each of its candidates, with features describing the properties of the
anaphor and the individual candidate. During resolution, the antecedent of an anaphor
is selected based on the classification results for each candidate.
One assumption behind the single-candidate model is that whether a candidate
is the antecedent of an anaphor is completely independent of the other competing
candidates. However, anaphora resolution can be more accurately represented as a
ranking problem in which candidates are ordered based on their preference and the best
one is the antecedent of the anaphor (Jurafsky and Martin 2000). The single-candidate
model, which only considers the candidates of an anaphor in isolation, is incapable
of effectively capturing the preference relationship between candidates for its training.
Consequently, the learned classifier cannot produce reliable results for preference deter-
mination during resolution.
To deal with this problem, we propose a twin-candidate learning model for
anaphora resolution. The main idea behind the model is to recast anaphora resolution as
a preference classification problem. The purpose of the classification is to determine the
preference between two competing candidates for the antecedent of a given anaphor. In
the model, an instance is formed by an anaphor and two of its antecedent candidates,
with features used to describe their properties and relationships. The antecedent is
selected based on the judged preference among the candidates.
In the article we focus on two issues about the twin-candidate model. In the first
part, we will introduce the framework of the twin-candidate model for anaphora reso-
lution, including detailed training procedures and resolution schemes. In the second
part, we will further explore how to deploy the twin-candidate model in the more
complicated task of coreference resolution. We will present an empirical evaluation of
the twin-candidate model in different domains, using the Automatic Content Extraction
(ACE) data sets. The experimental results indicate that the twin-candidate model is
superior to the single-candidate model for the task of pronominal anaphora resolution.
For the coreference resolution task, it also performs equally well, or better.
</bodyText>
<sectionHeader confidence="0.999578" genericHeader="related work">
2. Related Work
</sectionHeader>
<bodyText confidence="0.99982275">
To our knowledge, the first work on the twin-candidate model for anaphora resolution
was proposed by Connolly, Burger, and Day (1997). Their work relied on a set of features
that included lexical type, grammatical role, recency, and number/gender/semantic
agreement, and employed a simple linear search scheme to choose the most preferred
candidate. Their system produced a relatively low accuracy rate for pronoun reso-
lution (55.3%) and definite NP resolution (37.4%) on a set of selected news articles.
Iida et al. (2003) used the twin-candidate model (called the tournament model in their
work) to perform Japanese zero-anaphora resolution. They utilized the same linear
</bodyText>
<page confidence="0.995973">
328
</page>
<note confidence="0.972102">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<bodyText confidence="0.9998613">
scheme to search for antecedents. Compared with Connolly, Burger, and Day (1997),
they adopted richer features in which centering information was incorporated to cap-
ture contextual knowledge. Their system achieved an accuracy of around 70% on a
data set drawn from a corpus of newspaper articles. Both of these studies were carried
out on uncommon data sets, which makes it difficult to compare their results with
other baseline systems. In contrast to the previous work, we will explore the twin-
candidate model comprehensively by describing the model in more detail, trying more
effective resolution schemes, deploying the model in the more complicated coreference
resolution task, performing more extensive experiments, and evaluating the model in
more depth.
Denis and Baldridge (2007) proposed a pronoun resolution system that directly
used a ranking learning algorithm (based on Maximal Entropy) to train a preference
classifier for antecedent selection. They reported an accuracy of around 72–76% for
the different domains in the ACE data set. In our study, we will also investigate the
solution of using a general ranking learner (e.g., Ranking-SVM). By comparison, the
twin-candidate model is applicable to any discriminative learning algorithm, no matter
whether it is capable of ranking learning or not. Moreover, as the model is trained and
tested on pairwise candidates, it can effectively capture various relationships between
candidates for better preference learning and determination.
Ng (2005) presented a ranking model for coreference resolution. The model focused
on the preference between the potential partitions of NPs, instead of the potential
antecedents of an NP as in our work. Given an input document, the model first em-
ployed n pre-selected coreference resolution systems to generate n candidate partitions
of NPs. The model learned a preference classifier (trained using Ranking-SVM) that
could distinguish good and bad partitions during testing. The best rank partition would
be selected as the resolution output of the current text. The author evaluated the model
on the ACE data set and reported an F-measure of 55–69% for the different domains.
Although ranking-based, Ng’s model is quite different from ours as it operates at the
cluster-level whereas ours operates at the mention-level. In fact, the result of our twin-
candidate system can be used as an input to his model.
</bodyText>
<sectionHeader confidence="0.97546" genericHeader="method">
3. The Twin-Candidate Model for Anaphora Resolution
</sectionHeader>
<subsectionHeader confidence="0.819145">
3.1 The Single-Candidate Model
</subsectionHeader>
<bodyText confidence="0.949565">
Learning-based anaphora resolution uses a machine learning method to obtain p(ante
(Ck)|ana, C1, C2, ... , Cn), the probability that a candidate Ck is the antecedent of the
anaphor ana in the context of its antecedent candidates, C1, C2, ... , Cn. The single-
candidate model assumes that the probability that Ck is the antecedent is only de-
pendent on the anaphor ana and Ck, and independent of all the other candidates.
That is:
p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1)
Thus, the probability of a candidate Ck being the antecedent can be approximated using
the classification result on the instance describing the anaphor and Ck alone.
The single-candidate model is widely used in most anaphora resolution sys-
tems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and
Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the
</bodyText>
<page confidence="0.99609">
329
</page>
<note confidence="0.76477">
Computational Linguistics Volume 34, Number 3
</note>
<tableCaption confidence="0.79118425">
Table 1
A sample text for anaphora resolution.
[1 Those figures] are almost exactly what [2 the government]
proposed to [3 legislators] in [4 September]. If [5 the government] can
stick with [6 them], [7 it] will be able to halve this year’s 120 billion
ruble (US $193 billion) deficit.
Table 2
Training instances generated under the single-candidate model for anaphora resolution.
</tableCaption>
<author confidence="0.18009">
Anaphor Training Instance Label
</author>
<equation confidence="0.9155049">
i{[6 them] , [1 Those figures]} 1
[6 them] i{[6 them] , [2 the government]} 0
i{[6 them] , [3 legislators]} 0
i{[6 them] , [4 September]} 0
i{[6 them] , [5 the government]} 0
i{[7 it] , [1 Those figures]} 0
i{[7 it] , [3 legislators]} 0
[7 it] i{[7 it] , [4 September]} 0
i{[7 it] , [5 the government]} 1
i{[7 it] , [6 them]} 0
</equation>
<bodyText confidence="0.99993305882353">
baseline a system for pronominal anaphora resolution based on the single-candidate
model.
In the single-candidate model, an instance has the form of i{ana, candi}, where ana
is an anaphor and candi is an antecedent candidate.1 For training, instances are created
for each anaphor occurring in an annotated text. Specifically, given an anaphor ana and
its antecedent candidates, a set of negative instances (labeled “0”) is formed by pairing
ana and each of the candidates that is not coreferential with ana. In addition, a single
positive instance (labeled “1”) is formed by pairing ana and the closest antecedent, that
is, the closest candidate that is coreferential with ana.2 Note that it is possible that an
anaphor has two or more antecedents, but we only create one positive instance for the
closest antecedent as its reference relationship with the anaphor is usually the most
direct and thus the most confident.
As an example, consider the text in Table 1.
Here, [6 them] and [7 it] are two anaphors. [1 Those figures] and [5 the government] are
their closest antecedents, respectively. Supposing that the antecedent candidates of the
two anaphors are just all their preceding NPs in the current text, the training instances
to be created for the text segment are listed in Table 2.
</bodyText>
<footnote confidence="0.995834125">
1 In our study, we only consider anaphors whose antecedents are noun phrases. Typically, all the NPs
preceding an anaphor can be taken as the initial antecedent candidates. For better learning and
resolution, however, candidates can be filtered so that only those “confident” NPs, which occur in the
specified search scope and meet constraints such as number/gender agreement, are considered. The
details of candidate selection in our system will be discussed later in the section on experiments.
2 We assume that at least one antecedent exists in the candidate set of an anaphor. However, for real
resolution, if none of the antecedents of an anaphor occur in the candidate set, we simply discard the
anaphor and do not create any training instance for it.
</footnote>
<page confidence="0.996976">
330
</page>
<note confidence="0.957978">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.992776">
Table 3
</tableCaption>
<bodyText confidence="0.953105">
Feature set for pronominal anaphora resolution.
ana Reflexive whether the anaphor is a reflexive pronoun
ana PronType type of the anaphor if it is a pronoun (he, she, it or they?)
</bodyText>
<equation confidence="0.924854272727273">
candi Def whether the candidate is a definite description
candi Indef whether the candidate is an indefinite NP
candi Name whether the candidate is a named entity
candi Pron whether the candidate is a pronoun
candi FirstNP whether the candidate is the first mentioned NP in the sentence
candi Subject whether the candidate is the subject of a sentence, the subject of a clause, or not.
candi Oject whether the candidate is the object of a verb, the object of a preposition,
or not
candi ParallelStruct whether the candidate has an identical collocation pattern with the anaphor
candi SentDist the sentence distance between the candidate and the anaphor
candi NearestNP whether the candidate is the candidate closest to the anaphor in position
</equation>
<bodyText confidence="0.999967125">
Note that for [7 it], we do not use [2 the government] to create a positive training
instance as it is not the closest candidate that is coreferential with the anaphor.
A vector of features is specified for each training instance. The features may describe
the characteristics of the anaphor and the candidate, as well as their relationships from
lexical, syntactic, semantic, and positional aspects. Table 3 lists the features used in our
study. All these features can be computed with high reliability, and have been proven
effective for pronoun resolution in previous work.
Based on the generated feature vectors, a classifier is trained using a certain learning
algorithm. During resolution, given a newly encountered anaphor, a test instance is
formed for each of the antecedent candidates. The instance is passed to the classifier,
which then returns a confidence value indicating the likelihood that the candidate is the
antecedent of the anaphor. The candidate with the highest confidence is selected as the
antecedent. For example, suppose [7 it] is an anaphor to be resolved. Six test instances
will be created for its six antecedent candidates, as listed in Table 4. The learned classifier
is supposed to give the highest confidence to i{[7 it] , [5 the government]}, indicating the
candidate [5 the government] is the antecedent of [7 it].
</bodyText>
<subsectionHeader confidence="0.996931">
3.2 A Problem with the Single-Candidate Model
</subsectionHeader>
<bodyText confidence="0.999697">
As described, the assumption behind the single-candidate model is that the probability
of a candidate being the antecedent of a given anaphor is completely independent of
</bodyText>
<tableCaption confidence="0.605131666666667">
Table 4
Test instances generated under the single-candidate model for anaphora resolution.
Anaphor Test Instance
</tableCaption>
<footnote confidence="0.981161">
i{[7 it] , [1 Those figures]}
i{[7 it] , [2 the government]}
i{[7 it] , [3 legislators]}
[7 it] i{[7 it] , [4 September]}
i{[7 it] , [5 the government]}
i{[7 it] , [6 them]}
</footnote>
<page confidence="0.990176">
331
</page>
<note confidence="0.294524">
Computational Linguistics Volume 34, Number 3
</note>
<bodyText confidence="0.989141769230769">
the other competing candidates. However, for an anaphor, the determination of the
antecedent is often subject to preference among the candidates (Jurafsky and Martin
2000). Whether a candidate is the antecedent depends on whether it is the “best” among
the candidate set, that is, whether there exists no other candidate that is preferred over
it. Hence, simply considering one candidate individually is an indirect and unreliable
way to select the correct antecedent.
The idea of preference is common in linguistic theories on anaphora. Garnham
(2001) summarizes different factors that influence the interpretation of anaphoric
expressions. Some factors such as morphology (gender, number, animacy, and case)
or syntax (e.g., the role of binding and commanding relations [Chomsky 1981]) are
“eliminating,” forbidding certain NPs from being antecedents. However, many others
are “preferential,” giving more preference to certain candidates over others; examples
include:
</bodyText>
<listItem confidence="0.996905764705882">
• Sentence-based factors: Pronouns in one clause prefer to refer to the
NP that is the subject of the previous clause (Crawley, Stevenson, and
Kleinman 1990). Also, the NP that is the first-mentioned expression is
preferred regardless of the syntactic and semantic role played by the
referring expression (Gernsbacher and Hargreaves 1988).
• Stylistic factors: Pronouns preferentially take parallel antecedents that play
the same role as the anaphor in their respective clauses (Grober, Beardsley,
and Caramazza 1978; Stevenson, Nelson, and Stenning 1995).
• Discourse-based factors: Items currently in focus are the prime candidates
for providing antecedents for anaphoric expressions. According to
centering theory (Grosz, Joshi, and Weinstein 1995), each utterance has a
set of forward-looking centers that have higher preference to be referred to
in later utterances. The forward-looking centers can be ranked based
on grammatical roles or other factors.
• Distance-based factors: Pronouns prefer candidates in the previous
sentence compared with those two or more sentences back (Clark
and Sengul 1979).
</listItem>
<bodyText confidence="0.9970518125">
As a matter of fact, “eliminating” factors could also be considered “preferential” if
we think of the act of eliminating candidates as giving them low preference.
Preference-based strategies are also widely seen in earlier manual approaches to
pronominal anaphora resolution. For example, the SHRDLU system by Winograd (1972)
prefers antecedent candidates in the subject position over those in the object position.
The system by Wilks (1973) prefers candidates that satisfy selectional restrictions with
the anaphor. Hobbs’s algorithm (Hobbs 1978) prefers candidates that are closer to the
anaphor in the syntax tree, and the RAP algorithm (Lappin and Leass 1994) prefers
candidates that have a high salience value computed by aggregating the weights of
different factors.
During resolution, the single-candidate model does select an antecedent based on
preference by using classification confidence for candidates; that is, the higher con-
fidence value the classifier returns, the more likely the candidate is preferred as the
antecedent. Nevertheless, as the model considers only one candidate at a time during
training, it cannot effectively capture the preference between candidates for classifier
learning. For example, consider an anaphor and a candidate Ci. If there are no “better”
</bodyText>
<page confidence="0.997424">
332
</page>
<note confidence="0.896">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<bodyText confidence="0.999565">
candidates in the candidate set, Ci is the antecedent and forms a positive instance.
Otherwise, Ci is not selected as the antecedent and thus forms a negative instance.
Simply looking at a candidate alone cannot explain this, and may possibly result in
inconsistent training instances (i.e., the same feature vector but different class labels).
Consequently, the confidence values returned by the learned classifier cannot reliably
reflect the preference relationship between candidates.
</bodyText>
<subsectionHeader confidence="0.999033">
3.3 The Twin-Candidate Model
</subsectionHeader>
<bodyText confidence="0.999509333333333">
To address the problem with the single-candidate model, we propose a twin-candidate
model to handle anaphora resolution. As opposed to the single-candidate model, the
model explicitly learns a preference classifier to determine the preference relationship
between candidates. Formally, the model considers the probability that a candidate
is the antecedent as the probability that the candidate is preferred over all the other
competing candidates. That is:
</bodyText>
<equation confidence="0.844220333333333">
p (ante(Ck)  |ana, C1, C2,... , Cn)
= p (Ck &gt;- {C1,...,Ck−1,Ck+1,... Cn}  |ana, C1,C2,...,Cn) (2)
= p(Ck &gt;- C1, ... , Ck &gt;- Ck−1, Ck &gt;- Ck+1,... , Ck &gt;- Cn  |ana, C1, C2,... , Cn)
</equation>
<bodyText confidence="0.9932795">
Assuming that the preference between Ck and Ci is independent of the preference
between Ck and the candidates other than Ci, we have:
</bodyText>
<equation confidence="0.996547857142857">
p(Ck &gt;- C1, ... , Ck &gt;- Ck−1, Ck &gt;- Ck+1,... , Ck &gt;- Cn  |ana, C1, C2,... , Cn)
�= p(Ck &gt;- Ci  |ana, Ck, Ci) (3)
1&lt;i&lt;n,i�=k
Thus:
lnp (ante(Ck)  |ana, C1,C2,...,Cn)
�= ln p(Ck &gt;- Ci  |ana, Ck, Ci) (4)
1&lt;i&lt;n,i�=k
</equation>
<bodyText confidence="0.999768416666667">
This suggests that the probability that a candidate Ck is the antecedent can be esti-
mated using the classification results on the set of instances describing Ck and each of
the other competing candidates. To do this, we learn a classifier that, given any two can-
didates of a given anaphor, can determine which one is preferred to be the antecedent
of the anaphor. The final antecedent is identified based on the classified preference
relationships among the candidates. This is the main idea of the twin-candidate model.
In such a model, each instance consists of three elements: i{ana, Ci, Cj}, where ana
is an anaphor, and Ci and Cj are two of its antecedent candidates. The class label of
an instance represents the preference between the two candidates for the antecedent,
for example, “01” indicating Cj is preferred over Ci and “10” indicating Ci is preferred.
Being trained with instances built based on this principle, the classifier is capable of de-
termining the preference between any two candidates of a given anaphor by returning
</bodyText>
<page confidence="0.998788">
333
</page>
<table confidence="0.436549">
Computational Linguistics Volume 34, Number 3
</table>
<tableCaption confidence="0.955539">
Table 5
</tableCaption>
<bodyText confidence="0.420920285714286">
A sample text for anaphora resolution.
[1 Those figures] are almost exactly what [2 the government]
proposed to [3 legislators] in [4 September]. If [5 the government]
can stick with [6 them], [7 it] will be able to halve this year’s
120 billion ruble (US $193 billion) deficit.
a class label, either “01” or “10”, accordingly. In the next section, we will introduce in
detail a system based on the twin-candidate model for anaphora resolution.
</bodyText>
<subsectionHeader confidence="0.969264">
3.4 Framework of the Twin-Candidate Model
</subsectionHeader>
<bodyText confidence="0.990355793103448">
3.4.1 Instance Representation. In the twin-candidate model, an instance takes the form
i{ana, Ci, Cj}, where ana is an anaphor and Ci and Cj are two of its antecedent candidates.
We stipulate that Cj should be closer to ana than Ci in position (i.e., i &lt; j). An instance is
labeled “10” if Ci is preferred over Cj as the antecedent, or “01” if otherwise.
A feature vector is associated with an instance, and it describes different properties
and relationships between ana and each of the candidates, Ci or Cj. In our study, the
system with the twin-candidate model adopts the same feature set as the baseline
system with the single-candidate model (shown in Table 3). The difference is that a
feature for the single candidate, candi X, has to be replaced by a pair of features for
the twin candidates, candi1 X and candi2 X. For example, feature candi Pron, which
describes whether a candidate is a pronoun, will be replaced by two features candi1 Pron
and candi2 Pron, which describe whether Ci and Cj are pronouns, respectively.
3.4.2 Training Instances Creation. To learn a preference classifier, a training instance for an
anaphor should be composed of two candidates with an explicit preference relationship,
for example, one being an antecedent and the other being a non-antecedent. A pair
of candidates that are both antecedents or both non-antecedents are not suitable for
instance creation because their preference cannot be explicitly represented for training,
although it does exist.
Based on this idea, during training, for an encountered anaphor ana, we take the
closest antecedent, Cante, as the anchor candidate.3 Cante is paired with each of the
candidates Cnc that is not coreferential with ana. If Cante is closer to ana than Cnc, an
instance i{ana, Cnc, Cante} is created and labeled “01”. Otherwise, if Cnc is closer, an
instance i{ana, Cante, Cnc} is created and labeled “10” instead.
Consider again the sample text given in Table 1, which is repeated in Table 5. For the
anaphor [7 it], the closest antecedent, [5 the government] (denoted as NP5), is chosen as
the anchor candidate. It is paired with the four non-coreferential candidates (i.e., NP1,
NP3, NP4, and NP6) to create four training instances. Among them, the instances formed
with NP1, NP3 or NP4 are labeled “01” and the one with NP6 is labeled “10”. Table 6 lists
all the training instances to be generated for the text.
</bodyText>
<listItem confidence="0.3389715">
3.4.3 Classifier Generation. Based on the feature vectors for the generated training in-
stances, a classifier can be trained using a discriminative learning algorithm. Given a
test instance i{ana, Ci, Cj} (i &lt; j), the classifier is supposed to return a class label of “10”,
3 If no antecedent is found in the candidate set, we do not generate any training instance for the anaphor.
</listItem>
<page confidence="0.997962">
334
</page>
<note confidence="0.963858">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.992092">
Table 6
</tableCaption>
<table confidence="0.836028857142857">
Training instances generated under the twin-candidate model for anaphora resolution.
Anaphor Training Instance Label
i{[6 them], [1 Those figures], [2 the government]} 10
[6 them] i{[6 them], [1 Those figures], [3 legislators]} 10
i{[6 them], [1 Those figures], [4 September]} 10
i{[6 them], [1 Those figures], [5 the government]} 10
i{[7 it], [1 Those figures], [5 the government]} 01
</table>
<equation confidence="0.945804">
i{[7 it], [3 legislators], [5 the government]} 01
[7 it] i{[7 it], [4 September], [5 the government]} 01
i{[7 it], [5 the government], [6 them]} 10
</equation>
<bodyText confidence="0.997408828571429">
indicating that Ci is preferred over Cj for the antecedent of ana, or “01”, indicating that
Cj is preferred.
3.4.4 Antecedent Identification. After training, the preference classifier can be used to
resolve anaphors. The process of determining the antecedent of a given anaphor, called
antecedent identification, could be thought of as a tournament, a competition in which
many participants play against each other in individual matches. The candidates are like
players in a tournament. A series of matches between candidates is held to determine
the champion of the tournament, that is, the final antecedent of the anaphor under con-
sideration. Here, the preference classifier is like the referee who judges which candidate
wins or loses in a match.
If an anaphor has only one antecedent candidate, it is resolved to the candidate
directly. For anaphors that have more than one candidate, two possible schemes can be
employed to find the antecedent.
Tournament Elimination Tournament Elimination is a type of tournament where
the loser in a match is immediately eliminated. Such a scheme is also applicable to
antecedent identification. In the scheme, candidates are compared linearly from the
beginning to the end. Specifically, the first candidate is compared with the second one,
forming a test instance, which is then passed to the classifier to determine the prefer-
ence. The “losing” candidate that is judged less preferred by the classifier is eliminated
and never considered. The winner, that is, the preferred candidate, is compared with
the third candidate. The process continues until all the candidates are compared, and
the candidate that wins in the last comparison is selected as the antecedent.
For demonstration, we use the text in Table 5 as a test example. Suppose we have a
“perfect” classifier that can correctly determine the preference between candidates. That
is, the candidates that are coreferential with the anaphor will be classified as preferred
over those that are not. (If the two candidates are both coreferential or both non-
coreferential with the anaphor, the one closer to the anaphor in position is preferred.)
To resolve the anaphor [7 it], the candidate NP1 is first compared with NP2. The formed
instance is classified as “01”, indicating NP2 is preferred. Thus, NP1 is eliminated and
NP2 continues to compete with NP3 and NP4 until it fails in the comparison with NP5.
Finally, NP5 beats NP6 in the last match and is selected as the antecedent. All the test
instances to be generated in sequence for the resolution of [6 them] and [7 it] are listed in
Table 7.
The Tournament Elimination scheme has a computational complexity of O(N),
where N is the number of the candidates. Thus, it enables a relatively large number
</bodyText>
<page confidence="0.99591">
335
</page>
<table confidence="0.434762">
Computational Linguistics Volume 34, Number 3
</table>
<tableCaption confidence="0.823171666666667">
Table 7
Test instances generated under the twin-candidate model with the Tournament Elimination
scheme.
</tableCaption>
<table confidence="0.6923746">
Anaphor Test Instance Result
i{[6 them], [1 Those figures], [2 the government]} 10
[6 them] i{[6 them], [1 Those figures], [3 legislators]} 10
i{[6 them], [1 Those figures], [4 September]} 10
i{[6 them], [1 Those figures], [5 the government]} 10
</table>
<equation confidence="0.972971">
i{[7 it ], [1 Those figures], [2 the government]} 01
i{[7 it ], [2 the government], [3 legislators]} 10
[7 it ] i{[7 it ], [2 the government], [4 September]} 10
i{[7 it ], [2 the government], [5 the government]} 01
i{[7 it ], [5 the government], [6 them]} 10
</equation>
<bodyText confidence="0.988326888888889">
of candidates to be processed. However, as our twin-candidate model imposes no
constraints that enforce transitivity of the preference relation, the preference classifier
would likely output C1 &gt;- C2, C2 &gt;- C3, and C3 &gt;- C1. Hence, it is unreliable to eliminate
a candidate once it happens to lose in one comparison, without considering all of its
winning/losing results against the other candidates.
Round Robin In Section 3.3, we have shown that the probability that a candidate is
the antecedent can be calculated using the preference classification results between the
candidate and its opponents. The candidate with the highest preference is selected as
the antecedent, that is:
</bodyText>
<equation confidence="0.844372">
Antecedent(ana) = argi max p (ante(Ci)  |ana, C1, C2, ... , Cn)
</equation>
<bodyText confidence="0.962251">
�a argi max CF(i{ana, Ci, Cj}, Ci) (5)
j#i
where CF(i{ana, Ci, Cj}, Ci) is the confidence with which the classifier determines Ci to
be preferred over Cj as the antecedent of ana. If we define the score of Ci as:
</bodyText>
<equation confidence="0.7748935">
�Score(Ci) = CF(i{ana, Ci, Cj}, Ci) (6)
j#i
</equation>
<bodyText confidence="0.997908333333333">
Then, the most preferred candidate is the candidate that has the maximum score. If we
simply use 1 to denote the result that Ci is classified as preferred over Cj, and −1 if Cj is
preferred otherwise, then:
</bodyText>
<equation confidence="0.989179">
Score(Ci) = |{Cj|Ci &gt;- Cj} |− |{Cj|Cj &gt;- Ci} |(7)
</equation>
<bodyText confidence="0.991959666666667">
That is, the score of a candidate is the number of the opponents to which it is preferred,
less the number of the opponents to which it is less preferred. To obtain the scores, the
antecedent candidates are compared with each other. For each candidate, its comparison
</bodyText>
<page confidence="0.998345">
336
</page>
<note confidence="0.963866">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.998626">
Table 8
</tableCaption>
<table confidence="0.817448142857143">
Test instances generated under the twin-candidate model with the Round Robin scheme.
Anaphor Test Instance Result
i{[7 it], [1 Those figures], [2 the government]} 01
i{[7 it], [1 Those figures], [3 legislators]} 01
i{[7 it], [1 Those figures], [4 September]} 01
i{[7 it], [1 Those figures], [5 the government]} 01
i{[7 it], [1 Those figures], [6 them]} 01
</table>
<equation confidence="0.997041">
i{[7 it], [2 the government], [3 legislators]} 10
i{[7 it], [2 the government], [4 September]} 10
[7 it] i{[7 it], [2 the government], [5 the government]} 01
i{[7 it], [2 the government], [6 them]} 10
i{[7 it], [3 legislators], [4 September]} 01
i{[7 it], [3 legislators], [5 the government]} 01
i{[7 it], [3 legislators], [6 them]} 01
i{[7 it], [4 September], [5 the government]} 01
i{[7 it], [4 September], [6 them]} 01
i{[7 it], [5 the government], [6 them]} 10
</equation>
<bodyText confidence="0.999489055555556">
result against every other candidate is recorded. Its score increases by one if it wins a
match, or decreases by one if it loses. The candidate with the highest score is selected as
the antecedent.
Antecedent identification carried out in such a way corresponds to a type of tourna-
ment called Round Robin in which each participant plays every other participant once,
and the final champion is selected based on the winning–losing records of the players.
In contrast to the Elimination scheme, the Round Robin scheme is more reliable in
that the preference of a candidate is determined by overall comparisons with the other
competing candidates. The computational complexity of the scheme is O(N2), where N
is the number of the candidates.
To illustrate this, consider the example in Table 5 again. The test instances to be
generated for resolving the anaphor [7 it] are listed in Table 8. As shown, each of
the candidates is compared with every other competing candidate. The scores of the
candidates are summarized in Table 9. Here, the candidate NP5 beats all the opponents
in the comparisons and obtains the maximum score of five. Thus it will be selected as
the antecedent.
An extension of the above Round Robin scheme is called the Weighted Round
Robin scheme. In the weighted version, the confidence values returned by the classifier,
</bodyText>
<tableCaption confidence="0.592781">
Table 9
Scores for the candidates under the Round Robin scheme.
</tableCaption>
<table confidence="0.496680222222222">
NP1 NP2 NP3 NP4 NP5 NP6 Score
NP1 −1 −1 −1 −1 −1 −5
NP2 +1 +1 +1 −1 +1 +3
NP3 +1 −1 −1 −1 −1 −3
NP4 +1 −1 +1 −1 −1 −1
NP5 +1 +1 +1 +1 +1 +5
NP6 +1 −1 +1 +1 −1 +1
337
Computational Linguistics Volume 34, Number 3
</table>
<tableCaption confidence="0.950276">
Table 10
</tableCaption>
<table confidence="0.651312833333333">
Statistics for the training and testing data sets.
NWire NPaper BNews
Train # Tokens 85k 72k 67k
# Files 130 76 216
Test # Tokens 20k 18k 18k
# Files 29 17 51
</table>
<bodyText confidence="0.997806">
instead of the simple 0 and 1, are employed to calculate the score of a candidate based
on the formula
</bodyText>
<equation confidence="0.997363333333333">
�Score(Ci) = � CF(Ck &gt;- Ci) (8)
Ci&gt;-Cj CF(Ci � Cj) −
Ck&gt;-Ci
</equation>
<bodyText confidence="0.6232065">
Here, CF is the confidence value that the classifier returns for the corresponding
instance.
</bodyText>
<subsectionHeader confidence="0.651479">
3.5 Evaluation
</subsectionHeader>
<bodyText confidence="0.98462108">
3.5.1 Experimental Setup. We used the ACE (Automatic Content Extraction)4 coreference
data set for evaluation. All the experiments were done on the ACE-2 V1.0 corpus. It
contains two data sets, training and devtest, which were used for training and testing,
respectively. Each of these sets is further divided into three domains: newswire (NWire),
newspaper (NPaper), and broadcast news (BNews). Statistics for the data sets are sum-
marized in Table 10.
For both training and resolution, a raw input document was processed by a
pipeline of NLP modules including a Tokenizer, Part-of-Speech tagger, NP chunker,
Named-Entity (NE) Recognizer, and so on. These preprocessing modules were meant to
determine the boundary of each NP in a text, and to provide the necessary information
about an NP for subsequent processing. Trained and tested on the UPEN WSJ TreeBank,
the POS tagger (Zhou and Su 2000) could obtain an accuracy of 97% and the NP
chunker (Zhou and Su 2000) could produce an F-measure above 94%. Evaluated for
the MUC-6 and MUC-7 Named-Entity task, the NER module (Zhou and Su 2002) could
provide an F-measure of 96.6% (MUC-6) and 94.1% (MUC-7).
In our experiments, we focused on the resolution of the third-personal pronominal
anaphors, including she, he, it, they as well as their morphologic variants (such as her, his,
him, its, itself, them, etc.). For both training and testing, we considered all the pronouns
that had at least one preceding NP in their respective annotated coreferential chains. We
used the accuracy rate as the evaluation metric, and defined it as follows:
number of anaphors being correctly resolved
Accuracy = (9)
total number of anaphors to be resolved
Here, an anaphor is deemed “correctly resolved” if the found antecedent is in the co-
referential chain of the anaphor.
</bodyText>
<footnote confidence="0.955844">
4 See http://www.itl.nist.gov/iad/894.01/tests/ace for a detailed description of the ACE program.
</footnote>
<page confidence="0.990356">
338
</page>
<note confidence="0.980106">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.99244">
Table 11
</tableCaption>
<figure confidence="0.777613625">
Statistics of the training instances generated for the pronominal anaphora resolution task.
NWire NPaper BNews
0 instances 8,200 11,648 6,037
Single-Candidate
1 instances 1,241 1,466 1,291
01 instances 6,899 9,861 5,004
Twin-Candidate
10 instances 1,301 1,787 1,033
</figure>
<bodyText confidence="0.926629066666667">
For pronoun resolution, the distance between the closest antecedent and the
anaphor is usually short, predominantly (98% for the current data set) limited to only
one or two sentences (McEnery, Tanaka, and Botley 1997). For this reason, given an
anaphor, we only took the NPs occurring within the current and previous two sentences
as initial antecedent candidates. The candidates with mismatched number and gender
agreement were filtered automatically from the candidate set. Also, pronouns or NEs
that disagreed in person with the anaphor were removed in advance. For training, there
were 1,241 (NWire), 1,466 (NPaper), and 1,291 (BNews) anaphors found with at least
one antecedent in the candidate set. For testing, the numbers were 313 (NWire), 399
(NPaper), and 271 (BNews). On average, an anaphor had nine antecedent candidates.
Table 11 summarizes the statistics of the training instances as well as the class
distribution. Note that for the single-candidate model, the number of “1” instances
was identical to the number of anaphors in the training data, because we only used
the closest antecedents of anaphors to create the positive instances. The number of “0”
instances was equal to the total number of “01” and “10” training instances for the twin-
candidate model.
We examined three different learning algorithms: C5 (Quinlan 1993), Maximum
Entropy (Berger, Della Pietra, and Della Pietra 1996), and SVM (linear kernel) (Vapnik
1995),5 using the software See5,6 OpenNlp.MaxEnt,7 and SVM-light,8 respectively. All
the classifiers were learned with the default learning parameters set in the respective
learning software.
3.5.2 Results and Discussions. Table 12 lists the performance of the different anaphora
resolution systems with the single-candidate (SC) and the twin-candidate (TC) models.
For the TC model, two antecedent identification schemes, Tournament Elimination and
Round Robin, were compared.
From the table, we can see that our baseline system with the single-candidate model
can obtain accuracy of up to 72.9% (NWire), 77.1% (NPaper), and 74.9% (BNews).
5 As MaxEnt learns a probability model, we used the returned probability as the confidence of a candidate
being the antecedent. For C5, the confidence value of a candidate was estimated based on the following
smoothed ratio:
</bodyText>
<equation confidence="0.836462">
CF = p + 1t + 2
</equation>
<bodyText confidence="0.735905">
where c was the number of positive instances and t was the total number of instances stored in the
corresponding leaf node. For SVM, the returned value was used as the confidence value: the lower
(maybe negative) the less confident.
</bodyText>
<footnote confidence="0.999431">
6 http://www.rulequest.com/see5-info.html
7 http://MaxEnt.sourceforge.net/
8 http://svmlight.joachims.org/
</footnote>
<page confidence="0.986444">
339
</page>
<table confidence="0.585514">
Computational Linguistics Volume 34, Number 3
</table>
<tableCaption confidence="0.983636">
Table 12
</tableCaption>
<table confidence="0.999794777777778">
Accuracy in percent for the pronominal anaphora resolution.
NWire NPaper BNews Average
C5 SC 71.6 75.6 69.5 72.7
TC
- Elimination 71.6 81.3 74.5 76.4
- Round Robin 72.9 81.3 74.9 76.9
- Weighted Round Robin 72.9 80.5 75.6 76.7
MaxEnt SC 72.9 77.1 74.9 75.2
TC
- Elimination 75.1 79.1 77.5 77.4
- Round Robin 75.1 79.1 77.5 77.4
- Weighted Round Robin 75.7 78.6 77.1 77.3
SVM SC 72.9 77.3 74.2 75.1
TC
- Elimination 73.5 82.0 78.9 78.5
- Round Robin 74.4 82.0 78.9 78.7
- Weighted Round Robin 74.6 79.3 78.2 77.5
Rank SVM 73.5 79.3 76.4 76.7
</table>
<bodyText confidence="0.99987075">
The average accuracy is comparable to that reported by Kehler et al. (2004) (around
75%), who also used the single-candidate model to do pronoun resolution with similar
features (using MaxEnt) on the ACE data sets. By contrast, the systems with the twin-
candidate model are able to achieve accuracy of up to 75.7% (NWire), 82.0% (NPaper),
and 78.9% (BNews). The average accuracy is 76.9% for C5, 77.4% for MaxEnt, and 78.7%
for SVM, which is statistically significantly9 better than the results of the baselines (4.2%,
2.2%, and 3.6% in accuracy). These results confirm our claim that the twin-candidate
model is more effective than the single-candidate model for the task of pronominal
anaphora resolution.
We see no significant difference between the accuracy rates (less than 1.0% accuracy)
produced by the two antecedent identification schemes, Tournament Elimination and
Round Robin. This is in contrast to our belief that the Round Robin scheme, which is
more reliable than the Tournament Elimination, should lead to much better results. One
possible reason could be that the classifier in our systems can make a correct preference
judgement (with accuracy above 92% as in our test) in the cases where one candidate is
the antecedent and the other is not. As a consequence, the simple linear search can find
the final antecedent as well as the Round Robin method. These results suggest that we
can use the Elimination scheme in a practical system to make antecedent identification
more efficient. (Recall that the Elimination scheme requires complexity of O(N), instead
of O(N2) as in Round Robin.)
Ranking-SVM In our experiments, we were particularly interested in comparing
the results using the twin-candidate model and those directly using a preference learn-
ing algorithm. For this purpose, we built a system based on Ranking-SVM (Joachims
2002), an extension of SVM capable of preference learning.
</bodyText>
<page confidence="0.685598">
9 Throughout our experiments, the significance was examined by using the paired t-test, with p &lt; 0.05.
340
</page>
<note confidence="0.954236">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<bodyText confidence="0.999870933333333">
The system uses a similar framework to the single-candidate-based system. For
training, given an anaphor, a set of instances is created for each of the antecedent candi-
dates. To learn the preference between competing candidates, a “query-ID” is specified
for each training instance in such a way that the instances formed by the candidates of
the same anaphor bear the same query-ID. The label of an instance represents the rank of
the candidate in the candidate set; here, “1” for the instances formed by the candidates
that are the antecedents, and “0” for the instances formed by the others. The training
instances are associated with features as defined in Table 3, to which the Ranking-
SVM algorithm is then applied to generate a preference classifier. During resolution, for
each candidate of a given anaphor, a test instance is formed and passed to the learned
classifier, which in turn returns a value to represent the rank of the candidate among all
the candidates. The anaphor is resolved to the one with the highest value.
In fact, if we look into the learning mechanism of Ranking-SVM, we can find
that the algorithm will, in the background, pair any two instances that have the same
query-ID but different rank labels. This is quite similar to the twin-candidate model,
which creates an instance by putting together two candidates with different preferences.
However, one advantage of the twin-candidate model is that it can explicitly record
various relationships between two competing candidates, for example, “which one
of the two candidates is closer to the anaphor in position/syntax/semantics?”10 Such
inter-candidate information can make the preference between candidates clearer, and
thus facilitate both preference learning and determination. In contrast, Ranking-SVM,
which constructs instances in the single-candidate form, cannot effectively capture this
kind of information.
The last line of Table 12 shows the results from such a system based on Ranking-
SVM. We can see that the system achieves an average accuracy of 76.7%, statistically
significantly better than the baseline system with the single-candidate model by 1.6%
(0.4% for NWire, 2.0% for NPaper, and 2.2% for BNews). The results lend support to our
claim that the preference relationships between candidates, if taken into consideration
for classifier training, can lead to better resolution performance. Still, we observe that
our twin-candidate model beats Ranking-SVM in average accuracy by 1.8% (Elimina-
tion scheme) and 2.0% (Round Robin).
Decision Tree One advantage of the C5 learning algorithm is that the generated
classifier can be easily interpreted by humans, and the importance of the features
can be visually illustrated. In Figures 1 and 2, we show the decision trees (top four
levels) output by C5 for the NWire domain, based on the single-candidate and the
twin-candidate models, respectively. As the twin-candidate model uses a larger pool
of features, the tree for the twin-candidate model is more complicated (180 nodes) than
the one for the single-candidate model (36 nodes).
From the two trees, we can see that both models rely on similar features such as lexi-
cal, positional, and grammatical properties for pronoun resolution. However, we can see
that the preferential factors (e.g., subject preference, parallelism preference, and distance
preference as discussed in Section 3.2) are more clearly presented in the twin-candidate-
based tree. For example, if two candidates are both pronouns, the twin-candidate-based
tree will suggest that the one closer to the anaphor has a higher preference to be the
antecedent. By contrast, such a preference relationship has to be implicitly represented
</bodyText>
<footnote confidence="0.565756333333333">
10 In the current work, we only consider the positional relationship between candidates by stipulating
that i &lt; j for an instance ilana, Ci, CjI. In our future work, we will explore more inter-candidate
relationships that are helpful for preference determination.
</footnote>
<page confidence="0.982176">
341
</page>
<figure confidence="0.812303">
Computational Linguistics Volume 34, Number 3
</figure>
<figureCaption confidence="0.994285">
Figure 1
</figureCaption>
<bodyText confidence="0.914011076923077">
Decision tree generated for pronoun resolution under the single-candidate model. For feature
ana Type, the values PRON SHE,PRON SHE,PRON SHE, and PRON THEY represent whether
the anaphor is a pronoun such as she, he, it, and they, respectively. For candi Subject, the values
SUBJ MAIN, SUBJ CLAUSE and NO represent whether the candidate is the subject of a main
sentence, or the subject of a clause, or not. For candi Object, the values OBJ VERB, OBJ PREP, and
NO represent whether the candidate is the object of a verb, a preposition, or not, respectively.
For other features, 0 and 1 represent yes/no.
in the single-candidate-based tree, with different confidence values being assigned to
the candidates in different sentences.
Learning Curve In our experiments, we were also concerned about how training
data size might influence anaphora resolution performance. For this purpose, we di-
vided the anaphors in the training documents into 10 batches, and then performed
resolution using the classifiers trained with 1, 2, ... , 10 batches of anaphors. Figure 3
plots the learning curves of the systems with the single-candidate model and the twin-
candidate model (Round Robin scheme) for the NPaper domain. Each accuracy rate
shown in the figure is the average of the results from three trials trained on different
anaphors.
From the figure we can see that both the single-candidate model and the twin-
candidate model reach their peak performance with around six batches (around
880 anaphors). As shown, the twin-candidate model is not apparently superior to
the single-candidate model when the size of the training data is small (below two
batches, 290 anaphors). This is due to the fact that the number of features in the twin-
candidate model is nearly double that in the single-candidate model. As a result, the
twin-candidate model requires more training data than the single-candidate model to
avoid the data sparseness problem. Nevertheless, it does not need too much training
data to beat the latter; it can produce the accuracy rates consistently higher than the
</bodyText>
<page confidence="0.995446">
342
</page>
<note confidence="0.981215">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<figureCaption confidence="0.918453666666667">
Figure 2
Decision tree generated for pronoun resolution under the twin-candidate model.
Figure 3
</figureCaption>
<bodyText confidence="0.428393">
Learning curves of different models for pronominal anaphora resolution in the NPaper Domain
(120 anaphors per batch).
</bodyText>
<page confidence="0.994439">
343
</page>
<table confidence="0.382296">
Computational Linguistics Volume 34, Number 3
</table>
<tableCaption confidence="0.894485">
Table 13
</tableCaption>
<bodyText confidence="0.736076285714286">
A sample text for coreference resolution.
[1 Globalstar] still needs to raise [2 $600 million], and
[3 Schwartz] said [4 that company] would try to raise [5 the
money] in [6 the debt market].
single-candidate model when trained with more than two batches of anaphors. This
figure further demonstrates that the twin-candidate model is reliable and effective for
the pronominal anaphora resolution task.
</bodyText>
<sectionHeader confidence="0.79057" genericHeader="method">
4. Deploying the Twin-Candidate Model to Coreference Resolution
</sectionHeader>
<bodyText confidence="0.999949230769231">
One task that is closely related to anaphora resolution is coreference resolution, the
process of identifying all the coreferential expressions in texts.11 Coreference resolution
is different from anaphor resolution. The latter focuses on how an anaphor can be suc-
cessfully resolved, and the resolution is done on given anaphors. The former, in contrast,
focuses on how the NPs that are coreferential with each other can be found correctly
and completely, and the resolution is done on all possible NPs. In a text, many NPs,
especially the non-pronouns, are non-anaphors that have no antecedent to be found
in the previous text. Hence, the task of coreference resolution is a more complicated
challenge than anaphora resolution, as a solution should not only be able to resolve
an anaphor to the correct antecedent, but should also refrain from resolving a non-
anaphor. In this section, we will explore how to deploy the learning models for anaphor
resolution in the coreference resolution task. As pronouns are usually anaphors, we will
focus mainly on the resolution of non-pronouns.
</bodyText>
<subsectionHeader confidence="0.992841">
4.1 Coreference Resolution Based on the Single-Candidate Model
</subsectionHeader>
<bodyText confidence="0.999936181818182">
In practice, the single-candidate model can be applied to coreference resolution directly,
using the similar training and testing procedures to those used in anaphora resolution
(described in Section 2).
For training, we create “0” and “1” training instances for each encountered anaphor,
that is, the NP that is coreferential with at least one preceding NP. Specifically, given an
anaphor and its antecedent candidates, a positive instance is generated for the closest
antecedent and a set of negative instances is generated for each of the candidates that is
not coreferential with the anaphor.12
Consider the text in Table 13 as an example. In the text, [4 that company] and [5 the
money] are two anaphors, with [1 Globalstar] and [2 $600 million] being their antecedents,
respectively. Table 14 lists the training instances to be created for this text.
</bodyText>
<footnote confidence="0.9871904">
11 In our study, we only consider within-document noun phrase coreference resolution.
12 In some coreference resolution systems (Soon, Ng, and Lim 2001; Ng and Cardie 2002b), only the
non-coreferential candidates occurring between the closest antecedent and the anaphor are used to create
negative instances. In the experiments, we found that these sampling strategies for negative instances
led to a trade-off between recall and precision, but no significant difference in the overall F-measure.
</footnote>
<page confidence="0.995765">
344
</page>
<note confidence="0.982028">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.992115">
Table 14
</tableCaption>
<figure confidence="0.526175857142857">
Training instances generated under the single-candidate model for coreference resolution.
Anaphor Training Instance Label
i{[4 that company] , [1 Globalstar]} 1
[4 that company] i{[4 that company] , [2 $600 million]} 0
i{[4 that company] , [3 Schwartz]} 0
i{[5 the money] , [1 Globalstar]} 0
[5 the money] i{[5 the money] , [2 $600 million]} 1
i{[5 the money] , [3 Schwartz]} 0
i{[5 the money] , [4 that company]} 0
Table 15
Feature set for coreference resolution.
ana Def whether the possible anaphor is a definite description
ana Indef whether the possible anaphor is an indefinite NP
ana Name whether the possible anaphor is a named entity
candi Def whether the candidate is a definite description
candi Indef whether the candidate is an indefinite description
candi Name whether the candidate is a named-entity
candi SentDist the sentence distance between the possible anaphor and the candidate
candi NameAlias whether the candidate and the candidate are aliases for each other
candi Appositive whether the possible anaphor and the candidate are in an appositive
structure
</figure>
<figureCaption confidence="0.9861345">
candi NumberAgree whether the possible anaphor and the candidate agree in number
candi GenderAgree whether the possible anaphor and the candidate agree in gender
candi HeadStrMatch whether the possible anaphor and the candidate have the same head
string
candi FullStrMatch whether the possible anaphor and the candidate contain the same
strings (excluding the determiners)
candi SemAgree whether the possible anaphor and the candidate belong to the same
semantic category in WordNet
</figureCaption>
<bodyText confidence="0.993615214285714">
In Table 15, we list the features used in our study for coreference resolution, which
are similar to those proposed in Soon, Ng, and Lim’s (2001) system.13 All these features
are domain independent and the values can be computed with low cost but high
reliability.
After training, the learned classifier can be directly used for coreference resolution.
Given an NP to be resolved, a test instance is generated for each of its antecedent
candidates. The classifier, being given the instance, will determine the likelihood that
the candidate is the antecedent of the possible anaphor. If the confidence is below
a pre-specified threshold, the candidate is discarded. In the case where none of the
candidates have a confidence higher than the threshold, the current NP is deemed a
13 As we focus on coreference resolution for non-pronouns, we do not use the feature that describes
whether or not the NP to be resolved is a pronoun. Also, we do not use the feature that describes
whether or not a candidate is a pronoun, because, as will be discussed together with the experiments,
a pronoun is not taken as an antecedent candidate for a non-pronoun to be resolved.
</bodyText>
<page confidence="0.995608">
345
</page>
<note confidence="0.478069">
Computational Linguistics Volume 34, Number 3
</note>
<bodyText confidence="0.953369">
non-anaphor and left unresolved. Otherwise, it is resolved to the candidate with the
highest confidence.14
</bodyText>
<subsectionHeader confidence="0.966661">
4.2 Coreference Resolution Based on the Twin-Candidate Model
</subsectionHeader>
<bodyText confidence="0.9938805">
The twin-candidate model presented in the previous section focuses on the preference
between candidates. The model will always select a “best” candidate as the antecedent,
even if the current NP is a non-anaphor. To deal with this problem, we will teach the
preference classifier how to identify non-anaphors, by incorporating non-anaphors to
create a special class of training instances. For resolution, if the newly learned classifier
returns the special class label, we will know that the current NP is a non-anaphor, and no
preference relationship holds between the two candidates under consideration. In this
way, the twin-candidate model is capable of carrying out both antecedent identification
and anaphoricity determination by itself, and thus can be deployed for coreference
resolution directly. In this section, we will describe the modified training and resolution
procedures of the twin-candidate model.
4.2.1 Training. As with anaphora resolution, an instance of the twin-candidate model
for coreference resolution takes the form i{ana, Ci, Cjj, where ana is a possible anaphor,
and Cj and Cj are two of its antecedent candidates (i &lt; j). The feature set is similar to
that for the single-candidate model as defined in Table 15, except that a candi X feature
is replaced by a pair of features, cand1 x and candi2 x, for the two competing candi-
dates, respectively.
During training, if an encountered NP is an anaphor, we create “01” or “10” training
instances in the same way as in the original learning framework. If the NP is a non-
anaphor, we do the following:
</bodyText>
<listItem confidence="0.99924525">
• From the antecedent candidates,15 randomly select one as the anchor
candidate.
• Create a set of instances by pairing the anchor candidate and each of the
other non-coreferential candidates.
</listItem>
<bodyText confidence="0.999498090909091">
The instances formed by the non-anaphors are labeled “00.”
Consider the sample text in Table 13. For the two anaphors [4 that company] and
[5 the money], we create the “01” and “10” instances as usual. For the non-anaphors
[3 Schwartz] and [6 the debt market], we generate two sets of “00” instances. Table 16 lists
all the training instances for the text (supposing [1 Globalstar] and [2 $600 million] are the
anchor candidates for [3 Schwartz] and [6 the debt market], respectively).
The “00” training instances are used together with the “01” and “10” ones to train
a classifier. Given a test instance i{ana, Ci, Cjj (i &lt; j), the newly learned classifier is
supposed to return “01” (or “10”), indicating ana is an anaphor and Ci (or Cj) is preferred
as its antecedent, or return “00”, indicating ana is a non-anaphor and no preference
exists between Ci and Cj.
</bodyText>
<footnote confidence="0.9690168">
14 Other clustering strategies are also available, for example, “closest-first” where a possible anaphor is
resolved to the closest candidate with the confidence above the specified threshold, if any (Soon, Ng,
and Lim 2001).
15 For a non-anaphor, we also take the preceding NPs as its antecedent candidates. We will discuss this
issue later together with the experimental setup.
</footnote>
<page confidence="0.995981">
346
</page>
<note confidence="0.982576">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.531570818181818">
Table 16
Training instances generated under the twin-candidate model for coreference resolution.
Possible Anaphor Training Instance Label
i{[4 that company], [1 Globalstar], [2 $600 million]} 10
[4 that company] i{[4 that company], [1 Globalstar], [3 Schwartz]} 10
i{[5 the money], [1 Globalstar], [2 $600 million]} 01
[5 the money] i{[5 the money], [2 $600 million], [3 Schwartz]} 10
i{[5 the money], [2 $600 million], [4 that company]} 10
[3 Schwartz] i{[3 Schwartz], [1 Globalstar], [2 $600 million]} 00
i{[6 the debt market], [1 Globalstar], [2 $600 million]} 00
i{[6 the debt market], [2 $600 million], [3 Schwartz]} 00
</tableCaption>
<bodyText confidence="0.95590336">
[6 the debt market] i{[6 the debt market], [2 $600 million], [4 that company]} 00
i{[6 the debt market], [2 $600 million], [5 the money]} 00
4.2.2 Antecedent Identification. Accordingly, we make a modification to the original Tour-
nament Elimination and the Round Robin schemes:
Tournament Elimination Scheme As with anaphora resolution, given an NP to be
resolved, candidates are compared linearly from the beginning to the end. If an instance
for two competing candidates is classified as “01” or “10”, the preferred candidate will
be compared with subsequent competitors while the loser is eliminated immediately.
If the instance is classified as “00”, both the two candidates are discarded and the
comparison restarts with the next two candidates.16 The process continues until all the
candidates have been compared. If both of the candidates in the last match are judged to
be “00”, the current NP is left unresolved. Otherwise, the NP will be resolved to the final
winner, on the condition that the highest confidence that the winner has ever obtained
is above a pre-specified threshold.
Round Robin Scheme In the Round Robin scheme, each candidate is compared
with every other candidate. If two candidates are labeled “00” in a match, both candi-
dates receive a penalty of −1 in their respective scores. If no candidate has a positive
final score, then the NP is considered non-anaphoric and left unresolved. Otherwise,
it is resolved to the candidate with the highest score as usual. Here, we can also use a
threshold. That is, we will update the scores of the two candidates in a match if and
only if the preference confidence returned by the classifier is higher than a pre-specified
threshold.
In rare cases where an NP to be resolved has only one antecedent candidate, a
pseudo-instance is created by pairing the candidate with itself. The NP will be resolved
to the candidate unless the instance is labeled “00”.
</bodyText>
<subsectionHeader confidence="0.966764">
4.3 Evaluation
</subsectionHeader>
<bodyText confidence="0.502848">
4.3.1 Experimental Setup. We used the same ACE data sets for coreference resolution
evaluation, as described in the previous section for anaphora resolution. A raw input
document was processed in advance by the same pipeline of NLP modules including
</bodyText>
<page confidence="0.755385">
16 If only one candidate remains, it will be compared with the candidate eliminated last.
347
</page>
<note confidence="0.44484">
Computational Linguistics Volume 34, Number 3
</note>
<tableCaption confidence="0.993286">
Table 17
</tableCaption>
<table confidence="0.908309714285714">
Statistics of the training instances generated for coreference resolution (non-pronoun).
NWire NPaper BNews
Single-Candidate 0 instances 78,191 105,152 33,748
1 instances 3,197 3,792 2,094
00 instances 296,000 331,957 159,752
Twin-Candidate 01 instances 50,499 70,433 21,170
10 instances 27,692 34,719 12,578
</table>
<bodyText confidence="0.962532962962963">
POS-tagger, NP chunker, NE recognizer, and so on, to obtain all possible NPs and
related information (see Section 3.5.1).
For evaluation, we adopted Vilain et al.’s (1995) scoring algorithm in which recall
and precision17 were computed by comparing the key chains (i.e., the annotated “stan-
dard” coreferential chains) and the response chains (i.e., the chains generated by the
coreference resolution system).
As already mentioned, the twin-candidate model described in this section is mainly
meant for non-pronouns that are often not anaphoric. To better examine the utility
of the model in our experiments, we first focused on coreference resolution for non-
pronominal NPs. The recall and precision to be reported were computed based on the
response chains and the key chains from which all the pronouns are removed. We will
later show the results of overall coreference resolution for whole NPs by combining the
resolution of pronouns and non-pronouns.
In non-pronoun resolution, an anaphor and its antecedent do not often occur a short
distance apart as they do in pronoun resolution. For this reason, during training, we
took as antecedent candidates all the preceding non-pronominal NPs18 in the current
and previous four sentences; while during testing, we used all the preceding non-
pronouns, regardless of distance, as candidates.19 The statistics of the training instances
for each data set are summarized in Table 17.
Again, we examined the three learning algorithms: C5, MaxEnt, and SVM.20 As
both the single-candidate and the twin-candidate models used a threshold to block low-
confidence coreferential pairs, we performed three-fold cross-evaluation on the training
data to determine the thresholds for the coreference resolution systems.
4.3.2 Results and Discussions. Table 18 lists the results for the different systems on the
non-pronominal NP coreference resolution. We used as the baseline the system with the
single-candidate model described in Section 4.1. As mentioned, the system was trained
17 The overall F-measure was defined as
</bodyText>
<equation confidence="0.3182855">
2 * Recall * Precision
Recall + Precision
</equation>
<footnote confidence="0.980341125">
18 As suggested in Ng and Cardie (2002b), we did not include pronouns in the candidate set of a
non-pronoun, because a pronoun is usually anaphoric and cannot give much information about
the entity to which it refers.
19 Unlike in the case of pronoun resolution, we did not filter candidates that had mismatched
number/gender agreement as these constraints are not reliable for non-pronoun resolution (e.g.,
in our data set, around 15% of coreferential pairs do not agree in number). Instead, we took these
factors as features (see Table 15) and let the learning algorithm make the preference decision.
20 For SVM, we employed the one-against-all aggregation method for the 3-class learning and testing.
</footnote>
<page confidence="0.991947">
348
</page>
<note confidence="0.987344">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.992808">
Table 18
</tableCaption>
<table confidence="0.993647904761905">
Recall (R), Precision (P), and F-measure (F) in percent for coreference resolution (non-pronoun).
NWire NPaper BNews
R P F R P F R P F
C5 SC
- baseline 63.3 48.1 54.7 63.8 42.2 50.8 63.5 53.7 58.2
- with non-anaphors 40.9 81.5 54.4 39.8 81.4 53.4 35.1 76.8 48.2
TC
- Elimination 50.8 63.0 56.2 56.6 60.1 58.3 44.6 71.2 54.9
- Round Robin 58.7 57.9 58.3 56.5 60.5 58.4 49.0 70.1 57.7
MaxEnt SC
- baseline 62.1 52.3 56.8 56.4 58.8 57.6 61.8 54.1 57.7
- with non-anaphors 59.6 54.0 56.7 54.2 62.6 58.1 53.8 58.4 56.0
TC
- Elimination 59.1 55.4 57.2 52.2 69.0 59.5 53.5 61.9 57.4
- Round Robin 58.7 55.9 57.2 53.4 65.9 59.0 54.3 62.8 58.3
SVM SC
- baseline 64.1 49.0 55.5 65.5 42.1 51.3 63.5 53.7 58.2
- with non-anaphors 42.3 70.0 52.7 40.0 76.6 52.5 35.7 77.0 48.8
TC
- Elimination 57.8 53.2 55.4 51.7 56.5 54.0 63.3 53.8 58.2
- Round Robin 54.3 56.9 55.6 56.1 58.1 57.1 63.7 53.8 58.3
</table>
<bodyText confidence="0.9818765">
on the instances formed by anaphors. For better comparison with the twin-candidate
model, we built another single-candidate-based system in which the non-anaphors were
also incorporated for training. Specifically, for each encountered non-anaphor during
training, we created a set of “0” instances by pairing the non-anaphor with each of the
candidates. These instances were added to the original instances formed by anaphors
to learn a classifier,21 which was then applied for the resolution as usual.
The results for the two single-candidate based systems are listed in Table 18. When
trained with the instances formed only by anaphors, the system could achieve recall
above 60% and precision of around 50% for the three domains. When trained with the
instances formed by both anaphors and non-anaphors, the system yielded a significant
improvement in precision. In the case of using C5 and SVM, the system is capable of
producing precision rates of up to 80%. The increase in precision is reasonable since the
classifier tends to be stricter in blocking non-anaphors. Unfortunately, however, at the
same time recall drops significantly, and no apparent improvement can be observed in
the resulting overall F-measure.
When trained with non-anaphors incorporated, the systems with the twin-
candidate model, described in Section 4.2, are capable of yielding higher precision
against the baseline. Although recall also drops at the same time, the increase in
precision can compensate it well: We observe that in most cases, the system with the
twin-candidate model can achieve a better F-measure than the baseline system with
the single-candidate model. Also, the improvement is statistically significant (t-test,
p &lt; 0.05) in the NWire domain when C5 is used (3.6%), and in the NPaper domain
21 The statistics of the “0” instances shown in Table 17 become 392,646, 455,167, and 207,667 for NWire,
NPaper, and BNews, respectively.
</bodyText>
<page confidence="0.995769">
349
</page>
<note confidence="0.594687">
Computational Linguistics Volume 34, Number 3
</note>
<bodyText confidence="0.999943560000001">
when any of the three learning algorithms, C5 (5.0%), MaxEnt (1.4%), and SVM (4.6%),
is used. These results suggest that our twin-candidate model can effectively identify
non-anaphors and block their invalid resolution, without affecting the accuracy of
determining antecedents for anaphors.
Compared with the pronoun resolution described in the previous section, here
we find that for non-pronoun resolution the superiority of the twin-candidate model
against the single-candidate model is not apparent. In some domains such as BNews,
the difference between the two models is not statistically significant. One possible
explanation is that for non-pronoun resolution, the features that really matter are quite
limited, that is, NameAlias, String-Matching, and Appositive (we will later show this
in the decision trees). A candidate that has any one of these features is most likely the
antecedent, regardless of the other competing candidates. In this situation, the single-
candidate model, which considers candidates in isolation, does as well as the twin-
candidate model. Still, the results suggest that the twin-candidate model is suitable for
both resolution tasks, no matter whether the features involved are strongly indicative
(as with non-pronoun resolution) or not (as with pronoun resolution).
As with anaphora resolution, we do not observe any apparent performance differ-
ence between the two twin-candidate identification schemes, Tournament Elimination
and Round Robin. The Round Robin scheme performs better than Elimination when
trained using C5 and SVM, by up to 2.8% and 2.9% in F-measure, respectively. However,
the Elimination scheme, when trained using MaxEnt, is capable of performing equally
well or slightly better (0.5% F-measure) than the Round Robin scheme.
Recall vs. Precision As discussed, the results in Table 18 show different recall and
precision patterns for different systems. The baseline system with the single-candidate
model tends to yield higher recall while the system with the twin-candidate model
tends to produce higher precision. Thus, a fairer comparison of the two systems is to
examine the precision rates that these systems achieve under the same recall rates. For
this purpose, in Figure 4, we plot the variant recall and precision rates that the two
systems are capable of obtaining (tested using MaxEnt, Round Robin scheme, for the
NPaper domain), focusing on precision rates above 50% and recall rates above 40%.
From the figure, we find that the system with the twin-candidate model achieves higher
precision for recall rates ranging from 40% and 55%, and performs equally well for recall
rates above 55%, which further proves the reliability of our twin-candidate model for
coreference resolution.
Decision Trees In Figures 5 and 6, we show the two decision trees (NWire domain)
generated by the systems with the single-candidate model and the twin-candidate
model, respectively. The tree from the single-candidate model contains only 13 nodes,
considerably smaller than that from the twin-candidate model, which contains around
1.2k nodes. From the figure, we can see that both models heavily rely on string-
matching, name-alias, and appositive features to perform non-pronoun resolution, in
contrast to pronoun resolution where lexical and positional features seem more impor-
tant (as shown in Figures 1 and 2).
Learning Curves In our experiments, we were also interested in evaluating the
resolution performance of the two learning models on different quantities of training
data. Figure 7 plots the learning curves for the systems using the single-candidate model
and the system using the twin-candidate model (NPaper domain). The F-measure is
averaged over three random trials trained on 5, 10, 15, ... documents. Consistent with
the curves for the anaphora resolution task as depicted in Figure 3, the system with
the twin-candidate model outperforms the one with the single-candidate model on a
small amount of training data (less than five documents). When more data is available,
</bodyText>
<page confidence="0.995535">
350
</page>
<note confidence="0.986618">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<figureCaption confidence="0.97039525">
Figure 4
Various recall (%) and precision (%) of different models for non-pronoun resolution.
Figure 5
Decision tree generated for non-pronoun resolution under the single-candidate model.
</figureCaption>
<bodyText confidence="0.966390909090909">
the twin-candidate model also yields a consistently better F-measure than the single-
candidate model.
Overall Coreference Resolution Having demonstrated the performance of the
twin-candidate model on coreference resolution for non-pronouns, we now further
examine overall coreference resolution for whole NPs, combining both pronoun
resolution and non-pronoun resolution. Specifically, given an input test document,
we check each encountered NP from beginning to end. If it is a pronoun,22 we use
22 We identify the pleonastic use of it in advance (79.2% accuracy) using a set of predefined pattern rules
based on regular expressions. The first-person and second-person pronouns are heuristically resolved
to the closest pronoun of the same type or a speaker nearby, if any, with an average 61.8% recall and
79.5% precision.
</bodyText>
<page confidence="0.987099">
351
</page>
<figure confidence="0.781609">
Computational Linguistics Volume 34, Number 3
</figure>
<figureCaption confidence="0.846574">
Figure 6
Decision tree generated for non-pronoun resolution under the twin-candidate model.
Figure 7
</figureCaption>
<subsectionHeader confidence="0.848101">
Learning curves of different models for non-pronoun resolution.
</subsectionHeader>
<bodyText confidence="0.9999135">
the pronominal anaphora resolution systems, as described in the previous section, to
resolve it to an antecedent. Otherwise, we use the non-pronoun coreference resolution
systems described in this section to resolve the NP to an antecedent, if any is found. All
the coreferential pairs are put together in a coreferential chain. The recall and precision
rates are computed by comparing the standard key chains and generated response
chains using Vilain et al.’s (1995) algorithm.
</bodyText>
<page confidence="0.991352">
352
</page>
<note confidence="0.985905">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<tableCaption confidence="0.996564">
Table 19
</tableCaption>
<table confidence="0.990951133333333">
Recall (R), Precision (P), and F-Measure (F) in percent for coreference resolution.
NWire NPaper BNews
R P F R P F R P F
C5 SC 62.2 52.6 57.0 64.9 50.6 56.9 62.9 58.5 60.6
TC
- Elimination 53.8 65.9 59.2 61.2 64.4 62.8 53.1 70.9 60.7
- Round Robin 59.0 61.2 60.1 62.0 64.3 63.1 56.0 69.9 62.2
MaxEnt SC 60.7 56.0 58.3 60.8 62.2 61.5 63.8 60.6 62.2
TC
- Elimination 59.5 59.2 59.3 58.6 67.8 62.9 59.3 66.4 62.7
- Round Robin 60.6 57.9 59.2 59.4 69.2 63.3 61.7 64.5 63.0
SVM SC 62.3 53.3 57.5 66.2 50.5 57.3 64.7 60.1 62.3
TC
- Elimination 57.6 57.0 57.3 58.5 62.6 60.5 65.0 60.6 62.7
- Round Robin 56.0 60.6 58.2 60.4 63.6 62.0 65.4 60.7 63.0
</table>
<bodyText confidence="0.966268533333333">
Table 19 lists the coreference resolution results of the systems with different learning
models. We observe that the results for overall coreference resolution are better than
those of non-pronoun coreference resolution as shown in Table 18, which is due to the
comparatively high accuracy of the resolution of pronouns.
In line with the previous results for pronoun resolution and non-pronoun resolu-
tion, the twin-candidate model outperforms the single-candidate model in coreference
resolution for whole NPs. Consider the system trained with MaxEnt as an example.
The single-candidate-based system obtains F-measures of 58.3%, 61.5%, and 62.2% for
the NWire, NPaper, and BNews domains.23 By comparison, the twin-candidate-based
system (Round Robin scheme) can achieve F-measures of 59.2%, 63.3%, and 63.0% for
the three domains. The improvement over the single-candidate model in F-measure
(0.9%, 1.8%, and 0.8%) is larger than that for non-pronoun resolution (0.4%, 1.4%,
and 0.6% as shown in Table 18), owing to the higher gains obtained from pronoun
resolution. For the systems trained using C5 and SVM, similar patterns of performance
improvement may be observed.
</bodyText>
<sectionHeader confidence="0.994992" genericHeader="conclusions">
5. Conclusion
</sectionHeader>
<bodyText confidence="0.9635827">
In this article, we have presented a twin-candidate model for learning-based anaphora
resolution. The traditional single-candidate model considers candidates in isolation,
and thus cannot accurately capture the preference relationships between competing
candidates to provide reliable resolution. To deal with this problem, our proposed twin-
candidate model recasts anaphora resolution as a preference classification problem.
It learns a classifier that can explicitly determine the preference between competing
candidates, and then during resolution, choose the antecedent of an anaphor based on
the ranking of the candidates.
23 The results are comparable to the baseline system by Ng (2005), which also uses the single-candidate
model and is capable of F-measures of 50.1%, 62.1%, and 57.5% for the three domains, respectively.
</bodyText>
<page confidence="0.995189">
353
</page>
<note confidence="0.565816">
Computational Linguistics Volume 34, Number 3
</note>
<bodyText confidence="0.999970066666667">
We have introduced in detail the framework of the twin-candidate model for
anaphora resolution, including instance representation, training procedure, and the an-
tecedent identification scheme. The efficacy of the twin-candidate model for pronominal
anaphora resolution has been evaluated in different domains, using ACE data sets. The
experimental results show that the model yields statistically significantly higher accu-
racy rates than the traditional single-candidate model (up to 4.2% in average accuracy
rate), suggesting that the twin-candidate model is superior to the latter for pronominal
anaphora resolution.
We have further investigated the deployment of the twin-candidate model in the
more complicated coreference resolution task, where not all the encountered NPs are
anaphoric. We have modified the model to make it directly applicable for coreference
resolution. The experimental results for non-pronoun resolution indicate that the twin-
candidate-based system performs equally well, and, in some domains, statistically
significantly better than the single-candidate based systems. When combined with
the results for pronoun resolution, the twin-candidate based system achieves further
improvement against the single-candidate-based systems in all the domains.
A number of further contributions can be made by extending this work in new
directions. Currently, we only adopt simple domain-independent features for learning.
Our recent work (Yang, Su, and Tan 2005) suggests that more complicated features, such
as statistics-based semantic compatibility, can be effectively incorporated in the twin-
candidate model for pronoun resolution. In future work, we intend to provide a more
in-depth investigation into the various kinds of knowledge that are suitable for the twin-
candidate model. Furthermore, in our current work for coreference resolution, all the
NPs preceding an anaphor are used as antecedent candidates, and all encountered non-
anaphors in texts are incorporated without filtering into training instance creation. For
more balanced training data and better classifier learning, we intend to explore some
instance-sampling techniques, such as those proposed by Ng and Cardie (2002a), to
remove in advance low-confidence candidates and the less informative non-anaphors.
We hope that these efforts can further improve the performance of the twin-candidate
model in both anaphora resolution and coreference resolution.
</bodyText>
<sectionHeader confidence="0.994035" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99776775">
We would like to thank Guodong Zhou,
Alexia Leong, Stanley Wai Keong Yong,
and three anonymous reviewers for their
helpful comments and suggestions.
</bodyText>
<sectionHeader confidence="0.998059" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.992820848484849">
Aone, Ghinatsu and Scott W. Bennett.
1995. Evaluating automated and
manual acquisition of anaphora
resolution strategies. In Proceedings of
the 33rd Annual Meeting of the Association
for Computational Linguistics (ACL),
pages 122–129, Cambridge, Massachusetts.
Berger, Adam L., Stephen A. Della Pietra,
and Vincent J. Della Pietra. 1996. A
maximum entropy approach to natural
language processing. Computational
Linguistics, 22(1):39–71.
Chomsky, Noam.1981. Lectures on
Government and Binding. Foris,
Dordrecht, The Netherlands.
Clark, Herber H. and C. J. Sengul.1979.
In search of referents for noun phrases
and pronouns. Memory and Cognition,
7:35–41.
Connolly, Dennis, John D. Burger, and
David S. Day, 1997. A machine learning
approach to anaphoric reference. In
New Methods in Language Processing,
pages 133–144, Taylor and Francis,
Bristol, Pennsylvania.
Crawley, Rosalind A., Rosemary J.
Stevenson, and David Kleinman. 1990.
The use of heuristic strategies in the
interpretation of pronouns. Journal of
Psycholinguistic Research, 19:245–264.
Denis, Pascal and Jason Baldridge. 2007. A
ranking approach to pronoun resolution.
In Proceedings of the 20th International Joint
</reference>
<page confidence="0.998201">
354
</page>
<note confidence="0.968633">
Yang, Su, and Tan A Twin-Candidate Model for AR
</note>
<reference confidence="0.99695356779661">
Conference on Artificial Intelligence (IJCAI),
pages 1588–1593, Hyderabad, India.
Garnham, Alan, 2001. Mental Models and the
Interpretation of Anaphora. Psychology
Press Ltd., Hove, East Sussex, UK.
Ge, Niyu, John Hale, and Eugene Charniak.
1998. A statistical approach to anaphora
resolution. In Proceedings of the 6th
Workshop on Very Large Corpora,
pages 161–171, Montreal, Quebec, Canada.
Gernsbacher, Morton A. and David
Hargreaves. 1988. Accessing sentence
participants: The advantage of first
mention. Journal of Memory and Language,
27:699–717.
Grober, Ellen H., William Beardsley, and
Alfonso Caramazza. 1978. Parallel
function in pronoun assignment.
Cognition, 6:117–133.
Grosz, Barbara J., Aravind K. Joshi, and Scott
Weinstein. 1995. Centering: A framework
for modeling the local coherence of
discourse. Computational Linguistics,
21(2):203–225.
Hobbs, Jerry. 1978. Resolving pronoun
references. Lingua, 44:339–352.
Iida, Ryu, Kentaro Inui, Hiroya Takamura,
and Yuji Matsumoto. 2003. Incorporating
contextual cues in trainable models for
coreference resolution. In Proceedings of the
10th Conference of EACL, Workshop ”The
Computational Treatment of Anaphora,”
pages 23–30, Budapest, Hungary.
Joachims, Thorsten. 2002. Optimizing search
engines using clickthrough data. In
Proceedings of the ACM Conference on
Knowledge Discovery and Data Mining
(KDD), pages 133–142, Edmonton,
Alberta, Canada.
Jurafsky, Daniel and James H. Martin.
2000. Speech and Language Processing:
An Introduction to Natural Language
Processing, Computational Linguistics,
and Speech Recognition. Prentice Hall,
Upper Saddle River, New Jersey.
Kehler, Andrew. 1997. Probabilistic
coreference in information extraction.
In Proceedings of the 2nd Conference on
Empirical Methods in Natural Language
Processing (EMNLP), pages 163–173,
Providence, Rhode Island.
Kehler, Andrew, Douglas Appelt,
Lara Taylor, and Aleksandr Simma. 2004.
The (non)utility of predicate-argument
frequencies for pronoun interpretation.
In Proceedings of the North American
Chapter of the Association for Computational
Linguistics annual meeting (NAACL),
pages 289–296, Boston, MA.
Lappin, Shalom and Herbert J. Leass. 1994.
An algorithm for pronominal anaphora
resolution. Computational Linguistics,
20(4):525–561.
Luo, Xiaoqiang, Abe Ittycheriah, Hongyan
Jing, Nanda Kambhatla, and Salim
Roukos. 2004. A mention-synchronous
coreference resolution algorithm
based on the bell tree. In Proceedings
of the 42nd Annual Meeting of the
Association for Computational
Linguistics (ACL), pages 135–142,
Barcelona, Spain.
McCarthy, Joseph F. and Wendy G. Lehnert.
1995. Using decision trees for coreference
resolution. In Proceedings of the 14th
International Conference on Artificial
Intelligences (IJCAI), pages 1050–1055,
Montreal, Quebec, Canada.
McEnery, A., I. Tanaka, and S. Botley.
1997. Corpus annotation and reference
resolution. In Proceedings of the ACL
Workshop on Operational Factors in
Practical Robust Anaphora Resolution
for Unrestricted Texts, pages 67–74,
Madrid, Spain.
Ng, Hwee Tou, Yu Zhou, Robert Dale,
and Mary Gardiner. 2005. Machine
learning approach to identification
and resolution of one-anaphora. In
Proceedings of the Nineteenth International
Joint Conference on Artificial Intelligence
(IJCAI), pages 1105–1110, Edinburgh,
Scotland.
Ng, Vincent. 2005. Machine learning for
coreference resolution: From local
classification to global ranking. In
Proceedings of the 43rd Annual Meeting
of the Association for Computational
Linguistics (ACL), pages 157–164,
Ann Arbor, Michigan.
Ng, Vincent and Claire Cardie. 2002a.
Combining sample selection and
error-driven pruning for machine
learning of coreference rules. In
Proceedings of the Conference on
Empirical Methods in Natural Language
Processing (EMNLP), pages 55–62,
Philadelphia, PA.
Ng, Vincent and Claire Cardie. 2002b.
Improving machine learning approaches
to coreference resolution. In Proceedings of
the 40th Annual Meeting of the Association
for Computational Linguistics (ACL),
pages 104–111, Philadelphia, PA.
Preiss, Judita. 2001. Machine learning for
anaphora resolution. Technical Report
CS-01-10, University of Sheffield,
Sheffield, England.
</reference>
<page confidence="0.964074">
355
</page>
<reference confidence="0.988961581818182">
Computational Linguistics Volume 34, Number 3
Quinlan, J. Ross.1993. C4.5: Programs for
Machine Learning. Morgan Kaufmann
Publishers, San Francisco, CA.
Soon, Wee Meng, Hwee Tou Ng, and Daniel
Chung Yong Lim. 2001. A machine
learning approach to coreference
resolution of noun phrases. Computational
Linguistics, 27(4):521–544.
Stevenson, Rosemary J., Alexander W. R.
Nelson, and Keith Stenning. 1995. The role
of parallelism in strategies of pronoun
comprehension. Language and Speech,
29:393–418.
Strube, Michael and Christoph Mueller.
2003. A machine learning approach to
pronoun resolution in spoken dialogue.
In Proceedings of the 41st Annual Meeting
of the Association for Computational
Linguistics (ACL), pages 168–175,
Sapporo, Japan.
Vapnik, Vladimir N. 1995. The Nature of
Statistical Learning Theory. Springer-Verlag,
New York, NY.
Vilain, Marc, John Burger, John Aberdeen,
Dennis Connolly, and Lynette Hirschman.
1995. A model-theoretic coreference
scoring scheme. In Proceedings of the Sixth
Message Understanding Conference (MUC-6),
pages 45–52, San Francisco, CA.
Wilks, Yorick. 1973. Preference Semantics.
Stanford AI Laboratory Memo AIM-206.
Stanford University.
Winograd, Terry. 1972. Understanding Natural
Language. Academic Press, New York.
Yang, Xiaofeng, Jian Su, and Chew Lim Tan.
2005. Improving pronoun resolution using
statistics-based semantic compatibility
information. In Proceedings of the 43rd
Annual Meeting of the Association for
Computational Linguistics (ACL),
pages 165–172, Ann Arbor, MI.
Zhou, Guodong and Jian Su. 2000.
Error-driven HMM-based chunk tagger
with context-dependent lexicon. In
Proceedings of the Joint Conference on
Empirical Methods in Natural Language
Processing and Very Large Corpora,
pages 71–79, Hong Kong.
Zhou, Guodong and Jian Su. 2002. Named
Entity recognition using a HMM-based
chunk tagger. In Proceedings of the 40th
Annual Meeting of the Association for
Computational Linguistics (ACL),
pages 473–480, Philadelphia, PA.
</reference>
<page confidence="0.998997">
356
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.499282">
<title confidence="0.864245">A Twin-Candidate Model for Learning-Based Anaphora Resolution</title>
<affiliation confidence="0.9371998">Institute for Infocomm Research Institute for Infocomm Research Lim School of Computing, National University of Singapore</affiliation>
<abstract confidence="0.997622615384615">The traditional single-candidate learning model for anaphora resolution considers the antecedent candidates of an anaphor in isolation, and thus cannot effectively capture the preference relationships between competing candidates for its learning and resolution. To deal with this problem, we propose a twin-candidate model for anaphora resolution. The main idea behind the model is to recast anaphora resolution as a preference classification problem. Specifically, the model learns a classifier that determines the preference between competing candidates, and, during resolution, chooses the antecedent of a given anaphor based on the ranking of the candidates. We present in detail the framework of the twin-candidate model for anaphora resolution. Further, we explore how to deploy the model in the more complicated coreference resolution task. We evaluate the twin-candidate model in different domains using the Automatic Content Extraction data sets. The experimental results indicate that our twin-candidate model is superior to the single-candidate model for the task of pronominal anaphora resolution. For the task of coreference resolution, it also performs equally well, or better.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Ghinatsu Aone</author>
<author>Scott W Bennett</author>
</authors>
<title>Evaluating automated and manual acquisition of anaphora resolution strategies.</title>
<date>1995</date>
<booktitle>In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>122--129</pages>
<location>Cambridge, Massachusetts.</location>
<contexts>
<context position="2711" citStr="Aone and Bennett 1995" startWordPosition="380" endWordPosition="383"> on. In recent * 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: xiaofengy@i2r.a-star.edu.sg. ** 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: sujian@i2r.a-star.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of cla</context>
<context position="9698" citStr="Aone and Bennett 1995" startWordPosition="1457" endWordPosition="1460">idate Ck is the antecedent of the anaphor ana in the context of its antecedent candidates, C1, C2, ... , Cn. The singlecandidate model assumes that the probability that Ck is the antecedent is only dependent on the anaphor ana and Ck, and independent of all the other candidates. That is: p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1) Thus, the probability of a candidate Ck being the antecedent can be approximated using the classification result on the instance describing the anaphor and Ck alone. The single-candidate model is widely used in most anaphora resolution systems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the 329 Computational Linguistics Volume 34, Number 3 Table 1 A sample text for anaphora resolution. [1 Those figures] are almost exactly what [2 the government] proposed to [3 legislators] in [4 September]. If [5 the government] can stick with [6 them], [7 it] will be able to halve this year’s 120 billion ruble (US $193 billion) deficit. Table 2 Training instances generated under the single-candidate model for anaphora resolution. Anaphor Training Instance L</context>
</contexts>
<marker>Aone, Bennett, 1995</marker>
<rawString>Aone, Ghinatsu and Scott W. Bennett. 1995. Evaluating automated and manual acquisition of anaphora resolution strategies. In Proceedings of the 33rd Annual Meeting of the Association for Computational Linguistics (ACL), pages 122–129, Cambridge, Massachusetts.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam L Berger</author>
<author>Stephen A Della Pietra</author>
<author>Vincent J Della Pietra</author>
</authors>
<title>A maximum entropy approach to natural language processing.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<marker>Berger, Pietra, Pietra, 1996</marker>
<rawString>Berger, Adam L., Stephen A. Della Pietra, and Vincent J. Della Pietra. 1996. A maximum entropy approach to natural language processing. Computational Linguistics, 22(1):39–71.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Noam 1981 Chomsky</author>
</authors>
<title>Lectures on Government and Binding. Foris,</title>
<location>Dordrecht, The Netherlands.</location>
<marker>Chomsky, </marker>
<rawString>Chomsky, Noam.1981. Lectures on Government and Binding. Foris, Dordrecht, The Netherlands.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Herber H Clark</author>
<author>C J Sengul 1979</author>
</authors>
<title>In search of referents for noun phrases and pronouns. Memory and Cognition,</title>
<pages>7--35</pages>
<marker>Clark, 1979, </marker>
<rawString>Clark, Herber H. and C. J. Sengul.1979. In search of referents for noun phrases and pronouns. Memory and Cognition, 7:35–41.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dennis Connolly</author>
<author>John D Burger</author>
<author>David S Day</author>
</authors>
<title>A machine learning approach to anaphoric reference.</title>
<date>1997</date>
<booktitle>In New Methods in Language Processing,</booktitle>
<pages>133--144</pages>
<location>Taylor and Francis, Bristol, Pennsylvania.</location>
<marker>Connolly, Burger, Day, 1997</marker>
<rawString>Connolly, Dennis, John D. Burger, and David S. Day, 1997. A machine learning approach to anaphoric reference. In New Methods in Language Processing, pages 133–144, Taylor and Francis, Bristol, Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rosalind A Crawley</author>
<author>Rosemary J Stevenson</author>
<author>David Kleinman</author>
</authors>
<title>The use of heuristic strategies in the interpretation of pronouns.</title>
<date>1990</date>
<journal>Journal of Psycholinguistic Research,</journal>
<pages>19--245</pages>
<marker>Crawley, Stevenson, Kleinman, 1990</marker>
<rawString>Crawley, Rosalind A., Rosemary J. Stevenson, and David Kleinman. 1990. The use of heuristic strategies in the interpretation of pronouns. Journal of Psycholinguistic Research, 19:245–264.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pascal Denis</author>
<author>Jason Baldridge</author>
</authors>
<title>A ranking approach to pronoun resolution.</title>
<date>2007</date>
<booktitle>In Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI),</booktitle>
<pages>1588--1593</pages>
<location>Hyderabad, India.</location>
<contexts>
<context position="7235" citStr="Denis and Baldridge (2007)" startWordPosition="1063" endWordPosition="1066">capture contextual knowledge. Their system achieved an accuracy of around 70% on a data set drawn from a corpus of newspaper articles. Both of these studies were carried out on uncommon data sets, which makes it difficult to compare their results with other baseline systems. In contrast to the previous work, we will explore the twincandidate model comprehensively by describing the model in more detail, trying more effective resolution schemes, deploying the model in the more complicated coreference resolution task, performing more extensive experiments, and evaluating the model in more depth. Denis and Baldridge (2007) proposed a pronoun resolution system that directly used a ranking learning algorithm (based on Maximal Entropy) to train a preference classifier for antecedent selection. They reported an accuracy of around 72–76% for the different domains in the ACE data set. In our study, we will also investigate the solution of using a general ranking learner (e.g., Ranking-SVM). By comparison, the twin-candidate model is applicable to any discriminative learning algorithm, no matter whether it is capable of ranking learning or not. Moreover, as the model is trained and tested on pairwise candidates, it ca</context>
</contexts>
<marker>Denis, Baldridge, 2007</marker>
<rawString>Denis, Pascal and Jason Baldridge. 2007. A ranking approach to pronoun resolution. In Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI), pages 1588–1593, Hyderabad, India.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alan Garnham</author>
</authors>
<title>Mental Models and the Interpretation of Anaphora.</title>
<date>2001</date>
<publisher>Psychology Press Ltd.,</publisher>
<location>Hove, East Sussex, UK.</location>
<contexts>
<context position="16121" citStr="Garnham (2001)" startWordPosition="2523" endWordPosition="2524">, [6 them]} 331 Computational Linguistics Volume 34, Number 3 the other competing candidates. However, for an anaphor, the determination of the antecedent is often subject to preference among the candidates (Jurafsky and Martin 2000). Whether a candidate is the antecedent depends on whether it is the “best” among the candidate set, that is, whether there exists no other candidate that is preferred over it. Hence, simply considering one candidate individually is an indirect and unreliable way to select the correct antecedent. The idea of preference is common in linguistic theories on anaphora. Garnham (2001) summarizes different factors that influence the interpretation of anaphoric expressions. Some factors such as morphology (gender, number, animacy, and case) or syntax (e.g., the role of binding and commanding relations [Chomsky 1981]) are “eliminating,” forbidding certain NPs from being antecedents. However, many others are “preferential,” giving more preference to certain candidates over others; examples include: • Sentence-based factors: Pronouns in one clause prefer to refer to the NP that is the subject of the previous clause (Crawley, Stevenson, and Kleinman 1990). Also, the NP that is t</context>
</contexts>
<marker>Garnham, 2001</marker>
<rawString>Garnham, Alan, 2001. Mental Models and the Interpretation of Anaphora. Psychology Press Ltd., Hove, East Sussex, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Niyu Ge</author>
<author>John Hale</author>
<author>Eugene Charniak</author>
</authors>
<title>A statistical approach to anaphora resolution.</title>
<date>1998</date>
<booktitle>In Proceedings of the 6th Workshop on Very Large Corpora,</booktitle>
<pages>161--171</pages>
<location>Montreal, Quebec, Canada.</location>
<marker>Ge, Hale, Charniak, 1998</marker>
<rawString>Ge, Niyu, John Hale, and Eugene Charniak. 1998. A statistical approach to anaphora resolution. In Proceedings of the 6th Workshop on Very Large Corpora, pages 161–171, Montreal, Quebec, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Morton A Gernsbacher</author>
<author>David Hargreaves</author>
</authors>
<title>Accessing sentence participants: The advantage of first mention.</title>
<date>1988</date>
<journal>Journal of Memory and Language,</journal>
<pages>27--699</pages>
<contexts>
<context position="16878" citStr="Gernsbacher and Hargreaves 1988" startWordPosition="2628" endWordPosition="2631">nder, number, animacy, and case) or syntax (e.g., the role of binding and commanding relations [Chomsky 1981]) are “eliminating,” forbidding certain NPs from being antecedents. However, many others are “preferential,” giving more preference to certain candidates over others; examples include: • Sentence-based factors: Pronouns in one clause prefer to refer to the NP that is the subject of the previous clause (Crawley, Stevenson, and Kleinman 1990). Also, the NP that is the first-mentioned expression is preferred regardless of the syntactic and semantic role played by the referring expression (Gernsbacher and Hargreaves 1988). • Stylistic factors: Pronouns preferentially take parallel antecedents that play the same role as the anaphor in their respective clauses (Grober, Beardsley, and Caramazza 1978; Stevenson, Nelson, and Stenning 1995). • Discourse-based factors: Items currently in focus are the prime candidates for providing antecedents for anaphoric expressions. According to centering theory (Grosz, Joshi, and Weinstein 1995), each utterance has a set of forward-looking centers that have higher preference to be referred to in later utterances. The forward-looking centers can be ranked based on grammatical rol</context>
</contexts>
<marker>Gernsbacher, Hargreaves, 1988</marker>
<rawString>Gernsbacher, Morton A. and David Hargreaves. 1988. Accessing sentence participants: The advantage of first mention. Journal of Memory and Language, 27:699–717.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ellen H Grober</author>
<author>William Beardsley</author>
<author>Alfonso Caramazza</author>
</authors>
<title>Parallel function in pronoun assignment.</title>
<date>1978</date>
<journal>Cognition,</journal>
<pages>6--117</pages>
<marker>Grober, Beardsley, Caramazza, 1978</marker>
<rawString>Grober, Ellen H., William Beardsley, and Alfonso Caramazza. 1978. Parallel function in pronoun assignment. Cognition, 6:117–133.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Barbara J Grosz</author>
<author>Aravind K Joshi</author>
<author>Scott Weinstein</author>
</authors>
<title>Centering: A framework for modeling the local coherence of discourse.</title>
<date>1995</date>
<journal>Computational Linguistics,</journal>
<volume>21</volume>
<issue>2</issue>
<marker>Grosz, Joshi, Weinstein, 1995</marker>
<rawString>Grosz, Barbara J., Aravind K. Joshi, and Scott Weinstein. 1995. Centering: A framework for modeling the local coherence of discourse. Computational Linguistics, 21(2):203–225.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerry Hobbs</author>
</authors>
<title>Resolving pronoun references.</title>
<date>1978</date>
<journal>Lingua,</journal>
<pages>44--339</pages>
<contexts>
<context position="18196" citStr="Hobbs 1978" startWordPosition="2819" endWordPosition="2820"> with those two or more sentences back (Clark and Sengul 1979). As a matter of fact, “eliminating” factors could also be considered “preferential” if we think of the act of eliminating candidates as giving them low preference. Preference-based strategies are also widely seen in earlier manual approaches to pronominal anaphora resolution. For example, the SHRDLU system by Winograd (1972) prefers antecedent candidates in the subject position over those in the object position. The system by Wilks (1973) prefers candidates that satisfy selectional restrictions with the anaphor. Hobbs’s algorithm (Hobbs 1978) prefers candidates that are closer to the anaphor in the syntax tree, and the RAP algorithm (Lappin and Leass 1994) prefers candidates that have a high salience value computed by aggregating the weights of different factors. During resolution, the single-candidate model does select an antecedent based on preference by using classification confidence for candidates; that is, the higher confidence value the classifier returns, the more likely the candidate is preferred as the antecedent. Nevertheless, as the model considers only one candidate at a time during training, it cannot effectively cap</context>
</contexts>
<marker>Hobbs, 1978</marker>
<rawString>Hobbs, Jerry. 1978. Resolving pronoun references. Lingua, 44:339–352.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryu Iida</author>
<author>Kentaro Inui</author>
<author>Hiroya Takamura</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Incorporating contextual cues in trainable models for coreference resolution.</title>
<date>2003</date>
<booktitle>In Proceedings of the 10th Conference of EACL, Workshop ”The Computational Treatment of Anaphora,”</booktitle>
<pages>23--30</pages>
<location>Budapest, Hungary.</location>
<contexts>
<context position="6244" citStr="Iida et al. (2003)" startWordPosition="912" endWordPosition="915">For the coreference resolution task, it also performs equally well, or better. 2. Related Work To our knowledge, the first work on the twin-candidate model for anaphora resolution was proposed by Connolly, Burger, and Day (1997). Their work relied on a set of features that included lexical type, grammatical role, recency, and number/gender/semantic agreement, and employed a simple linear search scheme to choose the most preferred candidate. Their system produced a relatively low accuracy rate for pronoun resolution (55.3%) and definite NP resolution (37.4%) on a set of selected news articles. Iida et al. (2003) used the twin-candidate model (called the tournament model in their work) to perform Japanese zero-anaphora resolution. They utilized the same linear 328 Yang, Su, and Tan A Twin-Candidate Model for AR scheme to search for antecedents. Compared with Connolly, Burger, and Day (1997), they adopted richer features in which centering information was incorporated to capture contextual knowledge. Their system achieved an accuracy of around 70% on a data set drawn from a corpus of newspaper articles. Both of these studies were carried out on uncommon data sets, which makes it difficult to compare th</context>
</contexts>
<marker>Iida, Inui, Takamura, Matsumoto, 2003</marker>
<rawString>Iida, Ryu, Kentaro Inui, Hiroya Takamura, and Yuji Matsumoto. 2003. Incorporating contextual cues in trainable models for coreference resolution. In Proceedings of the 10th Conference of EACL, Workshop ”The Computational Treatment of Anaphora,” pages 23–30, Budapest, Hungary.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Joachims</author>
</authors>
<title>Optimizing search engines using clickthrough data.</title>
<date>2002</date>
<booktitle>In Proceedings of the ACM Conference on Knowledge Discovery and Data Mining (KDD),</booktitle>
<pages>133--142</pages>
<location>Edmonton, Alberta, Canada.</location>
<contexts>
<context position="40683" citStr="Joachims 2002" startWordPosition="6528" endWordPosition="6529">nd the other is not. As a consequence, the simple linear search can find the final antecedent as well as the Round Robin method. These results suggest that we can use the Elimination scheme in a practical system to make antecedent identification more efficient. (Recall that the Elimination scheme requires complexity of O(N), instead of O(N2) as in Round Robin.) Ranking-SVM In our experiments, we were particularly interested in comparing the results using the twin-candidate model and those directly using a preference learning algorithm. For this purpose, we built a system based on Ranking-SVM (Joachims 2002), an extension of SVM capable of preference learning. 9 Throughout our experiments, the significance was examined by using the paired t-test, with p &lt; 0.05. 340 Yang, Su, and Tan A Twin-Candidate Model for AR The system uses a similar framework to the single-candidate-based system. For training, given an anaphor, a set of instances is created for each of the antecedent candidates. To learn the preference between competing candidates, a “query-ID” is specified for each training instance in such a way that the instances formed by the candidates of the same anaphor bear the same query-ID. The lab</context>
</contexts>
<marker>Joachims, 2002</marker>
<rawString>Joachims, Thorsten. 2002. Optimizing search engines using clickthrough data. In Proceedings of the ACM Conference on Knowledge Discovery and Data Mining (KDD), pages 133–142, Edmonton, Alberta, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Jurafsky</author>
<author>James H Martin</author>
</authors>
<title>Speech and Language Processing: An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition. Prentice Hall, Upper Saddle River,</title>
<date>2000</date>
<location>New Jersey.</location>
<contexts>
<context position="1544" citStr="Jurafsky and Martin 2000" startWordPosition="216" endWordPosition="219">f the twin-candidate model for anaphora resolution. Further, we explore how to deploy the model in the more complicated coreference resolution task. We evaluate the twin-candidate model in different domains using the Automatic Content Extraction data sets. The experimental results indicate that our twin-candidate model is superior to the single-candidate model for the task of pronominal anaphora resolution. For the task of coreference resolution, it also performs equally well, or better. 1. Introduction Anaphora is reference to an entity that has been previously introduced into the discourse (Jurafsky and Martin 2000). The referring expression used is called the anaphor and the expression being referred to is its antecedent. The anaphor is usually used to refer to the same entity as the antecedent; hence, they are coreferential with each other. The process of determining the antecedent of an anaphor is called anaphora resolution. As a key problem in discourse and language understanding, anaphora resolution is crucial in many natural language applications, such as machine translation, text summarization, question answering, information extraction, and so on. In recent * 21 Heng Mui Keng Terrace, Singapore, </context>
<context position="4065" citStr="Jurafsky and Martin 2000" startWordPosition="588" endWordPosition="591">naphor and each of its candidates, with features describing the properties of the anaphor and the individual candidate. During resolution, the antecedent of an anaphor is selected based on the classification results for each candidate. One assumption behind the single-candidate model is that whether a candidate is the antecedent of an anaphor is completely independent of the other competing candidates. However, anaphora resolution can be more accurately represented as a ranking problem in which candidates are ordered based on their preference and the best one is the antecedent of the anaphor (Jurafsky and Martin 2000). The single-candidate model, which only considers the candidates of an anaphor in isolation, is incapable of effectively capturing the preference relationship between candidates for its training. Consequently, the learned classifier cannot produce reliable results for preference determination during resolution. To deal with this problem, we propose a twin-candidate learning model for anaphora resolution. The main idea behind the model is to recast anaphora resolution as a preference classification problem. The purpose of the classification is to determine the preference between two competing </context>
<context position="15740" citStr="Jurafsky and Martin 2000" startWordPosition="2461" endWordPosition="2464">te model is that the probability of a candidate being the antecedent of a given anaphor is completely independent of Table 4 Test instances generated under the single-candidate model for anaphora resolution. Anaphor Test Instance i{[7 it] , [1 Those figures]} i{[7 it] , [2 the government]} i{[7 it] , [3 legislators]} [7 it] i{[7 it] , [4 September]} i{[7 it] , [5 the government]} i{[7 it] , [6 them]} 331 Computational Linguistics Volume 34, Number 3 the other competing candidates. However, for an anaphor, the determination of the antecedent is often subject to preference among the candidates (Jurafsky and Martin 2000). Whether a candidate is the antecedent depends on whether it is the “best” among the candidate set, that is, whether there exists no other candidate that is preferred over it. Hence, simply considering one candidate individually is an indirect and unreliable way to select the correct antecedent. The idea of preference is common in linguistic theories on anaphora. Garnham (2001) summarizes different factors that influence the interpretation of anaphoric expressions. Some factors such as morphology (gender, number, animacy, and case) or syntax (e.g., the role of binding and commanding relations</context>
</contexts>
<marker>Jurafsky, Martin, 2000</marker>
<rawString>Jurafsky, Daniel and James H. Martin. 2000. Speech and Language Processing: An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition. Prentice Hall, Upper Saddle River, New Jersey.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>Probabilistic coreference in information extraction.</title>
<date>1997</date>
<booktitle>In Proceedings of the 2nd Conference on Empirical Methods in Natural Language Processing (EMNLP),</booktitle>
<pages>163--173</pages>
<location>Providence, Rhode Island.</location>
<contexts>
<context position="2783" citStr="Kehler 1997" startWordPosition="393" endWordPosition="394">r.a-star.edu.sg. ** 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: sujian@i2r.a-star.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given </context>
</contexts>
<marker>Kehler, 1997</marker>
<rawString>Kehler, Andrew. 1997. Probabilistic coreference in information extraction. In Proceedings of the 2nd Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 163–173, Providence, Rhode Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
<author>Douglas Appelt</author>
<author>Lara Taylor</author>
<author>Aleksandr Simma</author>
</authors>
<title>The (non)utility of predicate-argument frequencies for pronoun interpretation.</title>
<date>2004</date>
<booktitle>In Proceedings of the North American Chapter of the Association for Computational Linguistics annual meeting (NAACL),</booktitle>
<pages>289--296</pages>
<location>Boston, MA.</location>
<contexts>
<context position="9785" citStr="Kehler et al. 2004" startWordPosition="1472" endWordPosition="1475"> C1, C2, ... , Cn. The singlecandidate model assumes that the probability that Ck is the antecedent is only dependent on the anaphor ana and Ck, and independent of all the other candidates. That is: p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1) Thus, the probability of a candidate Ck being the antecedent can be approximated using the classification result on the instance describing the anaphor and Ck alone. The single-candidate model is widely used in most anaphora resolution systems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the 329 Computational Linguistics Volume 34, Number 3 Table 1 A sample text for anaphora resolution. [1 Those figures] are almost exactly what [2 the government] proposed to [3 legislators] in [4 September]. If [5 the government] can stick with [6 them], [7 it] will be able to halve this year’s 120 billion ruble (US $193 billion) deficit. Table 2 Training instances generated under the single-candidate model for anaphora resolution. Anaphor Training Instance Label i{[6 them] , [1 Those figures]} 1 [6 them] i{[6 them] , [2 the government]} 0 i{[6</context>
<context position="38904" citStr="Kehler et al. (2004)" startWordPosition="6244" endWordPosition="6247"> 12 Accuracy in percent for the pronominal anaphora resolution. NWire NPaper BNews Average C5 SC 71.6 75.6 69.5 72.7 TC - Elimination 71.6 81.3 74.5 76.4 - Round Robin 72.9 81.3 74.9 76.9 - Weighted Round Robin 72.9 80.5 75.6 76.7 MaxEnt SC 72.9 77.1 74.9 75.2 TC - Elimination 75.1 79.1 77.5 77.4 - Round Robin 75.1 79.1 77.5 77.4 - Weighted Round Robin 75.7 78.6 77.1 77.3 SVM SC 72.9 77.3 74.2 75.1 TC - Elimination 73.5 82.0 78.9 78.5 - Round Robin 74.4 82.0 78.9 78.7 - Weighted Round Robin 74.6 79.3 78.2 77.5 Rank SVM 73.5 79.3 76.4 76.7 The average accuracy is comparable to that reported by Kehler et al. (2004) (around 75%), who also used the single-candidate model to do pronoun resolution with similar features (using MaxEnt) on the ACE data sets. By contrast, the systems with the twincandidate model are able to achieve accuracy of up to 75.7% (NWire), 82.0% (NPaper), and 78.9% (BNews). The average accuracy is 76.9% for C5, 77.4% for MaxEnt, and 78.7% for SVM, which is statistically significantly9 better than the results of the baselines (4.2%, 2.2%, and 3.6% in accuracy). These results confirm our claim that the twin-candidate model is more effective than the single-candidate model for the task of </context>
</contexts>
<marker>Kehler, Appelt, Taylor, Simma, 2004</marker>
<rawString>Kehler, Andrew, Douglas Appelt, Lara Taylor, and Aleksandr Simma. 2004. The (non)utility of predicate-argument frequencies for pronoun interpretation. In Proceedings of the North American Chapter of the Association for Computational Linguistics annual meeting (NAACL), pages 289–296, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shalom Lappin</author>
<author>Herbert J Leass</author>
</authors>
<title>An algorithm for pronominal anaphora resolution.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>20</volume>
<issue>4</issue>
<contexts>
<context position="18312" citStr="Lappin and Leass 1994" startWordPosition="2837" endWordPosition="2840">s could also be considered “preferential” if we think of the act of eliminating candidates as giving them low preference. Preference-based strategies are also widely seen in earlier manual approaches to pronominal anaphora resolution. For example, the SHRDLU system by Winograd (1972) prefers antecedent candidates in the subject position over those in the object position. The system by Wilks (1973) prefers candidates that satisfy selectional restrictions with the anaphor. Hobbs’s algorithm (Hobbs 1978) prefers candidates that are closer to the anaphor in the syntax tree, and the RAP algorithm (Lappin and Leass 1994) prefers candidates that have a high salience value computed by aggregating the weights of different factors. During resolution, the single-candidate model does select an antecedent based on preference by using classification confidence for candidates; that is, the higher confidence value the classifier returns, the more likely the candidate is preferred as the antecedent. Nevertheless, as the model considers only one candidate at a time during training, it cannot effectively capture the preference between candidates for classifier learning. For example, consider an anaphor and a candidate Ci.</context>
</contexts>
<marker>Lappin, Leass, 1994</marker>
<rawString>Lappin, Shalom and Herbert J. Leass. 1994. An algorithm for pronominal anaphora resolution. Computational Linguistics, 20(4):525–561.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaoqiang Luo</author>
<author>Abe Ittycheriah</author>
<author>Hongyan Jing</author>
<author>Nanda Kambhatla</author>
<author>Salim Roukos</author>
</authors>
<title>A mention-synchronous coreference resolution algorithm based on the bell tree.</title>
<date>2004</date>
<booktitle>In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>135--142</pages>
<location>Barcelona,</location>
<contexts>
<context position="2899" citStr="Luo et al. 2004" startWordPosition="413" endWordPosition="416">rive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given anaphor. A training or testing instance is formed by an anaphor and each of its candidates, with features describing</context>
</contexts>
<marker>Luo, Ittycheriah, Jing, Kambhatla, Roukos, 2004</marker>
<rawString>Luo, Xiaoqiang, Abe Ittycheriah, Hongyan Jing, Nanda Kambhatla, and Salim Roukos. 2004. A mention-synchronous coreference resolution algorithm based on the bell tree. In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL), pages 135–142, Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joseph F McCarthy</author>
<author>Wendy G Lehnert</author>
</authors>
<title>Using decision trees for coreference resolution.</title>
<date>1995</date>
<booktitle>In Proceedings of the 14th International Conference on Artificial Intelligences (IJCAI),</booktitle>
<pages>1050--1055</pages>
<location>Montreal, Quebec, Canada.</location>
<contexts>
<context position="2738" citStr="McCarthy and Lehnert 1995" startWordPosition="384" endWordPosition="387">g Mui Keng Terrace, Singapore, 119613. E-mail: xiaofengy@i2r.a-star.edu.sg. ** 21 Heng Mui Keng Terrace, Singapore, 119613. E-mail: sujian@i2r.a-star.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine</context>
</contexts>
<marker>McCarthy, Lehnert, 1995</marker>
<rawString>McCarthy, Joseph F. and Wendy G. Lehnert. 1995. Using decision trees for coreference resolution. In Proceedings of the 14th International Conference on Artificial Intelligences (IJCAI), pages 1050–1055, Montreal, Quebec, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A McEnery</author>
<author>I Tanaka</author>
<author>S Botley</author>
</authors>
<title>Corpus annotation and reference resolution.</title>
<date>1997</date>
<booktitle>In Proceedings of the ACL Workshop on Operational Factors in Practical Robust Anaphora Resolution for Unrestricted Texts,</booktitle>
<pages>67--74</pages>
<location>Madrid,</location>
<marker>McEnery, Tanaka, Botley, 1997</marker>
<rawString>McEnery, A., I. Tanaka, and S. Botley. 1997. Corpus annotation and reference resolution. In Proceedings of the ACL Workshop on Operational Factors in Practical Robust Anaphora Resolution for Unrestricted Texts, pages 67–74, Madrid, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hwee Tou Ng</author>
<author>Yu Zhou</author>
<author>Robert Dale</author>
<author>Mary Gardiner</author>
</authors>
<title>Machine learning approach to identification and resolution of one-anaphora.</title>
<date>2005</date>
<booktitle>In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI),</booktitle>
<pages>1105--1110</pages>
<location>Edinburgh, Scotland.</location>
<contexts>
<context position="2916" citStr="Ng et al. 2005" startWordPosition="417" endWordPosition="420"> 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given anaphor. A training or testing instance is formed by an anaphor and each of its candidates, with features describing the properties o</context>
<context position="9802" citStr="Ng et al. 2005" startWordPosition="1476" endWordPosition="1479">he singlecandidate model assumes that the probability that Ck is the antecedent is only dependent on the anaphor ana and Ck, and independent of all the other candidates. That is: p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1) Thus, the probability of a candidate Ck being the antecedent can be approximated using the classification result on the instance describing the anaphor and Ck alone. The single-candidate model is widely used in most anaphora resolution systems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the 329 Computational Linguistics Volume 34, Number 3 Table 1 A sample text for anaphora resolution. [1 Those figures] are almost exactly what [2 the government] proposed to [3 legislators] in [4 September]. If [5 the government] can stick with [6 them], [7 it] will be able to halve this year’s 120 billion ruble (US $193 billion) deficit. Table 2 Training instances generated under the single-candidate model for anaphora resolution. Anaphor Training Instance Label i{[6 them] , [1 Those figures]} 1 [6 them] i{[6 them] , [2 the government]} 0 i{[6 them] , [3 legis</context>
</contexts>
<marker>Ng, Zhou, Dale, Gardiner, 2005</marker>
<rawString>Ng, Hwee Tou, Yu Zhou, Robert Dale, and Mary Gardiner. 2005. Machine learning approach to identification and resolution of one-anaphora. In Proceedings of the Nineteenth International Joint Conference on Artificial Intelligence (IJCAI), pages 1105–1110, Edinburgh, Scotland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vincent Ng</author>
</authors>
<title>Machine learning for coreference resolution: From local classification to global ranking.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>157--164</pages>
<location>Ann Arbor, Michigan.</location>
<contexts>
<context position="7957" citStr="Ng (2005)" startWordPosition="1172" endWordPosition="1173">to train a preference classifier for antecedent selection. They reported an accuracy of around 72–76% for the different domains in the ACE data set. In our study, we will also investigate the solution of using a general ranking learner (e.g., Ranking-SVM). By comparison, the twin-candidate model is applicable to any discriminative learning algorithm, no matter whether it is capable of ranking learning or not. Moreover, as the model is trained and tested on pairwise candidates, it can effectively capture various relationships between candidates for better preference learning and determination. Ng (2005) presented a ranking model for coreference resolution. The model focused on the preference between the potential partitions of NPs, instead of the potential antecedents of an NP as in our work. Given an input document, the model first employed n pre-selected coreference resolution systems to generate n candidate partitions of NPs. The model learned a preference classifier (trained using Ranking-SVM) that could distinguish good and bad partitions during testing. The best rank partition would be selected as the resolution output of the current text. The author evaluated the model on the ACE data</context>
<context position="73715" citStr="Ng (2005)" startWordPosition="11762" endWordPosition="11763">ra resolution. The traditional single-candidate model considers candidates in isolation, and thus cannot accurately capture the preference relationships between competing candidates to provide reliable resolution. To deal with this problem, our proposed twincandidate model recasts anaphora resolution as a preference classification problem. It learns a classifier that can explicitly determine the preference between competing candidates, and then during resolution, choose the antecedent of an anaphor based on the ranking of the candidates. 23 The results are comparable to the baseline system by Ng (2005), which also uses the single-candidate model and is capable of F-measures of 50.1%, 62.1%, and 57.5% for the three domains, respectively. 353 Computational Linguistics Volume 34, Number 3 We have introduced in detail the framework of the twin-candidate model for anaphora resolution, including instance representation, training procedure, and the antecedent identification scheme. The efficacy of the twin-candidate model for pronominal anaphora resolution has been evaluated in different domains, using ACE data sets. The experimental results show that the model yields statistically significantly h</context>
</contexts>
<marker>Ng, 2005</marker>
<rawString>Ng, Vincent. 2005. Machine learning for coreference resolution: From local classification to global ranking. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL), pages 157–164, Ann Arbor, Michigan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vincent Ng</author>
<author>Claire Cardie</author>
</authors>
<title>Combining sample selection and error-driven pruning for machine learning of coreference rules.</title>
<date>2002</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP),</booktitle>
<pages>55--62</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="2856" citStr="Ng and Cardie 2002" startWordPosition="405" endWordPosition="408">-mail: sujian@i2r.a-star.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given anaphor. A training or testing instance is formed by an anaphor and each </context>
<context position="49952" citStr="Ng and Cardie 2002" startWordPosition="7990" endWordPosition="7993">andidates, a positive instance is generated for the closest antecedent and a set of negative instances is generated for each of the candidates that is not coreferential with the anaphor.12 Consider the text in Table 13 as an example. In the text, [4 that company] and [5 the money] are two anaphors, with [1 Globalstar] and [2 $600 million] being their antecedents, respectively. Table 14 lists the training instances to be created for this text. 11 In our study, we only consider within-document noun phrase coreference resolution. 12 In some coreference resolution systems (Soon, Ng, and Lim 2001; Ng and Cardie 2002b), only the non-coreferential candidates occurring between the closest antecedent and the anaphor are used to create negative instances. In the experiments, we found that these sampling strategies for negative instances led to a trade-off between recall and precision, but no significant difference in the overall F-measure. 344 Yang, Su, and Tan A Twin-Candidate Model for AR Table 14 Training instances generated under the single-candidate model for coreference resolution. Anaphor Training Instance Label i{[4 that company] , [1 Globalstar]} 1 [4 that company] i{[4 that company] , [2 $600 millio</context>
<context position="61748" citStr="Ng and Cardie (2002" startWordPosition="9875" endWordPosition="9878">ngle-candidate and the twin-candidate models used a threshold to block lowconfidence coreferential pairs, we performed three-fold cross-evaluation on the training data to determine the thresholds for the coreference resolution systems. 4.3.2 Results and Discussions. Table 18 lists the results for the different systems on the non-pronominal NP coreference resolution. We used as the baseline the system with the single-candidate model described in Section 4.1. As mentioned, the system was trained 17 The overall F-measure was defined as 2 * Recall * Precision Recall + Precision 18 As suggested in Ng and Cardie (2002b), we did not include pronouns in the candidate set of a non-pronoun, because a pronoun is usually anaphoric and cannot give much information about the entity to which it refers. 19 Unlike in the case of pronoun resolution, we did not filter candidates that had mismatched number/gender agreement as these constraints are not reliable for non-pronoun resolution (e.g., in our data set, around 15% of coreferential pairs do not agree in number). Instead, we took these factors as features (see Table 15) and let the learning algorithm make the preference decision. 20 For SVM, we employed the one-aga</context>
</contexts>
<marker>Ng, Cardie, 2002</marker>
<rawString>Ng, Vincent and Claire Cardie. 2002a. Combining sample selection and error-driven pruning for machine learning of coreference rules. In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 55–62, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vincent Ng</author>
<author>Claire Cardie</author>
</authors>
<title>Improving machine learning approaches to coreference resolution.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>104--111</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="2856" citStr="Ng and Cardie 2002" startWordPosition="405" endWordPosition="408">-mail: sujian@i2r.a-star.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given anaphor. A training or testing instance is formed by an anaphor and each </context>
<context position="49952" citStr="Ng and Cardie 2002" startWordPosition="7990" endWordPosition="7993">andidates, a positive instance is generated for the closest antecedent and a set of negative instances is generated for each of the candidates that is not coreferential with the anaphor.12 Consider the text in Table 13 as an example. In the text, [4 that company] and [5 the money] are two anaphors, with [1 Globalstar] and [2 $600 million] being their antecedents, respectively. Table 14 lists the training instances to be created for this text. 11 In our study, we only consider within-document noun phrase coreference resolution. 12 In some coreference resolution systems (Soon, Ng, and Lim 2001; Ng and Cardie 2002b), only the non-coreferential candidates occurring between the closest antecedent and the anaphor are used to create negative instances. In the experiments, we found that these sampling strategies for negative instances led to a trade-off between recall and precision, but no significant difference in the overall F-measure. 344 Yang, Su, and Tan A Twin-Candidate Model for AR Table 14 Training instances generated under the single-candidate model for coreference resolution. Anaphor Training Instance Label i{[4 that company] , [1 Globalstar]} 1 [4 that company] i{[4 that company] , [2 $600 millio</context>
<context position="61748" citStr="Ng and Cardie (2002" startWordPosition="9875" endWordPosition="9878">ngle-candidate and the twin-candidate models used a threshold to block lowconfidence coreferential pairs, we performed three-fold cross-evaluation on the training data to determine the thresholds for the coreference resolution systems. 4.3.2 Results and Discussions. Table 18 lists the results for the different systems on the non-pronominal NP coreference resolution. We used as the baseline the system with the single-candidate model described in Section 4.1. As mentioned, the system was trained 17 The overall F-measure was defined as 2 * Recall * Precision Recall + Precision 18 As suggested in Ng and Cardie (2002b), we did not include pronouns in the candidate set of a non-pronoun, because a pronoun is usually anaphoric and cannot give much information about the entity to which it refers. 19 Unlike in the case of pronoun resolution, we did not filter candidates that had mismatched number/gender agreement as these constraints are not reliable for non-pronoun resolution (e.g., in our data set, around 15% of coreferential pairs do not agree in number). Instead, we took these factors as features (see Table 15) and let the learning algorithm make the preference decision. 20 For SVM, we employed the one-aga</context>
</contexts>
<marker>Ng, Cardie, 2002</marker>
<rawString>Ng, Vincent and Claire Cardie. 2002b. Improving machine learning approaches to coreference resolution. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), pages 104–111, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Judita Preiss</author>
</authors>
<title>Machine learning for anaphora resolution.</title>
<date>2001</date>
<tech>Technical Report CS-01-10,</tech>
<institution>University of Sheffield,</institution>
<location>Sheffield, England.</location>
<contexts>
<context position="9740" citStr="Preiss 2001" startWordPosition="1466" endWordPosition="1467"> context of its antecedent candidates, C1, C2, ... , Cn. The singlecandidate model assumes that the probability that Ck is the antecedent is only dependent on the anaphor ana and Ck, and independent of all the other candidates. That is: p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1) Thus, the probability of a candidate Ck being the antecedent can be approximated using the classification result on the instance describing the anaphor and Ck alone. The single-candidate model is widely used in most anaphora resolution systems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the 329 Computational Linguistics Volume 34, Number 3 Table 1 A sample text for anaphora resolution. [1 Those figures] are almost exactly what [2 the government] proposed to [3 legislators] in [4 September]. If [5 the government] can stick with [6 them], [7 it] will be able to halve this year’s 120 billion ruble (US $193 billion) deficit. Table 2 Training instances generated under the single-candidate model for anaphora resolution. Anaphor Training Instance Label i{[6 them] , [1 Those figures]} 1 [6 </context>
</contexts>
<marker>Preiss, 2001</marker>
<rawString>Preiss, Judita. 2001. Machine learning for anaphora resolution. Technical Report CS-01-10, University of Sheffield, Sheffield, England.</rawString>
</citation>
<citation valid="false">
<authors>
<author>J Ross 1993 Quinlan</author>
</authors>
<title>C4.5: Programs for Machine Learning.</title>
<publisher>Morgan Kaufmann Publishers,</publisher>
<location>San Francisco, CA.</location>
<marker>Quinlan, </marker>
<rawString>Quinlan, J. Ross.1993. C4.5: Programs for Machine Learning. Morgan Kaufmann Publishers, San Francisco, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wee Meng Soon</author>
<author>Hwee Tou Ng</author>
<author>Daniel Chung Yong Lim</author>
</authors>
<title>A machine learning approach to coreference resolution of noun phrases.</title>
<date>2001</date>
<journal>Computational Linguistics,</journal>
<volume>27</volume>
<issue>4</issue>
<marker>Soon, Ng, Lim, 2001</marker>
<rawString>Soon, Wee Meng, Hwee Tou Ng, and Daniel Chung Yong Lim. 2001. A machine learning approach to coreference resolution of noun phrases. Computational Linguistics, 27(4):521–544.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rosemary J Stevenson</author>
<author>Alexander W R Nelson</author>
<author>Keith Stenning</author>
</authors>
<title>The role of parallelism in strategies of pronoun comprehension. Language and Speech,</title>
<date>1995</date>
<pages>29--393</pages>
<marker>Stevenson, Nelson, Stenning, 1995</marker>
<rawString>Stevenson, Rosemary J., Alexander W. R. Nelson, and Keith Stenning. 1995. The role of parallelism in strategies of pronoun comprehension. Language and Speech, 29:393–418.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Strube</author>
<author>Christoph Mueller</author>
</authors>
<title>A machine learning approach to pronoun resolution in spoken dialogue.</title>
<date>2003</date>
<booktitle>In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>168--175</pages>
<location>Sapporo, Japan.</location>
<contexts>
<context position="2882" citStr="Strube and Mueller 2003" startWordPosition="409" endWordPosition="412">tar.edu.sg. † 3 Science Drive 2, Singapore 117543. E-mail: tancl@comp.nus.edu.sg. Submission received: 25 October 2005; revised submission received: 2 February 2007; accepted for publication: 5 May 2007. © 2008 Association for Computational Linguistics Computational Linguistics Volume 34, Number 3 years, supervised learning approaches have been widely applied to anaphora resolution, and they have achieved considerable success (Aone and Bennett 1995; McCarthy and Lehnert 1995; Connolly, Burger, and Day 1997; Kehler 1997; Ge, Hale, and Charniak 1998; Soon, Ng, and Lim 2001; Ng and Cardie 2002b; Strube and Mueller 2003; Luo et al. 2004; Ng et al. 2005). The strength of learning-based anaphora resolution is that resolution regularities can be automatically learned from annotated data. Traditionally, learning-based approaches to anaphora resolution adopt the single-candidate model, in which the potential antecedents (i.e., antecedent candidates) are considered in isolation for both learning and resolution. In such a model, the purpose of classification is to determine if a candidate is the antecedent of a given anaphor. A training or testing instance is formed by an anaphor and each of its candidates, with fe</context>
<context position="9765" citStr="Strube and Mueller 2003" startWordPosition="1468" endWordPosition="1471">ts antecedent candidates, C1, C2, ... , Cn. The singlecandidate model assumes that the probability that Ck is the antecedent is only dependent on the anaphor ana and Ck, and independent of all the other candidates. That is: p (ante(Ck) I ana, C1, C2, ... , Cn) = p (ante(Ck) I ana, Ck) (1) Thus, the probability of a candidate Ck being the antecedent can be approximated using the classification result on the instance describing the anaphor and Ck alone. The single-candidate model is widely used in most anaphora resolution systems (Aone and Bennett 1995; Ge, Hale, and Charniak 1998; Preiss 2001; Strube and Mueller 2003; Kehler et al. 2004; Ng et al. 2005). In our study, we also build as the 329 Computational Linguistics Volume 34, Number 3 Table 1 A sample text for anaphora resolution. [1 Those figures] are almost exactly what [2 the government] proposed to [3 legislators] in [4 September]. If [5 the government] can stick with [6 them], [7 it] will be able to halve this year’s 120 billion ruble (US $193 billion) deficit. Table 2 Training instances generated under the single-candidate model for anaphora resolution. Anaphor Training Instance Label i{[6 them] , [1 Those figures]} 1 [6 them] i{[6 them] , [2 the</context>
</contexts>
<marker>Strube, Mueller, 2003</marker>
<rawString>Strube, Michael and Christoph Mueller. 2003. A machine learning approach to pronoun resolution in spoken dialogue. In Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics (ACL), pages 168–175, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vladimir N Vapnik</author>
</authors>
<title>The Nature of Statistical Learning Theory.</title>
<date>1995</date>
<publisher>Springer-Verlag,</publisher>
<location>New York, NY.</location>
<contexts>
<context position="37012" citStr="Vapnik 1995" startWordPosition="5942" endWordPosition="5943">. Table 11 summarizes the statistics of the training instances as well as the class distribution. Note that for the single-candidate model, the number of “1” instances was identical to the number of anaphors in the training data, because we only used the closest antecedents of anaphors to create the positive instances. The number of “0” instances was equal to the total number of “01” and “10” training instances for the twincandidate model. We examined three different learning algorithms: C5 (Quinlan 1993), Maximum Entropy (Berger, Della Pietra, and Della Pietra 1996), and SVM (linear kernel) (Vapnik 1995),5 using the software See5,6 OpenNlp.MaxEnt,7 and SVM-light,8 respectively. All the classifiers were learned with the default learning parameters set in the respective learning software. 3.5.2 Results and Discussions. Table 12 lists the performance of the different anaphora resolution systems with the single-candidate (SC) and the twin-candidate (TC) models. For the TC model, two antecedent identification schemes, Tournament Elimination and Round Robin, were compared. From the table, we can see that our baseline system with the single-candidate model can obtain accuracy of up to 72.9% (NWire),</context>
</contexts>
<marker>Vapnik, 1995</marker>
<rawString>Vapnik, Vladimir N. 1995. The Nature of Statistical Learning Theory. Springer-Verlag, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Vilain</author>
<author>John Burger</author>
<author>John Aberdeen</author>
<author>Dennis Connolly</author>
<author>Lynette Hirschman</author>
</authors>
<title>A model-theoretic coreference scoring scheme.</title>
<date>1995</date>
<booktitle>In Proceedings of the Sixth Message Understanding Conference (MUC-6),</booktitle>
<pages>45--52</pages>
<location>San Francisco, CA.</location>
<marker>Vilain, Burger, Aberdeen, Connolly, Hirschman, 1995</marker>
<rawString>Vilain, Marc, John Burger, John Aberdeen, Dennis Connolly, and Lynette Hirschman. 1995. A model-theoretic coreference scoring scheme. In Proceedings of the Sixth Message Understanding Conference (MUC-6), pages 45–52, San Francisco, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yorick Wilks</author>
</authors>
<title>Preference Semantics. Stanford AI Laboratory Memo AIM-206.</title>
<date>1973</date>
<institution>Stanford University.</institution>
<contexts>
<context position="18090" citStr="Wilks (1973)" startWordPosition="2806" endWordPosition="2807">es or other factors. • Distance-based factors: Pronouns prefer candidates in the previous sentence compared with those two or more sentences back (Clark and Sengul 1979). As a matter of fact, “eliminating” factors could also be considered “preferential” if we think of the act of eliminating candidates as giving them low preference. Preference-based strategies are also widely seen in earlier manual approaches to pronominal anaphora resolution. For example, the SHRDLU system by Winograd (1972) prefers antecedent candidates in the subject position over those in the object position. The system by Wilks (1973) prefers candidates that satisfy selectional restrictions with the anaphor. Hobbs’s algorithm (Hobbs 1978) prefers candidates that are closer to the anaphor in the syntax tree, and the RAP algorithm (Lappin and Leass 1994) prefers candidates that have a high salience value computed by aggregating the weights of different factors. During resolution, the single-candidate model does select an antecedent based on preference by using classification confidence for candidates; that is, the higher confidence value the classifier returns, the more likely the candidate is preferred as the antecedent. Ne</context>
</contexts>
<marker>Wilks, 1973</marker>
<rawString>Wilks, Yorick. 1973. Preference Semantics. Stanford AI Laboratory Memo AIM-206. Stanford University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Terry Winograd</author>
</authors>
<title>Understanding Natural Language.</title>
<date>1972</date>
<publisher>Academic Press,</publisher>
<location>New York.</location>
<contexts>
<context position="17974" citStr="Winograd (1972)" startWordPosition="2788" endWordPosition="2789">er preference to be referred to in later utterances. The forward-looking centers can be ranked based on grammatical roles or other factors. • Distance-based factors: Pronouns prefer candidates in the previous sentence compared with those two or more sentences back (Clark and Sengul 1979). As a matter of fact, “eliminating” factors could also be considered “preferential” if we think of the act of eliminating candidates as giving them low preference. Preference-based strategies are also widely seen in earlier manual approaches to pronominal anaphora resolution. For example, the SHRDLU system by Winograd (1972) prefers antecedent candidates in the subject position over those in the object position. The system by Wilks (1973) prefers candidates that satisfy selectional restrictions with the anaphor. Hobbs’s algorithm (Hobbs 1978) prefers candidates that are closer to the anaphor in the syntax tree, and the RAP algorithm (Lappin and Leass 1994) prefers candidates that have a high salience value computed by aggregating the weights of different factors. During resolution, the single-candidate model does select an antecedent based on preference by using classification confidence for candidates; that is, </context>
</contexts>
<marker>Winograd, 1972</marker>
<rawString>Winograd, Terry. 1972. Understanding Natural Language. Academic Press, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaofeng Yang</author>
<author>Jian Su</author>
<author>Chew Lim Tan</author>
</authors>
<title>Improving pronoun resolution using statistics-based semantic compatibility information.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>165--172</pages>
<location>Ann Arbor, MI.</location>
<marker>Yang, Su, Tan, 2005</marker>
<rawString>Yang, Xiaofeng, Jian Su, and Chew Lim Tan. 2005. Improving pronoun resolution using statistics-based semantic compatibility information. In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics (ACL), pages 165–172, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Guodong Zhou</author>
<author>Jian Su</author>
</authors>
<title>Error-driven HMM-based chunk tagger with context-dependent lexicon.</title>
<date>2000</date>
<booktitle>In Proceedings of the Joint Conference on Empirical Methods in Natural Language Processing and Very Large Corpora,</booktitle>
<pages>71--79</pages>
<location>Hong Kong.</location>
<contexts>
<context position="34230" citStr="Zhou and Su 2000" startWordPosition="5503" endWordPosition="5506">f these sets is further divided into three domains: newswire (NWire), newspaper (NPaper), and broadcast news (BNews). Statistics for the data sets are summarized in Table 10. For both training and resolution, a raw input document was processed by a pipeline of NLP modules including a Tokenizer, Part-of-Speech tagger, NP chunker, Named-Entity (NE) Recognizer, and so on. These preprocessing modules were meant to determine the boundary of each NP in a text, and to provide the necessary information about an NP for subsequent processing. Trained and tested on the UPEN WSJ TreeBank, the POS tagger (Zhou and Su 2000) could obtain an accuracy of 97% and the NP chunker (Zhou and Su 2000) could produce an F-measure above 94%. Evaluated for the MUC-6 and MUC-7 Named-Entity task, the NER module (Zhou and Su 2002) could provide an F-measure of 96.6% (MUC-6) and 94.1% (MUC-7). In our experiments, we focused on the resolution of the third-personal pronominal anaphors, including she, he, it, they as well as their morphologic variants (such as her, his, him, its, itself, them, etc.). For both training and testing, we considered all the pronouns that had at least one preceding NP in their respective annotated corefe</context>
</contexts>
<marker>Zhou, Su, 2000</marker>
<rawString>Zhou, Guodong and Jian Su. 2000. Error-driven HMM-based chunk tagger with context-dependent lexicon. In Proceedings of the Joint Conference on Empirical Methods in Natural Language Processing and Very Large Corpora, pages 71–79, Hong Kong.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Guodong Zhou</author>
<author>Jian Su</author>
</authors>
<title>Named Entity recognition using a HMM-based chunk tagger.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL),</booktitle>
<pages>473--480</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="34425" citStr="Zhou and Su 2002" startWordPosition="5538" endWordPosition="5541">d resolution, a raw input document was processed by a pipeline of NLP modules including a Tokenizer, Part-of-Speech tagger, NP chunker, Named-Entity (NE) Recognizer, and so on. These preprocessing modules were meant to determine the boundary of each NP in a text, and to provide the necessary information about an NP for subsequent processing. Trained and tested on the UPEN WSJ TreeBank, the POS tagger (Zhou and Su 2000) could obtain an accuracy of 97% and the NP chunker (Zhou and Su 2000) could produce an F-measure above 94%. Evaluated for the MUC-6 and MUC-7 Named-Entity task, the NER module (Zhou and Su 2002) could provide an F-measure of 96.6% (MUC-6) and 94.1% (MUC-7). In our experiments, we focused on the resolution of the third-personal pronominal anaphors, including she, he, it, they as well as their morphologic variants (such as her, his, him, its, itself, them, etc.). For both training and testing, we considered all the pronouns that had at least one preceding NP in their respective annotated coreferential chains. We used the accuracy rate as the evaluation metric, and defined it as follows: number of anaphors being correctly resolved Accuracy = (9) total number of anaphors to be resolved H</context>
</contexts>
<marker>Zhou, Su, 2002</marker>
<rawString>Zhou, Guodong and Jian Su. 2002. Named Entity recognition using a HMM-based chunk tagger. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), pages 473–480, Philadelphia, PA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>