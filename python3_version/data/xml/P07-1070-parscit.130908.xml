<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000268">
<title confidence="0.997265">
Towards an Iterative Reinforcement Approach for Simultaneous
Document Summarization and Keyword Extraction
</title>
<author confidence="0.998728">
Xiaojun Wan Jianwu Yang Jianguo Xiao
</author>
<affiliation confidence="0.9286035">
Institute of Computer Science and Technology
Peking University, Beijing 100871, China
</affiliation>
<email confidence="0.998537">
{wanxiaojun,yangjianwu,xiaojianguo}@icst.pku.edu.cn
</email>
<sectionHeader confidence="0.993889" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999638">
Though both document summarization and
keyword extraction aim to extract concise
representations from documents, these two
tasks have usually been investigated inde-
pendently. This paper proposes a novel it-
erative reinforcement approach to simulta-
neously extracting summary and keywords
from single document under the assump-
tion that the summary and keywords of a
document can be mutually boosted. The
approach can naturally make full use of the
reinforcement between sentences and key-
words by fusing three kinds of relation-
ships between sentences and words, either
homogeneous or heterogeneous. Experi-
mental results show the effectiveness of the
proposed approach for both tasks. The cor-
pus-based approach is validated to work
almost as well as the knowledge-based ap-
proach for computing word semantics.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999953538461539">
Text summarization is the process of creating a
compressed version of a given document that de-
livers the main topic of the document. Keyword
extraction is the process of extracting a few salient
words (or phrases) from a given text and using the
words to represent the text. The two tasks are simi-
lar in essence because they both aim to extract
concise representations for documents. Automatic
text summarization and keyword extraction have
drawn much attention for a long time because they
both are very important for many text applications,
including document retrieval, document clustering,
etc. For example, keywords of a document can be
used for document indexing and thus benefit to
improve the performance of document retrieval,
and document summary can help to facilitate users
to browse the search results and improve users’
search experience.
Text summaries and keywords can be either
query-relevant or generic. Generic summary and
keyword should reflect the main topics of the
document without any additional clues and prior
knowledge. In this paper, we focus on generic
document summarization and keyword extraction
for single documents.
Document summarization and keyword extrac-
tion have been widely explored in the natural lan-
guage processing and information retrieval com-
munities. A series of workshops and conferences
on automatic text summarization (e.g. SUMMAC,
DUC and NTCIR) have advanced the technology
and produced a couple of experimental online sys-
tems. In recent years, graph-based ranking algo-
rithms have been successfully used for document
summarization (Mihalcea and Tarau, 2004, 2005;
ErKan and Radev, 2004) and keyword extraction
(Mihalcea and Tarau, 2004). Such algorithms make
use of “voting” or “recommendations” between
sentences (or words) to extract sentences (or key-
words). Though the two tasks essentially share
much in common, most algorithms have been de-
veloped particularly for either document summari-
zation or keyword extraction.
Zha (2002) proposes a method for simultaneous
keyphrase extraction and text summarization by
using only the heterogeneous sentence-to-word
relationships. Inspired by this, we aim to take into
account all the three kinds of relationships among
sentences and words (i.e. the homogeneous rela-
tionships between words, the homogeneous rela-
tionships between sentences, and the heterogene-
ous relationships between words and sentences) in
</bodyText>
<page confidence="0.955823">
552
</page>
<note confidence="0.9260855">
Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 552–559,
Prague, Czech Republic, June 2007. c�2007 Association for Computational Linguistics
</note>
<bodyText confidence="0.973139338028169">
a unified framework for both document summari- have been proposed for document summarization.
zation and keyword extraction. The importance of Similar to Kleinberg’s HITS algorithm (Kleinberg,
a sentence (word) is determined by both the impor- 1999) or Google’s PageRank (Brin and Page,
tance of related sentences (words) and the impor- 1998), these methods first build a graph based on
tance of related words (sentences). The proposed the similarity between sentences in a document and
approach can be considered as a generalized form then the importance of a sentence is determined by
of previous graph-based ranking algorithms and taking into account global information on the
Zha’s work (Zha, 2002). graph recursively, rather than relying only on local
In this study, we propose an iterative reinforce- sentence-specific information.
ment approach to realize the above idea. The pro- 2.2 Keyword Extraction
posed approach is evaluated on the DUC2002 Keyword (or keyphrase) extraction usually in-
dataset and the results demonstrate its effectiveness volves assigning a saliency score to each candidate
for both document summarization and keyword keyword by considering various features. Krulwich
extraction. Both knowledge-based approach and and Burkey (1996) use heuristics to extract key-
corpus-based approach have been investigated to phrases from a document. The heuristics are based
compute word semantics and they both perform on syntactic clues, such as the use of italics, the
very well. presence of phrases in section headers, and the use
The rest of this paper is organized as follows: of acronyms. Muñoz (1996) uses an unsupervised
Section 2 introduces related works. The details of learning algorithm to discover two-word key-
the proposed approach are described in Section 3. phrases. The algorithm is based on Adaptive Reso-
Section 4 presents and discusses the evaluation nance Theory (ART) neural networks. Steier and
results. Lastly we conclude our paper in Section 5. Belew (1993) use the mutual information statistics
2 Related Works to discover two-word keyphrases.
2.1 Document Summarization Supervised machine learning algorithms have
Generally speaking, single document summariza- been proposed to classify a candidate phrase into
tion methods can be either extraction-based or ab- either keyphrase or not. GenEx (Turney, 2000) and
straction-based and we focus on extraction-based Kea (Frank et al., 1999; Witten et al., 1999) are
methods in this study. two typical systems, and the most important fea-
Extraction-based methods usually assign a sali- tures for classifying a candidate phrase are the fre-
ency score to each sentence and then rank the sen- quency and location of the phrase in the document.
tences in the document. The scores are usually More linguistic knowledge (such as syntactic fea-
computed based on a combination of statistical and tures) has been explored by Hulth (2003). More
linguistic features, including term frequency, sen- recently, Mihalcea and Tarau (2004) propose the
tence position, cue words, stigma words, topic sig- TextRank model to rank keywords based on the
nature (Hovy and Lin, 1997; Lin and Hovy, 2000), co-occurrence links between words.
etc. Machine learning methods have also been em- 3 Iterative Reinforcement Approach
ployed to extract sentences, including unsupervised 3.1 Overview
methods (Nomoto and Matsumoto, 2001) and su- The proposed approach is intuitively based on the
pervised methods (Kupiec et al., 1995; Conroy and following assumptions:
O’Leary, 2001; Amini and Gallinari, 2002; Shen et Assumption 1: A sentence should be salient if it
al., 2007). Other methods include maximal mar- is heavily linked with other salient sentences, and a
ginal relevance (MMR) (Carbonell and Goldstein, word should be salient if it is heavily linked with
1998), latent semantic analysis (LSA) (Gong and other salient words.
Liu, 2001). In Zha (2002), the mutual reinforce- Assumption 2: A sentence should be salient if it
ment principle is employed to iteratively extract contains many salient words, and a word should be
key phrases and sentences from a document. salient if it appears in many salient sentences.
Most recently, graph-based ranking methods, in- The first assumption is similar to PageRank
cluding TextRank ((Mihalcea and Tarau, 2004, which makes use of mutual “recommendations”
2005) and LexPageRank (ErKan and Radev, 2004)
553
between homogeneous objects to rank objects. The
second assumption is similar to HITS if words and
sentences are considered as authorities and hubs
respectively. In other words, the proposed ap-
proach aims to fuse the ideas of PageRank and
HITS in a unified framework.
In more detail, given the heterogeneous data
points of sentences and words, the following three
kinds of relationships are fused in the proposed
approach:
SS-Relationship: It reflects the homogeneous
relationships between sentences, usually computed
by their content similarity.
WW-Relationship: It reflects the homogeneous
relationships between words, usually computed by
knowledge-based approach or corpus-based ap-
proach.
SW-Relationship: It reflects the heterogeneous
relationships between sentences and words, usually
computed as the relative importance of a word in a
sentence.
</bodyText>
<figureCaption confidence="0.950667">
Figure 1 gives an illustration of the relationships.
Figure 1. Illustration of the Relationships
</figureCaption>
<bodyText confidence="0.999994">
The proposed approach first builds three graphs
to reflect the above relationships respectively, and
then iteratively computes the saliency scores of the
sentences and words based on the graphs. Finally,
the algorithm converges and each sentence or word
gets its saliency score. The sentences with high
saliency scores are chosen into the summary, and
the words with high saliency scores are combined
to produce the keywords.
</bodyText>
<subsectionHeader confidence="0.999756">
3.2 Graph Building
</subsectionHeader>
<subsubsectionHeader confidence="0.98379">
3.2.1 Sentence-to-Sentence Graph ( SS-Graph)
</subsubsectionHeader>
<bodyText confidence="0.999909285714286">
Given the sentence collection S={si  |1&lt;i&lt;m} of a
document, if each sentence is considered as a node,
the sentence collection can be modeled as an undi-
rected graph by generating an edge between two
sentences if their content similarity exceeds 0, i.e.
an undirected link between si and sj (i:�j) is con-
structed and the associated weight is their content
similarity. Thus, we construct an undirected graph
GSS to reflect the homogeneous relationship be-
tween sentences. The content similarity between
two sentences is computed with the cosine measure.
We use an adjacency matrix U to describe GSS with
each entry corresponding to the weight of a link in
the graph. U= [Uij]m×m is defined as follows:
</bodyText>
<equation confidence="0.82746425">
si �j
~~ U s s
ij i j
I10, otherwise
</equation>
<bodyText confidence="0.999986">
where si and srj are the corresponding term vec-
tors of sentences si and sj respectively. The weight
associated with term t is calculated with tft.isft,
where tft is the frequency of term t in the sentence
and isft is the inverse sentence frequency of term t,
i.e. 1+log(N/nt), where N is the total number of
sentences and nt is the number of sentences con-
taining term t in a background corpus. Note that
other measures (e.g. Jaccard, Dice, Overlap, etc.)
can also be explored to compute the content simi-
larity between sentences, and we simply choose the
cosine measure in this study.
Then U is normalized to U~ as follows to make
the sum of each row equal to 1:
</bodyText>
<equation confidence="0.9726055">
m m
Uij E Uij , if Uij ❑
j 1 j 1 (2)
0 , otherwise
</equation>
<subsubsectionHeader confidence="0.884108">
3.2.2 Word-to-Word Graph ( WW-Graph)
</subsubsectionHeader>
<bodyText confidence="0.9995657">
Given the word collection T={tj|1&lt;j&lt;n } of a docu-
ment1, the semantic similarity between any two
words ti and tj can be computed using approaches
that are either knowledge-based or corpus-based
(Mihalcea et al., 2006).
Knowledge-based measures of word semantic
similarity try to quantify the degree to which two
words are semantically related using information
drawn from semantic networks. WordNet (Fell-
baum, 1998) is a lexical database where each
</bodyText>
<footnote confidence="0.5398385">
1 The stopwords defined in the Smart system have been re-
moved from the collection.
</footnote>
<figure confidence="0.998972545454545">
sentence
SS
SW
word
WW
, if i j
❑
(1)
~ l
Uij ��
0
</figure>
<page confidence="0.995676">
554
</page>
<bodyText confidence="0.999988945945946">
unique meaning of a word is represented by a
synonym set or synset. Each synset has a gloss that
defines the concept that it represents. Synsets are
connected to each other through explicit semantic
relations that are defined in WordNet. Many ap-
proaches have been proposed to measure semantic
relatedness based on WordNet. The measures vary
from simple edge-counting to attempt to factor in
peculiarities of the network structure by consider-
ing link direction, relative path, and density, such
as vector, lesk, hso, lch, wup, path, res, lin and jcn
(Pedersen et al., 2004). For example, “cat” and
“dog” has higher semantic similarity than “cat”
and “computer”. In this study, we implement the
vector measure to efficiently evaluate the similari-
ties of a large number of word pairs. The vector
measure (Patwardhan, 2003) creates a co–
occurrence matrix from a corpus made up of the
WordNet glosses. Each content word used in a
WordNet gloss has an associated context vector.
Each gloss is represented by a gloss vector that is
the average of all the context vectors of the words
found in the gloss. Relatedness between concepts
is measured by finding the cosine between a pair of
gloss vectors.
Corpus-based measures of word semantic simi-
larity try to identify the degree of similarity be-
tween words using information exclusively derived
from large corpora. Such measures as mutual in-
formation (Turney 2001), latent semantic analysis
(Landauer et al., 1998), log-likelihood ratio (Dun-
ning, 1993) have been proposed to evaluate word
semantic similarity based on the co-occurrence
information on a large corpus. In this study, we
simply choose the mutual information to compute
the semantic similarity between word ti and tj as
follows:
</bodyText>
<equation confidence="0.892632">
sim(ti, tj) log N p(ti, tj) (3)pt p t
( ) ( )
i j
</equation>
<bodyText confidence="0.999520652173913">
which indicates the degree of statistical depend-
ence between ti and tj. Here, N is the total number
of words in the corpus and p(ti) and p(tj) are re-
spectively the probabilities of the occurrences of ti
and tj, i.e. count(ti)/N and count(tj)/N, where
count(ti) and count(tj) are the frequencies of ti and tj.
p(ti, tj) is the probability of the co-occurrence of ti
and tj within a window with a predefined size k, i.e.
count(ti, tj)/N, where count(ti, tj) is the number of
the times ti and tj co-occur within the window.
Similar to the SS-Graph, we can build an undi-
rected graph GWW to reflect the homogeneous rela-
tionship between words, in which each node corre-
sponds to a word and the weight associated with
the edge between any different word ti and tj is
computed by either the WordNet-based vector
measure or the corpus-based mutual information
measure. We use an adjacency matrix V to de-
scribe GWW with each entry corresponding to the
weight of a link in the graph. V= [Vij]n×n, where Vij
=sim(ti, tj) if i:�j and Vij=0 if i=j.
Then V is similarly normalized to V~ to make
the sum of each row equal to 1.
</bodyText>
<subsubsectionHeader confidence="0.997059">
3.2.3 Sentence-to-Word Graph ( SW-Graph)
</subsubsectionHeader>
<bodyText confidence="0.978286625">
Given the sentence collection S={si  |1&lt;i&lt;m} and
the word collection T={tj|1&lt;j&lt;n } of a document,
we can build a weighted bipartite graph GSW from S
and T in the following way: if word tj appears in
sentence si, we then create an edge between si and
tj. A nonnegative weight aff(si,tj) is specified on the
edge, which is proportional to the importance of
word tj in sentence si, computed as follows:
</bodyText>
<equation confidence="0.986321142857143">
tf isf
t t
j j
aff (s , t ) (4)
i j E tf isf
t t
t s
</equation>
<bodyText confidence="0.999762818181818">
where t represents a unique term in si and tft, isft
are respectively the term frequency in the sentence
and the inverse sentence frequency.
We use an adjacency (affinity) matrix
W=[Wij]m×n to describe GSW with each entry Wij
corresponding to aff(si,tj). Similarly, W is normal-
~
ized to W to make the sum of each row equal to 1.
In addition, we normalize the transpose of W, i.e.
WT, to Wˆ to make the sum of each row in WT
equal to 1.
</bodyText>
<subsectionHeader confidence="0.996622">
3.3 Reinforcement Algorithm
</subsectionHeader>
<bodyText confidence="0.9998248">
We use two column vectors u=[u(si)]m×1 and v
=[v(tj)]n×1 to denote the saliency scores of the sen-
tences and words in the specified document. The
assumptions introduced in Section 3.1 can be ren-
dered as follows:
</bodyText>
<figure confidence="0.912528083333333">
u si
( ) EjUjiu(sj)
~
v tj
( ) E i V ij v ( t i )
~
u(si) EjWˆjiv(tj)
i
555
v tj
( ) Ei Wiju(si) ~
(8)
</figure>
<bodyText confidence="0.982177">
After fusing the above equations, we can obtain
the following iterative forms:
</bodyText>
<equation confidence="0.97452">
m n
u(si) *EUjiu(sj) )EWjiv(tj) (9)
</equation>
<bodyText confidence="0.9993362">
where * and ) specify the relative contributions to
the final saliency scores from the homogeneous
nodes and the heterogeneous nodes and we have
*+)=1. In order to guarantee the convergence of
the iterative form, u and v are normalized after
each iteration.
For numerical computation of the saliency
scores, the initial scores of all sentences and words
are set to 1 and the following two steps are alter-
nated until convergence,
</bodyText>
<listItem confidence="0.995259">
1. Compute and normalize the scores of sen-
tences:
</listItem>
<equation confidence="0.963068">
u(n) *UT u(n-1) )WJT v(n-1)
,
1
</equation>
<listItem confidence="0.934057">
2. Compute and normalize the scores of words:
v (n) *V ~ Tv(n-1) )W ~ T u(n-1) ,
</listItem>
<equation confidence="0.556911">
1
</equation>
<bodyText confidence="0.988550857142857">
where u(n) and v(n) denote the vectors computed at
the n-th iteration.
Usually the convergence of the iteration algo-
rithm is achieved when the difference between the
scores computed at two successive iterations for
any sentences and words falls below a given
threshold (0.0001 in this study).
</bodyText>
<sectionHeader confidence="0.99954" genericHeader="introduction">
4 Empirical Evaluation
</sectionHeader>
<subsectionHeader confidence="0.998362">
4.1 Summarization Evaluation
</subsectionHeader>
<subsubsectionHeader confidence="0.977875">
4.1.1 Evaluation Setup
</subsubsectionHeader>
<bodyText confidence="0.999955868421053">
We used task 1 of DUC2002 (DUC, 2002) for
evaluation. The task aimed to evaluate generic
summaries with a length of approximately 100
words or less. DUC2002 provided 567 English
news articles collected from TREC-9 for single-
document summarization task. The sentences in
each article have been separated and the sentence
information was stored into files.
In the experiments, the background corpus for
using the mutual information measure to compute
word semantics simply consisted of all the docu-
ments from DUC2001 to DUC2005, which could
be easily expanded by adding more documents.
The stopwords were removed and the remaining
words were converted to the basic forms based on
WordNet. Then the semantic similarity values be-
tween the words were computed.
We used the ROUGE (Lin and Hovy, 2003)
toolkit (i.e.ROUGEeval-1.4.2 in this study) for
evaluation, which has been widely adopted by
DUC for automatic summarization evaluation. It
measured summary quality by counting overlap-
ping units such as the n-gram, word sequences and
word pairs between the candidate summary and the
reference summary. ROUGE toolkit reported sepa-
rate scores for 1, 2, 3 and 4-gram, and also for
longest common subsequence co-occurrences.
Among these different scores, unigram-based
ROUGE score (ROUGE-1) has been shown to
agree with human judgment most (Lin and Hovy,
2003). We showed three of the ROUGE metrics in
the experimental results: ROUGE-1 (unigram-
based), ROUGE-2 (bigram-based), and ROUGE-
W (based on weighted longest common subse-
quence, weight=1.2).
In order to truncate summaries longer than the
length limit, we used the “-l” option 2 in the
ROUGE toolkit.
</bodyText>
<subsubsectionHeader confidence="0.996953">
4.1.2 Evaluation Results
</subsubsectionHeader>
<bodyText confidence="0.99997">
For simplicity, the parameters in the proposed ap-
proach are simply set to *=)=0.5, which means
that the contributions from sentences and words
are equally important. We adopt the WordNet-
based vector measure (WN) and the corpus-based
mutual information measure (MI) for computing
the semantic similarity between words. When us-
ing the mutual information measure, we heuristi-
cally set the window size k to 2, 5 and 10, respec-
tively.
The proposed approaches with different word
similarity measures (WN and MI) are compared
</bodyText>
<footnote confidence="0.589895333333333">
2 The “-l” option is very important for fair comparison. Some
previous works not adopting this option are likely to overes-
timate the ROUGE scores.
</footnote>
<figure confidence="0.949979411764706">
i
1 i1
And the matrix form is:
u *U
~WˆTv
Tu )
v *V
~ W~Tu
Tv )
j1j1
v(tj) *E Vijv(ti) )E Wiju(si) (10)
n
m
u (n) u (n) / u
(n)
v (n) v (n) / v
(n)
</figure>
<page confidence="0.996283">
556
</page>
<bodyText confidence="0.999578375">
with two solid baselines: SentenceRank and Mutu-
alRank. SentenceRank is proposed in Mihalcea and
Tarau (2004) to make use of only the sentence-to-
sentence relationships to rank sentences, which
outperforms most popular summarization methods.
MutualRank is proposed in Zha (2002) to make use
of only the sentence-to-word relationships to rank
sentences and words. For all the summarization
methods, after the sentences are ranked by their
saliency scores, we can apply a variant form of the
MMR algorithm to remove redundancy and choose
both the salient and novel sentences to the sum-
mary. Table 1 gives the comparison results of the
methods before removing redundancy and Table 2
gives the comparison results of the methods after
removing redundancy.
</bodyText>
<table confidence="0.999836181818182">
System ROUGE-1 ROUGE-2 ROUGE-W
Our Approach 0.47100*# 0.20424*# 0.16336#
(WN)
Our Approach 0.46711# 0.20195# 0.16257#
(MI:k=2)
Our Approach 0.46803# 0.20259# 0.16310#
(MI:k=5)
Our Approach 0.46823# 0.20301# 0.16294#
(MI:k=10)
SentenceRank 0.45591 0.19201 0.15789
MutualRank 0.43743 0.17986 0.15333
</table>
<tableCaption confidence="0.961652">
Table 1. Summarization Performance before Re-
moving Redundancy (w/o MMR)
</tableCaption>
<table confidence="0.999973909090909">
System ROUGE-1 ROUGE-2 ROUGE-W
Our Approach 0.47329*# 0.20249# 0.16352#
(WN)
Our Approach 0.47281# 0.20281# 0.16373#
(MI:k=2)
Our Approach 0.47282# 0.20249# 0.16343#
(MI:k=5)
Our Approach 0.47223# 0.20225# 0.16308#
(MI:k=10)
SentenceRank 0.46261 0.19457 0.16018
MutualRank 0.43805 0.17253 0.15221
</table>
<tableCaption confidence="0.9934465">
Table 2. Summarization Performance after Remov-
ing Redundancy (w/ MMR)
</tableCaption>
<bodyText confidence="0.9989366875">
(* indicates that the improvement over SentenceRank is sig-
nificant and # indicates that the improvement over Mutual-
Rank is significant, both by comparing the 95% confidence
intervals provided by the ROUGE package.)
Seen from Tables 1 and 2, the proposed ap-
proaches always outperform the two baselines over
all three metrics with different word semantic
measures. Moreover, no matter whether the MMR
algorithm is applied or not, almost all performance
improvements over MutualRank are significant
and the ROUGE-1 performance improvements
over SentenceRank are significant when using
WordNet-based measure (WN). Word semantics
can be naturally incorporated into the computation
process, which addresses the problem that Sen-
tenceRank cannot take into account word seman-
tics, and thus improves the summarization per-
formance. We also observe that the corpus-based
measure (MI) works almost as well as the knowl-
edge-based measure (WN) for computing word
semantic similarity.
In order to better understand the relative contri-
butions from the sentence nodes and the word
nodes, the parameter a is varied from 0 to 1. The
larger a is, the more contribution is given from the
sentences through the SS-Graph, while the less
contribution is given from the words through the
SW-Graph. Figures 2-4 show the curves over three
ROUGE scores with respect to a. Without loss of
generality, we use the case of k=5 for the MI
measure as an illustration. The curves are similar
to Figures 2-4 when k=2 and k=10.
</bodyText>
<figureCaption confidence="0.999998">
Figure 2. ROUGE-1 vs. a
Figure 3. ROUGE-2 vs. a
</figureCaption>
<figure confidence="0.999619107142857">
ROUGE-1
0.475
0.465
0.455
0.445
0.435
0.47
0.46
0.45
0.44
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
a
MI(w/o MMR) MI(w/ MMR)
WN(w/o MMR) WN(w/ MMR)
ROUGE-2
0.205
0.195
0.185
0.175
0.21
0.19
0.18
0.17
0.2
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
a
MI(w/o MMR) MI(w/ MMR)
WN(w/o MMR) WN(w/ MMR)
</figure>
<page confidence="0.610613">
557
</page>
<figureCaption confidence="0.999793">
Figure 4. ROUGE-W vs. a
</figureCaption>
<bodyText confidence="0.9999545">
Seen from Figures 2-4, no matter whether the
MMR algorithm is applied or not (i.e. w/o MMR
or w/ MMR), the ROUGE scores based on either
word semantic measure (MI or WN) achieves the
peak when a is set between 0.4 and 0.6. The per-
formance values decrease sharply when a is very
large (near to 1) or very small (near to 0). The
curves demonstrate that both the contribution from
the sentences and the contribution from the words
are important for ranking sentences; moreover, the
contributions are almost equally important. Loss of
either contribution will much deteriorate the final
performance.
Similar results and observations have been ob-
tained on task 1 of DUC2001 in our study and the
details are omitted due to page limit.
</bodyText>
<subsectionHeader confidence="0.909007">
4.2 Keyword Evaluation
</subsectionHeader>
<subsubsectionHeader confidence="0.989589">
4.1.1 Evaluation Setup
</subsubsectionHeader>
<bodyText confidence="0.999990461538461">
In this study we performed a preliminary evalua-
tion of keyword extraction. The evaluation was
conducted on the single word level instead of the
multi-word phrase (n-gram) level, in other words,
we compared the automatically extracted unigrams
(words) and the manually labeled unigrams
(words). The reasons were that: 1) there existed
partial matching between phrases and it was not
trivial to define an accurate measure to evaluate
phrase quality; 2) each phrase was in fact com-
posed of a few words, so the keyphrases could be
obtained by combining the consecutive keywords.
We used 34 documents in the first five docu-
ment clusters in DUC2002 dataset (i.e. d061-d065).
At most 10 salient words were manually labeled
for each document to represent the document and
the average number of manually assigned key-
words was 6.8. Each approach returned 10 words
with highest saliency scores as the keywords. The
extracted 10 words were compared with the manu-
ally labeled keywords. The words were converted
to their corresponding basic forms based on
WordNet before comparison. The precision p, re-
call r, F-measure (F=2pr/(p+r)) were obtained for
each document and then the values were averaged
over all documents for evaluation purpose.
</bodyText>
<subsubsectionHeader confidence="0.997981">
4.1.2 Evaluation Results
</subsubsectionHeader>
<bodyText confidence="0.999067666666667">
Table 3 gives the comparison results. The proposed
approaches are compared with two baselines:
WordRank and MutualRank. WordRank is pro-
posed in Mihalcea and Tarau (2004) to make use
of only the co-occurrence relationships between
words to rank words, which outperforms tradi-
tional keyword extraction methods. The window
size k for WordRank is also set to 2, 5 and 10, re-
spectively.
</bodyText>
<tableCaption confidence="0.967795">
Table 3. The Performance of Keyword Extraction
</tableCaption>
<bodyText confidence="0.999854571428571">
Seen from the table, the proposed approaches
significantly outperform the baseline approaches.
Both the corpus-based measure (MI) and the
knowledge-based measure (WN) perform well on
the task of keyword extraction.
A running example is given below to demon-
strate the results:
</bodyText>
<figure confidence="0.6834832">
Document ID: D062/AP891018-0301
Labeled keywords:
insurance earthquake insurer damage california Francisco
pay
Extracted keywords:
</figure>
<footnote confidence="0.4302065">
WN: insurance earthquake insurer quake california
spokesman cost million wednesday damage
MI(k=5): insurance insurer earthquake percent benefit
california property damage estimate rate
</footnote>
<figure confidence="0.999031142857143">
ROUGE-W
0.165
0.163
0.161
0.159
0.157
0.155
0.153
0.151
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
MI(w/o MMR) MI(w/ MMR)
WN(w/o MMR) WN(w/ MMR)
System Precision Recall F-measure
Our Approach 0.413 0.504 0.454
(WN)
Our Approach 0.428 0.485 0.455
(MI:k=2)
Our Approach 0.425 0.491 0.456
(MI:k=5)
Our Approach 0.393 0.455 0.422
(MI:k=10)
WordRank 0.373 0.412 0.392
(k=2)
WordRank 0.368 0.422 0.393
(k=5)
WordRank 0.379 0.407 0.393
(k=10)
MutualRank 0.355 0.397 0.375
</figure>
<page confidence="0.958249">
558
</page>
<bodyText confidence="0.94591672972973">
5 Conclusion and Future Work Y. H. Gong and X. Liu. 2001. Generic text summarization using
In this paper we propose a novel approach to si- Relevance Measure and Latent Semantic Analysis. In Proceed-
multaneously document summarization and key- ings of SIGIR2001, 19-25.
word extraction for single documents by fusing the E. Hovy and C. Y. Lin. 1997. Automated text summarization in
sentence-to-sentence, word-to-word, sentence-to- SUMMARIST. In Proceeding of ACL’1997/EACL’1997 Wor-
word relationships in a unified framework. The shop on Intelligent Scalable Text Summarization.
semantics between words computed by either cor- A. Hulth. 2003. Improved automatic keyword extraction given
pus-based approach or knowledge-based approach more linguistic knowledge. In Proceedings of EMNLP2003,
can be incorporated into the framework in a natural Japan, August.
way. Evaluation results demonstrate the perform- J. M. Kleinberg. 1999. Authoritative sources in a hyperlinked
ance improvement of the proposed approach over environment. Journal of the ACM, 46(5):604–632.
the baselines for both tasks. B. Krulwich and C. Burkey. 1996. Learning user information
In this study, only the mutual information meas- interests through the extraction of semantically significant
ure and the vector measure are employed to com- phrases. In AAAI 1996 Spring Symposium on Machine Learn-
pute word semantics, and in future work many ing in Information Access.
other measures mentioned earlier will be investi- J. Kupiec, J. Pedersen, and F. Chen. 1995. A.trainable document
gated in the framework in order to show the ro- summarizer. In Proceedings of SIGIR1995, 68-73.
bustness of the framework. The evaluation of key- T. K. Landauer, P. Foltz, and D. Laham. 1998. Introduction to
word extraction is preliminary in this study, and latent semantic analysis. Discourse Processes 25.
we will conduct more thorough experiments to C. Y. Lin and E. Hovy. 2000. The automated acquisition of topic
make the results more convincing. Furthermore, signatures for text Summarization. In Proceedings of ACL-
the proposed approach will be applied to multi- 2000, 495-501.
document summarization and keyword extraction, C.Y. Lin and E.H. Hovy. 2003. Automatic evaluation of summa-
which are considered more difficult than single ries using n-gram co-occurrence statistics. In Proceedings of
document summarization and keyword extraction. HLT-NAACL2003, Edmonton, Canada, May.
Acknowledgements R. Mihalcea, C. Corley, and C. Strapparava. 2006. Corpus-based
This work was supported by the National Science and knowledge-based measures of text semantic similarity. In
Foundation of China (60642001). Proceedings of AAAI-06.
References R. Mihalcea and P. Tarau. 2004. TextRank: Bringing order into
M. R. Amini and P. Gallinari. 2002. The use of unlabeled data to texts. In Proceedings of EMNLP2004.
improve supervised learning for text summarization. In Pro- R. Mihalcea and P.Tarau. 2005. A language independent algo-
ceedings of SIGIR2002, 105-112. rithm for single and multiple document summarization. In
S. Brin and L. Page. 1998. The anatomy of a large-scale hypertex- Proceedings of IJCNLP2005.
tual Web search engine. Computer Networks and ISDN Sys- A. Muñoz. 1996. Compound key word generation from document
tems, 30(1–7). databases using a hierarchical clustering ART model. Intelli-
J. Carbonell and J. Goldstein. 1998. The use of MMR, diversity- gent Data Analysis, 1(1).
based reranking for reordering documents and producing T. Nomoto and Y. Matsumoto. 2001. A new approach to unsuper-
</bodyText>
<reference confidence="0.96114596">
summaries. In Proceedings of SIGIR-1998, 335-336. vised text summarization. In Proceedings of SIGIR2001, 26-34.
J. M. Conroy and D. P. O’Leary. 2001. Text summarization via S. Patwardhan. 2003. Incorporating dictionary and corpus infor-
Hidden Markov Models. In Proceedings of SIGIR2001, 406- mation into a context vector measure of semantic relatedness.
407. Master’s thesis, Univ. of Minnesota, Duluth.
DUC. 2002. The Document Understanding Workshop 2002. T. Pedersen, S. Patwardhan, and J. Michelizzi. 2004. Word-
http://www-nlpir.nist.gov/projects/duc/guidelines/2002.html Net::Similarity – Measuring the relatedness of concepts. In
T. Dunning. 1993. Accurate methods for the statistics of surprise Proceedings of AAAI-04.
and coincidence. Computational Linguistics 19, 61–74. D. Shen, J.-T. Sun, H. Li, Q. Yang, and Z. Chen. 2007. Document
G. ErKan and D. R. Radev. 2004. LexPageRank: Prestige in Summarization using Conditional Random Fields. In Proceed-
multi-document text summarization. In Proceedings of ings of IJCAI 07.
EMNLP2004. A. M. Steier and R. K. Belew. 1993. Exporting phrases: A statisti-
C. Fellbaum. 1998. WordNet: An Electronic Lexical Database. cal analysis of topical language. In Proceedings of Second
The MIT Press. Symposium on Document Analysis and Information Retrieval,
E. Frank, G. W. Paynter, I. H. Witten, C. Gutwin, and C. G. pp. 179-190.
Nevill-Manning. 1999. Domain-specific keyphrase extraction. P. D. Turney. 2000. Learning algorithms for keyphrase extraction.
Proceedings of IJCAI-99, pp. 668-673. Information Retrieval, 2:303-336.
559 P. Turney. 2001. Mining the web for synonyms: PMI-IR versus
LSA on TOEFL. In Proceedings of ECML-2001.
I. H. Witten, G. W. Paynter, E. Frank, C. Gutwin, and C. G.
Nevill-Manning. 1999. KEA: Practical automatic keyphrase
extraction. Proceedings of Digital Libraries 99 (DL&apos;99), pp.
254-256.
H. Y. Zha. 2002. Generic summarization and keyphrase extraction
using mutual reinforcement principle and sentence clustering.
In Proceedings of SIGIR2002, pp. 113-120.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.831515">
<title confidence="0.9967455">Towards an Iterative Reinforcement Approach for Simultaneous Document Summarization and Keyword Extraction</title>
<author confidence="0.997757">Xiaojun Wan Jianwu Yang Jianguo Xiao</author>
<affiliation confidence="0.999925">Institute of Computer Science and Technology</affiliation>
<address confidence="0.911429">Peking University, Beijing 100871, China</address>
<email confidence="0.985849">wanxiaojun@icst.pku.edu.cn</email>
<email confidence="0.985849">yangjianwu@icst.pku.edu.cn</email>
<email confidence="0.985849">xiaojianguo@icst.pku.edu.cn</email>
<abstract confidence="0.996094952380952">Though both document summarization and keyword extraction aim to extract concise representations from documents, these two tasks have usually been investigated independently. This paper proposes a novel iterative reinforcement approach to simultaneously extracting summary and keywords from single document under the assumption that the summary and keywords of a document can be mutually boosted. The approach can naturally make full use of the reinforcement between sentences and keywords by fusing three kinds of relationships between sentences and words, either homogeneous or heterogeneous. Experimental results show the effectiveness of the proposed approach for both tasks. The corpus-based approach is validated to work almost as well as the knowledge-based approach for computing word semantics.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>