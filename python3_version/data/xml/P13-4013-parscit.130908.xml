<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000171">
<title confidence="0.482615">
PhonMatrix: Visualizing co-occurrence constraints of sounds
</title>
<author confidence="0.789109">
Thomas Mayer
</author>
<affiliation confidence="0.814667">
Research Unit
Quantitative Language Comparison
Philipps University of Marburg
thomas.mayer@uni-marburg.de
</affiliation>
<author confidence="0.97526">
Christian Rohrdantz
</author>
<affiliation confidence="0.9908435">
Data Analysis and Visualization Group
University of Konstanz
</affiliation>
<bodyText confidence="0.2512765">
christian.rohrdantz
@uni-konstanz.de
</bodyText>
<sectionHeader confidence="0.988236" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999802166666667">
This paper describes the online tool Phon-
Matrix, which analyzes a word list with re-
spect to the co-occurrence of sounds in a
specified context within a word. The co-
occurrence counts from the user-specified
context are statistically analyzed accord-
ing to a number of association measures
that can be selected by the user. The
statistical values then serve as the input
for a matrix visualization where rows and
columns represent the relevant sounds un-
der investigation and the matrix cells indi-
cate whether the respective ordered pair of
sounds occurs more or less frequently than
expected. The usefulness of the tool is
demonstrated with three case studies that
deal with vowel harmony and similar place
avoidance patterns.
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99962105882353">
In this paper, we introduce the PhonMatrix1 tool,
which is designed to visualize co-occurrence con-
straints of sounds within words given a reasonably
sized word list of the language. It is a web-based
implementation of the visualization method pro-
posed in (Mayer et al., 2010a), including some
further development such as an interactive com-
ponent and a range of association measures and
sorting methods to choose from. The original mo-
tivation for this tool is to give linguists the oppor-
tunity to upload their own word lists in order to
visually explore co-occurrence constraints in lan-
guages. The basic idea behind the visual compo-
nent of the tool is to provide for a first, at-a-glance
mode of analysis which can be used to generate
hypotheses about the data by simply looking at the
visualization matrices.
</bodyText>
<footnote confidence="0.930652">
1http://paralleltext.info/phonmatrix/
</footnote>
<bodyText confidence="0.999511146341464">
Phonotactic constraints in languages abound.
One of the most well-known and wide-spread con-
straints is commonly referred to as vowel har-
mony (van der Hulst and van de Weijer, 1995). In
vowel harmony languages, vowels are separated
into groups where vowels of the same group tend
to co-occur within words, while vowels from dif-
ferent groups rarely co-occur. Likewise, in some
languages there are patterns of consonant har-
mony (Hansson, 2010) that show a similar behav-
ior with respect to consonants. Less common are
cases of “synharmonism” (Trubetzkoy, 1967, p.
251) where both vowels and consonants form such
groups and words usually only contain sounds
from the same group (e.g., only front vowels and
palatalized consonants). Whereas vowel harmony
patterns are easily detectable in many harmonic
languages due to the harmonic alternants in af-
fixes, other co-occurrence constraints are less ob-
vious. This is especially true for disharmonic pat-
terns, the most famous of which is the principle
of Similar Place Avoidance (SPA) in Semitic con-
sonantal roots (Greenberg, 1950). Recent studies
have shown that this principle is not only active
in Semitic languages, where it was already known
by grammarians in the Middle Ages, but is a more
widespread tendency among the languages of the
world (Pozdniakov and Segerer, 2007; Mayer et
al., 2010b). One of the reasons why statistical con-
straints like SPA are more difficult to detect is the
fact that they exhibit many frequent counterexam-
ples and are therefore less easily spotted as a gen-
eral (albeit statistical) tendency.
In our view, there are many more phonotactic
constraints that wait to be discovered by linguists.
With the availability of language data in electronic
format such tendencies can be automatically pro-
cessed and presented to the user in a form that
allows for an easy exploration of the results in a
short period of time. Thus a larger number of
phonotactic contexts can be explored in order to
</bodyText>
<page confidence="0.987784">
73
</page>
<bodyText confidence="0.838998">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 73–78,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
find potential patterns in the data. The PhonMa-
trix tool is part of an ongoing effort to integrate
methods and techniques from the field of visual
analytics (Thomas and Cook, 2005) into linguis-
tic research. The present tool will be gradually
augmented with further functionalities in order to
enhance its usefulness.
</bodyText>
<sectionHeader confidence="0.999873" genericHeader="introduction">
2 Related work
</sectionHeader>
<bodyText confidence="0.9999582">
A related tool that quantifies the co-occurrence of
sounds in a given corpus is the Vowel Harmony
Calculator (Harrison et al., 2004). The major dif-
ference between PhonMatrix and the Vowel Har-
mony Calculator is that the latter is restricted to
the context of vowel harmony and requires the user
to input the harmony classes beforehand whereas
PhonMatrix is designed to detect these classes
by making potential harmonic patterns more eas-
ily perceptible to the user. The Vowel Harmony
Calculator quantifies the notion of vowel har-
mony for the input corpus by giving the percent-
age of harmonic words and the harmony threshold.
The harmony threshold is the percentage of words
that would be expected to be harmonic purely by
chance. The output of the Vowel Harmony Cal-
culator consists of a list of values (number of
polysyllabic words, harmony threshold, percent-
age of harmonic words, harmony index, among
other things) but does not give any information
about the harmonic strength of individual vowel
pairs. In short, the Vowel Harmony Calculator is
a way to quantify the notion of harmony given the
harmony classes of the language whereas Phon-
Matrix is intended to help detect such patterns.
</bodyText>
<sectionHeader confidence="0.951003" genericHeader="method">
3 System overview
</sectionHeader>
<bodyText confidence="0.999748761904762">
PhonMatrix is a web-based visualization tool that
statistically analyzes sound co-occurrences within
words and displays the result in a symmetric sound
matrix. The statistical components are written
in Python whereas the visualization part is in
Javascript, using the D3 library (Bostock et al.,
2011). Before discussing the individual steps of
the system in more detail we will give a brief
overview of the overall processing pipeline (see
Figure 1).
In the first step, the user has to upload the text
file containing the word list that serves as the in-
put to the analysis process. Text files have to be
encoded in UTF-8 and list only one word per line.
For a meaningful analysis the words should be
given in some phonemic transcription (e.g., using
IPA).2
After the file has been uploaded to the server all
symbols in the word list are analyzed according
to their unigram and bigram frequencies. These
frequencies are used to infer an automatic dis-
tinction between vowels, consonants and infre-
quent symbols. Infrequent symbols are consid-
ered to be noise in the data and can be ignored
for further processing. A distinction between vow-
els and consonants is automatically inferred from
the word list by means of Sukhotin’s algorithm
(Sukhotin, 1962). The results of Sukhotin’s algo-
rithm are presented to the user together with the
frequency counts of the individual symbols in the
word list.
In the third step, the user can make changes to
the automatic classification of symbols into vow-
els and consonants and exclude infrequent sym-
bols from further consideration. The subsequent
calculations of co-occurrence values are mostly
based on the distinction of input symbols into con-
sonants (C) and vowels (V). Users can choose
among a number of options that define the con-
text for the co-occurrence calculations.3 Two of
those options will be discussed in more detail in
this paper (vowel co-occurrences in VCV and CC
sequences). Depending on the user’s choice, the
co-occurrences in the selected context are calcu-
lated and analyzed with respect to a number of sta-
tistical association measures from which the user
can choose one for the visualization.
In the last step, the results of the statistical anal-
ysis of the co-occurrence counts are displayed in a
quadratic matrix of sounds. The rows and columns
of the matrix represent the individual sounds that
are relevant for the selected context (e.g., vow-
els in the context of VCV sequences). The rows
thereby stand for the first members of the relevant
sound pairs, whereas the columns contain the sec-
ond members. Each cell of the matrix then shows
the result for the pair of sounds in the respective
row and column.
The final result is a visualization of the co-
occurrence matrix with rows and columns sorted
according to the similarity of the sound vectors
and statistical values represented as colors in the
matrix cells. The visualization features a number
</bodyText>
<footnote confidence="0.97227875">
2For more information on the minimum amount of data
necessary see (Mayer et al., 2010a).
3It is also possible for users to define their own contexts
with regular expressions.
</footnote>
<page confidence="0.994695">
74
</page>
<figure confidence="0.999524714285714">
File upload
Preprocessing,
VC4distinction
User selects
context
Co4occurrence Visualization
statistics
</figure>
<figureCaption confidence="0.999995">
Figure 1: The processing pipeline of the PhonMatrix visualization tool.
</figureCaption>
<bodyText confidence="0.9983335">
of interactive components that facilitate the detec-
tion of potential patterns in the results by the user.
</bodyText>
<sectionHeader confidence="0.983421" genericHeader="method">
4 PhonMatrix components
</sectionHeader>
<bodyText confidence="0.999855166666667">
PhonMatrix consists of three main components:
preprocessing (including vowel-consonant dis-
tinction), statistical analysis of co-occurrence
counts and visualization. In what follows, we will
describe each component in more detail, with spe-
cial emphasis on the visualization component.
</bodyText>
<subsectionHeader confidence="0.988347">
4.1 Vowel-consonant distinction
</subsectionHeader>
<bodyText confidence="0.9999729375">
Most of the co-occurrence restrictions that might
be of interest make reference to a distinction be-
tween vowels and consonants. Since a manual
classification of all sounds in the input into vowels
and consonants is a tedious task (especially with
a larger number of symbols), the first component
deals with an automatic inference of such a dis-
tinction. Many methods have been discussed in
the literature on how to discriminate vowels from
consonants on the basis of their distribution in
texts. Many of them involve many lines of code
and are computationally demanding. Yet there is a
very simple and fast algorithm that yields reason-
ably good results (Sukhotin, 1962; Guy, 1991).
The basic idea of Sukhotin’s algorithm is that
vowels and consonants have the tendency not to
occur in groups within words but to alternate.
Based on the additional assumption that the most
frequent symbol in the text is a vowel, the algo-
rithm iteratively selects the symbol which occurs
most frequently adjacent to a vowel and deter-
mines it to be a consonant. The algorithm stops
if no more consonants can be selected because no
co-occurrence counts with any remaining vowel
are positive. Although the algorithm is quite old
and very simple, it gives reasonably good results
(Goldsmith and Xanthos, 2009; Guy, 1991; Sas-
soon, 1992). PhonMatrix makes use of Sukhotin’s
algorithm as a preprocessing step to give a first
guess of the class for each symbol, which the user
can then modify if it turns out to be wrong. It
mainly serves to speed up the classification step.
</bodyText>
<subsectionHeader confidence="0.989421">
4.2 Co-occurrence statistics
</subsectionHeader>
<bodyText confidence="0.998725807692307">
With the distinction of symbols into vowels and
consonants at hand, the user can then select a rel-
evant context for the co-occurrence counts. The
relevant context can be chosen from a list of pre-
defined options. Here we will illustrate the statis-
tical analysis with the context of VCV sequences
to investigate vowel harmony in Turkish. The in-
put consists of 20,968 orthographic words from
the Turkish New Testament.4 The tool automati-
cally extracts all VCV sequences in the words and
counts the co-occurrences of sounds in these se-
quences. The counts are then summarized in a
quadratic contingency table and can be used for
further statistical analyses.
In our experiments, two measures turned out to
be especially useful for the detection of potential
patterns: the probability and 0 values. The 0 value
is a normalized x2 measure which allows for an
easier mapping of values to the color scale because
it is always between −1 and 1.5 The 0 values for
the vowels in the Turkish text are shown in Table
1. Apart from probability and 0 values, the user
can also choose among a number of other asso-
ciation measures such as pointwise mutual infor-
mation, likelihood ratios or t-scores (Manning and
Sch¨utze, 1999).
</bodyText>
<subsectionHeader confidence="0.999411">
4.3 Visualization component
</subsectionHeader>
<bodyText confidence="0.999959090909091">
The input to the visualization component is a ma-
trix of association measures for each sound pair
in the relevant context. Two additional steps have
to be performed in order to arrive at the final
matrix visualization: 1) the rows and columns
of the matrix have to be sorted in a meaning-
ful way; 2) the association measures have to be
mapped to visual variables. For the matrix ar-
rangement, we decided to have the same order of
symbols for the rows and columns. The order
of symbols is determined by a clustering of the
</bodyText>
<footnote confidence="0.999231">
4Turkish orthography represents the modern pronuncia-
tion with a high degree of accuracy.
5Apart from this, φ makes good use of the off-diagonal
cells in the contingency tables (Church and Gale, 1991).
</footnote>
<page confidence="0.994755">
75
</page>
<bodyText confidence="0.538145333333333">
a e i o u o¨ u¨ ı
a 0.53699 -0.49730 -0.54579 -0.30421 -0.38117 -0.03895 -0.36874 0.65791
e -0.48371 0.54763 0.64548 -0.28216 -0.37907 -0.05792 -0.32882 -0.53454
i -0.40334 0.37477 0.59682 0.30227 -0.33970 0.09038 -0.30307 -0.49651
o 0.20048 -0.28306 -0.31395 -0.14114 0.65493 -0.05532 -0.20696 -0.33238
u 0.28855 -0.34937 -0.38283 0.17629 0.73451 0.10011 -0.22066 -0.39304
o¨ -0.28879 0.32352 -0.29843 -0.16465 -0.21329 -0.04885 0.65373 -0.29354
u¨ -0.31709 0.33094 -0.34774 0.14995 -0.24351 -0.05829 0.75780 -0.35024
ı 0.30302 -0.40711 -0.46423 0.32671 -0.33210 -0.07607 -0.28459 0.58548
</bodyText>
<tableCaption confidence="0.995631">
Table 1: 0 values of VCV sequences in Turkish.
</tableCaption>
<bodyText confidence="0.98336862745098">
symbols based on the similarity of their row val-
ues. The clustering is performed with the Python
scipy.cluster.hierarchy package from
the SciPy library. As a default setting Ward’s al-
gorithm (Ward, 1963) is used but other clustering
algorithms can also be easily integrated.
Whereas the preprocessing steps and the data-
driven sorting of rows and columns have been
written in Python, the actual visualization of the
results in the browser is implemented in Javascript
using the D3 library (Bostock et al., 2011). The
association measures and the order of the sym-
bols are referenced as Javascript variables in the
visualization document. The data is then automat-
ically bound to DOM elements of the HTML doc-
ument through the D3 data operator. The mapping
from association measures to color values is made
with the linear scale method from the d3.scale
package. Scale methods map from an input do-
main to an output range. The input domain for the
0 values is the interval [−1; 1], while the output
range can be given as a color scale ranging from
one color to the other. For the 0 values we de-
cided to use two unipolar scales, one from −1 to
0 (red) and the other from 0 to +1 (blue). In order
to reserve a larger color range for the densely pop-
ulated area of low values we did not linearly map
the numerical association measures but used the
square roots of the numerical values as the input
for the scale function. Additionally, the sign of the
0 value, which shows whether the co-occurrence
of a certain symbol pair occurs more (+) or less
(−) frequently than expected, is displayed in the
matrix cell.6 The result of the matrix visualization
for the 0 values of the vowels in Turkish VCV se-
quences is shown in Section 5.1.
6The algebraic sign is displayed in white and therefore
stands out more clearly with higher absolute φ values.
The matrix visualization also features some in-
teraction to explore the results in more detail. On
mouse-over, the respective matrix cell shows the
actual values that serve as the input for the data
mapping process. Additionally, the row and col-
umn labels are highlighted in order to show more
clearly which pair of symbols is currently selected
(see Figure 2). The size of the matrix can also
be adjusted to the user’s needs with the help of
a slider above the matrix. Next to the slider is a
dropdown menu from which users can choose the
association measure that they want to be displayed
in the visualization.
</bodyText>
<sectionHeader confidence="0.938803" genericHeader="method">
5 Case studies
</sectionHeader>
<bodyText confidence="0.999892">
After the description of the PhonMatrix system we
will illustrate the usefulness of the visualization of
co-occurrence patterns in sounds with three case
studies. They are presented as a proof of concept
that the visualization component allows for an at-
a-glance exploration of potential patterns. The vi-
sualization part is thereby not considered to be a
replacement of more detailed linguistic investiga-
tions but rather serves as a way to explore a mul-
titude of different contexts and data in a compara-
tively short period of time. After a suspicious pat-
tern has been detected it is indispensable to look
at the actual data to see whether the visualization
result is an artifact of the method or data at hand
or whether the detected pattern is an interesting
phonotactic feature of the language under consid-
eration.
</bodyText>
<subsectionHeader confidence="0.979388">
5.1 Turkish vowel harmony
</subsectionHeader>
<bodyText confidence="0.999678">
The first case study shows the results of the VCV
sequences in Turkish described above. For this
purpose the vowels a, e, i, o, u, ¨o, ¨u, ı are selected
as the relevant sounds that are to be compared in
</bodyText>
<page confidence="0.984433">
76
</page>
<figureCaption confidence="0.9974195">
Figure 2: The visualization of the 0 values of VCV
sequences in the Turkish text.
</figureCaption>
<figure confidence="0.631323">
o a u ö y ä e i
</figure>
<figureCaption confidence="0.999033">
Figure 3: The visualization of the probabilities of
</figureCaption>
<equation confidence="0.989246937499999">
VCV sequences in the Finnish text.
i
ö ü e
o u a ı
−
+ −
+
−
−
−
−
−
−
+
−
−
i
o
u
a
ı
− −
+
−
+
−
+ +
+ +
− +
+ − +
0.65
+ + −
− − −
− −
− −
+ +
− −
− −
− −
− −
+ − +
+
−
ö
ü
−
+
e
−
−
−
−
−
−
−
+
+
o − + −
a + + +
u + + +
ö − − −
y − − −
ä − − −
e −
i +
− − −
− − −
+ −
+ +
+ + + + −
+ + + − +
+ − +
+ + −
− − −
+
+ +
− −
− −
− − − −
− − − −
</equation>
<bodyText confidence="0.99996375">
the visualization. Figure 2 shows the results for
the 0 values that have been computed from the
co-occurrence counts of the symbols in VCV se-
quences. The arrangement of the symbols in the
</bodyText>
<subsectionHeader confidence="0.564814">
Users/thommy/Dpbox/Code/onMarixatix.html
</subsectionHeader>
<bodyText confidence="0.9999735">
matrix rows and columns already show a distinc-
tion between front (the first four vowels) and back
(the last four vowels) vowels, reflecting the palatal
harmony in Turkish. This distinction can best be
seen when looking at the e- and a-columns where
the top four vowels all have positive 0 values for
e and negative 0 values for a, whereas the bottom
four vowels show the opposite behavior. On closer
inspection, the labial harmony for high vowels can
also be seen in the matrix visualization. From top
to bottom there are always pairs of vowels that
take the same harmonic vowel, starting with (¨o,
¨u) taking u¨ and followed by (e, i) taking i, (o, u)
taking u and finally (a, ı) taking ı. The usefulness
of the visualization component to detect such pat-
terns can best be seen when comparing Figure 2
with Table 1, which contains the same informa-
tion.
</bodyText>
<subsectionHeader confidence="0.99844">
5.2 Finnish vowel harmony
</subsectionHeader>
<bodyText confidence="0.99998755">
The second case study shows that the harmonic
patterns can also be detected in orthographic
words of the Finnish Bible text. Finnish differs
from Turkish in having only one type of harmony
(palatal harmony) and neutral vowels, i.e., vowels
that do not (directly) participate in the harmony
process. As a different underlying association
measure for the visualization consider the proba-
bility values in Figure 3. For probability values
we have chosen a bipolar color scale ranging from
white (for 0) over green (for 0.5) to blue (for 1).
The probability matrix clearly shows the relevant
blocks of vowels that mark the harmony groups.7
The clustering algorithm separates the back vow-
els (first three vowels o, a, u) from the front vowels
(vowels four to six, ¨o, y, ¨a) and the neutral vowels
(e, i). The blocks along the main diagonal of the
matrix show the harmonic pattern among the har-
mony groups, whereas the neutral vowels do not
display any regular behavior.
</bodyText>
<subsectionHeader confidence="0.992433">
5.3 Maltese verbal roots
</subsectionHeader>
<bodyText confidence="0.9998348125">
PhonMatrix is not only useful to find vowel har-
mony patterns. The third case study shows that
other co-occurrence constraints such as SPA can
also be detected. To illustrate this, we show the
visualization of CC patterns in a comprehensive
list of Maltese verbal roots (Spagnol, 2011). The
consonant matrix in Figure 4 shows two clusters,
with one cluster (the first twelve consonants in
the top row) containing labial and dorsal and the
other cluster (the last eleven consonants) compris-
ing only coronal consonants.8 The visualization
also reveals that, unlike in vowel harmony, conso-
nants from the same cluster do not occur next to
each other in the CC sequences, as shown by the
red blocks in the top left and bottom right. This is
exactly what SPA would predict.
</bodyText>
<footnote confidence="0.996990666666667">
7The +/− signs in the matrix are taken from the φ values.
8The consonants are given in their orthographic represen-
tation (Borg and Azzopardi-Alexander, 1997, p. 299).
</footnote>
<page confidence="0.997272">
77
</page>
<figureCaption confidence="0.916636">
Figure 4: The visualization of the φ values of con-
sonant sequences in Maltese verbal roots.
</figureCaption>
<sectionHeader confidence="0.999545" genericHeader="conclusions">
6 Conclusions
</sectionHeader>
<bodyText confidence="0.940607125">
In this paper, we have presented PhonMatrix, a
web-based, interactive visualization tool for in-
vestigating co-occurrence restrictions of sounds
within words. The case studies of vowel harmony
and SPA have shown that interesting patterns in
the data can easily be seen only by looking at the
/x/Phr
matrix visualizations.
</bodyText>
<sectionHeader confidence="0.998276" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9999406">
This work was partially funded by the DFG project
“Algorithmic corpus-based approaches to typolog-
ical comparison.” We are grateful to two anony-
mous reviewers for their valuable comments and
suggestions.
</bodyText>
<sectionHeader confidence="0.999" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999378507692308">
Albert Borg and Marie Azzopardi-Alexander. 1997.
Maltese. Descriptive Grammar Series. London:
Routledge.
Michael Bostock, Vadim Ogievetsky, and Jeffrey Heer.
2011. D3: Data-driven documents. IEEE Transac-
tions on Visualization &amp; Computer Graphics (Proc.
InfoVis), 17(12):2301–2309.
Kenneth W. Church and William A. Gale. 1991. Con-
cordances for parallel text. In Proceedings of the
Seventh Annual Conference of the UW Centre for the
New OED and Text Research, pages 40–62.
John Goldsmith and Aris Xanthos. 2009. Learning
phonological categories. Language, 85(1)(1):4–38.
Joseph H. Greenberg. 1950. The patterning of root
morphemes in Semitic. Word, 6:161–182.
Jacques B. M. Guy. 1991. Vowel identification: an old
(but good) algorithm. Cryptologia, 15(3):258–262,
July.
Gunnar ´Olafur Hansson. 2010. Consonant Harmony.
Berkeley: University of California Press.
David Harrison, Emily Thomforde, and Michael
O’Keefe. 2004. The vowel harmony cal-
culator. http://www.swarthmore.edu/
SocSci/harmony/public_html/.
Christopher D. Manning and Hinrich Sch¨utze. 1999.
Foundations of Natural Language Processing. Mas-
sachusetts Institute of Technology.
Thomas Mayer, Christian Rohrdantz, Miriam Butt,
Frans Plank, and Daniel A Keim. 2010a. Visual-
izing vowel harmony. Journal of Linguistic Issues
in Language Technology (LiLT), 4(2):1–33.
Thomas Mayer, Christian Rohrdantz, Frans Plank, Pe-
ter Bak, Miriam Butt, and Daniel A. Keim. 2010b.
Consonant co-occurrence in stems across languages:
Automatic analysis and visualization of a phono-
tactic constraint. In Proceedings of the ACL 2010
Workshop on NLP and Linguistics: Finding the
Common Ground, pages 67–75.
Konstantin Pozdniakov and Guillaume Segerer. 2007.
Similar Place Avoidance: A statistical universal.
Linguistic Typology, 11(2)(2):307–348.
te 1 1
George T. Sassoon. 1992. The application of
Sukhotin’s algorithm to certain Non-English lan-
guages. Cryptologia, 16(2)(2):165–173.
Michael Spagnol. 2011. A tale of two morphologies.
Verb structure and argument alternations in Mal-
tese. Ph.D. thesis, Germany: University of Konstanz
dissertation.
Boris V. Sukhotin. 1962. Eksperimental’noe vydelenie
klassov bukv s pomos¸c¸ju evm. Problemy strukturnoj
lingvistiki, 234:189–206.
James J. Thomas and Kristin A. Cook. 2005. Illu-
minating the Path: The Research and Development
Agenda for Visual Analytics. National Visualization
and Analytics Ctr.
N. S. Trubetzkoy. 1967. Grundz¨uge der Phonologie.
G¨ottingen: Vandenhoeck &amp; Ruprecht. 4. Auflage.
Harry van der Hulst and Jeroen van de Weijer. 1995.
Vowel harmony. In John Goldsmith, editor, The
Handbook of Phonological Theory, chapter 14,
pages 495–534. Basil Blackwell Ltd.
Joe H. Jr. Ward. 1963. Hierarchical grouping to opti-
mize an objective function. Journal of the American
Statistical Association, 58(1)(1):236–244.
</reference>
<figure confidence="0.990248666666666">
q ħ j g għ h m b w f k p n l r ġ d ż z x t s ċ
q
ħ
j
g
għ
h
m
b
w
f
k
p
n
l
r
ġ
d
ż
z
x
t
s
ċ
</figure>
<equation confidence="0.9941482">
+ + + + − − + + + − + + − + − + +
- - - - - - + + + − − − + + + − − − − + + + −
+ − + + − + + − + + − + + + − +
+ + + + + + + − − − −
+ + − − + − + + + + + + − + + − − - - - - - + + − − − − + + + + + + − + − − −
+ + − − + + − − − − + − − + + + + + + + − + +
+ + + − + + + + + + + − + + + −
+ + + + + + + − + + + +
+ − + + + + − − − − + + + +
− − + − + − + + + + − − − + + + + +
- - - - - - - - - - - - + + + − − − + + + + +
+ + + + + + − − − + + + − − − + + + + − + + +
+ + + + + + + + + + + + − − − + − − + − + + −
+ + − + + + + + + + + + − − − + + + − + + + +
− − + + + + + + + − − − + + +
+ − + + + + + + + − − − + − +
+ − − + + + + + + − − − + − + - - - - - - - − − + + − − + − − − + + + + - - - - - - - - + + + − + + + + + + + + − − + + − −
− + + − + − − + + + + + + + + − − − − + − − −
+ + − − − − + + + + + + + + +
+ − + − − − + − + + + + + − +
</equation>
<page confidence="0.990818">
78
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.235798">
<title confidence="0.999564">PhonMatrix: Visualizing co-occurrence constraints of sounds</title>
<author confidence="0.716433">Thomas</author>
<affiliation confidence="0.488921666666667">Research Quantitative Language Philipps University of</affiliation>
<email confidence="0.408793">thomas.mayer@uni-marburg.de</email>
<author confidence="0.960571">Christian</author>
<affiliation confidence="0.928161">Data Analysis and Visualization University of</affiliation>
<email confidence="0.960435">@uni-konstanz.de</email>
<abstract confidence="0.999745315789474">paper describes the online tool Phonwhich analyzes a word list with respect to the co-occurrence of sounds in a specified context within a word. The cooccurrence counts from the user-specified context are statistically analyzed according to a number of association measures that can be selected by the user. The statistical values then serve as the input for a matrix visualization where rows and columns represent the relevant sounds under investigation and the matrix cells indicate whether the respective ordered pair of sounds occurs more or less frequently than expected. The usefulness of the tool is demonstrated with three case studies that deal with vowel harmony and similar place avoidance patterns.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Albert Borg</author>
<author>Marie Azzopardi-Alexander</author>
</authors>
<title>Maltese. Descriptive Grammar Series.</title>
<date>1997</date>
<publisher>Routledge.</publisher>
<location>London:</location>
<contexts>
<context position="20486" citStr="Borg and Azzopardi-Alexander, 1997" startWordPosition="3482" endWordPosition="3485"> consonant matrix in Figure 4 shows two clusters, with one cluster (the first twelve consonants in the top row) containing labial and dorsal and the other cluster (the last eleven consonants) comprising only coronal consonants.8 The visualization also reveals that, unlike in vowel harmony, consonants from the same cluster do not occur next to each other in the CC sequences, as shown by the red blocks in the top left and bottom right. This is exactly what SPA would predict. 7The +/− signs in the matrix are taken from the φ values. 8The consonants are given in their orthographic representation (Borg and Azzopardi-Alexander, 1997, p. 299). 77 Figure 4: The visualization of the φ values of consonant sequences in Maltese verbal roots. 6 Conclusions In this paper, we have presented PhonMatrix, a web-based, interactive visualization tool for investigating co-occurrence restrictions of sounds within words. The case studies of vowel harmony and SPA have shown that interesting patterns in the data can easily be seen only by looking at the /x/Phr matrix visualizations. Acknowledgments This work was partially funded by the DFG project “Algorithmic corpus-based approaches to typological comparison.” We are grateful to two anony</context>
</contexts>
<marker>Borg, Azzopardi-Alexander, 1997</marker>
<rawString>Albert Borg and Marie Azzopardi-Alexander. 1997. Maltese. Descriptive Grammar Series. London: Routledge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Bostock</author>
<author>Vadim Ogievetsky</author>
<author>Jeffrey Heer</author>
</authors>
<title>D3: Data-driven documents.</title>
<date>2011</date>
<journal>IEEE Transactions on Visualization &amp; Computer Graphics (Proc. InfoVis),</journal>
<volume>17</volume>
<issue>12</issue>
<contexts>
<context position="5881" citStr="Bostock et al., 2011" startWordPosition="927" endWordPosition="930"> index, among other things) but does not give any information about the harmonic strength of individual vowel pairs. In short, the Vowel Harmony Calculator is a way to quantify the notion of harmony given the harmony classes of the language whereas PhonMatrix is intended to help detect such patterns. 3 System overview PhonMatrix is a web-based visualization tool that statistically analyzes sound co-occurrences within words and displays the result in a symmetric sound matrix. The statistical components are written in Python whereas the visualization part is in Javascript, using the D3 library (Bostock et al., 2011). Before discussing the individual steps of the system in more detail we will give a brief overview of the overall processing pipeline (see Figure 1). In the first step, the user has to upload the text file containing the word list that serves as the input to the analysis process. Text files have to be encoded in UTF-8 and list only one word per line. For a meaningful analysis the words should be given in some phonemic transcription (e.g., using IPA).2 After the file has been uploaded to the server all symbols in the word list are analyzed according to their unigram and bigram frequencies. The</context>
<context position="13973" citStr="Bostock et al., 2011" startWordPosition="2249" endWordPosition="2252">02 -0.40711 -0.46423 0.32671 -0.33210 -0.07607 -0.28459 0.58548 Table 1: 0 values of VCV sequences in Turkish. symbols based on the similarity of their row values. The clustering is performed with the Python scipy.cluster.hierarchy package from the SciPy library. As a default setting Ward’s algorithm (Ward, 1963) is used but other clustering algorithms can also be easily integrated. Whereas the preprocessing steps and the datadriven sorting of rows and columns have been written in Python, the actual visualization of the results in the browser is implemented in Javascript using the D3 library (Bostock et al., 2011). The association measures and the order of the symbols are referenced as Javascript variables in the visualization document. The data is then automatically bound to DOM elements of the HTML document through the D3 data operator. The mapping from association measures to color values is made with the linear scale method from the d3.scale package. Scale methods map from an input domain to an output range. The input domain for the 0 values is the interval [−1; 1], while the output range can be given as a color scale ranging from one color to the other. For the 0 values we decided to use two unipo</context>
</contexts>
<marker>Bostock, Ogievetsky, Heer, 2011</marker>
<rawString>Michael Bostock, Vadim Ogievetsky, and Jeffrey Heer. 2011. D3: Data-driven documents. IEEE Transactions on Visualization &amp; Computer Graphics (Proc. InfoVis), 17(12):2301–2309.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth W Church</author>
<author>William A Gale</author>
</authors>
<title>Concordances for parallel text.</title>
<date>1991</date>
<booktitle>In Proceedings of the Seventh Annual Conference of the UW Centre for the New OED and Text Research,</booktitle>
<pages>40--62</pages>
<contexts>
<context position="12821" citStr="Church and Gale, 1991" startWordPosition="2077" endWordPosition="2080"> in the relevant context. Two additional steps have to be performed in order to arrive at the final matrix visualization: 1) the rows and columns of the matrix have to be sorted in a meaningful way; 2) the association measures have to be mapped to visual variables. For the matrix arrangement, we decided to have the same order of symbols for the rows and columns. The order of symbols is determined by a clustering of the 4Turkish orthography represents the modern pronunciation with a high degree of accuracy. 5Apart from this, φ makes good use of the off-diagonal cells in the contingency tables (Church and Gale, 1991). 75 a e i o u o¨ u¨ ı a 0.53699 -0.49730 -0.54579 -0.30421 -0.38117 -0.03895 -0.36874 0.65791 e -0.48371 0.54763 0.64548 -0.28216 -0.37907 -0.05792 -0.32882 -0.53454 i -0.40334 0.37477 0.59682 0.30227 -0.33970 0.09038 -0.30307 -0.49651 o 0.20048 -0.28306 -0.31395 -0.14114 0.65493 -0.05532 -0.20696 -0.33238 u 0.28855 -0.34937 -0.38283 0.17629 0.73451 0.10011 -0.22066 -0.39304 o¨ -0.28879 0.32352 -0.29843 -0.16465 -0.21329 -0.04885 0.65373 -0.29354 u¨ -0.31709 0.33094 -0.34774 0.14995 -0.24351 -0.05829 0.75780 -0.35024 ı 0.30302 -0.40711 -0.46423 0.32671 -0.33210 -0.07607 -0.28459 0.58548 Table</context>
</contexts>
<marker>Church, Gale, 1991</marker>
<rawString>Kenneth W. Church and William A. Gale. 1991. Concordances for parallel text. In Proceedings of the Seventh Annual Conference of the UW Centre for the New OED and Text Research, pages 40–62.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Goldsmith</author>
<author>Aris Xanthos</author>
</authors>
<title>Learning phonological categories.</title>
<date>2009</date>
<journal>Language,</journal>
<volume>85</volume>
<issue>1</issue>
<contexts>
<context position="10571" citStr="Goldsmith and Xanthos, 2009" startWordPosition="1689" endWordPosition="1692">tin, 1962; Guy, 1991). The basic idea of Sukhotin’s algorithm is that vowels and consonants have the tendency not to occur in groups within words but to alternate. Based on the additional assumption that the most frequent symbol in the text is a vowel, the algorithm iteratively selects the symbol which occurs most frequently adjacent to a vowel and determines it to be a consonant. The algorithm stops if no more consonants can be selected because no co-occurrence counts with any remaining vowel are positive. Although the algorithm is quite old and very simple, it gives reasonably good results (Goldsmith and Xanthos, 2009; Guy, 1991; Sassoon, 1992). PhonMatrix makes use of Sukhotin’s algorithm as a preprocessing step to give a first guess of the class for each symbol, which the user can then modify if it turns out to be wrong. It mainly serves to speed up the classification step. 4.2 Co-occurrence statistics With the distinction of symbols into vowels and consonants at hand, the user can then select a relevant context for the co-occurrence counts. The relevant context can be chosen from a list of predefined options. Here we will illustrate the statistical analysis with the context of VCV sequences to investiga</context>
</contexts>
<marker>Goldsmith, Xanthos, 2009</marker>
<rawString>John Goldsmith and Aris Xanthos. 2009. Learning phonological categories. Language, 85(1)(1):4–38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joseph H Greenberg</author>
</authors>
<title>The patterning of root morphemes</title>
<date>1950</date>
<booktitle>in Semitic. Word,</booktitle>
<pages>6--161</pages>
<contexts>
<context position="2963" citStr="Greenberg, 1950" startWordPosition="455" endWordPosition="456">milar behavior with respect to consonants. Less common are cases of “synharmonism” (Trubetzkoy, 1967, p. 251) where both vowels and consonants form such groups and words usually only contain sounds from the same group (e.g., only front vowels and palatalized consonants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic consonantal roots (Greenberg, 1950). Recent studies have shown that this principle is not only active in Semitic languages, where it was already known by grammarians in the Middle Ages, but is a more widespread tendency among the languages of the world (Pozdniakov and Segerer, 2007; Mayer et al., 2010b). One of the reasons why statistical constraints like SPA are more difficult to detect is the fact that they exhibit many frequent counterexamples and are therefore less easily spotted as a general (albeit statistical) tendency. In our view, there are many more phonotactic constraints that wait to be discovered by linguists. With</context>
</contexts>
<marker>Greenberg, 1950</marker>
<rawString>Joseph H. Greenberg. 1950. The patterning of root morphemes in Semitic. Word, 6:161–182.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jacques B M Guy</author>
</authors>
<title>Vowel identification: an old (but good) algorithm.</title>
<date>1991</date>
<journal>Cryptologia,</journal>
<volume>15</volume>
<issue>3</issue>
<contexts>
<context position="9965" citStr="Guy, 1991" startWordPosition="1590" endWordPosition="1591"> reference to a distinction between vowels and consonants. Since a manual classification of all sounds in the input into vowels and consonants is a tedious task (especially with a larger number of symbols), the first component deals with an automatic inference of such a distinction. Many methods have been discussed in the literature on how to discriminate vowels from consonants on the basis of their distribution in texts. Many of them involve many lines of code and are computationally demanding. Yet there is a very simple and fast algorithm that yields reasonably good results (Sukhotin, 1962; Guy, 1991). The basic idea of Sukhotin’s algorithm is that vowels and consonants have the tendency not to occur in groups within words but to alternate. Based on the additional assumption that the most frequent symbol in the text is a vowel, the algorithm iteratively selects the symbol which occurs most frequently adjacent to a vowel and determines it to be a consonant. The algorithm stops if no more consonants can be selected because no co-occurrence counts with any remaining vowel are positive. Although the algorithm is quite old and very simple, it gives reasonably good results (Goldsmith and Xanthos</context>
</contexts>
<marker>Guy, 1991</marker>
<rawString>Jacques B. M. Guy. 1991. Vowel identification: an old (but good) algorithm. Cryptologia, 15(3):258–262, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gunnar ´Olafur Hansson</author>
</authors>
<date>2010</date>
<institution>Consonant Harmony. Berkeley: University of California Press.</institution>
<contexts>
<context position="2332" citStr="Hansson, 2010" startWordPosition="356" endWordPosition="357">, at-a-glance mode of analysis which can be used to generate hypotheses about the data by simply looking at the visualization matrices. 1http://paralleltext.info/phonmatrix/ Phonotactic constraints in languages abound. One of the most well-known and wide-spread constraints is commonly referred to as vowel harmony (van der Hulst and van de Weijer, 1995). In vowel harmony languages, vowels are separated into groups where vowels of the same group tend to co-occur within words, while vowels from different groups rarely co-occur. Likewise, in some languages there are patterns of consonant harmony (Hansson, 2010) that show a similar behavior with respect to consonants. Less common are cases of “synharmonism” (Trubetzkoy, 1967, p. 251) where both vowels and consonants form such groups and words usually only contain sounds from the same group (e.g., only front vowels and palatalized consonants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic cons</context>
</contexts>
<marker>Hansson, 2010</marker>
<rawString>Gunnar ´Olafur Hansson. 2010. Consonant Harmony. Berkeley: University of California Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Harrison</author>
<author>Emily Thomforde</author>
<author>Michael O’Keefe</author>
</authors>
<title>The vowel harmony calculator.</title>
<date>2004</date>
<note>http://www.swarthmore.edu/ SocSci/harmony/public_html/.</note>
<marker>Harrison, Thomforde, O’Keefe, 2004</marker>
<rawString>David Harrison, Emily Thomforde, and Michael O’Keefe. 2004. The vowel harmony calculator. http://www.swarthmore.edu/ SocSci/harmony/public_html/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher D Manning</author>
<author>Hinrich Sch¨utze</author>
</authors>
<date>1999</date>
<institution>Foundations of Natural Language Processing. Massachusetts Institute of Technology.</institution>
<marker>Manning, Sch¨utze, 1999</marker>
<rawString>Christopher D. Manning and Hinrich Sch¨utze. 1999. Foundations of Natural Language Processing. Massachusetts Institute of Technology.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas Mayer</author>
<author>Christian Rohrdantz</author>
<author>Miriam Butt</author>
<author>Frans Plank</author>
<author>Daniel A Keim</author>
</authors>
<title>Visualizing vowel harmony.</title>
<date>2010</date>
<journal>Journal of Linguistic Issues in Language Technology (LiLT),</journal>
<volume>4</volume>
<issue>2</issue>
<contexts>
<context position="1319" citStr="Mayer et al., 2010" startWordPosition="192" endWordPosition="195">where rows and columns represent the relevant sounds under investigation and the matrix cells indicate whether the respective ordered pair of sounds occurs more or less frequently than expected. The usefulness of the tool is demonstrated with three case studies that deal with vowel harmony and similar place avoidance patterns. 1 Introduction In this paper, we introduce the PhonMatrix1 tool, which is designed to visualize co-occurrence constraints of sounds within words given a reasonably sized word list of the language. It is a web-based implementation of the visualization method proposed in (Mayer et al., 2010a), including some further development such as an interactive component and a range of association measures and sorting methods to choose from. The original motivation for this tool is to give linguists the opportunity to upload their own word lists in order to visually explore co-occurrence constraints in languages. The basic idea behind the visual component of the tool is to provide for a first, at-a-glance mode of analysis which can be used to generate hypotheses about the data by simply looking at the visualization matrices. 1http://paralleltext.info/phonmatrix/ Phonotactic constraints in </context>
<context position="3230" citStr="Mayer et al., 2010" startWordPosition="498" endWordPosition="501">ants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic consonantal roots (Greenberg, 1950). Recent studies have shown that this principle is not only active in Semitic languages, where it was already known by grammarians in the Middle Ages, but is a more widespread tendency among the languages of the world (Pozdniakov and Segerer, 2007; Mayer et al., 2010b). One of the reasons why statistical constraints like SPA are more difficult to detect is the fact that they exhibit many frequent counterexamples and are therefore less easily spotted as a general (albeit statistical) tendency. In our view, there are many more phonotactic constraints that wait to be discovered by linguists. With the availability of language data in electronic format such tendencies can be automatically processed and presented to the user in a form that allows for an easy exploration of the results in a short period of time. Thus a larger number of phonotactic contexts can b</context>
<context position="8573" citStr="Mayer et al., 2010" startWordPosition="1381" endWordPosition="1384">selected context (e.g., vowels in the context of VCV sequences). The rows thereby stand for the first members of the relevant sound pairs, whereas the columns contain the second members. Each cell of the matrix then shows the result for the pair of sounds in the respective row and column. The final result is a visualization of the cooccurrence matrix with rows and columns sorted according to the similarity of the sound vectors and statistical values represented as colors in the matrix cells. The visualization features a number 2For more information on the minimum amount of data necessary see (Mayer et al., 2010a). 3It is also possible for users to define their own contexts with regular expressions. 74 File upload Preprocessing, VC4distinction User selects context Co4occurrence Visualization statistics Figure 1: The processing pipeline of the PhonMatrix visualization tool. of interactive components that facilitate the detection of potential patterns in the results by the user. 4 PhonMatrix components PhonMatrix consists of three main components: preprocessing (including vowel-consonant distinction), statistical analysis of co-occurrence counts and visualization. In what follows, we will describe each</context>
</contexts>
<marker>Mayer, Rohrdantz, Butt, Plank, Keim, 2010</marker>
<rawString>Thomas Mayer, Christian Rohrdantz, Miriam Butt, Frans Plank, and Daniel A Keim. 2010a. Visualizing vowel harmony. Journal of Linguistic Issues in Language Technology (LiLT), 4(2):1–33.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thomas Mayer</author>
<author>Christian Rohrdantz</author>
<author>Frans Plank</author>
<author>Peter Bak</author>
<author>Miriam Butt</author>
<author>Daniel A Keim</author>
</authors>
<title>Consonant co-occurrence in stems across languages: Automatic analysis and visualization of a phonotactic constraint.</title>
<date>2010</date>
<booktitle>In Proceedings of the ACL 2010 Workshop on NLP and Linguistics: Finding the Common Ground,</booktitle>
<pages>67--75</pages>
<contexts>
<context position="1319" citStr="Mayer et al., 2010" startWordPosition="192" endWordPosition="195">where rows and columns represent the relevant sounds under investigation and the matrix cells indicate whether the respective ordered pair of sounds occurs more or less frequently than expected. The usefulness of the tool is demonstrated with three case studies that deal with vowel harmony and similar place avoidance patterns. 1 Introduction In this paper, we introduce the PhonMatrix1 tool, which is designed to visualize co-occurrence constraints of sounds within words given a reasonably sized word list of the language. It is a web-based implementation of the visualization method proposed in (Mayer et al., 2010a), including some further development such as an interactive component and a range of association measures and sorting methods to choose from. The original motivation for this tool is to give linguists the opportunity to upload their own word lists in order to visually explore co-occurrence constraints in languages. The basic idea behind the visual component of the tool is to provide for a first, at-a-glance mode of analysis which can be used to generate hypotheses about the data by simply looking at the visualization matrices. 1http://paralleltext.info/phonmatrix/ Phonotactic constraints in </context>
<context position="3230" citStr="Mayer et al., 2010" startWordPosition="498" endWordPosition="501">ants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic consonantal roots (Greenberg, 1950). Recent studies have shown that this principle is not only active in Semitic languages, where it was already known by grammarians in the Middle Ages, but is a more widespread tendency among the languages of the world (Pozdniakov and Segerer, 2007; Mayer et al., 2010b). One of the reasons why statistical constraints like SPA are more difficult to detect is the fact that they exhibit many frequent counterexamples and are therefore less easily spotted as a general (albeit statistical) tendency. In our view, there are many more phonotactic constraints that wait to be discovered by linguists. With the availability of language data in electronic format such tendencies can be automatically processed and presented to the user in a form that allows for an easy exploration of the results in a short period of time. Thus a larger number of phonotactic contexts can b</context>
<context position="8573" citStr="Mayer et al., 2010" startWordPosition="1381" endWordPosition="1384">selected context (e.g., vowels in the context of VCV sequences). The rows thereby stand for the first members of the relevant sound pairs, whereas the columns contain the second members. Each cell of the matrix then shows the result for the pair of sounds in the respective row and column. The final result is a visualization of the cooccurrence matrix with rows and columns sorted according to the similarity of the sound vectors and statistical values represented as colors in the matrix cells. The visualization features a number 2For more information on the minimum amount of data necessary see (Mayer et al., 2010a). 3It is also possible for users to define their own contexts with regular expressions. 74 File upload Preprocessing, VC4distinction User selects context Co4occurrence Visualization statistics Figure 1: The processing pipeline of the PhonMatrix visualization tool. of interactive components that facilitate the detection of potential patterns in the results by the user. 4 PhonMatrix components PhonMatrix consists of three main components: preprocessing (including vowel-consonant distinction), statistical analysis of co-occurrence counts and visualization. In what follows, we will describe each</context>
</contexts>
<marker>Mayer, Rohrdantz, Plank, Bak, Butt, Keim, 2010</marker>
<rawString>Thomas Mayer, Christian Rohrdantz, Frans Plank, Peter Bak, Miriam Butt, and Daniel A. Keim. 2010b. Consonant co-occurrence in stems across languages: Automatic analysis and visualization of a phonotactic constraint. In Proceedings of the ACL 2010 Workshop on NLP and Linguistics: Finding the Common Ground, pages 67–75.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Konstantin Pozdniakov</author>
<author>Guillaume Segerer</author>
</authors>
<title>Similar Place Avoidance: A statistical universal.</title>
<date>2007</date>
<journal>Linguistic Typology,</journal>
<volume>11</volume>
<issue>2</issue>
<contexts>
<context position="3210" citStr="Pozdniakov and Segerer, 2007" startWordPosition="494" endWordPosition="497"> vowels and palatalized consonants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic consonantal roots (Greenberg, 1950). Recent studies have shown that this principle is not only active in Semitic languages, where it was already known by grammarians in the Middle Ages, but is a more widespread tendency among the languages of the world (Pozdniakov and Segerer, 2007; Mayer et al., 2010b). One of the reasons why statistical constraints like SPA are more difficult to detect is the fact that they exhibit many frequent counterexamples and are therefore less easily spotted as a general (albeit statistical) tendency. In our view, there are many more phonotactic constraints that wait to be discovered by linguists. With the availability of language data in electronic format such tendencies can be automatically processed and presented to the user in a form that allows for an easy exploration of the results in a short period of time. Thus a larger number of phonot</context>
</contexts>
<marker>Pozdniakov, Segerer, 2007</marker>
<rawString>Konstantin Pozdniakov and Guillaume Segerer. 2007. Similar Place Avoidance: A statistical universal. Linguistic Typology, 11(2)(2):307–348.</rawString>
</citation>
<citation valid="false">
<volume>1</volume>
<marker></marker>
<rawString>te 1 1</rawString>
</citation>
<citation valid="true">
<authors>
<author>George T Sassoon</author>
</authors>
<title>The application of Sukhotin’s algorithm to certain Non-English languages.</title>
<date>1992</date>
<journal>Cryptologia,</journal>
<volume>16</volume>
<issue>2</issue>
<contexts>
<context position="10598" citStr="Sassoon, 1992" startWordPosition="1695" endWordPosition="1697"> Sukhotin’s algorithm is that vowels and consonants have the tendency not to occur in groups within words but to alternate. Based on the additional assumption that the most frequent symbol in the text is a vowel, the algorithm iteratively selects the symbol which occurs most frequently adjacent to a vowel and determines it to be a consonant. The algorithm stops if no more consonants can be selected because no co-occurrence counts with any remaining vowel are positive. Although the algorithm is quite old and very simple, it gives reasonably good results (Goldsmith and Xanthos, 2009; Guy, 1991; Sassoon, 1992). PhonMatrix makes use of Sukhotin’s algorithm as a preprocessing step to give a first guess of the class for each symbol, which the user can then modify if it turns out to be wrong. It mainly serves to speed up the classification step. 4.2 Co-occurrence statistics With the distinction of symbols into vowels and consonants at hand, the user can then select a relevant context for the co-occurrence counts. The relevant context can be chosen from a list of predefined options. Here we will illustrate the statistical analysis with the context of VCV sequences to investigate vowel harmony in Turkish</context>
</contexts>
<marker>Sassoon, 1992</marker>
<rawString>George T. Sassoon. 1992. The application of Sukhotin’s algorithm to certain Non-English languages. Cryptologia, 16(2)(2):165–173.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Spagnol</author>
</authors>
<title>A tale of two morphologies. Verb structure and argument alternations in Maltese.</title>
<date>2011</date>
<tech>Ph.D. thesis,</tech>
<institution>Germany: University of Konstanz dissertation.</institution>
<contexts>
<context position="19847" citStr="Spagnol, 2011" startWordPosition="3376" endWordPosition="3377">separates the back vowels (first three vowels o, a, u) from the front vowels (vowels four to six, ¨o, y, ¨a) and the neutral vowels (e, i). The blocks along the main diagonal of the matrix show the harmonic pattern among the harmony groups, whereas the neutral vowels do not display any regular behavior. 5.3 Maltese verbal roots PhonMatrix is not only useful to find vowel harmony patterns. The third case study shows that other co-occurrence constraints such as SPA can also be detected. To illustrate this, we show the visualization of CC patterns in a comprehensive list of Maltese verbal roots (Spagnol, 2011). The consonant matrix in Figure 4 shows two clusters, with one cluster (the first twelve consonants in the top row) containing labial and dorsal and the other cluster (the last eleven consonants) comprising only coronal consonants.8 The visualization also reveals that, unlike in vowel harmony, consonants from the same cluster do not occur next to each other in the CC sequences, as shown by the red blocks in the top left and bottom right. This is exactly what SPA would predict. 7The +/− signs in the matrix are taken from the φ values. 8The consonants are given in their orthographic representat</context>
</contexts>
<marker>Spagnol, 2011</marker>
<rawString>Michael Spagnol. 2011. A tale of two morphologies. Verb structure and argument alternations in Maltese. Ph.D. thesis, Germany: University of Konstanz dissertation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Boris V Sukhotin</author>
</authors>
<title>Eksperimental’noe vydelenie klassov bukv s pomos¸c¸ju evm. Problemy strukturnoj lingvistiki,</title>
<date>1962</date>
<pages>234--189</pages>
<contexts>
<context position="6829" citStr="Sukhotin, 1962" startWordPosition="1091" endWordPosition="1092">y one word per line. For a meaningful analysis the words should be given in some phonemic transcription (e.g., using IPA).2 After the file has been uploaded to the server all symbols in the word list are analyzed according to their unigram and bigram frequencies. These frequencies are used to infer an automatic distinction between vowels, consonants and infrequent symbols. Infrequent symbols are considered to be noise in the data and can be ignored for further processing. A distinction between vowels and consonants is automatically inferred from the word list by means of Sukhotin’s algorithm (Sukhotin, 1962). The results of Sukhotin’s algorithm are presented to the user together with the frequency counts of the individual symbols in the word list. In the third step, the user can make changes to the automatic classification of symbols into vowels and consonants and exclude infrequent symbols from further consideration. The subsequent calculations of co-occurrence values are mostly based on the distinction of input symbols into consonants (C) and vowels (V). Users can choose among a number of options that define the context for the co-occurrence calculations.3 Two of those options will be discussed</context>
<context position="9953" citStr="Sukhotin, 1962" startWordPosition="1588" endWordPosition="1589">of interest make reference to a distinction between vowels and consonants. Since a manual classification of all sounds in the input into vowels and consonants is a tedious task (especially with a larger number of symbols), the first component deals with an automatic inference of such a distinction. Many methods have been discussed in the literature on how to discriminate vowels from consonants on the basis of their distribution in texts. Many of them involve many lines of code and are computationally demanding. Yet there is a very simple and fast algorithm that yields reasonably good results (Sukhotin, 1962; Guy, 1991). The basic idea of Sukhotin’s algorithm is that vowels and consonants have the tendency not to occur in groups within words but to alternate. Based on the additional assumption that the most frequent symbol in the text is a vowel, the algorithm iteratively selects the symbol which occurs most frequently adjacent to a vowel and determines it to be a consonant. The algorithm stops if no more consonants can be selected because no co-occurrence counts with any remaining vowel are positive. Although the algorithm is quite old and very simple, it gives reasonably good results (Goldsmith</context>
</contexts>
<marker>Sukhotin, 1962</marker>
<rawString>Boris V. Sukhotin. 1962. Eksperimental’noe vydelenie klassov bukv s pomos¸c¸ju evm. Problemy strukturnoj lingvistiki, 234:189–206.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James J Thomas</author>
<author>Kristin A Cook</author>
</authors>
<title>Illuminating the Path: The Research and Development Agenda for Visual Analytics. National Visualization and Analytics Ctr.</title>
<date>2005</date>
<contexts>
<context position="4221" citStr="Thomas and Cook, 2005" startWordPosition="660" endWordPosition="663">n electronic format such tendencies can be automatically processed and presented to the user in a form that allows for an easy exploration of the results in a short period of time. Thus a larger number of phonotactic contexts can be explored in order to 73 Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 73–78, Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics find potential patterns in the data. The PhonMatrix tool is part of an ongoing effort to integrate methods and techniques from the field of visual analytics (Thomas and Cook, 2005) into linguistic research. The present tool will be gradually augmented with further functionalities in order to enhance its usefulness. 2 Related work A related tool that quantifies the co-occurrence of sounds in a given corpus is the Vowel Harmony Calculator (Harrison et al., 2004). The major difference between PhonMatrix and the Vowel Harmony Calculator is that the latter is restricted to the context of vowel harmony and requires the user to input the harmony classes beforehand whereas PhonMatrix is designed to detect these classes by making potential harmonic patterns more easily perceptib</context>
</contexts>
<marker>Thomas, Cook, 2005</marker>
<rawString>James J. Thomas and Kristin A. Cook. 2005. Illuminating the Path: The Research and Development Agenda for Visual Analytics. National Visualization and Analytics Ctr.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N S Trubetzkoy</author>
</authors>
<date>1967</date>
<booktitle>Grundz¨uge der Phonologie. G¨ottingen: Vandenhoeck &amp; Ruprecht. 4. Auflage.</booktitle>
<contexts>
<context position="2447" citStr="Trubetzkoy, 1967" startWordPosition="374" endWordPosition="375">isualization matrices. 1http://paralleltext.info/phonmatrix/ Phonotactic constraints in languages abound. One of the most well-known and wide-spread constraints is commonly referred to as vowel harmony (van der Hulst and van de Weijer, 1995). In vowel harmony languages, vowels are separated into groups where vowels of the same group tend to co-occur within words, while vowels from different groups rarely co-occur. Likewise, in some languages there are patterns of consonant harmony (Hansson, 2010) that show a similar behavior with respect to consonants. Less common are cases of “synharmonism” (Trubetzkoy, 1967, p. 251) where both vowels and consonants form such groups and words usually only contain sounds from the same group (e.g., only front vowels and palatalized consonants). Whereas vowel harmony patterns are easily detectable in many harmonic languages due to the harmonic alternants in affixes, other co-occurrence constraints are less obvious. This is especially true for disharmonic patterns, the most famous of which is the principle of Similar Place Avoidance (SPA) in Semitic consonantal roots (Greenberg, 1950). Recent studies have shown that this principle is not only active in Semitic langua</context>
</contexts>
<marker>Trubetzkoy, 1967</marker>
<rawString>N. S. Trubetzkoy. 1967. Grundz¨uge der Phonologie. G¨ottingen: Vandenhoeck &amp; Ruprecht. 4. Auflage.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Harry van der Hulst</author>
<author>Jeroen van de Weijer</author>
</authors>
<title>Vowel harmony. In</title>
<date>1995</date>
<booktitle>The Handbook of Phonological Theory, chapter 14,</booktitle>
<pages>495--534</pages>
<editor>John Goldsmith, editor,</editor>
<publisher>Basil Blackwell Ltd.</publisher>
<marker>van der Hulst, van de Weijer, 1995</marker>
<rawString>Harry van der Hulst and Jeroen van de Weijer. 1995. Vowel harmony. In John Goldsmith, editor, The Handbook of Phonological Theory, chapter 14, pages 495–534. Basil Blackwell Ltd.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ward</author>
</authors>
<title>Hierarchical grouping to optimize an objective function.</title>
<date>1963</date>
<journal>Journal of the American Statistical Association,</journal>
<volume>58</volume>
<issue>1</issue>
<contexts>
<context position="13666" citStr="Ward, 1963" startWordPosition="2201" endWordPosition="2202">51 o 0.20048 -0.28306 -0.31395 -0.14114 0.65493 -0.05532 -0.20696 -0.33238 u 0.28855 -0.34937 -0.38283 0.17629 0.73451 0.10011 -0.22066 -0.39304 o¨ -0.28879 0.32352 -0.29843 -0.16465 -0.21329 -0.04885 0.65373 -0.29354 u¨ -0.31709 0.33094 -0.34774 0.14995 -0.24351 -0.05829 0.75780 -0.35024 ı 0.30302 -0.40711 -0.46423 0.32671 -0.33210 -0.07607 -0.28459 0.58548 Table 1: 0 values of VCV sequences in Turkish. symbols based on the similarity of their row values. The clustering is performed with the Python scipy.cluster.hierarchy package from the SciPy library. As a default setting Ward’s algorithm (Ward, 1963) is used but other clustering algorithms can also be easily integrated. Whereas the preprocessing steps and the datadriven sorting of rows and columns have been written in Python, the actual visualization of the results in the browser is implemented in Javascript using the D3 library (Bostock et al., 2011). The association measures and the order of the symbols are referenced as Javascript variables in the visualization document. The data is then automatically bound to DOM elements of the HTML document through the D3 data operator. The mapping from association measures to color values is made w</context>
</contexts>
<marker>Ward, 1963</marker>
<rawString>Joe H. Jr. Ward. 1963. Hierarchical grouping to optimize an objective function. Journal of the American Statistical Association, 58(1)(1):236–244.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>