<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001363">
<title confidence="0.998637">
An English to Turkish Machine Translation System
Using Structural Mapping
</title>
<author confidence="0.971437">
Cigdem Keyder Turhan
</author>
<affiliation confidence="0.830976333333333">
Dept. of Computer Engineering
Middle East Technical University
Ankara 06531, Turkey
</affiliation>
<email confidence="0.880132">
cigdemOceng.metu.edu.tr
</email>
<sectionHeader confidence="0.990797" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999985181818182">
This paper describes the design and imple-
mentation of an English-Turkish machine
translation (MT) system developed as a
part of the TU-Language project supported
by a NATO Science for Stability Project
grant. The system uses a structural trans-
fer approach in translating the domain of
IBM computer manuals. The general de-
sign of the translation system and a de-
tailed description of the transfer compo-
nent is presented in this paper.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999966368421053">
The TU-Language project sponsored by the NATO
Science for Stability Programme was started in 1994
to establish computational foundations for the natu-
ral language processing research on the Turkish lan-
guage with the collaboration of the Computer Engi-
neering Department of Middle East Technical Uni-
versity, the Computer Science Department of Bilkent
University and Halici Computing, Inc. The project
attempts to perform extensive research on Turkish
which will eventually lead to the development of
an English to Turkish machine translation system,
Turkish language tutorial system, a Turkish dictio-
nary and other software tools to be used in further
research.
In this paper, some issues in translating from En-
glish to Turkish languages, the translation domain,
the outline of the machine translation system un-
der development, and a detailed description of the
transfer component will be presented.
</bodyText>
<sectionHeader confidence="0.983425" genericHeader="method">
2 Turkish Language
</sectionHeader>
<bodyText confidence="0.99987565">
Morphology and syntax of Turkish are very differ-
ent from English, therefore, the formalism used to
represent English texts has to be altered signifi-
cantly for Turkish text representation. The Turk-
ish language is characterized as a head final lan-
guage where the modifier/specifier always precedes
the modified/specified. This characteristic also af-
fects the word order of the sentences which can be
described as SOV where the verb is positioned at the
end.
Also, when compared to other languages, Turkish
relies more on overt case markings which mark the
role of the argument in a sentence. The case mark-
ings enables Turkish to have a relatively free word-
order property where every variation in the word
order in a sentence results in a different meaning.
In the MT system being developed, these and
other different characteristics of the Turkish lan-
guage are handled in the transfer and generation
components.
</bodyText>
<sectionHeader confidence="0.989406" genericHeader="method">
3 Translation Domain
</sectionHeader>
<bodyText confidence="0.999978714285714">
As more and more computer companies enter the
Turkish market, a growing demand for English
to Turkish translation of computer manuals has
emerged. Other machine translation systems have
also chosen the domain of computer manuals for
their translation systems because of the relatively
unambiguous and narrow sublanguage used (Tsut-
sumi, 1986). Also, in his research, Nasukawa (Na-
sukawa, 1993) concluded that the statistical anal-
ysis of the text in IBM computer manuals showed
that 92.6 percent of the words in a computer man-
ual are used in the same word sense which would
significantly reduce the problem of lexical ambiguity
resolution. Another advantage is that the material
in a computer manual is observed to be written as
clearly as possible in a relatively narrow area which
will hopefully ease the difficult job of understanding
and representing the input sentence.
As a result of these observations, the TU-
Language project team has chosen the IBM com-
puter manuals as their translation domain..
</bodyText>
<sectionHeader confidence="0.987444" genericHeader="method">
4 Machine Translation System
</sectionHeader>
<bodyText confidence="0.998938">
The English to Turkish MT system under develop-
ment uses a structural transfer approach which has
the following components. First, the English sen-
tence retrieved from the IBM manual is analyzed
</bodyText>
<page confidence="0.995077">
320
</page>
<bodyText confidence="0.999959090909091">
by the CLE parser (Alshawi and Moore. 1992) to
generate an intermediate representation. This rep-
resentation is mapped onto a recursively embedded
case frame which is then input to the transfer mod-
ule. The transfer module maps the input case frame
into the target case frame which is then filtered to
be transformed into the required input format of
the target language generator. Lastly, the gener-
ator maps the Turkish case frame into the Turkish
sentence which is then post-edited by a human trans-
lator to get an intelligible and accurate translation.
</bodyText>
<subsectionHeader confidence="0.999431">
4.1 Analysis Phase
</subsectionHeader>
<bodyText confidence="0.999985875">
For analyzing the English input, the Core Language
Engine developed by the SRI Cambridge Computer
Science Research Centre was used (Alshawi and
Moore, 1992). The CLE system has been trained
to meet the lexical, syntactic and semantic demands
of the IBM corpus. In CLE, explicit intermediate
levels of linguistic representation are used in the dif-
ferent phases of the analysis. Following the syntac-
tic and semantic analysis/synthesis which uses the
unification-based approach, the quasi logical form
(QLF) is developed. QLF can be described as a con-
textually sensitive logical form. Since the CLE sys-
tem produces various parses for an input sentence,
the best parse is filtered by the system which con-
veys the intended meaning of the sentence. Then the
chosen representation is mapped into a case frame.
</bodyText>
<subsectionHeader confidence="0.969473">
4.2 Transfer Phase
</subsectionHeader>
<bodyText confidence="0.835914337662337">
Experience with previous systems using the interlin-
gua technique showed the significant complexity of
extracting and representing deep meaning of a natu-
ral language text (Goodman and Nirenburg, 1991).
Another major difficulty encountered with this ap-
proach is that the language specific attributes nec-
essary to define the translation equivalents in the
lexical and structural levels are neutralized in the
interlingual representation thereby complicating the
task of generation considerably.
A similar problem occurred with systems using the
transfer approach with deep semantic analysis such
as the EUROTRA project (Johnson et al., 1985).
Such systems were observed to be difficult to develop
and maintain. To avoid these problems, the MT
systems developed recently generally chose to use
the straightforward transfer approach which relies
on various types of lexical, syntactic information and
a limited use of semantic analysis (Tsutsumi, 1986).
The system being developed as a. part of the TU-
Language project also chose the structural transfer
approach with a. minimal amount of semantic anal-
ysis. The transfer phase of our MT system per-
forms structural transfer between the respective case
frames of the analysed English sentence and target-
ted Turkish output. In a. top-down manner, the
transfer module transforms the English case frame
or adds new information to the Turkish case frame
in order to generate the equivalent Turkish noun
phrase, clause or sentence with the aid of a trans-
fer dictionary, and the transfer rules.
The English and Turkish case frames for
clauses/sentences are generally similar to each other
with differences seen in the sentence&apos;s mood and the
verb&apos;s aspect and modality. Some information not.
extracted in the analysis phase such as the sentence
form, clause type. role, etc. have to be determined
in the beginning of the transfer phase and added to
the Turkish case frame. An example sentence and
parts of the corresponding English and Turkish case
frames can be seen below:
(1) John must show the program works.
John goster+tns program+gen calis-Ftns
&apos;John programin calistigini gostermeli&apos;.
English Case Frame:
mood declarative
voice active
[1
root show
mod must
subj [nom John]
mood declarative
voice active
[I
root work
tense pres
[ [ ]
args subj nom program
Turkish Case Frame:
sform finite
ctype pred
mood necess
voice active
[root goster
tens pres
-
subj [John]
role
sform
ctype
mood
voice
obj
verb
args
The case frames represent ng the noun phrases of
the English and Turkish sentences vary from each
</bodyText>
<figure confidence="0.950756666666667">
verb
args
obj
verb
verb
args
fact
part
pred
decl
active
[root calis
tens pres
asp aor
[subj 1
[rogram
p]
_
</figure>
<page confidence="0.99376">
321
</page>
<bodyText confidence="0.99098925">
other in a number of ways because the generator
requires additional information to form an equiv-
alent Turkish representation. For example, in the
sentences below,
</bodyText>
<listItem confidence="0.9949395">
(2) That man writes programs.
0 adam yaz+pres program
&apos;0 adam program yazar.&apos;
(3) Programs were written for the project.
Program+pl yaz+pass+pst icin proje
&apos;Proje icin programlar yazildi.&apos;
</listItem>
<bodyText confidence="0.999819633333333">
Even though the word program is used in the plu-
ral form in both of the English sentences, the trans-
fer module needs to determine the specificity of the
noun phrase in question and send it to the generator
which will accordingly output either the singular or
plural form of the noun.
Some of the complex transfer issues presented by
Lindop and Tsujii (Lindop and Tsujii, 1991) also
arise in our machine translation system. These is-
sues are handled with special transfer rules and
transfer lexicon entries. In the beginning of the
transfer phase, the exception rules are tested and
eventually a checklist containing the problematic
components of the input is generated. Some ex-
amples of these components are verbs which change
meaning when used with different attributes, pas-
sive, existential or conditional sentences, relative
clauses, idiomatic use of prepositional phrases, etc.
As the transfer process continues, the checklist is
referenced in order to block the default translation
and handle the exceptions. The rest of the mapping
proceeds in a straightforward fashion until all of the
information in the source case frame is mapped onto
the target case frame.
Some of the complex transfer issues handled in the
transfer phase will be presented in this section.First,
a significant amount of head-switching is performed
to resolve the lexical and structural differences in
the English and Turkish languages. In the example
below,
</bodyText>
<listItem confidence="0.872102">
(4) attempted execution
tesebbus calistirma
&apos;calistirma tesebbusu : execution attempt&apos;
</listItem>
<bodyText confidence="0.991761411764706">
execution is the head noun of the English phrase
whereas tesebbus (attempt) becomes the head noun
in the target phrase.
Another problem encountered in the transfer mod-
ule is complex lexical transfer with category changes
such as the example given below:
(5) John gave a weak cough.
John oksur+pst hafifce
&apos;John hafifce oksurdu.:John coughed weakly.&apos;
The adjective weak has to be mapped onto an ad-
verb hafifce and the verb give&apos;s default translation
into the verb ver has to be blocked when it is used
with the dependent noun cough. Consequently, the
fitting target verb is found to be oksurmek.
Also, dependent on the verb, an object of an
English sentence may be mapped to different case
markings in Turkish.
</bodyText>
<listItem confidence="0.997159833333333">
(6) I hit the man.
vur+pst+pers adam+dat
&apos;Adama vurdum&apos;
(7) I shot the man.
vur+pst+pers adam+acc
&apos;Ada.mi vurdum&apos;
</listItem>
<bodyText confidence="0.997054428571428">
As seen above,the object of the sentence the man is
mapped either to an accusative marked object adami
or a dative marked indirect object adama in the tar-
get sentence.
There are also some complex structural changes
encountered during transfer. An English clause
might be mapped into a Turkish gerund:
</bodyText>
<listItem confidence="0.954990333333333">
(8) While he was working
+ken calis+tns
&apos;Calisirken&apos;
</listItem>
<bodyText confidence="0.9757656875">
Another example of a structural transformation
encountered can be seen in active/passive forms of
sentences. In the English passive form, the surface
subject can correspond to both the direct object or
the indirect object of the active form. Yet in Turk-
ish, the surface subject of a passive sentence can only
be the direct object of the active form. The differ-
ence between the two sentences is distinguished by
the order of the phrases in the target sentence as
seen in the example below:
(9) This program was given to the user.
Bu program ver+pas+pst kullanici+dat
&apos;Bu program kullaniciya verildi.&apos;
The user was given the program.
Kullanici+dat ver+pas+pst program
&apos;Kullaniciya program verildi&apos;
In both of the Turkish translations, the sur-
face subject is program whereas the surface subject
changes in the English inputs.
The order of the words in the output sentences are
determined by the topic and focus features of the tar-
get case frame which are mapped during the transfer
phase. In the first sentence, the topic is found to be
program. and the focus is kullanici, whereas in the
second sentence the topic and the focus are kullanici
and program, respectively.
The transfer module also attacks problems related
to sentential transformation such as the ones re-
quired in the example below:
There are programs in the disk.
var program+pl disk+loc
&apos;Diskte programlar var&apos;
</bodyText>
<page confidence="0.991873">
322
</page>
<table confidence="0.985856692307692">
are Parts of the case frames for the _ sentences
as follows: Frame: above
English Case decl
-mood active
voice root be
verb tens pres
args [1
adjs nom entity
_ subj
det there
[
arg2 [nom program]
place [nom disk]]
</table>
<figure confidence="0.630455818181818">
Turkish Case Frame:
-sform finite
ctype exist
mood decl
voice active
root to-be
verb tens pres
asp aor
{suargs bj [ program
[ ]
adjs place [disk]]
</figure>
<bodyText confidence="0.999531222222222">
Other problems encountered in the transfer phase
are the lexical gaps, idiomatic uses of phrases, and
lexical disambiguation by syntactic or semantic con-
tent.
With all the complex transfer issues resolved in
the transfer phase, the corresponding Turkish case
frame is generated which is then translated from its
Prolog notation into the Lisp notation required by
the generation module.
</bodyText>
<subsectionHeader confidence="0.978232">
4.3 Generation Module
</subsectionHeader>
<bodyText confidence="0.999882823529412">
The generation component of the system is based on
the GenKit environment developed at the Carnegie
Mellon University - Center for Machine Transla-
tion which provides facilities for a unification-based
generation grammar environment (Hakkani et al.,
1996).
As input, the generator receives a recursively em-
bedded target case frame representation where all
the lexical choices have been made, and produces
the Turkish sentence conveying the same meaning.
Since Turkish has complex agglutinative word
forms, a separate morphological generator handles
the proper morpheme selection, vowel harmony, etc.
to produce the surface form of the generated words.
The Turkish sentence output by the generator is
post-edited by a human translator to ensure accu-
racy and intelligibility of the target sentence.
</bodyText>
<sectionHeader confidence="0.99261" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999987764705882">
In this paper, an English to Turkish MT system us-
ing the structural transfer approach with a limited
amount of semantic analysis has been described.
The structural transfer method which uses the re-
cursively embedded case frames as intermediate rep-
resentation proved to be very suitable in the applica-
tion of English to Turkish machine translation. The
greatest difficulty encountered with this approach is
handling the complex transfer issues that arise due
to the differences between the two languages.
Hopefully, the introduction of the English to Turk-
ish MT software into the Turkish market will meet
the growing demands for accurate, fast and high-
quality translations in the field of computer manu-
als. Depending on the success of the system, the
lexicons and the transfer module might be modified
to tackle other translation domains in the future.
</bodyText>
<sectionHeader confidence="0.998847" genericHeader="acknowledgments">
6 Acknowledgements
</sectionHeader>
<bodyText confidence="0.96088875">
Helpful comments of Asst.Prof Cern Bozsahin and
Assoc.Prof.Mehmet R.Tolun are gratefully acknowl-
edged. This work has been supported by the NATO
Science for Stability Project TU-LANGUAGE.
</bodyText>
<sectionHeader confidence="0.987843" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.991102111111111">
Hiyan Alshawi and Robert C. Moore. 1992. In-
troduction to the CLE. In Hiyan Alshawi, editor,
The Core Language Engine. The MIT Press, Cam-
bridge, Massachusetts.
Kenneth Goodman and Sergei Nirenburg ed. 1991.
The KBMT Project: A Case Study in Knowledge-
Based Machine Translation. Morgan Kaufmann,
San Mateo, California.
Dilek Z. Hakkani, Kemal Mazer and ilyas Cicekli.
1996. Tactical Generation in a Free Constituent
Order Language. In Proceedings of 8th Inter-
national Workshop on Natural Language Gener-
ation, Sussex, UK, June.
Rod Johnson, Maghi King and Lois Tombe. 1985.
EUROTRA: A Multilingual System Under Devel-
opment. In Computational Linguistics, 11:155-
169.
Jeremy Lindop and Jun-ichi Tsujii. 1991. Com-
plex Transfer in MT: A Survey of Examples.
CCL/UMIST Report No:91/5.
Tetsuya Nasukawa. 1993. Discourse Constraint in
Computer Manuals. In Proceedings of the TMI
199.9, pages 183-193.
Taijiro Tsutsumi. 1986. A Prototype English-
Japanese Machine Translation System for Trans-
lating IBM Computer Manuals. In Proceedings of
Coling 1986, pages 646-648.
</reference>
<page confidence="0.999394">
323
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.919221">
<title confidence="0.998914">An English to Turkish Machine Translation System Using Structural Mapping</title>
<author confidence="0.988275">Cigdem Keyder Turhan</author>
<affiliation confidence="0.988855">Dept. of Computer Engineering Middle East Technical University</affiliation>
<address confidence="0.999553">Ankara 06531, Turkey</address>
<email confidence="0.991316">cigdemOceng.metu.edu.tr</email>
<abstract confidence="0.996185">This paper describes the design and implementation of an English-Turkish machine translation (MT) system developed as a part of the TU-Language project supported by a NATO Science for Stability Project grant. The system uses a structural transfer approach in translating the domain of manuals. The general design of the translation system and a detailed description of the transfer component is presented in this paper.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Hiyan Alshawi</author>
<author>Robert C Moore</author>
</authors>
<title>Introduction to the CLE.</title>
<date>1992</date>
<booktitle>The Core Language Engine. The</booktitle>
<editor>In Hiyan Alshawi, editor,</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, Massachusetts.</location>
<contexts>
<context position="4462" citStr="Alshawi and Moore, 1992" startWordPosition="702" endWordPosition="705">ion is mapped onto a recursively embedded case frame which is then input to the transfer module. The transfer module maps the input case frame into the target case frame which is then filtered to be transformed into the required input format of the target language generator. Lastly, the generator maps the Turkish case frame into the Turkish sentence which is then post-edited by a human translator to get an intelligible and accurate translation. 4.1 Analysis Phase For analyzing the English input, the Core Language Engine developed by the SRI Cambridge Computer Science Research Centre was used (Alshawi and Moore, 1992). The CLE system has been trained to meet the lexical, syntactic and semantic demands of the IBM corpus. In CLE, explicit intermediate levels of linguistic representation are used in the different phases of the analysis. Following the syntactic and semantic analysis/synthesis which uses the unification-based approach, the quasi logical form (QLF) is developed. QLF can be described as a contextually sensitive logical form. Since the CLE system produces various parses for an input sentence, the best parse is filtered by the system which conveys the intended meaning of the sentence. Then the chos</context>
</contexts>
<marker>Alshawi, Moore, 1992</marker>
<rawString>Hiyan Alshawi and Robert C. Moore. 1992. Introduction to the CLE. In Hiyan Alshawi, editor, The Core Language Engine. The MIT Press, Cambridge, Massachusetts.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth Goodman</author>
<author>Sergei Nirenburg ed</author>
</authors>
<date>1991</date>
<booktitle>The KBMT Project: A Case Study in KnowledgeBased Machine Translation.</booktitle>
<publisher>Morgan Kaufmann,</publisher>
<location>San Mateo, California.</location>
<marker>Goodman, ed, 1991</marker>
<rawString>Kenneth Goodman and Sergei Nirenburg ed. 1991. The KBMT Project: A Case Study in KnowledgeBased Machine Translation. Morgan Kaufmann, San Mateo, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dilek Z Hakkani</author>
</authors>
<title>Kemal Mazer and ilyas Cicekli.</title>
<date>1996</date>
<booktitle>In Proceedings of 8th International Workshop on Natural Language Generation,</booktitle>
<location>Sussex, UK,</location>
<marker>Hakkani, 1996</marker>
<rawString>Dilek Z. Hakkani, Kemal Mazer and ilyas Cicekli. 1996. Tactical Generation in a Free Constituent Order Language. In Proceedings of 8th International Workshop on Natural Language Generation, Sussex, UK, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rod Johnson</author>
<author>Maghi King</author>
<author>Lois Tombe</author>
</authors>
<title>EUROTRA: A Multilingual System Under Development.</title>
<date>1985</date>
<booktitle>In Computational Linguistics,</booktitle>
<pages>11--155</pages>
<contexts>
<context position="5766" citStr="Johnson et al., 1985" startWordPosition="902" endWordPosition="905">revious systems using the interlingua technique showed the significant complexity of extracting and representing deep meaning of a natural language text (Goodman and Nirenburg, 1991). Another major difficulty encountered with this approach is that the language specific attributes necessary to define the translation equivalents in the lexical and structural levels are neutralized in the interlingual representation thereby complicating the task of generation considerably. A similar problem occurred with systems using the transfer approach with deep semantic analysis such as the EUROTRA project (Johnson et al., 1985). Such systems were observed to be difficult to develop and maintain. To avoid these problems, the MT systems developed recently generally chose to use the straightforward transfer approach which relies on various types of lexical, syntactic information and a limited use of semantic analysis (Tsutsumi, 1986). The system being developed as a. part of the TULanguage project also chose the structural transfer approach with a. minimal amount of semantic analysis. The transfer phase of our MT system performs structural transfer between the respective case frames of the analysed English sentence and</context>
</contexts>
<marker>Johnson, King, Tombe, 1985</marker>
<rawString>Rod Johnson, Maghi King and Lois Tombe. 1985. EUROTRA: A Multilingual System Under Development. In Computational Linguistics, 11:155-169.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jeremy Lindop</author>
<author>Jun-ichi Tsujii</author>
</authors>
<title>Complex Transfer in MT: A Survey of Examples.</title>
<date>1991</date>
<tech>CCL/UMIST Report No:91/5.</tech>
<contexts>
<context position="8511" citStr="Lindop and Tsujii, 1991" startWordPosition="1356" endWordPosition="1359">urkish representation. For example, in the sentences below, (2) That man writes programs. 0 adam yaz+pres program &apos;0 adam program yazar.&apos; (3) Programs were written for the project. Program+pl yaz+pass+pst icin proje &apos;Proje icin programlar yazildi.&apos; Even though the word program is used in the plural form in both of the English sentences, the transfer module needs to determine the specificity of the noun phrase in question and send it to the generator which will accordingly output either the singular or plural form of the noun. Some of the complex transfer issues presented by Lindop and Tsujii (Lindop and Tsujii, 1991) also arise in our machine translation system. These issues are handled with special transfer rules and transfer lexicon entries. In the beginning of the transfer phase, the exception rules are tested and eventually a checklist containing the problematic components of the input is generated. Some examples of these components are verbs which change meaning when used with different attributes, passive, existential or conditional sentences, relative clauses, idiomatic use of prepositional phrases, etc. As the transfer process continues, the checklist is referenced in order to block the default tr</context>
</contexts>
<marker>Lindop, Tsujii, 1991</marker>
<rawString>Jeremy Lindop and Jun-ichi Tsujii. 1991. Complex Transfer in MT: A Survey of Examples. CCL/UMIST Report No:91/5.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tetsuya Nasukawa</author>
</authors>
<title>Discourse Constraint in Computer Manuals.</title>
<date>1993</date>
<booktitle>In Proceedings of the TMI</booktitle>
<pages>183--193</pages>
<contexts>
<context position="2898" citStr="Nasukawa, 1993" startWordPosition="446" endWordPosition="448">r in a sentence results in a different meaning. In the MT system being developed, these and other different characteristics of the Turkish language are handled in the transfer and generation components. 3 Translation Domain As more and more computer companies enter the Turkish market, a growing demand for English to Turkish translation of computer manuals has emerged. Other machine translation systems have also chosen the domain of computer manuals for their translation systems because of the relatively unambiguous and narrow sublanguage used (Tsutsumi, 1986). Also, in his research, Nasukawa (Nasukawa, 1993) concluded that the statistical analysis of the text in IBM computer manuals showed that 92.6 percent of the words in a computer manual are used in the same word sense which would significantly reduce the problem of lexical ambiguity resolution. Another advantage is that the material in a computer manual is observed to be written as clearly as possible in a relatively narrow area which will hopefully ease the difficult job of understanding and representing the input sentence. As a result of these observations, the TULanguage project team has chosen the IBM computer manuals as their translation</context>
</contexts>
<marker>Nasukawa, 1993</marker>
<rawString>Tetsuya Nasukawa. 1993. Discourse Constraint in Computer Manuals. In Proceedings of the TMI 199.9, pages 183-193.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taijiro Tsutsumi</author>
</authors>
<title>A Prototype EnglishJapanese Machine Translation System for Translating IBM Computer Manuals.</title>
<date>1986</date>
<booktitle>In Proceedings of Coling</booktitle>
<pages>646--648</pages>
<contexts>
<context position="2848" citStr="Tsutsumi, 1986" startWordPosition="438" endWordPosition="440">er property where every variation in the word order in a sentence results in a different meaning. In the MT system being developed, these and other different characteristics of the Turkish language are handled in the transfer and generation components. 3 Translation Domain As more and more computer companies enter the Turkish market, a growing demand for English to Turkish translation of computer manuals has emerged. Other machine translation systems have also chosen the domain of computer manuals for their translation systems because of the relatively unambiguous and narrow sublanguage used (Tsutsumi, 1986). Also, in his research, Nasukawa (Nasukawa, 1993) concluded that the statistical analysis of the text in IBM computer manuals showed that 92.6 percent of the words in a computer manual are used in the same word sense which would significantly reduce the problem of lexical ambiguity resolution. Another advantage is that the material in a computer manual is observed to be written as clearly as possible in a relatively narrow area which will hopefully ease the difficult job of understanding and representing the input sentence. As a result of these observations, the TULanguage project team has ch</context>
<context position="6075" citStr="Tsutsumi, 1986" startWordPosition="950" endWordPosition="951">n equivalents in the lexical and structural levels are neutralized in the interlingual representation thereby complicating the task of generation considerably. A similar problem occurred with systems using the transfer approach with deep semantic analysis such as the EUROTRA project (Johnson et al., 1985). Such systems were observed to be difficult to develop and maintain. To avoid these problems, the MT systems developed recently generally chose to use the straightforward transfer approach which relies on various types of lexical, syntactic information and a limited use of semantic analysis (Tsutsumi, 1986). The system being developed as a. part of the TULanguage project also chose the structural transfer approach with a. minimal amount of semantic analysis. The transfer phase of our MT system performs structural transfer between the respective case frames of the analysed English sentence and targetted Turkish output. In a. top-down manner, the transfer module transforms the English case frame or adds new information to the Turkish case frame in order to generate the equivalent Turkish noun phrase, clause or sentence with the aid of a transfer dictionary, and the transfer rules. The English and </context>
</contexts>
<marker>Tsutsumi, 1986</marker>
<rawString>Taijiro Tsutsumi. 1986. A Prototype EnglishJapanese Machine Translation System for Translating IBM Computer Manuals. In Proceedings of Coling 1986, pages 646-648.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>