<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000001">
<title confidence="0.9990825">
Parsing Aligned Parallel Corpus by Projecting Syntactic Relations from
Annotated Source Corpus
</title>
<author confidence="0.992982">
Shailly Goyal Niladri Chatterjee
</author>
<affiliation confidence="0.915545666666667">
Department of Mathematics
Indian Institute of Technology Delhi
Hauz Khas, New Delhi - 110 016, India
</affiliation>
<email confidence="0.978196">
{shailly goyal, niladri iitd}@yahoo.com
</email>
<sectionHeader confidence="0.997098" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999294375">
Example-based parsing has already been
proposed in literature. In particular, at-
tempts are being made to develop tech-
niques for language pairs where the source
and target languages are different, e.g.
Direct Projection Algorithm (Hwa et al.,
2005). This enables one to develop parsed
corpus for target languages having fewer
linguistic tools with the help of a resource-
rich source language. The DPA algo-
rithm works on the assumption of Di-
rect Correspondence which simply means
that the relation between two words of
the source language sentence can be pro-
jected directly between the correspond-
ing words of the parallel target language
sentence. However, we find that this as-
sumption does not hold good all the time.
This leads to wrong parsed structure of the
target language sentence. As a solution
we propose an algorithm called pseudo
DPA (pDPA) that can work even if Direct
Correspondence assumption is not guaran-
teed. The proposed algorithm works in a
recursive manner by considering the em-
bedded phrase structures from outermost
level to the innermost. The present work
discusses the pDPA algorithm, and illus-
trates it with respect to English-Hindi lan-
guage pair. Link Grammar based pars-
ing has been considered as the underlying
parsing scheme for this work.
</bodyText>
<sectionHeader confidence="0.999622" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99965145">
Example-based approaches for developing parsers
have already been proposed in literature. These
approaches either use examples from the same lan-
guage, e.g., (Bod et al., 2003; Streiter, 2002), or
they try to imitate the parse of a given sentence
using the parse of the corresponding sentence in
some other language (Hwa et al., 2005; Yarowsky
and Ngai, 2001). In particular, Hwa et al. (2005)
have proposed a scheme called direct projection
algorithm (DPA) which assumes that the relation
between two words in the source language sen-
tence is preserved across the corresponding words
in the parallel target language. This is called Di-
rect Correspondence Assumption (DCA).
However, with respect to Indian languages we
observed that the DCA does not hold good all the
time. In order to overcome the difficulty, in this
work, we propose an algorithm based on a vari-
ation of the DCA, which we call pseudo Direct
Correspondence Assumption (pDCA). Through
pDCA the syntactic knowledge can be transferred
even if not all syntactic relations may be projected
directly from the source language to the target lan-
guage in toto. Further, the proposed algorithm
projects the relations between phrases instead of
projecting relations between words. Keeping in
line with (Hwa et al., 2005), we call this algorithm
as pseudo Direct Projection Algorithm (pDPA).
The present work discusses the proposed pars-
ing scheme for a new (target) language with the
help of a parser that is already available for a
language (source) and using word-aligned paral-
lel corpus of the two languages under considera-
tion. We propose that the syntactic relationships
between the chunks of the input sentence T (of
the target language) are given depending upon the
relationships of the corresponding chunks in the
translation S of T. Along with the parsed struc-
ture of the input, the system also outputs the con-
stituent structure (phrases) of the given input sen-
</bodyText>
<page confidence="0.981725">
301
</page>
<note confidence="0.72915">
Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 301–308,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</note>
<bodyText confidence="0.995722625">
tence.
In this work, we first discuss the proposed
scheme in a general framework. We illustrate the
scheme with respect to parsing of Hindi sentences
using the Link Grammar (LG) based parser for En-
glish and the experimental results are discussed.
Before that in the following section we discuss
Link Grammar briefly.
</bodyText>
<sectionHeader confidence="0.633549" genericHeader="method">
2 Link Grammar and Phrases
</sectionHeader>
<bodyText confidence="0.998728384615385">
Link grammar (LG) is a theory of syntax which
builds simple relations between pairs of words,
rather than constructing constituents in tree-like
hierarchy. For example, in an SVO language like
English, the verb forms a subject link (S-) to some
word on its left, and an object link (O+) with some
word on its right. Nouns make the subject link
(S+) to some word (verb) on its right, or object
link (O-) to some word on its left.
The English Link Grammar Parser (Sleator and
Temperley, 1991) is a syntactic parser of English
based on LG. Given a sentence, the system as-
signs to it a syntactic structure, which consists of
a set of labeled links connecting pairs of words.
The parser also produces a “constituent” represen-
tation of a sentence (showing noun phrases, verb
phrases, etc.). It is a dictionary-based system in
which each word in the dictionary is associated
with a set of links. Most of the links have some
associated suffixes to provide various information
(e.g., gender (m/f), number (s/p)), describing
some properties of the underlying word. The En-
glish link parser lists total of 107 links. Table
1 gives a list of some important links of English
LG along with the information about the words on
their left/right and some suffixes.
</bodyText>
<subsectionHeader confidence="0.587996">
Link Word in Left Word in Right Suffixes
</subsectionHeader>
<table confidence="0.567788461538461">
A Premodifier Noun -
D Determiners Nouns s/m,c/u
J Preposition Object of the prepo- s/p
sition
M Noun Post-nominal Modi- p/v/g/a
fier
MV Verbs/adjectives Modifying phrase p/a/i/
l/x
O Transitive verb Direct or indirect ob- s/p
ject
P Forms of “be” Complement of “be” p/v/g/a
PP Forms of “have” Past participle -
S Subject Finite verb s/p, i, g
</table>
<tableCaption confidence="0.8785785">
Table 1: Some English Links and Their Suffixes
As an example, consider the syntactic struc-
</tableCaption>
<bodyText confidence="0.997511">
ture and constituent representation of the sentence
given below.
</bodyText>
<equation confidence="0.985074444444444">
+ Ss +
 |+----Jp---+ |
+--Ds-+-Mp-+ +-Dmc-+ +-Pa-+
        |
the teacher of the boys is good
(S (NP (NP The teacher)
(PP of (NP the boys)))
(VP is)
(ADJP good).)
</equation>
<bodyText confidence="0.998652852941176">
It may be noted that in the phrase structure of
the above sentence, verb phrase as obtained from
the phrase parser has been modified to some ex-
tent. The algorithm discussed in this work as-
sumes verb phrases as the main verb along with
all the auxiliary verbs.
For ease of presentation and understanding, we
classify phrase relations as Inter-Phrase and Intra-
phrase relations. Since the phrases are often em-
bedded, different levels of phrase relations are ob-
tained. From the outermost level to the innermost,
we call them as “first level”, “second level” of re-
lations and so on. One should note that an ith level
Intra-phrase relation may become Inter-phrase re-
lation at a higher level.
As an example, consider the parsing and phrase
structure of the English sentence given above.
In the first level the Inter-phrase relations (cor-
responding to the phrases “the teacher of
the boys”, “is” and “good”) are Ss and Pa
and the remaining links are Intra-phrase relations.
In the second level the only Inter-phrase rela-
tionship is Mp (connecting “the teacher” and
“the boys”), and the Intra-phrase relations are
Ds, Jp and Dmc. In third and the last level, Jp is
the Inter-phrase relationship and Dmc is the Intra-
phrase relation (corresponding to “of” and “the
boys”).
The algorithm proposed in Section 4 uses
pDCA to first establish the relations of the tar-
get language corresponding to the first-level Inter-
phrase relations of the source language sentence.
Then recursively it assigns the relations corre-
sponding to the inner level relations.
</bodyText>
<sectionHeader confidence="0.992846" genericHeader="method">
3 DCA vis-`a-vis pDCA
</sectionHeader>
<bodyText confidence="0.8672778">
Direct Correspondence Assumption (DCA) states
that the relation between words in source language
sentence can be projected as the relations between
corresponding words in the (literal) translation in
the target language. Direct Projection Algorithm
</bodyText>
<page confidence="0.993979">
302
</page>
<bodyText confidence="0.999882294117647">
(DPA), which is based on DCA, is a straightfor-
ward projection procedure in which the dependen-
cies in an English sentence are projected to the
sentence’s translation, using the word-level align-
ments as a bridge. DPA also uses some monolin-
gual knowledge specific to the projected-to lan-
guage. This knowledge is applied in the form of
Post-Projection transformation.
However with respect to many language pairs
syntactic relationships between the words cannot
always be imitated to project a parse structure
from source language to target language. For il-
lustration consider the sentence given in Figure 1.
We try to project the links from English to Hindi
in Figure 1(a) and Hindi to Bangla in Figure 1(b).
For Hindi sentence, links are given as discussed by
Goyal and Chatterjee (2005a; 2005b).
</bodyText>
<figure confidence="0.962615">
(b)
</figure>
<figureCaption confidence="0.99998">
Figure 1: Failure of DCA
</figureCaption>
<bodyText confidence="0.998828338461539">
We observe that in the parse structure of the tar-
get language sentences, neither all relations are
correct nor the parse tree is complete. Thus, we
observe that DPA leads to, if not wrong, a very
shallow parse structure. Further, Figure 1(b) sug-
gests that DCA fails not only for languages be-
longing to different families (English-Hindi), but
also for languages belonging to the same family
(Hindi-Bangla).
Hence it is necessary that the parsing algo-
rithm should be able to differentiate between the
links which can be projected directly and the
links which cannot. Further it needs to identify
the chunks of the target language sentence that
cannot be linked even after projecting the links
from the source language sentence. Thus we pro-
pose pseudo Direct Correspondence Assumption
(pDCA) where not all relations can be projected
directly. The projection algorithm needs to take
care of the following three categories of links:
Category 1: Relationship between two chunks
in the source language can be projected to the tar-
get language with minor or no changes (for ex-
ample, subject-verb, object-verb relationships in
the above illustration). It may be noted that since
except for some suffix differences (due to mor-
phological variations), the relation is same in the
source and the target language.
Category 2: Relationship between two chunks
in the source language can be projected to the
target language with major changes. For ex-
ample, in the English sentence given in Figure
2(a), the relationship between the girl and in
the white dress is Mp, i.e. “nominal mod-
ifier (preposition phrase)”. In the corresponding
phrases ladkii and safed kapde waalii of Hindi,
although the relationship is same, i.e., “nominal
modifier”, the type of nominal modifier is chang-
ing to waalaa/waale/waalii-adjective. If the dis-
tinction between the types of nominal modifiers is
not maintained, the parsing will be very shallow.
Hence the modification in the link is necessary.
Category 3: Relationship between two chunks
in the target language is either entirely different
or can not be captured from the relationship be-
tween the corresponding chunk(s) in the source
language. For example, the relationship between
the main verb and the auxiliary verb of the Hindi
sentence in Figure 2(a) can not be defined us-
ing the English parsing. Such phrases should be
parsed independently.
The proposed algorithm is based on the above-
described concept of pDCA which gives the parse
structure of the sentences given in Fig. 2.
While working with Indian languages, we found
that outermost Inter-phrase relations usually be-
long to Category 1, and remaining relations be-
long to Category 2. Generally an innermost Intra-
phrase relation (like verb phrase) belongs to Cate-
gory 3. Thus, outermost Inter-phrase relations can
usually be projected to target language directly, in-
nermost Intra-phrase relations for the target lan-
guage which are independent of the source lan-
guage should be decided on the basis of language
specific study and remaining relationship should
</bodyText>
<figure confidence="0.834421333333333">
(a)
303
(b)
</figure>
<figureCaption confidence="0.999647">
Figure 2: Parsing Using pDCA
</figureCaption>
<bodyText confidence="0.999136">
be modified before projection from source to tar-
get language.
</bodyText>
<sectionHeader confidence="0.985609" genericHeader="method">
4 The Proposed Algorithm
</sectionHeader>
<bodyText confidence="0.998543181818182">
DPA (Hwa et al., 2005) discusses projection pro-
cedure for five different cases of word align-
ment of source-target language: one-to-one, one-
to-none, one-to-many, many-to-one and many-to-
many. As discussed earlier, DPA is not sufficient
for many cases. For example, in case of one-to-
many alignment, the proposed solution is to first
create a new empty word that is set as head of
all multiply aligned words in target language sen-
tence, and then the relation is projected accord-
ingly. But, in such cases, relations between these
multiply-aligned words can not be given, and thus
the resulting parsing becomes shallow. The pro-
posed algorithm (pDPA) overcomes these short-
comings as well.
The pDPA works in the following way. It re-
cursively identifies the phrases of the target lan-
guage sentence, and assigns the links between
the two phrases/words of the target language sen-
tence by using the links between the correspond-
ing phrases/words in the source language sen-
tence. It may be noted that link between phrases
means link between the head words of the corre-
sponding phrases. Assignment of links starts from
the outermost level phrases. Syntactic relations
between the constituents of the target language
phrase(s) for which the syntactic structure does
not correspond with the corresponding phrase(s)
in the target language are given independently. A
list of link rules is maintained which keeps the in-
formation about modification(s) required in a link
while projecting from the source language to the
target language. These rules are limited to closed
category words, to parts of speech projected from
source language, or to easily enumerated lexical
categories.
Figure 3 describes the algorithm. The algorithm
takes an input sentence (T) and the parsing and the
constituent structure of its parallel sentence (S).
Further S and T are assumed to be word-aligned.
Initially, S and T are passed to the module Project-
From(), which identifies the constituent phrases of
S and the relations between them. Then each set
of phrases and relations is passed to the module
ParseFrom(). ParseFrom() module takes as input
two source phrases/words, relation between them,
and corresponding target phrases. It projects the
corresponding relations in the target language sen-
tence T. ParseFromSpecial() module is required
if the relation between phrases of source language
can not be projected so directly to the target lan-
guage. Module Parse() assigns links between the
constituent words of the target language phrases
E Y. Notations used in the algorithm are as fol-
lows:
</bodyText>
<listItem confidence="0.99856215">
• By T0 — S0 we mean that T0 is aligned with
S0, T0 and S0 being some text in the target
and source language, respectively.
• Given a language, the head of a phrase is usu-
ally defined as the keyword of the phrase. For
example, for a verb phrase, the head word is
the main verb.
• Y is the exhaustive set of target language
phrases for which Intra-phrase relations are
independent of the corresponding source lan-
guage phrases.
• Rule list R is the list of source-target lan-
guage specific rules which specifies the mod-
ifications in the source language relations to
be projected appropriately in the target lan-
guage.
• Given the parse and constituent structure of a
text S, Ψij = (Si, Sj, L), where L is the re-
lation between the constituent phrases/words
Si and Sj of S. Ψ0ij = (Ti, Tj), Ti — Si and
</listItem>
<page confidence="0.809693">
Tj — Sj. Further, Φij = (Ψij, Ψ0ij).
</page>
<figure confidence="0.962037">
(a)
</figure>
<page confidence="0.945272">
304
</page>
<equation confidence="0.937267380952381">
ProjectFrom(S0, T0): // S0 is a source
// language sentence or phrase, T0 ∼ S0
{
IF T0 ∈ �&apos;
THEN Parse(T0);
ELSE
S0 = {S1, S2, ... , Sn}; // Sis are
//constituent phrases/words of S0
T0 = {T1, T2, ... , Tn} // Ti ∼ Si
Find all Ψij = hSi, Sj, Li from S0 and
corresponding Ψ0ij = {Ti, Tj} from T0;
Φij = hΨij, Ψ0iji
For all i, j, push (Y, Φij);
While !empty(Y)
Φ = pop(y );
IF L ∈� Y
THEN ParseFrom(Φ);
ELSE ParseFromSpecial(Φ);
}
Parse(T0): // T0 is a target language phrase
{
</equation>
<bodyText confidence="0.98707">
Assign links between constituent words of T0
using target language specific rules;
</bodyText>
<equation confidence="0.9020356">
}
ParseFrom(Φ): // Φ = hΨ, Ψ0i;
// Ψ = hS1, S2, Li; Ψ0 = hT1, T2i;
{
IF T1 =6 {�} &amp; T2 =6 {0} THEN
</equation>
<bodyText confidence="0.678267666666667">
Find head words t1 ∈ T1 and t2 ∈ T2;
Assign relation L0 between t1 and t2; // L0
//is target language link corresponding
</bodyText>
<equation confidence="0.926713555555556">
//to L identified using 9
IF T1 is a phrase and not already parsed
THEN ProjectFrom(S1, T1);
IF T2 is a phrase and not already parsed
THEN ProjectFrom(S2, T2);
}
ParseFromSpecial(Φ): // Φ = hΨ, Ψ0i;
// Ψ = hS1, S2, Li; Ψ0 = hT1, T2i;
{
</equation>
<bodyText confidence="0.8986808">
Use target language specific rules to identify if
the relation between T1 and T2 is given by L0;
IF true THEN ParseFrom(Φ);
ELSE
Assign required relations using rules;
</bodyText>
<equation confidence="0.8658796">
IF T1 is a phrase and not already parsed
THEN ProjectFrom(S1, T1);
IF T2 is a phrase and not already parsed
THEN ProjectFrom(S2, T2);
}
</equation>
<figureCaption confidence="0.984313">
Figure 3: pseudo Direct Projection Algorithm
</figureCaption>
<listItem confidence="0.9517258">
• Y is a stack of Φijs.
• Y is the set of source language relations
whose occurrence in parse of some S0 may
lead to different structure of T0, where T0 ∼
S0.
</listItem>
<bodyText confidence="0.999813">
In the following sections we discuss in detail the
scheme for parsing Hindi sentences using parse
structure of the corresponding English sentence.
Along with the parse structure of the input, the
phrase structure is also obtained.
</bodyText>
<sectionHeader confidence="0.9579" genericHeader="method">
5 Case study: English to Hindi
</sectionHeader>
<bodyText confidence="0.999833263157895">
Prior requirements for developing a parsing
scheme for the target language using the proposed
algorithm are: development of target language
links, word alignment technique, phrase identifi-
cation procedure, creation of rule set 9, morpho-
logical analysis, development of ParseFromSpe-
cial() module. In this section we discuss these de-
tails for adapting a parser for Hindi using English
LG based parser.
Hindi Links. Goyal and Chatterjee (2005a;
2005b) have developed links for Hindi Link Gram-
mar along with their suffixes. Some of the Hindi
links are briefly discussed in the Table 2. It may
be noted that due to the free word order of Hindi,
direction can not be specified for some links, i.e.,
for such links “Word in Left” and “Word in Right”
(second and third column of Table 2) shall be read
as “Word on one side” and “Word on the other
side”, respectively.
</bodyText>
<table confidence="0.955140428571429">
Link Word in Left Word in Right Directed
S Subject Main verb NO
SN ne Main verb NO
O Object Main verb NO
J noun/pronoun postposition YES
MV verb modifier Main verb NO
MA Adjective Noun YES
ME aa-e-ii form of Noun YES
verb
MW waalaa/waale/ Noun YES
waalii
PT taa-te-tii form of declension of YES
verb verb honaa
D Determiner Head noun YES
</table>
<tableCaption confidence="0.98705">
Table 2: Some Hindi Links
</tableCaption>
<figureCaption confidence="0.7587305">
Word Alignment. The algorithm requires that
the source and target language sentences are
word aligned. Some English-Hindi word align-
ment algorithms have already been developed, e.g.
</figureCaption>
<page confidence="0.997883">
305
</page>
<bodyText confidence="0.9992125">
(Aswani and Gaizauskas, 2005). However, for the
current implementation alignment has been done
manually with the help of an online English-Hindi
dictionary1.
</bodyText>
<subsectionHeader confidence="0.508037">
Identification of Phrases and Head Words.
</subsectionHeader>
<bodyText confidence="0.99875015">
Verb Phrases. Corresponding to any main verb
vi present in the Hindi sentence, a verb phrase is
formed by considering all the auxiliary verbs fol-
lowing it. A list of Hindi auxiliary verbs, along
with the linkage requirements has been main-
tained. This list is used to identify and link verb
phrases. Main verb of the verb phrase is consid-
ered to be the head word.
Noun and Postposition2 Phrases. English NP
is translated in Hindi as either NP or PP3. Also,
English PP can be translated as either NP or PP. If
the Hindi noun is followed by any postposition,
then that postposition is attached with the noun
to get a PP. In this case the postposition is con-
sidered as the head. Hindi NP corresponding to
some English NP is the maximal span of the words
(in Hindi sentence) aligned with the words in the
corresponding English NP. The Hindi noun whose
English translation is involved in establishing the
Inter-phrase link is the head word. Note that if the
last word (noun) in this Hindi NP is followed by
any postposition (resulting in some PP), then that
postposition is also included in the NP concerned.
In this case the postposition is the head of the NP.
The system maintains a list of Hindi postpositions
to identify Hindi PPs.
For example, consider the translation pair the
lady in the room had cooked the
food� kamre (room) mein (in) baiThii huii (-)
aurat (lady) ne (-) khaanaa (food) banaayaa
(cooked) thaa (-).
The phrase structure of the English sen-
tence is (NP1 (NP2 the lady) (PP1
in (NP3 the room))) (V P1 had
cooked) (NP4 the food).
Here, some of the Hindi phrases are as follows:
kamre mein and aurat ne are identified as Hindi
PP corresponding to English PP1 and NP2. The
words mein and ne are considered as their head
words, respectively. Since the maximal span of
</bodyText>
<footnote confidence="0.8747226">
1www.sanskrit.gde.to/hindi/dict/eng-hin-itrans.html
2In Hindi prepositions are used immediately after the
noun. Thus, we refer to them as “postposition”.
3PP for English is preposition phrase and for Hindi it
stands for postposition phrase.
</footnote>
<bodyText confidence="0.999225583333333">
translation of words of English NP1 is kamre mein
baiThii huii aurat which is followed by postposi-
tion ne, the Hindi phrase corresponding to NP1
is kamre mein baiThii huii aurat ne with ne as
the head word. As huii and thii, which follow
the verbs baiThii4 and banaayaa respectively, are
present in the auxiliary verb list, Hindi VPs are
obtained as baiThii huii and banaayaa thaa (cor-
responding to V P1).
Phrase Set Y. Hindi verb phrase and postposi-
tion phrases are linked independent of the corre-
sponding phrases in the English sentence. Thus,
</bodyText>
<equation confidence="0.607439">
Y = {V P, PP}.
</equation>
<bodyText confidence="0.998991375">
Rule List R. Below we enlist some of the rules
defined for parsing Hindi sentences using the En-
glish links (E-links) of the parallel English sen-
tences. Note that these rules are dependent on the
target language.
Corresponding to E-link S: If the Hindi subject is
followed by ne, then the subject makes a Jn link
with ne, and ne makes an SN link with the verb.
Corresponding to E-link O: If the Hindi object is
followed by ko, then the object makes a Jk link
with ko, and ko makes an Ox link with the verb.
Corresponding to E-links M, MX: English NPs
may have preposition phrase, present participle,
past participle or adjective as postnominal modi-
fiers which are translated as prenominal modifiers,
or as relative clause in Hindi. The structure of
postnominal modifier, however, may not be pre-
served in the Hindi sentence. If the sentence is not
complex, then the corresponding Hindi link may
be one of MA (adjective), MP (postposition phrase),
MT (present participle), ME (past participle), or MW
(waalaa/waale/waalii-adjective). An appropriate
link is to be assigned in Hindi sentence after iden-
tification of the structure of the nominal modifier.
These cases are handled in the module ParseFrom-
Special(). The segment of the module that handles
English Mp link is given in Figure 4.
Further, since morphological information of
Hindi words can not be always extracted using cor-
responding English sentence, a morphological an-
alyzer is required to extract the information5. For
the current implementation, morphological infor-
</bodyText>
<footnote confidence="0.999908">
4We observe that English PP as postnominal modifier may
be translated as verbal prenominal modifier in Hindi and in
such cases some unaligned word is effectively a verb.
5For Hindi, some work is being carried out in this direc-
tion, e.g., http://ccat.sas.upenn.edu/plc/ tamilweb/hindi.html
</footnote>
<page confidence="0.995651">
306
</page>
<figure confidence="0.939772333333333">
ParseFromSpecial(Φ): // Φ = (Ψ, Ψ&apos;);
// Ψ = (S1, S2, L); Ψ&apos; = (T1, T2);
{
IF L = Mp THEN //S1 and S2 are NP and PP, resp.
IF T2 is followed by some verb, v, not aligned with
any word in S THEN
T3 = VP corresponding to v;
Parse(T3);
Find headword t1 E T1;
Assign MT/ME link between v and t1;
Assign MVp link between postposition (in T2)
and v;
ProjectFrom(S1, T1); ProjectFrom(S2, T2);
ELSE
ParseFrom(Φ);
ELSE
Check for other cases of L;
}
</figure>
<figureCaption confidence="0.999869">
Figure 4: ParseFromSpecial() for ‘Mp’ Link
</figureCaption>
<bodyText confidence="0.98478">
mation is being extracted using some rules in sim-
pler cases, and manually for more complex cases.
</bodyText>
<subsectionHeader confidence="0.994885">
5.1 Illustration with an Example
</subsectionHeader>
<bodyText confidence="0.998672">
Consider the English sentence (S) the girl
in the room drew a picture, its parsed
and constituent structure as given in Figure 5. Fur-
ther, the corresponding Hindi sentence (T), and
the word-alignment is also given.
</bodyText>
<figureCaption confidence="0.995646">
Figure 5: An Example
</figureCaption>
<bodyText confidence="0.967392076923077">
The step-by-step parsing of the sentence as per
the pDPA is given below.
ProjectFrom(S, T):
S = {S1, S2, S31, where S1, S2, S3 are the
phrases the girl in the room, drew and
a picture, respectively. From the definition of
Hindi phrases, corresponding Ti’s are identified as
“kamre mein baithii laDkii ne”, “banaayaa” and
“ek chitr”. From the parse structure of S, Φ’s are
obtained as Φ12 = ((S1, S2, Ss), (T1, T2)) and
Φ23 = ((S2, S3, Os), (T2, T3)). These Φ’s are
pushed in the stack Y and further processing is
done one-by-one for each of them. We show the
further process for the Φ12.
Since Ss E� Y, ParseFrom(Φ12) is executed.
ParseFrom(Φ12):
The algorithm identifies t1 = ne, t2 = banaayaa.
The Hindi link corresponding to Ss will be SN.
The module ProjectFrom(S1, T1) is then called.
ProjectFrom(S1, T1):
S1 = {S11, S121, where S11 and S12 are the
girl and in the room, respectively. Corre-
sponding T11 and T12 are ladkii ne and kamre
mein. Thus, Φ = ((S11, S12, Mp), (T11, T12)).
Since L = Mp E Y, ParseFromSpecial(Φ) is
called.
ParseFromSpecial(Φ): (Refer to Figure 4)
Since T2 is followed by an unaligned verb
baithii, the algorithm finds T3 as baithii, and
t1 as ne. It assigns ME link between baithii
and ne. Further, MVp link is assigned between
mein and baithii. Then ProjectFrom(S11, T11) and
ProjectFrom(S12, T12) are called. Since both T11
and T12 E Y, J and Jn links are assigned be-
tween constituent words of T11 and T12, respec-
tively, using Hindi-specific rules.
Similarly, Φ23 is parsed.
The final parse and phrase structure of the sen-
tence are obtained as given in Figure 6.
</bodyText>
<figureCaption confidence="0.993489">
Figure 6: Parsing of Example Sentence
</figureCaption>
<sectionHeader confidence="0.998752" genericHeader="evaluation">
6 Experimental Results
</sectionHeader>
<bodyText confidence="0.999799076923077">
Currently the system can handle the following
types of phrases in different simple sentences.
Noun Phrase. There can be four basic elements
of an English NP6: determiner, pre-modifier, noun
(essential), post-modifier. The system can han-
dle any combination of the following: adjective,
noun, present participle or past participle as pre-
modifier, and adjective, present participle, past
participle or preposition phrase as post-modifier.
Note that some of these cases may be translated as
complex sentence in Hindi (e.g., (book on the
table — jo kitaab mej par rakhii hai). We are
working upon such cases.
</bodyText>
<footnote confidence="0.976372">
6Pronouns as NPs are simple.
</footnote>
<page confidence="0.996342">
307
</page>
<bodyText confidence="0.999289647058824">
Verb Phrase. The system can handle all the four
aspects (indefinite, continuous, perfect and perfect
continuous) for all three tenses. Other cases of
VPs (e.g., modals, passives, compound verbs) can
be handled easily by just identifying and putting
the corresponding auxiliary verbs and their link-
ing requirements in the auxiliary verb list.
Since the system is not fully automated yet, we
could not test our system on a large corpus. The
system has been tested on about 200 sentences
following the specific phrase structures mentioned
above. These sentences have been taken randomly
from translation books, stories books and adver-
tisement materials. These sentences were manu-
ally parsed and a total of 1347 links were obtained.
These links were compared with the system’s out-
put. Table 3 summarizes the findings.
</bodyText>
<table confidence="0.802514">
Correct Links : 1254
Links with wrong suffix : 47
Wrong links : 22
Links missing : 31
</table>
<tableCaption confidence="0.969938">
Table 3: Experimental Results
</tableCaption>
<bodyText confidence="0.811431">
After analyzing the results, we found that
</bodyText>
<listItem confidence="0.616990666666667">
• For some links, suffixes were wrong. This
was due to insufficiency of rules identifying
morphological information.
• Due to incompleteness of some cases of
ParseFromSpecial() module, some wrong
links were assigned. Also, some links which
should not have been projected, were pro-
jected in the Hindi sentence. We are working
towards exploring these cases in detail.
• Some links were found missing in the pars-
ing since corresponding sentence structures
are yet to be considered in the scheme.
</listItem>
<sectionHeader confidence="0.984448" genericHeader="conclusions">
7 Concluding Remarks
</sectionHeader>
<bodyText confidence="0.999987137931034">
The present work focuses on development of Ex-
ample based parsing scheme for a pair of lan-
guages in general, and for English to Hindi in par-
ticular.
Although the current work is motivated by
(Hwa et al., 2005), the algorithm proposed herein
provides a more generalized version of the projec-
tion algorithm by making use of some target lan-
guage specific rules while projecting links. This
provide more flexibility in the projection algo-
rithm. The flexibility comes from the fact that un-
like DPA the algorithm can project links from the
source language to the target language even if the
translations are not literal. Use of rules at the pro-
jection level gives more robust parsing and reduces
the need of post-editing. The proposed scheme
should work for other target languages also pro-
vided the relevant rules can be identified. Fur-
ther, since LG can be converted to Dependency
Grammar (DG) (Sleator and Temperley, 1991),
this work can be easily extended for languages for
which DG implementation is available.
At present, we have focused on developing
parsing scheme for simple sentences. Work has to
be done to parse complex sentences. Once a size-
able parsed corpus is generated, it can be used for
developing the parser for a target language using
bootstrapping. We are currently working on these
lines for developing a Hindi parser.
</bodyText>
<sectionHeader confidence="0.999277" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.997243967741935">
Niraj Aswani and Robert Gaizauskas. 2005. A hy-
brid approach to aligning sentences and words in
English-Hindi parallel corpora. In ACL 2005 Work-
shop on Building and Using Parallel Texts: Data-
driven machine translation and Beyond.
Rens Bod, Remko Scha, and Khalil Sima’an, editors.
2003. Data-Oriented Parsing. Stanford: CSLI Pub-
lications.
Shailly Goyal and Niladri Chatterjee. 2005a. Study of
Hindi noun phrase morphology for developing a link
grammar based parser. Language in India, 5.
Shailly Goyal and Niladri Chatterjee. 2005b. Towards
developing a link grammar based parser for Hindi.
In Proc. of Workshop on Morphology, Bombay.
Rebecca Hwa, Philip Resnik, Amy Weinberg, Clara
Cabezas, and Okan Kolak. 2005. Bootstrap-
ping parsers via syntactic projection across parallel
texts. Natural Language Engineering, 11(3):311–
325, September.
Daniel Sleator and Davy Temperley. 1991. Parsing
English with a link grammar. Computer Science
technical report CMU-CS-91-196, Carnegie Mellon
University, October.
Oliver Streiter. 2002. Abduction, induction and
memorizing in corpus-based parsing. In ESSLLI-
2002 Workshop on Machine Learning Approaches
in Computational Linguistics,, Trento, Italy.
David Yarowsky and Grace Ngai. 2001. Inducing mul-
tilingual POS taggers and NP bracketers via robust
projection across aligned corpora. In NAACL-2001,
pages 200–207.
</reference>
<page confidence="0.998549">
308
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.912714">
<title confidence="0.995355">Parsing Aligned Parallel Corpus by Projecting Syntactic Relations from Annotated Source Corpus</title>
<author confidence="0.999483">Shailly Goyal Niladri Chatterjee</author>
<affiliation confidence="0.9995575">Department of Mathematics Indian Institute of Technology Delhi</affiliation>
<address confidence="0.968067">Hauz Khas, New Delhi - 110 016, India</address>
<email confidence="0.974994">goyal,niladri</email>
<abstract confidence="0.999235393939394">Example-based parsing has already been proposed in literature. In particular, attempts are being made to develop techniques for language pairs where the source and target languages are different, e.g. Direct Projection Algorithm (Hwa et al., 2005). This enables one to develop parsed corpus for target languages having fewer linguistic tools with the help of a resourcerich source language. The DPA algoworks on the assumption of Di- Correspondence simply means that the relation between two words of the source language sentence can be projected directly between the corresponding words of the parallel target language sentence. However, we find that this assumption does not hold good all the time. This leads to wrong parsed structure of the target language sentence. As a solution we propose an algorithm called pseudo DPA (pDPA) that can work even if Direct Correspondence assumption is not guaranteed. The proposed algorithm works in a recursive manner by considering the embedded phrase structures from outermost level to the innermost. The present work discusses the pDPA algorithm, and illustrates it with respect to English-Hindi language pair. Link Grammar based parsing has been considered as the underlying parsing scheme for this work.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Niraj Aswani</author>
<author>Robert Gaizauskas</author>
</authors>
<title>A hybrid approach to aligning sentences and words in English-Hindi parallel corpora.</title>
<date>2005</date>
<booktitle>In ACL 2005 Workshop on Building and Using Parallel Texts: Datadriven machine translation and Beyond.</booktitle>
<contexts>
<context position="18335" citStr="Aswani and Gaizauskas, 2005" startWordPosition="3068" endWordPosition="3071">ide” and “Word on the other side”, respectively. Link Word in Left Word in Right Directed S Subject Main verb NO SN ne Main verb NO O Object Main verb NO J noun/pronoun postposition YES MV verb modifier Main verb NO MA Adjective Noun YES ME aa-e-ii form of Noun YES verb MW waalaa/waale/ Noun YES waalii PT taa-te-tii form of declension of YES verb verb honaa D Determiner Head noun YES Table 2: Some Hindi Links Word Alignment. The algorithm requires that the source and target language sentences are word aligned. Some English-Hindi word alignment algorithms have already been developed, e.g. 305 (Aswani and Gaizauskas, 2005). However, for the current implementation alignment has been done manually with the help of an online English-Hindi dictionary1. Identification of Phrases and Head Words. Verb Phrases. Corresponding to any main verb vi present in the Hindi sentence, a verb phrase is formed by considering all the auxiliary verbs following it. A list of Hindi auxiliary verbs, along with the linkage requirements has been maintained. This list is used to identify and link verb phrases. Main verb of the verb phrase is considered to be the head word. Noun and Postposition2 Phrases. English NP is translated in Hindi </context>
</contexts>
<marker>Aswani, Gaizauskas, 2005</marker>
<rawString>Niraj Aswani and Robert Gaizauskas. 2005. A hybrid approach to aligning sentences and words in English-Hindi parallel corpora. In ACL 2005 Workshop on Building and Using Parallel Texts: Datadriven machine translation and Beyond.</rawString>
</citation>
<citation valid="true">
<title>Data-Oriented Parsing.</title>
<date>2003</date>
<editor>Rens Bod, Remko Scha, and Khalil Sima’an, editors.</editor>
<publisher>CSLI Publications.</publisher>
<location>Stanford:</location>
<marker>2003</marker>
<rawString>Rens Bod, Remko Scha, and Khalil Sima’an, editors. 2003. Data-Oriented Parsing. Stanford: CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shailly Goyal</author>
<author>Niladri Chatterjee</author>
</authors>
<title>Study of Hindi noun phrase morphology for developing a link grammar based parser.</title>
<date>2005</date>
<journal>Language in India,</journal>
<volume>5</volume>
<contexts>
<context position="8514" citStr="Goyal and Chatterjee (2005" startWordPosition="1391" endWordPosition="1394">slation, using the word-level alignments as a bridge. DPA also uses some monolingual knowledge specific to the projected-to language. This knowledge is applied in the form of Post-Projection transformation. However with respect to many language pairs syntactic relationships between the words cannot always be imitated to project a parse structure from source language to target language. For illustration consider the sentence given in Figure 1. We try to project the links from English to Hindi in Figure 1(a) and Hindi to Bangla in Figure 1(b). For Hindi sentence, links are given as discussed by Goyal and Chatterjee (2005a; 2005b). (b) Figure 1: Failure of DCA We observe that in the parse structure of the target language sentences, neither all relations are correct nor the parse tree is complete. Thus, we observe that DPA leads to, if not wrong, a very shallow parse structure. Further, Figure 1(b) suggests that DCA fails not only for languages belonging to different families (English-Hindi), but also for languages belonging to the same family (Hindi-Bangla). Hence it is necessary that the parsing algorithm should be able to differentiate between the links which can be projected directly and the links which can</context>
<context position="17335" citStr="Goyal and Chatterjee (2005" startWordPosition="2889" endWordPosition="2892"> sentences using parse structure of the corresponding English sentence. Along with the parse structure of the input, the phrase structure is also obtained. 5 Case study: English to Hindi Prior requirements for developing a parsing scheme for the target language using the proposed algorithm are: development of target language links, word alignment technique, phrase identification procedure, creation of rule set 9, morphological analysis, development of ParseFromSpecial() module. In this section we discuss these details for adapting a parser for Hindi using English LG based parser. Hindi Links. Goyal and Chatterjee (2005a; 2005b) have developed links for Hindi Link Grammar along with their suffixes. Some of the Hindi links are briefly discussed in the Table 2. It may be noted that due to the free word order of Hindi, direction can not be specified for some links, i.e., for such links “Word in Left” and “Word in Right” (second and third column of Table 2) shall be read as “Word on one side” and “Word on the other side”, respectively. Link Word in Left Word in Right Directed S Subject Main verb NO SN ne Main verb NO O Object Main verb NO J noun/pronoun postposition YES MV verb modifier Main verb NO MA Adjective</context>
</contexts>
<marker>Goyal, Chatterjee, 2005</marker>
<rawString>Shailly Goyal and Niladri Chatterjee. 2005a. Study of Hindi noun phrase morphology for developing a link grammar based parser. Language in India, 5.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shailly Goyal</author>
<author>Niladri Chatterjee</author>
</authors>
<title>Towards developing a link grammar based parser for Hindi.</title>
<date>2005</date>
<booktitle>In Proc. of Workshop on Morphology,</booktitle>
<location>Bombay.</location>
<contexts>
<context position="8514" citStr="Goyal and Chatterjee (2005" startWordPosition="1391" endWordPosition="1394">slation, using the word-level alignments as a bridge. DPA also uses some monolingual knowledge specific to the projected-to language. This knowledge is applied in the form of Post-Projection transformation. However with respect to many language pairs syntactic relationships between the words cannot always be imitated to project a parse structure from source language to target language. For illustration consider the sentence given in Figure 1. We try to project the links from English to Hindi in Figure 1(a) and Hindi to Bangla in Figure 1(b). For Hindi sentence, links are given as discussed by Goyal and Chatterjee (2005a; 2005b). (b) Figure 1: Failure of DCA We observe that in the parse structure of the target language sentences, neither all relations are correct nor the parse tree is complete. Thus, we observe that DPA leads to, if not wrong, a very shallow parse structure. Further, Figure 1(b) suggests that DCA fails not only for languages belonging to different families (English-Hindi), but also for languages belonging to the same family (Hindi-Bangla). Hence it is necessary that the parsing algorithm should be able to differentiate between the links which can be projected directly and the links which can</context>
<context position="17335" citStr="Goyal and Chatterjee (2005" startWordPosition="2889" endWordPosition="2892"> sentences using parse structure of the corresponding English sentence. Along with the parse structure of the input, the phrase structure is also obtained. 5 Case study: English to Hindi Prior requirements for developing a parsing scheme for the target language using the proposed algorithm are: development of target language links, word alignment technique, phrase identification procedure, creation of rule set 9, morphological analysis, development of ParseFromSpecial() module. In this section we discuss these details for adapting a parser for Hindi using English LG based parser. Hindi Links. Goyal and Chatterjee (2005a; 2005b) have developed links for Hindi Link Grammar along with their suffixes. Some of the Hindi links are briefly discussed in the Table 2. It may be noted that due to the free word order of Hindi, direction can not be specified for some links, i.e., for such links “Word in Left” and “Word in Right” (second and third column of Table 2) shall be read as “Word on one side” and “Word on the other side”, respectively. Link Word in Left Word in Right Directed S Subject Main verb NO SN ne Main verb NO O Object Main verb NO J noun/pronoun postposition YES MV verb modifier Main verb NO MA Adjective</context>
</contexts>
<marker>Goyal, Chatterjee, 2005</marker>
<rawString>Shailly Goyal and Niladri Chatterjee. 2005b. Towards developing a link grammar based parser for Hindi. In Proc. of Workshop on Morphology, Bombay.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rebecca Hwa</author>
<author>Philip Resnik</author>
<author>Amy Weinberg</author>
<author>Clara Cabezas</author>
<author>Okan Kolak</author>
</authors>
<title>Bootstrapping parsers via syntactic projection across parallel texts.</title>
<date>2005</date>
<journal>Natural Language Engineering,</journal>
<volume>11</volume>
<issue>3</issue>
<pages>325</pages>
<contexts>
<context position="1890" citStr="Hwa et al., 2005" startWordPosition="295" endWordPosition="298">edded phrase structures from outermost level to the innermost. The present work discusses the pDPA algorithm, and illustrates it with respect to English-Hindi language pair. Link Grammar based parsing has been considered as the underlying parsing scheme for this work. 1 Introduction Example-based approaches for developing parsers have already been proposed in literature. These approaches either use examples from the same language, e.g., (Bod et al., 2003; Streiter, 2002), or they try to imitate the parse of a given sentence using the parse of the corresponding sentence in some other language (Hwa et al., 2005; Yarowsky and Ngai, 2001). In particular, Hwa et al. (2005) have proposed a scheme called direct projection algorithm (DPA) which assumes that the relation between two words in the source language sentence is preserved across the corresponding words in the parallel target language. This is called Direct Correspondence Assumption (DCA). However, with respect to Indian languages we observed that the DCA does not hold good all the time. In order to overcome the difficulty, in this work, we propose an algorithm based on a variation of the DCA, which we call pseudo Direct Correspondence Assumption</context>
<context position="11736" citStr="Hwa et al., 2005" startWordPosition="1912" endWordPosition="1915">-phrase relations usually belong to Category 1, and remaining relations belong to Category 2. Generally an innermost Intraphrase relation (like verb phrase) belongs to Category 3. Thus, outermost Inter-phrase relations can usually be projected to target language directly, innermost Intra-phrase relations for the target language which are independent of the source language should be decided on the basis of language specific study and remaining relationship should (a) 303 (b) Figure 2: Parsing Using pDCA be modified before projection from source to target language. 4 The Proposed Algorithm DPA (Hwa et al., 2005) discusses projection procedure for five different cases of word alignment of source-target language: one-to-one, oneto-none, one-to-many, many-to-one and many-tomany. As discussed earlier, DPA is not sufficient for many cases. For example, in case of one-tomany alignment, the proposed solution is to first create a new empty word that is set as head of all multiply aligned words in target language sentence, and then the relation is projected accordingly. But, in such cases, relations between these multiply-aligned words can not be given, and thus the resulting parsing becomes shallow. The prop</context>
<context position="27741" citStr="Hwa et al., 2005" startWordPosition="4664" endWordPosition="4667">nformation. • Due to incompleteness of some cases of ParseFromSpecial() module, some wrong links were assigned. Also, some links which should not have been projected, were projected in the Hindi sentence. We are working towards exploring these cases in detail. • Some links were found missing in the parsing since corresponding sentence structures are yet to be considered in the scheme. 7 Concluding Remarks The present work focuses on development of Example based parsing scheme for a pair of languages in general, and for English to Hindi in particular. Although the current work is motivated by (Hwa et al., 2005), the algorithm proposed herein provides a more generalized version of the projection algorithm by making use of some target language specific rules while projecting links. This provide more flexibility in the projection algorithm. The flexibility comes from the fact that unlike DPA the algorithm can project links from the source language to the target language even if the translations are not literal. Use of rules at the projection level gives more robust parsing and reduces the need of post-editing. The proposed scheme should work for other target languages also provided the relevant rules c</context>
</contexts>
<marker>Hwa, Resnik, Weinberg, Cabezas, Kolak, 2005</marker>
<rawString>Rebecca Hwa, Philip Resnik, Amy Weinberg, Clara Cabezas, and Okan Kolak. 2005. Bootstrapping parsers via syntactic projection across parallel texts. Natural Language Engineering, 11(3):311– 325, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Sleator</author>
<author>Davy Temperley</author>
</authors>
<title>Parsing English with a link grammar.</title>
<date>1991</date>
<journal>Computer Science</journal>
<tech>technical report CMU-CS-91-196,</tech>
<institution>Carnegie Mellon University,</institution>
<contexts>
<context position="4469" citStr="Sleator and Temperley, 1991" startWordPosition="718" endWordPosition="721"> the experimental results are discussed. Before that in the following section we discuss Link Grammar briefly. 2 Link Grammar and Phrases Link grammar (LG) is a theory of syntax which builds simple relations between pairs of words, rather than constructing constituents in tree-like hierarchy. For example, in an SVO language like English, the verb forms a subject link (S-) to some word on its left, and an object link (O+) with some word on its right. Nouns make the subject link (S+) to some word (verb) on its right, or object link (O-) to some word on its left. The English Link Grammar Parser (Sleator and Temperley, 1991) is a syntactic parser of English based on LG. Given a sentence, the system assigns to it a syntactic structure, which consists of a set of labeled links connecting pairs of words. The parser also produces a “constituent” representation of a sentence (showing noun phrases, verb phrases, etc.). It is a dictionary-based system in which each word in the dictionary is associated with a set of links. Most of the links have some associated suffixes to provide various information (e.g., gender (m/f), number (s/p)), describing some properties of the underlying word. The English link parser lists total</context>
</contexts>
<marker>Sleator, Temperley, 1991</marker>
<rawString>Daniel Sleator and Davy Temperley. 1991. Parsing English with a link grammar. Computer Science technical report CMU-CS-91-196, Carnegie Mellon University, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Oliver Streiter</author>
</authors>
<title>Abduction, induction and memorizing in corpus-based parsing.</title>
<date>2002</date>
<booktitle>In ESSLLI2002 Workshop on Machine Learning Approaches in Computational Linguistics,,</booktitle>
<location>Trento, Italy.</location>
<contexts>
<context position="1749" citStr="Streiter, 2002" startWordPosition="271" endWordPosition="272">n work even if Direct Correspondence assumption is not guaranteed. The proposed algorithm works in a recursive manner by considering the embedded phrase structures from outermost level to the innermost. The present work discusses the pDPA algorithm, and illustrates it with respect to English-Hindi language pair. Link Grammar based parsing has been considered as the underlying parsing scheme for this work. 1 Introduction Example-based approaches for developing parsers have already been proposed in literature. These approaches either use examples from the same language, e.g., (Bod et al., 2003; Streiter, 2002), or they try to imitate the parse of a given sentence using the parse of the corresponding sentence in some other language (Hwa et al., 2005; Yarowsky and Ngai, 2001). In particular, Hwa et al. (2005) have proposed a scheme called direct projection algorithm (DPA) which assumes that the relation between two words in the source language sentence is preserved across the corresponding words in the parallel target language. This is called Direct Correspondence Assumption (DCA). However, with respect to Indian languages we observed that the DCA does not hold good all the time. In order to overcome</context>
</contexts>
<marker>Streiter, 2002</marker>
<rawString>Oliver Streiter. 2002. Abduction, induction and memorizing in corpus-based parsing. In ESSLLI2002 Workshop on Machine Learning Approaches in Computational Linguistics,, Trento, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Yarowsky</author>
<author>Grace Ngai</author>
</authors>
<title>Inducing multilingual POS taggers and NP bracketers via robust projection across aligned corpora. In</title>
<date>2001</date>
<booktitle>NAACL-2001,</booktitle>
<pages>200--207</pages>
<contexts>
<context position="1916" citStr="Yarowsky and Ngai, 2001" startWordPosition="299" endWordPosition="302">tures from outermost level to the innermost. The present work discusses the pDPA algorithm, and illustrates it with respect to English-Hindi language pair. Link Grammar based parsing has been considered as the underlying parsing scheme for this work. 1 Introduction Example-based approaches for developing parsers have already been proposed in literature. These approaches either use examples from the same language, e.g., (Bod et al., 2003; Streiter, 2002), or they try to imitate the parse of a given sentence using the parse of the corresponding sentence in some other language (Hwa et al., 2005; Yarowsky and Ngai, 2001). In particular, Hwa et al. (2005) have proposed a scheme called direct projection algorithm (DPA) which assumes that the relation between two words in the source language sentence is preserved across the corresponding words in the parallel target language. This is called Direct Correspondence Assumption (DCA). However, with respect to Indian languages we observed that the DCA does not hold good all the time. In order to overcome the difficulty, in this work, we propose an algorithm based on a variation of the DCA, which we call pseudo Direct Correspondence Assumption (pDCA). Through pDCA the </context>
</contexts>
<marker>Yarowsky, Ngai, 2001</marker>
<rawString>David Yarowsky and Grace Ngai. 2001. Inducing multilingual POS taggers and NP bracketers via robust projection across aligned corpora. In NAACL-2001, pages 200–207.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>