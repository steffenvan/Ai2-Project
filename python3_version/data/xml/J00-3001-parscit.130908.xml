<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.9991225">
Extracting the Lowest-Frequency Words:
Pitfalls and Possibilities
</title>
<author confidence="0.996443">
Marc Weeber* Rein Vost
</author>
<affiliation confidence="0.993393">
University of Groningen University of Groningen, University of
</affiliation>
<table confidence="0.401768666666667">
R. Harald Baayent Maastricht
Max Planck Institute for
Psycholinguistics
</table>
<bodyText confidence="0.999433785714286">
In a medical information extraction system, we use common word association techniques to
extract side-effect-related terms. Many of these terms have a frequency of less than five. Standard
word-association-based applications disregard the lowest-frequency words, and hence disregard
useful information. We therefore devised an extraction system for the full word frequency range.
This system computes the significance of association by the log-likelihood ratio and Fisher&apos;s exact
test. The output of the system shows a recurrent, corpus-independent pattern in both recall and
the number of significant words. We will explain these patterns by the statistical behavior of the
lowest-frequency words. We used Dutch verb-particle combinations as a second and independent
collocation extraction application to illustrate the generality of the observed phenomena. We will
conclude that a) word-association-based extraction systems can be enhanced by also considering
the lowest-frequency words, b) significance levels should not be fixed but adjusted for the optimal
window size, c) hapax legomena, words occurring only once, should be disregarded a priori in
the statistical analysis, and d) the distribution of the targets to extract should be considered in
combination with the extraction method.
</bodyText>
<sectionHeader confidence="0.992133" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999958636363636">
The research reported here arose from an attempt to determine the conditions under
which optimal recall and precision are obtained for the extraction of terms related to
side effects of drugs in medical abstracts. We used the standard technique of defining a
window around a seed term, side-effect in our case, and selected as potentially relevant
terms those words that appeared more often in these windows than expected under
chance conditions.
Our original question concerned the extent to which recall and precision are in-
fluenced by the size of the window. It turns out, however, that a preliminary question
needs to be answered first, namely, how to gauge the significance of the large effect of
the lowest-frequency words on recall, precision, and the number of words extracted
as potentially relevant terms.
</bodyText>
<affiliation confidence="0.748166333333333">
* Groningen University Institute for Drug Exploration, Department of Social Pharmacy and
Pharmacoepidemiology, Ant. Deusinglaan 1, 9713 AV Groningen, The Netherlands. E-mail:
marc@farm.rug.n1
Faculty of Health Sciences, Department of Health Ethics and Philosophy, P.O. Box 616, 6200 MD
Maastricht, The Netherlands. E-mail: rein.vos@zw.unimaas.n1
Max Planck Institute for Psycholinguistics, P.O. Box 310, 6500 AH Nijmegen. E-mail: baayen@mpi.n1
</affiliation>
<figure confidence="0.9094635">
C) 2000 Association for Computational Linguistics
Computational Linguistics Volume 26, Number 3
150 Nexpert / Ntotal 0.15
100 0.10
50 0.05
5 10 15 20 10 15 20
Frequency Class Frequency Class
(a) (b)
</figure>
<figureCaption confidence="0.998469">
Figure 1
</figureCaption>
<bodyText confidence="0.999661945945946">
Frequency distribution of medical expert word types. Panel (a) shows the number of
side-effect-related word types as judged by a medical expert (Nexpert) as a function of the
first 23 frequency classes. Panel (b) shows the proportion of expert types/total corpus types
(Ntotal) for the first 23 frequency classes. The horizontal dashed line indicates the mean
proportion of 0.0619.
It is common practice in information retrieval to discard the lowest-frequency
words a priori as nonsignificant (Rijsbergen 1979). In Smadja&apos;s collocation algorithm
Xtract, the lowest-frequency words are effectively discarded as well (Smadja 1993).
Church and Hanks (1990) use mutual information to identify collocations, a method
they claim is reasonably effective for words with a frequency of not less than five.
A frequency threshold of five seems quite low. Unfortunately, even this lower
frequency threshold of five is too high for the extraction of side-effect-related terms
from our medical abstracts. To see this, consider the left panel of Figure 1, which
plots the number of side-effect-related words in our corpus of abstracts as judged
by a medical expert, as a function of word-frequency class. The side-effect-related
words with a frequency of less than five account for 295 of a total of 432 expert
words (68.3%). The right panel of Figure 1 shows that the first 23 word-frequency
classes are characterized by, on average, the same proportion of side-effect-related
words. The a priori assumption of Rijsbergen (1979) that the lowest-frequency words
are nonsignificant is not warranted for our data, and, we suspect not for many other
data sets as well.
The recent literature has seen some discussion of the appropriate statistical meth-
ods for analyzing the contingency tables that contain the counts of how a word is
distributed inside and outside the windows around a seed term. Dunning (1993) has
called attention to the log-likelihood ratio, G2, as appropriate for the analysis of such
contingency tables, especially when such contingency tables concern very low fre-
quency words. Pedersen (1996) and Pedersen, Kayaalp, and Bruce (1996) follow up
Dunning&apos;s suggestion that Fisher&apos;s exact test might be even more appropriate for such
contingency tables.
We have therefore investigated for the full range of word frequencies whether
there is an optimal window size with respect to recall and the number of significant
words extracted using both the log-likelihood ratio and Fisher&apos;s exact test. In Sec-
tion 2, we will show that indeed there seems to be an optimal window size for both
statistical tests. However, a recurrent pattern of local optima calls this conclusion into
question. Upon closer inspection, this recurrent pattern appears at fixed ratios of the
number of words inside the window to the number of words outside the window
(complement).
</bodyText>
<page confidence="0.988851">
302
</page>
<note confidence="0.935414">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
</note>
<bodyText confidence="0.999595153846154">
In Section 3, we will relate the recurrent patterns of local optima at fixed window-
complement ratios (henceforth W/C-ratios) to the distributions of the lowest-frequency
words over window and complement. We will call attention to the critical effect of the
choice of W/C-ratios on the significance of the lowest-frequency words.
As the improvement in the extraction of side-effect terms from medical abstracts,
as gauged by the F-measure, which combines recall and precision (Rijsbergen 1979),
is small, we also applied the same approach to the extraction of Dutch verb-particle
combinations from a newspaper corpus. In Section 4, we report substantially better
results for this more lexical extraction task, which is subject to the same statistical
behavior of the lowest-frequency words.
In the last section, we will discuss the consequences of our findings for the op-
timization of word-based extraction systems and collocation research with respect to
the lowest-frequency words.
</bodyText>
<sectionHeader confidence="0.789109" genericHeader="method">
2. An Optimal Window Size for Medical Abstracts?
</sectionHeader>
<bodyText confidence="0.999946823529412">
The MEDLINE bibliographic database contains a large number of abstracts of scien-
tific journal papers discussing medical and drug-related research. Typically, abstracts
discussing medical drugs mention the side effects of these drugs briefly. Information
on side effects is potentially relevant for finding new applications for existing drugs
(Rikken and Vos 1995). We are therefore interested in any terms related to the side
effects of drugs.
Before proceeding, it may be useful to clarify the way in which the present re-
search differs from standard research on collocations. In the latter kind of research,
there is no a priori knowledge of which combinations of words are true collocations.
Moreover, the most salient collocations generally are found at the top of a list ranked
according to measures for surprise or association, such as G2 or mutual information
(Manning and Schtitze 1999). The large numbers of word combinations with signifi-
cant but low values for these measures are often of less interest. Low-frequency words
are predominant among these kinds of collocations. In our research, we likewise find
many low-frequency terms for side effects with low ranks in medical abstracts. The
relatively well-known side effects that are mentioned frequently can be captured by
examining the top ranks in the lists of extracted words. At the same time, the rarely
mentioned side-effect terms are no less important, and in post marketing surveillance
the extraction of such side-effect terms may be crucial for the acceptance or rejection
of new medicines.
Is reliable automatic extraction of both low- and high-frequency side-effect terms
from MEDLINE abstracts feasible? To answer this question, we explored the efficacy
of a standard collocation-based term extraction method that extracts those words that
appear more frequently in the immediate neighborhood of a given seed term than
might be expected under chance conditions.
We compiled two corpora on the side effects of the cardiovascular drugs captopril
and enalapril from MEDLINE abstracts. The first corpus contains all abstracts mention-
ing captopril and the word side. The second corpus contains all abstracts mentioning
captopril and at least one of the compounds side-effect, side effect, side-effects, and side
effects. Thus, the second corpus is a subset of the first. The first corpus is comprised
of 118,675 tokens and 7,678 types; the second corpus 103,603 tokens and 6,582 types.
A medical expert marked 432 of the latter word types as side-effect-related terms. The
left panel of Figure 1 summarizes the head of the frequency distribution of these terms
in the larger corpus. Note that most side-effect-related terms have a frequency lower
</bodyText>
<page confidence="0.999016">
303
</page>
<note confidence="0.404617">
Computational Linguistics Volume 26, Number 3
</note>
<tableCaption confidence="0.992069">
Table 1
General 2x2 contingency table. A= frequency of the target in the window
corpus, B= frequency of the target in the complement corpus, W = total
number of words in the window, C = total number of words in the
complement. Corpus size N=W+C.
</tableCaption>
<bodyText confidence="0.920390930232558">
window complement
frequency of target A B A+B
sum frequency of other words W — A C—B W+C—A—B
W C W+C
than five. What we need, then, is an extraction method that is sensitive enough to
select such very low frequency terms.
In the collocation-based method studied here, the neighborhood of a given seed
term is defined in terms of a window around the seed term. We constructed windows
around all seed terms in the corpus, leading to a window corpus and a complement
corpus. The window corpus contains all words that appear within a given window
size of the seed term. For instance, with a window size of 10, any word appearing
from five words before the seed to five words after the seed as well as the seed itself is
included in the window corpus. The word tokens not in the window corpus comprise
the complement corpus. Any type in the window corpus is a potential side-effect-
related term. For any such target type, we tabulate its distribution in window and
complement corpora in a contingency table like Table 1.
Given W and C, we need to know whether the frequency of the target in the
window corpus, A, is high enough to warrant extraction. Typically, given the marginal
distribution of the contingency table, a target is extracted for which WA A &gt; CB B, and
for which the tabulated distribution is nonhomogeneous according to tests such as G2
and Fisher&apos;s exact test for a given a-level.
In this approach, the window size is a crucial variable. At small window sizes,
many potentially relevant terms fail to appear in the window corpus. However, at
large window sizes, many irrelevant words are found in the window corpus and may
be extracted spuriously.
To see to what extent window size may affect the results of the extraction proce-
dure, consider the solid lines in panels (a) and (b) of Figure 2. The left panel shows the
results for recall when we use the log-likelihood ratio, G2, the right panel the results
for Fisher&apos;s exact test. We define recall as the proportion of the number of side-effect
words extracted and the total number of side-effect words available in the window.
For both statistical tests, recall seems to be optimal at window size 2. However,
at this window size, the number of words extracted is very small. This can be seen in
panels (c) and (d). Considered jointly, panels (a) and (c) suggest an optimal window
size of 24 for our larger corpus (corpus 1), as recall is still high, and the number of
significant words is maximal. When Fisher&apos;s exact test is used instead of G2, panels (b)
and (d) suggest 42 as the optimal size.
The dashed lines in panels (a) to (d) show the corresponding results for our smaller
corpus (corpus 2). Unsurprisingly, the general pattern for this subcorpus is quite sim-
ilar, although the drops in recall and the number of significant words, Nsig, occur at
somewhat smaller window sizes.
Interestingly, we can synchronize the curves for both corpora by plotting recall and
the number of significant items, Nsig, against the window-complement ratio (W/C).
This is shown in panels (e) and (f). These panels suggest not an optimal window size
</bodyText>
<page confidence="0.996946">
304
</page>
<figure confidence="0.993140333333333">
Weeber, Vos, and Baayen
Extracting the Lowest-Frequency Words
0.4 0.3
0.3 0.2
0.2 0.1
0 20 40 60 80 100 120 20 40 60 80 100 120
24 86 6 42 82
Window Size Window Size
(a) (b)
600 300
.So 400 2 200
200 100
0 20 40 60 80 100 120 0 20 40 60 80 100 120
24 86 6 42 82
Window Size Window Size
(c) (d)
W/C W/C
(e) (f)
</figure>
<figureCaption confidence="0.88993425">
Figure 2
Results of the word extraction procedure (a = 0.05). Solid line = corpus 1, dashed line =
corpus 2. Panel (a) shows the log-likelihood, G2, recall results as a function of the window
size. Panel (b) shows recall values for Fisher&apos;s exact test. Panel (c) shows the total number of
</figureCaption>
<bodyText confidence="0.9240098">
significant words (Nsig) as a function of the window size for G2. Panel (d) shows the same as
(c) but for Fisher&apos;s exact test. Panel (e), G2, and (f), Fisher&apos;s exact test, also show the total
number of significant words, but as a function of the W/C-ratio; the ratio of the number of
words in the window corpus to the number of words in the complement corpus.
but an optimal W/C-ratio (0.17 for G2 and 0.29 for Fisher&apos;s exact test). Although we
now seem to have shown that recall and Nsig depend on the choice of window size,
the sudden drops in recall and Nsig and the reoccurrence of such drops at various
W/C-ratios is a source of worry, not only for G2 results, but also for the results based
on Fisher&apos;s exact test. A further source of worry is the fact that the two tests diverge
considerably with respect to the optimal W/C-ratio.
</bodyText>
<subsectionHeader confidence="0.798601">
3. Contingency Tables and the Lowest-Frequency Words
</subsectionHeader>
<bodyText confidence="0.999882142857143">
Before we can have any confidence in the optimality of a given W/C-ratio, we should
understand why the saw-tooth-shaped patterns of Nsig arise. Both the log-likelihood
ratio (G2) and Fisher&apos;s exact test compute the significance of contingency tables similar
to Table 1. So why is it that the left panels in Figure 2 differ from the right panels?
G2 has a x2-distribution as N —&gt; oo. This convergence is not guaranteed for low
expected frequencies and sparse tables, which renders use of G2 problematic for our
lowest-frequency words in that it may suggest words to be more remarkable than they
</bodyText>
<figure confidence="0.471943133333333">
600
400
200
0.0 0.2 0.4 0.6 0.8
0.17 0.62
305
Computational Linguistics Volume 26, Number 3
Table 2
Contingency tables for hapax legomena, dis legomena, and tris legomena.
W = number of words in window corpus; C = number of words in
complement corpus. Total corpus size: N = W C.
(a): 1 0 (b): 2 0 (c): 1 1
W — 1 C W — 2 C W — 1 C — 1
(d): 3 0 (e): 2 1 (f): 1 2
W — 3 C W — 2 C — 1 W — 1 C — 2
</figure>
<bodyText confidence="0.999687863636364">
really are. Fisher&apos;s exact test, on the other hand, does not use an approximation to a
probability distribution but computes the exact hypergeometric distribution given the
marginal totals of the contingency table. While Fisher&apos;s exact test is suitable for the
analysis of sparse tables, it is inherently conservative because it regards the marginal
totals not as stochastic variables but as fixed boundary conditions. Consequently, this
test is likely to reject words that are in fact remarkably distributed in the contingency
table. The difference in behavior of the two tests is clearly visible in panels (c) and (d)
of Figure 2: the number of significant words (Nsig) according to G2 is roughly twice
as large as that according to Fisher&apos;s exact test.
When a hapax legomenon&apos;, a word with frequency 1, occurs in the window corpus,
we use contingency table (a) as shown in Table 2. For dis legomena, words with a
frequency of 2, that appear at least once in the window corpus, we obtain the two
contingency tables (b) and (c). The interesting contingency tables for tris legomena are
tables (d) to (f). These six tables are relevant for 63.8% of the side-effect-related terms
as judged by our medical expert.
How do changes in the W/C-ratio affect G2 and Fisher&apos;s exact test, when applied
to contingency tables (a) to (f)? In other words, how does the choice of the window
size affect whether a low-frequency word is judged to be a significant term, for fixed
A and B (e.g., A = 1 and B = 0 for a hapax legomenon)?
First, consider contingency tables with B = 0, for instance tables (a), (b), and (d).
For small A, (A &lt; W, C), it is easily seen (see the appendix) that the critical W/C-ratio
based on the log-likelihood ratio is:
</bodyText>
<equation confidence="0.993644">
1 (1)
</equation>
<bodyText confidence="0.951964909090909">
with X the X2 value corresponding to a given a-level with 1 degree of freedom. For
A = 1 and a = 0.05, X = 3.84, the critical W/C-ratio equals 0.1718. This is exactly
the W/C-ratio in panel (e) in Figure 2 at which the first and largest drop in the num-
ber of significant words occurs. Up to this ratio, any hapax legomenon appearing in
the window corpus is judged to be a significant term. For W/C &gt; 0.1718, no hapax
legomenon will be extracted.
Fisher&apos;s exact test is far more conservative. For this test, the critical W/C-ratio is
1 The term hapax legomenon (literally &apos;read once&apos;) goes back to classical studies and was originally used
to refer to the words used once only in the works of a given author, e.g., Homer. By analogy, dis
legomenon and tris legomenon have come into use to refer to words occurring only twice or three
times.
</bodyText>
<page confidence="0.997418">
306
</page>
<note confidence="0.912059">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
</note>
<tableCaption confidence="0.970425">
Table 3
</tableCaption>
<bodyText confidence="0.462368416666667">
Critical W/C-ratios where sparse and skewed contingency tables lose
significance. Equations 1 and 2 provide the ratios for the B = 0 cases. The
other ratios are obtained by simulations.
distribution G2 a = 0.01 Fisher
A-B a = 0.05 a = 0.05 a = 0.01
hapax legomena 1 - 0 0.1718 0.0375 0.0526 0.0101
dis legomena 1 - 1 0.0400 0.0092 0.0260 0.0050
2 - 0 0.6204 0.2348 0.2880 0.1111
tris legomena 1 - 2 0.0232 0.0053 0.0172 0.0033
2 - 1 0.1917 0.0824 0.1565 0.0626
3 - 0 1.1155 0.4938 0.5833 0.2746
(see the appendix for details):
</bodyText>
<equation confidence="0.8053605">
w &lt;1/7/,
(2)
</equation>
<bodyText confidence="0.999947375">
where P is the a-level. For A = 1 and P = 0.05, the critical W/C-ratio for a hapax
legomenon equals 0.0526. In panel (f) of Figure 2, we observe the first drop in the
number of significant words at precisely this W/C-ratio. For very small W/C-ratios,
any hapax legomenon in the window corpus is also judged to be significant according
to Fisher&apos;s exact test. Compared to G2, Fisher&apos;s exact test rejects hapax legomena as
significant at much smaller W/C-ratios. Note that when W/C = 0.05/0.95 = 0.0526,
i.e., when the window corpus is exactly 1/20 of the total corpus, the probability that a
hapax legomenon appears in the window corpus equals 0.05. Our conclusion is that,
with the W/C-ratio as the only determinant of significance, the windowing method is
not powerful enough to distinguish between relevant and irrelevant hapax legomena.
In other words, hapax legomena should be removed from consideration a priori.
For dis legomena that appear exclusively in the window corpus, the critical ratios
are 0.6204 for G2, corresponding to the second major drop in panel (e) of Figure 2,
and 0.2880 for Fisher&apos;s exact test, corresponding to the severe drop following the
maximum of Nsig in panel (f). The third major drop in this panel corresponds to the
critical W/C-ratio for tris legomena occurring three times in the window corpus.
For contingency tables with B &gt; 0; A &gt; B; A,B &lt; W, C, critical W/C-ratios are not
easy to capture analytically. We therefore carried out a simulation study for W + C =
100,000. For fixed A and B and a given a-level, we calculated the critical W/C-ratio
by iterative approximation. Results are summarized in Table 3.
When we highlight these critical ratios in Figure 2 by means of vertical dashed
lines, we obtain Figure 3. Panels (a) to (d) correspond to the curves for corpus 2 in the
first four panels of Figure 2. For the log-likelihood ratio, we observe that both the major
and minor drops in recall and the number of significant words (Nsig) occur at the W/C-
ratios where different distributions of the lowest-frequency words lose significance. For
Fisher&apos;s exact test, we observe exactly the same pattern. Panels (e) and (f) show the
number of significant words for a pseudorandomized version of corpus 2 where we
used the same tokens but randomized the order of their appearance. Although the
number of significant words is lower, the saw-tooth-shaped pattern with the sudden
drops at fixed ratios reemerges.
We conclude that W and C are the prime determinants of both recall and the
number of significant words. At first sight, Fisher&apos;s test is clearly preferable to the
</bodyText>
<page confidence="0.960209">
307
</page>
<figure confidence="0.999590794117647">
Volume 26, Number 3
Computational Linguistics
3-1
2-0
3-0
0.4
•-r-,&amp;quot; 0.3
0.2
0.2
0.1
1-1 1-0 2-1
1-0 2-1 2-0 3-1
0.0 0.2 0.4 0.6 0.8 0.0 0.2 0.4 0.6 0.8
WIG WIG
(a) (b)
1-1 1-0 2-1 3-1 2-0 1-0 2-1 2-0 3-1 3-0
600 300
400 `i 200
200 100
0.0 0.2 0.4 0.6 0.8 0.0 0.2 0.4 0.6 0.8
W/C WIG
(c) (d)
1-1 1-0 2-1 3-1 2-0 1-0 2-1 2-0 3-1 3-0
400
bo 300
200
100
150
eo
100
50
0.0 0.2 0.4 0.6 0.8 0.0 0.2 0.4 0.6 0.8
WIG WIG
(e) (0
</figure>
<figureCaption confidence="0.985799">
Figure 3
</figureCaption>
<bodyText confidence="0.982174642857143">
Results of word extraction procedure (a = 0.05) with A-B distributions. Panels (a),
log-likelihood ratio, G2, and (b), Fisher&apos;s exact test, show the recall results of the extraction
procedure for corpus 2. Panels (c) and (d) show the total number of significant words (Nsig),
again for G2 and Fisher&apos;s exact test, respectively (see also Figure 2). Panels (e) and (f) show the
results for a randomized corpus for G2 and Fisher&apos;s exact test. The numbers above the panels
indicate the A-B distribution of the contingency tables in Table 2.
log-likelihood ratio because the extreme saw-tooth-shaped pattern is substantially re-
duced. However, the use of Fisher&apos;s exact test does not eliminate the effect of the choice
of window and complement size on the number of significant words and recall. At
specific W/C-ratios, nonnegligible numbers of words with the lowest frequency of oc-
currence suddenly lose significance. Moreover, in our discussion thus far, we have not
taken extraction precision into account nor the trade-off between precision and recall.
For the assessment of overall extraction results, we turn to the F-measure (Rijsbergen
1979), a measure that assigns equal weights to precision (P) and recall (R):
</bodyText>
<equation confidence="0.516364333333333">
2PR (3)
F=
P +
</equation>
<bodyText confidence="0.5596084">
Figure 4 plots precision, recall, and F as a function of the W/C-ratio. The common
trade-off between recall and precision is clearly present for the smaller window sizes,
with the F-measure providing a kind of average.
Thus far, we have applied a common collocation extraction technique to a semantic
association task. Actual extraction performance is low: F is maximally 0.17. To gauge
</bodyText>
<page confidence="0.900772">
308
</page>
<figure confidence="0.998795833333333">
Extracting the Lowest-Frequency Words
0.3
0.2
0 1
Weeber, Vos, and Baayen
0.4
0.3
0.2
0. I
0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2 0.4 0.6 0.8 I .0
0.17 0.62 0.05 0.29 0.58
W /C
</figure>
<figureCaption confidence="0.664086">
Figure 4
F, recall, and precision as a function of the W/C-ratio. Recall (R, dashed line), F (solid line),
and precision (P, dotted line) using G2 (left panel) and Fisher&apos;s exact test (right panel) for our
second corpus plotted as a function of the W/C-ratio.
</figureCaption>
<bodyText confidence="0.9968305">
whether better results can be obtained with the present techniques, we examined the
extraction of Dutch verb-particle combinations.
</bodyText>
<sectionHeader confidence="0.776406" genericHeader="method">
4. Extracting Verb-Particle Combinations
</sectionHeader>
<bodyText confidence="0.999978482758621">
In English, the particle of verb-particle combinations always follows the verb, as in
she rang him up. In Dutch, the particle can occur either before or after the verb. When
it occurs before the verb, it is separated from the verb by te (&apos;to&apos;) and/or one or more
auxiliary verbs. Extracting such particle-verb combinations is relatively straightfor-
ward. However, when the particle follows the verb, it may be separated from the verb
by many constituents of arbitrary complexity: Hi] zegt de belangrijke afspraak met de pro-
grammeur voor vanmiddag af (&apos;he says the important meeting with the programmer for
this afternoon off&apos;; i.e., he cancels the meeting). How well does our present approach
lend itself to the extraction of verb-particle combinations with the particle af (&apos;off&apos;)
when the particle follows the verb?
We investigated this question by studying verb-particle combinations with af from
a Dutch newspaper corpus of about 4.5 million word tokens. We extracted by hand all
sentences from the corpus that contain af (3,802 sentences, 97,903 tokens) and singled
out those sentences in which af belongs to a verb-particle combination in which the
verb occurs to the left of the particle (2,202 sentences with 42,825 tokens). The targets
to extract from the 2,202 sentences are 436 different verb inflections, of which 276 have
a frequency of less than five. Just as the judgments of a medical expert were used in
the preceding extraction task to provide a frame of reference for the evaluation of
precision and recall, the present lexical extraction task has as its frame of reference the
2,202 sentences that we judged to contain a verb followed at some point to the right
by a particle. How many of the 436 different verb inflections can we extract with our
windowing technique, and what is the trade-off between recall and precision?
To answer this question, we defined windows to the left of the seed term af in the
range of positions [-12, —1]. We calculated the W/C-ratio for each window size. For
each word in all windows, we calculated its significance according to G2 and Fisher&apos;s
exact test. Using the 436 target verb inflections as a frame of reference, we computed
precision, recall, and F. Panel (a) of Figure 5 plots F as a function of the W/C-ratio.
F reaches a maximum F of 0.31 at W/C = 0.59 for G2 (the solid line in the figure)
and a maximum of 0.27 at W/C = 0.50 for Fisher&apos;s exact test (the dashed line). These
</bodyText>
<page confidence="0.99315">
309
</page>
<figure confidence="0.998643666666667">
Computational Linguistics Volume 26, Number 3
0.3
0.2 0.4 (1.6 0.8 1.0
0.2 0.4 0.6 0.8 1 ) 0.2 0.4 0.6 0.8 1.0
W / C W/C
(c) (d)
</figure>
<figureCaption confidence="0.880157833333333">
Figure 5
Extraction results for the af corpus. Panel (a) shows F for G2 (solid line) and Fisher&apos;s exact test
(dashed line) as a function of the W/C-ratio. Panel (b) displays the number of significant
words (Nsig) according to both tests. Panel (c) shows F for G2 at a = 0.05 (solid line) and
Fisher&apos;s exact test at a = 0.1 (dotted line). Panel (d) shows Nsig for G2 at a = 0.05 and for
Fisher&apos;s exact test at a = 0.1.
</figureCaption>
<bodyText confidence="0.999697214285714">
results compare favorably with the maximum F of 0.17 obtained for the extraction of
side-effect terms from medical abstracts.
Panel (b) of Figure 5 shows the by-this-time familiar saw-tooth-shaped pattern of
the number of significant word types as function of the W/C-ratio. We observe again
that Fisher&apos;s exact test is more conservative, and in the extraction task, less successful,
than G2. However, by opting for a more liberal a-level we can compensate for the
conservatism of Fisher&apos;s exact test and obtain an F profile that is indistinguishable
from that of G2 as shown in panel (c) for a = 0.1. Panel (d) returns to the number of
significant terms (Nsig) when Fisher&apos;s exact test is used with a = 0.1. Note that the
optimal W/C-ratio according to F for G2 (0.59) still leads to a higher Nsig than the
optimal W/C-ratio (0.83) for Fisher&apos;s exact test with a = 0.1. However, in the case of
Fisher&apos;s exact test, the precision is much higher than when G2 is used. These results
suggest that the choice of G2 or Fisher&apos;s exact test should be guided by the desired
trade-off between precision and recall.
</bodyText>
<sectionHeader confidence="0.974182" genericHeader="method">
5. Discussion
</sectionHeader>
<bodyText confidence="0.9992295">
The question that originally motivated the present research concerned the determina-
tion of the optimal window size for the extraction of side-effect-related words. Most
</bodyText>
<figure confidence="0.986079571428571">
400
200
400
200
0.2 0.4 0.6 0.8 1.0
/C
(6)
</figure>
<page confidence="0.99221">
310
</page>
<note confidence="0.829488">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
</note>
<bodyText confidence="0.999972745098039">
words that are judged by a medical expert to be related to side effects have frequencies
of use that are so low that they fall below the frequency thresholds generally used
in standard information extraction techniques. Is it nevertheless possible to single out
such low-frequency terms through optimal window size estimation, especially since
the log-likelihood ratio and Fisher&apos;s exact test have recently been advanced as suitable
techniques even for the analysis of the lowest-frequency ranges?
Manipulation of the window size revealed a saw-tooth-shaped pattern in the num-
ber of significant words (Nsig) that depends not on the window size itself but on
the W/C-ratio. This saw-tooth-shaped pattern arises most prominently when the log-
likelihood ratio is used to extract significant words, but it is also clearly visible when
Fisher&apos;s exact test is used. This pattern is due to the way in which these tests eval-
uate surprise as a function of the window size for the lowest-frequency words. We
argue that hapax legomena should be disregarded a priori, while for low-frequency
words with frequency greater than 1, only the most extreme distributions over win-
dow and complement are reliable in that we are confident that these terms are really
related to the seed. For dis and tris legomena, for instance, all occurrences should in
effect be concentrated in the window. Only then are we confident that there is truly a
relationship between the seed and the target.
With these restrictions, the optimum W/C-ratio for our side-effect data is just
smaller than 0.2880, using Fisher&apos;s exact test, which amounts to an optimal win-
dow size of 36. Of the 295 terms with a frequency of 4 or less that a medical expert
judged to be side-effect-related terms, we capture 14, which amounts to 4.8%. When
we exclude the hapax legomena as impossible to extract reliably a priori, we capture
14/122 = 11.5%. Although the gain in number of significant low-frequency items is
small, the success for the low-frequency items is still reasonable when compared to the
corresponding success rate of 26/137 = 19.0% for the items with a frequency of 5 or
more. These results suggest that the windowing technique is far from optimal for the
extraction of side-effect terms from medical abstracts, irrespective of the frequencies
of these terms.
The windowing technique applied to the extraction of Dutch verb-particle com-
binations led to more encouraging results. Choosing 0.4625 as the optimal W/C-ratio
for the af data, which amounts to accepting dis legomena with a 2-0 distribution, and
using a = 0.1 with Fisher&apos;s exact test, we obtain an optimal window size of 5. With
this window, we extract 42 of the 139 lowest-frequency words in the 2 to 4 range, i.e.,
30.2%. This compares favorably to the success rate of 60/170 = 35.2% for verbs with
a frequency greater than 4. When we use G2 instead of Fisher&apos;s exact test to obtain
improved recall at the cost of lesser precision, we extract 58/139 = 41.7% of the lowest-
frequency words in the 2 to 4 range and 64/170 = 37.6% of the higher-frequency words
(optimum W/C-ratio 0.6204, corresponding window size of 7). For this more lexical
extraction task, extraction success rates are comparable for the lower-frequency and
the higher-frequency words. Neglecting the extraction of the lower-frequency words
a priori would have led to the loss of nearly half of the words currently extracted.
The difference in the results between the two extraction tasks, side effects in medi-
cal abstracts and verb-af combinations in a newspaper corpus, is due to the difference
in the distributions of the targets around the seed terms. Concentrating on the lowest-
frequency word tokens, the left panel of Figure 6 shows their distribution for the
side-effect corpus. The right panel shows the corresponding distribution for the af
corpus. The side-effect terms reveal a wide scatter around the seed at position 0. By
contrast, verbs predominantly cluster close to the left of af. Apparently, the distance
between the verb and the particle is more constrained than the distance between side-
effect terms and the seed term. The optimal window size of 7 (position —7) for G2
</bodyText>
<page confidence="0.994036">
311
</page>
<figure confidence="0.9995043125">
Computational Linguistics
Volume 26, Number 3
40
z
cr
20
-40
-20
20
10
5
-300 -200 -100
LIIIIIIIII III t I .1
100 200
Position Position
(a) (b)
</figure>
<figureCaption confidence="0.97071925">
Figure 6
Frequency distribution of words occurring two to four times. Panel (a) shows for the side
effect corpus how the expert words with a frequency of 2, 3, and 4 are distributed around the
seed term. Panel (b) shows this distribution for the of corpus.
</figureCaption>
<bodyText confidence="0.999960916666666">
obtained above ties in with the distribution of the lowest-frequency words: 68% of all
lowest-frequency tokens are in this window. For the side-effect corpus, only 31% of
all low-frequency tokens are in the optimal window of 36 for Fisher&apos;s exact test. This
suggests that the optimal window size must be ascertained on the basis of the distri-
bution of targets around the seed, on the one hand, and by optimizing the statistics,
on the other hand.
As an illustration of how the statistics can be optimized, we return to the of data.
When we look at the distribution of the lowest-frequency words in Figure 6, an optimal
window size of 8 to the left suggests itself. This translates into a W/C-ratio of 0.6689.
Given that we want to retain dis legomena with a 2-0 distribution, we proceed to
compute the corresponding significance levels for both G2 and Fisher&apos;s exact test by
Equations 1 and 2. The critical x2 value for G2 equals 3.65, the critical P for Fisher&apos;s
exact test is 0.161. The extraction results for both tests as measured by F are 0.31 and
0.33, respectively. This procedure allows us to extract 64/139 = 46.0% of the low-
frequency words and 66/170 = 38.8% of the high-frequency words using G2, and
64/139 = 46.0% and 79/170 = 46.7%, respectively, using Fisher&apos;s exact test. Note that
this technique is optimal for the extraction of the lowest-frequency words, leading to
identical performance for G2 and Fisher&apos;s exact test for these words. For the higher-
frequency words, Fisher&apos;s exact test leads to a slightly better recall with the same
precision scores (0.31 for both tests).
While we have observed reasonable results with both G2 and Fisher&apos;s exact test, we
have not yet discussed how these results compare to the results that can be obtained
with a technique commonly used in corpus linguistics based on the mutual information
(MI) measure (Church and Hanks 1990):
</bodyText>
<equation confidence="0.9976805">
P(x, y) (4)
1(x, y) =-- log2 p(x)p(y)
</equation>
<bodyText confidence="0.9977715">
In (4), y is the seed term and x a potential target word. A high MI score for a given
target word suggests an association between this target and the seed term. Or perhaps
more precisely, a low MI score suggests a dissociation between target and seed word
(Manning and Schiltze 1999). To compute recall, precision, and F, we require a cut-off
value. As there is no theoretically motivated cut-off value, we vary it systematically.
Panel (a) of Figure 7 plots the results for the of corpus. The x-axis represents the MI
</bodyText>
<page confidence="0.993752">
312
</page>
<figure confidence="0.950701777777778">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
(b)
0.2
Sign I0.3
&apos;nceI 0.4
CI
&lt;
C
O• \\A\
</figure>
<figureCaption confidence="0.999818">
Figure 7
</figureCaption>
<bodyText confidence="0.997907342857143">
Extraction results (F) for the af corpus for mutual information and Fisher&apos;s exact test. Panel (a)
shows the F score as a function of both W/C-ratio and mutual information cut-off value.
Panel (b) shows F as a function of W/C-ratio and the significance level a used with Fisher&apos;s
exact test.
cut-off value, the y-axis the W/C-ratio, and the z-axis the F value. Note that F is rather
indifferent to variation in window size and MI cut-off value. It varies between 0 (at
the right-hand edge) to 0.17, with most values around 0.15 (the plateau in the figure).
Interestingly, the highest possible MI cut-off point equals 4.27: the right-hand edge of
the plateau. In fact, 4.27 is the maximum MI score for this corpus size (42,825) and
the frequency of the seed term af (2,206), irrespective of the frequency of the target
word, reached when all occurrences of the target word are concentrated in the window
(see the appendix for details). Consequently, any hapax legomenon appearing in the
window will automatically be assigned the maximum value of MI, along with target
words with the most extreme W/C distributions (Window—Complement: 2-0, 3-0, 4-0,
etc.). This has the unfortunate consequence that, with regard to their MI score, truly
remarkably distributed target words become indistinguishable from the statistically
unremarkable hapax legomena.
Panel (b) of Figure 7 displays the corresponding results when we use Fisher&apos;s exact
test rather than MI. Instead of varying the MI cut-off value, we vary the significance
level a. Note that the resulting F scores tend to be roughly twice as high as those
obtained with MI-based extraction. As there are a number of very similar local maxima,
the choice of window size and significance level should be based on the desired trade-
off between precision and recall given the general distribution of the target words
around the seed term.2 We conclude that, at least for the present word extraction task,
Fisher&apos;s exact test compares favorably to mutual information (as does G2).
All the analyses presented thus far are conditional analyses, in the sense that we
compiled new corpora from the database of abstracts and from the newspaper corpus
containing only relevant abstracts (containing the drug names captopril and enalapril
as well as the term side-effect) and relevant sentences (containing the particle af and
its verb to its left), respectively. The size of the complement was always determined
with respect to these new conditional corpora, and not with respect to all MEDLINE
2 Note that we manipulate the a-levels in the same way as the MI cut-off values. In the present
technique, the a-level is a parameter that we vary to optimize extraction results for a training data set.
Our use of a should be carefully distinguished from the function of preset a-levels when testing the
significance of observed differences in experimentally obtained data.
</bodyText>
<page confidence="0.998198">
313
</page>
<note confidence="0.60397">
Computational Linguistics Volume 26, Number 3
</note>
<tableCaption confidence="0.871277">
Table 4
General and specific 2 x 2 contingency tables for low-frequency words.
Table (a) provides the general notation of the counts in a 2 x 2
contingency table. In table (b), A= frequency of rare words (1,2,3, ...),
W = number of words in window, C = number of words in complement.
Corpus size N=W+ C.
</tableCaption>
<bodyText confidence="0.916564666666667">
(a): nn ni2 ni+ (b): A 0 A
n21 n22 n2+ W - A C W+C-A
n+i n+2 n++ W C W + C
abstracts or to the complete newspaper corpus. This raises the question of whether
better results might have been obtained if the complete data sets had been used. In
principle, more data might imply more power. At the same time, more data also entails
the risk of more noise. At least for our af data, enlarging the complement leads to worse
performance. When we allow any sentence that contains af in our analyses, F decreases
from 0.31 to 0.23 for G2. When we base the analyses on the complete newspaper corpus,
F reduces further to 0.19. The reason for this decrease in performance is probably due to
the W/C-ratio being very low for all practical window sizes, i.e., at the very left part of
the saw-tooth-shaped pattern characterizing Nsig as a function of W/C. Consequently,
any low-frequency word is singled out as a significant item whenever it occurs at least
once in the window. Given the Zipfian structure of word-frequency distributions, a
great many spurious low-frequency words are extracted.
As mentioned in the introduction, the received wisdom is that the windowing
method is unreliable for events with a frequency of less than 5. By means of an
analysis of the behavior of statistical tests for 2 x 2 contingency tables with sparse
data, a method for optimizing the use of these tests has been developed. We hope
that this technique will prove to be useful for domains in which the extraction of
low-probability events is crucial.
</bodyText>
<sectionHeader confidence="0.8840365" genericHeader="method">
Appendix
Log-Likelihood Ratio
</sectionHeader>
<bodyText confidence="0.999177">
For the general contingency table, table (a) in Table 4, the log-likelihood ratio is defined
by (Agresti 1990):
</bodyText>
<equation confidence="0.9303885">
G2 = 2 EEnyln(
ii
</equation>
<bodyText confidence="0.9998945">
where trig = ni±n±iln±±. When we use the specific contingency table for hapax legom-
ena, table (b) in Table 4, we obtain for a specific G2 of X the formula:
</bodyText>
<equation confidence="0.983357333333333">
X/2 = Ain +W C + (W A) ln
+ C In W + C
A) W A&apos;
= ln(W - A)w-A - In Ww + ln(W + C)w-Fc - In(W + C -
=
W-w
(W + C - A)w±c-A
(W - A)w-A (W + C)w-c
Ww (W + C - A)w±c-A •
</equation>
<page confidence="0.8691145">
ex/2
314
</page>
<note confidence="0.871579">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
</note>
<bodyText confidence="0.995651">
We rewrite the latter equation to:
</bodyText>
<equation confidence="0.9974041875">
eX/2wW
(W — A)W—A
eX/2wW(w _ A)A
(W — A)&amp;quot;
(w + qvv-Pc
(W + C — A) w+c—A &apos;
(W + C)&amp;quot; (W + C)c (W + C — A)A
(W + C — A)w (W + C — A)c •
Because W &gt; A and therefore W + C &gt; A, we rewrite the formula above as follows:
ex12WwWA
WW
eX/2WA
(w + c)w(w + c)c(w + c )A
= (W + C)w(W + C)c &apos;
= (w + c)A,
/ex/2W = W + C.
</equation>
<bodyText confidence="0.950482">
So that the ratio is:
</bodyText>
<sectionHeader confidence="0.257613" genericHeader="method">
C
</sectionHeader>
<bodyText confidence="0.690489">
When N&gt; 10,000, the error of this equation is smaller than 0.001.
</bodyText>
<subsectionHeader confidence="0.7249">
Fisher&apos;s Exact Test
</subsectionHeader>
<bodyText confidence="0.9916317">
With Fisher&apos;s exact test, the observed marginal totals are used to compute the hyper-
geometric distribution, which is defined for the general 2 x 2 table, table (a) of Table 4,
as (Agresti 1990):
( )
n1+
nn
The probability of every possible table with given marginal totals adds to 1. We use
Fisher&apos;s exact test that sums the hypergeometric probabilities of all tables with prob-
abilities less than or equal to the observed table. With B = 0, table (b) in Table 4 is the
only table we are interested in so that the probability P for this contingency table is:
</bodyText>
<equation confidence="0.998176461538462">
(A )(W+C—A ) ,
A W — A
( W + C )
W
(W + C — A)!
(W — A)!C!
(W + C)! &apos;
W!C!
W!(W + C — A)!
(W — A)!(W + C)!&apos;
W(W-1)...(W—A+1)(W—A)! (W+C—A)!
(W—A)! (W+C)(W+C-1)...(W+C—A+1)(W+C—A)!.
P -,
</equation>
<bodyText confidence="0.439643">
-_,
=
</bodyText>
<page confidence="0.991787">
315
</page>
<note confidence="0.701916">
Computational Linguistics Volume 26, Number 3
</note>
<bodyText confidence="0.994244666666667">
Because A = 1, 2, 3, ... , W &gt;&gt; A and therefore W + C &gt;&gt; A, we allow ourselves to
formulate W! = WA(W — A)! and (W + C)! = (W + C)A(W + C — A)!. We therefore
rewrite Fisher&apos;s exact test as follows:
</bodyText>
<equation confidence="0.9537935">
wA w!(w + c)!
(W+ Wm( w + C)!&apos;
The W/C-ratio is then:
W i47-0
C 1 - VT3 •
When N&gt; 20,000, the error of this equation is smaller than 0.001,
</equation>
<bodyText confidence="0.97692925">
Practical Issues Using Fisher&apos;s Exact Test. We used a network algorithm to compute
Fisher&apos;s exact test (Mehta and Patel 1986; Clarkson, Fan, and Joe 1993). This algorithm
is computationally intensive, but since many words have the same table, only a few
tables have to be computed and their results can be cached. It takes an average of 50
seconds to compute one window size in a 100,000 word corpus on a Pentium 133MHz,
48MB Linux machine.
Source code for the algorithm can be found at: http: //www. acm. org/pubs /cit at ions/
journals/toms/1986-12-2/p154-mehta/
</bodyText>
<sectionHeader confidence="0.530592" genericHeader="method">
Mutual Information
</sectionHeader>
<bodyText confidence="0.995718">
Given the definition of Mutual Information (Church and Hanks 1990),
</bodyText>
<equation confidence="0.996659">
P(x, y)
I(x, y) = log2 p(x)p(y),
</equation>
<bodyText confidence="0.99996225">
we consider the distribution of a window word according to the contingency table (a)
in Table 4. P(x) is the relative frequency of the target word, P(y) is the relative frequency
of the seed term, and P(x, y) is the frequency of the target word in the window. In
terms of the contingency table, we have:
</bodyText>
<equation confidence="0.898500333333333">
nu
n++
I(x, y) = log2 n1+ s
</equation>
<bodyText confidence="0.916209272727273">
where S n++ n++ —u, we find that
is the frequency of the seed. Substituting nn = ni+
— nu
n++
I(x, y) = log2
n1+ S &apos;
n++ n++
1
= log2 n++
ni+
s
</bodyText>
<equation confidence="0.903104">
n++(ni+ — n12) n++
</equation>
<page confidence="0.992616">
316
</page>
<note confidence="0.667372">
Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words
</note>
<bodyText confidence="0.960642">
= log2(n++) — log2(S) — log2(ni+) + log2(ni+ — ni2)•
For a given corpus and extraction task, corpus size (n++) and the frequency of the
seed term S are fixed, so that we can write
</bodyText>
<equation confidence="0.575516">
/(x, y) = C — log2 (ni+) + log2 (ni+ — n12).
</equation>
<bodyText confidence="0.999742666666667">
As n12 &lt; ni+, 1(x,y) reaches its maximum value (C) when n12 = 0, i.e., when all
instances of the target word are in the window, irrespective of the frequency of the
target.
</bodyText>
<sectionHeader confidence="0.99534" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.998898333333333">
We are indebted to three anonymous
reviewers whose criticisms have led to
substantial improvements. This study was
financially supported by the Dutch National
Research Council NVVO (PIONIER grant to
the third author).
</bodyText>
<sectionHeader confidence="0.994309" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999915456521739">
Agresti, Alan. 1990. Categorical Data Analysis.
John Wiley &amp; Sons, New York.
Church, Kenneth W. and Patrick Hanks.
1990. Word association norms, mutual
information, and lexicography.
Computational Linguistics, 16(1):22-29.
Clarkson, Douglas B., Yuan-An Fan, and
Harry Joe. 1993. A remark on algorithm
643: FEXACT: An algorithm for
performing Fisher&apos;s exact test in r x c
contingency tables. ACM Transactions on
Mathematical Software, 19(4):484-488.
Dunning, Ted. 1993. Accurate methods for
the statistics of surprise and coincidence.
Computational Linguistics, 19(1):61-74.
Manning, Christopher D. and Hinrich
Schiitze, 1999. Foundations of Statistical
Natural Language Processing, chapter 5,
Collocations. The MIT Press, Cambridge,
MA.
Mehta, Cyrus R. and Nitin R. Patel. 1986.
Algorithm 643. FEXACT: A fortran
subroutine for Fisher&apos;s exact test on
unordered r x c contingency tables. ACM
Transactions on Mathematical Software,
12(2):154-161.
Pedersen, Ted. 1996. Fishing for exactness.
In Proceedings of the South-Central SAS
Users Group Conference, pages 188-200,
Austin, TX.
Pedersen, Ted, Mehrnet Kayaalp, and
Rebecca Bruce. 1996. Significant lexical
relationships. In Proceedings of the 13th
National Conference on Artificial Intelligence.
AAAI Press/The MIT Press, Menlo Park,
CA, pages 455-460.
Rijsbergen, Cornelis J. van. 1979. Information
Retrieval. Second edition. Butterworths,
London.
Rikken, Floor and Rein Vos. 1995. How
adverse drug reactions can play a role in
innovative drug research. Pharmacy World
and Science, 17(6):195-200.
Smadja, Frank. 1993. Retrieving collocations
from text: Xtract. Computational Linguistics,
19(1):143-177.
</reference>
<page confidence="0.998614">
317
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.859699">
<title confidence="0.9998865">Extracting the Lowest-Frequency Words: Pitfalls and Possibilities</title>
<author confidence="0.999962">Marc Weeber Rein Vost</author>
<affiliation confidence="0.995935">University of Groningen University of Groningen, University of Maastricht</affiliation>
<abstract confidence="0.989960533333333">R. Harald Baayent Max Planck Institute for Psycholinguistics In a medical information extraction system, we use common word association techniques to extract side-effect-related terms. Many of these terms have a frequency of less than five. Standard word-association-based applications disregard the lowest-frequency words, and hence disregard useful information. We therefore devised an extraction system for the full word frequency range. This system computes the significance of association by the log-likelihood ratio and Fisher&apos;s exact test. The output of the system shows a recurrent, corpus-independent pattern in both recall and the number of significant words. We will explain these patterns by the statistical behavior of the lowest-frequency words. We used Dutch verb-particle combinations as a second and independent collocation extraction application to illustrate the generality of the observed phenomena. We will conclude that a) word-association-based extraction systems can be enhanced by also considering the lowest-frequency words, b) significance levels should not be fixed but adjusted for the optimal window size, c) hapax legomena, words occurring only once, should be disregarded a priori in the statistical analysis, and d) the distribution of the targets to extract should be considered in combination with the extraction method.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Alan Agresti</author>
</authors>
<title>Categorical Data Analysis.</title>
<date>1990</date>
<publisher>John Wiley &amp; Sons,</publisher>
<location>New York.</location>
<contexts>
<context position="40465" citStr="Agresti 1990" startWordPosition="6833" endWordPosition="6834">frequency words are extracted. As mentioned in the introduction, the received wisdom is that the windowing method is unreliable for events with a frequency of less than 5. By means of an analysis of the behavior of statistical tests for 2 x 2 contingency tables with sparse data, a method for optimizing the use of these tests has been developed. We hope that this technique will prove to be useful for domains in which the extraction of low-probability events is crucial. Appendix Log-Likelihood Ratio For the general contingency table, table (a) in Table 4, the log-likelihood ratio is defined by (Agresti 1990): G2 = 2 EEnyln( ii where trig = ni±n±iln±±. When we use the specific contingency table for hapax legomena, table (b) in Table 4, we obtain for a specific G2 of X the formula: X/2 = Ain +W C + (W A) ln + C In W + C A) W A&apos; = ln(W - A)w-A - In Ww + ln(W + C)w-Fc - In(W + C - = W-w (W + C - A)w±c-A (W - A)w-A (W + C)w-c Ww (W + C - A)w±c-A • ex/2 314 Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words We rewrite the latter equation to: eX/2wW (W — A)W—A eX/2wW(w _ A)A (W — A)&amp;quot; (w + qvv-Pc (W + C — A) w+c—A &apos; (W + C)&amp;quot; (W + C)c (W + C — A)A (W + C — A)w (W + C — A)c • Because W &gt; A and t</context>
</contexts>
<marker>Agresti, 1990</marker>
<rawString>Agresti, Alan. 1990. Categorical Data Analysis. John Wiley &amp; Sons, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kenneth W Church</author>
<author>Patrick Hanks</author>
</authors>
<title>Word association norms, mutual information, and lexicography.</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<pages>16--1</pages>
<contexts>
<context position="3657" citStr="Church and Hanks (1990)" startWordPosition="529" endWordPosition="532">al expert word types. Panel (a) shows the number of side-effect-related word types as judged by a medical expert (Nexpert) as a function of the first 23 frequency classes. Panel (b) shows the proportion of expert types/total corpus types (Ntotal) for the first 23 frequency classes. The horizontal dashed line indicates the mean proportion of 0.0619. It is common practice in information retrieval to discard the lowest-frequency words a priori as nonsignificant (Rijsbergen 1979). In Smadja&apos;s collocation algorithm Xtract, the lowest-frequency words are effectively discarded as well (Smadja 1993). Church and Hanks (1990) use mutual information to identify collocations, a method they claim is reasonably effective for words with a frequency of not less than five. A frequency threshold of five seems quite low. Unfortunately, even this lower frequency threshold of five is too high for the extraction of side-effect-related terms from our medical abstracts. To see this, consider the left panel of Figure 1, which plots the number of side-effect-related words in our corpus of abstracts as judged by a medical expert, as a function of word-frequency class. The side-effect-related words with a frequency of less than fiv</context>
<context position="34865" citStr="Church and Hanks 1990" startWordPosition="5882" endWordPosition="5885">using Fisher&apos;s exact test. Note that this technique is optimal for the extraction of the lowest-frequency words, leading to identical performance for G2 and Fisher&apos;s exact test for these words. For the higherfrequency words, Fisher&apos;s exact test leads to a slightly better recall with the same precision scores (0.31 for both tests). While we have observed reasonable results with both G2 and Fisher&apos;s exact test, we have not yet discussed how these results compare to the results that can be obtained with a technique commonly used in corpus linguistics based on the mutual information (MI) measure (Church and Hanks 1990): P(x, y) (4) 1(x, y) =-- log2 p(x)p(y) In (4), y is the seed term and x a potential target word. A high MI score for a given target word suggests an association between this target and the seed term. Or perhaps more precisely, a low MI score suggests a dissociation between target and seed word (Manning and Schiltze 1999). To compute recall, precision, and F, we require a cut-off value. As there is no theoretically motivated cut-off value, we vary it systematically. Panel (a) of Figure 7 plots the results for the of corpus. The x-axis represents the MI 312 Weeber, Vos, and Baayen Extracting th</context>
<context position="43118" citStr="Church and Hanks 1990" startWordPosition="7383" endWordPosition="7386">r&apos;s Exact Test. We used a network algorithm to compute Fisher&apos;s exact test (Mehta and Patel 1986; Clarkson, Fan, and Joe 1993). This algorithm is computationally intensive, but since many words have the same table, only a few tables have to be computed and their results can be cached. It takes an average of 50 seconds to compute one window size in a 100,000 word corpus on a Pentium 133MHz, 48MB Linux machine. Source code for the algorithm can be found at: http: //www. acm. org/pubs /cit at ions/ journals/toms/1986-12-2/p154-mehta/ Mutual Information Given the definition of Mutual Information (Church and Hanks 1990), P(x, y) I(x, y) = log2 p(x)p(y), we consider the distribution of a window word according to the contingency table (a) in Table 4. P(x) is the relative frequency of the target word, P(y) is the relative frequency of the seed term, and P(x, y) is the frequency of the target word in the window. In terms of the contingency table, we have: nu n++ I(x, y) = log2 n1+ s where S n++ n++ —u, we find that is the frequency of the seed. Substituting nn = ni+ — nu n++ I(x, y) = log2 n1+ S &apos; n++ n++ 1 = log2 n++ ni+ s n++(ni+ — n12) n++ 316 Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words = lo</context>
</contexts>
<marker>Church, Hanks, 1990</marker>
<rawString>Church, Kenneth W. and Patrick Hanks. 1990. Word association norms, mutual information, and lexicography. Computational Linguistics, 16(1):22-29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Douglas B Clarkson</author>
<author>Yuan-An Fan</author>
<author>Harry Joe</author>
</authors>
<title>A remark on algorithm 643: FEXACT: An algorithm for performing Fisher&apos;s exact test in r x c contingency tables.</title>
<date>1993</date>
<journal>ACM Transactions on Mathematical Software,</journal>
<pages>19--4</pages>
<marker>Clarkson, Fan, Joe, 1993</marker>
<rawString>Clarkson, Douglas B., Yuan-An Fan, and Harry Joe. 1993. A remark on algorithm 643: FEXACT: An algorithm for performing Fisher&apos;s exact test in r x c contingency tables. ACM Transactions on Mathematical Software, 19(4):484-488.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Dunning</author>
</authors>
<title>Accurate methods for the statistics of surprise and coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<pages>19--1</pages>
<contexts>
<context position="4896" citStr="Dunning (1993)" startWordPosition="731" endWordPosition="732">tal of 432 expert words (68.3%). The right panel of Figure 1 shows that the first 23 word-frequency classes are characterized by, on average, the same proportion of side-effect-related words. The a priori assumption of Rijsbergen (1979) that the lowest-frequency words are nonsignificant is not warranted for our data, and, we suspect not for many other data sets as well. The recent literature has seen some discussion of the appropriate statistical methods for analyzing the contingency tables that contain the counts of how a word is distributed inside and outside the windows around a seed term. Dunning (1993) has called attention to the log-likelihood ratio, G2, as appropriate for the analysis of such contingency tables, especially when such contingency tables concern very low frequency words. Pedersen (1996) and Pedersen, Kayaalp, and Bruce (1996) follow up Dunning&apos;s suggestion that Fisher&apos;s exact test might be even more appropriate for such contingency tables. We have therefore investigated for the full range of word frequencies whether there is an optimal window size with respect to recall and the number of significant words extracted using both the log-likelihood ratio and Fisher&apos;s exact test.</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>Dunning, Ted. 1993. Accurate methods for the statistics of surprise and coincidence. Computational Linguistics, 19(1):61-74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christopher D Manning</author>
<author>Hinrich Schiitze</author>
</authors>
<date>1999</date>
<booktitle>Foundations of Statistical Natural Language Processing, chapter 5, Collocations. The</booktitle>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>Manning, Schiitze, 1999</marker>
<rawString>Manning, Christopher D. and Hinrich Schiitze, 1999. Foundations of Statistical Natural Language Processing, chapter 5, Collocations. The MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cyrus R Mehta</author>
<author>Nitin R Patel</author>
</authors>
<title>Algorithm 643. FEXACT: A fortran subroutine for Fisher&apos;s exact test on unordered r x c contingency tables.</title>
<date>1986</date>
<journal>ACM Transactions on Mathematical Software,</journal>
<pages>12--2</pages>
<contexts>
<context position="42592" citStr="Mehta and Patel 1986" startWordPosition="7298" endWordPosition="7301">— A)! (W — A)!(W + C)!&apos; W(W-1)...(W—A+1)(W—A)! (W+C—A)! (W—A)! (W+C)(W+C-1)...(W+C—A+1)(W+C—A)!. P -, -_, = 315 Computational Linguistics Volume 26, Number 3 Because A = 1, 2, 3, ... , W &gt;&gt; A and therefore W + C &gt;&gt; A, we allow ourselves to formulate W! = WA(W — A)! and (W + C)! = (W + C)A(W + C — A)!. We therefore rewrite Fisher&apos;s exact test as follows: wA w!(w + c)! (W+ Wm( w + C)!&apos; The W/C-ratio is then: W i47-0 C 1 - VT3 • When N&gt; 20,000, the error of this equation is smaller than 0.001, Practical Issues Using Fisher&apos;s Exact Test. We used a network algorithm to compute Fisher&apos;s exact test (Mehta and Patel 1986; Clarkson, Fan, and Joe 1993). This algorithm is computationally intensive, but since many words have the same table, only a few tables have to be computed and their results can be cached. It takes an average of 50 seconds to compute one window size in a 100,000 word corpus on a Pentium 133MHz, 48MB Linux machine. Source code for the algorithm can be found at: http: //www. acm. org/pubs /cit at ions/ journals/toms/1986-12-2/p154-mehta/ Mutual Information Given the definition of Mutual Information (Church and Hanks 1990), P(x, y) I(x, y) = log2 p(x)p(y), we consider the distribution of a windo</context>
</contexts>
<marker>Mehta, Patel, 1986</marker>
<rawString>Mehta, Cyrus R. and Nitin R. Patel. 1986. Algorithm 643. FEXACT: A fortran subroutine for Fisher&apos;s exact test on unordered r x c contingency tables. ACM Transactions on Mathematical Software, 12(2):154-161.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Pedersen</author>
</authors>
<title>Fishing for exactness.</title>
<date>1996</date>
<booktitle>In Proceedings of the South-Central SAS Users Group Conference,</booktitle>
<pages>188--200</pages>
<location>Austin, TX.</location>
<contexts>
<context position="5100" citStr="Pedersen (1996)" startWordPosition="761" endWordPosition="762">i assumption of Rijsbergen (1979) that the lowest-frequency words are nonsignificant is not warranted for our data, and, we suspect not for many other data sets as well. The recent literature has seen some discussion of the appropriate statistical methods for analyzing the contingency tables that contain the counts of how a word is distributed inside and outside the windows around a seed term. Dunning (1993) has called attention to the log-likelihood ratio, G2, as appropriate for the analysis of such contingency tables, especially when such contingency tables concern very low frequency words. Pedersen (1996) and Pedersen, Kayaalp, and Bruce (1996) follow up Dunning&apos;s suggestion that Fisher&apos;s exact test might be even more appropriate for such contingency tables. We have therefore investigated for the full range of word frequencies whether there is an optimal window size with respect to recall and the number of significant words extracted using both the log-likelihood ratio and Fisher&apos;s exact test. In Section 2, we will show that indeed there seems to be an optimal window size for both statistical tests. However, a recurrent pattern of local optima calls this conclusion into question. Upon closer i</context>
</contexts>
<marker>Pedersen, 1996</marker>
<rawString>Pedersen, Ted. 1996. Fishing for exactness. In Proceedings of the South-Central SAS Users Group Conference, pages 188-200, Austin, TX.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ted Pedersen</author>
<author>Mehrnet Kayaalp</author>
<author>Rebecca Bruce</author>
</authors>
<title>Significant lexical relationships.</title>
<date>1996</date>
<booktitle>In Proceedings of the 13th National Conference on Artificial Intelligence. AAAI Press/The</booktitle>
<pages>455--460</pages>
<publisher>MIT Press,</publisher>
<location>Menlo Park, CA,</location>
<marker>Pedersen, Kayaalp, Bruce, 1996</marker>
<rawString>Pedersen, Ted, Mehrnet Kayaalp, and Rebecca Bruce. 1996. Significant lexical relationships. In Proceedings of the 13th National Conference on Artificial Intelligence. AAAI Press/The MIT Press, Menlo Park, CA, pages 455-460.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cornelis J van Rijsbergen</author>
</authors>
<title>Information Retrieval. Second edition.</title>
<date>1979</date>
<location>Butterworths, London.</location>
<contexts>
<context position="3514" citStr="Rijsbergen 1979" startWordPosition="512" endWordPosition="513">pert / Ntotal 0.15 100 0.10 50 0.05 5 10 15 20 10 15 20 Frequency Class Frequency Class (a) (b) Figure 1 Frequency distribution of medical expert word types. Panel (a) shows the number of side-effect-related word types as judged by a medical expert (Nexpert) as a function of the first 23 frequency classes. Panel (b) shows the proportion of expert types/total corpus types (Ntotal) for the first 23 frequency classes. The horizontal dashed line indicates the mean proportion of 0.0619. It is common practice in information retrieval to discard the lowest-frequency words a priori as nonsignificant (Rijsbergen 1979). In Smadja&apos;s collocation algorithm Xtract, the lowest-frequency words are effectively discarded as well (Smadja 1993). Church and Hanks (1990) use mutual information to identify collocations, a method they claim is reasonably effective for words with a frequency of not less than five. A frequency threshold of five seems quite low. Unfortunately, even this lower frequency threshold of five is too high for the extraction of side-effect-related terms from our medical abstracts. To see this, consider the left panel of Figure 1, which plots the number of side-effect-related words in our corpus of </context>
<context position="6413" citStr="Rijsbergen 1979" startWordPosition="965" endWordPosition="966">w to the number of words outside the window (complement). 302 Weeber, Vos, and Baayen Extracting the Lowest-Frequency Words In Section 3, we will relate the recurrent patterns of local optima at fixed windowcomplement ratios (henceforth W/C-ratios) to the distributions of the lowest-frequency words over window and complement. We will call attention to the critical effect of the choice of W/C-ratios on the significance of the lowest-frequency words. As the improvement in the extraction of side-effect terms from medical abstracts, as gauged by the F-measure, which combines recall and precision (Rijsbergen 1979), is small, we also applied the same approach to the extraction of Dutch verb-particle combinations from a newspaper corpus. In Section 4, we report substantially better results for this more lexical extraction task, which is subject to the same statistical behavior of the lowest-frequency words. In the last section, we will discuss the consequences of our findings for the optimization of word-based extraction systems and collocation research with respect to the lowest-frequency words. 2. An Optimal Window Size for Medical Abstracts? The MEDLINE bibliographic database contains a large number o</context>
<context position="22930" citStr="Rijsbergen 1979" startWordPosition="3848" endWordPosition="3849"> Table 2. log-likelihood ratio because the extreme saw-tooth-shaped pattern is substantially reduced. However, the use of Fisher&apos;s exact test does not eliminate the effect of the choice of window and complement size on the number of significant words and recall. At specific W/C-ratios, nonnegligible numbers of words with the lowest frequency of occurrence suddenly lose significance. Moreover, in our discussion thus far, we have not taken extraction precision into account nor the trade-off between precision and recall. For the assessment of overall extraction results, we turn to the F-measure (Rijsbergen 1979), a measure that assigns equal weights to precision (P) and recall (R): 2PR (3) F= P + Figure 4 plots precision, recall, and F as a function of the W/C-ratio. The common trade-off between recall and precision is clearly present for the smaller window sizes, with the F-measure providing a kind of average. Thus far, we have applied a common collocation extraction technique to a semantic association task. Actual extraction performance is low: F is maximally 0.17. To gauge 308 Extracting the Lowest-Frequency Words 0.3 0.2 0 1 Weeber, Vos, and Baayen 0.4 0.3 0.2 0. I 0.0 0.2 0.4 0.6 0.8 1.0 0.0 0.2</context>
</contexts>
<marker>Rijsbergen, 1979</marker>
<rawString>Rijsbergen, Cornelis J. van. 1979. Information Retrieval. Second edition. Butterworths, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Floor Rikken</author>
<author>Rein Vos</author>
</authors>
<title>How adverse drug reactions can play a role in innovative drug research. Pharmacy World and Science,</title>
<date>1995</date>
<pages>17--6</pages>
<contexts>
<context position="7316" citStr="Rikken and Vos 1995" startWordPosition="1096" endWordPosition="1099">equency words. In the last section, we will discuss the consequences of our findings for the optimization of word-based extraction systems and collocation research with respect to the lowest-frequency words. 2. An Optimal Window Size for Medical Abstracts? The MEDLINE bibliographic database contains a large number of abstracts of scientific journal papers discussing medical and drug-related research. Typically, abstracts discussing medical drugs mention the side effects of these drugs briefly. Information on side effects is potentially relevant for finding new applications for existing drugs (Rikken and Vos 1995). We are therefore interested in any terms related to the side effects of drugs. Before proceeding, it may be useful to clarify the way in which the present research differs from standard research on collocations. In the latter kind of research, there is no a priori knowledge of which combinations of words are true collocations. Moreover, the most salient collocations generally are found at the top of a list ranked according to measures for surprise or association, such as G2 or mutual information (Manning and Schtitze 1999). The large numbers of word combinations with significant but low valu</context>
</contexts>
<marker>Rikken, Vos, 1995</marker>
<rawString>Rikken, Floor and Rein Vos. 1995. How adverse drug reactions can play a role in innovative drug research. Pharmacy World and Science, 17(6):195-200.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank Smadja</author>
</authors>
<title>Retrieving collocations from text:</title>
<date>1993</date>
<booktitle>Xtract. Computational Linguistics,</booktitle>
<pages>19--1</pages>
<contexts>
<context position="3632" citStr="Smadja 1993" startWordPosition="527" endWordPosition="528">ution of medical expert word types. Panel (a) shows the number of side-effect-related word types as judged by a medical expert (Nexpert) as a function of the first 23 frequency classes. Panel (b) shows the proportion of expert types/total corpus types (Ntotal) for the first 23 frequency classes. The horizontal dashed line indicates the mean proportion of 0.0619. It is common practice in information retrieval to discard the lowest-frequency words a priori as nonsignificant (Rijsbergen 1979). In Smadja&apos;s collocation algorithm Xtract, the lowest-frequency words are effectively discarded as well (Smadja 1993). Church and Hanks (1990) use mutual information to identify collocations, a method they claim is reasonably effective for words with a frequency of not less than five. A frequency threshold of five seems quite low. Unfortunately, even this lower frequency threshold of five is too high for the extraction of side-effect-related terms from our medical abstracts. To see this, consider the left panel of Figure 1, which plots the number of side-effect-related words in our corpus of abstracts as judged by a medical expert, as a function of word-frequency class. The side-effect-related words with a f</context>
</contexts>
<marker>Smadja, 1993</marker>
<rawString>Smadja, Frank. 1993. Retrieving collocations from text: Xtract. Computational Linguistics, 19(1):143-177.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>