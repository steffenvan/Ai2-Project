<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.845807">
Prospects for Computer-Assisted Dialect Adaptation
</title>
<author confidence="0.5895156">
David J. Weber
Instituto Linguistico de Verano
Casilla 2492
Lima, 100 PERU
William C. Mann
</author>
<affiliation confidence="0.947045">
Information Sciences Institute
University of Southern California
Marina del Rey, California 90291
</affiliation>
<bodyText confidence="0.9967323">
This paper describes a project which has explored the feasibility of using a computer to
perform a significant portion of the changes required to adapt text from one dialect to
several others. This ongoing experiment has examined adaptation between various dialects
of Quechua, finding that a computer program may be an important tool for adaptation. An
experimental computer program was written and applied to text, and its output was field
tested in five target dialects. Preliminary results indicate that preprocessing text with a
computer may 1) enable informants who are not bi-dialectical (in the source and target
dialects) to produce adequate adaptations without much coaching from the
linguist/translator; 2) improve the quality of the resulting text; and 3) reduce time and
effortâ€”both in adaptation and in manuscript preparation.
</bodyText>
<sectionHeader confidence="0.990239" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999903">
This paper describes experiments in computer-
assisted adaptation of text from one dialect to several
others. The principal purposes of the initial explora-
tions reported here were:
</bodyText>
<listItem confidence="0.935971866666667">
1. To discover whether a computer program
could convert text in a dialect unintelligi-
ble to an informant into easily read
(possibly errorful) text in the informant&apos;s
own dialect.
2. To discover what kinds of dialect differ-
ence information are needed to support
an effective dialect-adapting computer
program.
3. To discover classes of dialect changes not
accounted for in a particular first-draft
computer program, thereby to provide
data for a detailed examination of wheth-
er each class of changes is suitable for
performance by a computer program.
</listItem>
<bodyText confidence="0.999479222222222">
In pursuit of these goals, an experimental computer
program was written and applied to text, and its out-
put was field tested.
In this paper the nature of the language situation is
discussed first, followed by a description of the com-
puter program. Then, procedures for checking the
computer-adapted text are described, followed by a
discussion of the results of this checking. Finally,
conclusions are stated.
</bodyText>
<sectionHeader confidence="0.811489" genericHeader="method">
2. The Nature of the Language Situation
</sectionHeader>
<bodyText confidence="0.999952">
The practical difficulty of dialect adaptation is pri-
marily determined by the language situation.
</bodyText>
<subsectionHeader confidence="0.998039">
2.1 The General Nature of the Language(s)
</subsectionHeader>
<bodyText confidence="0.969693">
This experiment was carried out in the subgroup of
Quechua called &amp;quot;central&amp;quot; Quechua by P. Landerman
[1]. These languages/dialects have the following char-
acteristics:
</bodyText>
<listItem confidence="0.927402666666667">
1. More of the structure of the language is in
the morphology than in the syntax.
2. Much of the discourse structure involves
the manipulation of the so-called &amp;quot;topic&amp;quot;
marker and the &amp;quot;evidential&amp;quot; suffixes (the
reportative, the assertative, ...).
</listItem>
<footnote confidence="0.7267385">
Copyright 1981 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted
provided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included on
the first page. To copy otherwise, or to republish, requires a fee and/or specific permission.
0362-613X/81/030165-13$ 01.00
</footnote>
<note confidence="0.973517">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 165
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<listItem confidence="0.989287">
3. The category of each morphological unit
strongly constrains what suffix may imme-
diately follow that unit. For example, the
intransitive verb root aywa- may not be
followed by the case marker -man, which
only follows nouns.
4. A significant amount of morphophonemics
is involved in getting from sequences of
</listItem>
<bodyText confidence="0.974286846153846">
morphemes to the correct sequence of
phonemes. The two such processes which
are most widely applied are first, morpho-
phonemic lowering, whereby a high vowel
(i.e., either /i/ or /u/) of certain suffixes
becomes /a/ when one of a certain small
class of suffixes follows and second,
foreshortening, whereby certain suffixes,
the final vowel of which is otherwise long,
appear with short, final vowels when fol-
lowed directly by certain other suffixes.
These characteristics are mentioned because the design
of the program responds to them.
</bodyText>
<subsectionHeader confidence="0.999563">
2.2 The Nature of the Dialect Differences
</subsectionHeader>
<bodyText confidence="0.9969176">
Six dialects were involved in this experiment. The
source dialect (abbreviated SD), i.e., the dialect from
which text was adapted, was Huallaga (Huanuco)
Quechua (abbreviated HgQ).
The target dialects (abbreviated TD) are the follow-
</bodyText>
<table confidence="0.503196166666667">
ing:
Panao (Huanuco) Quechua (PaQ)
Dos-de-Mayo (Huanuco) Quechua (DoQ)
Llata (Huanuco) Quechua (L1Q)
Yanahuanca (Pasco) Quechua (YaQ)
Junin (Junin) Quechua (JuQ)
</table>
<bodyText confidence="0.99997272">
The differences between these dialects are not triv-
ial, as should become clear in the discussion below.
Each of these would require separate reading materi-
als, but it is expected that the material of one dialect
of Huanuco could be adapted to the other dialects of
that department.
To what extent these dialects are mutually intelligi-
ble (pair-wise) is an open question. To our knowledge,
no formal tests have been made. The first author has
asked several HgQ speakers if they can understand the
PaQ speakers. Answers indicate that communication
is difficult. That HgQ speakers and JuQ speakers
cannot communicate effectively has been observed
firsthand. A rough metric of difference is this: adap-
tation between these dialects has required roughly 800
changes per 1000 words. Whatever the case, little or
no significance is attached to whether the dialects
involved are mutually intelligible or not; it is sufficient&apos;
that separate materials need to be prepared for the
dialects, as established by an overall consideration of
the language.
The dialect differences will now be discussed in
greater detail under three headings: the phonological
differences, the lexical differences, and the grammati-
cal differences.
</bodyText>
<subsectionHeader confidence="0.999319">
2.3 Phonological Differences
</subsectionHeader>
<bodyText confidence="0.998620076923077">
Table 1 indicates various regular sound changes
(RSC&apos;s) which have affected these dialects.
There are also some sound changes which are not
so .regular. For example, the change by which a
Vowel-Semivowel-Vowel sequence becomes a long
vowel (e.g. compare HgQ chaya- with DoQ cha:-
&apos;arrive&apos; and HgQ tiya- with DoQ ta:-) is not entirely
regular. Some changes affect very few words (for
example, the change by which /s/ is lost intervocali-
cally, e.g., HgQ wasi &apos;house&apos; but DoQ wayi, HgQ usa
&apos;flee&apos; but DoQ uwa), and these are handled in the
program as though they were simply lexical differ-
ences.
</bodyText>
<subsectionHeader confidence="0.998629">
2.4 Lexical Differences
</subsectionHeader>
<bodyText confidence="0.999973533333333">
The SD and TD may use very different roots to
express the same concept. For example, to express &apos;to
recover (from an illness), to get well&apos;, in HgQ one uses
allchaka:-, in L1Q one uses aliya:-, and in JuQ one
uses kachaka:-; &apos;to gather&apos; is expressed by shunta- in
HgQ and by qori- in L1Q; the pre-adjective meaning
&apos;very&apos; (used as in &apos;very big&apos;) is expressed by sumaq in
HgQ and by sellama in L1Q; &apos;to lie (tell a falsehood)&apos;
is expressed by llulla- in HgQ and by kaski- in YaQ
and JuQ ... et cetera. Sometimes the SD and TD pos-
sess the same root, but its meanings differ. Aru-
means &apos;to work&apos; in HgQ but &apos;to cook&apos; in dialects to the
west (Huaras, Ancash); yacha- means &apos;to know (how
to)&apos; in HgQ, whereas the cognate in JuQ (yatra-)
means &apos;to reside at&apos;.
</bodyText>
<subsectionHeader confidence="0.996008">
2.5 Grammatical Differences
</subsectionHeader>
<bodyText confidence="0.999880588235294">
The grammatical differences between dialects can
be divided into two general types, the morphological
differences (i.e. those which occur within a single
word) and the syntactic differences (i.e. those which
involve more than one word). Only the morphological
differences will be discussed in this section. They are
of several sorts:
First, in the central Quechua dialects, one of the
most drastic morphological differences involves how
the plurality of the subject or object of a clause is
marked in the verb of that clause. In L1Q there is
only one verbal plural marker, -ya:. In HgQ there are
five suffixes which indicate plurality within the verb.
There are conditions on the occurrence of these, e.g.,
-rka occurs only preceding the continuative suffix
-yka:. L1Q has only -ya:, HgQ has all except -ya:, and
the other dialects have only -:ri, -pa:ku, and -rka.
</bodyText>
<page confidence="0.906888">
166 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.493925">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<table confidence="0.727489333333333">
PaQ *e&gt; (tr&gt;ch) &apos;Y&gt;s *X&gt;1 *ii&gt;n *q&gt;h Phonemic Change
HgQ (ch&gt;ts) (ts&gt;s) (11&gt;1) (i &gt; n) (7&gt;h) Orthographic Form
DoQ
L1Q
YaQ
JuQ
</table>
<tableCaption confidence="0.998649">
Table 1. Regular sound changes.
</tableCaption>
<bodyText confidence="0.999820181818182">
Second, there are differences in the properties of
morphemes. For example, in HgQ the suffix -:ri
undergoes morphophonemic lowering, but in JuQ it
does not. In some dialects the durative suffix -ra:
foreshortens while in others it does not.
Third, a suffix in one dialect may simply be absent
in another. For example, L1Q has a verbal suffix -ski,
a suffix which HgQ not only lacks, but for which there
does not seem to be any corresponding suffix. HgQ
has a suffix -paq which is used with future verbs, while
YaQ has no such suffix.
Fourth, a single suffix in one dialect may corre-
spond to two different suffixes in another dialect. For
example, the relativizer -sha of HgQ corresponds to
both -sha and -nqa in JuQ, which has a temporal con-
trast in the formation of relative clauses which is not
present in HgQ. A similar case arises in the tense
systems of these two dialects: JuQ has a distinction
between a recent and a remote past tense which HgQ
lacks.
Fifth, a suffix in one dialect may be the collapse of
two suffixes in another. For example, in some dia-
lects, the suffix -mi followed by the postposition an
has formed a single suffix -man.
Sixth, suffixes may occur in different orders in
different dialects. For example, in HgQ -rqu precedes
the object marker -ma: (e.g. maqa-rqu-ma:-nki &apos;you hit
me (recent past)&apos;; in Huaras (Ancash) Quechua, it
follows the object marker: maqa-ma:-rqu-nki.
Seventh, the number of allomorphs of a suffix may
differ. For example, in HgQ the second person pos-
sessive suffix has allomorphs -yki, -ki, and -niki. JuQ
has all of these forms as well as -y.
Finally, a suffix may have different forms
(spellings) in the different dialects. For example, the
suffix which expresses similarity is -naw in HgQ, -nog
in L1Q and DoQ, and -nuy in JuQ; the continuative
suffix is -yka: in HgQ and -ya: in JuQ; the first person
plural conditional form is -shwan in HgQ and -chwan
in JuQ.
Not all of the morphological differences between
dialects have been mentioned in this section. The
computer program handles all of the kinds mentioned,
as well as others.
</bodyText>
<sectionHeader confidence="0.564919" genericHeader="method">
3. The Nature of the Computer Program
</sectionHeader>
<bodyText confidence="0.999969894736842">
An early pencil-and-paper experiment in adapting
from HgQ to the Quechua of Jacas Grande showed
that, of a set of changes suggested by certain Jacas
Grande speakers, approximately 95 percent were pho-
nological, lexical or morphological, and a significant
proportion of the residue were idiosyncratic rather
than systematic. This suggested that making the pro-
gram responsive to features beyond word boundaries
would not make the task of final correction of an
adapted text significantly easier. Thus the decision
was made to have the program treat one word at a
time.
The program is designed for Quechua, but not for
any particular dialects. In all of the experiments to
date, the source dialect has been HgQ.1
The program has three distinct phases of operation:
initialization, derivation of target-dialect root spellings,
and text-processing, each to be discussed in the fol-
lowing sections.
</bodyText>
<subsectionHeader confidence="0.999546">
3.1 Initialization
</subsectionHeader>
<bodyText confidence="0.999775">
In initialization, linguistic information about the
dialects involved is made available to the computer
program. We will discuss the information provided for
a source dialect, and then what is provided for a target
dialect.
</bodyText>
<footnote confidence="0.5588742">
1 After this paper was written in 1979, more experiments with
these dialects were performed. Experiments were also carried out
in other dialects, including some Bolivian dialects of Quechua which
were very different from these. There was also an independent
series of experiments with Mayan dialects of the Quichean group in
Guatemala. The program described here was modified to accom-
modate the other Quechua dialects. A new program was written for
the Mayan dialects, using the same general design. All of these
experiments met the same general goals as the experiments de-
scribed here. This paper is an abridgment of the 1979 version [3].
</footnote>
<note confidence="0.8776955">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 167
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<subsectionHeader confidence="0.96697">
3.1.1 Source Dialect Initialization
</subsectionHeader>
<bodyText confidence="0.9969826">
For the SD, two major lists and several small lists
are provided to the program. The largest list is a dic-
tionary of roots.
For each root, the dictionary entry (DE) contains
the following information:
</bodyText>
<listItem confidence="0.963449333333333">
1. The spelling of the root, i.e. the string of
characters by which the root is recog-
nized.
2. The name of the root:
a. If the root is native to Quechua,
the name is the proto-Quechua
form of that root.
b. If the root is a Spanish loan, the
name is the Spanish (phonemic)
form of that root.
3. An indication of whether the root is the
result of RSC&apos;s applied to the proto-
Quechua form (negative for Spanish
loans, names, ideophones, etc.).
4. Morphological category (e.g. noun, intran-
sitive verb, transitive verb, etc.).
5. An indication of whether its final vowel is
short or long.
6. An indication of whether its final vowel
has undergone the morphophonemic proc-
ess of lowering (from /i/ or /u/ to /a/).
</listItem>
<bodyText confidence="0.999727916666667">
Note that the dictionary will contain multiple DEs
for the various allomorphs of the same root (i.e., for
the various forms that the root may take). For exam-
ple, a DE corresponding to one of the allomorphs of
yayku- &apos;to enter&apos; has (1) yayku as the spelling, (2)
*yayku as the proto-Quechua form; (3) it undergoes
the RSC&apos;s; (4) it is an intransitive verb; (5) its final
vowel is short; (6) it has not undergone morphopho-
nemic lowering. All of this information is exploited by
the program as described below.
The second major list is the list of SD suffixes.
Each suffix DE contains the following information:
</bodyText>
<listItem confidence="0.967574269230769">
1. The spelling of the suffix.
2. An arbitrary name for the suffix, this
name to be common to all the DE&apos;s
corresponding to various allomorphs of
that suffix and used uniformly for both
SD and TD suffixes.
3. The morphological category of the unit
(root followed by zero or more suffixes)
to which this suffix can be applied.
4. The morphological category which results
from concatenating this suffix to an
appropriate unit.
5. An indication of whether its final vowel is
short or long.
6. An indication of whether it disallows an
immediately preceding long vowel.
7. An indication of whether its final vowel
has undergone the morphophonemic
process of lowering.
8. An indication of whether it causes mor-
phophonemic lowering.
9. A number which gives the &amp;quot;order class&amp;quot; of
the suffix, used to constrain sequences of
suffixes to occur in a monotonically non-
decreasing order of their order class num-
bers.
</listItem>
<bodyText confidence="0.898141476190476">
For example, the suffix -ka: (1) with arbitrary
name /passive/ (2) applies to transitive verbs (3) with
the result that the combination is an intransitive verb
(4); the final vowel is long (5) and the suffix does not
disallow a preceding long vowel (6); the final vowel
has not undergone morphophonemic lowering (7) and
it does not cause such lowering (8); the order class is
600, placing it in the large class of &amp;quot;derivational&amp;quot; suf-
fixes (not ordered with respect to other members of
the class, but ordered with respect to other &amp;quot;order
classes&amp;quot; of suffix).
In addition to these two major lists, there are se-
veral small lists:
1. The allomorphs which can only occur in
word-final position following a short vow-
el; one such DE has as its spelling m and
arbitrary name /MI/; there is another DE
in the suffix dictionary which has mi as its
spelling and the same arbitrary name.
These two DE&apos;s correspond to the two
allomorphs of the suffix -mi &apos;assertive&apos;.
</bodyText>
<listItem confidence="0.764052555555556">
2. The categories of morphological units
which are allowable in word-final posi-
tion, i.e. the categories of complete
words.
3. The table of orthographic changes, used to
convert the SD expression of vowel length
to a single form, and to remove SD ortho-
graphic reflections of low level phonetic
processes.
</listItem>
<bodyText confidence="0.730955666666667">
Source dialect initialization is independent of target
dialect information, and so is invariant with change of
target dialect.
</bodyText>
<subsectionHeader confidence="0.86454">
3.1.2 Target Dialect Initialization
</subsectionHeader>
<bodyText confidence="0.990793">
For a given TD, a dictionary of roots, a dictionary
of suffixes, and several other small lists, must be pro-
vided the program.
The small lists which must be made available are:
</bodyText>
<listItem confidence="0.5822325">
1. The non-cognate roots list: corresponding
SD and TD roots where the SD root and
</listItem>
<page confidence="0.734691">
168 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.950672">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.740787923076923">
the TD root are not cognate. For exam-
ple, the HgQ root lloqshi- &apos;to leave&apos; corre-
sponds to the YaQ root yarqu-.
2. The plural suffix list: all verbal suffixes in
the SD which indicate that the verb so
marked has a plural subject or object.
3. The drop list: suffixes to be deleted in
adapting from the SD to the TD. For ex-
ample, HgQ -paq is absent in YaQ and
must be dropped in adapting from HgQ to
YaQ, since there is nothing in YaQ to
which -paq corresponds. All of the SD
pluralizers must be on this list.
</bodyText>
<subsectionHeader confidence="0.999679">
3.2 Target Dialect Root Derivation
</subsectionHeader>
<bodyText confidence="0.95169034375">
TD roots are derived from SD roots so that it is not
necessary to enter a dictionary for the target dialect.
This eliminates the arduous task of collecting, organiz-
ing, and entering such a dictionary, and second allows
one to begin adaptation on the assumption that the
target dialect roots are related in some systematic way
to the source dialect roots.
TD roots are derived from the SD roots as follows:
The DE of each SD root includes the proto-Quechua
form of that root; the RSC&apos;s are applied to this form.
For example, suppose that the SD root is chaki &apos;dry&apos;.
In the DE for that root the proto-Quechua form is
given as *6aki. Now if the TD is DoQ, the change
from the table of RSC&apos;s for that dialect is applied
to the proto-Quechua form; the result (after ortho-
graphic adjustment) is tsaki. If, however, the TD were
L1Q, the changes 6&gt;Â¢ followed by Â¢&gt;s would be ap-
plied to the root with the resulting L1Q word saki.
(These changes could be made as one change, 6&gt;s, but
it is no less convenient to handle it as two steps, which
is clearly how the change came about historically).
The process uses a simple substring substitution algor-
ithm.
After the RSC&apos;s have applied, a TD DE is made for
that root by substituting the derived spelling for the
SD spelling.
Three types of roots must not undergo the RSC&apos;s:
(1) roots for which the TD root is simply not cognate
with the SD root, (2) native Quechua words which do
not undergo the sound changes, such as names
(personal, place, . . .) and ideophones, and (3) words
borrowed from Spanish.
</bodyText>
<subsectionHeader confidence="0.999111">
3.3 Text Processing
</subsectionHeader>
<bodyText confidence="0.999793">
After initialization, a TD text may be produced
from a SD text. The text is treated word by word.
Each word passes through 1) an analysis process, and
2) a synthesis process, which are independent.
</bodyText>
<subsectionHeader confidence="0.98629">
3.3.1 Word Analysis
</subsectionHeader>
<bodyText confidence="0.999988074074074">
Word Analysis (WA) transforms a word to a set of
distinct readings, each reading consisting of a sequence
of morpheme names and an indicator marking the
presence or absence of pluralization.
The first step in WA is rewriting vowel length
(which in the practical orthography is written with
double vowels, e.g. &amp;quot;aa&amp;quot;), as a vowel followed by a
colon. This is necessary because the vowel and its
length may not be parts of the same morpheme. For
example, aywaa &apos;I go&apos; is composed of the morphemes
aywa- &apos;to go&apos; and -: &apos;first person&apos;. The change makes
it possible to recognize all morphemes according to
their spellings.
WA seeks to decompose a word into a sequence of
morphemes. It works from left to right, first seeking a
root whose spelling matches the beginning of the
word, and if successful, then seeking a suffix whose
spelling matches some immediately following sequence
of characters, repeating this process until all the char-
acters of the word have been matched by the spellings
of DE&apos;s. WA is organized in such a way that it con-
siders all possible sequences of DE&apos;s (root followed by
any number of suffixes) whose spellingsâ€”taken to-
gether in sequenceâ€”match the characters of the word.
The algorithm is a computationally-straightforward
recursive exhaustive search.
However, this character-matching process is not a
sufficient basis for arriving at correct analyses; many
sequences of morphemes whose spellings (taken to-
gether) match the characters of the word will be unac-
ceptable, because the language imposes constraints on
the allowable decompositions. To eliminate spurious
analyses, the program&apos;s ongoing analysis is corre-
spondingly constrained. For example, if character
matching alone is used to analyze aywaykan, there are
56 decompositions into morphemes. If, however, the
constraints are imposed, then only one of these de-
compositions is passed as legitimate.
The constraints incorporated into WA are of two
types. The first type is invoked whenever there is a
match with some suffix; such constraints test the ac-
ceptability of that suffix as the successor of the imme-
diately preceding morpheme (be it root or suffix). For
example, one possible decomposition of chakiykan &apos;it
is drying&apos; is the root chaki &apos;foot&apos; (from the proto-
Quechua root *naki/) followed by -yka &apos;continuative&apos;
and then by -n &apos;third person&apos;. At the stage where the
suffix -yka is matched, the constraints include a cate-
gory check, which fails in this case because the root is
a noun and the continuative suffix may only follow
verbs. By contrast, when the match is to the root
chaki &apos;to dry&apos; (from the proto-Quechua root *leakii)
and then -yka is matched, this same test does not fail
and this decomposition goes on to be the successful
</bodyText>
<note confidence="0.9420195">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 169
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.997315448275862">
analysis. Such tests help reject bad decompositions
before a great deal of computation is spent on them.
The second type of constraint is invoked when the
word is completely decomposed into morphemes. For
example, the word aywaykaran &apos;he was going&apos; can be
decomposed as aywa-yka-ra-n where -yka is taken to
be one of the allomorphs of the suffix /-YKU/. This
decomposition passes all of the constraints which ap-
ply to adjacent morphemes, but not the overall const-
raint that certain allomorphs (-yka as an allomorph of
/-YKU/ among them) are appropriate only if one of a
certain small class of suffixes (-chi, -mu, etc). follows
somewhere in that word. The correct analysis involves
the same morpheme boundaries but with -yka as an
allomorph of the suffix /-YKA:/ &apos;continuative&apos;:
aywa-yka-ra-n (go-continuative-past-third:person).
All morpheme decompositions of a word which
pass the tests are collected. Any morpheme sequence
containing a plural morpheme is marked as plural, and
the plural morpheme is deleted. The resulting set of
marked, depluralized readings is the final result of
WA.
When WA does not yield any reading, the SD word
passes unchanged through the remainder of the pro-
gram and appears in brackets in the final text. If the
word fails to be analysed because its initial characters
do not match any root in the dictionary, that word is
entered on a list which is periodically reviewed to up-
grade the dictionary of roots.
</bodyText>
<subsectionHeader confidence="0.961327">
3.3.2 Word Synthesis
</subsectionHeader>
<bodyText confidence="0.9999647">
Word Synthesis (WS) derives a TD word for each
reading produced by WA. What passes from WA to
WS for each reading is a sequence of morpheme names
and the plurality tag of each sequence. From this
sequence are dropped any morpheme names which are
listed in the drop list, and substitutions of non-cognate
TD roots are made. For the remaining morphemes,
each name is replaced by its entire TD DE (so that its
properties are characteristic of the TD rather than the
SD). The next step is repluralization.
Repluralization inserts a plural morpheme into the
morpheme sequence according to the pluralization
scheme of the TD. Repluralization is dialect specific,
and requires different methods for different dialects.
The method appeals to the order of various classes of
suffixes to find the appropriate niche for the plural-
izer.
The next step is to select for each morpheme the
allomorph which is compatible with the other mor-
phemes in the word. The allomorphs of a morpheme
are represented by DE&apos;s which share the name of the
morpheme. This set of DE&apos;s is reduced by successive
application of constraints until a single DE remains.
When the choices have been made for all the mor-
phemes of the sequence, the spellings of the chosen
DE&apos;s are concatenated to form the TD word.
Then all of the separately developed renderings of
a word are collected, and any duplicates are eliminat-
ed. Ordinarily, this results in a single word. If there
are multiple renderings, they are separated by
slashes(//). For example, HgQ kasha has two possi-
ble analyses: 1) the root kasha (&apos;thorn&apos;) and 2) the
root ka (&apos;be&apos;) followed by the suffix -sha, (past par-
ticiple). In going to LIQ, the first of these analyses
will yield kasha; the second will yield kashqa. Thus
the resulting L1Q text will have kasha/ /kashqa corre-
sponding to HgQ kasha.
The final step is to convert the word(s) to the TD
orthography, representing length by doubled vowels
and making any other necessary changes.
</bodyText>
<subsectionHeader confidence="0.989963">
3.4 The Program&apos;s Effects on Single Words
</subsectionHeader>
<bodyText confidence="0.999533405405405">
This section roughly characterizes how the program
treats certain actual words, illustrating how certain
dialect differences are handled. The forms given be-
low are only suggestive of how the program operates;
they are not the actual form of the word in the com-
puter, and possible alternative readings are not shown.
(Capital letters are used for the arbitrary names of
suffixes; the asterisk preceding roots indicates that the
form is a proto-Quechua form). The pair of examples
in Table 2 illustrates the rather dramatic difference
which arises in words containing pluralizers in adapt-
ing from HgQ to LIQ.
In (1), -rka is a pluralizer, whereas in (1&apos;) it is the
allomorph of -RKU which has undergone morphopho-
nemic lowering, in this case because it is followed by
-:RI. In the first example -rka is eventually dropped
because it is a pluralizer; in the second it eventually
becomes -rku because once -:RI is dropped there is no
longer any reason for the vowel to be lowered. Note
that in the second example, the pluralizer which is
inserted (-YA:) occupies the same position as the SD
pluralizer (-:RI), but in the first example the inserted
pluralizer occupies a different position than the SD
pluralizer (in this case, -rka). Further note that the
allomorph selected for the pluralizer -YA: has length
in the second example but not in the first; this is be-
cause in the second example the following suffix
(-NA) does not foreshorten, whereas in the first exam-
ple the following suffix (-3) does. A similar case in-
volves -YKA: in the first example: in the SD the cor-
rect allomorph is -yka because it immediately precedes
-n, which foreshortens, whereas in the TD the correct
allomorph is -yka: because it immediately precedes
-YA:, which does not foreshorten.
Four tables of examples will now be given (with
fewer stages) which illustrate cases in which a TD root
replaces an SD root which has different properties
</bodyText>
<page confidence="0.580302">
170 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.822717">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<table confidence="0.867979666666667">
Given:
SD orthographic form:
WA develops, in succession:
</table>
<listItem confidence="0.908703115384615">
length converted:
segmentation:
morphophonemic form:
plurality handled:
WS develops, in succession:
re-pluralization:
allomorph selection:
TD orthographic form:
(1) aywarkaykan
(2) aywarkaykan
(3) aywa-rka-yka-n
(4) *aywa-RKA-YKA:-3
(5) (*aywa-YKA:-3)+PL
(6) *aywa-YKA:-YA:-3
(7) aywa-yka:-ya-n
(8) aywaykaayan
&apos;they are going&apos;
(1&apos;) aywarkaarinanpaq
(2&apos;) aywarka:rinanpaq
(3&apos;) aywa-rka-: ri-na-n-paq
(4&apos;) * aywa-RKU-: RI-NA-3 P-PAQ
(5&apos;) (*aywa-RKU-NA-3P-PAQ) +PL
(6&apos;) *aywa-RKU-YA:-NA-3P-PAQ
(7&apos;) aywa-rku-ya:-na-n-paq
(8&apos;) aywarkuyaananpaq
&apos;in order that they go&apos;
</listItem>
<tableCaption confidence="0.998615">
Table 2. The program&apos;s effects on two plural words.
</tableCaption>
<table confidence="0.821670538461538">
SD orthographic form:
segmentation:
WA output:
re-pluralization:
allomorph selection:
TD orthographic form:
warantin
wara-ntin
(*wara-NTIN)-notPL
*wara-NTIN
waray-nintin
waraynintin
&apos;day after tomorrow&apos; (&lt; wara(y) &apos;tomorrow&apos;)
</table>
<tableCaption confidence="0.995932">
Table 3. Consequences of root change.
</tableCaption>
<bodyText confidence="0.793921666666667">
SD orthographic form:
segmentation:
morphophonemic form:
re-pluralization:
allomorph selection:
TD orthographic form:
chayaykun
chaya-yku-n
(*aya-YKU-3)-notPL
*4ya-YKU-3
traykun
&apos;he arrives (directly)&apos;
chayamun
chaya-mu-n
(*aya-MU-3)-notPL
*4ya-MU-3
traamun
&apos;he arrives (here)&apos;
</bodyText>
<tableCaption confidence="0.982354">
Table 4. Selection of root allomorphs for length.
</tableCaption>
<bodyText confidence="0.999639529411765">
than the TD root. In the example of Table 3 the SD
root ends with a vowel, whereas the TD root ends in a
consonant. The suffix -ntin has an allomorph -nintin
which occurs following consonants and long vowels, so
this is the appropriate allomorph for the TD.
In the examples of Table 4 the SD root (chaya-) has
but one allomorph, but in the TD (YaQ) the corre-
sponding root has both long and short allomorphs. In
the first example of this table the long form does not
appear because the root immediately precedes -yka,
which foreshortens. In the second example the length
occurs because -mu does not foreshorten.
In the examples of Table 5 the SD root (Iloqshi-) is
replaced in the TD (YaQ) by a root which has two
allomorphs. In the first example here the final vowel
of that root is /a/ because of morphophonemic lower-
ing caused by -mu; in the second it is /u/ because no
</bodyText>
<note confidence="0.931635">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 171
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.911900090909091">
SD orthographic form:
segmentation:
WA output:
re-pluralization:
allomorph selection:
TD orthographic form:
lloqshimun
lloqshi-mu-n
(*lloqshi-MU-3)-notPL
*yarqu-MU-3
yarqa-mu-n
yarqamun
&apos;he leaves
(said from within)&apos;
lloqshikun
lloqshi-ku-n
(*lloqshi-KU-3)-notPL
*yarqu-KU-3
yarqu-ku-n
yarqukun
&apos;he leaves
(said from without)&apos;
</bodyText>
<tableCaption confidence="0.980495">
Table 5. Selection of root allomorphs for lowering.
</tableCaption>
<bodyText confidence="0.830032625">
SD orthographic form:
segmentation:
WA output:
re-pluralization:
allomorph selection:
TD orthographic form:
suwamannaw
suwa-man-naw
(*suwa-MAN-NAW)-notPL
*suwa-MAN-NAW
suwa-man-noq
suwamannoq
suwa-ma-n-naw
(*suwa-MA:-3-NAW)-notPL
*suwa-MA:-3-NAW
suwa-ma-n-noq
</bodyText>
<tableCaption confidence="0.736272">
Table 6. A single word form resulting from an ambiguous analysis.
</tableCaption>
<bodyText confidence="0.996138714285714">
suffix follows in the word which causes morphopho-
nemic lowering.
In the example of Table 6 the SD word is ambigu-
ous (between &apos;as though to a thief&apos; and &apos;as though to
steal me&apos;). It is seen that this ambiguity produces only
one TD word, a word which is ambiguous in the TD in
the same way as it is ambiguous in the SD.
</bodyText>
<subsectionHeader confidence="0.996727">
3.5 Program Design Problems: Ambiguity and the
Control of Complexity
</subsectionHeader>
<bodyText confidence="0.996457326530612">
The problem of ambiguity strongly influenced the
design and the allocation of development effort. We
now feel that ambiguity control is one of the major
considerations in designing an adaptor. The work of
coping with ambiguity and complexity is presented
below in a series of retrospective (non-chronological)
design decisions.
Given our previous decision that the program
should work on a word-by-word basis, one could (in
principle only) design an adaptor which would work
perfectly, without any internal linguistic knowledge
except a table of word correspondences. The program
would, for each given word, look up the adapted word.
The difficulty with this for Quechua is the practical
impossibility of providing the word table. Morphologi-
cal productivity would yield a table of millions of
words, simple in structure but of unmanageable size.
Also, the process of building the word table would
continue indefinitely, and much of the relevant, sys-
tematic knowledge could not be used at all.
This perception leads to the initial design decision:
Decision 1: The basic linguistic unit
which the program manipulates should be
the morpheme rather than the word.
Since we would like to be able to adapt from many
SD&apos;s to many TD&apos;s with minimal effort of change, this
leads to another decision on the particular morphemes
to be used:
Decision 2: The program should analyze
text into proto-Quechua morphemes
where appropriate, and should synthesize
text from proto-Quechua morphemes by
recapitulating actual historical processes.
Discovering words in text is trivial, but discovering
distinct mbrphemes is not. The decision to use mor-
phemes as the basic unit makes it necessary for the
program to contain an analyzer to reduce individual
words into sequences of morphemes. This is the major
part of the Word Analyzer above.
One might hope that distinct morphemes would
have distinct spellings, and that they could be discov-
ered effectively by seeking concatenations of mor-
pheme spellings which would yield the word. Unfortu-
nately, as we have seen, spelling is a hopelessly inade-
quate basis for morphological analysis. Use of spelling
alone leads to truly amazing numbers of analyses, as
was demonstrated above with aywaykan. This is so
frequent that, for efficiency, the program must never
even produce the set of spelling-based readings inter-
</bodyText>
<page confidence="0.610907">
172 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.981906">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.982163835443038">
nally. Rather, the analysis must be constrained by
knowledge other than spelling. This fact leads to an-
other design decision:
Decision 3: The program must incorpo-
rate a strongly constraining morphology in
its analysis.
The morphology used [2] makes it possible to ex-
ploit the characteristic of Quechua (mentioned in 2.1)
that the category of a morphological unit strongly
constrains what suffix may follow the unit. On the
basis of the morpheme categories alone, the number of
distinct analyses of aywaykan drops from 56 to 2. The
program applies these morphological constraints as the
analysis of a word proceeds, so that an invalid analysis
can be rejected as soon as it is proposed if it contains an
invalid pair of adjacent morphemes, rather than delay-
ing rejection until the word analysis is complete.
The program also uses several other kinds of cri-
teria for rejecting analyses, including a set of pro-
grammed tests which apply to whole words, used as
soon as an analysis is complete. They eliminate ana-
lyses containing defects such as incorrect lowering,
improper ordering, and the improper use of certain
special morphemes such as -paq &apos;future&apos;.
These methods eliminate nearly all of the potential
ambiguity (well over 99 percent of it), but still leave a
significant residue. In the experiment, about 25 per-
cent of the words were still ambiguous under all of
these constraints applied jointly, and this ambiguity
contributed about 1 excess reading for every 2 words.
If this amount of ambiguity were to appear in the final
text, it would be a significant impediment. Fortunate-
ly, as we will see, most of it goes away.
In synthesizing words in the target dialect from
their morpheme definitions, the many allomorphs and
associated conditions must be treated properly. A TD
morpheme may have multiple allomorphs in surface
forms of the TD, only one of which is allowed by con-
ditions in the remainder of the word. There is a great
diversity of conditions. Composing TD words without
reference to these conditions would yield incompre-
hensible text. This leads to the final design decision:
Decision 4: The program must contain
linguistically sound methods for selecting
correct allomorphs in context.
About one third of the words in our experimental
text had possible allomorph variants when adapted to
JuQ. Virtually all of this variation is subject to condi-
tioning, which can be represented computationally by
systematic environmental filtering rules. Application
of this elaborate collection of environmental filtering
rules causes essentially all allomorph variation to be
resolved during synthesis.
The final ambiguity-resolution &amp;quot;method,&amp;quot; the one
which resolves about 93 percent of the residue, is not
really a method at all. It turns out that when the vari-
ous readings of an ambiguous SD word are synthesized
in the TD, they seldom differ. The predominant case
is that only one spelling (rendering) arises from an
ambiguous word, so that the final text has only a sin-
gle word form even though the analysis and synthesis
of that word were ambiguous. On a 576-word sample
of text adapted to JuQ, there were 151 ambiguous
words. For these, WA produced 850 readings (1.47
readings per word). But the &amp;quot;collapsing effect&amp;quot; re-
duced the number of readings to 587 (1.02 readings
per word), so that only 11 words were indicated as
ambiguous in the final text.
In checking and correcting these texts, native
speakers never had any difficulty in quickly selecting
one of the alternative words as being correct, and
agreed on all selections. The number of alternatives in
the resulting TD text did not present difficulties for
the checker/editors. The final level of ambiguity pres-
ented no experimental difficulties of any kind.
Given the necessary complexity and diversity of the
symbol processing required by the design decisions
above, the programming language and related software
support must provide:
</bodyText>
<listItem confidence="0.998956">
1. Flexible facilities for manipulating charac-
ter strings,
2. Easy representation of processes with
elaborate functional decomposition,
3. Recursive processes,
4. Strong tools for defining, testing, revising
and combining processes.
</listItem>
<bodyText confidence="0.999819454545455">
These requirements (among others) led to our
choosing INTERLISP (a dialect of LISP) as the pro-
gramming language. LISP encourages functional de-
composition of one&apos;s program; this has been vital to
keeping the whole enterprise comprehensible and con-
trollable. This paper&apos;s description of the program does
not reflect the strong functional decomposition em-
ployed. There are actually 111 functions in the cur-
rent version of the program, and a similar number of
other (tool) functions were defined for managing dic-
tionaries, printing statistics and other activities.
</bodyText>
<footnote confidence="0.3829615">
4. Procedures for Checking the Computer
Adapted Text
All during the months-long development of the
program there was an understanding that its effective-
</footnote>
<note confidence="0.962897">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 173
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.999975941176471">
ness would have to be examined in some sort of field
test. Subsequent development and application would
depend on the outcomes of the testing, i.e. on how
readable and correctable the computer-produced text
really is. In particular, we were prepared to embed
the present program in a more complex program whose
scope was sentences or larger units if that had proved
necessary.
To test the program&apos;s adequacy, samples of various
types of text were selected for trial adaptation, and all
samples were adapted into five target dialects. In the
summer of 1978 these texts were taken by the first
author to the areas where the target dialects are spo-
ken. They were presented to native speakers of the
various dialects, and their reactions and suggestions
for revision were noted. This section presents the test-
ing, and Section 5 describes the results.
</bodyText>
<subsectionHeader confidence="0.999668">
4.1 The Nature of the Texts Used in the Experiment
</subsectionHeader>
<bodyText confidence="0.9999905">
The source texts used for this experiment consisted
in the following: two folktales &amp;quot;Hombre y Oso&amp;quot;
(approximately 150 words) and &amp;quot;Moco y Mishi&amp;quot;
(approximately 250 words), two passages from the
translation of the Gospel of Mark 2:1-12 (The Healing
of the Paralytic) and 14:12-15:41 (The Last Supper
through The Death of Jesus), and a short personal
narrative about an accident.
</bodyText>
<subsectionHeader confidence="0.999312">
4.2 Procedure Used to Check the Texts
</subsectionHeader>
<bodyText confidence="0.999980510638298">
The procedures used to check these texts varied
from helper to helper as a function of his ability to
read and to grasp what was expected of him by way of
editing or correcting. The most knowledgeable helper
took pen in hand and proceeded to correct and edit
with intervention (by the first author) only on certain
matters of spelling (where the official orthography â€”
which was not known to him â€” was in conflict with
his intuitions based on the writing of Spanish). This
helper fully grasped the task of editing: he would
frequently back up (as he proceeded through the
texts) to read several sentences before the one he was
focusing on to see that the passage read smoothly. He
made a fair number of changes in word order and
some that were clearly intended to bring the discourse
structure of the text more into line with his conception
of what it should be. (This raised an interesting prob-
lem, one which has no obvious solution, namely how
can one distinguish between those changes which are
essential to the intelligibility and good style of the TD
text from those which make the text conform to a
personal style? And how would one train a
checker/editor to distinguish between these?).
The most common situation was that the helper
was illiterate (or that he had rather minimal reading
skills in Spanish). In this case it was necessary to read
the text to him sentence by sentence, pausing and
soliciting corrections, suggestions, and impressions if
these were not forthcoming, and monitoring his under-
standing of the text. The main drawback of this me-
thod is that it was difficult (usually nearly impossible)
to get good reactions as to the discourse features of
the text. (And on a second reading, the helpers were
unwilling to criticize the text which they had just cor-
rected).
Some text was checked merely by handing it to a
person (who in each case was a teacher at the second-
ary or university level) with the instruction to correct
itâ€”to make it good text for his dialect. In these cases
very little was done; far fewer changes were made
than in any case where a linguist worked with the
corrector/editor.
Despite these and other drawbacks, it was felt that,
by and large, the checking and correcting did bring the
TD texts extremely close to what would be adequate
even for Scripture translation. (Of course, this is a
subjective judgment).
</bodyText>
<sectionHeader confidence="0.884273" genericHeader="method">
5. Results of Checking the Computer Adapted Text
</sectionHeader>
<bodyText confidence="0.9800174">
Checking the computer-adapted text with native
speakers of these dialects has revealed both the gener-
al strength of the program an an interesting residue of
disparities between computer-produced text and text
after subsequent corrective editing.
</bodyText>
<subsectionHeader confidence="0.998001">
5.1 General Results
</subsectionHeader>
<bodyText confidence="0.999971944444444">
The results of testing the computer-adapted texts in
the areas where the various target dialects are spoken
has been very encouraging.
First, thousands of changes were correctly made by
the program. Samples of the text adapted to L1Q were
counted to estimate the program&apos;s quantitative effects.
It changed about 760 morphemes per 1000 words of
text. The native helper suggested about 190 additional
changes per 1000 words of text, and these changes
include some which are editorial rather than dialect-
related. (This was an extreme; all helpers for other
dialects suggested far fewer changes of the same ma-
terial). So the program seems capable of doing be-
tween 80 percent and 95 percent of the necessary or
advisable dialect-related changes. These figures are of
less practical importance than the qualitative fact that
the program made these texts fully comprehensible to
the native helpers.
</bodyText>
<page confidence="0.666688">
174 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.987341">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<bodyText confidence="0.999960901960785">
Of the corrections which field testing brought to
light, a rough estimate suggests that well over 90 per-
cent could also have been made (and eventually will
be made) by the program by simple modifications of
the data lists made available to it. (The bulk of these
changes involve the spelling of Spanish loans, which in
the experimental tests were written as in Spanish but
which will eventually be written according to Quechua
orthography). This means that only a very small resi-
due of changes will not be made by the program, these
changes being left for the checker/editor.
The computer-adapted text was â€” with very few
exceptions â€” completely intelligible to the
checker/editors, and this would not have been the
case for material which had not been pre-adapted.
Thus it seems safe to say that one consequence of
computer adaptation is that the resultant text could be
checked by a person who knew only the target dialect,
his task being to make the text sound more natural in
his dialect. On the same basis, computer adaptation
can make an existing translation in a related language
or dialect accessible to a native translator.
It has been our feeling that pre-adapting with a
computer would enable the checker/editor to consider
more significant changes because it relieved him of the
(overwhelming number of) rather superficial and sys-
tematic changes. This experiment has not verified this
(nor contradicted it) because those who helped were
not trained in the task of checking/editing, whichâ€”it
is assumedâ€”will be the case in the eventual applica-
tions. (Training checker/editors, who will work from
pre-adapted text, seems a reasonable task. By con-
trast, to train persons to make all the changes, working
directly from the SD text, would be a formidable if not
impossible task. But by first preadapting the text, that
which must be done manually by the checker/editor,
and consequently what he must be trained to do, is
reduced to well within the feasible).
One implication of the results of this experiment is
that the range of dialects for which there should be a
single primary translation has been considerably en-
larged. Mutual intelligibility is no longer an adequate
basis on which to make decisions about the allocation
of linguistic or translation personnel. Mutual intelligi-
bility may be very low for some extremely trivial, su-
perficial reason, and even if it is low because of a
great many, seemingly complex factors, so long as they
are systematic, computer adaptation may make other-
wise unintelligible text quite intelligible to a speaker of
the target dialect, intelligible enough that he can edit it
without some other means of discovering its meaning.
</bodyText>
<subsectionHeader confidence="0.9978535">
5.2 Disparities Between Computer-Adapted and
Final TD Texts
</subsectionHeader>
<bodyText confidence="0.999924">
This section lists kinds of text changes which were
discovered to be necessary to make the computer-
adapted texts better conform to the TD&apos;s. One point
seems inevitable: there will always be a non-trivial
residue of changes which cannot be done by the
computer. Thus, it will always be necessary that the
TD texts be manually corrected or edited. So rather
than strive to make the program do all the changing
possible, it is wise to be content with a program which
does a significant amount of the changesâ€”those &amp;quot;low-
level&amp;quot; changes which are systematicâ€”and not unduly
complicate the program by attempting to make it do
an unrealistic amount. The proportion of all of the
desired changes which is accomplished by the present
program seems entirely satisfactory; no further devel-
opment is needed to change the balance between man-
ual and programmed changes.
It was gratifying to find that, although some of
these residual kinds of changes (described below) were
difficult or impossible to program, they caused little
difficulty for the checkers in the field test. The raw
computer-adapted text was as good as a conventional
rough draft, and could have been used in the same
way.
</bodyText>
<listItem confidence="0.627363">
1. Changes due to cultural differences
</listItem>
<bodyText confidence="0.999980705882353">
The Quechua culture is not completely homogene-
ous throughout the Andes; there are cultural differ-
ences which give rise to certain problems in adapting
from one dialect to another.
In HgQ, the expressions for the time of day are
tied to the practice of chewing coca, e.g., chaqcha inti
(coca:chewing sun) mid-morning coca break (roughly
at 10:30 AM) and mallway inti or mallway oora, which
refers to the time of the mid-afternoon coca break. In
other areasâ€”Junin, for exampleâ€”where the chewing
of coca plays a lesser part in the culture, time is not
indicated by reference to coca chewing, presumably
because there are no &amp;quot;institutionalized&amp;quot; times for
chewing. In these areas time is told either by expres-
sions borrowed from Spanish, e.g., las tres &apos;3 o&apos;clock&apos;
or by reference to the position of the sun, e.g., inti
yarpunan oora (sun falling time) &apos;5:00-6:00 PM&apos;.
</bodyText>
<sectionHeader confidence="0.924353" genericHeader="method">
2. Different complements
</sectionHeader>
<bodyText confidence="0.999598333333333">
In HgQ, the complement of a phasal verb2 is an
infinitive (object) complement; e.g., miku-y-ta
qallaykusha (eat-INF-ACC he:began) &apos;He began to
eat.&apos; But in L1Q, the complement to a phasal verb is
an adverbial clause, e.g., miku-r qalaykusha (eat-ADV
he:began) &apos;He began to eat.&apos;
</bodyText>
<note confidence="0.9564905">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 175
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<sectionHeader confidence="0.678157" genericHeader="method">
3. Case
</sectionHeader>
<bodyText confidence="0.932374">
In HgQ forgiveness is expressed by the verb
perduna- (borrowed from the Spanish perdonar) and
that of which one is forgiven is expressed by an
accusative noun phrase; e.g., noqa qam-ta huchayki-ta
perdunaami (I you-ACC your: sin-ACC I:forgive:you)
&apos;I forgive you your sin.&apos; In DoQ, it is expressed by an
ablative noun phrase: noqa qam-ta huchayki-pita
perdunaami (I you your:sin-ABLATIVE I:forgive:you)
&apos;I forgive you from your sin.&apos;3
</bodyText>
<listItem confidence="0.554646">
4. Spanish loans
</listItem>
<bodyText confidence="0.99582725">
The process of adaptation must deal with differ-
ences in what elements of Spanish have been bor-
rowed and how they have been assimilated. So, adapt-
ing from HgQ, we have:
</bodyText>
<listItem confidence="0.978448227272727">
1. A Spanish loan changed to a native Que-
chua word, e.g., HgQ alberti- becoming
LIQ yaasi- &apos;to advise&apos;.
2. A Quechua word becoming a Spanish loan,
e.g., HgQ pachaku- becoming L1Q
posadaku- &apos;to take lodging&apos;.
3. A Spanish loan becoming a different Span-
ish loan, e.g., HgQ iwal becoming PaQ
pareehu &apos;together (with)&apos;, HgQ sabli
(from Spanish sable &apos;saber&apos;) becoming
YaQ macheti (from Spanish machete).
4. Spanish loans in different degrees of as-
similation, e.g., HgQ ligi- (highly assimi-
lated) becoming L1Q liyi- &apos;to read&apos; from
Spanish leer ; HgQ rigi- (highly assimilat-
ed) becoming DoQ kriyi- &apos;to believe&apos; from
Spanish creer ; HgQ iskirbi- becoming
DoQ iskribi- &apos;to read&apos; from Spanish
escribir ; HgQ pakillaa becoming DoQ
Dyosolpaki &apos;thank you&apos; from Spanish Dios
se lo pague &apos;May God repay you&apos;.
5. Idioms
</listItem>
<bodyText confidence="0.6935690625">
Idiomatic expressions vary from dialect to dialect
(although very little). For example,
1. HgQ nawinkuna fiyupa pununaptin
(their:eyes really because:they:desire:
sleep) &apos;because their eyes really wanted to
sleep&apos; is an idiomatic way to say that they
were extremely sleepy. This idiom is not
used in L1Q, DoQ, and YaQ, where it is
2 A phasal verb is one which refers to the starting, stopping,
continuing, et cetera of the action expressed by its complement,
e.g., to start to eat, to stop talking, etc.
3 This difference may be due to HgQ having assimilated the
loan more highly than DoQ; the ablative would be used in Spanish:
Yo te perdono de tus pecados &apos;I forgive you from your sins.&apos;
adequate merely to say fiyupa pun unaptin
&apos;because they were really sleepy&apos;.
</bodyText>
<reference confidence="0.96907825">
2. In HgQ, &apos;to greet&apos; is expressed by adyusta
qo-, literally, &apos;to give an adios&apos;. In other
dialects this is expressed simply by the
Spanish loan saluda- &apos;to greet&apos;.
3. In HgQ, to say that someone began to
sob, one says waqayman churakaran
(to:cry he:was:placed). In DoQ waqay-
man chayarqan (to:cry he:arrived).
4. The HgQ expression, tapriypa tupaypa,
which means roughly &apos;end for end, head
over heels&apos; is unknown in e.g., JuQ.
5. In HgQ, roosters are said to sing (kanta-),
</reference>
<bodyText confidence="0.947076555555555">
whereas in YaQ, to cry (waqa-).
It was encouraging to note a case in which an idio-
matic usage is preserved even though the verb root is
changed. The case is HgQ wasi-ta hata-ra-chi- (house-
ACC stand-RI-cause-) &apos;to raise a house&apos; (literally, &apos;to
cause a house to stand&apos;). In the dialects to the east,
the same idiom is used but with the local reflex of
*shaya- &apos;to stand&apos;; thus in DoQ, &apos;to raise a house&apos; is
expressed wayita sharkatsi-.
</bodyText>
<sectionHeader confidence="0.962149" genericHeader="method">
6. Auxiliary constructions
</sectionHeader>
<bodyText confidence="0.989400777777778">
HgQ has a construction which indicates that some
action or event is imminent. Some dialects lack the
imminent construction. For such dialects it was neces-
sary to change this to the periphrastic future.
7. Suffixes present in one dialect but absent in another
In L1Q there is a fairly common verbal suffix -ski
which HgQ does not have. In adapting from HgQ to
L1Q it was left to the checker/editor to insert -ski
where appropriate.
</bodyText>
<sectionHeader confidence="0.562839" genericHeader="method">
8. Pluralization
</sectionHeader>
<bodyText confidence="0.999982142857143">
The pluralization algorithm works perfectly, in that
whenever there is a pluralizer in the SD, the verb is
appropriately pluralized in the TD. However, this
treatment is deficient for the following reason: in
HgQ (the SD for the present experiment) only about
30 percent (a rough guess) of those verbs which have
a plural subject or object are actually marked as being
plural in the verb. In other dialects a much greater
percentage of the verbs which have plural subjects or
objects are marked plural. For L1Q, this might be as
high as 90 percent. In adapting from HgQ to L1Q, far
too few pluralizers were inserted because there were
too few pluralizers in the HgQ verbs to trigger the
process which inserts them into the TD verbs.
</bodyText>
<page confidence="0.829826">
176 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981
</page>
<note confidence="0.976411">
David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation
</note>
<sectionHeader confidence="0.571523" genericHeader="method">
9. Differences in subcategorization
</sectionHeader>
<bodyText confidence="0.99984825">
In one of the texts, the fox reports that the cat is
&amp;quot;slaughtering&amp;quot; (pishta-) the lard jar. Virtually all the
Quechua checkers from other dialects wished to
change &amp;quot;slaughter&amp;quot; to &amp;quot;claw&amp;quot;, this because only some-
thing animate can be slaughtered, or to put it in lin-
guistic parlance, because pishta- &apos;slaughter&apos; is subcate-
gorized as having an animate object in those TD&apos;s,
whereas it seems to be not so subcategorized in HgQ.4
</bodyText>
<sectionHeader confidence="0.555651" genericHeader="method">
10. Tense differences
</sectionHeader>
<bodyText confidence="0.999967111111111">
In HgQ there is a simple past tense, marked by the
suffix -ra; there is also an aspectual marker -rqu,
which means roughly &apos;suddenly, momentarily&apos;. In
some dialects this aspectual marker seems to have
become a recent past tense marker giving rise to a
contrast between recent and remote past. This raises
a problem for adapting from HgQ to such a dialect,
namely, determining when it is appropriate to use the
recent past and when the remote past.
</bodyText>
<subsectionHeader confidence="0.999526">
5.3 Side Benefits of Using Computers in Adaptation
</subsectionHeader>
<bodyText confidence="0.99998328125">
Many unexpected side benefits of computer aided
adaptation have been recognized in the course of this
experiment. First, the process of checking adapted texts
will identify many improvements that can be made in the
source text.
Second, the translations of a particular source text
used in neighboring dialects will differ principally only
in being dialect variants. More fundamental differ-
ences could lead to disputes about which is the more
accurate or appropriate rendering of the text; dialect-
based differences in texts are not likely to do so.
Third, the SD and TD texts will be more error-free
than would otherwise be the case, in several ways.
Because WA usually succeeds in analyzing a word only
if it is spelled exactly right, the program has the effect
of identifying essentially all of the typographical errors
in the SD text. And since the computer does an im-
peccable job of fabricating the TD word, that word is
spelled correctly, and consistently from instance to
instance.
Fourth, the corrections required to convert the
computer-adapted text into a final TD text are not so
numerous as to require retyping of the text. This is
not the case for most manual adaptations. The final
text can be produced by on-line editing of the
computer-produced text, with significant savings of
proof-reading effort.
Fifth, the program leads to a greater understanding
of 1) the structure of the SD, (since WA must contain
a fully explicit morphology), and 2) the dialect situa-
tion. It provides a medium in which to express these
insights in a fully explicit manner.
</bodyText>
<sectionHeader confidence="0.994455" genericHeader="conclusions">
6. Conclusions
</sectionHeader>
<bodyText confidence="0.9986974">
This project has explored the feasibility of using a
computer to assist in the adaptation of material from
one dialect to another, using central Quechua dialects
as its test-ground. All the results suggest that a com-
puter can be programmed to do a significant amount of
adaptation, but this depends on incorporating a signifi-
cant amount of knowledge about the source and target
dialects into the program in order that it be able to
analyze source dialect words, make changes, and re-
construct a correct target dialect word.
</bodyText>
<sectionHeader confidence="0.967976" genericHeader="references">
Referencess
</sectionHeader>
<reference confidence="0.986677210526316">
1. Landerman, P., &amp;quot;The Proto-Quechua First Person Marker and
the Classification of Quechua Dialects,&amp;quot; 1978. Manuscript
2. Weber, D.J., Suffix-as-Operator Analysis and the Grammar of
Successive Encoding in Llacron (Huimuco) Quechua, SIL, Peru
1976.
3. Weber, D.J., W.C. Mann, &amp;quot;Prospects for Computer-Assisted
Dialect Adaption,&amp;quot; Notes on Linguistics Special Issue No. 1,
1979. (Available from SIL, 7500 West Camp Wisdom Road,
Dallas, Texas 75236, cost: $.75)
David J. Weber is a member of the Peru branch of
the Summer Institute of Linguistics and is also a gradu-
ate student at the University of California at Los Angeles
(UCLA). He received the M.A. degree in Linguistics
from UCLA in 1978.
William C. Mann is a member of the research staff
of Information Sciences Institute at the University of
Southern California. He received the Ph.D. degree in
computer science from Carnegie-Mellon University in
1973.
</reference>
<footnote confidence="0.958100285714286">
4 This example is weak because probably pishta- is also so
subcategorized in HgQ, the violation in this case being tolerable
because it is somewhat metaphorical. Whatever the case, there will
be some minor subcategorization differences from dialect to dialect.
5 We have searched for references in the literature or other
signs of comparable prior work on computer-aided dialect adapta-
tion, and have found none.
</footnote>
<note confidence="0.537823">
American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 177
</note>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.761897">
<title confidence="0.999916">Prospects for Computer-Assisted Dialect Adaptation</title>
<author confidence="0.999999">David J Weber</author>
<affiliation confidence="0.842722">Instituto Linguistico de</affiliation>
<address confidence="0.9903745">Casilla 2492 Lima, 100 PERU</address>
<author confidence="0.999442">William C Mann</author>
<affiliation confidence="0.999428">Information Sciences University of Southern</affiliation>
<address confidence="0.993057">Marina del Rey, California 90291</address>
<abstract confidence="0.991526">This paper describes a project which has explored the feasibility of using a computer to perform a significant portion of the changes required to adapt text from one dialect to several others. This ongoing experiment has examined adaptation between various dialects of Quechua, finding that a computer program may be an important tool for adaptation. An experimental computer program was written and applied to text, and its output was field tested in five target dialects. Preliminary results indicate that preprocessing text with a computer may 1) enable informants who are not bi-dialectical (in the source and target dialects) to produce adequate adaptations without much coaching from the linguist/translator; 2) improve the quality of the resulting text; and 3) reduce time and effortâ€”both in adaptation and in manuscript preparation.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>In HgQ</author>
</authors>
<title>to greet&apos; is expressed by adyusta qo-, literally, &apos;to give an adios&apos;. In other dialects this is expressed simply by the Spanish loan saluda- &apos;to greet&apos;.</title>
<contexts>
<context position="33854" citStr="[2]" startWordPosition="5503" endWordPosition="5503">ing numbers of analyses, as was demonstrated above with aywaykan. This is so frequent that, for efficiency, the program must never even produce the set of spelling-based readings inter172 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation nally. Rather, the analysis must be constrained by knowledge other than spelling. This fact leads to another design decision: Decision 3: The program must incorporate a strongly constraining morphology in its analysis. The morphology used [2] makes it possible to exploit the characteristic of Quechua (mentioned in 2.1) that the category of a morphological unit strongly constrains what suffix may follow the unit. On the basis of the morpheme categories alone, the number of distinct analyses of aywaykan drops from 56 to 2. The program applies these morphological constraints as the analysis of a word proceeds, so that an invalid analysis can be rejected as soon as it is proposed if it contains an invalid pair of adjacent morphemes, rather than delaying rejection until the word analysis is complete. The program also uses several other</context>
</contexts>
<marker>2.</marker>
<rawString>In HgQ, &apos;to greet&apos; is expressed by adyusta qo-, literally, &apos;to give an adios&apos;. In other dialects this is expressed simply by the Spanish loan saluda- &apos;to greet&apos;.</rawString>
</citation>
<citation valid="false">
<authors>
<author>In HgQ</author>
</authors>
<title>to say that someone began to sob, one says waqayman churakaran (to:cry he:was:placed). In DoQ waqayman chayarqan (to:cry he:arrived).</title>
<contexts>
<context position="12427" citStr="[3]" startWordPosition="2000" endWordPosition="2000">979, more experiments with these dialects were performed. Experiments were also carried out in other dialects, including some Bolivian dialects of Quechua which were very different from these. There was also an independent series of experiments with Mayan dialects of the Quichean group in Guatemala. The program described here was modified to accommodate the other Quechua dialects. A new program was written for the Mayan dialects, using the same general design. All of these experiments met the same general goals as the experiments described here. This paper is an abridgment of the 1979 version [3]. American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 167 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation 3.1.1 Source Dialect Initialization For the SD, two major lists and several small lists are provided to the program. The largest list is a dictionary of roots. For each root, the dictionary entry (DE) contains the following information: 1. The spelling of the root, i.e. the string of characters by which the root is recognized. 2. The name of the root: a. If the root is native to Quechua, the name is the proto-Quechua </context>
</contexts>
<marker>3.</marker>
<rawString>In HgQ, to say that someone began to sob, one says waqayman churakaran (to:cry he:was:placed). In DoQ waqayman chayarqan (to:cry he:arrived).</rawString>
</citation>
<citation valid="false">
<title>The HgQ expression, tapriypa tupaypa, which means roughly &apos;end for end, head over heels&apos; is unknown in e.g.,</title>
<journal>JuQ.</journal>
<contexts>
<context position="13875" citStr="(4)" startWordPosition="2251" endWordPosition="2251">s, etc.). 4. Morphological category (e.g. noun, intransitive verb, transitive verb, etc.). 5. An indication of whether its final vowel is short or long. 6. An indication of whether its final vowel has undergone the morphophonemic process of lowering (from /i/ or /u/ to /a/). Note that the dictionary will contain multiple DEs for the various allomorphs of the same root (i.e., for the various forms that the root may take). For example, a DE corresponding to one of the allomorphs of yayku- &apos;to enter&apos; has (1) yayku as the spelling, (2) *yayku as the proto-Quechua form; (3) it undergoes the RSC&apos;s; (4) it is an intransitive verb; (5) its final vowel is short; (6) it has not undergone morphophonemic lowering. All of this information is exploited by the program as described below. The second major list is the list of SD suffixes. Each suffix DE contains the following information: 1. The spelling of the suffix. 2. An arbitrary name for the suffix, this name to be common to all the DE&apos;s corresponding to various allomorphs of that suffix and used uniformly for both SD and TD suffixes. 3. The morphological category of the unit (root followed by zero or more suffixes) to which this suffix can be a</context>
<context position="15221" citStr="(4)" startWordPosition="2479" endWordPosition="2479">l vowel is short or long. 6. An indication of whether it disallows an immediately preceding long vowel. 7. An indication of whether its final vowel has undergone the morphophonemic process of lowering. 8. An indication of whether it causes morphophonemic lowering. 9. A number which gives the &amp;quot;order class&amp;quot; of the suffix, used to constrain sequences of suffixes to occur in a monotonically nondecreasing order of their order class numbers. For example, the suffix -ka: (1) with arbitrary name /passive/ (2) applies to transitive verbs (3) with the result that the combination is an intransitive verb (4); the final vowel is long (5) and the suffix does not disallow a preceding long vowel (6); the final vowel has not undergone morphophonemic lowering (7) and it does not cause such lowering (8); the order class is 600, placing it in the large class of &amp;quot;derivational&amp;quot; suffixes (not ordered with respect to other members of the class, but ordered with respect to other &amp;quot;order classes&amp;quot; of suffix). In addition to these two major lists, there are several small lists: 1. The allomorphs which can only occur in word-final position following a short vowel; one such DE has as its spelling m and arbitrary na</context>
<context position="27962" citStr="(4)" startWordPosition="4624" endWordPosition="4624">our tables of examples will now be given (with fewer stages) which illustrate cases in which a TD root replaces an SD root which has different properties 170 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation Given: SD orthographic form: WA develops, in succession: length converted: segmentation: morphophonemic form: plurality handled: WS develops, in succession: re-pluralization: allomorph selection: TD orthographic form: (1) aywarkaykan (2) aywarkaykan (3) aywa-rka-yka-n (4) *aywa-RKA-YKA:-3 (5) (*aywa-YKA:-3)+PL (6) *aywa-YKA:-YA:-3 (7) aywa-yka:-ya-n (8) aywaykaayan &apos;they are going&apos; (1&apos;) aywarkaarinanpaq (2&apos;) aywarka:rinanpaq (3&apos;) aywa-rka-: ri-na-n-paq (4&apos;) * aywa-RKU-: RI-NA-3 P-PAQ (5&apos;) (*aywa-RKU-NA-3P-PAQ) +PL (6&apos;) *aywa-RKU-YA:-NA-3P-PAQ (7&apos;) aywa-rku-ya:-na-n-paq (8&apos;) aywarkuyaananpaq &apos;in order that they go&apos; Table 2. The program&apos;s effects on two plural words. SD orthographic form: segmentation: WA output: re-pluralization: allomorph selection: TD orthographic form: warantin wara-ntin (*wara-NTIN)-notPL *wara-NTIN waray-nintin waraynintin &apos;day after tomor</context>
</contexts>
<marker>4.</marker>
<rawString>The HgQ expression, tapriypa tupaypa, which means roughly &apos;end for end, head over heels&apos; is unknown in e.g., JuQ.</rawString>
</citation>
<citation valid="false">
<authors>
<author>In HgQ</author>
</authors>
<note>roosters are said to sing (kanta-),</note>
<contexts>
<context position="13907" citStr="(5)" startWordPosition="2257" endWordPosition="2257">ory (e.g. noun, intransitive verb, transitive verb, etc.). 5. An indication of whether its final vowel is short or long. 6. An indication of whether its final vowel has undergone the morphophonemic process of lowering (from /i/ or /u/ to /a/). Note that the dictionary will contain multiple DEs for the various allomorphs of the same root (i.e., for the various forms that the root may take). For example, a DE corresponding to one of the allomorphs of yayku- &apos;to enter&apos; has (1) yayku as the spelling, (2) *yayku as the proto-Quechua form; (3) it undergoes the RSC&apos;s; (4) it is an intransitive verb; (5) its final vowel is short; (6) it has not undergone morphophonemic lowering. All of this information is exploited by the program as described below. The second major list is the list of SD suffixes. Each suffix DE contains the following information: 1. The spelling of the suffix. 2. An arbitrary name for the suffix, this name to be common to all the DE&apos;s corresponding to various allomorphs of that suffix and used uniformly for both SD and TD suffixes. 3. The morphological category of the unit (root followed by zero or more suffixes) to which this suffix can be applied. 4. The morphological cat</context>
<context position="15250" citStr="(5)" startWordPosition="2485" endWordPosition="2485">An indication of whether it disallows an immediately preceding long vowel. 7. An indication of whether its final vowel has undergone the morphophonemic process of lowering. 8. An indication of whether it causes morphophonemic lowering. 9. A number which gives the &amp;quot;order class&amp;quot; of the suffix, used to constrain sequences of suffixes to occur in a monotonically nondecreasing order of their order class numbers. For example, the suffix -ka: (1) with arbitrary name /passive/ (2) applies to transitive verbs (3) with the result that the combination is an intransitive verb (4); the final vowel is long (5) and the suffix does not disallow a preceding long vowel (6); the final vowel has not undergone morphophonemic lowering (7) and it does not cause such lowering (8); the order class is 600, placing it in the large class of &amp;quot;derivational&amp;quot; suffixes (not ordered with respect to other members of the class, but ordered with respect to other &amp;quot;order classes&amp;quot; of suffix). In addition to these two major lists, there are several small lists: 1. The allomorphs which can only occur in word-final position following a short vowel; one such DE has as its spelling m and arbitrary name /MI/; there is another DE </context>
<context position="27983" citStr="(5)" startWordPosition="4626" endWordPosition="4626">s will now be given (with fewer stages) which illustrate cases in which a TD root replaces an SD root which has different properties 170 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation Given: SD orthographic form: WA develops, in succession: length converted: segmentation: morphophonemic form: plurality handled: WS develops, in succession: re-pluralization: allomorph selection: TD orthographic form: (1) aywarkaykan (2) aywarkaykan (3) aywa-rka-yka-n (4) *aywa-RKA-YKA:-3 (5) (*aywa-YKA:-3)+PL (6) *aywa-YKA:-YA:-3 (7) aywa-yka:-ya-n (8) aywaykaayan &apos;they are going&apos; (1&apos;) aywarkaarinanpaq (2&apos;) aywarka:rinanpaq (3&apos;) aywa-rka-: ri-na-n-paq (4&apos;) * aywa-RKU-: RI-NA-3 P-PAQ (5&apos;) (*aywa-RKU-NA-3P-PAQ) +PL (6&apos;) *aywa-RKU-YA:-NA-3P-PAQ (7&apos;) aywa-rku-ya:-na-n-paq (8&apos;) aywarkuyaananpaq &apos;in order that they go&apos; Table 2. The program&apos;s effects on two plural words. SD orthographic form: segmentation: WA output: re-pluralization: allomorph selection: TD orthographic form: warantin wara-ntin (*wara-NTIN)-notPL *wara-NTIN waray-nintin waraynintin &apos;day after tomorrow&apos; (&lt; wara(y) &apos;tomo</context>
</contexts>
<marker>5.</marker>
<rawString>In HgQ, roosters are said to sing (kanta-),</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Landerman</author>
</authors>
<title>The Proto-Quechua First Person Marker and the Classification of Quechua Dialects,&amp;quot;</title>
<date>1978</date>
<publisher>Manuscript</publisher>
<contexts>
<context position="2519" citStr="[1]" startWordPosition="386" endWordPosition="386">t, and its output was field tested. In this paper the nature of the language situation is discussed first, followed by a description of the computer program. Then, procedures for checking the computer-adapted text are described, followed by a discussion of the results of this checking. Finally, conclusions are stated. 2. The Nature of the Language Situation The practical difficulty of dialect adaptation is primarily determined by the language situation. 2.1 The General Nature of the Language(s) This experiment was carried out in the subgroup of Quechua called &amp;quot;central&amp;quot; Quechua by P. Landerman [1]. These languages/dialects have the following characteristics: 1. More of the structure of the language is in the morphology than in the syntax. 2. Much of the discourse structure involves the manipulation of the so-called &amp;quot;topic&amp;quot; marker and the &amp;quot;evidential&amp;quot; suffixes (the reportative, the assertative, ...). Copyright 1981 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included on the first page. T</context>
</contexts>
<marker>1.</marker>
<rawString>Landerman, P., &amp;quot;The Proto-Quechua First Person Marker and the Classification of Quechua Dialects,&amp;quot; 1978. Manuscript</rawString>
</citation>
<citation valid="false">
<authors>
<author>D J Weber</author>
</authors>
<title>Suffix-as-Operator Analysis and the Grammar of Successive Encoding in Llacron (Huimuco)</title>
<location>Quechua, SIL, Peru</location>
<contexts>
<context position="33854" citStr="[2]" startWordPosition="5503" endWordPosition="5503">ing numbers of analyses, as was demonstrated above with aywaykan. This is so frequent that, for efficiency, the program must never even produce the set of spelling-based readings inter172 American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation nally. Rather, the analysis must be constrained by knowledge other than spelling. This fact leads to another design decision: Decision 3: The program must incorporate a strongly constraining morphology in its analysis. The morphology used [2] makes it possible to exploit the characteristic of Quechua (mentioned in 2.1) that the category of a morphological unit strongly constrains what suffix may follow the unit. On the basis of the morpheme categories alone, the number of distinct analyses of aywaykan drops from 56 to 2. The program applies these morphological constraints as the analysis of a word proceeds, so that an invalid analysis can be rejected as soon as it is proposed if it contains an invalid pair of adjacent morphemes, rather than delaying rejection until the word analysis is complete. The program also uses several other</context>
</contexts>
<marker>2.</marker>
<rawString>Weber, D.J., Suffix-as-Operator Analysis and the Grammar of Successive Encoding in Llacron (Huimuco) Quechua, SIL, Peru</rawString>
</citation>
<citation valid="false">
<authors>
<author>D J Weber</author>
<author>W C Mann</author>
</authors>
<title>Prospects for Computer-Assisted Dialect Adaption,&amp;quot;</title>
<journal>Notes on Linguistics Special Issue</journal>
<volume>1</volume>
<contexts>
<context position="12427" citStr="[3]" startWordPosition="2000" endWordPosition="2000">979, more experiments with these dialects were performed. Experiments were also carried out in other dialects, including some Bolivian dialects of Quechua which were very different from these. There was also an independent series of experiments with Mayan dialects of the Quichean group in Guatemala. The program described here was modified to accommodate the other Quechua dialects. A new program was written for the Mayan dialects, using the same general design. All of these experiments met the same general goals as the experiments described here. This paper is an abridgment of the 1979 version [3]. American Journal of Computational Linguistics, Volume 7, Number 3, July-September 1981 167 David J. Weber and William C. Mann Prospects for Computer-Assisted Dialect Adaptation 3.1.1 Source Dialect Initialization For the SD, two major lists and several small lists are provided to the program. The largest list is a dictionary of roots. For each root, the dictionary entry (DE) contains the following information: 1. The spelling of the root, i.e. the string of characters by which the root is recognized. 2. The name of the root: a. If the root is native to Quechua, the name is the proto-Quechua </context>
</contexts>
<marker>3.</marker>
<rawString>Weber, D.J., W.C. Mann, &amp;quot;Prospects for Computer-Assisted Dialect Adaption,&amp;quot; Notes on Linguistics Special Issue No. 1,</rawString>
</citation>
<citation valid="false">
<title>Texas 75236, cost: $.75</title>
<note>in</note>
<marker>1979.</marker>
<rawString>(Available from SIL, 7500 West Camp Wisdom Road, Dallas, Texas 75236, cost: $.75) David J. Weber is a member of the Peru branch of the Summer Institute of Linguistics and is also a graduate student at the University of California at Los Angeles (UCLA). He received the M.A. degree in Linguistics from UCLA in 1978. William C. Mann is a member of the research staff of Information Sciences Institute at the University of Southern California. He received the Ph.D. degree in computer science from Carnegie-Mellon University in</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>