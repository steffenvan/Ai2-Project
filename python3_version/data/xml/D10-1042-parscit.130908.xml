<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000224">
<title confidence="0.982617">
Mining Name Translations from Entity Graph Mapping*
</title>
<author confidence="0.979148">
Gae-won You† Seung-won Hwang† Young-In Song$ Long Jiang$ Zaiqing Nie$
</author>
<affiliation confidence="0.997625">
†Pohang University of Science and Technology, Pohang, Republic of Korea
</affiliation>
<email confidence="0.988102">
{gwyou,swhwang}@postech.ac.kr
</email>
<affiliation confidence="0.905621">
$Microsoft Research Asia, Beijing, China
</affiliation>
<email confidence="0.99855">
{yosong,longj,znie}@microsoft.com
</email>
<sectionHeader confidence="0.996659" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99985016">
This paper studies the problem of mining en-
tity translation, specifically, mining English
and Chinese name pairs. Existing efforts
can be categorized into (a) a transliteration-
based approach leveraging phonetic similar-
ity and (b) a corpus-based approach exploiting
bilingual co-occurrences, each of which suf-
fers from inaccuracy and scarcity respectively.
In clear contrast, we use unleveraged re-
sources of monolingual entity co-occurrences,
crawled from entity search engines, repre-
sented as two entity-relationship graphs ex-
tracted from two language corpora respec-
tively. Our problem is then abstracted as find-
ing correct mappings across two graphs. To
achieve this goal, we propose a holistic ap-
proach, of exploiting both transliteration sim-
ilarity and monolingual co-occurrences. This
approach, building upon monolingual corpora,
complements existing corpus-based work, re-
quiring scarce resources of parallel or compa-
rable corpus, while significantly boosting the
accuracy of transliteration-based work. We
validate our proposed system using real-life
datasets.
</bodyText>
<sectionHeader confidence="0.999165" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999718">
Entity translation aims at mapping the entity names
(e.g., people, locations, and organizations) in source
language into their corresponding names in target
language. While high quality entity translation is es-
sential in cross-lingual information access and trans-
</bodyText>
<footnote confidence="0.7133535">
*This work was done when the first two authors visited Mi-
crosoft Research Asia.
</footnote>
<bodyText confidence="0.999177757575758">
lation, it is non-trivial to achieve, due to the chal-
lenge that entity translation, though typically bear-
ing pronunciation similarity, can also be arbitrary,
e.g., Jackie Chan and )IR J2 (pronounced Cheng
Long). Existing efforts to address these challenges
can be categorized into transliteration- and corpus-
based approaches. Transliteration-based approaches
(Wan and Verspoor, 1998; Knight and Graehl, 1998)
identify translations based on pronunciation similar-
ity, while corpus-based approaches mine bilingual
co-occurrences of translation pairs obtained from
parallel (Kupiec, 1993; Feng et al., 2004) or compa-
rable (Fung and Yee, 1998) corpora, or alternatively
mined from bilingual sentences (Lin et al., 2008;
Jiang et al., 2009). These two approaches have com-
plementary strength– transliteration-based similar-
ity can be computed for any name pair but cannot
mine translations of little (or none) phonetic simi-
larity. Corpus-based similarity can support arbitrary
translations, but require highly scarce resources of
bilingual co-occurrences, obtained from parallel or
comparable bilingual corpora.
In this paper, we propose a holistic approach,
leveraging both transliteration- and corpus-based
similarity. Our key contribution is to replace the
use of scarce resources of bilingual co-occurrences
with the use of untapped and significantly larger
resources of monolingual co-occurrences for trans-
lation. In particular, we extract monolingual co-
occurrences of entities from English and Chinese
Web corpora, which are readily available from en-
tity search engines such as PeopleEntityCube1, de-
ployed by Microsoft Research Asia. Such engine
</bodyText>
<footnote confidence="0.590882">
lhttp://people.entitycube.com
</footnote>
<page confidence="0.941025">
430
</page>
<note confidence="0.818323">
Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages 430–439,
MIT, Massachusetts, USA, 9-11 October 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.999743931818182">
automatically extracts people names from text and
their co-occurrences to retrieve related entities based
on co-occurrences. To illustrate, Figure 1(a) demon-
strates the query result for “Bill Gates,” retrieving
and visualizing the “entity-relationship graph” of re-
lated people names that frequently co-occur with
Bill in English corpus. Similarly, entity-relationship
graphs can be built over other language corpora, as
Figure 1(b) demonstrates the corresponding results
for the same query, from Renlifang2 on Chinese Web
corpus. From this point on, for the sake of simplic-
ity, we refer to English and Chinese graphs, simply
as Ge and G, respectively. Though we illustrate with
English-Chinese pairs in the paper, our method can
be easily adapted to other language pairs.
In particular, we propose a novel approach of ab-
stracting entity translation as a graph matching prob-
lem of two graphs Ge and G, in Figures 1(a) and (b).
Specifically, the similarity between two nodes ve
and v, in Ge and G, is initialized as their transliter-
ation similarity, which is iteratively refined based on
relational similarity obtained from monolingual co-
occurrences. To illustrate this, an English news ar-
ticle mentioning “Bill Gates” and “Melinda Gates”
evidences a relationship between the two entities,
which can be quantified from their co-occurrences
in the entire English Web corpus. Similarly, we
can mine Chinese news articles to obtain the re-
lationships between “�����” and “�����
X”. Once these two bilingual graphs of people and
their relationships are harvested, entity translation
can leverage these parallel relationships to further
evidence the mapping between translation pairs, as
Figure 1(c) illustrates.
To highlight the advantage of our proposed ap-
proach, we compare our results with commercial
machine translators (1) Engkoo3 developed in Mi-
crosoft Research Asia and (2) Google Translator4.
In particular, Figure 2 reports the precision for two
groups– “heads” that belong to top-100 popular peo-
ple (determined by the number of hits), among ran-
domly sampled 304 people names5 from six graph
pairs of size 1,000 each, and the remaining “tails”.
Commercial translators such as Google, leveraging
</bodyText>
<footnote confidence="0.99990075">
2http://renlifang.msra.cn
3http://www.engkoo.com
4http://translate.google.com
5See Section 4 for the sampling process.
</footnote>
<figureCaption confidence="0.998702">
Figure 2: Comparison for Head and Tail datasets
</figureCaption>
<bodyText confidence="0.9990236875">
bilingual co-occurrences that are scarce for tails,
show significantly lower precision for tails. Mean-
while, our work, depending solely on monolin-
gual co-occurrences, shows high precision, for both
heads and tails.
Our focus is to boost translation accuracy for
long tails with non-trivial Web occurrences in each
monolingual corpus, but not with much bilingual co-
occurrences, e.g., researchers publishing actively in
two languages but not famous enough to be featured
in multi-lingual Wikipedia entries or news articles.
As existing translators are already highly accurate
for popular heads, this focus well addresses the re-
maining challenges for entity translation.
To summarize, we believe that this paper has the
following contributions:
</bodyText>
<listItem confidence="0.9980202">
• We abstract entity translation problem as
a graph mapping between entity-relationship
graphs in two languages.
• We develop an effective matching algo-
rithm leveraging both pronunciation and co-
occurrence similarity. This holistic approach
complements existing approaches and en-
hances the translation coverage and accuracy.
• We validate the effectiveness of our approach
using various real-life datasets.
</listItem>
<bodyText confidence="0.999619">
The rest of this paper is organized as follows. Sec-
tion 2 reviews existing work. Section 3 then devel-
ops our framework. Section 4 reports experimental
results and Section 5 concludes our work.
</bodyText>
<figure confidence="0.997791307692308">
Ours Google Engkoo
Precision
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0
Tail
Head
</figure>
<page confidence="0.582797">
431
</page>
<figure confidence="0.984016">
(a) English PeopleEntityCube Ge (b) Chinese Renlifang Gc
</figure>
<figureCaption confidence="0.941342">
(c) Abstracting translation as graph mapping
Figure 1: Illustration of entity-relationship graphs
</figureCaption>
<sectionHeader confidence="0.999539" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999527">
In this section, we first survey related efforts, cate-
gorized into transliteration-based and corpus-based
approaches. Our approach leveraging both is com-
plementary to these efforts.
</bodyText>
<subsectionHeader confidence="0.938875">
2.1 Transliteration-based Approaches
</subsectionHeader>
<bodyText confidence="0.9954758">
Many name translations are loosely based on
phonetic similarity, which naturally inspires
transliteration-based translation of finding the
translation with the closest pronunciation similarity,
using either rule-based (Wan and Verspoor, 1998) or
statistical (Knight and Graehl, 1998; Li et al., 2004)
approaches. However, people are free to designate
arbitrary bilingual names of little (or none) pho-
netic similarity, for which the transliteration-based
approach is not effective.
</bodyText>
<subsectionHeader confidence="0.996598">
2.2 Corpus-based Approaches
</subsectionHeader>
<bodyText confidence="0.999806142857143">
Corpus-based approach can mine arbitrary transla-
tion pairs, by mining bilingual co-occurrences from
parallel and comparable bilingual corpora. Using
parallel corpora (Kupiec, 1993; Feng et al., 2004),
e.g., bilingual Wikipedia entries on the same per-
son, renders high accuracy but suffers from high
scarcity. To alleviate such scarcity, (Fung and Yee,
</bodyText>
<page confidence="0.997857">
432
</page>
<bodyText confidence="0.996442272727273">
1998; Shao and Ng, 2004) explore a more vast re-
source of comparable corpora, which share no par-
allel document- or sentence-alignments as in paral-
lel corpora but describe similar contents in two lan-
guages, e.g., news articles on the same event. Al-
ternatively, (Lin et al., 2008) extracts bilingual co-
occurrences from bilingual sentences, such as an-
notating terms with their corresponding translations
in English inside parentheses. Similarly, (Jiang et
al., 2009) identifies potential translation pairs from
bilingual sentences using lexical pattern analysis.
</bodyText>
<subsectionHeader confidence="0.998708">
2.3 Holistic Approaches
</subsectionHeader>
<bodyText confidence="0.999937222222222">
The complementary strength of the above two ap-
proaches naturally calls for a holistic approach,
such as recent work combining transliteration-
and corpus-based similarity mining bilingual co-
occurrences using general search engines. Specifi-
cally, (Al-Onaizan and Knight, 2002) uses translit-
eration to generate candidates and then web corpora
to identify translations. Later, (Jiang et al., 2007)
enhances to use transliteration to guide web mining.
Our work is also a holistic approach, but leverag-
ing significantly larger corpora, specifically by ex-
ploiting monolingual co-occurrences. Such expan-
sion enables to translate “long-tail” people entities
with non-trivial Web occurrences in each monolin-
gual corpus, but not much bilingual co-occurrences.
Specifically, we initialize name pair similarity using
transliteration-based approach, and iteratively rein-
forces base similarity using relational similarity.
</bodyText>
<sectionHeader confidence="0.995673" genericHeader="method">
3 Our Framework
</sectionHeader>
<bodyText confidence="0.999761222222222">
Given two graphs Ge = (Ve, Ee) and Gc = (Vc, Ec)
harvested from English and Chinese corpora respec-
tively, our goal is to find translation pairs, or a set 5
of matching node pairs such that 5 C_ Ve x Vc. Let
R be a |Ve|-by-|Vc |matrix where each Rij denotes
the similarity between two nodes i E Ve and j E Vc.
Overall, with the matrix R, our approach consists
of the following three steps, as we will discuss in the
following three sections respectively:
</bodyText>
<listItem confidence="0.941579375">
1. Initialization: computing base translation sim-
ilarities Rij between two entity nodes using
transliteration similarity
2. Reinforcement model: reinforcing the trans-
lation similarities Rij by exploiting the mono-
lingual co-occurrences
3. Matching extraction: extracting the matching
pairs from the final translation similarities Rij
</listItem>
<subsectionHeader confidence="0.999405">
3.1 Initialization with Transliteration
</subsectionHeader>
<bodyText confidence="0.986789414634146">
We initialize the translation similarity Rij as the
transliteration similarity. This section explains how
to get the transliteration similarity between English
and Chinese names using an unsupervised approach.
Formally, let an English name Ne =
(e1, e2, · · · , en) and a Chinese name Nc =
(c1, c2, · · · , cm) be given, where ei is an English
word and Ne is a sequence of the words, and ci
is a Chinese character and Nc is a sequence of
the characters. Our goal is to compute a score
indicating the similarity between the pronunciations
of the two names.
We first convert Nc into its Pinyin representation
PYc = (s1, s2, · · · , sm), where si is the Pinyin rep-
resentation of ci. Pinyin is the romanization rep-
resentation of pronunciation of Chinese character.
For example, the Pinyin representation of Ne =
(“Barack”, “Obama”) is PYc =(“ba”, “la”, “ke”,
“ao”, “ba”, “ma”). The Pinyin representations of
Chinese characters can be easily obtained from Chi-
nese character pronunciation dictionary. In our ex-
periments, we use an in-house dictionary, which
contains pronunciations of 20,774 Chinese charac-
ters. For the Chinese characters having multiple pro-
nunciations, we only use the most popular one.
Calculation of transliteration similarity between
Ne and Nc is now transformed to calculation of pro-
nunciation similarity between Ne and PYc. Because
letters in Chinese Pinyins and English strings are
pronounced similarly, we can further approximate
pronunciation similarity between Ne and PYc us-
ing their spelling similarity. In this paper, we use
Edit Distance (ED) to measure the spelling similar-
ity. Moreover, since words in Ne are transliterated
into characters in PYc independently, it is more ac-
curate to compute the ED between Ne and PYc, i.e.,
EDname(Ne, PYc), as the sum of the EDs of all
component transliteration pairs, i.e., every ei in Ne
and its corresponding transliteration (si) in PYc. In
other words, we need to first align all sj’s in PYc
with corresponding ei in Ne based on whether they
</bodyText>
<page confidence="0.996892">
433
</page>
<bodyText confidence="0.999712666666667">
are translations of each other. Then based on the
alignment, we can calculate EDname(Ne,PYc) us-
ing the following formula.
</bodyText>
<equation confidence="0.9910485">
EDname(Ne, PYc) = � ED(ei, esi) (1)
i
</equation>
<bodyText confidence="0.9997688">
where esi is a string generated by concatenating all
si’s that are aligned to ei and ED(ei, esi) is the
Edit Distance between ei and esi, i.e., the mini-
mum number of edit operations (including inser-
tion, deletion and substitution) needed to transform
ei into esi. Because an English word usually con-
sists of multiple syllables but every Chinese charac-
ter consists of only one syllable, when aligning ei’s
with sj’s, we add the constraint that each ei is al-
lowed to be aligned with 0 to 4 si’s but each si can
only be aligned with 0 to 1 ei. To get the align-
ment between PYc and Ne which has the minimal
EDname(Ne, PYc), we use a Dynamic Program-
ming based algorithm as defined in the following
formula:
</bodyText>
<equation confidence="0.9985865">
EDname(N1,i
e , PY 1,j
c ) = min(
EDname(N1,i−1
e , PY 1,j
c ) + Len(ei),
EDname(N1,i
e ,PY 1,j−1
c ) + Len(sj),
EDname(N1,i−1
e ,PY 1,j−1
c ) + ED(ei, sj),
EDname(N1,i−1
e ,PY 1,j−2
c ) + ED(ei, P Y j−1,j
c ),
EDname(N1,i−1
e ,PY 1,j−3
c ) + ED(ei, PY j−2,j
c ),
EDname(N1,i−1
e ,PY 1,j−4
c ) + ED(ei, PYj−3,j
c ))
</equation>
<bodyText confidence="0.999728090909091">
where, given a sequence X = (x1, x2, · · ·)
such that xi is a word, Xi,j is the subsequence
(xi, xi+1, · · · , xj) of X and Len(X) is the number
of letters except spaces in the sequence X. For in-
stance, the minimal Edit Distance between the En-
glish name “Barack Obama” and the Chinese Pinyin
representation “ba la ke ao ba ma” is 4, as the
best alignment is: “Barack” H “ba la ke” (ED: 3),
“Obama” H “ao ba ma” (ED: 1). Finally the translit-
eration similarity between Nc and Ne is calculated
using the following formula.
</bodyText>
<equation confidence="0.976356166666667">
EDname(Ne, PYc)
5imtl(Nc, Ne) = 1 − (2)
Len(PYc) + Len(Ne)
For example, 5imtl(“Barack Obama”, “L, �
A-AL,�1”) is 1 − 4
11+12 = 0.826.
</equation>
<subsectionHeader confidence="0.959508">
3.2 Reinforcement Model
</subsectionHeader>
<bodyText confidence="0.999888916666667">
From the initial similarity, we model our problem as
an iterative approach that iteratively reinforces the
similarity Rij of the nodes i and j from the matching
similarities of their neighbor nodes u and v.
The basic intuition is built on exploiting the sim-
ilarity between monolingual co-occurrences of two
different languages. In particular, we assume two
entities with strong relationship co-occur frequently
in both corpora. In order to express this intuition, we
formally define an iterative reinforcement model as
follows. Let Rtij denote the similarity of nodes i and
j at t-th iteration:
</bodyText>
<equation confidence="0.999015">
Rt2k + (1 − A)R0
uv ij (3)
</equation>
<bodyText confidence="0.998191826086956">
The model is expressed as a linear combination
of (a) the relational similarity E Rtuv/2k and (b)
transliteration similarity R0ij. (A is the coefficient
for interpolating two similarities.)
In the relational similarity, Bt(i, j, 0) is an or-
dered set of the best matching pairs between neigh-
bor nodes of i and ones of j such that b(u, v)k E
Bt(i, j, 0), Rtuv &gt; 0, where (u, v)k is the match-
ing pair with k-th highest similarity score. We con-
sider (u, v) with similarity over some threshold 0,
or Rtuv &gt; 0, as a matching pair. In this neighbor
matching process, if many-to-many matches exist,
we select only one with the greatest matching score.
Figure 3 describes such matching process more for-
mally. N(i) and N(j) are the sets of neighbor nodes
of i and j, respectively, and H is a priority queue
sorting pairs in the decreasing order of similarity
scores.
Meanwhile, note that, in order to express that
the confidence for matching (i, j) progressively con-
verges as the number of matched neighbors in-
creases, we empirically use decaying coefficient
1/2k for Rtuv, because Ek1 1/2k = 1.
</bodyText>
<subsectionHeader confidence="0.999313">
3.3 Matching Extraction
</subsectionHeader>
<bodyText confidence="0.999411333333333">
After the convergence of the above model, we get
the |Ve|-by-|Vc |similarity matrix R&apos;. From this
matrix, we extract one-to-one matches maximizing
the overall similarity.
More formally, this problem can be stated as
the maximum weighted bipartite matching (West,
</bodyText>
<equation confidence="0.582915">
Rt+1 = A 11
ij (u,v)kEBt(i,j,θ)
</equation>
<page confidence="0.987356">
434
</page>
<listItem confidence="0.991118142857143">
1. Bt(i, j, 0) — {}
2. Vu E N(i), Vv E N(j) : H.push(u, v; Rte„)
3. while H is not empty do
4. (u, v; s) — H.pop()
5. if s &lt; 0 then
6. break
7. end if
</listItem>
<figure confidence="0.6956512">
8. if neither u nor v are matched yet then
9. Bt(i, j, 0) — Bt(i, j, 0) U {(u, v)}
10. end if
11. end while
12. return Bt(i, j, 0)
</figure>
<figureCaption confidence="0.999699">
Figure 3: How to get the ordered set Bt(i, j, 0)
</figureCaption>
<bodyText confidence="0.999743722222222">
2000)– Given two groups of entities Ve and Vc from
the two graphs Ge and Gc, we can build a weighted
bipartite graph is G = (V, E), where V = Ve U Vc
and E is a set of edges (u, v) with weight R�&apos;v. To
filter out null alignment, we construct only the edges
with weight Ru &gt; S. From this bipartite graph,
the maximum weighted bipartite matching problem
finds a set of pairwise non-adjacent edges 5 C_ E
such that E(u v)cS R&apos; is the maximum. Well-
known algorithms include Hungarian algorithm with
time complexity of O(|V |2 log |V  |+ |V ||E|) (West,
2000).
In this paper, to speed up processing, we consider
a greedy alternative with the following steps– (1)
choose the pair with the highest similarity score, (2)
remove the corresponding row and column from the
matrix, and (3) repeat (1) and (2) until their match-
ing scores are over a specific threshold S.
</bodyText>
<sectionHeader confidence="0.99954" genericHeader="method">
4 Experiments
</sectionHeader>
<bodyText confidence="0.9999626">
This section reports our experimental results to eval-
uate our proposed approach. First, we report our ex-
perimental setting in Section 4.1. Second, we vali-
date the effectiveness and the scalability of our ap-
proach over a real-life dataset in Section 4.2.
</bodyText>
<subsectionHeader confidence="0.980201">
4.1 Experimental Settings
</subsectionHeader>
<bodyText confidence="0.997967714285714">
This section describes (1) how we collect the En-
glish and Chinese EntityCube datasets, (2) how to
build ground-truth test datasets for evaluating our
framework, and (3) how to set up three parameters
A, 0, and S.
First, we crawled Ge = (Ve, Ee) and Gc =
(Vc, Ec) from English and Chinese EntityCubes.
Specifically, we built a graph pairs (Ge, Gc) expand-
ing from a “seed pair” of nodes se E Ve and sc E Vc
until the number of nodes for each graph becomes
1,0006. More specifically, when we build a graph
Ge by expanding from se, we use a queue Q. We
first initialize Q by pushing the seed node se. We
then iteratively pop a node ve from Q, save ve into
Ve, and push its neighbor nodes in decreasing order
of co-occurrence scores with ve. Similarly, we can
get Gc from a counterpart seed node vc. By using
this procedure, we built six graph pairs from six dif-
ferent seed pairs. In particular, the six seed nodes
are English names and its corresponding Chinese
names representing a wide range of occupation do-
mains (e.g., ‘Barack Obama,’ ‘Bill Gates,’ ‘Britney
Spears,’ ‘Bruno Senna,’ ‘Chris Paul,’ and ‘Eminem’)
as Table 1 depicts. Meanwhile, though we demon-
strate the effectiveness of the proposed method for
mining name translations in Chinese and English
languages, the method can be easily adapted to other
language pairs.
</bodyText>
<tableCaption confidence="0.971216">
Table 1: Summary for graphs and test datasets obtained
from each seed pair
</tableCaption>
<figure confidence="0.775886428571429">
i |Ve|, |V. ||Ti |English Name Chinese Name
1 1,000 51 Barack Obama EJAA·9E—&apos;-i
2 1,000 52 Bill Gates }tr111·-�
3 1,000 40 Britney Spears moi&amp;quot; WfAr1,,Wf
4 1,000 53 Bruno Senna �i%if·�M
5 1,000 51 Chris Paul AIW·�$&apos;
6 1,000 57 Eminem IZ)KM�
</figure>
<bodyText confidence="0.999849181818182">
Second, we manually searched for about 50
“ground-truth” matched translations for each graph
pair to build test datasets Ti, by randomly selecting
nodes within two hops7 from the seed pair (se, sc),
since nodes outside two hops may include nodes
whose neighbors are not fully crawled. More specif-
ically, due to our crawling process expanding to add
neighbors from the seed, the nodes close to the seed
have all the neighbors they would have in the full
graph, while those far from the node may not. In or-
der to pick the nodes that well represent the actual
</bodyText>
<footnote confidence="0.983996">
6Note, this is just a default setting, which we later increase
for scalability evaluation in Figure 6.
7Note that the numbers of nodes within two hops in Ge and
G. are 327 and 399 on average respectively.
</footnote>
<page confidence="0.999138">
435
</page>
<bodyText confidence="0.999990260869565">
neighbors, we built test datasets among those within
two hops. However, this crawling is used for the
evaluation sake only, and thus does not suggest the
bias in our proposed framework. Table 1 describes
the size of such test dataset for each graph pair.
Lastly, we set up the three parameters A, 0, and
S using 6-fold cross validation with 6 test datasets
Ti’s of the graphs. More specifically, for each
dataset Ti, we decide Ai and 0i such that average
MRR for the other 5 test datasets is maximized.
(About MRR, see more details of Equation (4) in
Section 4.2.) We then decide Si such that average
F1-score is maximized. Figure 4 shows the average
MRR for Ai and 0i with default values 0 = 0.66
and A = 0.2. Based on these results, we set Ai with
values {0.2, 0.15, 0.2, 0.15, 0.2, 0.15} that optimize
MRR in datasets T1, ... T6, and similarly 0i with
{0.67, 0.65, 0.67, 0.67, 0.65, 0.67}. We also set Si
with values {0.63, 0.63, 0.61, 0.61, 0.61, 0.61} opti-
mizing F1-score with the same default values A =
0.2 and 0 = 0.66. We can observe the variances
of optimal parameter setting values are low, which
suggests the robustness of our framework.
</bodyText>
<subsectionHeader confidence="0.997277">
4.2 Experimental Results
</subsectionHeader>
<bodyText confidence="0.999990454545455">
This section reports our experimental results using
the evaluation datasets explained in previous sec-
tion. For each graph pair, we evaluated the ef-
fectiveness of (1) reinforcement model using MRR
measure in Section 4.2.1 and (2) overall framework
using precision, recall, and F1 measures in Sec-
tion 4.2.2. We also validated (3) scalability of our
framework over larger scale of graphs (with up to
five thousand nodes) in Section 4.2.3. (In all experi-
mental results, Bold numbers indicate the best per-
formance for each metric.)
</bodyText>
<subsectionHeader confidence="0.967829">
4.2.1 Effectiveness of reinforcement model
</subsectionHeader>
<bodyText confidence="0.999833">
We evaluated the reinforcement model over
MRR (Voorhees, 2001), the average of the recipro-
cal ranks of the query results as the following for-
</bodyText>
<equation confidence="0.882562333333333">
mula:
1 1
|Q |qEQ rankq (4)
</equation>
<bodyText confidence="0.9634815">
Each q is a ground-truth matched pair (u, v) such
that u ∈ Ve and v ∈ V,, and rankq is the rank of the
similarity score of Ru„ among all Ruk’s such that
k ∈ V, Q is a set of such queries. By comparing
MRRs for two matrices R0 and R&apos;, we can validate
the effectiveness of the reinforcement model.
</bodyText>
<listItem confidence="0.9852464">
• Baseline matrix (R0): using only the translit-
eration similarity score, i.e., without reinforce-
ment
• Reinforced matrix (R&apos;): using the reinforced
similarity score obtained from Equation (3)
</listItem>
<tableCaption confidence="0.99827">
Table 2: MRR of baseline and reinforced matrices
</tableCaption>
<table confidence="0.998301111111111">
Set MRR
Baseline R0 Reinforced R&apos;
T1 0.6964 0.8377
T2 0.6213 0.7581
T3 0.7095 0.7989
T4 0.8159 0.8378
T5 0.6984 0.8158
T6 0.5982 0.8011
Average 0.6900 0.8082
</table>
<bodyText confidence="0.999795666666667">
We empirically observed that the iterative model
converges within 5 iterations. In all experiments, we
used 5 iterations for the reinforcement.
Table 2 summarizes our experimental results. As
these figures show, MRR scores significantly in-
crease after applying our reinforcement model ex-
cept for the set T4 (on average from 69% to 81%),
which indirectly shows the effectiveness of our rein-
forcement model.
</bodyText>
<subsectionHeader confidence="0.952475">
4.2.2 Effectiveness of overall framework
</subsectionHeader>
<bodyText confidence="0.992107888888889">
Based on the reinforced matrix, we evaluated
the effectiveness of our overall matching framework
using the following three measures–(1) precision:
how accurately the method returns matching pairs,
(2) recall: how many the method returns correct
matching pairs, and (3) F1-score: the harmonic
mean of precision and recall. We compared our ap-
proach with a baseline, mapping two graphs with
only transliteration similarity.
</bodyText>
<listItem confidence="0.9980348">
• Baseline: in matching extraction, using R0 as
the similarity matrix by bypassing the rein-
forcement step
• Ours: using R&apos;, the similarity matrix con-
verged by Equation (3)
</listItem>
<equation confidence="0.678781">
MRR =
</equation>
<page confidence="0.983404">
436
</page>
<figure confidence="0.999368408163265">
0.61 0.63 0.65 0.67 0.69
θ (λ=0.2)
θ1
θ2
θ3
θ4
θ5
θ6
AVG(F1−score)
0.74
0.73
0.72
0.71
0.69
0.68
0.7
0.57 0.59 0.61 0.63 0.65
61
62
63
64
65
66
6(X=0.2, 0=0.66)
λ(θ=0.66)
AVG(MRR)
0.85
0.84
0.83
0.82
0.81
0.79
0.78
0.77
0.8
0.1 0.15 0.2 0.25 0.3
λ1
λ2
λ3
λ4
λ5
λ6
AVG(MRR)
0.84
0.82
0.78
0.76
0.74
0.8
</figure>
<figureCaption confidence="0.999958">
Figure 4: Parameter setup for A, B, and 6
</figureCaption>
<bodyText confidence="0.999654411764706">
In addition, we compared ours with the machine
translators of Engkoo and Google. Table 3 summa-
rizes our experimental results.
As this table shows, our approach results in the
highest precision (about 80% on average) without
compromising the best recall of Google, i.e., 61%
of Google vs. 63% of ours. Overall, our approach
outperforms others in all three measures.
Meanwhile, in order to validate the translation ac-
curacy over popular head and long-tail, as discussed
in Section 1, we separated the test data into two
groups and analyzed the effectiveness separately.
Figure 5 plots the number of hits returned for the
names from Google search engine. According to the
distribution, we separate the test data into top-100
popular people with the highest hits and the remain-
ing, denoted head and tail, respectively.
</bodyText>
<figure confidence="0.960325">
108
107
106
105
104
0 50 100 150 200 250 300 350
Number of names
</figure>
<figureCaption confidence="0.999991">
Figure 5: Distribution over number of hits
</figureCaption>
<bodyText confidence="0.9999406">
Table 4 shows the effectiveness with both
datasets, respectively. As difference of the effective-
ness between tail and head (denoted diff) with re-
spect to three measures shows, our approach shows
stably high precision, for both heads and tails.
</bodyText>
<subsectionHeader confidence="0.832376">
4.2.3 Scalability
</subsectionHeader>
<bodyText confidence="0.999891181818182">
To validate the scalability of our approach, we
evaluated the effectiveness of our approach over the
number of nodes in two graphs. We built larger six
graph pairs (Ge7 G,) by expanding them from the
seed pairs further until the number of nodes reaches
5,000. Figure 6 shows the number of matched trans-
lations according to such increase. Overall, the num-
ber of matched pairs linearly increases as the num-
ber of nodes increases, which suggests scalability.
The ratio of node overlap in two graphs is about be-
tween 7% and 9% of total node size.
</bodyText>
<figure confidence="0.989468">
350
300
250
200
150
100
50
1000 2000 3000 4000 5000
|Ve |and |VG|
</figure>
<figureCaption confidence="0.999752">
Figure 6: Matched translations over IVeI and IV,I
</figureCaption>
<sectionHeader confidence="0.998442" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.944703454545454">
This paper abstracted name translation problem as a
matching problem of two entity-relationship graphs.
This novel approach complements existing name
translation work, by not requiring rare resources
of parallel or comparable corpus yet outperforming
the state-of-the-art. More specifically, we combine
bilingual phonetic similarity and monolingual Web
co-occurrence similarity, to compute a holistic no-
tion of entity similarity. To achieve this goal, we de-
Number of hits in Google
# matched translations
</bodyText>
<page confidence="0.998174">
437
</page>
<tableCaption confidence="0.999731">
Table 3: Precision, Recall, and F1-score of Baseline, Engkoo, Google, and Ours over test sets Ti
</tableCaption>
<table confidence="0.999841888888889">
Set Precision Recall F1-score
Engkoo Google Baseline Ours Engkoo Google Baseline Ours Engkoo Google Baseline Ours
T1 0.5263 0.4510 0.5263 0.8974 0.3922 0.4510 0.1961 0.6863 0.4494 0.4510 0.2857 0.7778
T2 0.7551 0.75 0.7143 0.8056 0.7115 0.75 0.2885 0.5577 0.7327 0.75 0.4110 0.6591
T3 0.5833 0.7925 0.5556 0.7949 0.5283 0.7925 0.1887 0.5849 0.5545 0.7925 0.2817 0.6739
T4 0.5 0.45 0.7368 0.7353 0.425 0.45 0.35 0.625 0.4595 0.45 0.4746 0.6757
T5 0.6111 0.3137 0.5 0.7234 0.4314 0.3137 0.1765 0.6667 0.5057 0.3137 0.2609 0.6939
Ts 0.5636 0.8947 0.6 0.8605 0.5438 0.8947 0.1053 0.6491 0.5536 0.8947 0.1791 0.74
AVG 0.5899 0.6086 0.6055 0.8028 0.5054 0.6086 0.2175 0.6283 0.5426 0.6086 0.3155 0.7034
</table>
<tableCaption confidence="0.998868">
Table 4: Precision, Recall, and F1-score of Engkoo, Google, and Ours with head and tail datasets
</tableCaption>
<bodyText confidence="0.87767825">
Method Precision Recall F1-score
head tail diff head tail diff head tail diff
Engkoo 0.6082 0.5854 0.0229 0.59 0.4706 0.1194 0.5990 0.5217 0.0772
Google 0.75 0.5588 0.1912 0.75 0.5588 0.1912 0.75 0.5588 0.1912
Ours 0.8462 0.7812 0.0649 0.66 0.6127 0.0473 0.7416 0.6868 0.0548
veloped a graph alignment algorithm that iteratively
reinforces the matching similarity exploiting rela-
tional similarity and then extracts correct matches.
Our evaluation results empirically validated the ac-
curacy of our algorithm over real-life datasets, and
showed the effectiveness on our proposed perspec-
tive.
</bodyText>
<sectionHeader confidence="0.998435" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999943428571428">
This work was supported by Microsoft Research
Asia NLP theme funding and MKE (Ministry of
Knowledge Economy), Korea, under the ITRC (In-
formation Technology Research Center) support
program supervised by the IITA (Institute for In-
formation Technology Advancement) (IITA-2009-
C1090-0902-0045).
</bodyText>
<sectionHeader confidence="0.998973" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999794066666667">
Yaser Al-Onaizan and Kevin Knight. 2002. Trans-
lating Named Entities Using Monolingual and Bilin-
gual Resources. In Proceedings of the 40th Annual
Meeting on Association for Computational Linguistics
(ACL’02), pages 400–408. Association for Computa-
tional Linguistics.
Donghui Feng, Yajuan L¨u, and Ming Zhou. 2004.
A New Approach for English-Chinese Named En-
tity Alignment. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP’04), pages 372–379. Association for Com-
putational Linguistics.
Pascale Fung and Lo Yuen Yee. 1998. An IR Ap-
proach for Translating New Words from Nonparal-
lel,Comparable Texts. In Proceedings of the 17th In-
ternational Conference on Computational Linguistics
(COLING’98), pages 414–420. Association for Com-
putational Linguistics.
Long Jiang, Ming Zhou, Lee feng Chien, and Cheng Niu.
2007. Named Entity Translation with Web Mining and
Transliteration. In Proceedings of the 20th Interna-
tional Joint Conference on Arti�cial Intelligence (IJ-
CAI’07), pages 1629–1634. Morgan Kaufmann Pub-
lishers Inc.
Long Jiang, Shiquan Yang, Ming Zhou, Xiaohua Liu, and
Qingsheng Zhu. 2009. Mining Bilingual Data from
the Web with Adaptively Learnt Patterns. In Proceed-
ings of the 47th Annual Meeting of the Association for
Computational Linguistics (ACL’09), pages 870–878.
Association for Computational Linguistics.
Kevin Knight and Jonathan Graehl. 1998. Ma-
chine Transliteration. Computational Linguistics,
24(4):599–612.
Julian Kupiec. 1993. An Algorithm for finding Noun
Phrase Correspondences in Bilingual Corpora. In Pro-
ceedings of the 31th Annual Meeting of the Association
for Computational Linguistics (ACL’93), pages 17–22.
Association for Computational Linguistics.
Haizhou Li, Zhang Min, and Su Jian. 2004. A Joint
Source-Channel Model for Machine Transliteration.
In Proceedings of the 42nd Annual Meeting on Associ-
ation for Computational Linguistics (ACL’04), pages
159–166. Association for Computational Linguistics.
Dekang Lin, Shaojun Zhao, Benjamin Van Durme, and
Marius Pasca. 2008. Mining Parenthetical Transla-
</reference>
<page confidence="0.987779">
438
</page>
<reference confidence="0.987705210526316">
tions from the Web by Word Alignment. In Proceed-
ings of the 46th Annual Meeting of the Association
for Computational Linguistics (ACL’08), pages 994–
1002. Association for Computational Linguistics.
Li Shao and Hwee Tou Ng. 2004. Mining New Word
Translations from Comparable Corpora. In Proceed-
ings of the 20th International Conference on Computa-
tional Linguistics (COLING’04), pages 618–624. As-
sociation for Computational Linguistics.
Ellen M. Voorhees. 2001. The trec question answering
track. Natural Language Engineering, 7(4):361–378.
Stephen Wan and Cornelia Maria Verspoor. 1998. Auto-
matic English-Chinese Name Transliteration for De-
velopment of Multilingual Resources. In Proceed-
ings of the 17th International Conference on Compu-
tational Linguistics (COLING’98), pages 1352–1356.
Association for Computational Linguistics.
Douglas Brent West. 2000. Introduction to Graph The-
ory. Prentice Hall, second edition.
</reference>
<page confidence="0.999271">
439
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.508347">
<title confidence="0.838805">Name Translations from Entity Graph</title>
<affiliation confidence="0.779298">University of Science and Technology, Pohang, Republic of Research Asia, Beijing,</affiliation>
<abstract confidence="0.997549692307692">This paper studies the problem of mining entity translation, specifically, mining English and Chinese name pairs. Existing efforts can be categorized into (a) a transliterationbased approach leveraging phonetic similarity and (b) a corpus-based approach exploiting bilingual co-occurrences, each of which suffers from inaccuracy and scarcity respectively. In clear contrast, we use unleveraged resources of monolingual entity co-occurrences, crawled from entity search engines, represented as two entity-relationship graphs extracted from two language corpora respectively. Our problem is then abstracted as finding correct mappings across two graphs. To achieve this goal, we propose a holistic approach, of exploiting both transliteration similarity and monolingual co-occurrences. This approach, building upon monolingual corpora, complements existing corpus-based work, requiring scarce resources of parallel or comparable corpus, while significantly boosting the accuracy of transliteration-based work. We validate our proposed system using real-life datasets.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Yaser Al-Onaizan</author>
<author>Kevin Knight</author>
</authors>
<title>Translating Named Entities Using Monolingual and Bilingual Resources.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics (ACL’02),</booktitle>
<pages>400--408</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="9498" citStr="Al-Onaizan and Knight, 2002" startWordPosition="1359" endWordPosition="1362">the same event. Alternatively, (Lin et al., 2008) extracts bilingual cooccurrences from bilingual sentences, such as annotating terms with their corresponding translations in English inside parentheses. Similarly, (Jiang et al., 2009) identifies potential translation pairs from bilingual sentences using lexical pattern analysis. 2.3 Holistic Approaches The complementary strength of the above two approaches naturally calls for a holistic approach, such as recent work combining transliterationand corpus-based similarity mining bilingual cooccurrences using general search engines. Specifically, (Al-Onaizan and Knight, 2002) uses transliteration to generate candidates and then web corpora to identify translations. Later, (Jiang et al., 2007) enhances to use transliteration to guide web mining. Our work is also a holistic approach, but leveraging significantly larger corpora, specifically by exploiting monolingual co-occurrences. Such expansion enables to translate “long-tail” people entities with non-trivial Web occurrences in each monolingual corpus, but not much bilingual co-occurrences. Specifically, we initialize name pair similarity using transliteration-based approach, and iteratively reinforces base simila</context>
</contexts>
<marker>Al-Onaizan, Knight, 2002</marker>
<rawString>Yaser Al-Onaizan and Kevin Knight. 2002. Translating Named Entities Using Monolingual and Bilingual Resources. In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics (ACL’02), pages 400–408. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donghui Feng</author>
<author>Yajuan L¨u</author>
<author>Ming Zhou</author>
</authors>
<title>A New Approach for English-Chinese Named Entity Alignment.</title>
<date>2004</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP’04),</booktitle>
<pages>372--379</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<marker>Feng, L¨u, Zhou, 2004</marker>
<rawString>Donghui Feng, Yajuan L¨u, and Ming Zhou. 2004. A New Approach for English-Chinese Named Entity Alignment. In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP’04), pages 372–379. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Pascale Fung</author>
<author>Lo Yuen Yee</author>
</authors>
<title>An IR Approach for Translating New Words from Nonparallel,Comparable Texts.</title>
<date>1998</date>
<booktitle>In Proceedings of the 17th International Conference on Computational Linguistics (COLING’98),</booktitle>
<pages>414--420</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="2370" citStr="Fung and Yee, 1998" startWordPosition="323" endWordPosition="326">rivial to achieve, due to the challenge that entity translation, though typically bearing pronunciation similarity, can also be arbitrary, e.g., Jackie Chan and )IR J2 (pronounced Cheng Long). Existing efforts to address these challenges can be categorized into transliteration- and corpusbased approaches. Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009). These two approaches have complementary strength– transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity. Corpus-based similarity can support arbitrary translations, but require highly scarce resources of bilingual co-occurrences, obtained from parallel or comparable bilingual corpora. In this paper, we propose a holistic approach, leveraging both transliteration- and corpus-based similarity. Our key contribution is t</context>
</contexts>
<marker>Fung, Yee, 1998</marker>
<rawString>Pascale Fung and Lo Yuen Yee. 1998. An IR Approach for Translating New Words from Nonparallel,Comparable Texts. In Proceedings of the 17th International Conference on Computational Linguistics (COLING’98), pages 414–420. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Long Jiang</author>
<author>Ming Zhou</author>
<author>Lee feng Chien</author>
<author>Cheng Niu</author>
</authors>
<title>Named Entity Translation with Web Mining and Transliteration.</title>
<date>2007</date>
<booktitle>In Proceedings of the 20th International Joint Conference on Arti�cial Intelligence (IJCAI’07),</booktitle>
<pages>1629--1634</pages>
<publisher>Morgan Kaufmann Publishers Inc.</publisher>
<contexts>
<context position="9617" citStr="Jiang et al., 2007" startWordPosition="1377" endWordPosition="1380">terms with their corresponding translations in English inside parentheses. Similarly, (Jiang et al., 2009) identifies potential translation pairs from bilingual sentences using lexical pattern analysis. 2.3 Holistic Approaches The complementary strength of the above two approaches naturally calls for a holistic approach, such as recent work combining transliterationand corpus-based similarity mining bilingual cooccurrences using general search engines. Specifically, (Al-Onaizan and Knight, 2002) uses transliteration to generate candidates and then web corpora to identify translations. Later, (Jiang et al., 2007) enhances to use transliteration to guide web mining. Our work is also a holistic approach, but leveraging significantly larger corpora, specifically by exploiting monolingual co-occurrences. Such expansion enables to translate “long-tail” people entities with non-trivial Web occurrences in each monolingual corpus, but not much bilingual co-occurrences. Specifically, we initialize name pair similarity using transliteration-based approach, and iteratively reinforces base similarity using relational similarity. 3 Our Framework Given two graphs Ge = (Ve, Ee) and Gc = (Vc, Ec) harvested from Engli</context>
</contexts>
<marker>Jiang, Zhou, Chien, Niu, 2007</marker>
<rawString>Long Jiang, Ming Zhou, Lee feng Chien, and Cheng Niu. 2007. Named Entity Translation with Web Mining and Transliteration. In Proceedings of the 20th International Joint Conference on Arti�cial Intelligence (IJCAI’07), pages 1629–1634. Morgan Kaufmann Publishers Inc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Long Jiang</author>
<author>Shiquan Yang</author>
<author>Ming Zhou</author>
<author>Xiaohua Liu</author>
<author>Qingsheng Zhu</author>
</authors>
<title>Mining Bilingual Data from the Web with Adaptively Learnt Patterns.</title>
<date>2009</date>
<booktitle>In Proceedings of the 47th Annual Meeting of the Association for Computational Linguistics (ACL’09),</booktitle>
<pages>870--878</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="2466" citStr="Jiang et al., 2009" startWordPosition="338" endWordPosition="341">ciation similarity, can also be arbitrary, e.g., Jackie Chan and )IR J2 (pronounced Cheng Long). Existing efforts to address these challenges can be categorized into transliteration- and corpusbased approaches. Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009). These two approaches have complementary strength– transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity. Corpus-based similarity can support arbitrary translations, but require highly scarce resources of bilingual co-occurrences, obtained from parallel or comparable bilingual corpora. In this paper, we propose a holistic approach, leveraging both transliteration- and corpus-based similarity. Our key contribution is to replace the use of scarce resources of bilingual co-occurrences with the use of untapped and s</context>
<context position="9104" citStr="Jiang et al., 2009" startWordPosition="1307" endWordPosition="1310">, e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarcity, (Fung and Yee, 432 1998; Shao and Ng, 2004) explore a more vast resource of comparable corpora, which share no parallel document- or sentence-alignments as in parallel corpora but describe similar contents in two languages, e.g., news articles on the same event. Alternatively, (Lin et al., 2008) extracts bilingual cooccurrences from bilingual sentences, such as annotating terms with their corresponding translations in English inside parentheses. Similarly, (Jiang et al., 2009) identifies potential translation pairs from bilingual sentences using lexical pattern analysis. 2.3 Holistic Approaches The complementary strength of the above two approaches naturally calls for a holistic approach, such as recent work combining transliterationand corpus-based similarity mining bilingual cooccurrences using general search engines. Specifically, (Al-Onaizan and Knight, 2002) uses transliteration to generate candidates and then web corpora to identify translations. Later, (Jiang et al., 2007) enhances to use transliteration to guide web mining. Our work is also a holistic appro</context>
</contexts>
<marker>Jiang, Yang, Zhou, Liu, Zhu, 2009</marker>
<rawString>Long Jiang, Shiquan Yang, Ming Zhou, Xiaohua Liu, and Qingsheng Zhu. 2009. Mining Bilingual Data from the Web with Adaptively Learnt Patterns. In Proceedings of the 47th Annual Meeting of the Association for Computational Linguistics (ACL’09), pages 870–878. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin Knight</author>
<author>Jonathan Graehl</author>
</authors>
<date>1998</date>
<booktitle>Machine Transliteration. Computational Linguistics,</booktitle>
<pages>24--4</pages>
<contexts>
<context position="2140" citStr="Knight and Graehl, 1998" startWordPosition="291" endWordPosition="294">corresponding names in target language. While high quality entity translation is essential in cross-lingual information access and trans*This work was done when the first two authors visited Microsoft Research Asia. lation, it is non-trivial to achieve, due to the challenge that entity translation, though typically bearing pronunciation similarity, can also be arbitrary, e.g., Jackie Chan and )IR J2 (pronounced Cheng Long). Existing efforts to address these challenges can be categorized into transliteration- and corpusbased approaches. Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009). These two approaches have complementary strength– transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity. Corpus-based similarity can support arbitrary translations, but require highly scarce</context>
<context position="8059" citStr="Knight and Graehl, 1998" startWordPosition="1150" endWordPosition="1153">ifang Gc (c) Abstracting translation as graph mapping Figure 1: Illustration of entity-relationship graphs 2 Related Work In this section, we first survey related efforts, categorized into transliteration-based and corpus-based approaches. Our approach leveraging both is complementary to these efforts. 2.1 Transliteration-based Approaches Many name translations are loosely based on phonetic similarity, which naturally inspires transliteration-based translation of finding the translation with the closest pronunciation similarity, using either rule-based (Wan and Verspoor, 1998) or statistical (Knight and Graehl, 1998; Li et al., 2004) approaches. However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective. 2.2 Corpus-based Approaches Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora. Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarcity, (Fung and Yee, 432 1998; Shao and Ng</context>
</contexts>
<marker>Knight, Graehl, 1998</marker>
<rawString>Kevin Knight and Jonathan Graehl. 1998. Machine Transliteration. Computational Linguistics, 24(4):599–612.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Julian Kupiec</author>
</authors>
<title>An Algorithm for finding Noun Phrase Correspondences in Bilingual Corpora.</title>
<date>1993</date>
<booktitle>In Proceedings of the 31th Annual Meeting of the Association for Computational Linguistics (ACL’93),</booktitle>
<pages>17--22</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="2315" citStr="Kupiec, 1993" startWordPosition="314" endWordPosition="315">ted Microsoft Research Asia. lation, it is non-trivial to achieve, due to the challenge that entity translation, though typically bearing pronunciation similarity, can also be arbitrary, e.g., Jackie Chan and )IR J2 (pronounced Cheng Long). Existing efforts to address these challenges can be categorized into transliteration- and corpusbased approaches. Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009). These two approaches have complementary strength– transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity. Corpus-based similarity can support arbitrary translations, but require highly scarce resources of bilingual co-occurrences, obtained from parallel or comparable bilingual corpora. In this paper, we propose a holistic approach, leveraging both transliteration-</context>
<context position="8465" citStr="Kupiec, 1993" startWordPosition="1207" endWordPosition="1208">ally inspires transliteration-based translation of finding the translation with the closest pronunciation similarity, using either rule-based (Wan and Verspoor, 1998) or statistical (Knight and Graehl, 1998; Li et al., 2004) approaches. However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective. 2.2 Corpus-based Approaches Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora. Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarcity, (Fung and Yee, 432 1998; Shao and Ng, 2004) explore a more vast resource of comparable corpora, which share no parallel document- or sentence-alignments as in parallel corpora but describe similar contents in two languages, e.g., news articles on the same event. Alternatively, (Lin et al., 2008) extracts bilingual cooccurrences from bilingual sentences, such as annotating terms with their corresponding translations in English inside paren</context>
</contexts>
<marker>Kupiec, 1993</marker>
<rawString>Julian Kupiec. 1993. An Algorithm for finding Noun Phrase Correspondences in Bilingual Corpora. In Proceedings of the 31th Annual Meeting of the Association for Computational Linguistics (ACL’93), pages 17–22. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Haizhou Li</author>
<author>Zhang Min</author>
<author>Su Jian</author>
</authors>
<title>A Joint Source-Channel Model for Machine Transliteration.</title>
<date>2004</date>
<booktitle>In Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics (ACL’04),</booktitle>
<pages>159--166</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="8077" citStr="Li et al., 2004" startWordPosition="1154" endWordPosition="1157">translation as graph mapping Figure 1: Illustration of entity-relationship graphs 2 Related Work In this section, we first survey related efforts, categorized into transliteration-based and corpus-based approaches. Our approach leveraging both is complementary to these efforts. 2.1 Transliteration-based Approaches Many name translations are loosely based on phonetic similarity, which naturally inspires transliteration-based translation of finding the translation with the closest pronunciation similarity, using either rule-based (Wan and Verspoor, 1998) or statistical (Knight and Graehl, 1998; Li et al., 2004) approaches. However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective. 2.2 Corpus-based Approaches Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora. Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarcity, (Fung and Yee, 432 1998; Shao and Ng, 2004) explore a </context>
</contexts>
<marker>Li, Min, Jian, 2004</marker>
<rawString>Haizhou Li, Zhang Min, and Su Jian. 2004. A Joint Source-Channel Model for Machine Transliteration. In Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics (ACL’04), pages 159–166. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
<author>Shaojun Zhao</author>
<author>Benjamin Van Durme</author>
<author>Marius Pasca</author>
</authors>
<title>Mining Parenthetical Translations from the Web by Word Alignment.</title>
<date>2008</date>
<booktitle>In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics (ACL’08),</booktitle>
<pages>994--1002</pages>
<institution>Association for Computational Linguistics.</institution>
<marker>Lin, Zhao, Van Durme, Pasca, 2008</marker>
<rawString>Dekang Lin, Shaojun Zhao, Benjamin Van Durme, and Marius Pasca. 2008. Mining Parenthetical Translations from the Web by Word Alignment. In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics (ACL’08), pages 994– 1002. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Li Shao</author>
<author>Hwee Tou Ng</author>
</authors>
<title>Mining New Word Translations from Comparable Corpora.</title>
<date>2004</date>
<booktitle>In Proceedings of the 20th International Conference on Computational Linguistics (COLING’04),</booktitle>
<pages>618--624</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="8666" citStr="Shao and Ng, 2004" startWordPosition="1239" endWordPosition="1242">raehl, 1998; Li et al., 2004) approaches. However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective. 2.2 Corpus-based Approaches Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora. Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarcity, (Fung and Yee, 432 1998; Shao and Ng, 2004) explore a more vast resource of comparable corpora, which share no parallel document- or sentence-alignments as in parallel corpora but describe similar contents in two languages, e.g., news articles on the same event. Alternatively, (Lin et al., 2008) extracts bilingual cooccurrences from bilingual sentences, such as annotating terms with their corresponding translations in English inside parentheses. Similarly, (Jiang et al., 2009) identifies potential translation pairs from bilingual sentences using lexical pattern analysis. 2.3 Holistic Approaches The complementary strength of the above t</context>
</contexts>
<marker>Shao, Ng, 2004</marker>
<rawString>Li Shao and Hwee Tou Ng. 2004. Mining New Word Translations from Comparable Corpora. In Proceedings of the 20th International Conference on Computational Linguistics (COLING’04), pages 618–624. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ellen M Voorhees</author>
</authors>
<title>The trec question answering track.</title>
<date>2001</date>
<journal>Natural Language Engineering,</journal>
<volume>7</volume>
<issue>4</issue>
<contexts>
<context position="22568" citStr="Voorhees, 2001" startWordPosition="3657" endWordPosition="3658">rts our experimental results using the evaluation datasets explained in previous section. For each graph pair, we evaluated the effectiveness of (1) reinforcement model using MRR measure in Section 4.2.1 and (2) overall framework using precision, recall, and F1 measures in Section 4.2.2. We also validated (3) scalability of our framework over larger scale of graphs (with up to five thousand nodes) in Section 4.2.3. (In all experimental results, Bold numbers indicate the best performance for each metric.) 4.2.1 Effectiveness of reinforcement model We evaluated the reinforcement model over MRR (Voorhees, 2001), the average of the reciprocal ranks of the query results as the following formula: 1 1 |Q |qEQ rankq (4) Each q is a ground-truth matched pair (u, v) such that u ∈ Ve and v ∈ V,, and rankq is the rank of the similarity score of Ru„ among all Ruk’s such that k ∈ V, Q is a set of such queries. By comparing MRRs for two matrices R0 and R&apos;, we can validate the effectiveness of the reinforcement model. • Baseline matrix (R0): using only the transliteration similarity score, i.e., without reinforcement • Reinforced matrix (R&apos;): using the reinforced similarity score obtained from Equation (3) Table</context>
</contexts>
<marker>Voorhees, 2001</marker>
<rawString>Ellen M. Voorhees. 2001. The trec question answering track. Natural Language Engineering, 7(4):361–378.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen Wan</author>
<author>Cornelia Maria Verspoor</author>
</authors>
<title>Automatic English-Chinese Name Transliteration for Development of Multilingual Resources.</title>
<date>1998</date>
<booktitle>In Proceedings of the 17th International Conference on Computational Linguistics (COLING’98),</booktitle>
<pages>1352--1356</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<contexts>
<context position="2114" citStr="Wan and Verspoor, 1998" startWordPosition="287" endWordPosition="290">rce language into their corresponding names in target language. While high quality entity translation is essential in cross-lingual information access and trans*This work was done when the first two authors visited Microsoft Research Asia. lation, it is non-trivial to achieve, due to the challenge that entity translation, though typically bearing pronunciation similarity, can also be arbitrary, e.g., Jackie Chan and )IR J2 (pronounced Cheng Long). Existing efforts to address these challenges can be categorized into transliteration- and corpusbased approaches. Transliteration-based approaches (Wan and Verspoor, 1998; Knight and Graehl, 1998) identify translations based on pronunciation similarity, while corpus-based approaches mine bilingual co-occurrences of translation pairs obtained from parallel (Kupiec, 1993; Feng et al., 2004) or comparable (Fung and Yee, 1998) corpora, or alternatively mined from bilingual sentences (Lin et al., 2008; Jiang et al., 2009). These two approaches have complementary strength– transliteration-based similarity can be computed for any name pair but cannot mine translations of little (or none) phonetic similarity. Corpus-based similarity can support arbitrary translations,</context>
<context position="8019" citStr="Wan and Verspoor, 1998" startWordPosition="1144" endWordPosition="1147">ish PeopleEntityCube Ge (b) Chinese Renlifang Gc (c) Abstracting translation as graph mapping Figure 1: Illustration of entity-relationship graphs 2 Related Work In this section, we first survey related efforts, categorized into transliteration-based and corpus-based approaches. Our approach leveraging both is complementary to these efforts. 2.1 Transliteration-based Approaches Many name translations are loosely based on phonetic similarity, which naturally inspires transliteration-based translation of finding the translation with the closest pronunciation similarity, using either rule-based (Wan and Verspoor, 1998) or statistical (Knight and Graehl, 1998; Li et al., 2004) approaches. However, people are free to designate arbitrary bilingual names of little (or none) phonetic similarity, for which the transliteration-based approach is not effective. 2.2 Corpus-based Approaches Corpus-based approach can mine arbitrary translation pairs, by mining bilingual co-occurrences from parallel and comparable bilingual corpora. Using parallel corpora (Kupiec, 1993; Feng et al., 2004), e.g., bilingual Wikipedia entries on the same person, renders high accuracy but suffers from high scarcity. To alleviate such scarci</context>
</contexts>
<marker>Wan, Verspoor, 1998</marker>
<rawString>Stephen Wan and Cornelia Maria Verspoor. 1998. Automatic English-Chinese Name Transliteration for Development of Multilingual Resources. In Proceedings of the 17th International Conference on Computational Linguistics (COLING’98), pages 1352–1356. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Douglas Brent West</author>
</authors>
<title>Introduction to Graph Theory.</title>
<date>2000</date>
<publisher>Prentice Hall,</publisher>
<note>second edition.</note>
<contexts>
<context position="17757" citStr="West, 2000" startWordPosition="2818" endWordPosition="2819">(i, j, 0) Figure 3: How to get the ordered set Bt(i, j, 0) 2000)– Given two groups of entities Ve and Vc from the two graphs Ge and Gc, we can build a weighted bipartite graph is G = (V, E), where V = Ve U Vc and E is a set of edges (u, v) with weight R�&apos;v. To filter out null alignment, we construct only the edges with weight Ru &gt; S. From this bipartite graph, the maximum weighted bipartite matching problem finds a set of pairwise non-adjacent edges 5 C_ E such that E(u v)cS R&apos; is the maximum. Wellknown algorithms include Hungarian algorithm with time complexity of O(|V |2 log |V |+ |V ||E|) (West, 2000). In this paper, to speed up processing, we consider a greedy alternative with the following steps– (1) choose the pair with the highest similarity score, (2) remove the corresponding row and column from the matrix, and (3) repeat (1) and (2) until their matching scores are over a specific threshold S. 4 Experiments This section reports our experimental results to evaluate our proposed approach. First, we report our experimental setting in Section 4.1. Second, we validate the effectiveness and the scalability of our approach over a real-life dataset in Section 4.2. 4.1 Experimental Settings Th</context>
</contexts>
<marker>West, 2000</marker>
<rawString>Douglas Brent West. 2000. Introduction to Graph Theory. Prentice Hall, second edition.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>