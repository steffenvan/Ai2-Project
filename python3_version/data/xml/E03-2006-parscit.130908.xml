<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.198251">
<title confidence="0.998533">
Towards an Adaptive Communication Aid with Text Input
from Ambiguous Keyboards
</title>
<author confidence="0.998627">
Karin Harbusch Michael Kiihn
</author>
<affiliation confidence="0.996387">
University Koblenz–Landau, Computer Science Department
</affiliation>
<address confidence="0.893456">
Universitatsstr. 1, D-56070 Koblenz, GERMANY
</address>
<email confidence="0.801503">
fharbusch,kuehrll@uni–koblenz.de
</email>
<sectionHeader confidence="0.991347" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999651133333333">
Ambiguous keyboards provide efficient
typing with low motor demands. In
our projectl concerning the develop-
ment of a communication aid, we em-
phasize adaptation with respect to the
sensory input. At the same time, we
wish to impose individualized language
models on the text determination pro-
cess. UKO–II is an open architecture
based on the Emacs text editor with a
server/client interface for adaptive lan-
guage models. Not only the group of
motor impaired people but also users of
watch–sized devices can profit from this
ambiguous typing.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.984315142857143">
Written text for communication is of growing im-
portance in e–mails, SMS, newsgroups, web pages
— even in synchronous communication situations
like chatting, transmitted by electronic devices
(computers, cellular phones, handhelds). Com-
puter assisted text entry methods such as ambigu-
ous keyboards are feasible for synchronous and
even for asynchronous communication scenarios
as they allow complex communication on small
electronic devices. Various systems on the mobile
phone and handheld market promise a solution to
easier and faster text entry.
People with communication disorders are a
second group of users who can benefit from
</bodyText>
<footnote confidence="0.966512">
1The project is partially funded by the DFG — German
Research Foundation — under grant HA 2716/2-1.
</footnote>
<bodyText confidence="0.999644275862069">
computer–assisted text input. Often, speech im-
pairments coincide with severe motor impair-
ments. Standard keyboards or graphical input
devices are often unsuitable for motor impaired
users. Sometimes, only the operation of one or a
very small number of physical switches is possible
via buttons, joystick, eye–tracking or otherwise.
These two contexts of use are considerably dif-
ferent: Mobile communication typically happens
in the context of asynchronous telecommunication
(although fast exchange via SMS or e–mail some-
times develops into a synchronous communication
situation). Alternative and augmentative (AAC)
methods typically deal with communication strate-
gies in synchronous, face–to–face contexts where,
e.g., an electronic communication aid is used to
produce a text that is synthesized by a text–to–
speech system. (Of course, the produced text can
also be utilized in asynchronous telecommunica-
tion.)
However, in both contexts the challenging goal
is to efficiently produce short pieces of — usually
highly variable — natural language text under dif-
ficult circumstances. The small size of the device
is one factor prohibiting the use of a full keyboard,
the other factor is the user&apos;s restricted motor func-
tion. Both application areas share the aim of a per-
sonalized language model to be most effective for
the user.
</bodyText>
<sectionHeader confidence="0.891445" genericHeader="method">
2 Efficient text input methods
</sectionHeader>
<bodyText confidence="0.997589">
Two main classes of efficient text input methods
can be identified. First, on a standard QWERTY
</bodyText>
<footnote confidence="0.938427">
2As we concentrate on free text entering devices, we ig-
nore icon–based systems (cf. Lonke et al. (1999)).
</footnote>
<page confidence="0.997829">
207
</page>
<bodyText confidence="0.999769166666666">
keyboard. input can be accelerated by predicting
completion of commands and other word strings
(Darragh and Witten, 1992), which reduces the
number of keystrokes necessary to enter a word.
Motion impaired users who cannot access a full
keyboard are slowed down because they have to
select each individual key in multiple steps (scan-
ning).
Second, ambiguous keyboards give rise to com-
munication based on a reduced number of keys
(down to 4, cf. Fig. 1). Typing on these devices,
the user presses the key corresponding to the let-
ter only once. When the key corresponding to
the space bar is pressed, a dictionary is consulted
to find all words corresponding to the ambiguous
code.
The advantages of an ambiguous keyboard with
word disambiguation for users of AAC devices are
outlined by Kushler (1998). The efficiency of an
ambiguous keyboard approximates one keystroke
per letter. Apart from literacy, no memorization
of special encodings is required. Attention to the
display is required only after the word has been
typed. A keyboard with fewer and larger keys may
allow easier direct selection for users who other-
wise may depend on scanning.
An obstacle to both strategies, prediction and
disambiguation, may arise from gaps in the elec-
tronic lexicon. If a word is not known to the sys-
tem, the user of an ambiguous keyboard has to
leave the typing mode in order to enter the word
by other means. Another drawback of ambiguous
text entry is the increased cognitive load imposed
on users while typing the word: They may be un-
able to see the letters of the word already typed
and therefore have to memorize the input position.
</bodyText>
<sectionHeader confidence="0.941607" genericHeader="method">
3 The adaptive UKO-II system
</sectionHeader>
<bodyText confidence="0.99995725">
Assistive devices have to respond to dramatically
varying needs (Edwards, 1995). Therefore, in or-
der to be useful, they should allow adaptation to
specific requirements. We decided basically to
design an open architecture for a communication
system with publicly available sources3.
Scaffolding for our implementation is provided
by the programmable and extendable Emacs text
</bodyText>
<footnote confidence="0.7949475">
3For a collection of Open Source assistive technologies,
see TRACE Center (http://www.trace.wisc.edu/linux/).
</footnote>
<bodyText confidence="0.99930175">
editor, which already includes many text entry and
manipulation functions useful in our context. Fur-
thermore, operating system support (e.g. sockets),
basic applications like mail, and a development
environment with extensive documentation are at
the programmer&apos;s fingertips. All components in
the communication aid dealing with input/output
have been implemented as Emacs Lisp modules.
Our communication aid called UKO—TI (Fig. i)
is adaptable in two ways: First, the system is cus-
tomizable to differing keyboard layouts and to the
selection of word suggestions or additional edit-
ing commands Second, a layered structure of lan-
guage models controls the disambiguation process
and adapts to the user&apos;s text input. We discuss both
modes in turn.
</bodyText>
<table confidence="0.990537352941177">
,.. per
e present a communica ion did
air
act
red
tea
fit
aid
tip
ted
pet
pit
R-aw--**-xEmacs: *UKO Text&apos; &apos;&apos;&apos;&apos;&apos; ° - °IuKormatches
bjkno adfpq ceghi
Command
suvwx rt &apos; - lmyz
Button 1 Button 2 Button 3 Button 0
</table>
<figureCaption confidence="0.976736">
Figure 1: UKO-II Emacs text editing interface
with the ambiguous keyboard for English.
</figureCaption>
<bodyText confidence="0.999797529411765">
Our text entry interface presumes 71 (71 &gt; 1)
physical buttons. This parameter is determined ei-
ther by the user&apos;s motor functions or the device&apos;s
available buttons. For is &gt; 4, a genetic algo-
rithm computes a distribution of letters that opti-
mizes the length of suggested word lists with re-
spect to the fixed word frequency information pro-
vided by the lexicon. We utilize the frequencies
of the CELEX database (Baayen et al., 1995) ei-
ther for German or English; cf. Kiihn and Garbe
(2001) for off—line design of the entire keyboard
layout. If is &lt; 3, the keys have to be selected on a
virtual keyboard (scanning).
In our project the keyboard is tailored to a user
with cerebral palsy. No more than four buttons
can be accessed directly. Three buttons are am-
biguous letter keys with sets of letters assigned to
</bodyText>
<page confidence="0.992083">
208
</page>
<bodyText confidence="0.993108395348837">
them. The fourth button invokes letter deletion,
command mode or word disambiguation. Words
are entered by pressing the corresponding ambigu-
ous key once for each letter. Only after the word is
completed, the user disambiguates the input by se-
lecting the intended word in a list of hits provided
by the language model. Fig. 1 depicts the situation
after the word &amp;quot;aid&amp;quot; has been typed — by pressing
the middle, the right and the middle button again
(key sequence &amp;quot;232&amp;quot;) — and before the user se-
lects the intended word in the list of suggestions4.
If the target word is not known to the system,
it is possible to spell the word and to include it
in the lexicon for future use. Other actions in the
command mode provide text navigation and edit-
ing as well as activation of the speech output sys-
tem. These actions are triggered either by over-
loading the three letter keys with commands, or by
entering and disambiguating a command name.
The ranking in the list of suggestions for an am-
biguous code is determined by a statistical lan-
guage model. In the simplest case, word fre-
quencies extracted from corpora determine the or-
dering. As is known from various applications,
unconditional probabilities can be improved by
adding user–tailored constraints. We provide the
user with a situated and personalized language
model consisting of different layers:
1. The stop word model comprises a list of a
few hundred highly frequent stop words that
are not supposed to vary in their distribution
with respect to text genres, styles, etc. These
words are proposed with highest likelihood if
the corresponding code matches.
2. The local text model is incrementally con-
structed while writing a personal document.
Recently mentioned words are proposed with
higher likelihood than the general model
would do (various formulae for shuffling the
competitive suggestions are currently eval-
uated (Harbusch et al., 2003)). Further-
more, we have implemented a word fre-
quency adaptation for the text model.
</bodyText>
<listItem confidence="0.9950325">
3. Various domain specific models allow ap-
propriate suggestions in different semantic
</listItem>
<footnote confidence="0.991915">
4In the worst case, this list consists of 50 words in English
and 75 in German, respectively.
</footnote>
<bodyText confidence="0.999724592592593">
domains such as particular school subjects.
Texts in the various domains have been col-
lected. Their frequencies and contextual in-
formation are estimated in this layer.
4. The general language model stems from
large corpora; cf. CELEX frequencies
(Baayen et al., 1995). Furthermore, the user
can add personal vocabulary such as proper
names.
Except for the stop word list, the layers are com-
bined by interpolating the probabilities for any
word proposal. Alternatively, the user chooses ex-
plicitly between the local text model, a domain
model or the general model in order to disam-
biguate a word.
We have implemented several language models
providing the user with ranked lists of predicted
words for ambiguous input. Communication be-
tween a language model and the text entry inter-
face is handled in a client/server setting imple-
mented by sockets. Sockets enable a clearly dis-
tinct interface to the language model components.
An interesting technical option of the client/server
architecture is to use a language model server that
is located on another device, e.g. the notebook
used in the classroom or the communication aid
of another user.
</bodyText>
<sectionHeader confidence="0.999955" genericHeader="method">
4 Related work
</sectionHeader>
<bodyText confidence="0.999873222222222">
Prediction–based systems are widely applied in
the commercial area of communication aids (cf.
the PAL system by Swiffin et al. (1987) and
WordQ by Shein et al. (1998)). As we do not
investigate prediction–based methods, we only re-
fer to recent work in this area, such as Baroni et
al. (2002) and Fazly (2002).
An interesting recent development in the area
of ambiguous keyboards is the work performed by
(Tanaka-Ishii et al., 2002). They describe an am-
biguous text input system with five or less letter
keys. Word predictions are computed on the ba-
sis of prediction by partial matching (PPM) at the
word level. The letters are assigned to the keys in
alphabetical order. This approach favorably com-
pares to ours. However, in our approach the keys
have been assigned non–alphabetically after opti-
misation with respect to a large corpus.
</bodyText>
<page confidence="0.996995">
209
</page>
<bodyText confidence="0.9998515">
Other work on typing with word disambigua-
tion focusses on the nine letter keys of a standard
phone keyboard (e.g. Forcarda (2001), Skiena and
Rau (1996)), and can be traced back to the early
1980s (Witten, 1982, pp. 120-122). Work in alter-
native and augmentative communication preced-
ing Kushler (1998) deals with key—by—key dis-
ambiguation for efficient text input (Levine and
Goodenough-Trepagnier, 1990; Arnott and Javed,
1992).
</bodyText>
<sectionHeader confidence="0.99729" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.9999938">
We have presented UKO—II, an adaptive ambigu-
ous keyboard providing ranked lists of word sug-
gestions from customized language models.
With respect to the adaptation of the system&apos;s
user interface, we are transferring the keyboard to
a hand—held PC in order to make the every—day
use by a wheelchair user more convenient. Pro-
viding access to cellular phone communication is
also on our agenda.
As to the various language models, we have de-
signed all four layers. On the level of domain
models, we have modelled school topics and two
different research topics. Currently we run evalu-
ation studies on the competition formulae for the
rankings in the final list of suggestions
</bodyText>
<sectionHeader confidence="0.980411" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.974385814285714">
John L. Arnott and Muhammad Y. Javed. 1992. Prob-
abilistic character disambiguation for reduced key-
boards using small text samples. AAC Augmentative
and Alternative Communication, 8(1): 215-223 .
R. Harald Baayen, Richard Piepenbrock, and Leon Gu-
likers. 1995. The CELEX lexical database (re-
lease 2), [CD-ROM]. Linguistic Data Consortium,
Philadelphia, PA.
Marco Baroni, Johannes Matiasek, and Harald Trost.
2002. Wordform- and class-based prediction of the
components of German nominal compounds in an
AAC system. In (Tseng, 2002), pages 57-63.
CSUN Center of Disabilities. 1998. Online proceed-
ings of the Technology and Persons with Disabilities
Conference 1998. California State University, Nor-
tri dge, CA.
John J. Darragh and Ian H. Witten. 1992. The Reactive
Keyboard. Cambridge Univ. Press, Cambridge, MA.
Alistair D.N. Edwards, editor. 1995. Extra-ordinary
human-computer interaction: Interfaces for users
with disabilities. Cambridge University Press, Cam-
bridge, MA.
Afsaneh Fazly. 2002. The use of syntax in word com-
pletion utilities. MSc thesis, Department of Com-
puter Science, University of Toronto, Canada.
Mikel L. Forcada. 2001. Corpus-based stochastic
finite-state predictive text entry for reduced key-
boards: Application to Catalan. Procesamiento del
Lenguaje Natural, 27:65-70.
Karin Harbusch, Sala Hasan, Hajo Hoffmann, Michael
Kiihn, and Bernhard Schiller. 2003. Domain—
specific disambiguation for typing with ambiguous
keyboards. In Proceedings of the EACL workshop
on Language Modeling fc)r Text Entry Methods.
Michael Kiihn and Rim Garbe. 2001. Predictive and
highly ambiguous typing for a severely speech and
motion impaired user. In C. Stephanidis, editor,
Universal Access in Human-Computer Interaction,
pages 933-937. Lawrence Erlbaum, Mahwah, NJ.
Cliff Kushler. 1998. AAC using a reduced keyboard.
In (CSUN Center of Disabilities, 1998).
Stephen H. Levine and Cheryl Goodenough-
Trepagnier. 1990. Customised text entry devices
for motor-impaired users. Applied Ergonomics,
21(1):55-62.
Filip T. Loncke, John Clibbens, Helen H. Arvidson,
and Lyle Lloyd. 1999. Augmentative and Alter-
native Communication: New Directions in Research
and Practice. Whurr, London, UK.
Fraser Shein, Tom Nantais, Rose Nishiyama, Cynthia
Tam, and Paul Marshall. 1998. Word cueing for
persons with writing difficulties: WordQ. In (CSUN
Center of Disabilities, 1998).
Steven Skiena and Harald Rau. 1996. Dialing for doc-
uments: an experiment in information theory. Jour-
nal of Visual Languages and Computing, 7:79-95.
Andy L. Swiffin, John L. Arnott, and Alan F. Newell.
1987. The use of syntax in a predictive commu-
nication aid for the physically handicapped. In
Richard D. Steele and William Gerrey, editors, Proc.
of the 10th Annual Conference on Rehabilitation
Technology, pages 124-126, Washington, DC.
Kumiko Tanaka-Ishii, Yusuke Inutsuka, and Masato
Takeichi. 2002. Entering text with a four-button
device. In (Tseng, 2002), pages 988-994.
Shu-Chuan Tseng, editor. 2002. Proceedings of
the 19th International Conference on Computational
Linguistics (COLING 2002), Taipei, Taiwan.
Ian H. Witten. 1982. Principles of Computer Speech.
Academic Press, London, UK.
</reference>
<page confidence="0.998963">
210
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.965811">
<title confidence="0.9930265">Towards an Adaptive Communication Aid with Text Input from Ambiguous Keyboards</title>
<author confidence="0.999874">Karin Harbusch Michael Kiihn</author>
<affiliation confidence="0.999732">University Koblenz–Landau, Computer Science Department</affiliation>
<address confidence="0.987797">Universitatsstr. 1, D-56070 Koblenz, GERMANY</address>
<email confidence="0.999016">fharbusch,kuehrll@uni–koblenz.de</email>
<abstract confidence="0.9995223125">Ambiguous keyboards provide efficient typing with low motor demands. In concerning the development of a communication aid, we emphasize adaptation with respect to the sensory input. At the same time, we wish to impose individualized language models on the text determination proan open architecture based on the Emacs text editor with a server/client interface for adaptive language models. Not only the group of motor impaired people but also users of watch–sized devices can profit from this ambiguous typing.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>John L Arnott</author>
<author>Muhammad Y Javed</author>
</authors>
<title>Probabilistic character disambiguation for reduced keyboards using small text samples.</title>
<date>1992</date>
<journal>AAC Augmentative and Alternative Communication,</journal>
<volume>8</volume>
<issue>1</issue>
<pages>215--223</pages>
<contexts>
<context position="11687" citStr="Arnott and Javed, 1992" startWordPosition="1878" endWordPosition="1881">ys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine letter keys of a standard phone keyboard (e.g. Forcarda (2001), Skiena and Rau (1996)), and can be traced back to the early 1980s (Witten, 1982, pp. 120-122). Work in alternative and augmentative communication preceding Kushler (1998) deals with key—by—key disambiguation for efficient text input (Levine and Goodenough-Trepagnier, 1990; Arnott and Javed, 1992). 5 Conclusion We have presented UKO—II, an adaptive ambiguous keyboard providing ranked lists of word suggestions from customized language models. With respect to the adaptation of the system&apos;s user interface, we are transferring the keyboard to a hand—held PC in order to make the every—day use by a wheelchair user more convenient. Providing access to cellular phone communication is also on our agenda. As to the various language models, we have designed all four layers. On the level of domain models, we have modelled school topics and two different research topics. Currently we run evaluation</context>
</contexts>
<marker>Arnott, Javed, 1992</marker>
<rawString>John L. Arnott and Muhammad Y. Javed. 1992. Probabilistic character disambiguation for reduced keyboards using small text samples. AAC Augmentative and Alternative Communication, 8(1): 215-223 .</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Harald Baayen</author>
<author>Richard Piepenbrock</author>
<author>Leon Gulikers</author>
</authors>
<date>1995</date>
<booktitle>The CELEX lexical database (release 2), [CD-ROM]. Linguistic Data Consortium,</booktitle>
<location>Philadelphia, PA.</location>
<contexts>
<context position="6719" citStr="Baayen et al., 1995" startWordPosition="1052" endWordPosition="1055">&apos;&apos;&apos;&apos; ° - °IuKormatches bjkno adfpq ceghi Command suvwx rt &apos; - lmyz Button 1 Button 2 Button 3 Button 0 Figure 1: UKO-II Emacs text editing interface with the ambiguous keyboard for English. Our text entry interface presumes 71 (71 &gt; 1) physical buttons. This parameter is determined either by the user&apos;s motor functions or the device&apos;s available buttons. For is &gt; 4, a genetic algorithm computes a distribution of letters that optimizes the length of suggested word lists with respect to the fixed word frequency information provided by the lexicon. We utilize the frequencies of the CELEX database (Baayen et al., 1995) either for German or English; cf. Kiihn and Garbe (2001) for off—line design of the entire keyboard layout. If is &lt; 3, the keys have to be selected on a virtual keyboard (scanning). In our project the keyboard is tailored to a user with cerebral palsy. No more than four buttons can be accessed directly. Three buttons are ambiguous letter keys with sets of letters assigned to 208 them. The fourth button invokes letter deletion, command mode or word disambiguation. Words are entered by pressing the corresponding ambiguous key once for each letter. Only after the word is completed, the user disa</context>
<context position="9529" citStr="Baayen et al., 1995" startWordPosition="1524" endWordPosition="1527">for shuffling the competitive suggestions are currently evaluated (Harbusch et al., 2003)). Furthermore, we have implemented a word frequency adaptation for the text model. 3. Various domain specific models allow appropriate suggestions in different semantic 4In the worst case, this list consists of 50 words in English and 75 in German, respectively. domains such as particular school subjects. Texts in the various domains have been collected. Their frequencies and contextual information are estimated in this layer. 4. The general language model stems from large corpora; cf. CELEX frequencies (Baayen et al., 1995). Furthermore, the user can add personal vocabulary such as proper names. Except for the stop word list, the layers are combined by interpolating the probabilities for any word proposal. Alternatively, the user chooses explicitly between the local text model, a domain model or the general model in order to disambiguate a word. We have implemented several language models providing the user with ranked lists of predicted words for ambiguous input. Communication between a language model and the text entry interface is handled in a client/server setting implemented by sockets. Sockets enable a cle</context>
</contexts>
<marker>Baayen, Piepenbrock, Gulikers, 1995</marker>
<rawString>R. Harald Baayen, Richard Piepenbrock, and Leon Gulikers. 1995. The CELEX lexical database (release 2), [CD-ROM]. Linguistic Data Consortium, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marco Baroni</author>
<author>Johannes Matiasek</author>
<author>Harald Trost</author>
</authors>
<title>Wordform- and class-based prediction of the components of German nominal compounds in an AAC system. In (Tseng,</title>
<date>2002</date>
<pages>57--63</pages>
<contexts>
<context position="10710" citStr="Baroni et al. (2002)" startWordPosition="1720" endWordPosition="1723">mented by sockets. Sockets enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focus</context>
</contexts>
<marker>Baroni, Matiasek, Trost, 2002</marker>
<rawString>Marco Baroni, Johannes Matiasek, and Harald Trost. 2002. Wordform- and class-based prediction of the components of German nominal compounds in an AAC system. In (Tseng, 2002), pages 57-63.</rawString>
</citation>
<citation valid="true">
<date>1998</date>
<booktitle>Online proceedings of the Technology and Persons with Disabilities Conference</booktitle>
<institution>CSUN Center of Disabilities.</institution>
<contexts>
<context position="3905" citStr="(1998)" startWordPosition="599" endWordPosition="599">on impaired users who cannot access a full keyboard are slowed down because they have to select each individual key in multiple steps (scanning). Second, ambiguous keyboards give rise to communication based on a reduced number of keys (down to 4, cf. Fig. 1). Typing on these devices, the user presses the key corresponding to the letter only once. When the key corresponding to the space bar is pressed, a dictionary is consulted to find all words corresponding to the ambiguous code. The advantages of an ambiguous keyboard with word disambiguation for users of AAC devices are outlined by Kushler (1998). The efficiency of an ambiguous keyboard approximates one keystroke per letter. Apart from literacy, no memorization of special encodings is required. Attention to the display is required only after the word has been typed. A keyboard with fewer and larger keys may allow easier direct selection for users who otherwise may depend on scanning. An obstacle to both strategies, prediction and disambiguation, may arise from gaps in the electronic lexicon. If a word is not known to the system, the user of an ambiguous keyboard has to leave the typing mode in order to enter the word by other means. A</context>
<context position="10585" citStr="(1998)" startWordPosition="1700" endWordPosition="1700">Communication between a language model and the text entry interface is handled in a client/server setting implemented by sockets. Sockets enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned </context>
</contexts>
<marker>1998</marker>
<rawString>CSUN Center of Disabilities. 1998. Online proceedings of the Technology and Persons with Disabilities Conference 1998. California State University, Nortri dge, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John J Darragh</author>
<author>Ian H Witten</author>
</authors>
<title>The Reactive Keyboard.</title>
<date>1992</date>
<publisher>Cambridge Univ. Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="3227" citStr="Darragh and Witten, 1992" startWordPosition="481" endWordPosition="484">icult circumstances. The small size of the device is one factor prohibiting the use of a full keyboard, the other factor is the user&apos;s restricted motor function. Both application areas share the aim of a personalized language model to be most effective for the user. 2 Efficient text input methods Two main classes of efficient text input methods can be identified. First, on a standard QWERTY 2As we concentrate on free text entering devices, we ignore icon–based systems (cf. Lonke et al. (1999)). 207 keyboard. input can be accelerated by predicting completion of commands and other word strings (Darragh and Witten, 1992), which reduces the number of keystrokes necessary to enter a word. Motion impaired users who cannot access a full keyboard are slowed down because they have to select each individual key in multiple steps (scanning). Second, ambiguous keyboards give rise to communication based on a reduced number of keys (down to 4, cf. Fig. 1). Typing on these devices, the user presses the key corresponding to the letter only once. When the key corresponding to the space bar is pressed, a dictionary is consulted to find all words corresponding to the ambiguous code. The advantages of an ambiguous keyboard wi</context>
</contexts>
<marker>Darragh, Witten, 1992</marker>
<rawString>John J. Darragh and Ian H. Witten. 1992. The Reactive Keyboard. Cambridge Univ. Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<title>Extra-ordinary human-computer interaction: Interfaces for users with disabilities.</title>
<date>1995</date>
<editor>Alistair D.N. Edwards, editor.</editor>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, MA.</location>
<marker>1995</marker>
<rawString>Alistair D.N. Edwards, editor. 1995. Extra-ordinary human-computer interaction: Interfaces for users with disabilities. Cambridge University Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Afsaneh Fazly</author>
</authors>
<title>The use of syntax in word completion utilities. MSc thesis,</title>
<date>2002</date>
<institution>Department of Computer Science, University of Toronto, Canada.</institution>
<contexts>
<context position="10727" citStr="Fazly (2002)" startWordPosition="1725" endWordPosition="1726">s enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine l</context>
</contexts>
<marker>Fazly, 2002</marker>
<rawString>Afsaneh Fazly. 2002. The use of syntax in word completion utilities. MSc thesis, Department of Computer Science, University of Toronto, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mikel L Forcada</author>
</authors>
<title>Corpus-based stochastic finite-state predictive text entry for reduced keyboards: Application to Catalan. Procesamiento del Lenguaje Natural,</title>
<date>2001</date>
<pages>27--65</pages>
<marker>Forcada, 2001</marker>
<rawString>Mikel L. Forcada. 2001. Corpus-based stochastic finite-state predictive text entry for reduced keyboards: Application to Catalan. Procesamiento del Lenguaje Natural, 27:65-70.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karin Harbusch</author>
<author>Sala Hasan</author>
<author>Hajo Hoffmann</author>
<author>Michael Kiihn</author>
<author>Bernhard Schiller</author>
</authors>
<title>Domain— specific disambiguation for typing with ambiguous keyboards.</title>
<date>2003</date>
<booktitle>In Proceedings of the EACL workshop on Language Modeling fc)r Text Entry Methods.</booktitle>
<contexts>
<context position="8998" citStr="Harbusch et al., 2003" startWordPosition="1439" endWordPosition="1442">ituated and personalized language model consisting of different layers: 1. The stop word model comprises a list of a few hundred highly frequent stop words that are not supposed to vary in their distribution with respect to text genres, styles, etc. These words are proposed with highest likelihood if the corresponding code matches. 2. The local text model is incrementally constructed while writing a personal document. Recently mentioned words are proposed with higher likelihood than the general model would do (various formulae for shuffling the competitive suggestions are currently evaluated (Harbusch et al., 2003)). Furthermore, we have implemented a word frequency adaptation for the text model. 3. Various domain specific models allow appropriate suggestions in different semantic 4In the worst case, this list consists of 50 words in English and 75 in German, respectively. domains such as particular school subjects. Texts in the various domains have been collected. Their frequencies and contextual information are estimated in this layer. 4. The general language model stems from large corpora; cf. CELEX frequencies (Baayen et al., 1995). Furthermore, the user can add personal vocabulary such as proper na</context>
</contexts>
<marker>Harbusch, Hasan, Hoffmann, Kiihn, Schiller, 2003</marker>
<rawString>Karin Harbusch, Sala Hasan, Hajo Hoffmann, Michael Kiihn, and Bernhard Schiller. 2003. Domain— specific disambiguation for typing with ambiguous keyboards. In Proceedings of the EACL workshop on Language Modeling fc)r Text Entry Methods.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Kiihn</author>
<author>Rim Garbe</author>
</authors>
<title>Predictive and highly ambiguous typing for a severely speech and motion impaired user.</title>
<date>2001</date>
<booktitle>Universal Access in Human-Computer Interaction,</booktitle>
<pages>933--937</pages>
<editor>In C. Stephanidis, editor,</editor>
<location>Mahwah, NJ.</location>
<contexts>
<context position="6776" citStr="Kiihn and Garbe (2001)" startWordPosition="1063" endWordPosition="1066">rt &apos; - lmyz Button 1 Button 2 Button 3 Button 0 Figure 1: UKO-II Emacs text editing interface with the ambiguous keyboard for English. Our text entry interface presumes 71 (71 &gt; 1) physical buttons. This parameter is determined either by the user&apos;s motor functions or the device&apos;s available buttons. For is &gt; 4, a genetic algorithm computes a distribution of letters that optimizes the length of suggested word lists with respect to the fixed word frequency information provided by the lexicon. We utilize the frequencies of the CELEX database (Baayen et al., 1995) either for German or English; cf. Kiihn and Garbe (2001) for off—line design of the entire keyboard layout. If is &lt; 3, the keys have to be selected on a virtual keyboard (scanning). In our project the keyboard is tailored to a user with cerebral palsy. No more than four buttons can be accessed directly. Three buttons are ambiguous letter keys with sets of letters assigned to 208 them. The fourth button invokes letter deletion, command mode or word disambiguation. Words are entered by pressing the corresponding ambiguous key once for each letter. Only after the word is completed, the user disambiguates the input by selecting the intended word in a l</context>
</contexts>
<marker>Kiihn, Garbe, 2001</marker>
<rawString>Michael Kiihn and Rim Garbe. 2001. Predictive and highly ambiguous typing for a severely speech and motion impaired user. In C. Stephanidis, editor, Universal Access in Human-Computer Interaction, pages 933-937. Lawrence Erlbaum, Mahwah, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cliff Kushler</author>
</authors>
<title>AAC using a reduced keyboard.</title>
<date>1998</date>
<booktitle>In (CSUN Center of Disabilities,</booktitle>
<contexts>
<context position="3905" citStr="Kushler (1998)" startWordPosition="598" endWordPosition="599">rd. Motion impaired users who cannot access a full keyboard are slowed down because they have to select each individual key in multiple steps (scanning). Second, ambiguous keyboards give rise to communication based on a reduced number of keys (down to 4, cf. Fig. 1). Typing on these devices, the user presses the key corresponding to the letter only once. When the key corresponding to the space bar is pressed, a dictionary is consulted to find all words corresponding to the ambiguous code. The advantages of an ambiguous keyboard with word disambiguation for users of AAC devices are outlined by Kushler (1998). The efficiency of an ambiguous keyboard approximates one keystroke per letter. Apart from literacy, no memorization of special encodings is required. Attention to the display is required only after the word has been typed. A keyboard with fewer and larger keys may allow easier direct selection for users who otherwise may depend on scanning. An obstacle to both strategies, prediction and disambiguation, may arise from gaps in the electronic lexicon. If a word is not known to the system, the user of an ambiguous keyboard has to leave the typing mode in order to enter the word by other means. A</context>
<context position="11560" citStr="Kushler (1998)" startWordPosition="1863" endWordPosition="1864">re computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine letter keys of a standard phone keyboard (e.g. Forcarda (2001), Skiena and Rau (1996)), and can be traced back to the early 1980s (Witten, 1982, pp. 120-122). Work in alternative and augmentative communication preceding Kushler (1998) deals with key—by—key disambiguation for efficient text input (Levine and Goodenough-Trepagnier, 1990; Arnott and Javed, 1992). 5 Conclusion We have presented UKO—II, an adaptive ambiguous keyboard providing ranked lists of word suggestions from customized language models. With respect to the adaptation of the system&apos;s user interface, we are transferring the keyboard to a hand—held PC in order to make the every—day use by a wheelchair user more convenient. Providing access to cellular phone communication is also on our agenda. As to the various language models, we have designed all four layer</context>
</contexts>
<marker>Kushler, 1998</marker>
<rawString>Cliff Kushler. 1998. AAC using a reduced keyboard. In (CSUN Center of Disabilities, 1998).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stephen H Levine</author>
<author>Cheryl GoodenoughTrepagnier</author>
</authors>
<title>Customised text entry devices for motor-impaired users.</title>
<date>1990</date>
<journal>Applied Ergonomics,</journal>
<pages>21--1</pages>
<marker>Levine, GoodenoughTrepagnier, 1990</marker>
<rawString>Stephen H. Levine and Cheryl GoodenoughTrepagnier. 1990. Customised text entry devices for motor-impaired users. Applied Ergonomics, 21(1):55-62.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Filip T Loncke</author>
<author>John Clibbens</author>
<author>Helen H Arvidson</author>
<author>Lyle Lloyd</author>
</authors>
<date>1999</date>
<booktitle>Augmentative and Alternative Communication: New Directions in Research and Practice.</booktitle>
<location>Whurr, London, UK.</location>
<marker>Loncke, Clibbens, Arvidson, Lloyd, 1999</marker>
<rawString>Filip T. Loncke, John Clibbens, Helen H. Arvidson, and Lyle Lloyd. 1999. Augmentative and Alternative Communication: New Directions in Research and Practice. Whurr, London, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fraser Shein</author>
<author>Tom Nantais</author>
<author>Rose Nishiyama</author>
<author>Cynthia Tam</author>
<author>Paul Marshall</author>
</authors>
<title>Word cueing for persons with writing difficulties: WordQ.</title>
<date>1998</date>
<booktitle>In (CSUN Center of Disabilities,</booktitle>
<contexts>
<context position="10585" citStr="Shein et al. (1998)" startWordPosition="1697" endWordPosition="1700">guous input. Communication between a language model and the text entry interface is handled in a client/server setting implemented by sockets. Sockets enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned </context>
</contexts>
<marker>Shein, Nantais, Nishiyama, Tam, Marshall, 1998</marker>
<rawString>Fraser Shein, Tom Nantais, Rose Nishiyama, Cynthia Tam, and Paul Marshall. 1998. Word cueing for persons with writing difficulties: WordQ. In (CSUN Center of Disabilities, 1998).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Skiena</author>
<author>Harald Rau</author>
</authors>
<title>Dialing for documents: an experiment in information theory.</title>
<date>1996</date>
<journal>Journal of Visual Languages and Computing,</journal>
<pages>7--79</pages>
<contexts>
<context position="11411" citStr="Skiena and Rau (1996)" startWordPosition="1837" endWordPosition="1840">yboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine letter keys of a standard phone keyboard (e.g. Forcarda (2001), Skiena and Rau (1996)), and can be traced back to the early 1980s (Witten, 1982, pp. 120-122). Work in alternative and augmentative communication preceding Kushler (1998) deals with key—by—key disambiguation for efficient text input (Levine and Goodenough-Trepagnier, 1990; Arnott and Javed, 1992). 5 Conclusion We have presented UKO—II, an adaptive ambiguous keyboard providing ranked lists of word suggestions from customized language models. With respect to the adaptation of the system&apos;s user interface, we are transferring the keyboard to a hand—held PC in order to make the every—day use by a wheelchair user more c</context>
</contexts>
<marker>Skiena, Rau, 1996</marker>
<rawString>Steven Skiena and Harald Rau. 1996. Dialing for documents: an experiment in information theory. Journal of Visual Languages and Computing, 7:79-95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andy L Swiffin</author>
<author>John L Arnott</author>
<author>Alan F Newell</author>
</authors>
<title>The use of syntax in a predictive communication aid for the physically handicapped.</title>
<date>1987</date>
<booktitle>Proc. of the 10th Annual Conference on Rehabilitation Technology,</booktitle>
<pages>124--126</pages>
<editor>In Richard D. Steele and William Gerrey, editors,</editor>
<location>Washington, DC.</location>
<contexts>
<context position="10552" citStr="Swiffin et al. (1987)" startWordPosition="1690" endWordPosition="1693">d lists of predicted words for ambiguous input. Communication between a language model and the text entry interface is handled in a client/server setting implemented by sockets. Sockets enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our appr</context>
</contexts>
<marker>Swiffin, Arnott, Newell, 1987</marker>
<rawString>Andy L. Swiffin, John L. Arnott, and Alan F. Newell. 1987. The use of syntax in a predictive communication aid for the physically handicapped. In Richard D. Steele and William Gerrey, editors, Proc. of the 10th Annual Conference on Rehabilitation Technology, pages 124-126, Washington, DC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kumiko Tanaka-Ishii</author>
<author>Yusuke Inutsuka</author>
<author>Masato Takeichi</author>
</authors>
<title>Entering text with a four-button device. In (Tseng,</title>
<date>2002</date>
<pages>988--994</pages>
<contexts>
<context position="10850" citStr="Tanaka-Ishii et al., 2002" startWordPosition="1742" endWordPosition="1745">e client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine letter keys of a standard phone keyboard (e.g. Forcarda (2001), Skiena and Rau (1996)), and can be traced back to the early </context>
</contexts>
<marker>Tanaka-Ishii, Inutsuka, Takeichi, 2002</marker>
<rawString>Kumiko Tanaka-Ishii, Yusuke Inutsuka, and Masato Takeichi. 2002. Entering text with a four-button device. In (Tseng, 2002), pages 988-994.</rawString>
</citation>
<citation valid="true">
<date>2002</date>
<booktitle>Proceedings of the 19th International Conference on Computational Linguistics (COLING 2002),</booktitle>
<editor>Shu-Chuan Tseng, editor.</editor>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="10710" citStr="(2002)" startWordPosition="1723" endWordPosition="1723">ets. Sockets enable a clearly distinct interface to the language model components. An interesting technical option of the client/server architecture is to use a language model server that is located on another device, e.g. the notebook used in the classroom or the communication aid of another user. 4 Related work Prediction–based systems are widely applied in the commercial area of communication aids (cf. the PAL system by Swiffin et al. (1987) and WordQ by Shein et al. (1998)). As we do not investigate prediction–based methods, we only refer to recent work in this area, such as Baroni et al. (2002) and Fazly (2002). An interesting recent development in the area of ambiguous keyboards is the work performed by (Tanaka-Ishii et al., 2002). They describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focus</context>
</contexts>
<marker>2002</marker>
<rawString>Shu-Chuan Tseng, editor. 2002. Proceedings of the 19th International Conference on Computational Linguistics (COLING 2002), Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ian H Witten</author>
</authors>
<title>Principles of Computer Speech.</title>
<date>1982</date>
<publisher>Academic Press,</publisher>
<location>London, UK.</location>
<contexts>
<context position="11469" citStr="Witten, 1982" startWordPosition="1850" endWordPosition="1851">describe an ambiguous text input system with five or less letter keys. Word predictions are computed on the basis of prediction by partial matching (PPM) at the word level. The letters are assigned to the keys in alphabetical order. This approach favorably compares to ours. However, in our approach the keys have been assigned non–alphabetically after optimisation with respect to a large corpus. 209 Other work on typing with word disambiguation focusses on the nine letter keys of a standard phone keyboard (e.g. Forcarda (2001), Skiena and Rau (1996)), and can be traced back to the early 1980s (Witten, 1982, pp. 120-122). Work in alternative and augmentative communication preceding Kushler (1998) deals with key—by—key disambiguation for efficient text input (Levine and Goodenough-Trepagnier, 1990; Arnott and Javed, 1992). 5 Conclusion We have presented UKO—II, an adaptive ambiguous keyboard providing ranked lists of word suggestions from customized language models. With respect to the adaptation of the system&apos;s user interface, we are transferring the keyboard to a hand—held PC in order to make the every—day use by a wheelchair user more convenient. Providing access to cellular phone communicatio</context>
</contexts>
<marker>Witten, 1982</marker>
<rawString>Ian H. Witten. 1982. Principles of Computer Speech. Academic Press, London, UK.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>