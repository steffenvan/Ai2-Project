<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000140">
<title confidence="0.9801205">
Automatic Agenda Graph Construction from Human-Human Dialogs
using Clustering Method
</title>
<author confidence="0.996143">
Cheongjae Lee, Sangkeun Jung, Kyungduk Kim, Gary Geunbae Lee
</author>
<affiliation confidence="0.905770333333333">
Department of Computer Science and Engineering
Pohang University of Science and Technology
Pohang, South Korea
</affiliation>
<email confidence="0.977351">
{lcj80,hugman,getta,gblee}@postech.ac.kr
</email>
<sectionHeader confidence="0.994671" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999930363636364">
Various knowledge sources are used for spo-
ken dialog systems such as task model, do-
main model, and agenda. An agenda graph is
one of the knowledge sources for a dialog
management to reflect a discourse structure.
This paper proposes a clustering and linking
method to automatically construct an agenda
graph from human-human dialogs. Prelimi-
nary evaluation shows our approach would be
helpful to reduce human efforts in designing
prior knowledge.
</bodyText>
<sectionHeader confidence="0.998129" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.990502736842105">
Data-driven approaches have been long applied for spo-
ken language technologies. Although a data-driven ap-
proach requires time-consuming data annotation, the
training is done automatically and requires little human
supervision. These advantages have motivated the de-
velopment of data-driven dialog modelings (Williams
and Young, 2007, Lee et al., 2009). In general, the data-
driven approaches are more robust and portable than
traditional knowledge-based approaches. However, var-
ious knowledge sources are still used in many spoken
dialog systems that have been developed recently. These
knowledge sources contain task model, domain model,
and agenda which are powerful representation to reflect
the hierarchy of natural dialog control. In the spoken
dialog systems, these are manually designed for various
purposes including dialog modeling (Bohus and Rud-
nicky, 2003, Lee et al., 2008), search space reduction
(Young et al., 2007), domain knowledge (Roy and Sub-
ramaniam, 2006), and user simulation (Schatzmann et
al., 2007).
We have proposed an example-based dialog modeling
(EBDM) framework using an agenda graph as prior
knowledge (Lee et al., 2008). This is one of the data-
driven dialog modeling techniques and the next system
action is determined by selecting the most similar dialog
examples in dialog example database. In the EBDM
framework for task-oriented dialogs, agenda graph is
manually designed to address two aspects of a dialog
management: (1) Keeping track of the dialog state with
a view to ensuring steady progress towards task comple-
tion, and (2) Supporting n-best recognition hypotheses
to improve the robustness of dialog manager. However,
manually building such graphs for various applications
may be labor intensive and time consuming. Thus, we
have tried to investigate how to build this graph auto-
matically. Consequently, we sought to solve the prob-
lem by automatically building the agenda graph using
clustering method from an annotated dialog corpus.
</bodyText>
<sectionHeader confidence="0.999786" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.9999862">
Clustering techniques have been widely used to build
prior knowledge for spoken dialog systems. One of
them is automatic construction of domain model (or
topic structure) which is one of the important resources
to handle user’s queries in call centers. Traditional ap-
proach to building domain models is that the analysts
manually generate a domain model through inspection
of the call records. However, it has recently been pro-
posed to use an unsupervised technique to generate do-
main models automatically from call transcriptions (Roy
and Subramaniam, 2006). In addition, there has been
research on how to automatically learn models of task-
oriented discourse structure using dialog act and task
information (Bangalore et al., 2006). Discourse struc-
ture is necessary for dialog state-specific speech recog-
nition and language understanding to improve the
performance by predicting the next possible dialog
states. In addition, the discourse structure is essential to
determine whether the current utterance in the dialog is
part of the current subtask or starts a new task.
</bodyText>
<page confidence="0.825603">
89
</page>
<note confidence="0.642849">
Proceedings of NAACL HLT 2009: Short Papers, pages 89–92,
Boulder, Colorado, June 2009. c�2009 Association for Computational Linguistics
</note>
<figureCaption confidence="0.965912">
Figure 1: Example of an agenda graph for building
guidance domain
</figureCaption>
<bodyText confidence="0.999990933333333">
More recently, it has been proposed stochastic dialog
management such as the framework of a partially ob-
servable Markov decision process (POMDP). This
framework is statistically data-driven and theoretically
principled dialog modeling. However, detailed dialog
states in the master space should be clustered into gen-
eral dialog states in summary space to scale up
POMDP-based dialog management for practical appli-
cations (Williams and Young, 2007). To address this
problem, an unsupervised automatic clustering of dialog
states has been introduced and investigated in POMDP-
based dialog manager (Lefevre and Mori, 2007).
In this paper, we are also interested in exploring me-
thods that would automatically construct the agenda
graph as prior knowledge for the EBDM framework.
</bodyText>
<sectionHeader confidence="0.954825" genericHeader="method">
3 Agenda Graph
</sectionHeader>
<bodyText confidence="0.98441525">
In this section, we begin with a brief overview of
EBDM framework and agenda graph. The basic idea of
the EBDM is that the next system action is predicted by
finding semantically similar user utterance in the dialog
state space. The agenda graph was adapted to take into
account the robustness problem for practical applica-
tions. Agenda graph G is a simply a way of encoding
the domain-specific dialog control to complete the task.
G is represented by a directed acyclic graph (DAG)
(Figure 1). An agenda is one of the subtask flows, which
is a possible path from root node to terminal node. G is
composed of nodes (v) which correspond to possible
intermediate steps in the process of completing the spe-
cified task, and edges (e) which connect nodes. In other
words, v corresponds to dialog state to achieve domain-
specific subtask in its expected agenda. Each node in-
cludes three different components: (1) A precondition
that must be true before the subtask is executed; (2) A
description of the node that includes its label and iden-
tifier; and (3) Links to nodes that will be executed at the
subsequent turn. In this system, this graph is used to
rescore n-best ASR hypotheses and to interpret the dis-
course state such as new task, next task, and new sub-
task based on topological position on the graph. In the
agenda graph G, each node holds a set of relevant dialog
Feature Types Features #Size
Word-level
features
dialog act (DA) 9
Utterance-level main goal (MG) 16
features slot filling status 8
system act (SA) 26
Discourse-level
features previous MG 17
previous DA 10
previous SA 27
</bodyText>
<tableCaption confidence="0.95059">
Table 1: List of feature sets
</tableCaption>
<bodyText confidence="0.999977705882353">
examples which may appear in the corresponding dialog
states when a precondition of the node is true. To de-
termine the next system action, the dialog manager first
generates possible candidate nodes with n-best hypo-
theses by using a discourse interpretation algorithm
based on the agenda graph, and then selects the focus
node which is the most likely dialog state given the pre-
vious dialog state. Finally the best example in the focus
node is selected to determine appropriate system action.
Human efforts are required to manually design the
agenda graph to integrate it into the EBDM framework.
However, it is difficult to define all possible precondi-
tion rules and to assign the transition probabilities to
each link based only on the discretion of the system
developer. To solve these problems, we tried to con-
struct the agenda graph from the annotated dialog cor-
pus using clustering technique.
</bodyText>
<sectionHeader confidence="0.930945" genericHeader="method">
4 Clustering and Linking
</sectionHeader>
<subsectionHeader confidence="0.988587">
4.1 Node Clustering
</subsectionHeader>
<bodyText confidence="0.9999805">
Each precondition has been manually defined to map
relevant dialog examples into each node. To avoid this,
the dialog examples are automatically grouped into the
closest cluster (or node) by a node clustering. In this
section, we explain a feature extraction and clustering
method for constructing the agenda graph.
</bodyText>
<subsectionHeader confidence="0.500962">
4.1.1 Feature Extraction
</subsectionHeader>
<bodyText confidence="0.999975727272727">
Each dialog example should be converted into a feature
vector for a node clustering. To represent the feature
vectors, we first extract all n-grams which occur more
frequently than a threshold and do not contain any stop
word as word-level features. We also extract utterance-
level and discourse-level features from the annotated
dialog corpus to reflect semantic and contextual infor-
mation because a dialog state can be characterized using
semantic and contextual information derivable from the
annotations. The utterance is thus characterized by the
set of various features as shown in Table 1.
</bodyText>
<figure confidence="0.53463925">
unigram 175
bigram 573
trigram 1034
90
</figure>
<bodyText confidence="0.999317357142857">
For a set of N dialog examples X={xi|i=1,..,N}, the
binary feature vectors are represented by using a set of
features from the dialog corpus. To calculate the dis-
tance of two feature vectors, we used a cosine measure
as a binary vector distance measure:
where xi and x; denoted two feature vectors. However,
each feature vector contains small number of non-zero
terms (&lt;20 features) compared to the feature space
(&gt;2000 features). Therefore, most pairs of utterances
share no common feature, and their distance is close to
1.0. To address this sparseness problem, the distance
between two utterances can be computed by checking
only the non-zero terms of corresponding feature vec-
tors (Liu, 2005).
</bodyText>
<equation confidence="0.998690666666667">
�-1
x X
� i=1 �
</equation>
<subsectionHeader confidence="0.670135">
4.1.2 Clustering
</subsectionHeader>
<bodyText confidence="0.999465625">
After extracting feature vectors from the dialog corpus,
we used K-means clustering algorithm which is the sim-
plest and most commonly used algorithm employing a
squared error criterion. At the initialization step, one
cluster mean is randomly selected in the data set and k-1
means are iteratively assigned by selecting the farthest
point from pre-selected centers as the following equa-
tion:
</bodyText>
<equation confidence="0.993806">
k
uk =argmax �d(x,ui)
r kt
</equation>
<bodyText confidence="0.999923666666667">
where each cluster ck is represented as a mean vector uk.
At the assignment step, each example is assigned to the
nearest cluster by minimizing the distance of cluster
mean uk and dialog example xt.
The responsibilities rkt of each cluster ck are calcu-
lated for each example xt fas the following rule:
</bodyText>
<equation confidence="0.98498875">
1—Q&apos; d(uk,xt)}
Elexpf—Q&apos;d(ul,xt)}
, k, ,
r x
</equation>
<bodyText confidence="0.99504175">
where β is the stiffness and usually assigned to 1.
During the update step, the means are recomputed us-
ing the current cluster membership by reflecting their
responsibilities:
</bodyText>
<figureCaption confidence="0.915695">
Figure 2: Node Linking Algorithm
</figureCaption>
<bodyText confidence="0.948913058823529">
This linking information can come from the dialog cor-
pus because the task-oriented dialogs consist of sequen-
tial utterances to complete the tasks. Using sequences of
dialog examples obtained with the dialog corpus, rela-
tive frequencies of all outgoing edges are calculated to
weight directed edges:
n(xa vi vj)
n(x a vi)
where represents the number of dialog exam-
ples in vi and denotes the number of di-
alog examples having directed edge from vi to v;. Next
some edges are pruned when the weight falls below a
pre-defined threshold δ, and the cycle paths are removed
by deleting minimal edge in cycle paths through a
depth-first traversal. Finally the transition probability
can be estimated by normalizing relative frequencies
with the remained edges.
</bodyText>
<equation confidence="0.41111965">
p v v
(  |) 
j ilf(vi,vl)
f
i
j)
5 Experiment &amp; Result
�
exp
f
(vi,vj)

(v
,
v
uk


 rk,
r
</equation>
<subsectionHeader confidence="0.995472">
4.2 Node Linking
</subsectionHeader>
<bodyText confidence="0.9386804">
From the node clustering step, node vk for cluster ck is
obtained from the dialog corpus and each node contains
similar dialog examples by the node clustering algo-
rithm. Next, at the node linking step, each node should
be connected with an appropriate transition probability
to build the agenda graph which is a DAG (Figure 2).
A spoken dialog system for intelligent robot was devel-
oped to provide information about building (e.g., room
number, room name, room type) and people (e.g., name,
phone number, e-mail address). If the user selects a
specific room to visit, then the robot takes the user to
the desired room. For this system, we collect
dialog corpus of about 880 user utterances from
214 dialogs which were based on a set of pre-defined 10
subjects relating to building guidance task. Then, we
designed an agenda graph and integrated it into the
EBDM framework. In addition, a simulated environ-
ment with a user simulator and an
a human-
human
</bodyText>
<note confidence="0.570679">
ASR channel (Jung et
</note>
<page confidence="0.750204">
91
</page>
<bodyText confidence="0.977184285714286">
al., 2008) was developed to evaluate our approach by
simulating a realistic scenario.
First we measured the clustering performance to veri-
fy our approach for constructing the agenda graph. We
used the manually clustered examples by a set of pre-
condition rules as the reference clusters. Table 2 shows
error rates when different feature sets are used for K-
means clustering in which K is equal to 10 because a
hand-crafted graph included 10 nodes. The error rate
was significantly reduced when using all feature sets.
Feature sets Error rate (%)
Word-level features 46.51
+Utterance-level features 34.63
+Discourse-level features 31.20
</bodyText>
<tableCaption confidence="0.791591">
Table 2: Error rates for node clustering (K=10)
</tableCaption>
<bodyText confidence="0.9998998">
We also evaluated the dialog system performance
with the agenda graphs which are manually (HC-AG) or
automatically designed (AC-AG). We also used 10-best
recognition hypotheses with 20% word error rate
(WER) for a dialog management and 1000 simulated
dialogs for an automatic evaluation. In this result, al-
though the system with HC-AG slightly outperforms the
system with AC-AG, we believe that AC-AG can be
helpful to manage task-oriented dialogs with less human
costs for designing the hand-crafted agenda graph.
</bodyText>
<table confidence="0.930877666666667">
System TCR (%) AvgUserTurn
Using HC-AG 92.96 4.41
Using AC-AG 89.95 4.39
</table>
<tableCaption confidence="0.9776135">
Table 3: Task completion rate (TCR) and average
user turn (AvgUserTurn) (WER=20%)
</tableCaption>
<sectionHeader confidence="0.984184" genericHeader="conclusions">
6 Conclusion &amp; Discussion
</sectionHeader>
<bodyText confidence="0.999985428571429">
In this paper, we address the problem of automatic
knowledge acquisition of agenda graph to structure
task-oriented dialogs. We view this problem as a first
step in clustering the dialog states, and then in linking
between each cluster based on the dialog corpus. The
experiment results show that our approach can be appli-
cable to easily build the agenda graph for prior know-
ledge.
There are several possible subjects for further re-
search on our approach. We can improve the clustering
performance by using a distance metric learning algo-
rithm to consider the correlation between features. We
can also discover hidden links in the graph by exploring
new dialog flows with random walks.
</bodyText>
<sectionHeader confidence="0.954657" genericHeader="acknowledgments">
Acknowledgement
</sectionHeader>
<bodyText confidence="0.994186">
This research was supported by the MKE (Ministry of
Knowledge Economy), Korea, under the ITRC (Infor-
mation Technology Research Center) support program
supervised by the IITA (Institute for Information Tech-
nology Advancement) (IITA-2009-C1090-0902-0045).
</bodyText>
<sectionHeader confidence="0.997948" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999698714285715">
Bangalore, S., Fabbrizio, G.D. and Stent, A. 2006. Learning
the structure of task-driven human-human dialogs. Proc. of
the Association for Computational Linguistics, 201-208.
Bohus, B. and Rudnicky, A. 2003. RavenClaw: Dialog Man-
agement Using Hierarchical Task Decomposition and an
Expectation Agenda. Proc. of the European Conference on
Speech, Communication and Technology, 597-600.
Jung, S., Lee, C., Kim, K. and Lee, G.G. 2008. An Integrated
Dialog Simulation Technique for Evaluating Spoken Dialog
Systems. Proc. of Workshop on Speech Processing for Safe-
ty Critical Translation and Pervasive Applications, Interna-
tional Conference on Computational Linguistics, 9-16.
Lee, C., Jung, S. and Lee, G.G. 2008. Robust Dialog Man-
agement with N-best Hypotheses using Dialog Examples
and Agenda. Proc. of the Association for Computational
Linguistics, 630-637.
Lee, C., Jung, S., Kim, S. and Lee, G.G. 2009. Example-based
Dialog Modeling for Practical Multi-domain Dialog System.
Speech Communication, 51(5):466-484.
Lefevre, F. and Mori, R.D. 2007. Unsupervised State Cluster-
ing for Stochastic Dialog Management. Proc. of the IEEE
Workshop on Automatic Speech Recognition and Under-
standing, 550-555.
Liu, Z. 2005. An Efficient Algorithm for Clustering Short
Spoken Utterances. Proc. of the IEEE International Confe-
rence on Acoustics, Speech and Signal Processing, 593-596.
Roy, S. and Subramaniam, L.V. 2006. Automatic generation
of domain models for call centers from noisy transcriptions.
Proc. of the Association for Computational Linguistics, 737-
744.
Schatzmann, J., Thomson, B., Weilhammer, K., Ye, H. and
Young, S. 2007. Agenda-based User Simulation for Boot-
strapping a POMDP Dialogue System. Proc. of the Human
Language Technology/North American Chapter of the Asso-
ciation for Computational Linguistics, 149-152.
Williams, J.D. and Young, S. 2007. Partially observable Mar-
kov decision processes for spoken dialog systems. Comput-
er Speech and Language, 21:393-422.
Young, S., Schatzmann, J., Weilhammer, K. and Ye, H. 2007.
The Hidden Information State Approach to Dialog Man-
agement. Proc. of the IEEE International Conference on
Acoustics, Speech and Signal Processing, 149-152.
</reference>
<page confidence="0.689583">
92
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.548554">
<title confidence="0.9938125">Automatic Agenda Graph Construction from Human-Human using Clustering Method</title>
<author confidence="0.998315">Cheongjae Lee</author>
<author confidence="0.998315">Sangkeun Jung</author>
<author confidence="0.998315">Kyungduk Kim</author>
<author confidence="0.998315">Gary Geunbae</author>
<affiliation confidence="0.999742">Department of Computer Science and Pohang University of Science and</affiliation>
<address confidence="0.669991">Pohang, South</address>
<email confidence="0.840778">lcj80@postech.ac.kr</email>
<email confidence="0.840778">hugman@postech.ac.kr</email>
<email confidence="0.840778">getta@postech.ac.kr</email>
<email confidence="0.840778">gblee@postech.ac.kr</email>
<abstract confidence="0.994040583333333">Various knowledge sources are used for spoken dialog systems such as task model, domain model, and agenda. An agenda graph is one of the knowledge sources for a dialog management to reflect a discourse structure. This paper proposes a clustering and linking method to automatically construct an agenda graph from human-human dialogs. Preliminary evaluation shows our approach would be helpful to reduce human efforts in designing prior knowledge.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S Bangalore</author>
<author>G D Fabbrizio</author>
<author>A Stent</author>
</authors>
<title>Learning the structure of task-driven human-human dialogs.</title>
<date>2006</date>
<booktitle>Proc. of the Association for Computational Linguistics,</booktitle>
<pages>201--208</pages>
<contexts>
<context position="3493" citStr="Bangalore et al., 2006" startWordPosition="520" endWordPosition="523">s automatic construction of domain model (or topic structure) which is one of the important resources to handle user’s queries in call centers. Traditional approach to building domain models is that the analysts manually generate a domain model through inspection of the call records. However, it has recently been proposed to use an unsupervised technique to generate domain models automatically from call transcriptions (Roy and Subramaniam, 2006). In addition, there has been research on how to automatically learn models of taskoriented discourse structure using dialog act and task information (Bangalore et al., 2006). Discourse structure is necessary for dialog state-specific speech recognition and language understanding to improve the performance by predicting the next possible dialog states. In addition, the discourse structure is essential to determine whether the current utterance in the dialog is part of the current subtask or starts a new task. 89 Proceedings of NAACL HLT 2009: Short Papers, pages 89–92, Boulder, Colorado, June 2009. c�2009 Association for Computational Linguistics Figure 1: Example of an agenda graph for building guidance domain More recently, it has been proposed stochastic dialog</context>
</contexts>
<marker>Bangalore, Fabbrizio, Stent, 2006</marker>
<rawString>Bangalore, S., Fabbrizio, G.D. and Stent, A. 2006. Learning the structure of task-driven human-human dialogs. Proc. of the Association for Computational Linguistics, 201-208.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Bohus</author>
<author>A Rudnicky</author>
</authors>
<title>RavenClaw: Dialog Management Using Hierarchical Task Decomposition and an Expectation Agenda.</title>
<date>2003</date>
<booktitle>Proc. of the European Conference on Speech, Communication and Technology,</booktitle>
<pages>597--600</pages>
<contexts>
<context position="1634" citStr="Bohus and Rudnicky, 2003" startWordPosition="228" endWordPosition="232">es have motivated the development of data-driven dialog modelings (Williams and Young, 2007, Lee et al., 2009). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Roy and Subramaniam, 2006), and user simulation (Schatzmann et al., 2007). We have proposed an example-based dialog modeling (EBDM) framework using an agenda graph as prior knowledge (Lee et al., 2008). This is one of the datadriven dialog modeling techniques and the next system action is determined by selecting the most similar dialog examples in dialog example database. In the EBDM framework for task-oriented dialogs, agenda graph is manually designed to address two aspects of a dialog management: (1) Keeping</context>
</contexts>
<marker>Bohus, Rudnicky, 2003</marker>
<rawString>Bohus, B. and Rudnicky, A. 2003. RavenClaw: Dialog Management Using Hierarchical Task Decomposition and an Expectation Agenda. Proc. of the European Conference on Speech, Communication and Technology, 597-600.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Jung</author>
<author>C Lee</author>
<author>K Kim</author>
<author>G G Lee</author>
</authors>
<title>An Integrated Dialog Simulation Technique for Evaluating Spoken Dialog Systems.</title>
<date>2008</date>
<booktitle>Proc. of Workshop on Speech Processing for Safety Critical Translation and Pervasive Applications, International Conference on Computational Linguistics,</booktitle>
<pages>9--16</pages>
<marker>Jung, Lee, Kim, Lee, 2008</marker>
<rawString>Jung, S., Lee, C., Kim, K. and Lee, G.G. 2008. An Integrated Dialog Simulation Technique for Evaluating Spoken Dialog Systems. Proc. of Workshop on Speech Processing for Safety Critical Translation and Pervasive Applications, International Conference on Computational Linguistics, 9-16.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Lee</author>
<author>S Jung</author>
<author>G G Lee</author>
</authors>
<date>2008</date>
<booktitle>Robust Dialog Management with N-best Hypotheses using Dialog Examples and Agenda. Proc. of the Association for Computational Linguistics,</booktitle>
<pages>630--637</pages>
<contexts>
<context position="1653" citStr="Lee et al., 2008" startWordPosition="233" endWordPosition="236">lopment of data-driven dialog modelings (Williams and Young, 2007, Lee et al., 2009). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Roy and Subramaniam, 2006), and user simulation (Schatzmann et al., 2007). We have proposed an example-based dialog modeling (EBDM) framework using an agenda graph as prior knowledge (Lee et al., 2008). This is one of the datadriven dialog modeling techniques and the next system action is determined by selecting the most similar dialog examples in dialog example database. In the EBDM framework for task-oriented dialogs, agenda graph is manually designed to address two aspects of a dialog management: (1) Keeping track of the dialo</context>
</contexts>
<marker>Lee, Jung, Lee, 2008</marker>
<rawString>Lee, C., Jung, S. and Lee, G.G. 2008. Robust Dialog Management with N-best Hypotheses using Dialog Examples and Agenda. Proc. of the Association for Computational Linguistics, 630-637.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Lee</author>
<author>S Jung</author>
<author>S Kim</author>
<author>G G Lee</author>
</authors>
<title>Example-based Dialog Modeling for Practical Multi-domain Dialog System. Speech Communication,</title>
<date>2009</date>
<pages>51--5</pages>
<contexts>
<context position="1120" citStr="Lee et al., 2009" startWordPosition="154" endWordPosition="157">ourse structure. This paper proposes a clustering and linking method to automatically construct an agenda graph from human-human dialogs. Preliminary evaluation shows our approach would be helpful to reduce human efforts in designing prior knowledge. 1 Introduction Data-driven approaches have been long applied for spoken language technologies. Although a data-driven approach requires time-consuming data annotation, the training is done automatically and requires little human supervision. These advantages have motivated the development of data-driven dialog modelings (Williams and Young, 2007, Lee et al., 2009). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Ro</context>
</contexts>
<marker>Lee, Jung, Kim, Lee, 2009</marker>
<rawString>Lee, C., Jung, S., Kim, S. and Lee, G.G. 2009. Example-based Dialog Modeling for Practical Multi-domain Dialog System. Speech Communication, 51(5):466-484.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Lefevre</author>
<author>R D Mori</author>
</authors>
<title>Unsupervised State Clustering for Stochastic Dialog Management.</title>
<date>2007</date>
<booktitle>Proc. of the IEEE Workshop on Automatic Speech Recognition and Understanding,</booktitle>
<pages>550--555</pages>
<contexts>
<context position="4658" citStr="Lefevre and Mori, 2007" startWordPosition="692" endWordPosition="695">main More recently, it has been proposed stochastic dialog management such as the framework of a partially observable Markov decision process (POMDP). This framework is statistically data-driven and theoretically principled dialog modeling. However, detailed dialog states in the master space should be clustered into general dialog states in summary space to scale up POMDP-based dialog management for practical applications (Williams and Young, 2007). To address this problem, an unsupervised automatic clustering of dialog states has been introduced and investigated in POMDPbased dialog manager (Lefevre and Mori, 2007). In this paper, we are also interested in exploring methods that would automatically construct the agenda graph as prior knowledge for the EBDM framework. 3 Agenda Graph In this section, we begin with a brief overview of EBDM framework and agenda graph. The basic idea of the EBDM is that the next system action is predicted by finding semantically similar user utterance in the dialog state space. The agenda graph was adapted to take into account the robustness problem for practical applications. Agenda graph G is a simply a way of encoding the domain-specific dialog control to complete the tas</context>
</contexts>
<marker>Lefevre, Mori, 2007</marker>
<rawString>Lefevre, F. and Mori, R.D. 2007. Unsupervised State Clustering for Stochastic Dialog Management. Proc. of the IEEE Workshop on Automatic Speech Recognition and Understanding, 550-555.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Z Liu</author>
</authors>
<title>An Efficient Algorithm for Clustering Short Spoken Utterances.</title>
<date>2005</date>
<booktitle>Proc. of the IEEE International Conference on Acoustics, Speech and Signal Processing,</booktitle>
<pages>593--596</pages>
<contexts>
<context position="9064" citStr="Liu, 2005" startWordPosition="1425" endWordPosition="1426">nted by using a set of features from the dialog corpus. To calculate the distance of two feature vectors, we used a cosine measure as a binary vector distance measure: where xi and x; denoted two feature vectors. However, each feature vector contains small number of non-zero terms (&lt;20 features) compared to the feature space (&gt;2000 features). Therefore, most pairs of utterances share no common feature, and their distance is close to 1.0. To address this sparseness problem, the distance between two utterances can be computed by checking only the non-zero terms of corresponding feature vectors (Liu, 2005). �-1 x X � i=1 � 4.1.2 Clustering After extracting feature vectors from the dialog corpus, we used K-means clustering algorithm which is the simplest and most commonly used algorithm employing a squared error criterion. At the initialization step, one cluster mean is randomly selected in the data set and k-1 means are iteratively assigned by selecting the farthest point from pre-selected centers as the following equation: k uk =argmax �d(x,ui) r kt where each cluster ck is represented as a mean vector uk. At the assignment step, each example is assigned to the nearest cluster by minimizing th</context>
</contexts>
<marker>Liu, 2005</marker>
<rawString>Liu, Z. 2005. An Efficient Algorithm for Clustering Short Spoken Utterances. Proc. of the IEEE International Conference on Acoustics, Speech and Signal Processing, 593-596.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Roy</author>
<author>L V Subramaniam</author>
</authors>
<title>Automatic generation of domain models for call centers from noisy transcriptions.</title>
<date>2006</date>
<booktitle>Proc. of the Association for Computational Linguistics,</booktitle>
<pages>737--744</pages>
<contexts>
<context position="1744" citStr="Roy and Subramaniam, 2006" startWordPosition="246" endWordPosition="250">9). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Roy and Subramaniam, 2006), and user simulation (Schatzmann et al., 2007). We have proposed an example-based dialog modeling (EBDM) framework using an agenda graph as prior knowledge (Lee et al., 2008). This is one of the datadriven dialog modeling techniques and the next system action is determined by selecting the most similar dialog examples in dialog example database. In the EBDM framework for task-oriented dialogs, agenda graph is manually designed to address two aspects of a dialog management: (1) Keeping track of the dialog state with a view to ensuring steady progress towards task completion, and (2) Supporting</context>
<context position="3319" citStr="Roy and Subramaniam, 2006" startWordPosition="493" endWordPosition="496">g clustering method from an annotated dialog corpus. 2 Related Work Clustering techniques have been widely used to build prior knowledge for spoken dialog systems. One of them is automatic construction of domain model (or topic structure) which is one of the important resources to handle user’s queries in call centers. Traditional approach to building domain models is that the analysts manually generate a domain model through inspection of the call records. However, it has recently been proposed to use an unsupervised technique to generate domain models automatically from call transcriptions (Roy and Subramaniam, 2006). In addition, there has been research on how to automatically learn models of taskoriented discourse structure using dialog act and task information (Bangalore et al., 2006). Discourse structure is necessary for dialog state-specific speech recognition and language understanding to improve the performance by predicting the next possible dialog states. In addition, the discourse structure is essential to determine whether the current utterance in the dialog is part of the current subtask or starts a new task. 89 Proceedings of NAACL HLT 2009: Short Papers, pages 89–92, Boulder, Colorado, June </context>
</contexts>
<marker>Roy, Subramaniam, 2006</marker>
<rawString>Roy, S. and Subramaniam, L.V. 2006. Automatic generation of domain models for call centers from noisy transcriptions. Proc. of the Association for Computational Linguistics, 737-744.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Schatzmann</author>
<author>B Thomson</author>
<author>K Weilhammer</author>
<author>H Ye</author>
<author>S Young</author>
</authors>
<title>Agenda-based User Simulation for Bootstrapping a POMDP Dialogue System.</title>
<date>2007</date>
<booktitle>Proc. of the Human Language Technology/North American Chapter of the Association for Computational Linguistics,</booktitle>
<pages>149--152</pages>
<contexts>
<context position="1791" citStr="Schatzmann et al., 2007" startWordPosition="254" endWordPosition="257">e robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Roy and Subramaniam, 2006), and user simulation (Schatzmann et al., 2007). We have proposed an example-based dialog modeling (EBDM) framework using an agenda graph as prior knowledge (Lee et al., 2008). This is one of the datadriven dialog modeling techniques and the next system action is determined by selecting the most similar dialog examples in dialog example database. In the EBDM framework for task-oriented dialogs, agenda graph is manually designed to address two aspects of a dialog management: (1) Keeping track of the dialog state with a view to ensuring steady progress towards task completion, and (2) Supporting n-best recognition hypotheses to improve the r</context>
</contexts>
<marker>Schatzmann, Thomson, Weilhammer, Ye, Young, 2007</marker>
<rawString>Schatzmann, J., Thomson, B., Weilhammer, K., Ye, H. and Young, S. 2007. Agenda-based User Simulation for Bootstrapping a POMDP Dialogue System. Proc. of the Human Language Technology/North American Chapter of the Association for Computational Linguistics, 149-152.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J D Williams</author>
<author>S Young</author>
</authors>
<title>Partially observable Markov decision processes for spoken dialog systems.</title>
<date>2007</date>
<journal>Computer Speech and Language,</journal>
<pages>21--393</pages>
<contexts>
<context position="1101" citStr="Williams and Young, 2007" startWordPosition="150" endWordPosition="153">nagement to reflect a discourse structure. This paper proposes a clustering and linking method to automatically construct an agenda graph from human-human dialogs. Preliminary evaluation shows our approach would be helpful to reduce human efforts in designing prior knowledge. 1 Introduction Data-driven approaches have been long applied for spoken language technologies. Although a data-driven approach requires time-consuming data annotation, the training is done automatically and requires little human supervision. These advantages have motivated the development of data-driven dialog modelings (Williams and Young, 2007, Lee et al., 2009). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), d</context>
<context position="4487" citStr="Williams and Young, 2007" startWordPosition="667" endWordPosition="670">2009: Short Papers, pages 89–92, Boulder, Colorado, June 2009. c�2009 Association for Computational Linguistics Figure 1: Example of an agenda graph for building guidance domain More recently, it has been proposed stochastic dialog management such as the framework of a partially observable Markov decision process (POMDP). This framework is statistically data-driven and theoretically principled dialog modeling. However, detailed dialog states in the master space should be clustered into general dialog states in summary space to scale up POMDP-based dialog management for practical applications (Williams and Young, 2007). To address this problem, an unsupervised automatic clustering of dialog states has been introduced and investigated in POMDPbased dialog manager (Lefevre and Mori, 2007). In this paper, we are also interested in exploring methods that would automatically construct the agenda graph as prior knowledge for the EBDM framework. 3 Agenda Graph In this section, we begin with a brief overview of EBDM framework and agenda graph. The basic idea of the EBDM is that the next system action is predicted by finding semantically similar user utterance in the dialog state space. The agenda graph was adapted </context>
</contexts>
<marker>Williams, Young, 2007</marker>
<rawString>Williams, J.D. and Young, S. 2007. Partially observable Markov decision processes for spoken dialog systems. Computer Speech and Language, 21:393-422.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Young</author>
<author>J Schatzmann</author>
<author>K Weilhammer</author>
<author>H Ye</author>
</authors>
<title>The Hidden Information State Approach to Dialog Management.</title>
<date>2007</date>
<booktitle>Proc. of the IEEE International Conference on Acoustics, Speech and Signal Processing,</booktitle>
<pages>149--152</pages>
<contexts>
<context position="1698" citStr="Young et al., 2007" startWordPosition="240" endWordPosition="243">lliams and Young, 2007, Lee et al., 2009). In general, the datadriven approaches are more robust and portable than traditional knowledge-based approaches. However, various knowledge sources are still used in many spoken dialog systems that have been developed recently. These knowledge sources contain task model, domain model, and agenda which are powerful representation to reflect the hierarchy of natural dialog control. In the spoken dialog systems, these are manually designed for various purposes including dialog modeling (Bohus and Rudnicky, 2003, Lee et al., 2008), search space reduction (Young et al., 2007), domain knowledge (Roy and Subramaniam, 2006), and user simulation (Schatzmann et al., 2007). We have proposed an example-based dialog modeling (EBDM) framework using an agenda graph as prior knowledge (Lee et al., 2008). This is one of the datadriven dialog modeling techniques and the next system action is determined by selecting the most similar dialog examples in dialog example database. In the EBDM framework for task-oriented dialogs, agenda graph is manually designed to address two aspects of a dialog management: (1) Keeping track of the dialog state with a view to ensuring steady progre</context>
</contexts>
<marker>Young, Schatzmann, Weilhammer, Ye, 2007</marker>
<rawString>Young, S., Schatzmann, J., Weilhammer, K. and Ye, H. 2007. The Hidden Information State Approach to Dialog Management. Proc. of the IEEE International Conference on Acoustics, Speech and Signal Processing, 149-152.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>