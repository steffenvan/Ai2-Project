<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.992438">
Generating Contextually Appropriate Intonation*
</title>
<author confidence="0.999758">
Scott Prevost &amp; Mark Steedman
</author>
<affiliation confidence="0.998337">
Computer and Information Science
University of Pennsylvania
</affiliation>
<address confidence="0.8106075">
200 South 33rd Street
Philadelphia PA 19104-6389, USA
</address>
<email confidence="0.709919">
(Internet: prevostal inc . cis . upenn edu steedman@cis . upenn . edu)
</email>
<sectionHeader confidence="0.987974" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999937666666667">
One source of unnaturalness in the output
of text-to-speech systems stems from the in-
volvement of algorithmically generated de-
fault intonation contours, applied under
minimal control from syntax and semantics.
It is a tribute both to the resilience of hu-
man language understanding and to the in-
genuity of the inventors of these algorithms
that the results are as intelligible as they
are. However, the result is very frequently
unnatural, and may on occasion mislead the
hearer. This paper extends earlier work on
the relation between syntax and intonation
in language understanding in Combinatory
Categorial Grammar (CCG). A generator
with a simple and domain-independent dis-
course model can be used to direct synthe-
sis of intonation contours for responses to
data-base queries, to convey distinctions of
contrast and emphasis determined by the
discourse model.
</bodyText>
<sectionHeader confidence="0.985412" genericHeader="keywords">
1 The Problem
</sectionHeader>
<bodyText confidence="0.9987392">
Consider the exchange shown in example (1). Capi-
tals indicate stress, and brackets informally indicate
the intonational phrasing. The intonation contour
is indicated underneath using Pierrehumbert&apos;s nota-
tion ([8], [1], see [13] for a brief summary). L+H*
</bodyText>
<footnote confidence="0.934933">
&amp;quot;Keywords: Speech-synthesis; Generation. We thank
Mark Beutnagel and AT&amp;T Bell Laboratories for allow-
ing us access to the TTS speech synthesiser. The re-
search was supported in part by NSF grant nos 1R190-
18513, 1R190-16592, and 1R191-17110, DARPA grant no.
N00014-90-J-1863, and ARO grant no. DAAL03-89-
C0031.
</footnote>
<bodyText confidence="0.999741567567568">
and H* are different high pitch accents, and LH%
and LL% (and its relative L) are rising and low
boundaries respectively. The other annotations in-
dicate that the intonational tunes L+H* LH% and
H* LL% convey two distinct kinds of discourse in-
formation. First, both pitch accents mark any word
that they occur on (or rather, its interpretation) for
&amp;quot;focus&amp;quot;, which in the context of such simple queries
as example (1) usually implies contrast of some kind.
Second, the tunes as a whole mark the constituent
that bears them (or rather, its interpretation) as
having a particular function in the discourse. We
have argued at length elsewhere that, at least in this
same restricted class of dialogues, the function of the
L+H* LH% tune is to mark the &amp;quot;theme&amp;quot; — that is,
&amp;quot;what the participants have agreed to talk about&amp;quot;.
The II* LL% tune (and its relative the H* L tune)
mark the &amp;quot;rheme&amp;quot; — that is, &amp;quot;what the speaker has
to say&amp;quot; about the theme. This phenomenon is a
strong one: the same intonation contour sounds quite
anomalous in the context of a question that does not
establish the correct open proposition as the theme,
such as Which device has the fast processor?. One
further point is worth noting: the unit that we are
calling the theme is not in this example a traditional
syntactic constituent. Many problems in the analy-
sis and synthesis of spoken language result from the
partial independence of syntactic and intonational
phrase boundaries.
The architecture of our system (shown in Figure 1)
is for the most part self-explanatory, but we note that
we follow a long tradition in separating the process
of generation itself into two phases. The &amp;quot;strategic&amp;quot;
phase is one in which the content of the utterance
is planned, including the division into theme and
rheme, and the assignment of contrastive focus. The
&amp;quot;tactical&amp;quot; phase is one in which content is mapped
</bodyText>
<page confidence="0.991835">
332
</page>
<figure confidence="0.963837823529412">
(1) Q: I know that the OLD widget had a SLOW processor.
But what processor does the NEW widget include?
A: (The NEW widget includes) (a
L+H* LH%
Ground Focus Ground Ground
Theme
FAST processor)
H* LL%
Focus Ground
Rheme
Prosodically Annotated Question
Intonational Parser
iiirategic Generator
Tactical Generator
Database
Prosodically Annotated Response
Spoken Response
</figure>
<figureCaption confidence="0.9425815">
Figure 1: Architecture
onto strings of words.
</figureCaption>
<sectionHeader confidence="0.674176" genericHeader="introduction">
2 CCG-Based Prosody
</sectionHeader>
<bodyText confidence="0.999854">
We will assume a standard CCG of the kind dis-
cussed in [11], [12], and [13]. For example, we shall
write the category of a transitive verb like prefers
either abbreviated, as in (2)a, or in full as in (2)b:
</bodyText>
<listItem confidence="0.854461">
(2) a. (S\N P)IN P
b. (S : include&apos; x y\NP : y)/ NP : x
</listItem>
<bodyText confidence="0.9798964">
In b, syntactic types are paired with a semantic in-
terpretation via the colon operator, and the category
is that of a function from NPs (with interpretation
x) to functions from NPs (with interpretation y) to
Ss (with interpretation include&apos; x y). Constants in
interpretations bear primes, variables do not, and
there is a convention of left associativity.
We also need the following two rules of functional
application, where X and Y are variables over cate-
gories in either notation:
</bodyText>
<listItem confidence="0.873258">
(3) FUNCTIONAL APPLICATION:
a. X/Y Y X ( &gt;)
b. Y X\Y X ( &lt;)
</listItem>
<bodyText confidence="0.992888">
CCG extends this strictly context-free categorial
base in two respects. First, all arguments, such
as NPs, bear only type-raised categories, such as
S/(S\NP). Similarly, all functions into such cate-
gories, such as determiners, are functions into the
raised categories, such as (SI(S\N P))IN. For ex-
ample, subject NPs bear the following category in
the full notation:
</bodyText>
<listItem confidence="0.478112">
(4) widgets := S : s : s\NP : widgets&apos;)
</listItem>
<bodyText confidence="0.996997">
The derivation of a simple transitive sentence ap-
pears as follows in the abbreviated notation:1
</bodyText>
<figure confidence="0.326179">
(5) Widgets include sprockets
S/(S\NP) (S\NP)/NP (S\NOMS\NP)/NP)
S \NP
</figure>
<bodyText confidence="0.999311333333333">
Second, the combinatory rules are extended to in-
clude functional composition, as well as application.
The following rule will be relevant below:
</bodyText>
<listItem confidence="0.969933">
(6) FORWARD COMPOSITION (›B):
X/Y Y/Z B X/Z
</listItem>
<bodyText confidence="0.990332">
This rule allows a second syntactic derivation for the
above sentence, as follows:2
</bodyText>
<figure confidence="0.772596">
(7) Widgets include sprockets
S/(S\NP) (S\NP)/NP S\(S/NP)
&gt;B
S/NP
</figure>
<footnote confidence="0.993653333333333">
1The reader is encouraged to satisfy themselves
using the full semantic notation that this deriva-
tion yields an S with the correct interpretation
include&apos; sprockets&apos; widgets&apos;. At first glance, it looks as
though type-raising will expand the lexicon alarmingly.
One way round this problem is discussed in [14].
2The reader is again strongly uged to satisfy them-
selves that the S yielded in the derivation bears the cor-
rect interpretation.
</footnote>
<figure confidence="0.917636666666667">
CCG
TTS Translator
Speech Synthesizer
</figure>
<page confidence="0.998743">
333
</page>
<bodyText confidence="0.999063315789474">
The reasons for making this move, which concern
the grammar of coordinate constructions, the gen-
eral class of rules from which the composition rule
is drawn, and the problem of processing in the face
of such associative rules, are discussed in the earlier
papers, and need not concern us here. The point
for present purposes is that the partition of the sen-
tence into the object and a non-standard constituent
S : include&apos; x&apos; widgets&apos; I NP : x makes this theory
structurally and semantically perfectly suited to the
demands of intonation, as exhibited in example (1).3
We can therefore directly incorporate intonational
constituency in syntax, as follows (cf. [12], [13], and
[15]). We assign to all constituents an autonomous
prosodic category, expressing their potential for com-
bination with other prosodic categories. Then we
lock these two structural systems together via the
following principle, which says that syntactic and
prosodic constituency must be isomorphic:
</bodyText>
<listItem confidence="0.9224722">
(8) PROSODIC CONSTITUENT CONDITION:
Combination of two syntactic categories
via a syntactic combinatory rule is only al-
lowed if their prosodic categories can also
combine via a prosodic combinatory rule.
</listItem>
<bodyText confidence="0.987575333333333">
One way to do this is to make the boundaries ar-
guments and the pitch accents functions over them.
The boundaries are as follows:4
</bodyText>
<listItem confidence="0.606842333333333">
(9) L := b : 1
LL% := b : 11
LH% := b : lh
</listItem>
<bodyText confidence="0.99942375">
As in CCG, categories consist of a structural type,
here b for boundary, and an interpretation, associ-
ated via a colon. The pitch accents have the follow-
ing functional types:5
</bodyText>
<equation confidence="0.7243515">
(10) L+H* := p : themelb : lh
II* := p : rhemelb :1, P : rhemelb :11
</equation>
<bodyText confidence="0.999906571428571">
We further assume, following Bird [2], that the pres-
ence of a pitch accent causes some element(s) in the
translation of the category to be marked as focussed,
a matter which we will for simplicity assume occurs
at the level of the lexicon. For example, when in-
cludes bears a pitch accent, its category will be as
follows:
</bodyText>
<equation confidence="0.659692">
(11) (S: (*include&apos;) x P : y)/NP : x
</equation>
<bodyText confidence="0.9917063">
The categories that result from the combination of
a pitch accent and a boundary may or may not con-
stitute entire prosodic phrases, since there may be a
prenuclear null tone. There may also be a null tone
separating the pitch accent(s) from the boundary.
&apos;A similar argument in a related categorial framework
is made by Moortgat [6].
&apos;These categories slightly depart from Pierrehumbert.
5 Here we are ignoring the possibility of multiple pitch
accents in the same prosodic phrase, but cf. [13].
(Both possibilities are illustrated in (1)). We there-
fore assign the following category to the null tone,
which can thereby apply to the right to any non-
functional category of the form X :Y , and compose
to their right with any function into such a category,
including another null tone, to yield the same cate-
gory:
(12) 0 := X : Y/X : Y
It is this omnivorous category that allows intona-
tional tunes to be spread over arbitrarily large con-
stituents, since it allows the pitch accent&apos;s desire for
a boundary to propagate via composition into the
null tone category (see the earlier papers).
In order to allow the derivation to proceed above
the level of complete prosodic phrases identifying
themes and rhemes, we need two unary category-
changing rules to mark the interpretation a of the
corresponding grammatical category with that dis-
course function and change the phonological cate-
gory, thus:6
</bodyText>
<equation confidence="0.99519275">
(13) E
p : X Phi
(14) E = E
P : X
</equation>
<bodyText confidence="0.999955571428572">
These rules change the prosodic category either to p,
or to an endocentric function over p. (These types
capture the fact that the LL% boundary can only
occur at the end of a sentence, thereby correcting
an overgeneration in the version of this theory in
Steedman [13], noted by Bird [2]). The fact that p
is an atom rather than a term of the form X :Y is
important, since it means that it can combine only
with another p. This is vital to the preservation of
the intonation structure.7
The application of the above two rules to a com-
plete intonational phrase should be thought of as pre-
cipitating a side-effect whereby a copy of the category
E is associated with the clause as its theme or rheme.
(We gloss over details of how themes and rhemes are
associated with a particular clause, as well as a num-
ber of further complications arising in sentences with
more than one rheme).
In [13] and [15], a related set of rules of which
the present ones form a subset are shown to be well-
behaved with a wide range of examples. Example
</bodyText>
<listItem confidence="0.59354575">
(15) gives the derivation for an example related to
(7) (since the raised object category is not crucial, it
has been replaced by NP to ease comprehension):8
Note that it is the identification of the theme and
</listItem>
<footnote confidence="0.942834">
6These rules represent both a departure from the ear-
lier papers and a slight simplification of what is actually
needed to allow prosodic phrases to combine correctly.
7The category has the same effect of preventing fur-
ther composition into the null tone achieved in the earlier
papers by a restriction on forward prosodic composition.
8Note the focus-marking effect of the pitch accents.
</footnote>
<page confidence="0.996098">
334
</page>
<table confidence="0.3034653">
(15) Widgets include sprockets
( L+H* LH% ) ( H* LL% )
S:s/(S:s\NP:*widget&apos;) (S:include&apos;x y\NP:y)/NP:x NP:*sprockets&apos;
p:theme/b:lh b:lh P:rheme
S: include&apos; x *widget /NP : x
p:theme
=======
S:include&apos; x *widget&apos;/NP:x NP:*sprockets&apos;
P/P
S: include&apos; *sprockets&apos; *widget&apos;
</table>
<tableCaption confidence="0.2304055">
Theme: S: include z *widgetINP : z
Rheme: NP: *sprockets
</tableCaption>
<bodyText confidence="0.981830538461538">
rheme at the stage before the final reduction that de-
termines the information structure for the response,
for it is at this point that discourse elements like
the open proposition are explicit, and can be used in
semantically-driven synthesis of intonation contour
directly from the constituents.
Of course, such gushingly unambiguous intonation
contours are comparitively rare in normal dialogues.
Even in the context given in (7), a more usual re-
sponse to the question would put low pitch — that is,
the null tone in Pierrehumbert&apos;s terms — on every-
thing except the focus of the rheme, sprockets, as in
the following:
</bodyText>
<listItem confidence="0.84857">
(16) Widgets include SPROCKETS
</listItem>
<bodyText confidence="0.999712">
Such an utterance is of course ambiguous as to
whether the theme is widgets or what widgets in-
clude. The earlier papers show that such &amp;quot;un-
marked&amp;quot; themes, which include no pitch accent be-
cause they are entirely background, can be captured
by a &amp;quot;Null Theme Promotion Rule&amp;quot;, as follows:9
</bodyText>
<equation confidence="0.96873">
X : Y/X : Y = p : theme
</equation>
<sectionHeader confidence="0.994321" genericHeader="method">
3 Parsing
</sectionHeader>
<bodyText confidence="0.995428">
Having established the relationship between prosody,
information structure and CCG syntax, we can now
address the computational problem of automatically
directing the synthesis of intonation contours for
responses to database queries. Our computational
model (shown in Figure 1) starts with a prosodically
annotated wh-question given as a string of words
with associated Pierrehumbert-style pitch accent and
boundary markings. We employ a simple bottom-up
shift-reduce parser of the kind presented in [14], mak-
ing direct use of the CCG-Prosody theory described
above, to identify the semantics of the question. The
&apos;See the next section concerning the nondeterminism
inherent in this rule.
inclusion of prosodic categories in the grammar al-
lows the parser to identify the information structure
(theme and rheme) within the question as well. The
focus and background information within the theme
and rheme (if any) is further marked by the focus
predicate * in the semantic representation. For ex-
ample, given the question (18) below, the parser pro-
duces the semantic and information structure repre-
sentations shown in (19).19
</bodyText>
<listItem confidence="0.972343571428571">
(18) I know that widgets contain cogs,
but what parts do WODGETS include?
L-I-H* LH% H* LL%
(19) prop: s : Ax[part(x)&amp;include(*wodgets,x)]
theme: s : Ax[part(x)&amp;include(*wodgets,x))1
(s : incl(*wodgets,x)Inp: x)
rheme: s: include(*wodgets,x)Inp: x
</listItem>
<bodyText confidence="0.9999465">
The nondeterminism inherent in unmarked themes
is handled by default: the present implementation
of Null Theme Promotion delivers the longest un-
marked theme that the syntax permits.11
</bodyText>
<sectionHeader confidence="0.99273" genericHeader="method">
4 Strategic Generation
</sectionHeader>
<bodyText confidence="0.939795125">
The strategic phase of generating a response is
somewhat simplified in the current implementation,
and we have cut a number of corners. In par-
ticular, we currently assume that the question is
the sole determinant of the information structure
in the answer. This is undoubtedly an oversim-
plification. The complete specification of the se-
mantic and information structures provided by the
parser is used by the generator to determine the
intelligible and prosodically natural response. For
&amp;quot;The alert reader will note that the notation for con-
stants, variables, and functional application is slightly
changed in these sections, to correspond to the Prolog
implementation.
&amp;quot;This is a simplification, but a harmless one for the
simplified query domains that we are dealing with here.
</bodyText>
<page confidence="0.996391">
335
</page>
<bodyText confidence="0.999941038461538">
a wh-question, the semantic representation corre-
sponds to a lambda expression in one or more vari-
ables ranging over individuals in the database, and
has the structure of a Prolog query which we can
evaluate to determine the possible instantiations of
the open proposition. The instantiated proposi-
tion determines the semantic proposition to be con-
veyed in the response. For the example above, this
is part(sprockets)&amp;include(*wodgets,*sprockets) –
&amp;quot;Wodgets include sprockets&amp;quot;.
Note that the derived semantics includes the neces-
sary occurrences of the focus predicate *, determined
as follows. All terms that are focused in the ques-
tion semantics are focused in the response semantics.
Intuitively, the instantiated variable in the response
semantics must also be focused since it represents the
information which is new in the response. For more
complex rhemes such as quantified NPs with modi-
fiers, we focus those elements of the semantic repre-
sentation that are new in the current context. (That
is, ones which did not figure in the interpretation
of the original query). Thus, given a question such
as (1), we choose to focus the modifier &amp;quot;fast&amp;quot; rather
than the noun &amp;quot;processor&amp;quot; in the rheme. Similary,
in the exchange below, we focus &amp;quot;processor&amp;quot; instead
of &amp;quot;fast&amp;quot; because of its newness in the context.
</bodyText>
<listItem confidence="0.6062885">
(20) Q: What fast component does the widget
include?
</listItem>
<bodyText confidence="0.999559588235294">
A: The widget includes a fast PROCES-
SOR.
To determine an appropriate intonation contour
for the utterance, we must further determine the
appropriate information structure. Fortunately, for
the simple question-answering task, the information
structure of the response can be assumed to be com-
pletely determined by the original query. The theme
of a question corresponds to &amp;quot;what the question is
about&amp;quot; – in this case, &amp;quot;parts&amp;quot;. The rheme of a ques-
tion corresponds to &amp;quot;what the speaker wants to know
about the theme&amp;quot; – here, &amp;quot;What wodgets include&amp;quot;.
It follows that we expect the rheme of the ques-
tion to determine the theme of the response. For
example (18), the theme of the response should be
S : include(*wodgets,x)INP : x, as in (21) below.
Note that we simplify the strategic generation prob-
lem by including the syntactic category in our repre-
sention of the theme (as determined by the syntac-
tic category of the rheme of the original question).12
Given the syntactic and semantic representation of
the theme of the response, the CCG combination
rules can easily be invoked to determine the rheme of
the response. The rheme is simply the complement
12Here we are cutting another corner: the theme, and
hence the rheme, are fully specified syntactically, as well
as semantically, as a result of the analysis of the question:
in a more general system, we would presumably need to
specify syntactic type from scratch, starting from pure
semantics.
of the theme with respect to the overall semantics of
the response, as in (21) below, obtained by instan-
tiating the result and one input of the appropriate
combinatory rule (cf. [7]):13
</bodyText>
<listItem confidence="0.898477">
(21) prop: s : include(*wodgets,*sprockets)
theme: s : include(*wodgets, x)lnp : x
rheme: np : *sprockets
</listItem>
<sectionHeader confidence="0.771964" genericHeader="method">
5 Tactical Generation and CCG
</sectionHeader>
<bodyText confidence="0.999972260869565">
Just as the shift-reduce parser sketched above can
readily be made to construct the interpretations and
information structures shown in the examples, specif-
ically marking themes, rhemes and their foci, so it is
relatively easy to do the reverse—to generate pro-
sidically annotated strings from a focus-marked se-
mantic representation of themes and rhemes.
For simplicity, we start by describing the syntac-
tic and semantic aspects of the generator, ignoring
prosody for the moment. In constructing a tactical
generation schema, several design options are avail-
able, including bottom-up, top-down and semantic
head-driven models ([3], [10]). We adopt a hybrid
approach, employing a basic top-down strategy that
takes advantage of the CCG notion of &amp;quot;functional
head&amp;quot; to avoid fruitless search. While this tech-
nique exhibits some inefficiencies characteristic of a
depth–first search, it has several significant advan-
tages. First, it does not rely on a specific seman-
tic representation, and requires only that the seman-
tics be compositional and representable in Prolog.
Thus the generating procedure is independent of the
particular grammar. This modular character of the
system has been very useful in developing the com-
petence grammar proposed in the preceding section,
and offers a basis for proving the completeness of
the implementation with respect to the competence
theory.
The tactical generation program is written in Pro-
log, and works as follows. Starting with a syntactic
constituent (initially s) and a semantic formula, we
utilize the CCG reduction rules to determine possible
subconstituents that can combine to yield the orig-
inal constituent, invoking the generator recursively
to generate the proposed subconstituents. The base
case of the recursion occurs when a category we wish
to generate unifies with a category in the lexicon.
For example, suppose we wish to generate an utter-
ance corresponding to the category s:walks&apos;(nary).
Since the given category does not unify with any cat-
egory in the lexicon, the program proposes possible
sub constituents by checking the CCG combination
rules in some pre-determined order. By the back-
ward function application rule, we might hypothe-
size that the categories x and s:walksTmary&apos;Ax are
the subconstituents of s:walksTmary), where x is
</bodyText>
<footnote confidence="0.898697">
13Again the example is simplified by the use of a non-
raised category for the object.
</footnote>
<page confidence="0.998038">
336
</page>
<figure confidence="0.9224715">
(22) gen(s:def(x, ((engine(x)&amp;new(x))&amp;shiny(x))42
def(y, ((gear(y)&amp;rotating(y))&amp;largest(y))ftcontains(x,y)))).
RESULT: the shiny new engine contains the largest rotating gear.
(23) gen(s:exists(z, (engineer(z)&amp;brilliant(z))&amp;exists(x,(design(x)&amp;revolutionary(x)A
def(y, (engine(y)&amp;new(y))&amp;gave(z,y,x))))).
RESULT: a brilliant engineer gave the new engine a revolutionary design.
(24) gen(s:def(x,(widget(x)Onew(x))&amp;probably(contains(x,y)))/np:y C p:theme).
RESULT: the newelhstar widget probably containsOlhb.
(25) gen(np:(x&amp;quot;s)-def(x,(processor(x)Ofastest(x))/10 4 ph:rheme).
RESULT: the fastestChstar processorellb.
(26) gen(s:def(x,(widget(x)&amp;new(x))&amp; *probably(contains(x,Y)))/np:y @ p:theme).
RESULT: the new widget probablyOlhstar containsOlhb.
(27) gen(s:def(x,(*widget(x)knew(x))&amp;contains(x,y))/np:y C p:theme).
RESULT: the new widgetelhstar containsOlhb.
</figure>
<bodyText confidence="0.999263363636364">
some variable. If we recursively call the generator
on s:walksYmary&apos;Ax, we find that it unifies with
the category smalks&apos;(y)\nry in the lexicon, corre-
sponding to the lexical item walks. This unification
forces the complementary category x to unify with
np:mary&apos;, which yields the lexical item mary when
the generator is recursively invoked. Concatenat-
ing the results of generating the proposed subcon-
stituents therefore gives the string &amp;quot;Mary walks.&amp;quot;
The top-down nature of the generation scheme
has a number of important consequences. First,
the order in which we generate the postulated
subconstituents determines whether the generation
succeeds. Had we chosen to generate x before
s:walksYmary9\x, we would have entered a poten-
tially infinite recursion, since x unifies with every
category in the lexicon. For this reason, our gener-
ator always chooses to recursively generate the sub-
constituent that acts as the functional head before
the subconstituent that acts as the argument under
the CCG combinatory rules. By strictly observing
this principle, we ensure that as much semantic infor-
mation as possible is deployed, thereby constraining
the search space by prohibiting spurious unifications
with incorrect items in the lexicon. For this reason,
we refer to our generation scheme as a &amp;quot;functional
head&amp;quot;-driven, top-down approach.
One disadvantage of the top-down generation tech-
nique is its susceptibility to the non-termination
problem. If a given path through the search space
does not lead to unification with an item in the
lexicon, some condition which aborts the path in
question at some search depth must be imposed.
Note that whenever the CCG function application
rules are used to propose possible subconstituents to
be recursively generated, the subconstituent acting
as the functional head has one more curried argu-
ment than its parent. Since we know that in En-
glish there is a limit to the number of arguments
that a functional category can take, we can abort
fruitless search paths by imposing a limit on the
number of curried arguments that a CCG category
can possess. The current implementation allows
categories with up to three arguments, the mini-
mum needed for constructions involving di-transitive
verbs. Note that this strategy does not prohibit
the generation of categories whose arguments them-
selves are complex categories. Thus, we allow cat-
egories such as ((s\np)/np)\(((s\np)/np)/np) for
raised indirect objects, but not categories such as
(((s\np)/np)/np)/np.
When the CCG composition rule is used to pro-
pose possible subconstituents, the subconstituents
do not have more curried arguments than their par-
ent. Consequently, imposing a bound of the type
described above will not necessarily avoid endless re-
cursion in all cases. Suppose, for example that we
wish to generate a category of the form s/z, where s
is a fully instantiated expression and x is a variable.
If the function application rules fail to produce sub-
constituents that generate the category, we rely on
the CCG composition rule to propose the possible
subconstituents s/y and y/x. Since s/x and s/y are
identical categories to within renaming of variables,
the recursion will continue indefinitely. We rectify
this situation by invoking the composition rule only
</bodyText>
<page confidence="0.996042">
337
</page>
<bodyText confidence="0.999940625">
if the original category has an instantiation for both
its argument and result. Such a solution imposes
limitations on the types of derivations allowed by the
system, but retains the simplicity and transparency
of the algorithm. Merely imposing a limit on the
depth of the recursion provides a more general solu-
tion. Examples of the types of sentences that can be
generated appear in (22) and (23).
This procedure can immediately be applied to the
prosodically augmented grammar. To do so, we
merely enforce the Prosodic Constituent Condition
at each step in the generation. That is, whenever
a pair of subconstituents are considered (by revers-
ing the CCG combination rules), a pair of prosodic
subconstituents are also considered and recursively
generated using the prosodic combinatory rules. Ex-
amples (24) and (25) illustrate the generation of in-
tonation for the theme and rheme of the utterance
&amp;quot;The NEW widget probably contains the FASTEST
processor&amp;quot; .14 Examples (26) and (27) manifest the
intonational results of moving the thematic focus
among the various propositions in the semantic rep-
resentation of the theme &amp;quot;The new widget probably
contains ...&amp;quot;.
</bodyText>
<sectionHeader confidence="0.987845" genericHeader="method">
6 Synthesis
</sectionHeader>
<bodyText confidence="0.999994">
We showed in the previous section how constituents
of the type shown in (21) can generate intonation-
ally annotated strings. The resulting string for
the current example is &amp;quot;wodgets@lhstar include@lhb
sprockets@[hstar, 1113].&amp;quot; The final aspect of gener-
ation involves translating such a string into a form
usable by a suitable speech synthesiser. Currently,
we use the Bell Laboratories TTS system ([5]) as a
post-processor to synthesise the speech wave. Ex-
ample (28) shows the translated output for the same
example, as it is sent to this synthesiser.
</bodyText>
<equation confidence="0.967175666666667">
(28) \!&gt; \!*L+H*1 wodgets \!fL1 include
\!pL1 \!bH1 \!*H*2 sprockets
Vp1.1 \!bL1 . \( *120] \)
</equation>
<bodyText confidence="0.9998926">
We stress that we use TTS as an unmodified output
device, without any fine tuning other than in the
lexicon. While TTS is particularly easy to use with
Pierrehumbert&apos;s notation, we are confident that our
system can easily be adapted to other synthesisers.
</bodyText>
<sectionHeader confidence="0.999946" genericHeader="method">
7 Results
</sectionHeader>
<bodyText confidence="0.764943166666667">
The system just described produces sharp and
natural-sounding distinctions of intonation contour
in minimal pairs of queries like the following:
&amp;quot;The @ symbol separates syntactic categories from
their corresponding prosodic categories and lexical items
from their pitch/boundary markings.
</bodyText>
<figure confidence="0.91877547826087">
(29) Q: I know that widgets contain cogs, but
what gadgets include SPROCKETS?
L+H* LH% H* LL%
prop: s : Ar[gadget(r)&amp;incl(x, *sprockets)]
theme: s : Ax[gadget(x)&amp;incl(x , * sprock ets)]I
(s : incl(x , * sprock et s)\np : x)
rheme: s : *sprockets)\np : x
A: prop: $ : incl(*w odgets , * sprock et s)
theme: $ : incl(x , *sprock ets)\np : x
rheme: np : *wodgets
WODGETS include SPROCKETS.
H* L L+H* LH%
(30) Q: I know that widgets contain cogs, but
what parts do WODGETS include?
L+H* LH% II* LL%
prop: s : Ax[part(x)Stincl(*w odgets , x)]
theme: s : Ax[part(x)&amp;incl(*wodgets ,x)]1
(s : incl(*w odget ,x)Inp : x)
rheme: a : incl(*wodgets,x)Inp : x
A: prop: a : incl(*wodgets ,*sprockets)
theme: a : incl(*wodgets,x)Inp : x
rheme: np *sprockets
WODGETS include SPROCKETS.
L+H* LH% H* LL%
(31) Q: I know that programmers use widgets,
but which people DESIGN widgets?
L+H* LH% H* LL%
prop: a : Ax[people(x)&amp;*design(x , widgets)]
theme: a : Ax[people(x)&amp;*design(x,widgets)]1
(a : *design(x,widgets)\np : x)
rheme: a : *design(x ,widgeta)\np :
A: prop: a : *design(*engineers ,widgets)
theme: a : *design(x,widgeta)\np : x
rheme: np : *engineers
ENGINEERS DESIGN widgets.
H* L L+H* LH%
(32) Q: If engineers design widgets,
which people design WODGETS?
L+H* LH% H* LL%
prop: a : Ax[people(x)&amp;design(x,*wodgets)]
theme: s : Ax[peop1e(x)&amp;design(x,*wodgets)]1
(s : design(x ,*wodgets)\np : x)
rheme: a : design(x,*w odgets)\np : x
A: prop: s : design(*programmers, *wodgets)
theme: a : design(x,*wodgets)\np : x
rheme: np : *programmers
</figure>
<sectionHeader confidence="0.9058805" genericHeader="method">
PROGRAMMERS design WODGETS.
H*L L+H* LH%
</sectionHeader>
<bodyText confidence="0.999756666666667">
Examples (29) and (30) illustrate the ability of our
system to produce appropriately different intonation
contours for identical strings of words depending on
the context, which determines the information struc-
ture of the response. .If the responses in these ex-
amples are interchanged, the result sounds distinctly
</bodyText>
<page confidence="0.996208">
338
</page>
<bodyText confidence="0.999349">
unnatural in the given contexts. From examples (31)
and (32), it will be apparent that our system has
the ability to make distinctions in focus placement
within themes and rhemes based on context. The
issue of focus placement can be crucial in more com-
plex themes and rhemes, as shown below:
</bodyText>
<table confidence="0.8250376">
(33) Q: I know the old widget has the slowest processor,
but which widget has the FASTEST processor?
L+H* LH% 1.1* LL%
A: The NEW widget has the FASTEST processor.
Ht L L+H* LH%
(34) Q: The old widget has the slowest processor,
but which processor does the NEW widget have?
L+11* LH% Ii* LL%
A: The NEW widget has the FASTEST processor.
L+H* LH% 11* LL%
(35) Q: The new WODGET has the slowest processor,
but which processor does the new WIDGET have?
L+H* LH% Ht LL%
A: The new WIDGET has the FASTEST processor.
L+H* LH% H* LL%
</table>
<bodyText confidence="0.748273285714286">
As noted earlier, such precisely specified themes
are uncommon in normal dialogue. Consequently,
the Null Tone Promotion rule is employed for un-
marked themes, allowing the types of responses in
(36) and (37) below. The theme is taken to be the
longest possible prosodically unmarked constituent
allowed by the syntax.
</bodyText>
<figure confidence="0.769304">
(36) Q: I know that programmers use widgets,
but which people DESIGN widgets?
H* LL%
A: ENGINEERS design widgets.
II* L
</figure>
<listItem confidence="0.470602666666667">
(37) Q: If engineers design widgets,
which people design WODGETS?
H* LL%
</listItem>
<bodyText confidence="0.93507375">
A: PROGRAMMERS design wodgets.
H*
Although we have only briefly discussed the pos-
sibility of multiple pitch accents within a theme or
rheme, we have included such a capability in our im-
plementation. The system&apos;s ability to handle multi-
ple pitch accents is illustrated by the following ex-
ample.
</bodyText>
<listItem confidence="0.523096">
(38) Q: I know that students USE WODGETS,
</listItem>
<bodyText confidence="0.926487928571429">
but which people DESIGN WIDGETS?
H* 11* LL%
A: ENGINEERS design widgets.
H* L
While many important problems remain, exam-
ples like these show that it is possible to produce
synthesized speech with contextually appropriate in-
tonational contours using a combinatory theory of
prosody and information structure that is completely
transparent to syntax and semantics. The model
of utterance generation for Combinatory Categorial
Grammars presented here implements the prosodic
theory in a similarly transparent and straightforward
manner.
</bodyText>
<sectionHeader confidence="0.998192" genericHeader="method">
8 References
</sectionHeader>
<reference confidence="0.999948777777778">
[1] Beckman, Mary and Janet Pierrehumbert:
1986, &apos;Intonational Structure in Japanese and
English&apos;, Phonology Yearbook, 3, 255-310.
[2] Bird, Steven: 1991, &apos;Focus and phrasing in Uni-
fication Categorial Grammar&apos;, in Steven Bird
(ed.), Declarative Perspectives on Phonology,
Working Papers in Cognitive Science 7, Univer-
sity of Edinburgh. 139-166.
[3] Gerdeman, Dale and Erhard Hinrichs: 1990.
Functor-driven Natural Language Generation
with Categorial Unification Grammars. Pro-
ceedings of COLING 90, Helsinki, 145-150.
[4] Jackendoff, Ray: 1972, Semantic Interpretation
in Generative Grammar, MIT Press, Cambridge
MA.
[5] Liberman, Mark and A.L. Buchsbaum: 1985,
&apos;Structure and Usage of Current Bell Labs Text
to Speech Programs&apos;, Technical Memorandum,
TM 11225-850731-11, AT&amp;T Bell Laboratories.
[6] Moortgat, Michael: 1989, Categorial Investiga-
tions, Foris, Dordrecht.
[7] Pareschi, Remo and Mark Steedman: 1987,
&apos;A Lazy Way to Chart-parse with Categorial
Grammars&apos;, Proceedings of the 25th Annual
Meeting of the Association for Computational
Linguistics, Stanford CA, July 1987, 81-88.
[8] Pierrehumbert, Janet: 1980, The Phonology and
Phonetics of English Intonation, Ph.D disserta-
tion, MIT. (Dist. by Indiana University Lin-
guistics Club, Bloomington, IN.)
[9] Pierrehumbert, Janet, and Julia Hirschberg,
1990, &apos;The Meaning of Intonational Contours in
the Interpretation of Discourse&apos;, in Philip Co-
hen, Jerry Morgan, and Martha Pollack (eds.),
Intentions in Communication, MIT Press Cam-
bridge MA, 271-312.
[10] Shieber, Stuart and Yves Schabes: 1991, &apos;Gen-
eration and Synchronous Tree-Adjoining Gram-
mars&apos;, Computational Intelligence, 4, 220-228.
[11] Steedman, Mark: 1990. &apos;Gapping as Con-
stituent Coordination&apos;, Linguistics £.6 Philoso-
phy, 13, 207-263.
[12] Steedman, Mark: 1990, &apos;Structure and In-
tonation in Spoken Language Understanding&apos;,
Proceedings of the 25th Annual Conference of
the Association for Computational Linguistics,
Pittsburgh, PA, June 1990, 9-17.
[13] Steedman, Mark: 1991, Structure and Intona-
tion, Language, 68, 260-296.
[14] Steedman, Mark: 1991, &apos;Type-raising and Di-
rectionality in Categorial Grammar&apos;, Proceed-
ings of the 29th Annual Meeting of the Asso-
ciation for Computational Linguistics, Berkeley
CA, June 1991, 71-78.
</reference>
<page confidence="0.989397">
339
</page>
<reference confidence="0.9849646">
[15] Steedman, Mark: 1991, &apos;Surface Structure, In-
tonation, and &amp;quot;Focus&amp;quot;, in Ewan Klein and F.
Veltman (eds.), Natural Language and Speech,
Proceedings of the ESPRIT Symposium, Brus-
sels, Nov. 1991. 21-38, 260-296.
</reference>
<page confidence="0.99825">
340
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000084">
<title confidence="0.999824">Generating Contextually Appropriate Intonation*</title>
<author confidence="0.999992">Scott Prevost</author>
<author confidence="0.999992">Mark Steedman</author>
<affiliation confidence="0.9991285">Computer and Information Science University of Pennsylvania</affiliation>
<address confidence="0.9884265">200 South 33rd Street Philadelphia PA 19104-6389, USA</address>
<email confidence="0.390859">inc.cis.upennedusteedman@cis.upenn.edu)</email>
<abstract confidence="0.988787263157895">One source of unnaturalness in the output of text-to-speech systems stems from the involvement of algorithmically generated default intonation contours, applied under minimal control from syntax and semantics. It is a tribute both to the resilience of human language understanding and to the ingenuity of the inventors of these algorithms that the results are as intelligible as they are. However, the result is very frequently unnatural, and may on occasion mislead the hearer. This paper extends earlier work on the relation between syntax and intonation in language understanding in Combinatory Categorial Grammar (CCG). A generator with a simple and domain-independent discourse model can be used to direct synthesis of intonation contours for responses to data-base queries, to convey distinctions of contrast and emphasis determined by the discourse model. 1 The Problem Consider the exchange shown in example (1). Capitals indicate stress, and brackets informally indicate the intonational phrasing. The intonation contour is indicated underneath using Pierrehumbert&apos;s notation ([8], [1], see [13] for a brief summary). L+H* &amp;quot;Keywords: Speech-synthesis; Generation. We thank Mark Beutnagel and AT&amp;T Bell Laboratories for allowing us access to the TTS speech synthesiser. The rein part by NSF grant nos 1R190- 18513, 1R190-16592, and 1R191-17110, DARPA grant no. N00014-90-J-1863, and ARO grant no. DAAL03-89- C0031. and H* are different high pitch accents, and LH% and LL% (and its relative L) are rising and low boundaries respectively. The other annotations indicate that the intonational tunes L+H* LH% and H* LL% convey two distinct kinds of discourse information. First, both pitch accents mark any word that they occur on (or rather, its interpretation) for &amp;quot;focus&amp;quot;, which in the context of such simple queries as example (1) usually implies contrast of some kind. Second, the tunes as a whole mark the constituent that bears them (or rather, its interpretation) as having a particular function in the discourse. We have argued at length elsewhere that, at least in this same restricted class of dialogues, the function of the L+H* LH% tune is to mark the &amp;quot;theme&amp;quot; — that is, &amp;quot;what the participants have agreed to talk about&amp;quot;. The II* LL% tune (and its relative the H* L tune) mark the &amp;quot;rheme&amp;quot; — that is, &amp;quot;what the speaker has to say&amp;quot; about the theme. This phenomenon is a strong one: the same intonation contour sounds quite anomalous in the context of a question that does not establish the correct open proposition as the theme, as device has the fast processor?. further point is worth noting: the unit that we are calling the theme is not in this example a traditional syntactic constituent. Many problems in the analysis and synthesis of spoken language result from the partial independence of syntactic and intonational phrase boundaries. The architecture of our system (shown in Figure 1) is for the most part self-explanatory, but we note that we follow a long tradition in separating the process of generation itself into two phases. The &amp;quot;strategic&amp;quot; phase is one in which the content of the utterance is planned, including the division into theme and rheme, and the assignment of contrastive focus. The &amp;quot;tactical&amp;quot; phase is one in which content is mapped 332 (1) Q: I know that the OLD widget had a SLOW processor. But what processor does the NEW widget include? A: (The NEW widget includes) (a</abstract>
<title confidence="0.880807076923077">L+H* LH% Ground Focus Ground Ground Theme FAST H* Focus Rheme processor) LL% Ground Prosodically Annotated Question Intonational Parser Generator Tactical Generator Database Prosodically Annotated Response Spoken Response</title>
<abstract confidence="0.994587277777778">Figure 1: Architecture onto strings of words. 2 CCG-Based Prosody We will assume a standard CCG of the kind discussed in [11], [12], and [13]. For example, we shall the category of a transitive verb like either abbreviated, as in (2)a, or in full as in (2)b: a. P)IN P : include&apos; x y\NP : y)/ NP : x In b, syntactic types are paired with a semantic interpretation via the colon operator, and the category is that of a function from NPs (with interpretation functions from NPs (with interpretation y) to (with interpretation x y). in interpretations bear primes, variables do not, and there is a convention of left associativity. We also need the following two rules of functional where Y are variables over categories in either notation: (3) FUNCTIONAL APPLICATION: X/Y Y ( &gt;) Y X\Y &lt;) CCG extends this strictly context-free categorial base in two respects. First, all arguments, such NPs, bear only such as all functions into such categories, such as determiners, are functions into the categories, such as P))IN. example, subject NPs bear the following category in the full notation: widgets := : s : s\NP : widgets&apos;) The derivation of a simple transitive sentence apas follows in the abbreviated (5) Widgets include sprockets S \NP Second, the combinatory rules are extended to include functional composition, as well as application. The following rule will be relevant below: (6) FORWARD COMPOSITION (›B): Y/Z BX/Z rule allows a derivation for the sentence, as (7) Widgets include sprockets S/(S\NP) (S\NP)/NP S\(S/NP) &gt;B S/NP reader is encouraged to satisfy themselves using the full semantic notation that this derivation yields an S with the correct interpretation sprockets&apos; widgets&apos;. first glance, it looks as though type-raising will expand the lexicon alarmingly. One way round this problem is discussed in [14]. reader is again strongly uged to satisfy themselves that the S yielded in the derivation bears the correct interpretation. CCG TTS Translator Speech Synthesizer 333 The reasons for making this move, which concern the grammar of coordinate constructions, the general class of rules from which the composition rule is drawn, and the problem of processing in the face of such associative rules, are discussed in the earlier papers, and need not concern us here. The point for present purposes is that the partition of the sentence into the object and a non-standard constituent : include&apos; x&apos; widgets&apos; I NP : x this theory structurally and semantically perfectly suited to the of intonation, as exhibited in example We can therefore directly incorporate intonational constituency in syntax, as follows (cf. [12], [13], and [15]). We assign to all constituents an autonomous prosodic category, expressing their potential for combination with other prosodic categories. Then we lock these two structural systems together via the following principle, which says that syntactic and prosodic constituency must be isomorphic: (8) PROSODIC CONSTITUENT CONDITION: Combination of two syntactic categories via a syntactic combinatory rule is only allowed if their prosodic categories can also combine via a prosodic combinatory rule. One way to do this is to make the boundaries arguments and the pitch accents functions over them. boundaries are as L := : 1 := : 11 := : lh As in CCG, categories consist of a structural type, boundary, and an interpretation, associated via a colon. The pitch accents have the followfunctional L+H* := p : : lh p : rhemelb :1, P : rhemelb :11 We further assume, following Bird [2], that the presence of a pitch accent causes some element(s) in the translation of the category to be marked as focussed, a matter which we will for simplicity assume occurs the level of the lexicon. For example, when ina pitch accent, its category will be as follows: (11) (S: (*include&apos;) x P : y)/NP : x The categories that result from the combination of a pitch accent and a boundary may or may not constitute entire prosodic phrases, since there may be a prenuclear null tone. There may also be a null tone separating the pitch accent(s) from the boundary. similar argument in related categorial framework is made by Moortgat [6]. &apos;These categories slightly depart from Pierrehumbert. 5Here we are ignoring the possibility of multiple pitch accents in the same prosodic phrase, but cf. [13]. (Both possibilities are illustrated in (1)). We therefore assign the following category to the null tone, which can thereby apply to the right to any noncategory of the form :Y , compose to their right with any function into such a category, including another null tone, to yield the same category: 0 := Y/X : Y It is this omnivorous category that allows intonational tunes to be spread over arbitrarily large constituents, since it allows the pitch accent&apos;s desire for a boundary to propagate via composition into the null tone category (see the earlier papers). In order to allow the derivation to proceed above the level of complete prosodic phrases identifying themes and rhemes, we need two unary categoryto mark the interpretation the corresponding grammatical category with that discourse function and change the phonological cate- (13) E : Phi (14) E = E P : X These rules change the prosodic category either to p, or to an endocentric function over p. (These types capture the fact that the LL% boundary can only occur at the end of a sentence, thereby correcting an overgeneration in the version of this theory in [13], noted by Bird [2]). The fact that atom rather than a term of the form :Y important, since it means that it can combine only with another p. This is vital to the preservation of intonation The application of the above two rules to a complete intonational phrase should be thought of as precipitating a side-effect whereby a copy of the category E is associated with the clause as its theme or rheme. (We gloss over details of how themes and rhemes are associated with a particular clause, as well as a number of further complications arising in sentences with more than one rheme). In [13] and [15], a related set of rules of which the present ones form a subset are shown to be wellbehaved with a wide range of examples. Example (15) gives the derivation for an example related to (7) (since the raised object category is not crucial, it been replaced by NP to ease Note that it is the identification of the theme and rules represent both a departure from the earlier papers and a slight simplification of what is actually needed to allow prosodic phrases to combine correctly. category has the same effect of preventing further composition into the null tone achieved in the earlier papers by a restriction on forward prosodic composition. the focus-marking effect of the pitch accents. 334 (15) Widgets include sprockets ( L+H* LH% ) ( H* LL% ) S:s/(S:s\NP:*widget&apos;) (S:include&apos;x y\NP:y)/NP:x NP:*sprockets&apos; p:theme/b:lh b:lh P:rheme include&apos; /NP : x p:theme ======= S:include&apos; x *widget&apos;/NP:x NP:*sprockets&apos; P/P *sprockets&apos; *widget&apos; z *widgetINP : z *sprockets at the stage final reduction that determines the information structure for the response, for it is at this point that discourse elements like the open proposition are explicit, and can be used in semantically-driven synthesis of intonation contour directly from the constituents. Of course, such gushingly unambiguous intonation contours are comparitively rare in normal dialogues. Even in the context given in (7), a more usual response to the question would put low pitch — that is, the null tone in Pierrehumbert&apos;s terms — on everyexcept the focus of the rheme, in the following: (16) Widgets include SPROCKETS Such an utterance is of course ambiguous as to the theme is widgets inearlier papers show that such &amp;quot;unmarked&amp;quot; themes, which include no pitch accent because they are entirely background, can be captured a &amp;quot;Null Theme Promotion Rule&amp;quot;, as : Y/X : = : theme 3 Parsing Having established the relationship between prosody, information structure and CCG syntax, we can now address the computational problem of automatically directing the synthesis of intonation contours for responses to database queries. Our computational model (shown in Figure 1) starts with a prosodically annotated wh-question given as a string of words with associated Pierrehumbert-style pitch accent and boundary markings. We employ a simple bottom-up shift-reduce parser of the kind presented in [14], making direct use of the CCG-Prosody theory described above, to identify the semantics of the question. The &apos;See the next section concerning the nondeterminism inherent in this rule. inclusion of prosodic categories in the grammar allows the parser to identify the information structure (theme and rheme) within the question as well. The focus and background information within the theme and rheme (if any) is further marked by the focus predicate * in the semantic representation. For example, given the question (18) below, the parser produces the semantic and information structure represhown in (18) I know that widgets contain cogs, but what parts do WODGETS include? L-I-H* LH% H* LL% prop: : Ax[part(x)&amp;include(*wodgets,x)] theme: s : Ax[part(x)&amp;include(*wodgets,x))1 : incl(*wodgets,x)Inp: include(*wodgets,x)Inp: x The nondeterminism inherent in unmarked themes is handled by default: the present implementation Null Theme Promotion delivers the untheme that the syntax 4 Strategic Generation The strategic phase of generating a response is somewhat simplified in the current implementation, and we have cut a number of corners. In particular, we currently assume that the question is the sole determinant of the information structure in the answer. This is undoubtedly an oversimplification. The complete specification of the semantic and information structures provided by the parser is used by the generator to determine the intelligible and prosodically natural response. For &amp;quot;The alert reader will note that the notation for constants, variables, and functional application is slightly changed in these sections, to correspond to the Prolog implementation. &amp;quot;This is a simplification, but a harmless one for the simplified query domains that we are dealing with here. 335 a wh-question, the semantic representation corresponds to a lambda expression in one or more variables ranging over individuals in the database, and has the structure of a Prolog query which we can evaluate to determine the possible instantiations of the open proposition. The instantiated proposition determines the semantic proposition to be conveyed in the response. For the example above, this part(sprockets)&amp;include(*wodgets,*sprockets) &amp;quot;Wodgets include sprockets&amp;quot;. Note that the derived semantics includes the necessary occurrences of the focus predicate *, determined as follows. All terms that are focused in the question semantics are focused in the response semantics. Intuitively, the instantiated variable in the response semantics must also be focused since it represents the which is the response. For more complex rhemes such as quantified NPs with modifiers, we focus those elements of the semantic representation that are new in the current context. (That is, ones which did not figure in the interpretation of the original query). Thus, given a question such as (1), we choose to focus the modifier &amp;quot;fast&amp;quot; rather than the noun &amp;quot;processor&amp;quot; in the rheme. Similary, in the exchange below, we focus &amp;quot;processor&amp;quot; instead of &amp;quot;fast&amp;quot; because of its newness in the context. (20) Q: What fast component does the widget include? A: The widget includes a fast PROCES- SOR. To determine an appropriate intonation contour for the utterance, we must further determine the appropriate information structure. Fortunately, for the simple question-answering task, the information structure of the response can be assumed to be completely determined by the original query. The theme of a question corresponds to &amp;quot;what the question is about&amp;quot; – in this case, &amp;quot;parts&amp;quot;. The rheme of a question corresponds to &amp;quot;what the speaker wants to know about the theme&amp;quot; – here, &amp;quot;What wodgets include&amp;quot;. It follows that we expect the rheme of the question to determine the theme of the response. For example (18), the theme of the response should be : include(*wodgets,x)INP : x, in (21) below. Note that we simplify the strategic generation problem by including the syntactic category in our represention of the theme (as determined by the syntaccategory of the rheme of the original Given the syntactic and semantic representation of the theme of the response, the CCG combination rules can easily be invoked to determine the rheme of the response. The rheme is simply the complement we are cutting another corner: the theme, and hence the rheme, are fully specified syntactically, as well as semantically, as a result of the analysis of the question: in a more general system, we would presumably need to specify syntactic type from scratch, starting from pure semantics. of the theme with respect to the overall semantics of the response, as in (21) below, obtained by instantiating the result and one input of the appropriate rule (cf. include(*wodgets,*sprockets) : include(*wodgets, : x np : 5 Tactical Generation and CCG Just as the shift-reduce parser sketched above can readily be made to construct the interpretations and information structures shown in the examples, specifically marking themes, rhemes and their foci, so it is relatively easy to do the reverse—to generate prosidically annotated strings from a focus-marked semantic representation of themes and rhemes. For simplicity, we start by describing the syntactic and semantic aspects of the generator, ignoring prosody for the moment. In constructing a tactical generation schema, several design options are available, including bottom-up, top-down and semantic head-driven models ([3], [10]). We adopt a hybrid approach, employing a basic top-down strategy that takes advantage of the CCG notion of &amp;quot;functional head&amp;quot; to avoid fruitless search. While this technique exhibits some inefficiencies characteristic of a depth–first search, it has several significant advantages. First, it does not rely on a specific semantic representation, and requires only that the semantics be compositional and representable in Prolog. Thus the generating procedure is independent of the particular grammar. This modular character of the system has been very useful in developing the competence grammar proposed in the preceding section, and offers a basis for proving the completeness of the implementation with respect to the competence theory. The tactical generation program is written in Prolog, and works as follows. Starting with a syntactic (initially a semantic formula, we utilize the CCG reduction rules to determine possible subconstituents that can combine to yield the original constituent, invoking the generator recursively to generate the proposed subconstituents. The base case of the recursion occurs when a category we wish to generate unifies with a category in the lexicon. For example, suppose we wish to generate an uttercorresponding to the category Since the given category does not unify with any category in the lexicon, the program proposes possible sub constituents by checking the CCG combination rules in some pre-determined order. By the backward function application rule, we might hypothethat the categories x and subconstituents of is the example is simplified by the use of a nonraised category for the object. 336 (22) gen(s:def(x, ((engine(x)&amp;new(x))&amp;shiny(x))42 def(y, ((gear(y)&amp;rotating(y))&amp;largest(y))ftcontains(x,y)))). RESULT: the shiny new engine contains the largest rotating gear. (23) gen(s:exists(z, (engineer(z)&amp;brilliant(z))&amp;exists(x,(design(x)&amp;revolutionary(x)A def(y, (engine(y)&amp;new(y))&amp;gave(z,y,x))))). RESULT: a brilliant engineer gave the new engine a revolutionary design. (24) gen(s:def(x,(widget(x)Onew(x))&amp;probably(contains(x,y)))/np:y C p:theme). RESULT: the newelhstar widget probably containsOlhb. (25) 4 ph:rheme). RESULT: the fastestChstar processorellb. (26) gen(s:def(x,(widget(x)&amp;new(x))&amp; *probably(contains(x,Y)))/np:y @ p:theme). RESULT: the new widget probablyOlhstar containsOlhb. (27) gen(s:def(x,(*widget(x)knew(x))&amp;contains(x,y))/np:y C p:theme). RESULT: the new widgetelhstar containsOlhb. some variable. If we recursively call the generator find that it unifies with category the lexicon, correto the lexical item unification forces the complementary category x to unify with np:mary&apos;, which yields the lexical item mary when the generator is recursively invoked. Concatenating the results of generating the proposed subcontherefore gives the string walks.&amp;quot; The top-down nature of the generation scheme has a number of important consequences. First, the order in which we generate the postulated subconstituents determines whether the generation Had we chosen to generate would have entered a potentially infinite recursion, since x unifies with every category in the lexicon. For this reason, our generator always chooses to recursively generate the subconstituent that acts as the functional head before the subconstituent that acts as the argument under the CCG combinatory rules. By strictly observing this principle, we ensure that as much semantic information as possible is deployed, thereby constraining the search space by prohibiting spurious unifications with incorrect items in the lexicon. For this reason, we refer to our generation scheme as a &amp;quot;functional head&amp;quot;-driven, top-down approach. One disadvantage of the top-down generation technique is its susceptibility to the non-termination problem. If a given path through the search space does not lead to unification with an item in the lexicon, some condition which aborts the path in question at some search depth must be imposed. Note that whenever the CCG function application rules are used to propose possible subconstituents to be recursively generated, the subconstituent acting as the functional head has one more curried argument than its parent. Since we know that in English there is a limit to the number of arguments that a functional category can take, we can abort fruitless search paths by imposing a limit on the number of curried arguments that a CCG category can possess. The current implementation allows categories with up to three arguments, the minimum needed for constructions involving di-transitive verbs. Note that this strategy does not prohibit the generation of categories whose arguments themselves are complex categories. Thus, we allow catsuch as raised indirect objects, but not categories such as (((s\np)/np)/np)/np. When the CCG composition rule is used to propose possible subconstituents, the subconstituents more curried arguments than their parent. Consequently, imposing a bound of the type described above will not necessarily avoid endless recursion in all cases. Suppose, for example that we to generate a category of the form a fully instantiated expression and a variable. If the function application rules fail to produce subconstituents that generate the category, we rely on the CCG composition rule to propose the possible s/y are identical categories to within renaming of variables, the recursion will continue indefinitely. We rectify this situation by invoking the composition rule only 337 if the original category has an instantiation for both its argument and result. Such a solution imposes limitations on the types of derivations allowed by the system, but retains the simplicity and transparency of the algorithm. Merely imposing a limit on the depth of the recursion provides a more general solution. Examples of the types of sentences that can be generated appear in (22) and (23). This procedure can immediately be applied to the prosodically augmented grammar. To do so, we merely enforce the Prosodic Constituent Condition at each step in the generation. That is, whenever a pair of subconstituents are considered (by reversing the CCG combination rules), a pair of prosodic subconstituents are also considered and recursively generated using the prosodic combinatory rules. Examples (24) and (25) illustrate the generation of intonation for the theme and rheme of the utterance &amp;quot;The NEW widget probably contains the FASTEST Examples (26) and (27) manifest the intonational results of moving the thematic focus among the various propositions in the semantic representation of the theme &amp;quot;The new widget probably contains ...&amp;quot;. 6 Synthesis We showed in the previous section how constituents of the type shown in (21) can generate intonationally annotated strings. The resulting string for the current example is &amp;quot;wodgets@lhstar include@lhb sprockets@[hstar, 1113].&amp;quot; The final aspect of generation involves translating such a string into a form usable by a suitable speech synthesiser. Currently, we use the Bell Laboratories TTS system ([5]) as a post-processor to synthesise the speech wave. Example (28) shows the translated output for the same example, as it is sent to this synthesiser. (28) \!&gt; \!*L+H*1 wodgets \!fL1 include \!pL1 \!bH1 \!*H*2 sprockets \!bL1 . *120] \) We stress that we use TTS as an unmodified output device, without any fine tuning other than in the lexicon. While TTS is particularly easy to use with Pierrehumbert&apos;s notation, we are confident that our system can easily be adapted to other synthesisers. 7 Results The system just described produces sharp and natural-sounding distinctions of intonation contour in minimal pairs of queries like the following: &amp;quot;The @ symbol separates syntactic categories from their corresponding prosodic categories and lexical items from their pitch/boundary markings. Q: know that widgets contain cogs, but what gadgets include SPROCKETS? L+H* LH% H* LL% Ar[gadget(r)&amp;incl(x, , * sprock ets)]I (s : incl(x , * sprock et s)\np : x) : x : incl(*w odgets , * sprock et s) : incl(x , *sprock ets)\np : x np : WODGETS include SPROCKETS. H* L L+H* LH% Q: know that widgets contain cogs, but what parts do WODGETS include? L+H* LH% II* LL% : Ax[part(x)Stincl(*w odgets , x)] ,x)]1 (s : incl(*w odget ,x)Inp : x) a : : x a incl(*wodgets ,*sprockets) theme: a : incl(*wodgets,x)Inp : x np WODGETS include SPROCKETS. L+H* LH% H* LL% Q: know that programmers use widgets, but which people DESIGN widgets? L+H* LH% H* LL% : Ax[people(x)&amp;*design(x , widgets)] : Ax[people(x)&amp;*design(x,widgets)]1 (a : *design(x,widgets)\np : x) : *design(x ,widgeta)\np : : *design(*engineers ,widgets) theme: a : *design(x,widgeta)\np : x rheme: np : *engineers ENGINEERS DESIGN widgets. L L+H* (32) Q: If engineers design widgets, which people design WODGETS? L+H* LH% H* LL% : Ax[people(x)&amp;design(x,*wodgets)] (s : design(x ,*wodgets)\np : x) a : odgets)\np : x s : design(*programmers, theme: a : design(x,*wodgets)\np : x np : PROGRAMMERS design WODGETS. H*L L+H* LH% Examples (29) and (30) illustrate the ability of our system to produce appropriately different intonation contours for identical strings of words depending on the context, which determines the information structure of the response. .If the responses in these examples are interchanged, the result sounds distinctly 338 unnatural in the given contexts. From examples (31) and (32), it will be apparent that our system has the ability to make distinctions in focus placement within themes and rhemes based on context. The issue of focus placement can be crucial in more complex themes and rhemes, as shown below: Q: know the old widget has the slowest processor, but which widget has the FASTEST processor? L+H* LH% 1.1* LL% NEW widget has the FASTEST processor. Ht L L+H* LH% Q: old widget has the slowest processor, but which processor does the NEW widget have? L+11* LH% Ii* LL% NEW widget has the FASTEST processor. L+H* LH% 11* LL% Q: new WODGET has the slowest processor, but which processor does the new WIDGET have? L+H* LH% Ht LL% new WIDGET has the FASTEST processor. L+H* LH% H* LL% As noted earlier, such precisely specified themes are uncommon in normal dialogue. Consequently, the Null Tone Promotion rule is employed for unmarked themes, allowing the types of responses in (36) and (37) below. The theme is taken to be the longest possible prosodically unmarked constituent allowed by the syntax. Q: programmers use widgets, but which people DESIGN widgets? ENGINEERS widgets. Q: If engineers widgets, which people design WODGETS? H* LL% A: PROGRAMMERS design wodgets. H* Although we have only briefly discussed the possibility of multiple pitch accents within a theme or rheme, we have included such a capability in our implementation. The system&apos;s ability to handle multiple pitch accents is illustrated by the following example. Q: I know students USE WODGETS, but which people DESIGN WIDGETS? H* 11* LL% A: ENGINEERS design widgets. While many important problems remain, examples like these show that it is possible to produce synthesized speech with contextually appropriate intonational contours using a combinatory theory of prosody and information structure that is completely transparent to syntax and semantics. The model of utterance generation for Combinatory Categorial Grammars presented here implements the prosodic theory in a similarly transparent and straightforward manner.</abstract>
<note confidence="0.9830488">8 References [1] Beckman, Mary and Janet Pierrehumbert: 1986, &apos;Intonational Structure in Japanese and Yearbook, [2] Bird, Steven: 1991, &apos;Focus and phrasing in Unification Categorial Grammar&apos;, in Steven Bird Perspectives on Phonology, Working Papers in Cognitive Science 7, University of Edinburgh. 139-166. [3] Gerdeman, Dale and Erhard Hinrichs: 1990.</note>
<title confidence="0.907473">Functor-driven Natural Language Generation</title>
<author confidence="0.805235">Pro-</author>
<note confidence="0.7706268">of COLING 90, Helsinki, Jackendoff, Ray: 1972, Interpretation Generative Grammar, Press, Cambridge MA. [5] Liberman, Mark and A.L. Buchsbaum: 1985,</note>
<title confidence="0.746735">apos;Structure and Usage of Current Bell Labs Text</title>
<author confidence="0.428626">to Speech Programs&apos;</author>
<author confidence="0.428626">Technical Memorandum</author>
<note confidence="0.909580465116279">TM 11225-850731-11, AT&amp;T Bell Laboratories. Moortgat, Michael: 1989, Investiga- Dordrecht. [7] Pareschi, Remo and Mark Steedman: 1987, &apos;A Lazy Way to Chart-parse with Categorial of the 25th Annual Meeting of the Association for Computational CA, July 1987, 81-88. Pierrehumbert, Janet: 1980, Phonology and of English Intonation, dissertation, MIT. (Dist. by Indiana University Linguistics Club, Bloomington, IN.) [9] Pierrehumbert, Janet, and Julia Hirschberg, 1990, &apos;The Meaning of Intonational Contours in the Interpretation of Discourse&apos;, in Philip Cohen, Jerry Morgan, and Martha Pollack (eds.), in Communication, Press Cambridge MA, 271-312. [10] Shieber, Stuart and Yves Schabes: 1991, &apos;Generation and Synchronous Tree-Adjoining Gram- Intelligence, 220-228. [11] Steedman, Mark: 1990. &apos;Gapping as Con- Coordination&apos;, £.6 Philoso- 207-263. [12] Steedman, Mark: 1990, &apos;Structure and Intonation in Spoken Language Understanding&apos;, Proceedings of the 25th Annual Conference of the Association for Computational Linguistics, Pittsburgh, PA, June 1990, 9-17. [13] Steedman, Mark: 1991, Structure and Intona- 260-296. [14] Steedman, Mark: 1991, &apos;Type-raising and Diin Categorial Grammar&apos;, Proceedings of the 29th Annual Meeting of the Assofor Computational Linguistics, CA, June 1991, 71-78. 339 [15] Steedman, Mark: 1991, &apos;Surface Structure, Intonation, and &amp;quot;Focus&amp;quot;, in Ewan Klein and F. (eds.), Language and Speech, Proceedings of the ESPRIT Symposium, Brussels, Nov. 1991. 21-38, 260-296. 340</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Mary Beckman</author>
<author>Janet Pierrehumbert</author>
</authors>
<title>Intonational Structure in Japanese and English&apos;,</title>
<date>1986</date>
<journal>Phonology Yearbook,</journal>
<volume>3</volume>
<pages>255--310</pages>
<contexts>
<context position="1366" citStr="[1]" startWordPosition="204" endWordPosition="204">xtends earlier work on the relation between syntax and intonation in language understanding in Combinatory Categorial Grammar (CCG). A generator with a simple and domain-independent discourse model can be used to direct synthesis of intonation contours for responses to data-base queries, to convey distinctions of contrast and emphasis determined by the discourse model. 1 The Problem Consider the exchange shown in example (1). Capitals indicate stress, and brackets informally indicate the intonational phrasing. The intonation contour is indicated underneath using Pierrehumbert&apos;s notation ([8], [1], see [13] for a brief summary). L+H* &amp;quot;Keywords: Speech-synthesis; Generation. We thank Mark Beutnagel and AT&amp;T Bell Laboratories for allowing us access to the TTS speech synthesiser. The research was supported in part by NSF grant nos 1R190- 18513, 1R190-16592, and 1R191-17110, DARPA grant no. N00014-90-J-1863, and ARO grant no. DAAL03-89- C0031. and H* are different high pitch accents, and LH% and LL% (and its relative L) are rising and low boundaries respectively. The other annotations indicate that the intonational tunes L+H* LH% and H* LL% convey two distinct kinds of discourse informatio</context>
</contexts>
<marker>[1]</marker>
<rawString>Beckman, Mary and Janet Pierrehumbert: 1986, &apos;Intonational Structure in Japanese and English&apos;, Phonology Yearbook, 3, 255-310.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
</authors>
<title>Focus and phrasing in Unification Categorial Grammar&apos;,</title>
<date>1991</date>
<booktitle>Declarative Perspectives on Phonology, Working Papers in Cognitive Science 7, University of Edinburgh.</booktitle>
<pages>139--166</pages>
<editor>in Steven Bird (ed.),</editor>
<contexts>
<context position="7856" citStr="[2]" startWordPosition="1291" endWordPosition="1291">yntactic categories via a syntactic combinatory rule is only allowed if their prosodic categories can also combine via a prosodic combinatory rule. One way to do this is to make the boundaries arguments and the pitch accents functions over them. The boundaries are as follows:4 (9) L := b : 1 LL% := b : 11 LH% := b : lh As in CCG, categories consist of a structural type, here b for boundary, and an interpretation, associated via a colon. The pitch accents have the following functional types:5 (10) L+H* := p : themelb : lh II* := p : rhemelb :1, P : rhemelb :11 We further assume, following Bird [2], that the presence of a pitch accent causes some element(s) in the translation of the category to be marked as focussed, a matter which we will for simplicity assume occurs at the level of the lexicon. For example, when includes bears a pitch accent, its category will be as follows: (11) (S: (*include&apos;) x P : y)/NP : x The categories that result from the combination of a pitch accent and a boundary may or may not constitute entire prosodic phrases, since there may be a prenuclear null tone. There may also be a null tone separating the pitch accent(s) from the boundary. &apos;A similar argument in </context>
<context position="9891" citStr="[2]" startWordPosition="1653" endWordPosition="1653">rivation to proceed above the level of complete prosodic phrases identifying themes and rhemes, we need two unary categorychanging rules to mark the interpretation a of the corresponding grammatical category with that discourse function and change the phonological category, thus:6 (13) E p : X Phi (14) E = E P : X These rules change the prosodic category either to p, or to an endocentric function over p. (These types capture the fact that the LL% boundary can only occur at the end of a sentence, thereby correcting an overgeneration in the version of this theory in Steedman [13], noted by Bird [2]). The fact that p is an atom rather than a term of the form X :Y is important, since it means that it can combine only with another p. This is vital to the preservation of the intonation structure.7 The application of the above two rules to a complete intonational phrase should be thought of as precipitating a side-effect whereby a copy of the category E is associated with the clause as its theme or rheme. (We gloss over details of how themes and rhemes are associated with a particular clause, as well as a number of further complications arising in sentences with more than one rheme). In [13]</context>
</contexts>
<marker>[2]</marker>
<rawString>Bird, Steven: 1991, &apos;Focus and phrasing in Unification Categorial Grammar&apos;, in Steven Bird (ed.), Declarative Perspectives on Phonology, Working Papers in Cognitive Science 7, University of Edinburgh. 139-166.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dale Gerdeman</author>
<author>Erhard Hinrichs</author>
</authors>
<title>Functor-driven Natural Language Generation with Categorial Unification Grammars.</title>
<date>1990</date>
<booktitle>Proceedings of COLING 90,</booktitle>
<pages>145--150</pages>
<location>Helsinki,</location>
<contexts>
<context position="18650" citStr="[3]" startWordPosition="3069" endWordPosition="3069">arser sketched above can readily be made to construct the interpretations and information structures shown in the examples, specifically marking themes, rhemes and their foci, so it is relatively easy to do the reverse—to generate prosidically annotated strings from a focus-marked semantic representation of themes and rhemes. For simplicity, we start by describing the syntactic and semantic aspects of the generator, ignoring prosody for the moment. In constructing a tactical generation schema, several design options are available, including bottom-up, top-down and semantic head-driven models ([3], [10]). We adopt a hybrid approach, employing a basic top-down strategy that takes advantage of the CCG notion of &amp;quot;functional head&amp;quot; to avoid fruitless search. While this technique exhibits some inefficiencies characteristic of a depth–first search, it has several significant advantages. First, it does not rely on a specific semantic representation, and requires only that the semantics be compositional and representable in Prolog. Thus the generating procedure is independent of the particular grammar. This modular character of the system has been very useful in developing the competence gramma</context>
</contexts>
<marker>[3]</marker>
<rawString>Gerdeman, Dale and Erhard Hinrichs: 1990. Functor-driven Natural Language Generation with Categorial Unification Grammars. Proceedings of COLING 90, Helsinki, 145-150.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ray Jackendoff</author>
</authors>
<title>Semantic Interpretation in Generative Grammar,</title>
<date>1972</date>
<publisher>MIT Press,</publisher>
<location>Cambridge MA.</location>
<marker>[4]</marker>
<rawString>Jackendoff, Ray: 1972, Semantic Interpretation in Generative Grammar, MIT Press, Cambridge MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Liberman</author>
<author>A L Buchsbaum</author>
</authors>
<title>Structure and Usage of Current Bell Labs Text to Speech Programs&apos;,</title>
<date>1985</date>
<tech>Technical Memorandum, TM 11225-850731-11,</tech>
<institution>AT&amp;T Bell Laboratories.</institution>
<contexts>
<context position="26102" citStr="[5]" startWordPosition="4171" endWordPosition="4171">26) and (27) manifest the intonational results of moving the thematic focus among the various propositions in the semantic representation of the theme &amp;quot;The new widget probably contains ...&amp;quot;. 6 Synthesis We showed in the previous section how constituents of the type shown in (21) can generate intonationally annotated strings. The resulting string for the current example is &amp;quot;wodgets@lhstar include@lhb sprockets@[hstar, 1113].&amp;quot; The final aspect of generation involves translating such a string into a form usable by a suitable speech synthesiser. Currently, we use the Bell Laboratories TTS system ([5]) as a post-processor to synthesise the speech wave. Example (28) shows the translated output for the same example, as it is sent to this synthesiser. (28) \!&gt; \!*L+H*1 wodgets \!fL1 include \!pL1 \!bH1 \!*H*2 sprockets Vp1.1 \!bL1 . \( *120] \) We stress that we use TTS as an unmodified output device, without any fine tuning other than in the lexicon. While TTS is particularly easy to use with Pierrehumbert&apos;s notation, we are confident that our system can easily be adapted to other synthesisers. 7 Results The system just described produces sharp and natural-sounding distinctions of intonation</context>
</contexts>
<marker>[5]</marker>
<rawString>Liberman, Mark and A.L. Buchsbaum: 1985, &apos;Structure and Usage of Current Bell Labs Text to Speech Programs&apos;, Technical Memorandum, TM 11225-850731-11, AT&amp;T Bell Laboratories.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Moortgat</author>
</authors>
<title>Categorial Investigations,</title>
<date>1989</date>
<location>Foris, Dordrecht.</location>
<contexts>
<context position="8510" citStr="[6]" startWordPosition="1410" endWordPosition="1410">lement(s) in the translation of the category to be marked as focussed, a matter which we will for simplicity assume occurs at the level of the lexicon. For example, when includes bears a pitch accent, its category will be as follows: (11) (S: (*include&apos;) x P : y)/NP : x The categories that result from the combination of a pitch accent and a boundary may or may not constitute entire prosodic phrases, since there may be a prenuclear null tone. There may also be a null tone separating the pitch accent(s) from the boundary. &apos;A similar argument in a related categorial framework is made by Moortgat [6]. &apos;These categories slightly depart from Pierrehumbert. 5 Here we are ignoring the possibility of multiple pitch accents in the same prosodic phrase, but cf. [13]. (Both possibilities are illustrated in (1)). We therefore assign the following category to the null tone, which can thereby apply to the right to any nonfunctional category of the form X :Y , and compose to their right with any function into such a category, including another null tone, to yield the same category: (12) 0 := X : Y/X : Y It is this omnivorous category that allows intonational tunes to be spread over arbitrarily large </context>
</contexts>
<marker>[6]</marker>
<rawString>Moortgat, Michael: 1989, Categorial Investigations, Foris, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Remo Pareschi</author>
<author>Mark Steedman</author>
</authors>
<title>A Lazy Way to Chart-parse with Categorial Grammars&apos;,</title>
<date>1987</date>
<booktitle>Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>81--88</pages>
<location>Stanford CA,</location>
<contexts>
<context position="17880" citStr="[7]" startWordPosition="2954" endWordPosition="2954">e, the CCG combination rules can easily be invoked to determine the rheme of the response. The rheme is simply the complement 12Here we are cutting another corner: the theme, and hence the rheme, are fully specified syntactically, as well as semantically, as a result of the analysis of the question: in a more general system, we would presumably need to specify syntactic type from scratch, starting from pure semantics. of the theme with respect to the overall semantics of the response, as in (21) below, obtained by instantiating the result and one input of the appropriate combinatory rule (cf. [7]):13 (21) prop: s : include(*wodgets,*sprockets) theme: s : include(*wodgets, x)lnp : x rheme: np : *sprockets 5 Tactical Generation and CCG Just as the shift-reduce parser sketched above can readily be made to construct the interpretations and information structures shown in the examples, specifically marking themes, rhemes and their foci, so it is relatively easy to do the reverse—to generate prosidically annotated strings from a focus-marked semantic representation of themes and rhemes. For simplicity, we start by describing the syntactic and semantic aspects of the generator, ignoring pros</context>
</contexts>
<marker>[7]</marker>
<rawString>Pareschi, Remo and Mark Steedman: 1987, &apos;A Lazy Way to Chart-parse with Categorial Grammars&apos;, Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics, Stanford CA, July 1987, 81-88.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janet Pierrehumbert</author>
</authors>
<title>The Phonology and Phonetics of English Intonation,</title>
<date>1980</date>
<institution>MIT. (Dist. by Indiana University Linguistics Club,</institution>
<location>Bloomington, IN.</location>
<note>Ph.D dissertation,</note>
<contexts>
<context position="1361" citStr="[8]" startWordPosition="203" endWordPosition="203">per extends earlier work on the relation between syntax and intonation in language understanding in Combinatory Categorial Grammar (CCG). A generator with a simple and domain-independent discourse model can be used to direct synthesis of intonation contours for responses to data-base queries, to convey distinctions of contrast and emphasis determined by the discourse model. 1 The Problem Consider the exchange shown in example (1). Capitals indicate stress, and brackets informally indicate the intonational phrasing. The intonation contour is indicated underneath using Pierrehumbert&apos;s notation ([8], [1], see [13] for a brief summary). L+H* &amp;quot;Keywords: Speech-synthesis; Generation. We thank Mark Beutnagel and AT&amp;T Bell Laboratories for allowing us access to the TTS speech synthesiser. The research was supported in part by NSF grant nos 1R190- 18513, 1R190-16592, and 1R191-17110, DARPA grant no. N00014-90-J-1863, and ARO grant no. DAAL03-89- C0031. and H* are different high pitch accents, and LH% and LL% (and its relative L) are rising and low boundaries respectively. The other annotations indicate that the intonational tunes L+H* LH% and H* LL% convey two distinct kinds of discourse infor</context>
</contexts>
<marker>[8]</marker>
<rawString>Pierrehumbert, Janet: 1980, The Phonology and Phonetics of English Intonation, Ph.D dissertation, MIT. (Dist. by Indiana University Linguistics Club, Bloomington, IN.)</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janet Pierrehumbert</author>
<author>Julia Hirschberg</author>
</authors>
<title>The Meaning of Intonational Contours in the Interpretation of Discourse&apos;,</title>
<date>1990</date>
<booktitle>Intentions in Communication,</booktitle>
<pages>271--312</pages>
<editor>in Philip Cohen, Jerry Morgan, and Martha Pollack (eds.),</editor>
<publisher>MIT Press</publisher>
<location>Cambridge MA,</location>
<marker>[9]</marker>
<rawString>Pierrehumbert, Janet, and Julia Hirschberg, 1990, &apos;The Meaning of Intonational Contours in the Interpretation of Discourse&apos;, in Philip Cohen, Jerry Morgan, and Martha Pollack (eds.), Intentions in Communication, MIT Press Cambridge MA, 271-312.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shieber</author>
<author>Yves Schabes</author>
</authors>
<title>Generation and Synchronous Tree-Adjoining Grammars&apos;,</title>
<date>1991</date>
<journal>Computational Intelligence,</journal>
<volume>4</volume>
<pages>220--228</pages>
<contexts>
<context position="18656" citStr="[10]" startWordPosition="3070" endWordPosition="3070"> sketched above can readily be made to construct the interpretations and information structures shown in the examples, specifically marking themes, rhemes and their foci, so it is relatively easy to do the reverse—to generate prosidically annotated strings from a focus-marked semantic representation of themes and rhemes. For simplicity, we start by describing the syntactic and semantic aspects of the generator, ignoring prosody for the moment. In constructing a tactical generation schema, several design options are available, including bottom-up, top-down and semantic head-driven models ([3], [10]). We adopt a hybrid approach, employing a basic top-down strategy that takes advantage of the CCG notion of &amp;quot;functional head&amp;quot; to avoid fruitless search. While this technique exhibits some inefficiencies characteristic of a depth–first search, it has several significant advantages. First, it does not rely on a specific semantic representation, and requires only that the semantics be compositional and representable in Prolog. Thus the generating procedure is independent of the particular grammar. This modular character of the system has been very useful in developing the competence grammar prop</context>
</contexts>
<marker>[10]</marker>
<rawString>Shieber, Stuart and Yves Schabes: 1991, &apos;Generation and Synchronous Tree-Adjoining Grammars&apos;, Computational Intelligence, 4, 220-228.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Gapping as Constituent Coordination&apos;,</title>
<date>1990</date>
<journal>Linguistics £.6 Philosophy,</journal>
<volume>13</volume>
<pages>207--263</pages>
<contexts>
<context position="4082" citStr="[11]" startWordPosition="657" endWordPosition="657">nd rheme, and the assignment of contrastive focus. The &amp;quot;tactical&amp;quot; phase is one in which content is mapped 332 (1) Q: I know that the OLD widget had a SLOW processor. But what processor does the NEW widget include? A: (The NEW widget includes) (a L+H* LH% Ground Focus Ground Ground Theme FAST processor) H* LL% Focus Ground Rheme Prosodically Annotated Question Intonational Parser iiirategic Generator Tactical Generator Database Prosodically Annotated Response Spoken Response Figure 1: Architecture onto strings of words. 2 CCG-Based Prosody We will assume a standard CCG of the kind discussed in [11], [12], and [13]. For example, we shall write the category of a transitive verb like prefers either abbreviated, as in (2)a, or in full as in (2)b: (2) a. (S\N P)IN P b. (S : include&apos; x y\NP : y)/ NP : x In b, syntactic types are paired with a semantic interpretation via the colon operator, and the category is that of a function from NPs (with interpretation x) to functions from NPs (with interpretation y) to Ss (with interpretation include&apos; x y). Constants in interpretations bear primes, variables do not, and there is a convention of left associativity. We also need the following two rules of</context>
</contexts>
<marker>[11]</marker>
<rawString>Steedman, Mark: 1990. &apos;Gapping as Constituent Coordination&apos;, Linguistics £.6 Philosophy, 13, 207-263.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Structure and Intonation in Spoken Language Understanding&apos;,</title>
<date>1990</date>
<booktitle>Proceedings of the 25th Annual Conference of the Association for Computational Linguistics,</booktitle>
<pages>9--17</pages>
<location>Pittsburgh, PA,</location>
<contexts>
<context position="4088" citStr="[12]" startWordPosition="658" endWordPosition="658">me, and the assignment of contrastive focus. The &amp;quot;tactical&amp;quot; phase is one in which content is mapped 332 (1) Q: I know that the OLD widget had a SLOW processor. But what processor does the NEW widget include? A: (The NEW widget includes) (a L+H* LH% Ground Focus Ground Ground Theme FAST processor) H* LL% Focus Ground Rheme Prosodically Annotated Question Intonational Parser iiirategic Generator Tactical Generator Database Prosodically Annotated Response Spoken Response Figure 1: Architecture onto strings of words. 2 CCG-Based Prosody We will assume a standard CCG of the kind discussed in [11], [12], and [13]. For example, we shall write the category of a transitive verb like prefers either abbreviated, as in (2)a, or in full as in (2)b: (2) a. (S\N P)IN P b. (S : include&apos; x y\NP : y)/ NP : x In b, syntactic types are paired with a semantic interpretation via the colon operator, and the category is that of a function from NPs (with interpretation x) to functions from NPs (with interpretation y) to Ss (with interpretation include&apos; x y). Constants in interpretations bear primes, variables do not, and there is a convention of left associativity. We also need the following two rules of funct</context>
<context position="6888" citStr="[12]" startWordPosition="1123" endWordPosition="1123">of coordinate constructions, the general class of rules from which the composition rule is drawn, and the problem of processing in the face of such associative rules, are discussed in the earlier papers, and need not concern us here. The point for present purposes is that the partition of the sentence into the object and a non-standard constituent S : include&apos; x&apos; widgets&apos; I NP : x makes this theory structurally and semantically perfectly suited to the demands of intonation, as exhibited in example (1).3 We can therefore directly incorporate intonational constituency in syntax, as follows (cf. [12], [13], and [15]). We assign to all constituents an autonomous prosodic category, expressing their potential for combination with other prosodic categories. Then we lock these two structural systems together via the following principle, which says that syntactic and prosodic constituency must be isomorphic: (8) PROSODIC CONSTITUENT CONDITION: Combination of two syntactic categories via a syntactic combinatory rule is only allowed if their prosodic categories can also combine via a prosodic combinatory rule. One way to do this is to make the boundaries arguments and the pitch accents functions </context>
</contexts>
<marker>[12]</marker>
<rawString>Steedman, Mark: 1990, &apos;Structure and Intonation in Spoken Language Understanding&apos;, Proceedings of the 25th Annual Conference of the Association for Computational Linguistics, Pittsburgh, PA, June 1990, 9-17.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<date>1991</date>
<journal>Structure and Intonation, Language,</journal>
<volume>68</volume>
<pages>260--296</pages>
<contexts>
<context position="1376" citStr="[13]" startWordPosition="206" endWordPosition="206">rlier work on the relation between syntax and intonation in language understanding in Combinatory Categorial Grammar (CCG). A generator with a simple and domain-independent discourse model can be used to direct synthesis of intonation contours for responses to data-base queries, to convey distinctions of contrast and emphasis determined by the discourse model. 1 The Problem Consider the exchange shown in example (1). Capitals indicate stress, and brackets informally indicate the intonational phrasing. The intonation contour is indicated underneath using Pierrehumbert&apos;s notation ([8], [1], see [13] for a brief summary). L+H* &amp;quot;Keywords: Speech-synthesis; Generation. We thank Mark Beutnagel and AT&amp;T Bell Laboratories for allowing us access to the TTS speech synthesiser. The research was supported in part by NSF grant nos 1R190- 18513, 1R190-16592, and 1R191-17110, DARPA grant no. N00014-90-J-1863, and ARO grant no. DAAL03-89- C0031. and H* are different high pitch accents, and LH% and LL% (and its relative L) are rising and low boundaries respectively. The other annotations indicate that the intonational tunes L+H* LH% and H* LL% convey two distinct kinds of discourse information. First, </context>
<context position="4098" citStr="[13]" startWordPosition="660" endWordPosition="660">e assignment of contrastive focus. The &amp;quot;tactical&amp;quot; phase is one in which content is mapped 332 (1) Q: I know that the OLD widget had a SLOW processor. But what processor does the NEW widget include? A: (The NEW widget includes) (a L+H* LH% Ground Focus Ground Ground Theme FAST processor) H* LL% Focus Ground Rheme Prosodically Annotated Question Intonational Parser iiirategic Generator Tactical Generator Database Prosodically Annotated Response Spoken Response Figure 1: Architecture onto strings of words. 2 CCG-Based Prosody We will assume a standard CCG of the kind discussed in [11], [12], and [13]. For example, we shall write the category of a transitive verb like prefers either abbreviated, as in (2)a, or in full as in (2)b: (2) a. (S\N P)IN P b. (S : include&apos; x y\NP : y)/ NP : x In b, syntactic types are paired with a semantic interpretation via the colon operator, and the category is that of a function from NPs (with interpretation x) to functions from NPs (with interpretation y) to Ss (with interpretation include&apos; x y). Constants in interpretations bear primes, variables do not, and there is a convention of left associativity. We also need the following two rules of functional appl</context>
<context position="6894" citStr="[13]" startWordPosition="1124" endWordPosition="1124">rdinate constructions, the general class of rules from which the composition rule is drawn, and the problem of processing in the face of such associative rules, are discussed in the earlier papers, and need not concern us here. The point for present purposes is that the partition of the sentence into the object and a non-standard constituent S : include&apos; x&apos; widgets&apos; I NP : x makes this theory structurally and semantically perfectly suited to the demands of intonation, as exhibited in example (1).3 We can therefore directly incorporate intonational constituency in syntax, as follows (cf. [12], [13], and [15]). We assign to all constituents an autonomous prosodic category, expressing their potential for combination with other prosodic categories. Then we lock these two structural systems together via the following principle, which says that syntactic and prosodic constituency must be isomorphic: (8) PROSODIC CONSTITUENT CONDITION: Combination of two syntactic categories via a syntactic combinatory rule is only allowed if their prosodic categories can also combine via a prosodic combinatory rule. One way to do this is to make the boundaries arguments and the pitch accents functions over t</context>
<context position="8672" citStr="[13]" startWordPosition="1435" endWordPosition="1435">le, when includes bears a pitch accent, its category will be as follows: (11) (S: (*include&apos;) x P : y)/NP : x The categories that result from the combination of a pitch accent and a boundary may or may not constitute entire prosodic phrases, since there may be a prenuclear null tone. There may also be a null tone separating the pitch accent(s) from the boundary. &apos;A similar argument in a related categorial framework is made by Moortgat [6]. &apos;These categories slightly depart from Pierrehumbert. 5 Here we are ignoring the possibility of multiple pitch accents in the same prosodic phrase, but cf. [13]. (Both possibilities are illustrated in (1)). We therefore assign the following category to the null tone, which can thereby apply to the right to any nonfunctional category of the form X :Y , and compose to their right with any function into such a category, including another null tone, to yield the same category: (12) 0 := X : Y/X : Y It is this omnivorous category that allows intonational tunes to be spread over arbitrarily large constituents, since it allows the pitch accent&apos;s desire for a boundary to propagate via composition into the null tone category (see the earlier papers). In order</context>
<context position="10491" citStr="[13]" startWordPosition="1765" endWordPosition="1765"> [2]). The fact that p is an atom rather than a term of the form X :Y is important, since it means that it can combine only with another p. This is vital to the preservation of the intonation structure.7 The application of the above two rules to a complete intonational phrase should be thought of as precipitating a side-effect whereby a copy of the category E is associated with the clause as its theme or rheme. (We gloss over details of how themes and rhemes are associated with a particular clause, as well as a number of further complications arising in sentences with more than one rheme). In [13] and [15], a related set of rules of which the present ones form a subset are shown to be wellbehaved with a wide range of examples. Example (15) gives the derivation for an example related to (7) (since the raised object category is not crucial, it has been replaced by NP to ease comprehension):8 Note that it is the identification of the theme and 6These rules represent both a departure from the earlier papers and a slight simplification of what is actually needed to allow prosodic phrases to combine correctly. 7The category has the same effect of preventing further composition into the null </context>
</contexts>
<marker>[13]</marker>
<rawString>Steedman, Mark: 1991, Structure and Intonation, Language, 68, 260-296.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Type-raising and Directionality in Categorial Grammar&apos;,</title>
<date>1991</date>
<booktitle>Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<pages>71--78</pages>
<location>Berkeley CA,</location>
<contexts>
<context position="6052" citStr="[14]" startWordPosition="985" endWordPosition="985">to include functional composition, as well as application. The following rule will be relevant below: (6) FORWARD COMPOSITION (›B): X/Y Y/Z B X/Z This rule allows a second syntactic derivation for the above sentence, as follows:2 (7) Widgets include sprockets S/(S\NP) (S\NP)/NP S\(S/NP) &gt;B S/NP 1The reader is encouraged to satisfy themselves using the full semantic notation that this derivation yields an S with the correct interpretation include&apos; sprockets&apos; widgets&apos;. At first glance, it looks as though type-raising will expand the lexicon alarmingly. One way round this problem is discussed in [14]. 2The reader is again strongly uged to satisfy themselves that the S yielded in the derivation bears the correct interpretation. CCG TTS Translator Speech Synthesizer 333 The reasons for making this move, which concern the grammar of coordinate constructions, the general class of rules from which the composition rule is drawn, and the problem of processing in the face of such associative rules, are discussed in the earlier papers, and need not concern us here. The point for present purposes is that the partition of the sentence into the object and a non-standard constituent S : include&apos; x&apos; wi</context>
<context position="13035" citStr="[14]" startWordPosition="2178" endWordPosition="2178">, can be captured by a &amp;quot;Null Theme Promotion Rule&amp;quot;, as follows:9 X : Y/X : Y = p : theme 3 Parsing Having established the relationship between prosody, information structure and CCG syntax, we can now address the computational problem of automatically directing the synthesis of intonation contours for responses to database queries. Our computational model (shown in Figure 1) starts with a prosodically annotated wh-question given as a string of words with associated Pierrehumbert-style pitch accent and boundary markings. We employ a simple bottom-up shift-reduce parser of the kind presented in [14], making direct use of the CCG-Prosody theory described above, to identify the semantics of the question. The &apos;See the next section concerning the nondeterminism inherent in this rule. inclusion of prosodic categories in the grammar allows the parser to identify the information structure (theme and rheme) within the question as well. The focus and background information within the theme and rheme (if any) is further marked by the focus predicate * in the semantic representation. For example, given the question (18) below, the parser produces the semantic and information structure representatio</context>
</contexts>
<marker>[14]</marker>
<rawString>Steedman, Mark: 1991, &apos;Type-raising and Directionality in Categorial Grammar&apos;, Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics, Berkeley CA, June 1991, 71-78.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Steedman</author>
</authors>
<title>Surface Structure, Intonation, and &amp;quot;Focus&amp;quot;,</title>
<date>1991</date>
<booktitle>Natural Language and Speech, Proceedings of the ESPRIT Symposium,</booktitle>
<pages>21--38</pages>
<editor>in Ewan Klein and F. Veltman (eds.),</editor>
<location>Brussels,</location>
<contexts>
<context position="6904" citStr="[15]" startWordPosition="1126" endWordPosition="1126">nstructions, the general class of rules from which the composition rule is drawn, and the problem of processing in the face of such associative rules, are discussed in the earlier papers, and need not concern us here. The point for present purposes is that the partition of the sentence into the object and a non-standard constituent S : include&apos; x&apos; widgets&apos; I NP : x makes this theory structurally and semantically perfectly suited to the demands of intonation, as exhibited in example (1).3 We can therefore directly incorporate intonational constituency in syntax, as follows (cf. [12], [13], and [15]). We assign to all constituents an autonomous prosodic category, expressing their potential for combination with other prosodic categories. Then we lock these two structural systems together via the following principle, which says that syntactic and prosodic constituency must be isomorphic: (8) PROSODIC CONSTITUENT CONDITION: Combination of two syntactic categories via a syntactic combinatory rule is only allowed if their prosodic categories can also combine via a prosodic combinatory rule. One way to do this is to make the boundaries arguments and the pitch accents functions over them. The b</context>
<context position="10500" citStr="[15]" startWordPosition="1767" endWordPosition="1767">e fact that p is an atom rather than a term of the form X :Y is important, since it means that it can combine only with another p. This is vital to the preservation of the intonation structure.7 The application of the above two rules to a complete intonational phrase should be thought of as precipitating a side-effect whereby a copy of the category E is associated with the clause as its theme or rheme. (We gloss over details of how themes and rhemes are associated with a particular clause, as well as a number of further complications arising in sentences with more than one rheme). In [13] and [15], a related set of rules of which the present ones form a subset are shown to be wellbehaved with a wide range of examples. Example (15) gives the derivation for an example related to (7) (since the raised object category is not crucial, it has been replaced by NP to ease comprehension):8 Note that it is the identification of the theme and 6These rules represent both a departure from the earlier papers and a slight simplification of what is actually needed to allow prosodic phrases to combine correctly. 7The category has the same effect of preventing further composition into the null tone achi</context>
</contexts>
<marker>[15]</marker>
<rawString>Steedman, Mark: 1991, &apos;Surface Structure, Intonation, and &amp;quot;Focus&amp;quot;, in Ewan Klein and F. Veltman (eds.), Natural Language and Speech, Proceedings of the ESPRIT Symposium, Brussels, Nov. 1991. 21-38, 260-296.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>