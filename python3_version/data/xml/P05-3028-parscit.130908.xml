<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000067">
<title confidence="0.999674">
A Flexible Stand-Off Data Model with Query Language
for Multi-Level Annotation
</title>
<author confidence="0.907778">
Christoph M¨uller
</author>
<affiliation confidence="0.688318">
EML Research gGmbH
</affiliation>
<address confidence="0.795137333333333">
Villa Bosch
Schloß-Wolfsbrunnenweg 33
69118 Heidelberg, Germany
</address>
<email confidence="0.89208">
mueller@eml-research.de
</email>
<sectionHeader confidence="0.994061" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999953888888889">
We present an implemented XML data model and a
new, simplified query language for multi-level an-
notated corpora. The new query language involves
automatic conversion of queries into the underly-
ing, more complicated MMAXQL query language.
It supports queries for sequential and hierarchical,
but also associative (e.g. coreferential) relations.
The simplified query language has been designed
with non-expert users in mind.
</bodyText>
<sectionHeader confidence="0.998991" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999918142857143">
Growing interest in richly annotated corpora is a
driving force for the development of annotation tools
that can handle multiple levels of annotation. We
find it crucial in order to make full use of the po-
tential of multi-level annotation that individual an-
notation levels be treated as self-contained modules
which are independent of other annotation levels.
This independence should also include the storing
of each level in a separate file. If these principles are
observed, annotation data management (incl. level
addition, removal and replacement, but also conver-
sion into and from other formats) is greatly facili-
tated.
The way to keep individual annotation levels in-
dependent of each other is by defining each with
direct reference to the underlying basedata, i.e. the
text or transcribed speech. Both sequential and hi-
erarchical (i.e. embedding or dominance) relations
between markables on different levels are thus only
expressed implicitly, viz. by means of the relations
of their basedata elements.
</bodyText>
<page confidence="0.989034">
109
</page>
<bodyText confidence="0.999927071428572">
While it has become common practice to use
the stand-off mechanism to relate several annota-
tion levels to one basedata file, it is also not un-
common to find this mechanism applied for relating
markables to other markables (on a different or the
same level) directly, expressing the relation between
them explicitly. We argue that this is unfavourable
not only with respect to annotation data management
(cf. above), but also with respect to querying: Users
should not be required to formulate queries in terms
of structural properties of data representation that
are irrelevant for their query. Instead, users should
be allowed to relate markables from all levels in a
fairly unrestricted and ad-hoc way. Since querying is
thus considerably simplified, exploratory data analy-
sis of annotated corpora is facilitated for all users,
including non-experts.
Our multi-level annotation tool MMAX21
(M¨uller &amp; Strube, 2003) uses implicit relations
only. Its query language MMAXQL is rather
complicated and not suitable for naive users. We
present an alternative query method consisting of
a simpler and more intuitive query language and
a method to generate MMAXQL queries from the
former. The new, simplified MMAXQL can express
a wide range of queries in a concise way, including
queries for associative relations representing e.g.
coreference.
</bodyText>
<sectionHeader confidence="0.988736" genericHeader="method">
2 The Data Model
</sectionHeader>
<bodyText confidence="0.997723">
We propose a stand-off data model implemented in
XML. The basedata is stored in a simple XML file
</bodyText>
<footnote confidence="0.999945">
1The current release version of MMAX2 can be downloaded
at http://mmax.eml-research.de.
</footnote>
<note confidence="0.614905">
Proceedings of the ACL Interactive Poster and Demonstration Sessions,
</note>
<footnote confidence="0.346182">
pages 109–112, Ann Arbor, June 2005. c�2005 Association for Computational Linguistics
</footnote>
<equation confidence="0.901364421052631">
&lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;US-ASCII&amp;quot;?&gt;
&lt;!DOCTYPE words SYSTEM &amp;quot;words.dtd&amp;quot;&gt;
&lt;words&gt;
...
&lt;word id=&amp;quot;word_1064&amp;quot;&gt;My&lt;/word&gt;
&lt;word id=&amp;quot;word_1065&amp;quot;&gt;,&lt;/word&gt;
&lt;word id=&amp;quot;word_1066&amp;quot;&gt;uh&lt;/word&gt;
&lt;word id=&amp;quot;word_1067&amp;quot;&gt;,&lt;/word&gt;
&lt;word id=&amp;quot;word_1068&amp;quot;&gt;cousin&lt;/word&gt;
&lt;word id=&amp;quot;word_1069&amp;quot;&gt;is&lt;/word&gt;
&lt;word id=&amp;quot;word_1070&amp;quot;&gt;a&lt;/word&gt;
&lt;word id=&amp;quot;word_1071&amp;quot;&gt;F&lt;/word&gt;
&lt;word id=&amp;quot;word_1072&amp;quot;&gt;B&lt;/word&gt;
&lt;word id=&amp;quot;word_1073&amp;quot;&gt;I&lt;/word&gt;
&lt;word id=&amp;quot;word_1074&amp;quot;&gt;agent&lt;/word&gt;
&lt;word id=&amp;quot;word_1075&amp;quot;&gt;down&lt;/word&gt;
&lt;word id=&amp;quot;word_1076&amp;quot;&gt;in&lt;/word&gt;
&lt;word id=&amp;quot;word_1077&amp;quot;&gt;Miami&lt;/word&gt;
&lt;word id=&amp;quot;word_1078&amp;quot;&gt;.&lt;/word&gt;
</equation>
<figure confidence="0.97220425">
...
&lt;word id=&amp;quot;word_1085&amp;quot;&gt;she&lt;/word&gt;
...
&lt;/words&gt;
</figure>
<figureCaption confidence="0.996547">
Figure 1: basedata file (extract)
</figureCaption>
<figure confidence="0.991983">
&lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;US-ASCII&amp;quot;?&gt;
&lt;!DOCTYPE markables SYSTEM &amp;quot;markables.dtd&amp;quot;&gt;
&lt;markables xmlns=&amp;quot;www.eml.org/NameSpaces/utterances&amp;quot;&gt;
...
&lt;markable id=&amp;quot;markable_116&amp;quot; span=&amp;quot;word_1064..word_1078&amp;quot;/&gt;
...
&lt;/markables&gt;
</figure>
<figureCaption confidence="0.999831">
Figure 2: utterances level file (extract)
</figureCaption>
<bodyText confidence="0.999947576923077">
which serves to identify individual tokens2 and as-
sociate an ID with each (Figure 1).
In addition, there is one XML file for each an-
notation level. Each level has a unique, descriptive
name, e.g. utterances or pos, and contains an-
notations in the form of &lt;markable&gt; elements.
In the most simple case, a markable only identifies
a sequence (i.e. span) of basedata elements (Figure
2).
Normally, however, a markable is also associated
with arbitrarily many user-defined attribute-value
pairs (Figure 3, Figure 4). Markables can also be
discontinuous, like markable 954 in Figure 4.
For each level, admissible attributes and their val-
ues are defined in a separate annotation scheme file
(not shown, cf. M¨uller &amp; Strube (2003)). Freetext
attributes can have any string value, while nominal
attributes can have one of a (user-defined) closed set
of possible values. The data model also supports
associative relations between markables: Markable
set relations associate arbitrarily many markables
with each other in a transitive, undirected way. The
coref class attribute in Figure 4 is an exam-
ple of how such a relation can be used to represent
a coreferential relation between markables (here:
markable 954 and markable 963, rest of set
</bodyText>
<footnote confidence="0.670297">
2Usually words, but smaller elements like morphological
units or even characters are also possible.
</footnote>
<tableCaption confidence="0.886176894736842">
&lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;US-ASCII&amp;quot;?&gt;
&lt;!DOCTYPE markables SYSTEM &amp;quot;markables.dtd&amp;quot;&gt;
&lt;markables xmlns=&amp;quot;www.eml.org/NameSpaces/pos&amp;quot;&gt;
...
&lt;markable id=&amp;quot;markable_665&amp;quot; span=&amp;quot;word_1064&amp;quot; pos=&amp;quot;PRP$&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_666&amp;quot; span=&amp;quot;word_1065&amp;quot; pos=&amp;quot;,&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_667&amp;quot; span=&amp;quot;word_1066&amp;quot; pos=&amp;quot;UH&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_668&amp;quot; span=&amp;quot;word_1067&amp;quot; pos=&amp;quot;,&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_669&amp;quot; span=&amp;quot;word_1068&amp;quot; pos=&amp;quot;NN&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_670&amp;quot; span=&amp;quot;word_1069&amp;quot; pos=&amp;quot;VBZ&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_671&amp;quot; span=&amp;quot;word_1070&amp;quot; pos=&amp;quot;DT&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_672&amp;quot; span=&amp;quot;word_1071&amp;quot; pos=&amp;quot;NNP&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_673&amp;quot; span=&amp;quot;word_1072&amp;quot; pos=&amp;quot;NNP&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_674&amp;quot; span=&amp;quot;word_1073&amp;quot; pos=&amp;quot;NNP&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_675&amp;quot; span=&amp;quot;word_1074&amp;quot; pos=&amp;quot;NN&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_676&amp;quot; span=&amp;quot;word_1075&amp;quot; pos=&amp;quot;IN&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_677&amp;quot; span=&amp;quot;word_1076&amp;quot; pos=&amp;quot;IN&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_678&amp;quot; span=&amp;quot;word_1077&amp;quot; pos=&amp;quot;NNP&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_679&amp;quot; span=&amp;quot;word_1078&amp;quot; pos=&amp;quot;.&amp;quot;/&gt;
</tableCaption>
<figure confidence="0.83694875">
...
&lt;markable id=&amp;quot;markable_686&amp;quot; span=&amp;quot;word_1085&amp;quot; pos=&amp;quot;PRP&amp;quot;/&gt;
...
&lt;/markables&gt;
</figure>
<figureCaption confidence="0.98287">
Figure 3: pos level file (extract)
</figureCaption>
<figure confidence="0.821207866666666">
&lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;US-ASCII&amp;quot;?&gt;
&lt;!DOCTYPE markables SYSTEM &amp;quot;markables.dtd&amp;quot;&gt;
&lt;markables xmlns=&amp;quot;www.eml.org/NameSpaces/ref_exp&amp;quot;&gt;
...
&lt;markable id=&amp;quot;markable_953&amp;quot; span=&amp;quot;word_1064&amp;quot; type=&amp;quot;poss_det&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_954&amp;quot; span=&amp;quot;word_1064,word_1068&amp;quot; type=&amp;quot;np&amp;quot;
coref_class=&amp;quot;set_3&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_955&amp;quot; span=&amp;quot;word_1070..word_1074&amp;quot; type=&amp;quot;np&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_956&amp;quot; span=&amp;quot;word_1071..word_1073&amp;quot; type=&amp;quot;pn&amp;quot;/&gt;
&lt;markable id=&amp;quot;markable_957&amp;quot; span=&amp;quot;word_1077&amp;quot; type=&amp;quot;pn&amp;quot;/&gt;
...
&lt;markable id=&amp;quot;markable_963&amp;quot; span=&amp;quot;word_1085&amp;quot; type=&amp;quot;pron&amp;quot;
coref_class=&amp;quot;set_3&amp;quot;/&gt;
...
&lt;/markables&gt;
</figure>
<figureCaption confidence="0.999906">
Figure 4: ref exp level file (extract)
</figureCaption>
<bodyText confidence="0.994902333333333">
not shown). Markable pointer relations associate
with one markable (the source) one or more target
markables in an intransitive, directed fashion.
</bodyText>
<sectionHeader confidence="0.998975" genericHeader="method">
3 Simplified MMAXQL
</sectionHeader>
<bodyText confidence="0.9999056">
Simplified MMAXQL is a variant of the MMAXQL
query language. It offers a simpler and more con-
cise way to formulate certain types of queries for
multi-level annotated corpora. Queries are automat-
ically converted into the underlying query language
and then executed. A query in simplified MMAXQL
consists of a sequence of query tokens which are
combined by means of relation operators. Each
query token queries exactly one basedata element
(i.e. word) or one markable.
</bodyText>
<subsectionHeader confidence="0.997708">
3.1 Query Tokens
</subsectionHeader>
<bodyText confidence="0.970184833333333">
Basedata elements can be queried by matching reg-
ular expressions. Each basedata query token con-
sists of a regular expression in single quotes, which
must exactly match one basedata element. The query
’[Tt]he’
matches all definite articles, but not e.g. ether or
</bodyText>
<page confidence="0.995128">
110
</page>
<bodyText confidence="0.980240292682927">
there. For the latter two words to also match, wild-
cards have to be used:
’.*[Tt]he.*’
Sequences of basedata elements can be queried by
simply concatenating several space-separated3 to-
kens. The query
’[Tt]he [A-Z].+’
will match sequences consisting of a definite article
and a word beginning with a capital letter.
Markables are the carriers of the actual annota-
tion information. They can be queried by means
of string matching and by means of attribute-value
combinations. A markable query token has the form
string/conditions
where string is an optional regular expression
and conditions specifies which attribute(s) the
markable should match. The most simple ’condi-
tion’ is just the name of a markable level, which will
match all markables on that level. If a regular ex-
pression is also supplied, the query will return only
the matching markables. The query
[Aa]n?\s.*/ref exp4
will return all markables from the ref exp level
beginning with the indefinite article.
The conditions part of a markable query to-
ken can indeed be much more complex. A main
feature of simplified MMAXQL is that redundant
parts of conditions can optionally be left out, mak-
ing queries very concise. For example, the mark-
able level name can be left out if the name of the
attribute accessed by the query is unique across all
active markable levels. Thus, the query
/!coref class=empty
can be used to query markables from the ref exp
level which have a non-empty value in the
coref class attribute, granted that only one at-
tribute of this name exists.5 The same applies to the
names of nominal attributes if the value specified
in the query unambiguously points to this attribute.
Thus, the query
/pn
</bodyText>
<footnote confidence="0.995126714285714">
3Using the fact that meets is the default relation operator,
cf. Section 3.2.
4The space character in the regular expression must be
masked as \s because otherwise it will be interpreted as a query
token separator.
5If this condition does not hold, attribute names can be dis-
ambiguated by prepending the markable level name.
</footnote>
<bodyText confidence="0.987245">
can be used to query markables from the pos level
which have the value pn, granted that there is ex-
actly one nominal attribute with the possible value
pn. Several conditions can be combined into one
query token. Thus, the query
/{poss det,pron},!coref class=empty
returns all markables from the ref exp level that
are either possessive determiners or pronouns and
that are part in some coreference set.6
</bodyText>
<subsectionHeader confidence="0.999604">
3.2 Relation Operators
</subsectionHeader>
<bodyText confidence="0.976842633333333">
The whole point of querying corpora with multi-
level annotation is to relate markables from different
levels to each other. The reference system with re-
spect to which the relation between different mark-
ables is established is the sequence of basedata el-
ements, which is the same for all markables on all
levels. Since this bears some resemblance to differ-
ent events occurring in several temporal relations to
each other, we (like also Heid et al. (2004), among
others) adopt this as a metaphor for expressing
the sequential and hierarchical relations between
markables, and we use a set of relation operators
that is inspired by (Allen, 1991). This set includes
(among others) the operators before, meets (de-
fault), starts, during/in, contains/dom,
equals, ends, and some inverse relations. The
following examples give an idea of how individual
query tokens can be combined by means of rela-
tion operators to form complex queries. The exam-
ple uses the ICSI meeting corpus of spoken multi-
party dialogue.7 This corpus contains, among oth-
ers, a segment level with markables roughly corre-
sponding to speaker turns, and a meta level contain-
ing markables representing e.g. pauses, emphases,
or sounds like breathing or mike noise. These two
levels and the basedata level can be combined to re-
trieve instances of you know that occur in segments
spoken by female speakers8 which also contain a
pause or an emphasis:
’[Yy]ou know’ in (/participant={f.*} dom /{pause,emphasis})
</bodyText>
<footnote confidence="0.999484375">
6The curly braces notation is used to specify several OR-
connected values for a single attribute, while a comma outside
curly braces is used to AND-connect several conditions relating
to different attributes.
7Obtained from the LDC and converted into MMAX2 for-
mat, preserving all original information.
8The first letter of the participant value encodes the
speaker’s gender.
</footnote>
<page confidence="0.997778">
111
</page>
<bodyText confidence="0.961368153846154">
Relation operators for associative relations (i.e.
markable set and markable pointer) are nextpeer,
anypeer and nexttarget, anytarget, re-
spectively. Assuming the sample data from Section
2, the query
/ref_exp nextpeer:coref_class /ref_exp
retrieves pairs of anaphors (right) and their direct an-
tecedents (left). The query can be modified to
/ref_exp nextpeer:coref_class (/ref_exp equals /pron)
to retrieve only anaphoric pronouns and their direct
antecedents.
If a query is too complex to be expressed as a sin-
gle query token sequence, variables can be used to
store intermediate results of sub-queries. The fol-
lowing query retrieves pairs of utterances (incl. the
referring expressions embedded into them) that are
more than 30 tokens9 apart, and assigns the resulting
4-tuples to the variable $distant utts.
(/utterances dom /ref_exp) before:31- (/utterances dom /ref_exp)
-&gt; $distant_utts
The next query accesses the second and last column
in the temporary result (by means of the zero-based
column index) and retrieves those pairs of anaphors
and their direct antecedents that occur in utterances
that are more than 30 tokens apart:
$distant_utts.1 nextpeer:coref_class $distant_utts.3
</bodyText>
<sectionHeader confidence="0.999949" genericHeader="related work">
4 Related Work
</sectionHeader>
<bodyText confidence="0.99973925">
In the EMU speech database system (Cassidy &amp;
Harrington, 2001) the hierarchical relation between
levels has to be made explicit. Sequential and hi-
erarchical relations can be queried like with simpli-
fied MMAXQL, with the difference that e.g. for se-
quential queries, the elements involved must come
from the same level. Also, the result of a hierarchi-
cal query always only contains either the parent or
child element. The EMU data model supports an as-
sociation relation (similar to our markable pointer)
which can be queried using a =&gt; operator.
Annotation Graphs (Bird &amp; Liberman, 2001)
identify elements on various levels as arcs connect-
ing two points on a time scale shared by all lev-
els. Relations between elements are thus also rep-
resented implicitly. The model can also express a
</bodyText>
<footnote confidence="0.8943445">
9A means to express distance in terms of markables is not
yet available, cf. Section 5.
</footnote>
<bodyText confidence="0.999883428571429">
binary association relation. The associated Annota-
tion Graph query language (Bird et al., 2000) is very
explicit, which makes it powerful but at the same
time possibly too demanding for naive users.
The NITE XML toolkit (Carletta et al., 2003) de-
fines a data model that is close to our model, al-
though it allows to express hierarchical relations ex-
plicitly. The model supports a labelled pointer re-
lation which can express one-to-many associations.
The associated query language NXT Search (Heid
et al., 2004) is a powerful declarative language for
querying diverse relations (incl. pointers), support-
ing quantification and constructs like forall and
exists.
</bodyText>
<sectionHeader confidence="0.999853" genericHeader="conclusions">
5 Future Work
</sectionHeader>
<bodyText confidence="0.9998372">
We work on support for queries like ’pairs of re-
ferring expressions that are a certain number of re-
ferring expressions apart’. We also want to include
wild cards and proximity searches, and support for
automatic markable creation from query results.
</bodyText>
<sectionHeader confidence="0.996224" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.945027">
This work has been funded by the Klaus Tschira
Foundation, Heidelberg, Germany.
</bodyText>
<sectionHeader confidence="0.995416" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99854">
Allen, James (1991). Time and time again. International Jour-
nal ofIntelligent Systems, 6(4):341–355.
Bird, Steven, Peter Buneman &amp; Wang-Chiew Tan (2000). To-
wards a query language for annotation graphs. In Pro-
ceedings of the 2nd International Conference on Lan-
guage Resources and Evaluation, Athens, Greece, 31
May-June 2, 2000, pp. 807–814.
Bird, Steven &amp; Mark Liberman (2001). A formal framework for
linguistic annotation. Speech Communication, 33:23–60.
Carletta, Jean, Stefan Evert, Ulrich Heid, Jonathan Kilgour,
J. Robertson &amp; Holger Voormann (2003). The NITE
XML toolkit: flexible annotation for multi-modal lan-
guage data. Behavior Research Methods, Instruments,
and Computers, 35:353–363.
Cassidy, Steve &amp; Jonathan Harrington (2001). Multi-level anno-
tation in the EMU speech database management system.
Speech Communication, 33:61–78.
Heid, Ulrich, Holger Voormann, Jan-Torsten Milde, Ulrike Gut,
Katrin Erk &amp; Sebastian Pado (2004). Querying both time-
aligned and hierarchical corpora with NXT search. In
Proceedings of the 4th International Conference on Lan-
guage Resources and Evaluation, Lisbon, Portugal, 26-28
May, 2004, pp. 1455–1458.
M¨uller, Christoph &amp; Michael Strube (2003). Multi-level an-
notation in MMAX. In Proceedings of the 4th SIGdial
Workshop on Discourse and Dialogue, Sapporo, Japan,
4-5 July 2003, pp. 198–207.
</reference>
<page confidence="0.99815">
112
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.456961">
<title confidence="0.9997225">A Flexible Stand-Off Data Model with Query Language for Multi-Level Annotation</title>
<author confidence="0.997182">Christoph M¨uller</author>
<affiliation confidence="0.958429">EML Research gGmbH</affiliation>
<author confidence="0.729054">Villa Bosch</author>
<address confidence="0.8872785">Schloß-Wolfsbrunnenweg 33 69118 Heidelberg, Germany</address>
<email confidence="0.999298">mueller@eml-research.de</email>
<abstract confidence="0.9906936">We present an implemented XML data model and a new, simplified query language for multi-level annotated corpora. The new query language involves automatic conversion of queries into the underlying, more complicated MMAXQL query language. It supports queries for sequential and hierarchical, but also associative (e.g. coreferential) relations. The simplified query language has been designed with non-expert users in mind.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James Allen</author>
</authors>
<title>Time and time again.</title>
<date>1991</date>
<journal>International Journal ofIntelligent Systems,</journal>
<volume>6</volume>
<issue>4</issue>
<contexts>
<context position="11307" citStr="Allen, 1991" startWordPosition="1572" endWordPosition="1573">orpora with multilevel annotation is to relate markables from different levels to each other. The reference system with respect to which the relation between different markables is established is the sequence of basedata elements, which is the same for all markables on all levels. Since this bears some resemblance to different events occurring in several temporal relations to each other, we (like also Heid et al. (2004), among others) adopt this as a metaphor for expressing the sequential and hierarchical relations between markables, and we use a set of relation operators that is inspired by (Allen, 1991). This set includes (among others) the operators before, meets (default), starts, during/in, contains/dom, equals, ends, and some inverse relations. The following examples give an idea of how individual query tokens can be combined by means of relation operators to form complex queries. The example uses the ICSI meeting corpus of spoken multiparty dialogue.7 This corpus contains, among others, a segment level with markables roughly corresponding to speaker turns, and a meta level containing markables representing e.g. pauses, emphases, or sounds like breathing or mike noise. These two levels a</context>
</contexts>
<marker>Allen, 1991</marker>
<rawString>Allen, James (1991). Time and time again. International Journal ofIntelligent Systems, 6(4):341–355.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
</authors>
<title>Peter Buneman &amp; Wang-Chiew Tan</title>
<date>2000</date>
<booktitle>In Proceedings of the 2nd International Conference on Language Resources and Evaluation,</booktitle>
<volume>31</volume>
<pages>807--814</pages>
<location>Athens,</location>
<marker>Bird, 2000</marker>
<rawString>Bird, Steven, Peter Buneman &amp; Wang-Chiew Tan (2000). Towards a query language for annotation graphs. In Proceedings of the 2nd International Conference on Language Resources and Evaluation, Athens, Greece, 31 May-June 2, 2000, pp. 807–814.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven Bird</author>
<author>Mark Liberman</author>
</authors>
<title>A formal framework for linguistic annotation.</title>
<date>2001</date>
<journal>Speech Communication,</journal>
<pages>33--23</pages>
<contexts>
<context position="14301" citStr="Bird &amp; Liberman, 2001" startWordPosition="2031" endWordPosition="2034">class $distant_utts.3 4 Related Work In the EMU speech database system (Cassidy &amp; Harrington, 2001) the hierarchical relation between levels has to be made explicit. Sequential and hierarchical relations can be queried like with simplified MMAXQL, with the difference that e.g. for sequential queries, the elements involved must come from the same level. Also, the result of a hierarchical query always only contains either the parent or child element. The EMU data model supports an association relation (similar to our markable pointer) which can be queried using a =&gt; operator. Annotation Graphs (Bird &amp; Liberman, 2001) identify elements on various levels as arcs connecting two points on a time scale shared by all levels. Relations between elements are thus also represented implicitly. The model can also express a 9A means to express distance in terms of markables is not yet available, cf. Section 5. binary association relation. The associated Annotation Graph query language (Bird et al., 2000) is very explicit, which makes it powerful but at the same time possibly too demanding for naive users. The NITE XML toolkit (Carletta et al., 2003) defines a data model that is close to our model, although it allows t</context>
</contexts>
<marker>Bird, Liberman, 2001</marker>
<rawString>Bird, Steven &amp; Mark Liberman (2001). A formal framework for linguistic annotation. Speech Communication, 33:23–60.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jean Carletta</author>
<author>Stefan Evert</author>
<author>Ulrich Heid</author>
<author>Jonathan Kilgour</author>
<author>J Robertson</author>
<author>Holger Voormann</author>
</authors>
<title>The NITE XML toolkit: flexible annotation for multi-modal language data.</title>
<date>2003</date>
<journal>Behavior Research Methods, Instruments, and Computers,</journal>
<pages>35--353</pages>
<contexts>
<context position="14831" citStr="Carletta et al., 2003" startWordPosition="2122" endWordPosition="2125">pointer) which can be queried using a =&gt; operator. Annotation Graphs (Bird &amp; Liberman, 2001) identify elements on various levels as arcs connecting two points on a time scale shared by all levels. Relations between elements are thus also represented implicitly. The model can also express a 9A means to express distance in terms of markables is not yet available, cf. Section 5. binary association relation. The associated Annotation Graph query language (Bird et al., 2000) is very explicit, which makes it powerful but at the same time possibly too demanding for naive users. The NITE XML toolkit (Carletta et al., 2003) defines a data model that is close to our model, although it allows to express hierarchical relations explicitly. The model supports a labelled pointer relation which can express one-to-many associations. The associated query language NXT Search (Heid et al., 2004) is a powerful declarative language for querying diverse relations (incl. pointers), supporting quantification and constructs like forall and exists. 5 Future Work We work on support for queries like ’pairs of referring expressions that are a certain number of referring expressions apart’. We also want to include wild cards and prox</context>
</contexts>
<marker>Carletta, Evert, Heid, Kilgour, Robertson, Voormann, 2003</marker>
<rawString>Carletta, Jean, Stefan Evert, Ulrich Heid, Jonathan Kilgour, J. Robertson &amp; Holger Voormann (2003). The NITE XML toolkit: flexible annotation for multi-modal language data. Behavior Research Methods, Instruments, and Computers, 35:353–363.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steve Cassidy</author>
<author>Jonathan Harrington</author>
</authors>
<date>2001</date>
<booktitle>Multi-level annotation in the EMU speech database management system. Speech Communication,</booktitle>
<pages>33--61</pages>
<contexts>
<context position="13778" citStr="Cassidy &amp; Harrington, 2001" startWordPosition="1945" endWordPosition="1948">of utterances (incl. the referring expressions embedded into them) that are more than 30 tokens9 apart, and assigns the resulting 4-tuples to the variable $distant utts. (/utterances dom /ref_exp) before:31- (/utterances dom /ref_exp) -&gt; $distant_utts The next query accesses the second and last column in the temporary result (by means of the zero-based column index) and retrieves those pairs of anaphors and their direct antecedents that occur in utterances that are more than 30 tokens apart: $distant_utts.1 nextpeer:coref_class $distant_utts.3 4 Related Work In the EMU speech database system (Cassidy &amp; Harrington, 2001) the hierarchical relation between levels has to be made explicit. Sequential and hierarchical relations can be queried like with simplified MMAXQL, with the difference that e.g. for sequential queries, the elements involved must come from the same level. Also, the result of a hierarchical query always only contains either the parent or child element. The EMU data model supports an association relation (similar to our markable pointer) which can be queried using a =&gt; operator. Annotation Graphs (Bird &amp; Liberman, 2001) identify elements on various levels as arcs connecting two points on a time </context>
</contexts>
<marker>Cassidy, Harrington, 2001</marker>
<rawString>Cassidy, Steve &amp; Jonathan Harrington (2001). Multi-level annotation in the EMU speech database management system. Speech Communication, 33:61–78.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ulrich Heid</author>
<author>Holger Voormann</author>
<author>Jan-Torsten Milde</author>
<author>Ulrike Gut</author>
</authors>
<title>Katrin Erk &amp; Sebastian Pado</title>
<date>2004</date>
<booktitle>In Proceedings of the 4th International Conference on Language Resources and Evaluation,</booktitle>
<pages>1455--1458</pages>
<location>Lisbon,</location>
<contexts>
<context position="11118" citStr="Heid et al. (2004)" startWordPosition="1540" endWordPosition="1543">ty returns all markables from the ref exp level that are either possessive determiners or pronouns and that are part in some coreference set.6 3.2 Relation Operators The whole point of querying corpora with multilevel annotation is to relate markables from different levels to each other. The reference system with respect to which the relation between different markables is established is the sequence of basedata elements, which is the same for all markables on all levels. Since this bears some resemblance to different events occurring in several temporal relations to each other, we (like also Heid et al. (2004), among others) adopt this as a metaphor for expressing the sequential and hierarchical relations between markables, and we use a set of relation operators that is inspired by (Allen, 1991). This set includes (among others) the operators before, meets (default), starts, during/in, contains/dom, equals, ends, and some inverse relations. The following examples give an idea of how individual query tokens can be combined by means of relation operators to form complex queries. The example uses the ICSI meeting corpus of spoken multiparty dialogue.7 This corpus contains, among others, a segment leve</context>
</contexts>
<marker>Heid, Voormann, Milde, Gut, 2004</marker>
<rawString>Heid, Ulrich, Holger Voormann, Jan-Torsten Milde, Ulrike Gut, Katrin Erk &amp; Sebastian Pado (2004). Querying both timealigned and hierarchical corpora with NXT search. In Proceedings of the 4th International Conference on Language Resources and Evaluation, Lisbon, Portugal, 26-28 May, 2004, pp. 1455–1458.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christoph M¨uller</author>
<author>Michael Strube</author>
</authors>
<title>Multi-level annotation in MMAX.</title>
<date>2003</date>
<booktitle>In Proceedings of the 4th SIGdial Workshop on Discourse and Dialogue,</booktitle>
<pages>198--207</pages>
<location>Sapporo,</location>
<marker>M¨uller, Strube, 2003</marker>
<rawString>M¨uller, Christoph &amp; Michael Strube (2003). Multi-level annotation in MMAX. In Proceedings of the 4th SIGdial Workshop on Discourse and Dialogue, Sapporo, Japan, 4-5 July 2003, pp. 198–207.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>