<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003530">
<title confidence="0.9995305">
Is It the Right Answer?
Exploiting Web Redundancy for Answer Validation
</title>
<author confidence="0.997055">
Bernardo Magnini, Matteo Negri, Roberto Prevete and Hristo Tanev
</author>
<affiliation confidence="0.847242">
ITC-Irst, Centro per la Ricerca Scientifica e Tecnologica
</affiliation>
<email confidence="0.951515">
[magnini,negri,prevete,tanev]@itc.it
</email>
<sectionHeader confidence="0.994245" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999855705882353">
Answer Validation is an emerging topic
in Question Answering, where open do-
main systems are often required to rank
huge amounts of candidate answers. We
present a novel approach to answer valida-
tion based on the intuition that the amount
of implicit knowledge which connects an
answer to a question can be quantitatively
estimated by exploiting the redundancy of
Web information. Experiments carried out
on the TREC-2001 judged-answer collec-
tion show that the approach achieves a
high level of performance (i.e. 81% suc-
cess rate). The simplicity and the effi-
ciency of this approach make it suitable to
be used as a module in Question Answer-
ing systems.
</bodyText>
<sectionHeader confidence="0.999132" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999957723404255">
Open domain question-answering (QA) systems
search for answers to a natural language question
either on the Web or in a local document collec-
tion. Different techniques, varying from surface pat-
terns (Subbotin and Subbotin, 2001) to deep seman-
tic analysis (Zajac, 2001), are used to extract the text
fragments containing candidate answers. Several
systems apply answer validation techniques with the
goal of filtering out improper candidates by check-
ing how adequate a candidate answer is with re-
spect to a given question. These approaches rely
on discovering semantic relations between the ques-
tion and the answer. As an example, (Harabagiu
and Maiorano, 1999) describes answer validation as
an abductive inference process, where an answer is
valid with respect to a question if an explanation for
it, based on background knowledge, can be found.
Although theoretically well motivated, the use of se-
mantic techniques on open domain tasks is quite ex-
pensive both in terms of the involved linguistic re-
sources and in terms of computational complexity,
thus motivating a research on alternative solutions
to the problem.
This paper presents a novel approach to answer
validation based on the intuition that the amount of
implicit knowledge which connects an answer to a
question can be quantitatively estimated by exploit-
ing the redundancy of Web information. The hy-
pothesis is that the number of documents that can
be retrieved from the Web in which the question and
the answer co-occur can be considered a significant
clue of the validity of the answer. Documents are
searched in the Web by means of validation pat-
terns, which are derived from a linguistic process-
ing of the question and the answer. In order to test
this idea a system for automatic answer validation
has been implemented and a number of experiments
have been carried out on questions and answers pro-
vided by the TREC-2001 participants. The advan-
tages of this approach are its simplicity on the one
hand and its efficiency on the other.
Automatic techniques for answer validation are
of great interest for the development of open do-
main QA systems. The availability of a completely
automatic evaluation procedure makes it feasible
QA systems based on generate and test approaches.
In this way, until a given answer is automatically
</bodyText>
<note confidence="0.722657">
Proceedings of the 40th Annual Meeting of the Association for
</note>
<page confidence="0.287861">
Computational Linguistics (ACL), Philadelphia, July 2002, pp. 425-432.
</page>
<bodyText confidence="0.9988485">
proved to be correct for a question, the system will
carry out different refinements of its searching crite-
ria checking the relevance of new candidate answers.
In addition, given that most of the QA systems rely
on complex architectures and the evaluation of their
performances requires a huge amount of work, the
automatic assessment of the relevance of an answer
with respect to a given question will speed up both
algorithm refinement and testing.
The paper is organized as follows. Section 2
presents the main features of the approach. Section 3
describes how validation patterns are extracted from
a question-answer pair by means of specific question
answering techniques. Section 4 explains the basic
algorithm for estimating the answer validity score.
Section 5 gives the results of a number of experi-
ments and discusses them. Finally, Section 6 puts
our approach in the context of related works.
</bodyText>
<sectionHeader confidence="0.976963" genericHeader="method">
2 Overall Methodology
</sectionHeader>
<bodyText confidence="0.991328326086957">
Given a question and a candidate answer the an-
swer validation task is defined as the capability to as-
sess the relevance of with respect to . We assume
open domain questions and that both answers and
questions are texts composed of few tokens (usually
less than 100). This is compatible with the TREC-
2001 data, that will be used as examples throughout
this paper. We also assume the availability of the
Web, considered to be the largest open domain text
corpus containing information about almost all the
different areas of the human knowledge.
The intuition underlying our approach to an-
swer validation is that, given a question-answer pair
([ , ]), it is possible to formulate a set of valida-
tion statements whose truthfulness is equivalent to
the degree of relevance of with respect to . For
instance, given the question “What is the capital of
the USA?”, the problem of validating the answer
“Washington” is equivalent to estimating the truth-
fulness of the validation statement “The capital of
the USA is Washington”. Therefore, the answer
validation task could be reformulated as a problem
of statement reliability. There are two issues to be
addressed in order to make this intuition effective.
First, the idea of a validation statement is still insuf-
ficient to catch the richness of implicit knowledge
that may connect an answer to a question: we will
attack this problem defining the more flexible idea
of a validation pattern. Second, we have to design
an effective and efficient way to check the reliability
of a validation pattern: our solution relies on a pro-
cedure based on a statistical count of Web searches.
Answers may occur in text passages with low
similarity with respect to the question. Passages
telling facts may use different syntactic construc-
tions, sometimes are spread in more than one sen-
tence, may reflect opinions and personal attitudes,
and often use ellipsis and anaphora. For instance, if
the validation statement is “The capital of USA is
Washington”, we have Web documents containing
passages like those reported in Table 1, which can
not be found with a simple search of the statement,
but that nevertheless contain a significant amount of
knowledge about the relations between the question
and the answer. We will refer to these text fragments
as validation fragments.
</bodyText>
<listItem confidence="0.9493514">
1. Capital Region USA: Fly-Drive Holidays in
and Around Washington D.C.
2. the Insider’s Guide to the Capital Area Music
Scene (Washington D.C., USA).
3. The Capital Tangueros (Washington, DC
Area, USA)
4. I live in the Nation’s Capital, Washington
Metropolitan Area (USA).
5. in 1790 Capital (also USA’s capital): Wash-
ington D.C. Area: 179 square km
</listItem>
<tableCaption confidence="0.997272">
Table 1: Web search for validation fragments
</tableCaption>
<bodyText confidence="0.993915852941176">
A common feature in the above examples is the
co-occurrence of a certain subset of words (i.e.
“capital”,“USA” and “Washington”). We will make
use of validation patterns that cover a larger portion
of text fragments, including those lexically similar
to the question and the answer (e.g. fragments 4 and
5 in Table 1) and also those that are not similar (e.g.
fragment 2 in Table 1). In the case of our example
a set of validation statements can be generalized by
the validation pattern:
[capital text USA text Washington]
where text is a place holder for any portion of
text with a fixed maximal length.
To check the correctness of with respect to
we propose a procedure that measures the number
of occurrences on the Web of a validation pattern
derived from and . A useful feature of such pat-
terns is that when we search for them on the Web
they usually produce many hits, thus making statis-
tical approaches applicable. In contrast, searching
for strict validation statements generally results in a
small number of documents (if any) and makes sta-
tistical methods irrelevant. A number of techniques
used for finding collocations and co-occurrences of
words, such as mutual information, may well be
used to search co-occurrence tendency between the
question and the candidate answer in the Web. If we
verify that such tendency is statistically significant
we may consider the validation pattern as consistent
and therefore we may assume a high level of correla-
tion between the question and the candidate answer.
Starting from the above considerations and given
a question-answer pair , we propose an answer
validation procedure based on the following steps:
</bodyText>
<listItem confidence="0.95458">
1. Compute the set of representative keywords
</listItem>
<bodyText confidence="0.907146">
and both from and from ; this step is
carried out using linguistic techniques, such as
answer type identification (from the question)
and named entities recognition (from the an-
swer);
</bodyText>
<listItem confidence="0.8710406">
2. From the extracted keywords compute the vali-
dation pattern for the pair [ ];
3. Submit the patterns to the Web and estimate an
answer validity score considering the number
of retrieved documents.
</listItem>
<sectionHeader confidence="0.931917" genericHeader="method">
3 Extracting Validation Patterns
</sectionHeader>
<bodyText confidence="0.999910933333334">
In our approach a validation pattern consists of two
components: a question sub-pattern (Qsp) and an
answer sub-pattern (Asp).
Building the Qsp. A Qsp is derived from the input
question cutting off non-content words with a stop-
words filter. The remaining words are expanded
with both synonyms and morphological forms in
order to maximize the recall of retrieved docu-
ments. Synonyms are automatically extracted from
the most frequent sense of the word in WordNet
(Fellbaum, 1998), which considerably reduces the
risk of adding disturbing elements. As for morphol-
ogy, verbs are expanded with all their tense forms
(i.e. present, present continuous, past tense and past
participle). Synonyms and morphological forms are
added to the Qsp and composed in an OR clause.
The following example illustrates how the Qsp
is constructed. Given the TREC-2001 question
“When did Elvis Presley die?”, the stop-words filter
removes “When” and “did” from the input. Then
synonyms of the first sense of “die” (i.e. “decease”,
“perish”, etc.) are extracted from WordNet. Finally,
morphological forms for all the corresponding verb
tenses are added to the Qsp. The resultant Qsp will
be the following:
[Elvis text Presley text (die OR died OR
dying OR perish OR ...)]
Building the Asp. An Asp is constructed in two
steps. First, the answer type of the question is iden-
tified considering both morpho-syntactic (a part of
speech tagger is used to process the question) and
semantic features (by means of semantic predicates
defined on the WordNet taxonomy; see (Magnini et
al., 2001) for details). Possible answer types are:
DATE, MEASURE, PERSON, LOCATION, ORGANI-
ZATION, DEFINITION and GENERIC. DEFINITION
is the answer type peculiar to questions like “What
is an atom?” which represent a considerable part
(around 25%) of the TREC-2001 corpus. The an-
swer type GENERIC is used for non definition ques-
tions asking for entities that can not be classified as
named entities (e.g. the questions: “Material called
linen is made from what plant?” or “What mineral
helps prevent osteoporosis?”)
In the second step, a rule-based named entities
recognition module identifies in the answer string
all the named entities matching the answer type cat-
egory. If the category corresponds to a named en-
tity, an Asp for each selected named entity is cre-
ated. If the answer type category is either DEFINI-
TION or GENERIC, the entire answer string except
the stop-words is considered. In addition, in order
to maximize the recall of retrieved documents, the
Asp is expanded with verb tenses. The following
example shows how the Asp is created. Given the
TREC question “When did Elvis Presley die?” and
the candidate answer “though died in 1977 of course
some fans maintain”, since the answer type category
is DATE the named entities recognition module will
select [1977] as an answer sub-pattern.
</bodyText>
<sectionHeader confidence="0.976431" genericHeader="method">
4 Estimating Answer Validity
</sectionHeader>
<bodyText confidence="0.9998295">
The answer validation algorithm queries the Web
with the patterns created from the question and an-
swer and after that estimates the consistency of the
patterns.
</bodyText>
<subsectionHeader confidence="0.997205">
4.1 Querying the Web
</subsectionHeader>
<bodyText confidence="0.999169694444444">
We use a Web-mining algorithm that considers the
number of pages retrieved by the search engine. In
contrast, qualitative approaches to Web mining (e.g.
(Brill et al., 2001)) analyze the document content,
as a result considering only a relatively small num-
ber of pages. For information retrieval we used the
AltaVista search engine. Its advanced syntax allows
the use of operators that implement the idea of vali-
dation patterns introduced in Section 2. Queries are
composed using NEAR, OR and AND boolean opera-
tors. The NEAR operator searches pages where two
words appear in a distance of no more than 10 to-
kens: it is used to put together the question and the
answer sub-patterns in a single validation pattern.
The OR operator introduces variations in the word
order and verb forms. Finally, the AND operator is
used as an alternative to NEAR, allowing more dis-
tance among pattern elements.
If the question sub-pattern does not return
any document or returns less than a certain thresh-
old (experimentally set to 7) the question pattern
is relaxed by cutting one word; in this way a new
query is formulated and submitted to the search en-
gine. This is repeated until no more words can be
cut or the returned number of documents becomes
higher than the threshold. Pattern relaxation is per-
formed using word-ignoring rules in a specified or-
der. Such rules, for instance, ignore the focus of the
question, because it is unlikely that it occurs in a
validation fragment; ignore adverbs and adjectives,
because are less significant; ignore nouns belonging
to the WordNet classes “abstraction”, “psychologi-
cal feature” or “group”, because usually they specify
finer details and human attitudes. Names, numbers
and measures are preferred over all the lower-case
words and are cut last.
</bodyText>
<subsectionHeader confidence="0.997874">
4.2 Estimating pattern consistency
</subsectionHeader>
<bodyText confidence="0.992227769230769">
The Web-mining module submits three searches to
the search engine: the sub-patterns [Qsp] and [Asp]
and the validation pattern [QAp], this last built as
the composition [Qsp NEAR Asp]. The search en-
gine returns respectively: ,
and NEAR
of a pattern in the Web is calculated by:
where is the number of pages in the Web
where appears and is the maximum
number of pages that can be returned by the search
engine. We set this constant experimentally. How-
ever in two of the formulas we use (i.e. Point-
wise Mutual Information and Corrected Conditional
</bodyText>
<equation confidence="0.985102">
Probability) may be ignored.
</equation>
<bodyText confidence="0.987810823529412">
The joint probability P(Qsp,Asp) is calculated by
means of the validation pattern probability:
We have tested three alternative measures to es-
timate the degree of relevance of Web searches:
Pointwise Mutual Information, Maximal Likelihood
Ratio and Corrected Conditional Probability, a vari-
ant of Conditional Probability which considers the
asymmetry of the question-answer relation. Each
measure provides an answer validity score: high val-
ues are interpreted as strong evidence that the vali-
dation pattern is consistent. This is a clue to the fact
that the Web pages where this pattern appears con-
tain validation fragments, which imply answer accu-
racy.
Pointwise Mutual Information (PMI) (Manning
and Sch¨utze, 1999) has been widely used to find co-
occurrence in large corpora.
</bodyText>
<figure confidence="0.73585725">
Qsp,Asp
Qsp,Asp
✕Asp
Qsp
</figure>
<figureCaption confidence="0.4209724">
PMI(Qsp,Asp) is used as a clue to the internal
coherence of the question-answer validation pattern
QAp. Substituting the probabilities in the PMI for-
mula with the previously introduced Web statistics,
we obtain:
</figureCaption>
<figure confidence="0.5058715">
. The probability
4.3 An example
Qsp Asp
Qsp ✕Asp
</figure>
<bodyText confidence="0.957781722222222">
Maximal Likelihood Ratio (MLHR) is also used
for word co-occurrence mining (Dunning, 1993).
We decided to check MLHR for answer validation
because it is supposed to outperform PMI in case
of sparse data, a situation that may happen in case
of questions with complex patterns that return small
number of hits.
Corrected Conditional Probability (CCP) in
contrast with PMI and MLHR, CCP is not
symmetric (e.g. generally
). This is based on the fact that
we search for the occurrence of the answer pattern
Asp only in the cases when Qsp is present. The sta-
tistical evidence for this can be measured through
, however this value is corrected with
in the denominator, to avoid the cases
when high-frequency words and patterns are taken
as relevant answers.
For CCP we obtain:
Consider an example taken from the question an-
swer corpus of the main task of TREC-2001:
“Which river in US is known as Big Muddy?”. The
question keywords are: “river”, “US”, “known”,
“Big”, “Muddy”. The search of the pattern [river
NEAR US NEAR (known OR know OR...) NEAR Big
NEAR Muddy] returns 0 pages, so the algorithm re-
laxes the pattern by cutting the initial noun “river”,
according to the heuristic for discarding a noun if it
is the first keyword of the question. The second pat-
tern [US NEAR (known OR know OR...) NEAR Big
NEAR Muddy] also returns 0 pages, so we apply the
heuristic for ignoring verbs like “know”, “call” and
abstract nouns like “name”. The third pattern [US
NEAR Big NEAR Muddy] returns 28 pages, which is
over the experimentally set threshold of seven pages.
One of the 50 byte candidate answers from the
TREC-2001 answer collection is “recover Missis-
sippi River”. Taking into account the answer type
LOCATION, the algorithm considers only the named
entity: “Mississippi River”. To calculate answer
validity score (in this example PMI) for [Missis-
sippi River], the procedure constructs the validation
pattern: [US NEAR Big NEAR Muddy NEAR Mis-
sissippi River] with the answer sub-pattern [Missis-
sippi River]. These two patterns are passed to the
search engine, and the returned numbers of pages
are substituted in the mutual information expression
at the places of and
respectively; the previously obtained number (i.e.
28) is substituted at the place of . In this
way an answer validity score of 55.5 is calculated.
It turns out that this value is the maximal validity
score for all the answers of this question. Other cor-
rect answers from the TREC-2001 collection con-
tain as name entity “Mississippi”. Their answer va-
lidity score is 11.8, which is greater than 1.2 and
also greater than
. This score (i.e. 11.8) classifies them as
relevant answers. On the other hand, all the wrong
answers has validity score below 1 and as a result
all of them are classified as irrelevant answer candi-
dates.
where
,
,
,
Here is the number of
appearances of Qsp when Asp is not present and
it is calculated as .
Similarly, is the number of Web
pages where Asp does not appear and it is calculated
as .
</bodyText>
<sectionHeader confidence="0.964862" genericHeader="evaluation">
5 Experiments and Discussion
</sectionHeader>
<bodyText confidence="0.999966719298246">
A number of experiments have been carried out in
order to check the validity of the proposed answer
validation technique. As a data set, the 492 ques-
tions of the TREC-2001 database have been used.
For each question, at most three correct answers and
three wrong answers have been randomly selected
from the TREC-2001 participants’ submissions, re-
sulting in a corpus of 2726 question-answer pairs
(some question have less than three positive answers
in the corpus). As said before, AltaVista was used as
search engine.
A baseline for the answer validation experiment
was defined by considering how often an answer oc-
curs in the top 10 documents among those (1000
for each question) provided by NIST to TREC-2001
participants. An answer was judged correct for a
question if it appears at least one time in the first
10 documents retrieved for that question, otherwise
it was judged not correct. Baseline results are re-
ported in Table 2.
We carried out several experiments in order to
check a number of working hypotheses. Three in-
dependent factors were considered:
Estimation method. We have implemented three
measures (reported in Section 4.2) to estimate an an-
swer validity score: PMI, MLHR and CCP.
Threshold. We wanted to estimate the role of two
different kinds of thresholds for the assessment of
answer validation. In the case of an absolute thresh-
old, if the answer validity score for a candidate an-
swer is below the threshold, the answer is considered
wrong, otherwise it is accepted as relevant. In a sec-
ond type of experiment, for every question and its
corresponding answers the program chooses the an-
swer with the highest validity score and calculates a
relative threshold on that basis (i.e.
). However the relative
threshold should be larger than a certain minimum
value.
Question type. We wanted to check performance
variation based on different types of TREC-2001
questions. In particular, we have separated defini-
tion and generic questions from true named entities
questions.
Tables 2 and 3 report the results of the automatic
answer validation experiments obtained respectively
on all the TREC-2001 questions and on the subset
of definition and generic questions. For each esti-
mation method we report precision, recall and suc-
cess rate. Success rate best represents the perfor-
mance of the system, being the percent of [ ] pairs
where the result given by the system is the same as
the TREC judges’ opinion. Precision is the percent
of pairs estimated by the algorithm as rele-
vant, for which the opinion of TREC judges was the
same. Recall shows the percent of the relevant an-
swers which the system also evaluates as relevant.
</bodyText>
<table confidence="0.99921">
P (%) R (%) SR (%)
Baseline 50.86 4.49 52.99
CCP - rel. 77.85 82.60 81.25
CCP - abs. 74.12 81.31 78.42
PMI - rel. 77.40 78.27 79.56
PMI - abs. 70.95 87.17 77.79
MLHR - rel. 81.23 72.40 79.60
MLHR - abs. 72.80 80.80 77.40
</table>
<tableCaption confidence="0.992513">
Table 2: Results on all 492 TREC-2001 questions
</tableCaption>
<table confidence="0.999976285714286">
P (%) R (%) SR (%)
CCP - rel. 85.12 84.27 86.38
CCP - abs. 83.07 78.81 83.35
PMI - rel. 83.78 82.12 84.90
PMI - abs. 79.56 84.44 83.35
MLHR - rel. 90.65 72.75 84.44
MLHR - abs. 87.20 67.20 82.10
</table>
<tableCaption confidence="0.999953">
Table 3: Results on 249 named entity questions
</tableCaption>
<bodyText confidence="0.9999745">
The best results on the 492 questions corpus (CCP
measure with relative threshold) show a success rate
of 81.25%, i.e. in 81.25% of the pairs the system
evaluation corresponds to the human evaluation, and
confirms the initial working hypotheses. This is 28%
above the baseline success rate. Precision and re-
call are respectively 20-30% and 68-87% above the
baseline values. These results demonstrate that the
intuition behind the approach is motivated and that
the algorithm provides a workable solution for an-
swer validation.
The experiments show that the average difference
between the success rates obtained for the named
entity questions (Table 3) and the full TREC-2001
question set (Table 2) is 5.1%. This means that our
approach performs better when the answer entities
are well specified.
Another conclusion is that the relative threshold
demonstrates superiority over the absolute threshold
in both test sets (average 2.3%). However if the per-
cent of the right answers in the answer set is lower,
then the efficiency of this approach may decrease.
The best results in both question sets are ob-
tained by applying CCP. Such non-symmetric for-
mulas might turn out to be more applicable in gen-
eral. As conditional corrected (CCP) is not a clas-
sical co-occurrence measure like PMI and MLHR,
we may consider its high performance as proof
for the difference between our task and classic co-
occurrence mining. Another indication for this is the
fact that MLHR and PMI performances are compa-
rable, however in the case of classic co-occurrence
search, MLHR should show much better success
rate. It seems that we have to develop other mea-
sures specific for the question-answer co-occurrence
mining.
</bodyText>
<sectionHeader confidence="0.999973" genericHeader="related work">
6 Related Work
</sectionHeader>
<bodyText confidence="0.999974190476191">
Although there is some recent work addressing the
evaluation of QA systems, it seems that the idea of
using a fully automatic approach to answer valida-
tion has still not been explored. For instance, the
approach presented in (Breck et al., 2000) is semi-
automatic. The proposed methodology for answer
validation relies on computing the overlapping be-
tween the system response to a question and the
stemmed content words of an answer key. All the
answer keys corresponding to the 198 TREC-8 ques-
tions have been manually constructed by human an-
notators using the TREC corpus and external re-
sources like the Web.
The idea of using the Web as a corpus is an
emerging topic of interest among the computational
linguists community. The TREC-2001 QA track
demonstrated that Web redundancy can be exploited
at different levels in the process of finding answers
to natural language questions. Several studies (e.g.
(Clarke et al., 2001) (Brill et al., 2001)) suggest that
the application of Web search can improve the preci-
sion of a QA system by 25-30%. A common feature
of these approaches is the use of the Web to intro-
duce data redundancy for a more reliable answer ex-
traction from local text collections. (Radev et al.,
2001) suggests a probabilistic algorithm that learns
the best query paraphrase of a question searching the
Web. Other approaches suggest training a question-
answering system on the Web (Mann, 2001).
The Web-mining algorithm presented in this pa-
per is similar to the PMI-IR (Pointwise Mutual
Information - Information Retrieval) described in
(Turney, 2001). Turney uses PMI and Web retrieval
to decide which word in a list of candidates is the
best synonym with respect to a target word. How-
ever, the answer validity task poses different pe-
culiarities. We search how the occurrence of the
question words influence the appearance of answer
words. Therefore, we introduce additional linguis-
tic techniques for pattern and query formulation,
such as keyword extraction, answer type extraction,
named entities recognition and pattern relaxation.
</bodyText>
<sectionHeader confidence="0.987933" genericHeader="conclusions">
7 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.999995666666667">
We have presented a novel approach to answer val-
idation based on the intuition that the amount of
implicit knowledge which connects an answer to a
question can be quantitatively estimated by exploit-
ing the redundancy of Web information. Results ob-
tained on the TREC-2001 QA corpus correlate well
with the human assessment of answers’ correctness
and confirm that a Web-based algorithm provides a
workable solution for answer validation.
Several activities are planned in the near future.
First, the approach we presented is currently
based on fixed validation patterns that combine sin-
gle words extracted both from the question and from
the answer. These word-level patterns provide a
broad coverage (i.e. many documents are typically
retrieved) in spite of a low precision (i.e also weak
correlations among the keyword are captured). To
increase the precision we want to experiment other
types of patterns, which combine words into larger
units (e.g. phrases or whole sentences). We believe
that the answer validation process can be improved
both considering pattern variations (from word-level
to phrase and sentence-level), and the trade-off be-
tween the precision of the search pattern and the
number of retrieved documents. Preliminary experi-
ments confirm the validity of this hypothesis.
Then, a generate and test module based on the val-
idation algorithm presented in this paper will be in-
tegrated in the architecture of our QA system under
development. In order to exploit the efficiency and
the reliability of the algorithm, such system will be
designed trying to maximize the recall of retrieved
candidate answers. Instead of performing a deep lin-
guistic analysis of these passages, the system will
delegate to the evaluation component the selection
of the right answer.
</bodyText>
<sectionHeader confidence="0.999442" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999892285714286">
E.J. Breck, J.D. Burger, L. Ferro, L. Hirschman,
D. House, M. Light, and I. Mani. 2000. How to Eval-
uate Your Question Answering System Every Day and
Still Get Real Work Done. In Proceedings of LREC-
2000, pages 1495–1500, Athens, Greece, 31 May - 2
June.
E. Brill, J. Lin, M. Banko, S. Dumais, and A. Ng.
2001. Data-Intensive Question Answering. In TREC-
10 Notebook Papers, Gaithesburg, MD.
C. Clarke, G. Cormack, T. Lynam, C. Li, and
G. McLearn. 2001. Web Reinforced Question An-
swering (MultiText Experiments for TREC 2001). In
TREC-10 Notebook Papers, Gaithesburg, MD.
T. Dunning. 1993. Accurate Methods for the Statistics of
Surprise and Coincidence. Computational Linguistics,
19(1):61–74.
C. Fellbaum. 1998. WordNet, An Electronic Lexical
Database. The MIT Press.
S. Harabagiu and S. Maiorano. 1999. Finding Answers
in Large Collections of Texts: Paragraph Indexing +
Abductive Inference. In Proceedings of the AAAI Fall
Symposium on Question Answering Systems, pages
63–71, November.
B. Magnini, M. Negri, R. Prevete, and H. Tanev. 2001.
Multilingual Question/Answering: the DIOGENE
System. In TREC-10 Notebook Papers, Gaithesburg,
MD.
G. S. Mann. 2001. A Statistical Method for Short
Answer Extraction. In Proceedings of the ACL-
2001 Workshop on Open-Domain Question Answer-
ing, Toulouse, France, July.
C.D. Manning and H. Sch¨utze. 1999. Foundations of
Statistical Natural Language Processing. The MIT
PRESS, Cambridge,Massachusets.
H. R. Radev, H. Qi, Z. Zheng, S. Blair-Goldensohn,
Z. Zhang, W. Fan, and J. Prager. 2001. Mining the
Web for Answers to Natural Language Questions. In
Proceedings of 2001 ACM CIKM, Atlanta, Georgia,
USA, November.
M. Subbotin and S. Subbotin. 2001. Patterns of Potential
Answer Expressions as Clues to the Right Answers. In
TREC-10 Notebook Papers, Gaithesburg, MD.
P.D. Turney. 2001. Mining the Web for Synonyms:
PMI-IR versus LSA on TOEFL. In Proceedings of
ECML2001, pages 491–502, Freiburg, Germany.
R. Zajac. 2001. Towards Ontological Question Answer-
ing. In Proceedings of the ACL-2001 Workshop on
Open-Domain Question Answering, Toulouse, France,
July.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.359155">
<title confidence="0.992957">Is It the Right Answer? Exploiting Web Redundancy for Answer Validation</title>
<author confidence="0.796749">Matteo Negri Magnini</author>
<author confidence="0.796749">Roberto Prevete Tanev</author>
<affiliation confidence="0.381686">ITC-Irst, Centro per la Ricerca Scientifica e Tecnologica</affiliation>
<email confidence="0.986264">[magnini,negri,prevete,tanev]@itc.it</email>
<abstract confidence="0.998606111111111">Answer Validation is an emerging topic in Question Answering, where open domain systems are often required to rank huge amounts of candidate answers. We present a novel approach to answer validation based on the intuition that the amount of implicit knowledge which connects an answer to a question can be quantitatively estimated by exploiting the redundancy of Web information. Experiments carried out on the TREC-2001 judged-answer collection show that the approach achieves a level of performance success rate). The simplicity and the efficiency of this approach make it suitable to be used as a module in Question Answering systems.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>E J Breck</author>
<author>J D Burger</author>
<author>L Ferro</author>
<author>L Hirschman</author>
<author>D House</author>
<author>M Light</author>
<author>I Mani</author>
</authors>
<title>How to Evaluate Your Question Answering System Every Day and Still Get Real Work Done.</title>
<date>2000</date>
<booktitle>In Proceedings of LREC2000,</booktitle>
<pages>1495--1500</pages>
<location>Athens, Greece, 31</location>
<contexts>
<context position="23730" citStr="Breck et al., 2000" startWordPosition="3920" endWordPosition="3923">oof for the difference between our task and classic cooccurrence mining. Another indication for this is the fact that MLHR and PMI performances are comparable, however in the case of classic co-occurrence search, MLHR should show much better success rate. It seems that we have to develop other measures specific for the question-answer co-occurrence mining. 6 Related Work Although there is some recent work addressing the evaluation of QA systems, it seems that the idea of using a fully automatic approach to answer validation has still not been explored. For instance, the approach presented in (Breck et al., 2000) is semiautomatic. The proposed methodology for answer validation relies on computing the overlapping between the system response to a question and the stemmed content words of an answer key. All the answer keys corresponding to the 198 TREC-8 questions have been manually constructed by human annotators using the TREC corpus and external resources like the Web. The idea of using the Web as a corpus is an emerging topic of interest among the computational linguists community. The TREC-2001 QA track demonstrated that Web redundancy can be exploited at different levels in the process of finding a</context>
</contexts>
<marker>Breck, Burger, Ferro, Hirschman, House, Light, Mani, 2000</marker>
<rawString>E.J. Breck, J.D. Burger, L. Ferro, L. Hirschman, D. House, M. Light, and I. Mani. 2000. How to Evaluate Your Question Answering System Every Day and Still Get Real Work Done. In Proceedings of LREC2000, pages 1495–1500, Athens, Greece, 31 May - 2 June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Brill</author>
<author>J Lin</author>
<author>M Banko</author>
<author>S Dumais</author>
<author>A Ng</author>
</authors>
<title>Data-Intensive Question Answering.</title>
<date>2001</date>
<booktitle>In TREC10 Notebook Papers,</booktitle>
<location>Gaithesburg, MD.</location>
<contexts>
<context position="12328" citStr="Brill et al., 2001" startWordPosition="2001" endWordPosition="2004">stion “When did Elvis Presley die?” and the candidate answer “though died in 1977 of course some fans maintain”, since the answer type category is DATE the named entities recognition module will select [1977] as an answer sub-pattern. 4 Estimating Answer Validity The answer validation algorithm queries the Web with the patterns created from the question and answer and after that estimates the consistency of the patterns. 4.1 Querying the Web We use a Web-mining algorithm that considers the number of pages retrieved by the search engine. In contrast, qualitative approaches to Web mining (e.g. (Brill et al., 2001)) analyze the document content, as a result considering only a relatively small number of pages. For information retrieval we used the AltaVista search engine. Its advanced syntax allows the use of operators that implement the idea of validation patterns introduced in Section 2. Queries are composed using NEAR, OR and AND boolean operators. The NEAR operator searches pages where two words appear in a distance of no more than 10 tokens: it is used to put together the question and the answer sub-patterns in a single validation pattern. The OR operator introduces variations in the word order and </context>
<context position="24432" citStr="Brill et al., 2001" startWordPosition="4036" endWordPosition="4039">ng the overlapping between the system response to a question and the stemmed content words of an answer key. All the answer keys corresponding to the 198 TREC-8 questions have been manually constructed by human annotators using the TREC corpus and external resources like the Web. The idea of using the Web as a corpus is an emerging topic of interest among the computational linguists community. The TREC-2001 QA track demonstrated that Web redundancy can be exploited at different levels in the process of finding answers to natural language questions. Several studies (e.g. (Clarke et al., 2001) (Brill et al., 2001)) suggest that the application of Web search can improve the precision of a QA system by 25-30%. A common feature of these approaches is the use of the Web to introduce data redundancy for a more reliable answer extraction from local text collections. (Radev et al., 2001) suggests a probabilistic algorithm that learns the best query paraphrase of a question searching the Web. Other approaches suggest training a questionanswering system on the Web (Mann, 2001). The Web-mining algorithm presented in this paper is similar to the PMI-IR (Pointwise Mutual Information - Information Retrieval) descri</context>
</contexts>
<marker>Brill, Lin, Banko, Dumais, Ng, 2001</marker>
<rawString>E. Brill, J. Lin, M. Banko, S. Dumais, and A. Ng. 2001. Data-Intensive Question Answering. In TREC10 Notebook Papers, Gaithesburg, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Clarke</author>
<author>G Cormack</author>
<author>T Lynam</author>
<author>C Li</author>
<author>G McLearn</author>
</authors>
<title>Web Reinforced Question Answering (MultiText Experiments for TREC</title>
<date>2001</date>
<booktitle>In TREC-10 Notebook Papers,</booktitle>
<location>Gaithesburg, MD.</location>
<contexts>
<context position="24411" citStr="Clarke et al., 2001" startWordPosition="4032" endWordPosition="4035">tion relies on computing the overlapping between the system response to a question and the stemmed content words of an answer key. All the answer keys corresponding to the 198 TREC-8 questions have been manually constructed by human annotators using the TREC corpus and external resources like the Web. The idea of using the Web as a corpus is an emerging topic of interest among the computational linguists community. The TREC-2001 QA track demonstrated that Web redundancy can be exploited at different levels in the process of finding answers to natural language questions. Several studies (e.g. (Clarke et al., 2001) (Brill et al., 2001)) suggest that the application of Web search can improve the precision of a QA system by 25-30%. A common feature of these approaches is the use of the Web to introduce data redundancy for a more reliable answer extraction from local text collections. (Radev et al., 2001) suggests a probabilistic algorithm that learns the best query paraphrase of a question searching the Web. Other approaches suggest training a questionanswering system on the Web (Mann, 2001). The Web-mining algorithm presented in this paper is similar to the PMI-IR (Pointwise Mutual Information - Informat</context>
</contexts>
<marker>Clarke, Cormack, Lynam, Li, McLearn, 2001</marker>
<rawString>C. Clarke, G. Cormack, T. Lynam, C. Li, and G. McLearn. 2001. Web Reinforced Question Answering (MultiText Experiments for TREC 2001). In TREC-10 Notebook Papers, Gaithesburg, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Dunning</author>
</authors>
<title>Accurate Methods for the Statistics of Surprise and Coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="15699" citStr="Dunning, 1993" startWordPosition="2550" endWordPosition="2551">he fact that the Web pages where this pattern appears contain validation fragments, which imply answer accuracy. Pointwise Mutual Information (PMI) (Manning and Sch¨utze, 1999) has been widely used to find cooccurrence in large corpora. Qsp,Asp Qsp,Asp ✕Asp Qsp PMI(Qsp,Asp) is used as a clue to the internal coherence of the question-answer validation pattern QAp. Substituting the probabilities in the PMI formula with the previously introduced Web statistics, we obtain: . The probability 4.3 An example Qsp Asp Qsp ✕Asp Maximal Likelihood Ratio (MLHR) is also used for word co-occurrence mining (Dunning, 1993). We decided to check MLHR for answer validation because it is supposed to outperform PMI in case of sparse data, a situation that may happen in case of questions with complex patterns that return small number of hits. Corrected Conditional Probability (CCP) in contrast with PMI and MLHR, CCP is not symmetric (e.g. generally ). This is based on the fact that we search for the occurrence of the answer pattern Asp only in the cases when Qsp is present. The statistical evidence for this can be measured through , however this value is corrected with in the denominator, to avoid the cases when high</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>T. Dunning. 1993. Accurate Methods for the Statistics of Surprise and Coincidence. Computational Linguistics, 19(1):61–74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Fellbaum</author>
</authors>
<title>WordNet, An Electronic Lexical Database.</title>
<date>1998</date>
<publisher>The MIT Press.</publisher>
<contexts>
<context position="9566" citStr="Fellbaum, 1998" startWordPosition="1555" endWordPosition="1556">atterns to the Web and estimate an answer validity score considering the number of retrieved documents. 3 Extracting Validation Patterns In our approach a validation pattern consists of two components: a question sub-pattern (Qsp) and an answer sub-pattern (Asp). Building the Qsp. A Qsp is derived from the input question cutting off non-content words with a stopwords filter. The remaining words are expanded with both synonyms and morphological forms in order to maximize the recall of retrieved documents. Synonyms are automatically extracted from the most frequent sense of the word in WordNet (Fellbaum, 1998), which considerably reduces the risk of adding disturbing elements. As for morphology, verbs are expanded with all their tense forms (i.e. present, present continuous, past tense and past participle). Synonyms and morphological forms are added to the Qsp and composed in an OR clause. The following example illustrates how the Qsp is constructed. Given the TREC-2001 question “When did Elvis Presley die?”, the stop-words filter removes “When” and “did” from the input. Then synonyms of the first sense of “die” (i.e. “decease”, “perish”, etc.) are extracted from WordNet. Finally, morphological for</context>
</contexts>
<marker>Fellbaum, 1998</marker>
<rawString>C. Fellbaum. 1998. WordNet, An Electronic Lexical Database. The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Harabagiu</author>
<author>S Maiorano</author>
</authors>
<title>Finding Answers in Large Collections of Texts: Paragraph Indexing + Abductive Inference.</title>
<date>1999</date>
<booktitle>In Proceedings of the AAAI Fall Symposium on Question Answering Systems,</booktitle>
<pages>63--71</pages>
<contexts>
<context position="1569" citStr="Harabagiu and Maiorano, 1999" startWordPosition="239" endWordPosition="242">(QA) systems search for answers to a natural language question either on the Web or in a local document collection. Different techniques, varying from surface patterns (Subbotin and Subbotin, 2001) to deep semantic analysis (Zajac, 2001), are used to extract the text fragments containing candidate answers. Several systems apply answer validation techniques with the goal of filtering out improper candidates by checking how adequate a candidate answer is with respect to a given question. These approaches rely on discovering semantic relations between the question and the answer. As an example, (Harabagiu and Maiorano, 1999) describes answer validation as an abductive inference process, where an answer is valid with respect to a question if an explanation for it, based on background knowledge, can be found. Although theoretically well motivated, the use of semantic techniques on open domain tasks is quite expensive both in terms of the involved linguistic resources and in terms of computational complexity, thus motivating a research on alternative solutions to the problem. This paper presents a novel approach to answer validation based on the intuition that the amount of implicit knowledge which connects an answe</context>
</contexts>
<marker>Harabagiu, Maiorano, 1999</marker>
<rawString>S. Harabagiu and S. Maiorano. 1999. Finding Answers in Large Collections of Texts: Paragraph Indexing + Abductive Inference. In Proceedings of the AAAI Fall Symposium on Question Answering Systems, pages 63–71, November.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Magnini</author>
<author>M Negri</author>
<author>R Prevete</author>
<author>H Tanev</author>
</authors>
<title>Multilingual Question/Answering: the DIOGENE System. In</title>
<date>2001</date>
<booktitle>TREC-10 Notebook Papers,</booktitle>
<location>Gaithesburg, MD.</location>
<contexts>
<context position="10649" citStr="Magnini et al., 2001" startWordPosition="1728" endWordPosition="1731">e input. Then synonyms of the first sense of “die” (i.e. “decease”, “perish”, etc.) are extracted from WordNet. Finally, morphological forms for all the corresponding verb tenses are added to the Qsp. The resultant Qsp will be the following: [Elvis text Presley text (die OR died OR dying OR perish OR ...)] Building the Asp. An Asp is constructed in two steps. First, the answer type of the question is identified considering both morpho-syntactic (a part of speech tagger is used to process the question) and semantic features (by means of semantic predicates defined on the WordNet taxonomy; see (Magnini et al., 2001) for details). Possible answer types are: DATE, MEASURE, PERSON, LOCATION, ORGANIZATION, DEFINITION and GENERIC. DEFINITION is the answer type peculiar to questions like “What is an atom?” which represent a considerable part (around 25%) of the TREC-2001 corpus. The answer type GENERIC is used for non definition questions asking for entities that can not be classified as named entities (e.g. the questions: “Material called linen is made from what plant?” or “What mineral helps prevent osteoporosis?”) In the second step, a rule-based named entities recognition module identifies in the answer st</context>
</contexts>
<marker>Magnini, Negri, Prevete, Tanev, 2001</marker>
<rawString>B. Magnini, M. Negri, R. Prevete, and H. Tanev. 2001. Multilingual Question/Answering: the DIOGENE System. In TREC-10 Notebook Papers, Gaithesburg, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G S Mann</author>
</authors>
<title>A Statistical Method for Short Answer Extraction.</title>
<date>2001</date>
<booktitle>In Proceedings of the ACL2001 Workshop on Open-Domain Question Answering,</booktitle>
<location>Toulouse, France,</location>
<contexts>
<context position="24895" citStr="Mann, 2001" startWordPosition="4117" endWordPosition="4118">t different levels in the process of finding answers to natural language questions. Several studies (e.g. (Clarke et al., 2001) (Brill et al., 2001)) suggest that the application of Web search can improve the precision of a QA system by 25-30%. A common feature of these approaches is the use of the Web to introduce data redundancy for a more reliable answer extraction from local text collections. (Radev et al., 2001) suggests a probabilistic algorithm that learns the best query paraphrase of a question searching the Web. Other approaches suggest training a questionanswering system on the Web (Mann, 2001). The Web-mining algorithm presented in this paper is similar to the PMI-IR (Pointwise Mutual Information - Information Retrieval) described in (Turney, 2001). Turney uses PMI and Web retrieval to decide which word in a list of candidates is the best synonym with respect to a target word. However, the answer validity task poses different peculiarities. We search how the occurrence of the question words influence the appearance of answer words. Therefore, we introduce additional linguistic techniques for pattern and query formulation, such as keyword extraction, answer type extraction, named en</context>
</contexts>
<marker>Mann, 2001</marker>
<rawString>G. S. Mann. 2001. A Statistical Method for Short Answer Extraction. In Proceedings of the ACL2001 Workshop on Open-Domain Question Answering, Toulouse, France, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C D Manning</author>
<author>H Sch¨utze</author>
</authors>
<title>Foundations of Statistical Natural Language Processing.</title>
<date>1999</date>
<publisher>The MIT PRESS, Cambridge,Massachusets.</publisher>
<marker>Manning, Sch¨utze, 1999</marker>
<rawString>C.D. Manning and H. Sch¨utze. 1999. Foundations of Statistical Natural Language Processing. The MIT PRESS, Cambridge,Massachusets.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H R Radev</author>
<author>H Qi</author>
<author>Z Zheng</author>
<author>S Blair-Goldensohn</author>
<author>Z Zhang</author>
<author>W Fan</author>
<author>J Prager</author>
</authors>
<title>Mining the Web for Answers to Natural Language Questions.</title>
<date>2001</date>
<booktitle>In Proceedings of 2001 ACM CIKM,</booktitle>
<location>Atlanta, Georgia, USA,</location>
<contexts>
<context position="24704" citStr="Radev et al., 2001" startWordPosition="4086" endWordPosition="4089">the Web. The idea of using the Web as a corpus is an emerging topic of interest among the computational linguists community. The TREC-2001 QA track demonstrated that Web redundancy can be exploited at different levels in the process of finding answers to natural language questions. Several studies (e.g. (Clarke et al., 2001) (Brill et al., 2001)) suggest that the application of Web search can improve the precision of a QA system by 25-30%. A common feature of these approaches is the use of the Web to introduce data redundancy for a more reliable answer extraction from local text collections. (Radev et al., 2001) suggests a probabilistic algorithm that learns the best query paraphrase of a question searching the Web. Other approaches suggest training a questionanswering system on the Web (Mann, 2001). The Web-mining algorithm presented in this paper is similar to the PMI-IR (Pointwise Mutual Information - Information Retrieval) described in (Turney, 2001). Turney uses PMI and Web retrieval to decide which word in a list of candidates is the best synonym with respect to a target word. However, the answer validity task poses different peculiarities. We search how the occurrence of the question words inf</context>
</contexts>
<marker>Radev, Qi, Zheng, Blair-Goldensohn, Zhang, Fan, Prager, 2001</marker>
<rawString>H. R. Radev, H. Qi, Z. Zheng, S. Blair-Goldensohn, Z. Zhang, W. Fan, and J. Prager. 2001. Mining the Web for Answers to Natural Language Questions. In Proceedings of 2001 ACM CIKM, Atlanta, Georgia, USA, November.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Subbotin</author>
<author>S Subbotin</author>
</authors>
<title>Patterns of Potential Answer Expressions as Clues to the Right Answers.</title>
<date>2001</date>
<booktitle>In TREC-10 Notebook Papers,</booktitle>
<location>Gaithesburg, MD.</location>
<contexts>
<context position="1137" citStr="Subbotin and Subbotin, 2001" startWordPosition="171" endWordPosition="174">nnects an answer to a question can be quantitatively estimated by exploiting the redundancy of Web information. Experiments carried out on the TREC-2001 judged-answer collection show that the approach achieves a high level of performance (i.e. 81% success rate). The simplicity and the efficiency of this approach make it suitable to be used as a module in Question Answering systems. 1 Introduction Open domain question-answering (QA) systems search for answers to a natural language question either on the Web or in a local document collection. Different techniques, varying from surface patterns (Subbotin and Subbotin, 2001) to deep semantic analysis (Zajac, 2001), are used to extract the text fragments containing candidate answers. Several systems apply answer validation techniques with the goal of filtering out improper candidates by checking how adequate a candidate answer is with respect to a given question. These approaches rely on discovering semantic relations between the question and the answer. As an example, (Harabagiu and Maiorano, 1999) describes answer validation as an abductive inference process, where an answer is valid with respect to a question if an explanation for it, based on background knowle</context>
</contexts>
<marker>Subbotin, Subbotin, 2001</marker>
<rawString>M. Subbotin and S. Subbotin. 2001. Patterns of Potential Answer Expressions as Clues to the Right Answers. In TREC-10 Notebook Papers, Gaithesburg, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P D Turney</author>
</authors>
<title>Mining the Web for Synonyms: PMI-IR versus LSA on TOEFL.</title>
<date>2001</date>
<booktitle>In Proceedings of ECML2001,</booktitle>
<pages>491--502</pages>
<location>Freiburg, Germany.</location>
<contexts>
<context position="25053" citStr="Turney, 2001" startWordPosition="4140" endWordPosition="4141">t that the application of Web search can improve the precision of a QA system by 25-30%. A common feature of these approaches is the use of the Web to introduce data redundancy for a more reliable answer extraction from local text collections. (Radev et al., 2001) suggests a probabilistic algorithm that learns the best query paraphrase of a question searching the Web. Other approaches suggest training a questionanswering system on the Web (Mann, 2001). The Web-mining algorithm presented in this paper is similar to the PMI-IR (Pointwise Mutual Information - Information Retrieval) described in (Turney, 2001). Turney uses PMI and Web retrieval to decide which word in a list of candidates is the best synonym with respect to a target word. However, the answer validity task poses different peculiarities. We search how the occurrence of the question words influence the appearance of answer words. Therefore, we introduce additional linguistic techniques for pattern and query formulation, such as keyword extraction, answer type extraction, named entities recognition and pattern relaxation. 7 Conclusion and Future Work We have presented a novel approach to answer validation based on the intuition that th</context>
</contexts>
<marker>Turney, 2001</marker>
<rawString>P.D. Turney. 2001. Mining the Web for Synonyms: PMI-IR versus LSA on TOEFL. In Proceedings of ECML2001, pages 491–502, Freiburg, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Zajac</author>
</authors>
<title>Towards Ontological Question Answering.</title>
<date>2001</date>
<booktitle>In Proceedings of the ACL-2001 Workshop on Open-Domain Question Answering,</booktitle>
<location>Toulouse, France,</location>
<contexts>
<context position="1177" citStr="Zajac, 2001" startWordPosition="180" endWordPosition="181">imated by exploiting the redundancy of Web information. Experiments carried out on the TREC-2001 judged-answer collection show that the approach achieves a high level of performance (i.e. 81% success rate). The simplicity and the efficiency of this approach make it suitable to be used as a module in Question Answering systems. 1 Introduction Open domain question-answering (QA) systems search for answers to a natural language question either on the Web or in a local document collection. Different techniques, varying from surface patterns (Subbotin and Subbotin, 2001) to deep semantic analysis (Zajac, 2001), are used to extract the text fragments containing candidate answers. Several systems apply answer validation techniques with the goal of filtering out improper candidates by checking how adequate a candidate answer is with respect to a given question. These approaches rely on discovering semantic relations between the question and the answer. As an example, (Harabagiu and Maiorano, 1999) describes answer validation as an abductive inference process, where an answer is valid with respect to a question if an explanation for it, based on background knowledge, can be found. Although theoreticall</context>
</contexts>
<marker>Zajac, 2001</marker>
<rawString>R. Zajac. 2001. Towards Ontological Question Answering. In Proceedings of the ACL-2001 Workshop on Open-Domain Question Answering, Toulouse, France, July.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>