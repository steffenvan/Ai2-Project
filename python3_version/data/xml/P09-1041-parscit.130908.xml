<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000060">
<title confidence="0.997423">
Semi-supervised Learning of Dependency Parsers
using Generalized Expectation Criteria
</title>
<author confidence="0.998995">
Gregory Druck
</author>
<affiliation confidence="0.998324">
Dept. of Computer Science
University of Massachusetts
</affiliation>
<address confidence="0.850336">
Amherst, MA 01003
</address>
<email confidence="0.998723">
gdruck@cs.umass.edu
</email>
<author confidence="0.940897">
Gideon Mann
</author>
<affiliation confidence="0.833126">
Google, Inc.
</affiliation>
<address confidence="0.939233">
76 9th Ave.
New York, NY 10011
</address>
<email confidence="0.99851">
gideon.mann@gmail.com
</email>
<author confidence="0.998255">
Andrew McCallum
</author>
<affiliation confidence="0.9983205">
Dept. of Computer Science
University of Massachusetts
</affiliation>
<address confidence="0.850514">
Amherst, MA 01003
</address>
<email confidence="0.999117">
mccallum@cs.umass.edu
</email>
<sectionHeader confidence="0.993909" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999973823529412">
In this paper, we propose a novel method
for semi-supervised learning of non-
projective log-linear dependency parsers
using directly expressed linguistic prior
knowledge (e.g. a noun’s parent is often a
verb). Model parameters are estimated us-
ing a generalized expectation (GE) objec-
tive function that penalizes the mismatch
between model predictions and linguistic
expectation constraints. In a comparison
with two prominent “unsupervised” learn-
ing methods that require indirect biasing
toward the correct syntactic structure, we
show that GE can attain better accuracy
with as few as 20 intuitive constraints. We
also present positive experimental results
on longer sentences in multiple languages.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999979784313726">
Early approaches to parsing assumed a grammar
provided by human experts (Quirk et al., 1985).
Later approaches avoided grammar writing by
learning the grammar from sentences explicitly
annotated with their syntactic structure (Black et
al., 1992). While such supervised approaches have
yielded accurate parsers (Charniak, 2001), the
syntactic annotation of corpora such as the Penn
Treebank is extremely costly, and consequently
there are few treebanks of comparable size.
As a result, there has been recent interest in
unsupervised parsing. However, in order to at-
tain reasonable accuracy, these methods have to
be carefully biased towards the desired syntac-
tic structure. This weak supervision has been
encoded using priors and initializations (Klein
and Manning, 2004; Smith, 2006), specialized
models (Klein and Manning, 2004; Seginer,
2007; Bod, 2006), and implicit negative evi-
dence (Smith, 2006). These indirect methods for
leveraging prior knowledge can be cumbersome
and unintuitive for a non-machine-learning expert.
This paper proposes a method for directly guid-
ing the learning of dependency parsers with nat-
urally encoded linguistic insights. Generalized
expectation (GE) (Mann and McCallum, 2008;
Druck et al., 2008) is a recently proposed frame-
work for incorporating prior knowledge into the
learning of conditional random fields (CRFs) (Laf-
ferty et al., 2001). GE criteria express a preference
on the value of a model expectation. For example,
we know that “in English, when a determiner is di-
rectly to the left of a noun, the noun is usually the
parent of the determiner”. With GE we may add
a term to the objective function that encourages a
feature-rich CRF to match this expectation on un-
labeled data, and in the process learn about related
features. In this paper we use a non-projective de-
pendency tree CRF (Smith and Smith, 2007).
While a complete exploration of linguistic prior
knowledge for dependency parsing is beyond the
scope of this paper, we provide several promis-
ing demonstrations of the proposed method. On
the English WSJ10 data set, GE training outper-
forms two prominent unsupervised methods using
only 20 constraints either elicited from a human
or provided by an “oracle” simulating a human.
We also present experiments on longer sentences
in Dutch, Spanish, and Turkish in which we obtain
accuracy comparable to supervised learning with
tens to hundreds of complete parsed sentences.
</bodyText>
<sectionHeader confidence="0.999853" genericHeader="introduction">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999972875">
This work is closely related to the prototype-
driven grammar induction method of Haghighi
and Klein (2006), which uses prototype phrases
to guide the EM algorithm in learning a PCFG.
Direct comparison with this method is not possi-
ble because we are interested in dependency syn-
tax rather than phrase structure syntax. However,
the approach we advocate has several significant
</bodyText>
<page confidence="0.971147">
360
</page>
<note confidence="0.99961">
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 360–368,
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.993221759493671">
advantages. GE is more general than prototype-
driven learning because GE constraints can be un-
certain. Additionally prototype-driven grammar
induction needs to be used in conjunction with
other unsupervised methods (distributional simi-
larity and CCM (Klein and Manning, 2004)) to
attain reasonable accuracy, and is only evaluated
on length 10 or less sentences with no lexical in-
formation. In contrast, GE uses only the provided
constraints and unparsed sentences, and is used to
train a feature-rich discriminative model.
Conventional semi-supervised learning requires
parsed sentences. Kate and Mooney (2007) and
McClosky et al. (2006) both use modified forms
of self-training to bootstrap parsers from limited
labeled data. Wang et al. (2008) combine a struc-
tured loss on parsed sentences with a least squares
loss on unlabeled sentences. Koo et al. (2008) use
a large unlabeled corpus to estimate cluster fea-
tures which help the parser generalize with fewer
examples. Smith and Eisner (2007) apply entropy
regularization to dependency parsing. The above
methods can be applied to small seed corpora, but
McDonald1 has criticized such methods as work-
ing from an unrealistic premise, as a significant
amount of the effort required to build a treebank
comes in the first 100 sentences (both because of
the time it takes to create an appropriate rubric and
to train annotators).
There are also a number of methods for unsu-
pervised learning of dependency parsers. Klein
and Manning (2004) use a carefully initialized and
structured generative model (DMV) in conjunc-
tion with the EM algorithm to get the first positive
results on unsupervised dependency parsing. As
empirical evidence of the sensitivity of DMV to
initialization, Smith (2006) (pg. 37) uses three dif-
ferent initializations, and only one, the method of
Klein and Manning (2004), gives accuracy higher
than 31% on the WSJ10 corpus (see Section 5).
This initialization encodes the prior knowledge
that long distance attachments are unlikely.
Smith and Eisner (2005) develop contrastive
estimation (CE), in which the model is encour-
aged to move probability mass away from im-
plicit negative examples defined using a care-
fully chosen neighborhood function. For instance,
Smith (2006) (pg. 82) uses eight different neigh-
borhood functions to estimate parameters for the
DMV model. The best performing neighborhood
1R. McDonald, personal communication, 2007
function DEL1ORTRANS1 provides accuracy of
57.6% on WSJ10 (see Section 5). Another neigh-
borhood, DEL1ORTRANS2, provides accuracy of
51.2%. The remaining six neighborhood func-
tions provide accuracy below 50%. This demon-
strates that constructing an appropriate neighbor-
hood function can be delicate and challenging.
Smith and Eisner (2006) propose structural an-
nealing (SA), in which a strong bias for local de-
pendency attachments is enforced early in learn-
ing, and then gradually relaxed. This method is
sensitive to the annealing schedule. Smith (2006)
(pg. 136) use 10 annealing schedules in conjunc-
tion with three initializers. The best performing
combination attains accuracy of 66.7% on WSJ10,
but the worst attains accuracy of 32.5%.
Finally, Seginer (2007) and Bod (2006) ap-
proach unsupervised parsing by constructing
novel syntactic models. The development and tun-
ing of the above methods constitute the encoding
of prior domain knowledge about the desired syn-
tactic structure. In contrast, our framework pro-
vides a straightforward and explicit method for in-
corporating prior knowledge.
Ganchev et al. (2009) propose a related method
that uses posterior constrained EM to learn a pro-
jective target language parser using only a source
language parser and word alignments.
</bodyText>
<sectionHeader confidence="0.997252" genericHeader="method">
3 Generalized Expectation Criteria
</sectionHeader>
<bodyText confidence="0.999782">
Generalized expectation criteria (Mann and Mc-
Callum, 2008; Druck et al., 2008) are terms in
a parameter estimation objective function that ex-
press a preference on the value of a model expec-
tation. Let x represent input variables (i.e. a sen-
tence) and y represent output variables (i.e. a parse
tree). A generalized expectation term 9(λ) is de-
fined by a constraint function G(y, x) that returns
a non-negative real value given input and output
variables, an empirical distribution 5(x) over in-
put variables (i.e. unlabeled data), a model distri-
bution p),(y|x), and a score function S:
</bodyText>
<equation confidence="0.990256">
9(λ) = S(EP(x)[Epa(y|x)[G(y, x)]]).
</equation>
<bodyText confidence="0.999360333333333">
In this paper, we use a score function that is the
squared difference of the model expectation of G
and some target expectation G:
</bodyText>
<equation confidence="0.931598">
Syq = −( G� − E�p(x)[Epa(y|x)[G(y, x)]])2 (1)
</equation>
<bodyText confidence="0.99992">
We can incorporate prior knowledge into the train-
ing of p),(y|x) by specifying the from of the con-
straint function G and the target expectation G.
</bodyText>
<page confidence="0.997676">
361
</page>
<bodyText confidence="0.99979475">
Importantly, G does not need to match a particular
feature in the underlying model.
The complete objective function2 includes mul-
tiple GE terms and a prior on parameters3, p(λ)
</bodyText>
<equation confidence="0.9815295">
O(λ; D) = p(λ) + � 9(λ)
�
</equation>
<bodyText confidence="0.9936234">
GE has been applied to logistic regression mod-
els (Mann and McCallum, 2007; Druck et al.,
2008) and linear chain CRFs (Mann and McCal-
lum, 2008). In the following sections we apply
GE to non-projective CRF dependency parsing.
</bodyText>
<subsectionHeader confidence="0.996601">
3.1 GE in General CRFs
</subsectionHeader>
<bodyText confidence="0.999968">
We first consider an arbitrarily structured condi-
tional random field (Lafferty et al., 2001) pλ(y|x).
We describe the CRF for non-projective depen-
dency parsing in Section 3.2. The probability of
an output y conditioned on an input x is
</bodyText>
<equation confidence="0.9976165">
pλ(y|x) = 1Z exp M
x j )λjFj(y, x) ,
</equation>
<bodyText confidence="0.999813">
where Fj are feature functions over the cliques
of the graphical model and Z(x) is a normaliz-
ing constant that ensures pλ(y|x) sums to 1. We
are interested in the expectation of constraint func-
tion G(x, y) under this model. We abbreviate this
model expectation as:
</bodyText>
<equation confidence="0.932839">
Gλ = EP(x)[Epλ(y|x)[G(y, x)]]
</equation>
<bodyText confidence="0.7960675">
It can be shown that partial derivative of 9(λ) us-
ing Ssq4 with respect to model parameter λj is
</bodyText>
<equation confidence="0.9828448">
∂λj
∂ 9(λ) = 2( G˜ − Gλ) (2)
( [
E�p(x) Epλ(y|x) [G(y, x)Fj(y, x)]
J) −Epλ(y|x) [G(y, x)] Epλ(y|x) [Fj(y, x)]
</equation>
<bodyText confidence="0.999881666666667">
Equation 2 has an intuitive interpretation. The first
term (on the first line) is the difference between the
model and target expectations. The second term
</bodyText>
<footnote confidence="0.887666">
2In general, the objective function could also include the
likelihood of available labeled data, but throughout this paper
we assume we have no parsed sentences.
3Throughout this paper we use a Gaussian prior on pa-
rameters with a2 = 10.
4In previous work, S was the KL-divergence from the tar-
</footnote>
<bodyText confidence="0.959810736842105">
get expectation. The partial derivative of the KL divergence
score function includes the same covariance term as above
but substitutes a different multiplicative term: G/Gλ.
(the rest of the equation) is the predicted covari-
ance between the constraint function G and the
model feature function Fj. Therefore, if the con-
straint is not satisfied, GE updates parameters for
features that the model predicts are related to the
constraint function.
If there are constraint functions G for all model
feature functions Fj, and the target expectations
G˜ are estimated from labeled data, then the glob-
ally optimal parameter setting under the GE objec-
tive function is equivalent to the maximum likeli-
hood solution. However, GE does not require such
a one-to-one correspondence between constraint
functions and model feature functions. This al-
lows bootstrapping of feature-rich models with a
small number of prior expectation constraints.
</bodyText>
<subsectionHeader confidence="0.997266">
3.2 Non-Projective Dependency Tree CRFs
</subsectionHeader>
<bodyText confidence="0.9999672">
We now define a CRF pλ(y|x) for unlabeled, non-
projective5 dependency parsing. The tree y is rep-
resented as a vector of the same length as the sen-
tence, where yi is the index of the parent of word
i. The probability of a tree y given sentence x is
</bodyText>
<equation confidence="0.99789725">
1 �pλ(y|x) = Z exp λjfj(xi,xyi,x)),
x ( �
i=1 j
n
</equation>
<bodyText confidence="0.995636">
5Note that we could instead define a CRF for projective
dependency parse trees and use a variant of the inside outside
algorithm for inference. We choose non-projective because it
is the more general case.
where fj are edge-factored feature functions that
consider the child input (word, tag, or other fea-
ture), the parent input, and the rest of the sen-
tence. This factorization implies that dependency
decisions are independent conditioned on the in-
put sentence x if y is a tree. Computing Zx and the
edge expectations needed for partial derivatives re-
quires summing over all possible trees for x.
By relating the sum of the scores of all possible
trees to counting the number of spanning trees in a
graph, it can be shown that Zx is the determinant
of the Kirchoff matrix K, which is constructed us-
.ing the scores of possible edges. (McDonald and
Satta, 2007; Smith and Smith, 2007). Computing
the determinant takes O(n3) time, where n is the
length of the sentence. To compute the marginal
probability of a particular edge k —* i (i.e. yi =k),
the score of any edge k&apos; —* i such that k&apos; =� k is
set to 0. The determinant of the resulting modi-
fied Kirchoff matrix Kk,i is then the sum of the
scores of all trees that include the edge k —* i. The
</bodyText>
<page confidence="0.991591">
362
</page>
<bodyText confidence="0.999976571428571">
marginal p(yi =k|x; θ) can be computed by divid-
ing this score by Zx (McDonald and Satta, 2007).
Computing all edge expectations with this algo-
rithm takes O(n5) time. Smith and Smith (2007)
describe a more efficient algorithm that can com-
pute all edge expectations in O(n3) time using the
inverse of the Kirchoff matrix K−1.
</bodyText>
<subsectionHeader confidence="0.7145485">
3.3 GE for Non-Projective Dependency Tree
CRFs
</subsectionHeader>
<bodyText confidence="0.998252340425532">
While in general constraint functions G may
consider multiple edges, in this paper we use
edge-factored constraint functions. In this case
Epλ(y|x)[G(y, x)]Epλ(y|x)[Fj(y, x)], the second
term of the covariance in Equation 2, can be
computed using the edge marginal distributions
pa(yi|x). The first term of the covariance
Epλ(y|x)[G(y, x)Fj(y, x)] is more difficult to
compute because it requires the marginal proba-
bility of two edges pa(yi, yi0|x). It is important to
note that the model pa is still edge-factored.
The sum of the scores of all trees that contain
edges k —* i and k0 —* i0 can be computed by set-
ting the scores of edges j —* i such that j =� k and
j0 —* i0 such that j0 =� k0 to 0, and computing the
determinant of the resulting modified Kirchoff ma-
trix Kk→i,k0→i0. There are O(n4) pairs of possible
edges, and the determinant computation takes time
O(n3), so this naive algorithm takes O(n7) time.
An improved algorithm computes, for each pos-
sible edge k —* i, a modified Kirchoff matrix
Kk→i that requires the presence of that edge.
Then, the method of Smith and Smith (2007) can
be used to compute the probability of every pos-
sible edge conditioned on the presence of k —* i,
pa(yi0 = k0|yi = k, x), using K−1
k→i. Multiplying
this probability by pa(yi=k|x) yields the desired
two edge marginal. Because this algorithm pulls
the O(n3) matrix operation out of the inner loop
over edges, the run time is reduced to O(n5).
If it were possible to perform only one O(n3)
matrix operation per sentence, then the gradient
computation would take only O(n4) time, the time
required to consider all pairs of edges. Unfortu-
nately, there is no straightforward generalization
of the method of Smith and Smith (2007) to the
two edge marginal problem. Specifically, Laplace
expansion generalizes to second-order matrix mi-
nors, but it is not clear how to compute second-
order cofactors from the inverse Kirchoff matrix
alone (c.f. (Smith and Smith, 2007)).
Consequently, we also propose an approxima-
tion that can be used to speed up GE training at
the expense of a less accurate covariance compu-
tation. We consider different cases of the edges
k —* i, and k0 —* i0.
</bodyText>
<listItem confidence="0.9195245">
• pa(yi=k, yi0=k0|x)=0 when i=i0 and kik0
(different parent for the same word), or when
i=k0 and k=i0 (cycle), because these pairs of
edges break the tree constraint.
• pa(yi=k, yi0 =k0|x)=pa(yi=k|x) when i=
i0, k=k0.
• pa(yi = k, yi0 = k0|x) ^ pa(yi = k|x)pa(yi0 =
k0|x) when i =� i0 and i =� k0 or i0 =� k
(different words, do not create a cycle). This
approximation assumes that pairs of edges
that do not fall into one of the above cases
are conditionally independent given x. This
is not true because there are partial trees in
which k —* i and k0 —* i0 can appear sepa-
rately, but not together (for example if i = k0
and the partial tree contains i0 —* k).
</listItem>
<bodyText confidence="0.775391">
Using this approximation, the covariance for one
sentence is approximately equal to
</bodyText>
<equation confidence="0.970657">
n
Epλ(yi|x)[fj(xi, xyi, x)g(xi, xyi, x)]
i
n
� Epλ(yi|x)[fj(xi, xyi, x)]Epλ(yi|x)[g(xi, xyi, x)]
i
n
� pa(yi=k|x)pa(yk=i|x)fj(xi, xk, x)g(xk, xi, x).
i,k
</equation>
<bodyText confidence="0.999671176470588">
Intuitively, the first and second terms compute a
covariance over possible parents for a single word,
and the third term accounts for cycles. Computing
the above takes O(n3) time, the time required to
compute single edge marginals. In this paper, we
use the O(n5) exact method, though we find that
the accuracy attained by approximate training is
usually within 5% of the exact method.
If G is not edge-factored, then we need to com-
pute a marginal over three or more edges, making
exact training intractable. An appealing alterna-
tive to a similar approximation to the above would
use loopy belief propagation to efficiently approx-
imate the marginals (Smith and Eisner, 2008).
In this paper g is binary and normalized by its
total count in the corpus. The expectation of g is
then the probability that it indicates a true edge.
</bodyText>
<page confidence="0.998524">
363
</page>
<sectionHeader confidence="0.990741" genericHeader="method">
4 Linguistic Prior Knowledge
</sectionHeader>
<bodyText confidence="0.9999373">
Training parsers using GE with the aid of linguists
is an exciting direction for future work. In this pa-
per, we use constraints derived from several basic
types of linguistic knowledge.
One simple form of linguistic knowledge is the
set of possible parent tags for a given child tag.
This type of constraint was used in the devel-
opment of a rule-based dependency parser (De-
busmann et al., 2004). Additional information
can be obtained from small grammar fragments.
Haghighi and Klein (2006) provide a list of proto-
type phrase structure rules that can be augmented
with dependencies and used to define constraints
involving parent and child tags, surrounding or
interposing tags, direction, and distance. Finally
there are well known hypotheses about the direc-
tion and distance of attachments that can be used
to define constraints. Eisner and Smith (2005) use
the fact that short attachments are more common
to improve unsupervised parsing accuracy.
</bodyText>
<subsectionHeader confidence="0.994795">
4.1 “Oracle” constraints
</subsectionHeader>
<bodyText confidence="0.999546777777778">
For some experiments that follow we use “ora-
cle” constraints that are estimated from labeled
data. This involves choosing feature templates
(motivated by the linguistic knowledge described
above) and estimating target expectations. Oracle
methods used in this paper consider three simple
statistics of candidate constraint functions: count
c(g), edge count cedge(g), and edge probability
,5(edge|g). Let D be the labeled corpus.
</bodyText>
<equation confidence="0.994346333333333">
��c(g) = � � g(xi, xj, X)
xED i j
g(xi, xyz, X)
</equation>
<bodyText confidence="0.999215555555555">
Constraint functions are selected according to
some combination of the above statistics. In
some cases we additionally prune the candidate
set by considering only certain templates. To
compute the target expectation, we simply use
bin(p(edge|g)), where bin returns the closest
value in the set 10, 0.1, 0.25, 0.5, 0.75, 11. This
can be viewed as specifying that g is very indica-
tive of edge, somewhat indicative of edge, etc.
</bodyText>
<sectionHeader confidence="0.992626" genericHeader="method">
5 Experimental Comparison with
</sectionHeader>
<subsectionHeader confidence="0.526762">
Unsupervised Learning
</subsectionHeader>
<bodyText confidence="0.999861382978723">
In this section we compare GE training with meth-
ods for unsupervised parsing. We use the WSJ10
corpus (as processed by Smith (2006)), which is
comprised of English sentences of ten words or
fewer (after stripping punctuation) from the WSJ
portion of the Penn Treebank. As in previous work
sentences contain only part-of-speech tags.
We compare GE and supervised training of an
edge-factored CRF with unsupervised learning of
a DMV model (Klein and Manning, 2004) using
EM and contrastive estimation (CE) (Smith and
Eisner, 2005). We also report the accuracy of an
attach-right baseline6. Finally, we report the ac-
curacy of a constraint baseline that assigns a score
to each possible edge that is the sum of the target
expectations for all constraints on that edge. Pos-
sible edges without constraints receive a score of
0. These scores are used as input to the maximum
spanning tree algorithm, which returns the best
tree. Note that this is a strong baseline because it
can handle uncertain constraints, and the tree con-
straint imposed by the MST algorithm helps infor-
mation propagate across edges.
We note that there are considerable differences
between the DMV and CRF models. The DMV
model is more expressive than the CRF because
it can model the arity of a head as well as sib-
ling relationships. Because these features consider
multiple edges, including them in the CRF model
would make exact inference intractable (McDon-
ald and Satta, 2007). However, the CRF may con-
sider the distance between head and child, whereas
DMV does not model distance. The CRF also
models non-projective trees, which when evaluat-
ing on English is likely a disadvantage.
Consequently, we experiment with two sets of
features for the CRF model. The first, restricted
set includes features that consider the head and
child tags of the dependency conjoined with the
direction of the attachment, (parent-POS,child-
POS,direction). With this feature set, the CRF
model is less expressive than DMV. The sec-
ond full set includes standard features for edge-
factored dependency parsers (McDonald et al.,
2005), though still unlexicalized. The CRF can-
not consider valency even with the full feature set,
but this is balanced by the ability to use distance.
</bodyText>
<footnote confidence="0.807012">
6The reported accuracies with the DMV model and the
attach-right baseline are taken from (Smith, 2006).
</footnote>
<equation confidence="0.998914">
��cedge(g) = �
(x,y)ED i
�p(edge|g) = �cedge(g)
c(g)
</equation>
<page confidence="0.997212">
364
</page>
<table confidence="0.999464636363636">
feature ex. feature ex.
MD → VB 1.00 NNS ← VBD 0.75
POS ← NN 0.75 PRP ← VBD 0.75
JJ ← NNS 0.75 VBD → TO 1.00
NNP ← POS 0.75 VBD → VBN 0.75
ROOT → MD 0.75 NNS ← VBP 0.75
ROOT → VBD 1.00 PRP ← VBP 0.75
ROOT → VBP 0.75 VBP → VBN 0.75
ROOT → VBZ 0.75 PRP ← VBZ 0.75
TO → VB 1.00 NN ← VBZ 0.75
VBN → IN 0.75 VBZ → VBN 0.75
</table>
<tableCaption confidence="0.999361">
Table 1: 20 constraints that give 61.3% accuracy
</tableCaption>
<bodyText confidence="0.984644285714286">
on WSJ10. Tags are grouped according to heads,
and are in the order they appear in the sentence,
with the arrow pointing from head to modifier.
We generate constraints in two ways. First,
we use oracle constraints of the form (parent-
POS,child-POS,direction) such that c(g) &gt; 200.
We choose constraints in descending order of
,5(edge|g). The first 20 constraints selected using
this method are displayed in Table 1.
Although the reader can verify that the con-
straints in Table 1 are reasonable, we addition-
ally experiment with human-provided constraints.
We use the prototype phrase-structure constraints
provided by Haghighi and Klein (2006), and
with the aid of head-finding rules, extract 14
(parent-pos,child-pos,direction) constraints.7 We
then estimated target expectations for these con-
straints using our prior knowledge, without look-
ing at the training data. We also created a second
constraint set with an additional six constraints for
tag pairs that were previously underrepresented.
</bodyText>
<sectionHeader confidence="0.608105" genericHeader="method">
5.1 Results
</sectionHeader>
<bodyText confidence="0.99964525">
We present results varying the number of con-
straints in Figures 1 and 2. Figure 1 compares
supervised and GE training of the CRF model, as
well as the feature constraint baseline. First we
note that GE training using the full feature set sub-
stantially outperforms the restricted feature set,
despite the fact that the same set of constraints
is used for both experiments. This result demon-
strates GE’s ability to learn about related but non-
constrained features. GE training also outper-
forms the baseline8.
We compare GE training of the CRF model
</bodyText>
<footnote confidence="0.998502166666667">
7Because the CFG rules in (Haghighi and Klein, 2006)
are “flattened” and in some cases do not generate appropriate
dependency constraints, we only used a subset.
8The baseline eventually matches the accuracy of the re-
stricted CRF but this is understandable because GE’s ability
to bootstrap is greatly reduced with the restricted feature set.
</footnote>
<bodyText confidence="0.999943115384615">
with unsupervised learning of the DMV model
in Figure 29. Despite the fact that the restricted
CRF is less expressive than DMV, GE training of
this model outperforms EM with 30 constraints
and CE with 50 constraints. GE training of the
full CRF outperforms EM with 10 constraints and
CE with 20 constraints (those displayed in Ta-
ble 1). GE training of the full CRF with the set of
14 constraints from (Haghighi and Klein, 2006),
gives accuracy of 53.8%, which is above the inter-
polated oracle constraints curve (43.5% accuracy
with 10 constraints, 61.3% accuracy with 20 con-
straints). With the 6 additional constraints, we ob-
tain accuracy of 57.7% and match CE.
Recall that CE, EM, and the DMV model in-
corporate prior knowledge indirectly, and that the
reported results are heavily-tuned ideal cases (see
Section 2). In contrast, GE provides a method to
directly encode intuitive linguistic insights.
Finally, note that structural annealing (Smith
and Eisner, 2006) provides 66.7% accuracy on
WSJ10 when choosing the best performing an-
nealing schedule (Smith, 2006). As noted in Sec-
tion 2 other annealing schedules provide accuracy
as low as 32.5%. GE training of the full CRF at-
tains accuracy of 67.0% with 30 constraints.
</bodyText>
<sectionHeader confidence="0.989929" genericHeader="method">
6 Experimental Comparison with
</sectionHeader>
<subsectionHeader confidence="0.956675">
Supervised Training on Long
Sentences
</subsectionHeader>
<bodyText confidence="0.999760454545455">
Unsupervised parsing methods are typically eval-
uated on short sentences, as in Section 5. In this
section we show that GE can be used to train
parsers for longer sentences that provide compa-
rable accuracy to supervised training with tens to
hundreds of parsed sentences.
We use the standard train/test splits of the
Spanish, Dutch, and Turkish data from the 2006
CoNLL Shared Task. We also use standard
edge-factored feature templates (McDonald et al.,
2005)10. We experiment with versions of the dat-
</bodyText>
<footnote confidence="0.909355384615385">
9Klein and Manning (2004) report 43.2% accuracy for
DMV with EM on WSJ10. When jointly modeling con-
stituency and dependencies, Klein and Manning (2004) re-
port accuracy of 47.5%. Seginer (2007) and Bod (2006) pro-
pose unsupervised phrase structure parsing methods that give
better unlabeled F-scores than DMV with EM, but they do
not report directed dependency accuracy.
10Typical feature processing uses only supported features,
or those features that occur on at least one true edge in the
training data. Because we assume that the data is unlabeled,
we instead use features on all possible edges. This generates
tens of millions features, so we prune those features that oc-
cur fewer than 10 total times, as in (Smith and Eisner, 2007).
</footnote>
<page confidence="0.996304">
365
</page>
<figure confidence="0.575625">
number of constraints
</figure>
<figureCaption confidence="0.942396272727273">
Figure 1: Comparison of the constraint baseline and
both GE and supervised training of the restricted and
full CRF. Note that supervised training uses 5,301
parsed sentences. GE with human provided con-
straints closely matches the oracle results.
number of constraints
Figure 2: Comparison of GE training of the re-
stricted and full CRFs with unsupervised learning of
DMV. GE training of the full CRF outperforms CE
with just 20 constraints. GE also matches CE with
20 human provided constraints.
</figureCaption>
<figure confidence="0.99724506060606">
90
80
70
60
50
constraint baseline
CRF restricted supervised
CRF supervised
CRF restricted GE
CRF GE
CRF GE human
10
10 20 30 40 50 60
40
30
20
80
70
60
50
40
attach right baseline
DMV EM
DMV CE
CRF restricted GE
CRF GE
CRF GE human
10
10 20 30 40 50 60
30
20
accuracy
accuracy
</figure>
<bodyText confidence="0.972842129032258">
sets in which we remove sentences that are longer
than 20 words and 60 words.
For these experiments, we use an oracle
constraint selection method motivated by the
linguistic prior knowledge described in Section 4.
The first set of constraints specify the most
frequent head tag, attachment direction, and
distance combinations for each child tag. Specif-
ically, we select oracle constraints of the type
(parent-CPOS,child-CPOS,direction,distance)11.
We add constraints for every g such that
�cedge(g) &gt; 100 for max length 60 data sets, and
�cedge(g)&gt;10 times for max length 20 data sets.
In some cases, the possible parent constraints
described above will not be enough to provide
high accuracy, because they do not consider other
tags in the sentence (McDonald et al., 2005).
Consequently, we experiment with adding an
additional 25 sequence constraints (for what are
often called “between” and “surrounding” fea-
tures). The oracle feature selection method aims to
choose such constraints that help to reduce uncer-
tainty in the possible parents constraint set. Con-
sequently, we consider sequence features gs with
p(edge|gs =1) &gt; 0.75, and whose corresponding
(parent-CPOS,child-CPOS,direction,distance)
constraint g, has edge probability 5(edge|g) &lt;
0.25. Among these candidates, we sort by
c(gs =1), and select the top 25.
We compare with the constraint baseline de-
scribed in Section 5. Additionally, we report
</bodyText>
<footnote confidence="0.6007905">
11For these experiments we use coarse-grained part-of-
speech tags in constraints.
</footnote>
<bodyText confidence="0.99980496969697">
the number of parsed sentences required for su-
pervised CRF training (averaged over 5 random
splits) to match the accuracy of GE training using
the possible parents + sequence constraint set.
The results are provided in Table 2. We first
observe that GE always beats the baseline, espe-
cially on parent decisions for which there are no
constraints (not reported in Table 2, but for exam-
ple 53.8% vs. 20.5% on Turkish 20). Second, we
note that accuracy is always improved by adding
sequence constraints. Importantly, we observe
that GE gives comparable performance to super-
vised training with tens or hundreds of parsed sen-
tences. These parsed sentences provide a tremen-
dous amount of information to the model, as for
example in 20 Spanish length &lt; 60 sentences, a
total of 1,630,466 features are observed, 330,856
of them unique. In contrast, the constraint-based
methods are provided at most a few hundred con-
straints. When comparing the human costs of
parsing sentences and specifying constraints, re-
member that parsing sentences requires the devel-
opment of detailed annotation guidelines, which
can be extremely time-consuming (see also the
discussion is Section 2).
Finally, we experiment with iteratively
adding constraints. We sort constraints with
E(g) &gt; 50 by 5(edge|g), and ensure that 50%
are (parent-CPOS,child-CPOS,direction,distance)
constraints and 50% are sequence constraints.
For lack of space, we only show the results for
Spanish 60. In Figure 3, we see that GE beats
the baseline more soundly than above, and that
</bodyText>
<page confidence="0.995633">
366
</page>
<table confidence="0.997385625">
possible parent constraints + sequence constraints complete trees
baseline GE baseline GE
dutch 20 69.5 70.7 69.8 71.8 80-160
dutch 60 66.5 69.3 66.7 69.8 40-80
spanish 20 70.0 73.2 71.2 75.8 40-80
spanish 60 62.1 66.2 62.7 66.9 20-40
turkish 20 66.3 71.8 67.1 72.9 80-160
turkish 60 62.1 65.5 62.3 66.6 20-40
</table>
<tableCaption confidence="0.945833333333333">
Table 2: Experiments on Dutch, Spanish, and Turkish with maximum sentence lengths of 20 and 60. Observe that GE
outperforms the baseline, adding sequence constraints improves accuracy, and accuracy with GE training is comparable to
supervised training with tens to hundreds of parsed sentences.
</tableCaption>
<table confidence="0.9995875625">
parent tag true predicted
det. 0.005 0.005
adv. 0.018 0.013
conj. 0.012 0.001
pron. 0.011 0.009
verb 0.355 0.405
adj. 0.067 0.075
punc. 0.031 0.013
noun 0.276 0.272
prep. 0.181 0.165
direction true predicted
right 0.621 0.598
left 0.339 0.362
distance true predicted
1 0.495 0.564
2 0.194 0.206
3 0.066 0.050
4 0.042 0.037
5 0.028 0.031
6-10 0.069 0.033
&gt; 10 0.066 0.039
feature (distance) false pos. occ.
verb → punc. (&gt;10) 1183
noun → prep. (1) 1139
adj. → prep. (1) 855
verb → verb (6-10) 756
verb → verb (&gt;10) 569
noun ← punc. (1) 512
verb ← punc. (2) 509
prep. ← punc. (1) 476
verb → punc. (4) 427
verb → prep. (1) 422
</table>
<tableCaption confidence="0.995509">
Table 3: Error analysis for GE training with possible parent + sequence constraints on Spanish 60 data. On the left, the
predicted and true distribution over parent coarse part-of-speech tags. In the middle, the predicted and true distributions over
attachment directions and distances. On the right, common features on false positive edges.
</tableCaption>
<figure confidence="0.7199255">
Spanish (maximum length 60)
number of constraints
</figure>
<figureCaption confidence="0.985584">
Figure 3: Comparing GE training of a CRF and constraint
baseline while increasing the number of oracle constraints.
</figureCaption>
<bodyText confidence="0.975016">
adding constraints continues to increase accuracy.
</bodyText>
<sectionHeader confidence="0.999388" genericHeader="method">
7 Error Analysis
</sectionHeader>
<bodyText confidence="0.999983434782609">
In this section, we analyze the errors of the model
learned with the possible parent + sequence con-
straints on the Spanish 60 data. In Table 3, we
present four types of analysis. First, we present
the predicted and true distributions over coarse-
grained parent part of speech tags. We can see
that verb is being predicted as a parent tag more
often then it should be, while most other tags are
predicted less often than they should be. Next, we
show the predicted and true distributions over at-
tachment direction and distance. From this we see
that the model is often incorrectly predicting left
attachments, and is predicting too many short at-
tachments. Finally, we show the most common
parent-child tag with direction and distance fea-
tures that occur on false positive edges. From this
table, we see that many errors concern the attach-
ments of punctuation. The second line indicates a
prepositional phrase attachment ambiguity.
This analysis could also be performed by a lin-
guist by looking at predicted trees for selected sen-
tences. Once errors are identified, GE constraints
could be added to address these problems.
</bodyText>
<sectionHeader confidence="0.999447" genericHeader="conclusions">
8 Conclusions
</sectionHeader>
<bodyText confidence="0.9999655">
In this paper, we developed a novel method for
the semi-supervised learning of a non-projective
CRF dependency parser that directly uses linguis-
tic prior knowledge as a training signal. It is our
hope that this method will permit more effective
leveraging of linguistic insight and resources and
enable the construction of parsers in languages and
domains where treebanks are not available.
</bodyText>
<sectionHeader confidence="0.999089" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.755121">
We thank Ryan McDonald, Keith Hall, John Hale, Xiaoyun
Wu, and David Smith for helpful discussions. This work
was completed in part while Gregory Druck was an intern
at Google. This work was supported in part by the Center
for Intelligent Information Retrieval, The Central Intelligence
Agency, the National Security Agency and National Science
Foundation under NSF grant #IIS-0326249, and by the De-
fense Advanced Research Projects Agency (DARPA) under
Contract No. FA8750-07-D-0185/0004. Any opinions, find-
ings and conclusions or recommendations expressed in this
material are the author’s and do not necessarily reflect those
of the sponsor.
</bodyText>
<figure confidence="0.994597">
accuracy
75
70
65
60
55
50
45
40
35
30
25
100 200 300 400 500 600 700 800
constraint baseline
GE
</figure>
<page confidence="0.984201">
367
</page>
<sectionHeader confidence="0.994527" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999725625">
E. Black, J. Lafferty, and S. Roukos. 1992. Development and
evaluation of a broad-coverage probabilistic grammar of
english language computer manuals. In ACL, pages 185–
192.
Rens Bod. 2006. An all-subtrees approach to unsupervised
parsing. In ACL, pages 865–872.
E. Charniak. 2001. Immediate-head parsing for language
models. In ACL.
R. Debusmann, D. Duchier, A. Koller, M. Kuhlmann,
G. Smolka, and S. Thater. 2004. A relational syntax-
semantics interface based on dependency grammar. In
COLING.
G. Druck, G. S. Mann, and A. McCallum. 2008. Learning
from labeled features using generalized expectation crite-
ria. In SIGIR.
J. Eisner and N.A. Smith. 2005. Parsing with soft and hard
constraints on dependency length. In IWPT.
Kuzman Ganchev, Jennifer Gillenwater, and Ben Taskar.
2009. Dependency grammar induction via bitext projec-
tion constraints. In ACL.
A. Haghighi and D. Klein. 2006. Prototype-driven grammar
induction. In COLING.
R. J. Kate and R. J. Mooney. 2007. Semi-supervised learning
for semantic parsing using support vector machines. In
HLT-NAACL (Short Papers).
D. Klein and C. Manning. 2004. Corpus-based induction
of syntactic structure: Models of dependency and con-
stituency. In ACL.
T. Koo, X. Carreras, and M. Collins. 2008. Simple semi-
supervised dependency parsing. In ACL.
J. Lafferty, A. McCallum, and F. Pereira. 2001. Conditional
random fields: Probabilistic models for segmenting and
labeling sequence data. In ICML.
G. Mann and A. McCallum. 2007. Simple, robust, scal-
able semi-supervised learning via expectation regulariza-
tion. In ICML.
G. Mann and A. McCallum. 2008. Generalized expectation
criteria for semi-supervised learning of conditional ran-
dom fields. In ACL.
D. McClosky, E. Charniak, and M. Johnson. 2006. Effective
self-training for parsing. In HLT-NAACL.
Ryan McDonald and Giorgio Satta. 2007. On the complex-
ity of non-projective data-driven dependency parsing. In
Proc. of IWPT, pages 121–132.
Ryan McDonald, Koby Crammer, and Fernando Pereira.
2005. Online large-margin training of dependency
parsers. In ACL, pages 91–98.
R. Quirk, S. Greenbaum, G. Leech, and J. Svartvik. 1985.
A Comprehensive Grammar of the English Language.
Longman.
Yoav Seginer. 2007. Fast unsupervised incremental parsing.
In ACL, pages 384–391, Prague, Czech Republic.
Noah A. Smith and Jason Eisner. 2005. Contrastive esti-
mation: training log-linear models on unlabeled data. In
ACL, pages 354–362.
Noah A. Smith and Jason Eisner. 2006. Annealing struc-
tural bias in multilingual weighted grammar induction. In
COLING-ACL, pages 569–576.
David A. Smith and Jason Eisner. 2007. Bootstrapping
feature-rich dependency parsers with entropic priors. In
EMNLP-CoNLL, pages 667–677.
David A. Smith and Jason Eisner. 2008. Dependency parsing
by belief propagation. In EMNLP.
David A. Smith and Noah A. Smith. 2007. Probabilistic
models of nonprojective dependency trees. In EMNLP-
CoNLL, pages 132–140.
Noah A. Smith. 2006. Novel Estimation Methods for Un-
supervised Discovery of Latent Structure in Natural Lan-
guage Text. Ph.D. thesis, Johns Hopkins University.
Qin Iris Wang, Dale Schuurmans, and Dekang Lin. 2008.
Semi-supervised convex training for dependency parsing.
In ACL, pages 532–540.
</reference>
<page confidence="0.998256">
368
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.978669">
<title confidence="0.993688">Semi-supervised Learning of Dependency Parsers using Generalized Expectation Criteria</title>
<author confidence="0.999925">Gregory Druck</author>
<affiliation confidence="0.999984">Dept. of Computer Science University of Massachusetts</affiliation>
<address confidence="0.999964">Amherst, MA 01003</address>
<email confidence="0.999825">gdruck@cs.umass.edu</email>
<author confidence="0.99991">Gideon Mann</author>
<affiliation confidence="0.997306">Google, Inc.</affiliation>
<address confidence="0.9989645">76 9th Ave. New York, NY 10011</address>
<email confidence="0.999413">gideon.mann@gmail.com</email>
<author confidence="0.999834">Andrew McCallum</author>
<affiliation confidence="0.999979">Dept. of Computer Science University of Massachusetts</affiliation>
<address confidence="0.999888">Amherst, MA 01003</address>
<email confidence="0.999851">mccallum@cs.umass.edu</email>
<abstract confidence="0.999844555555556">In this paper, we propose a novel method for semi-supervised learning of nonprojective log-linear dependency parsers using directly expressed linguistic prior (e.g. a parent is often a Model parameters are estimated usa expectation objective function that penalizes the mismatch between model predictions and linguistic expectation constraints. In a comparison with two prominent “unsupervised” learning methods that require indirect biasing toward the correct syntactic structure, we show that GE can attain better accuracy with as few as 20 intuitive constraints. We also present positive experimental results on longer sentences in multiple languages.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>E Black</author>
<author>J Lafferty</author>
<author>S Roukos</author>
</authors>
<title>Development and evaluation of a broad-coverage probabilistic grammar of english language computer manuals.</title>
<date>1992</date>
<booktitle>In ACL,</booktitle>
<pages>185--192</pages>
<contexts>
<context position="1350" citStr="Black et al., 1992" startWordPosition="183" endWordPosition="186">ictions and linguistic expectation constraints. In a comparison with two prominent “unsupervised” learning methods that require indirect biasing toward the correct syntactic structure, we show that GE can attain better accuracy with as few as 20 intuitive constraints. We also present positive experimental results on longer sentences in multiple languages. 1 Introduction Early approaches to parsing assumed a grammar provided by human experts (Quirk et al., 1985). Later approaches avoided grammar writing by learning the grammar from sentences explicitly annotated with their syntactic structure (Black et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; </context>
</contexts>
<marker>Black, Lafferty, Roukos, 1992</marker>
<rawString>E. Black, J. Lafferty, and S. Roukos. 1992. Development and evaluation of a broad-coverage probabilistic grammar of english language computer manuals. In ACL, pages 185– 192.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rens Bod</author>
</authors>
<title>An all-subtrees approach to unsupervised parsing.</title>
<date>2006</date>
<booktitle>In ACL,</booktitle>
<pages>865--872</pages>
<contexts>
<context position="1960" citStr="Bod, 2006" startWordPosition="275" endWordPosition="276">. While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectation. For examp</context>
<context position="7266" citStr="Bod (2006)" startWordPosition="1109" endWordPosition="1110">od functions provide accuracy below 50%. This demonstrates that constructing an appropriate neighborhood function can be delicate and challenging. Smith and Eisner (2006) propose structural annealing (SA), in which a strong bias for local dependency attachments is enforced early in learning, and then gradually relaxed. This method is sensitive to the annealing schedule. Smith (2006) (pg. 136) use 10 annealing schedules in conjunction with three initializers. The best performing combination attains accuracy of 66.7% on WSJ10, but the worst attains accuracy of 32.5%. Finally, Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses posterior constrained EM to learn a projective target language parser using only a source language parser and word alignments. 3 Generalized Expectation Criteria Generalized expectation criteria (Mann and McCallum, 2008; Druck</context>
<context position="25820" citStr="Bod (2006)" startWordPosition="4252" endWordPosition="4253"> section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. We use the standard train/test splits of the Spanish, Dutch, and Turkish data from the 2006 CoNLL Shared Task. We also use standard edge-factored feature templates (McDonald et al., 2005)10. We experiment with versions of the dat9Klein and Manning (2004) report 43.2% accuracy for DMV with EM on WSJ10. When jointly modeling constituency and dependencies, Klein and Manning (2004) report accuracy of 47.5%. Seginer (2007) and Bod (2006) propose unsupervised phrase structure parsing methods that give better unlabeled F-scores than DMV with EM, but they do not report directed dependency accuracy. 10Typical feature processing uses only supported features, or those features that occur on at least one true edge in the training data. Because we assume that the data is unlabeled, we instead use features on all possible edges. This generates tens of millions features, so we prune those features that occur fewer than 10 total times, as in (Smith and Eisner, 2007). 365 number of constraints Figure 1: Comparison of the constraint basel</context>
</contexts>
<marker>Bod, 2006</marker>
<rawString>Rens Bod. 2006. An all-subtrees approach to unsupervised parsing. In ACL, pages 865–872.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
</authors>
<title>Immediate-head parsing for language models.</title>
<date>2001</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="1431" citStr="Charniak, 2001" startWordPosition="195" endWordPosition="196">nsupervised” learning methods that require indirect biasing toward the correct syntactic structure, we show that GE can attain better accuracy with as few as 20 intuitive constraints. We also present positive experimental results on longer sentences in multiple languages. 1 Introduction Early approaches to parsing assumed a grammar provided by human experts (Quirk et al., 1985). Later approaches avoided grammar writing by learning the grammar from sentences explicitly annotated with their syntactic structure (Black et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods </context>
</contexts>
<marker>Charniak, 2001</marker>
<rawString>E. Charniak. 2001. Immediate-head parsing for language models. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Debusmann</author>
<author>D Duchier</author>
<author>A Koller</author>
<author>M Kuhlmann</author>
<author>G Smolka</author>
<author>S Thater</author>
</authors>
<title>A relational syntaxsemantics interface based on dependency grammar.</title>
<date>2004</date>
<booktitle>In COLING.</booktitle>
<contexts>
<context position="17636" citStr="Debusmann et al., 2004" startWordPosition="2900" endWordPosition="2904">mate the marginals (Smith and Eisner, 2008). In this paper g is binary and normalized by its total count in the corpus. The expectation of g is then the probability that it indicates a true edge. 363 4 Linguistic Prior Knowledge Training parsers using GE with the aid of linguists is an exciting direction for future work. In this paper, we use constraints derived from several basic types of linguistic knowledge. One simple form of linguistic knowledge is the set of possible parent tags for a given child tag. This type of constraint was used in the development of a rule-based dependency parser (Debusmann et al., 2004). Additional information can be obtained from small grammar fragments. Haghighi and Klein (2006) provide a list of prototype phrase structure rules that can be augmented with dependencies and used to define constraints involving parent and child tags, surrounding or interposing tags, direction, and distance. Finally there are well known hypotheses about the direction and distance of attachments that can be used to define constraints. Eisner and Smith (2005) use the fact that short attachments are more common to improve unsupervised parsing accuracy. 4.1 “Oracle” constraints For some experiment</context>
</contexts>
<marker>Debusmann, Duchier, Koller, Kuhlmann, Smolka, Thater, 2004</marker>
<rawString>R. Debusmann, D. Duchier, A. Koller, M. Kuhlmann, G. Smolka, and S. Thater. 2004. A relational syntaxsemantics interface based on dependency grammar. In COLING.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Druck</author>
<author>G S Mann</author>
<author>A McCallum</author>
</authors>
<title>Learning from labeled features using generalized expectation criteria.</title>
<date>2008</date>
<booktitle>In SIGIR.</booktitle>
<contexts>
<context position="2334" citStr="Druck et al., 2008" startWordPosition="327" endWordPosition="330">o be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectation. For example, we know that “in English, when a determiner is directly to the left of a noun, the noun is usually the parent of the determiner”. With GE we may add a term to the objective function that encourages a feature-rich CRF to match this expectation on unlabeled data, and in the process learn about related features. In this paper we use a non-projective dependency tree CRF (</context>
<context position="7880" citStr="Druck et al., 2008" startWordPosition="1200" endWordPosition="1203">2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses posterior constrained EM to learn a projective target language parser using only a source language parser and word alignments. 3 Generalized Expectation Criteria Generalized expectation criteria (Mann and McCallum, 2008; Druck et al., 2008) are terms in a parameter estimation objective function that express a preference on the value of a model expectation. Let x represent input variables (i.e. a sentence) and y represent output variables (i.e. a parse tree). A generalized expectation term 9(λ) is defined by a constraint function G(y, x) that returns a non-negative real value given input and output variables, an empirical distribution 5(x) over input variables (i.e. unlabeled data), a model distribution p),(y|x), and a score function S: 9(λ) = S(EP(x)[Epa(y|x)[G(y, x)]]). In this paper, we use a score function that is the squared</context>
</contexts>
<marker>Druck, Mann, McCallum, 2008</marker>
<rawString>G. Druck, G. S. Mann, and A. McCallum. 2008. Learning from labeled features using generalized expectation criteria. In SIGIR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Eisner</author>
<author>N A Smith</author>
</authors>
<title>Parsing with soft and hard constraints on dependency length.</title>
<date>2005</date>
<booktitle>In IWPT.</booktitle>
<contexts>
<context position="18097" citStr="Eisner and Smith (2005)" startWordPosition="2971" endWordPosition="2974"> set of possible parent tags for a given child tag. This type of constraint was used in the development of a rule-based dependency parser (Debusmann et al., 2004). Additional information can be obtained from small grammar fragments. Haghighi and Klein (2006) provide a list of prototype phrase structure rules that can be augmented with dependencies and used to define constraints involving parent and child tags, surrounding or interposing tags, direction, and distance. Finally there are well known hypotheses about the direction and distance of attachments that can be used to define constraints. Eisner and Smith (2005) use the fact that short attachments are more common to improve unsupervised parsing accuracy. 4.1 “Oracle” constraints For some experiments that follow we use “oracle” constraints that are estimated from labeled data. This involves choosing feature templates (motivated by the linguistic knowledge described above) and estimating target expectations. Oracle methods used in this paper consider three simple statistics of candidate constraint functions: count c(g), edge count cedge(g), and edge probability ,5(edge|g). Let D be the labeled corpus. ��c(g) = � � g(xi, xj, X) xED i j g(xi, xyz, X) Con</context>
</contexts>
<marker>Eisner, Smith, 2005</marker>
<rawString>J. Eisner and N.A. Smith. 2005. Parsing with soft and hard constraints on dependency length. In IWPT.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kuzman Ganchev</author>
<author>Jennifer Gillenwater</author>
<author>Ben Taskar</author>
</authors>
<title>Dependency grammar induction via bitext projection constraints.</title>
<date>2009</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="7604" citStr="Ganchev et al. (2009)" startWordPosition="1158" endWordPosition="1161">ethod is sensitive to the annealing schedule. Smith (2006) (pg. 136) use 10 annealing schedules in conjunction with three initializers. The best performing combination attains accuracy of 66.7% on WSJ10, but the worst attains accuracy of 32.5%. Finally, Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses posterior constrained EM to learn a projective target language parser using only a source language parser and word alignments. 3 Generalized Expectation Criteria Generalized expectation criteria (Mann and McCallum, 2008; Druck et al., 2008) are terms in a parameter estimation objective function that express a preference on the value of a model expectation. Let x represent input variables (i.e. a sentence) and y represent output variables (i.e. a parse tree). A generalized expectation term 9(λ) is defined by a constraint function G(y, x) that returns a non-ne</context>
</contexts>
<marker>Ganchev, Gillenwater, Taskar, 2009</marker>
<rawString>Kuzman Ganchev, Jennifer Gillenwater, and Ben Taskar. 2009. Dependency grammar induction via bitext projection constraints. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Haghighi</author>
<author>D Klein</author>
</authors>
<title>Prototype-driven grammar induction.</title>
<date>2006</date>
<booktitle>In COLING.</booktitle>
<contexts>
<context position="3648" citStr="Haghighi and Klein (2006)" startWordPosition="545" endWordPosition="548">pendency parsing is beyond the scope of this paper, we provide several promising demonstrations of the proposed method. On the English WSJ10 data set, GE training outperforms two prominent unsupervised methods using only 20 constraints either elicited from a human or provided by an “oracle” simulating a human. We also present experiments on longer sentences in Dutch, Spanish, and Turkish in which we obtain accuracy comparable to supervised learning with tens to hundreds of complete parsed sentences. 2 Related Work This work is closely related to the prototypedriven grammar induction method of Haghighi and Klein (2006), which uses prototype phrases to guide the EM algorithm in learning a PCFG. Direct comparison with this method is not possible because we are interested in dependency syntax rather than phrase structure syntax. However, the approach we advocate has several significant 360 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 360–368, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP advantages. GE is more general than prototypedriven learning because GE constraints can be uncertain. Additionally prototype-driven grammar induction needs to be used in c</context>
<context position="17732" citStr="Haghighi and Klein (2006)" startWordPosition="2914" endWordPosition="2917">otal count in the corpus. The expectation of g is then the probability that it indicates a true edge. 363 4 Linguistic Prior Knowledge Training parsers using GE with the aid of linguists is an exciting direction for future work. In this paper, we use constraints derived from several basic types of linguistic knowledge. One simple form of linguistic knowledge is the set of possible parent tags for a given child tag. This type of constraint was used in the development of a rule-based dependency parser (Debusmann et al., 2004). Additional information can be obtained from small grammar fragments. Haghighi and Klein (2006) provide a list of prototype phrase structure rules that can be augmented with dependencies and used to define constraints involving parent and child tags, surrounding or interposing tags, direction, and distance. Finally there are well known hypotheses about the direction and distance of attachments that can be used to define constraints. Eisner and Smith (2005) use the fact that short attachments are more common to improve unsupervised parsing accuracy. 4.1 “Oracle” constraints For some experiments that follow we use “oracle” constraints that are estimated from labeled data. This involves ch</context>
<context position="22566" citStr="Haghighi and Klein (2006)" startWordPosition="3722" endWordPosition="3725">re grouped according to heads, and are in the order they appear in the sentence, with the arrow pointing from head to modifier. We generate constraints in two ways. First, we use oracle constraints of the form (parentPOS,child-POS,direction) such that c(g) &gt; 200. We choose constraints in descending order of ,5(edge|g). The first 20 constraints selected using this method are displayed in Table 1. Although the reader can verify that the constraints in Table 1 are reasonable, we additionally experiment with human-provided constraints. We use the prototype phrase-structure constraints provided by Haghighi and Klein (2006), and with the aid of head-finding rules, extract 14 (parent-pos,child-pos,direction) constraints.7 We then estimated target expectations for these constraints using our prior knowledge, without looking at the training data. We also created a second constraint set with an additional six constraints for tag pairs that were previously underrepresented. 5.1 Results We present results varying the number of constraints in Figures 1 and 2. Figure 1 compares supervised and GE training of the CRF model, as well as the feature constraint baseline. First we note that GE training using the full feature s</context>
<context position="24247" citStr="Haghighi and Klein, 2006" startWordPosition="3997" endWordPosition="4000">y used a subset. 8The baseline eventually matches the accuracy of the restricted CRF but this is understandable because GE’s ability to bootstrap is greatly reduced with the restricted feature set. with unsupervised learning of the DMV model in Figure 29. Despite the fact that the restricted CRF is less expressive than DMV, GE training of this model outperforms EM with 30 constraints and CE with 50 constraints. GE training of the full CRF outperforms EM with 10 constraints and CE with 20 constraints (those displayed in Table 1). GE training of the full CRF with the set of 14 constraints from (Haghighi and Klein, 2006), gives accuracy of 53.8%, which is above the interpolated oracle constraints curve (43.5% accuracy with 10 constraints, 61.3% accuracy with 20 constraints). With the 6 additional constraints, we obtain accuracy of 57.7% and match CE. Recall that CE, EM, and the DMV model incorporate prior knowledge indirectly, and that the reported results are heavily-tuned ideal cases (see Section 2). In contrast, GE provides a method to directly encode intuitive linguistic insights. Finally, note that structural annealing (Smith and Eisner, 2006) provides 66.7% accuracy on WSJ10 when choosing the best perfo</context>
</contexts>
<marker>Haghighi, Klein, 2006</marker>
<rawString>A. Haghighi and D. Klein. 2006. Prototype-driven grammar induction. In COLING.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R J Kate</author>
<author>R J Mooney</author>
</authors>
<title>Semi-supervised learning for semantic parsing using support vector machines.</title>
<date>2007</date>
<booktitle>In HLT-NAACL (Short Papers).</booktitle>
<contexts>
<context position="4686" citStr="Kate and Mooney (2007)" startWordPosition="704" endWordPosition="707">CL and AFNLP advantages. GE is more general than prototypedriven learning because GE constraints can be uncertain. Additionally prototype-driven grammar induction needs to be used in conjunction with other unsupervised methods (distributional similarity and CCM (Klein and Manning, 2004)) to attain reasonable accuracy, and is only evaluated on length 10 or less sentences with no lexical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unlabeled corpus to estimate cluster features which help the parser generalize with fewer examples. Smith and Eisner (2007) apply entropy regularization to dependency parsing. The above methods can be applied to small seed corpora, but McDonald1 has criticized such methods as working from an unrealistic premise, as a significant amount </context>
</contexts>
<marker>Kate, Mooney, 2007</marker>
<rawString>R. J. Kate and R. J. Mooney. 2007. Semi-supervised learning for semantic parsing using support vector machines. In HLT-NAACL (Short Papers).</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Klein</author>
<author>C Manning</author>
</authors>
<title>Corpus-based induction of syntactic structure: Models of dependency and constituency.</title>
<date>2004</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="1874" citStr="Klein and Manning, 2004" startWordPosition="261" endWordPosition="264">the grammar from sentences explicitly annotated with their syntactic structure (Black et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., </context>
<context position="4351" citStr="Klein and Manning, 2004" startWordPosition="655" endWordPosition="658">rect comparison with this method is not possible because we are interested in dependency syntax rather than phrase structure syntax. However, the approach we advocate has several significant 360 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 360–368, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP advantages. GE is more general than prototypedriven learning because GE constraints can be uncertain. Additionally prototype-driven grammar induction needs to be used in conjunction with other unsupervised methods (distributional similarity and CCM (Klein and Manning, 2004)) to attain reasonable accuracy, and is only evaluated on length 10 or less sentences with no lexical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unl</context>
<context position="5916" citStr="Klein and Manning (2004)" startWordPosition="904" endWordPosition="907"> effort required to build a treebank comes in the first 100 sentences (both because of the time it takes to create an appropriate rubric and to train annotators). There are also a number of methods for unsupervised learning of dependency parsers. Klein and Manning (2004) use a carefully initialized and structured generative model (DMV) in conjunction with the EM algorithm to get the first positive results on unsupervised dependency parsing. As empirical evidence of the sensitivity of DMV to initialization, Smith (2006) (pg. 37) uses three different initializations, and only one, the method of Klein and Manning (2004), gives accuracy higher than 31% on the WSJ10 corpus (see Section 5). This initialization encodes the prior knowledge that long distance attachments are unlikely. Smith and Eisner (2005) develop contrastive estimation (CE), in which the model is encouraged to move probability mass away from implicit negative examples defined using a carefully chosen neighborhood function. For instance, Smith (2006) (pg. 82) uses eight different neighborhood functions to estimate parameters for the DMV model. The best performing neighborhood 1R. McDonald, personal communication, 2007 function DEL1ORTRANS1 provi</context>
<context position="19635" citStr="Klein and Manning, 2004" startWordPosition="3212" endWordPosition="3215">5, 11. This can be viewed as specifying that g is very indicative of edge, somewhat indicative of edge, etc. 5 Experimental Comparison with Unsupervised Learning In this section we compare GE training with methods for unsupervised parsing. We use the WSJ10 corpus (as processed by Smith (2006)), which is comprised of English sentences of ten words or fewer (after stripping punctuation) from the WSJ portion of the Penn Treebank. As in previous work sentences contain only part-of-speech tags. We compare GE and supervised training of an edge-factored CRF with unsupervised learning of a DMV model (Klein and Manning, 2004) using EM and contrastive estimation (CE) (Smith and Eisner, 2005). We also report the accuracy of an attach-right baseline6. Finally, we report the accuracy of a constraint baseline that assigns a score to each possible edge that is the sum of the target expectations for all constraints on that edge. Possible edges without constraints receive a score of 0. These scores are used as input to the maximum spanning tree algorithm, which returns the best tree. Note that this is a strong baseline because it can handle uncertain constraints, and the tree constraint imposed by the MST algorithm helps </context>
<context position="25638" citStr="Klein and Manning (2004)" startWordPosition="4219" endWordPosition="4223">of 67.0% with 30 constraints. 6 Experimental Comparison with Supervised Training on Long Sentences Unsupervised parsing methods are typically evaluated on short sentences, as in Section 5. In this section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. We use the standard train/test splits of the Spanish, Dutch, and Turkish data from the 2006 CoNLL Shared Task. We also use standard edge-factored feature templates (McDonald et al., 2005)10. We experiment with versions of the dat9Klein and Manning (2004) report 43.2% accuracy for DMV with EM on WSJ10. When jointly modeling constituency and dependencies, Klein and Manning (2004) report accuracy of 47.5%. Seginer (2007) and Bod (2006) propose unsupervised phrase structure parsing methods that give better unlabeled F-scores than DMV with EM, but they do not report directed dependency accuracy. 10Typical feature processing uses only supported features, or those features that occur on at least one true edge in the training data. Because we assume that the data is unlabeled, we instead use features on all possible edges. This generates tens of mill</context>
</contexts>
<marker>Klein, Manning, 2004</marker>
<rawString>D. Klein and C. Manning. 2004. Corpus-based induction of syntactic structure: Models of dependency and constituency. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Koo</author>
<author>X Carreras</author>
<author>M Collins</author>
</authors>
<title>Simple semisupervised dependency parsing.</title>
<date>2008</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="4935" citStr="Koo et al. (2008)" startWordPosition="746" endWordPosition="749">and CCM (Klein and Manning, 2004)) to attain reasonable accuracy, and is only evaluated on length 10 or less sentences with no lexical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unlabeled corpus to estimate cluster features which help the parser generalize with fewer examples. Smith and Eisner (2007) apply entropy regularization to dependency parsing. The above methods can be applied to small seed corpora, but McDonald1 has criticized such methods as working from an unrealistic premise, as a significant amount of the effort required to build a treebank comes in the first 100 sentences (both because of the time it takes to create an appropriate rubric and to train annotators). There are also a number of methods for unsupervised learning of dependency parse</context>
</contexts>
<marker>Koo, Carreras, Collins, 2008</marker>
<rawString>T. Koo, X. Carreras, and M. Collins. 2008. Simple semisupervised dependency parsing. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Lafferty</author>
<author>A McCallum</author>
<author>F Pereira</author>
</authors>
<title>Conditional random fields: Probabilistic models for segmenting and labeling sequence data.</title>
<date>2001</date>
<booktitle>In ICML.</booktitle>
<contexts>
<context position="2479" citStr="Lafferty et al., 2001" startWordPosition="349" endWordPosition="353">and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectation. For example, we know that “in English, when a determiner is directly to the left of a noun, the noun is usually the parent of the determiner”. With GE we may add a term to the objective function that encourages a feature-rich CRF to match this expectation on unlabeled data, and in the process learn about related features. In this paper we use a non-projective dependency tree CRF (Smith and Smith, 2007). While a complete exploration of linguistic prior knowledge for dependency parsing is beyond the scope of this paper, we p</context>
<context position="9293" citStr="Lafferty et al., 2001" startWordPosition="1442" endWordPosition="1445">ifying the from of the constraint function G and the target expectation G. 361 Importantly, G does not need to match a particular feature in the underlying model. The complete objective function2 includes multiple GE terms and a prior on parameters3, p(λ) O(λ; D) = p(λ) + � 9(λ) � GE has been applied to logistic regression models (Mann and McCallum, 2007; Druck et al., 2008) and linear chain CRFs (Mann and McCallum, 2008). In the following sections we apply GE to non-projective CRF dependency parsing. 3.1 GE in General CRFs We first consider an arbitrarily structured conditional random field (Lafferty et al., 2001) pλ(y|x). We describe the CRF for non-projective dependency parsing in Section 3.2. The probability of an output y conditioned on an input x is pλ(y|x) = 1Z exp M x j )λjFj(y, x) , where Fj are feature functions over the cliques of the graphical model and Z(x) is a normalizing constant that ensures pλ(y|x) sums to 1. We are interested in the expectation of constraint function G(x, y) under this model. We abbreviate this model expectation as: Gλ = EP(x)[Epλ(y|x)[G(y, x)]] It can be shown that partial derivative of 9(λ) using Ssq4 with respect to model parameter λj is ∂λj ∂ 9(λ) = 2( G˜ − Gλ) (2</context>
</contexts>
<marker>Lafferty, McCallum, Pereira, 2001</marker>
<rawString>J. Lafferty, A. McCallum, and F. Pereira. 2001. Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In ICML.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Mann</author>
<author>A McCallum</author>
</authors>
<title>Simple, robust, scalable semi-supervised learning via expectation regularization.</title>
<date>2007</date>
<booktitle>In ICML.</booktitle>
<contexts>
<context position="9027" citStr="Mann and McCallum, 2007" startWordPosition="1398" endWordPosition="1401">(y|x)[G(y, x)]]). In this paper, we use a score function that is the squared difference of the model expectation of G and some target expectation G: Syq = −( G� − E�p(x)[Epa(y|x)[G(y, x)]])2 (1) We can incorporate prior knowledge into the training of p),(y|x) by specifying the from of the constraint function G and the target expectation G. 361 Importantly, G does not need to match a particular feature in the underlying model. The complete objective function2 includes multiple GE terms and a prior on parameters3, p(λ) O(λ; D) = p(λ) + � 9(λ) � GE has been applied to logistic regression models (Mann and McCallum, 2007; Druck et al., 2008) and linear chain CRFs (Mann and McCallum, 2008). In the following sections we apply GE to non-projective CRF dependency parsing. 3.1 GE in General CRFs We first consider an arbitrarily structured conditional random field (Lafferty et al., 2001) pλ(y|x). We describe the CRF for non-projective dependency parsing in Section 3.2. The probability of an output y conditioned on an input x is pλ(y|x) = 1Z exp M x j )λjFj(y, x) , where Fj are feature functions over the cliques of the graphical model and Z(x) is a normalizing constant that ensures pλ(y|x) sums to 1. We are interest</context>
</contexts>
<marker>Mann, McCallum, 2007</marker>
<rawString>G. Mann and A. McCallum. 2007. Simple, robust, scalable semi-supervised learning via expectation regularization. In ICML.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Mann</author>
<author>A McCallum</author>
</authors>
<title>Generalized expectation criteria for semi-supervised learning of conditional random fields.</title>
<date>2008</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="2313" citStr="Mann and McCallum, 2008" startWordPosition="323" endWordPosition="326">acy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectation. For example, we know that “in English, when a determiner is directly to the left of a noun, the noun is usually the parent of the determiner”. With GE we may add a term to the objective function that encourages a feature-rich CRF to match this expectation on unlabeled data, and in the process learn about related features. In this paper we use a non-projective </context>
<context position="7859" citStr="Mann and McCallum, 2008" startWordPosition="1195" endWordPosition="1199"> Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses posterior constrained EM to learn a projective target language parser using only a source language parser and word alignments. 3 Generalized Expectation Criteria Generalized expectation criteria (Mann and McCallum, 2008; Druck et al., 2008) are terms in a parameter estimation objective function that express a preference on the value of a model expectation. Let x represent input variables (i.e. a sentence) and y represent output variables (i.e. a parse tree). A generalized expectation term 9(λ) is defined by a constraint function G(y, x) that returns a non-negative real value given input and output variables, an empirical distribution 5(x) over input variables (i.e. unlabeled data), a model distribution p),(y|x), and a score function S: 9(λ) = S(EP(x)[Epa(y|x)[G(y, x)]]). In this paper, we use a score functio</context>
<context position="9096" citStr="Mann and McCallum, 2008" startWordPosition="1410" endWordPosition="1414"> squared difference of the model expectation of G and some target expectation G: Syq = −( G� − E�p(x)[Epa(y|x)[G(y, x)]])2 (1) We can incorporate prior knowledge into the training of p),(y|x) by specifying the from of the constraint function G and the target expectation G. 361 Importantly, G does not need to match a particular feature in the underlying model. The complete objective function2 includes multiple GE terms and a prior on parameters3, p(λ) O(λ; D) = p(λ) + � 9(λ) � GE has been applied to logistic regression models (Mann and McCallum, 2007; Druck et al., 2008) and linear chain CRFs (Mann and McCallum, 2008). In the following sections we apply GE to non-projective CRF dependency parsing. 3.1 GE in General CRFs We first consider an arbitrarily structured conditional random field (Lafferty et al., 2001) pλ(y|x). We describe the CRF for non-projective dependency parsing in Section 3.2. The probability of an output y conditioned on an input x is pλ(y|x) = 1Z exp M x j )λjFj(y, x) , where Fj are feature functions over the cliques of the graphical model and Z(x) is a normalizing constant that ensures pλ(y|x) sums to 1. We are interested in the expectation of constraint function G(x, y) under this model</context>
</contexts>
<marker>Mann, McCallum, 2008</marker>
<rawString>G. Mann and A. McCallum. 2008. Generalized expectation criteria for semi-supervised learning of conditional random fields. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D McClosky</author>
<author>E Charniak</author>
<author>M Johnson</author>
</authors>
<title>Effective self-training for parsing.</title>
<date>2006</date>
<booktitle>In HLT-NAACL.</booktitle>
<contexts>
<context position="4713" citStr="McClosky et al. (2006)" startWordPosition="709" endWordPosition="712"> is more general than prototypedriven learning because GE constraints can be uncertain. Additionally prototype-driven grammar induction needs to be used in conjunction with other unsupervised methods (distributional similarity and CCM (Klein and Manning, 2004)) to attain reasonable accuracy, and is only evaluated on length 10 or less sentences with no lexical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unlabeled corpus to estimate cluster features which help the parser generalize with fewer examples. Smith and Eisner (2007) apply entropy regularization to dependency parsing. The above methods can be applied to small seed corpora, but McDonald1 has criticized such methods as working from an unrealistic premise, as a significant amount of the effort required to b</context>
</contexts>
<marker>McClosky, Charniak, Johnson, 2006</marker>
<rawString>D. McClosky, E. Charniak, and M. Johnson. 2006. Effective self-training for parsing. In HLT-NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryan McDonald</author>
<author>Giorgio Satta</author>
</authors>
<title>On the complexity of non-projective data-driven dependency parsing.</title>
<date>2007</date>
<booktitle>In Proc. of IWPT,</booktitle>
<pages>121--132</pages>
<contexts>
<context position="12550" citStr="McDonald and Satta, 2007" startWordPosition="2003" endWordPosition="2006">ture functions that consider the child input (word, tag, or other feature), the parent input, and the rest of the sentence. This factorization implies that dependency decisions are independent conditioned on the input sentence x if y is a tree. Computing Zx and the edge expectations needed for partial derivatives requires summing over all possible trees for x. By relating the sum of the scores of all possible trees to counting the number of spanning trees in a graph, it can be shown that Zx is the determinant of the Kirchoff matrix K, which is constructed us.ing the scores of possible edges. (McDonald and Satta, 2007; Smith and Smith, 2007). Computing the determinant takes O(n3) time, where n is the length of the sentence. To compute the marginal probability of a particular edge k —* i (i.e. yi =k), the score of any edge k&apos; —* i such that k&apos; =� k is set to 0. The determinant of the resulting modified Kirchoff matrix Kk,i is then the sum of the scores of all trees that include the edge k —* i. The 362 marginal p(yi =k|x; θ) can be computed by dividing this score by Zx (McDonald and Satta, 2007). Computing all edge expectations with this algorithm takes O(n5) time. Smith and Smith (2007) describe a more eff</context>
<context position="20617" citStr="McDonald and Satta, 2007" startWordPosition="3377" endWordPosition="3381">0. These scores are used as input to the maximum spanning tree algorithm, which returns the best tree. Note that this is a strong baseline because it can handle uncertain constraints, and the tree constraint imposed by the MST algorithm helps information propagate across edges. We note that there are considerable differences between the DMV and CRF models. The DMV model is more expressive than the CRF because it can model the arity of a head as well as sibling relationships. Because these features consider multiple edges, including them in the CRF model would make exact inference intractable (McDonald and Satta, 2007). However, the CRF may consider the distance between head and child, whereas DMV does not model distance. The CRF also models non-projective trees, which when evaluating on English is likely a disadvantage. Consequently, we experiment with two sets of features for the CRF model. The first, restricted set includes features that consider the head and child tags of the dependency conjoined with the direction of the attachment, (parent-POS,childPOS,direction). With this feature set, the CRF model is less expressive than DMV. The second full set includes standard features for edgefactored dependenc</context>
</contexts>
<marker>McDonald, Satta, 2007</marker>
<rawString>Ryan McDonald and Giorgio Satta. 2007. On the complexity of non-projective data-driven dependency parsing. In Proc. of IWPT, pages 121–132.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryan McDonald</author>
<author>Koby Crammer</author>
<author>Fernando Pereira</author>
</authors>
<title>Online large-margin training of dependency parsers.</title>
<date>2005</date>
<booktitle>In ACL,</booktitle>
<pages>91--98</pages>
<contexts>
<context position="21250" citStr="McDonald et al., 2005" startWordPosition="3478" endWordPosition="3481">the CRF may consider the distance between head and child, whereas DMV does not model distance. The CRF also models non-projective trees, which when evaluating on English is likely a disadvantage. Consequently, we experiment with two sets of features for the CRF model. The first, restricted set includes features that consider the head and child tags of the dependency conjoined with the direction of the attachment, (parent-POS,childPOS,direction). With this feature set, the CRF model is less expressive than DMV. The second full set includes standard features for edgefactored dependency parsers (McDonald et al., 2005), though still unlexicalized. The CRF cannot consider valency even with the full feature set, but this is balanced by the ability to use distance. 6The reported accuracies with the DMV model and the attach-right baseline are taken from (Smith, 2006). ��cedge(g) = � (x,y)ED i �p(edge|g) = �cedge(g) c(g) 364 feature ex. feature ex. MD → VB 1.00 NNS ← VBD 0.75 POS ← NN 0.75 PRP ← VBD 0.75 JJ ← NNS 0.75 VBD → TO 1.00 NNP ← POS 0.75 VBD → VBN 0.75 ROOT → MD 0.75 NNS ← VBP 0.75 ROOT → VBD 1.00 PRP ← VBP 0.75 ROOT → VBP 0.75 VBP → VBN 0.75 ROOT → VBZ 0.75 PRP ← VBZ 0.75 TO → VB 1.00 NN ← VBZ 0.75 VBN</context>
<context position="25571" citStr="McDonald et al., 2005" startWordPosition="4209" endWordPosition="4212">cy as low as 32.5%. GE training of the full CRF attains accuracy of 67.0% with 30 constraints. 6 Experimental Comparison with Supervised Training on Long Sentences Unsupervised parsing methods are typically evaluated on short sentences, as in Section 5. In this section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. We use the standard train/test splits of the Spanish, Dutch, and Turkish data from the 2006 CoNLL Shared Task. We also use standard edge-factored feature templates (McDonald et al., 2005)10. We experiment with versions of the dat9Klein and Manning (2004) report 43.2% accuracy for DMV with EM on WSJ10. When jointly modeling constituency and dependencies, Klein and Manning (2004) report accuracy of 47.5%. Seginer (2007) and Bod (2006) propose unsupervised phrase structure parsing methods that give better unlabeled F-scores than DMV with EM, but they do not report directed dependency accuracy. 10Typical feature processing uses only supported features, or those features that occur on at least one true edge in the training data. Because we assume that the data is unlabeled, we inst</context>
<context position="27923" citStr="McDonald et al., 2005" startWordPosition="4604" endWordPosition="4607">ted by the linguistic prior knowledge described in Section 4. The first set of constraints specify the most frequent head tag, attachment direction, and distance combinations for each child tag. Specifically, we select oracle constraints of the type (parent-CPOS,child-CPOS,direction,distance)11. We add constraints for every g such that �cedge(g) &gt; 100 for max length 60 data sets, and �cedge(g)&gt;10 times for max length 20 data sets. In some cases, the possible parent constraints described above will not be enough to provide high accuracy, because they do not consider other tags in the sentence (McDonald et al., 2005). Consequently, we experiment with adding an additional 25 sequence constraints (for what are often called “between” and “surrounding” features). The oracle feature selection method aims to choose such constraints that help to reduce uncertainty in the possible parents constraint set. Consequently, we consider sequence features gs with p(edge|gs =1) &gt; 0.75, and whose corresponding (parent-CPOS,child-CPOS,direction,distance) constraint g, has edge probability 5(edge|g) &lt; 0.25. Among these candidates, we sort by c(gs =1), and select the top 25. We compare with the constraint baseline described i</context>
</contexts>
<marker>McDonald, Crammer, Pereira, 2005</marker>
<rawString>Ryan McDonald, Koby Crammer, and Fernando Pereira. 2005. Online large-margin training of dependency parsers. In ACL, pages 91–98.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Quirk</author>
<author>S Greenbaum</author>
<author>G Leech</author>
<author>J Svartvik</author>
</authors>
<date>1985</date>
<journal>A Comprehensive Grammar of the English Language. Longman.</journal>
<contexts>
<context position="1196" citStr="Quirk et al., 1985" startWordPosition="162" endWordPosition="165">nt is often a verb). Model parameters are estimated using a generalized expectation (GE) objective function that penalizes the mismatch between model predictions and linguistic expectation constraints. In a comparison with two prominent “unsupervised” learning methods that require indirect biasing toward the correct syntactic structure, we show that GE can attain better accuracy with as few as 20 intuitive constraints. We also present positive experimental results on longer sentences in multiple languages. 1 Introduction Early approaches to parsing assumed a grammar provided by human experts (Quirk et al., 1985). Later approaches avoided grammar writing by learning the grammar from sentences explicitly annotated with their syntactic structure (Black et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervis</context>
</contexts>
<marker>Quirk, Greenbaum, Leech, Svartvik, 1985</marker>
<rawString>R. Quirk, S. Greenbaum, G. Leech, and J. Svartvik. 1985. A Comprehensive Grammar of the English Language. Longman.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yoav Seginer</author>
</authors>
<title>Fast unsupervised incremental parsing.</title>
<date>2007</date>
<booktitle>In ACL,</booktitle>
<pages>384--391</pages>
<location>Prague, Czech Republic.</location>
<contexts>
<context position="1948" citStr="Seginer, 2007" startWordPosition="273" endWordPosition="274">k et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectatio</context>
<context position="7251" citStr="Seginer (2007)" startWordPosition="1106" endWordPosition="1107">ning six neighborhood functions provide accuracy below 50%. This demonstrates that constructing an appropriate neighborhood function can be delicate and challenging. Smith and Eisner (2006) propose structural annealing (SA), in which a strong bias for local dependency attachments is enforced early in learning, and then gradually relaxed. This method is sensitive to the annealing schedule. Smith (2006) (pg. 136) use 10 annealing schedules in conjunction with three initializers. The best performing combination attains accuracy of 66.7% on WSJ10, but the worst attains accuracy of 32.5%. Finally, Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses posterior constrained EM to learn a projective target language parser using only a source language parser and word alignments. 3 Generalized Expectation Criteria Generalized expectation criteria (Mann and McCall</context>
<context position="25805" citStr="Seginer (2007)" startWordPosition="4249" endWordPosition="4250"> Section 5. In this section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. We use the standard train/test splits of the Spanish, Dutch, and Turkish data from the 2006 CoNLL Shared Task. We also use standard edge-factored feature templates (McDonald et al., 2005)10. We experiment with versions of the dat9Klein and Manning (2004) report 43.2% accuracy for DMV with EM on WSJ10. When jointly modeling constituency and dependencies, Klein and Manning (2004) report accuracy of 47.5%. Seginer (2007) and Bod (2006) propose unsupervised phrase structure parsing methods that give better unlabeled F-scores than DMV with EM, but they do not report directed dependency accuracy. 10Typical feature processing uses only supported features, or those features that occur on at least one true edge in the training data. Because we assume that the data is unlabeled, we instead use features on all possible edges. This generates tens of millions features, so we prune those features that occur fewer than 10 total times, as in (Smith and Eisner, 2007). 365 number of constraints Figure 1: Comparison of the c</context>
</contexts>
<marker>Seginer, 2007</marker>
<rawString>Yoav Seginer. 2007. Fast unsupervised incremental parsing. In ACL, pages 384–391, Prague, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noah A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Contrastive estimation: training log-linear models on unlabeled data. In</title>
<date>2005</date>
<booktitle>ACL,</booktitle>
<pages>354--362</pages>
<contexts>
<context position="6102" citStr="Smith and Eisner (2005)" startWordPosition="932" endWordPosition="935">of methods for unsupervised learning of dependency parsers. Klein and Manning (2004) use a carefully initialized and structured generative model (DMV) in conjunction with the EM algorithm to get the first positive results on unsupervised dependency parsing. As empirical evidence of the sensitivity of DMV to initialization, Smith (2006) (pg. 37) uses three different initializations, and only one, the method of Klein and Manning (2004), gives accuracy higher than 31% on the WSJ10 corpus (see Section 5). This initialization encodes the prior knowledge that long distance attachments are unlikely. Smith and Eisner (2005) develop contrastive estimation (CE), in which the model is encouraged to move probability mass away from implicit negative examples defined using a carefully chosen neighborhood function. For instance, Smith (2006) (pg. 82) uses eight different neighborhood functions to estimate parameters for the DMV model. The best performing neighborhood 1R. McDonald, personal communication, 2007 function DEL1ORTRANS1 provides accuracy of 57.6% on WSJ10 (see Section 5). Another neighborhood, DEL1ORTRANS2, provides accuracy of 51.2%. The remaining six neighborhood functions provide accuracy below 50%. This </context>
<context position="19701" citStr="Smith and Eisner, 2005" startWordPosition="3222" endWordPosition="3225">f edge, somewhat indicative of edge, etc. 5 Experimental Comparison with Unsupervised Learning In this section we compare GE training with methods for unsupervised parsing. We use the WSJ10 corpus (as processed by Smith (2006)), which is comprised of English sentences of ten words or fewer (after stripping punctuation) from the WSJ portion of the Penn Treebank. As in previous work sentences contain only part-of-speech tags. We compare GE and supervised training of an edge-factored CRF with unsupervised learning of a DMV model (Klein and Manning, 2004) using EM and contrastive estimation (CE) (Smith and Eisner, 2005). We also report the accuracy of an attach-right baseline6. Finally, we report the accuracy of a constraint baseline that assigns a score to each possible edge that is the sum of the target expectations for all constraints on that edge. Possible edges without constraints receive a score of 0. These scores are used as input to the maximum spanning tree algorithm, which returns the best tree. Note that this is a strong baseline because it can handle uncertain constraints, and the tree constraint imposed by the MST algorithm helps information propagate across edges. We note that there are conside</context>
</contexts>
<marker>Smith, Eisner, 2005</marker>
<rawString>Noah A. Smith and Jason Eisner. 2005. Contrastive estimation: training log-linear models on unlabeled data. In ACL, pages 354–362.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noah A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Annealing structural bias in multilingual weighted grammar induction.</title>
<date>2006</date>
<booktitle>In COLING-ACL,</booktitle>
<pages>569--576</pages>
<contexts>
<context position="6826" citStr="Smith and Eisner (2006)" startWordPosition="1037" endWordPosition="1040">from implicit negative examples defined using a carefully chosen neighborhood function. For instance, Smith (2006) (pg. 82) uses eight different neighborhood functions to estimate parameters for the DMV model. The best performing neighborhood 1R. McDonald, personal communication, 2007 function DEL1ORTRANS1 provides accuracy of 57.6% on WSJ10 (see Section 5). Another neighborhood, DEL1ORTRANS2, provides accuracy of 51.2%. The remaining six neighborhood functions provide accuracy below 50%. This demonstrates that constructing an appropriate neighborhood function can be delicate and challenging. Smith and Eisner (2006) propose structural annealing (SA), in which a strong bias for local dependency attachments is enforced early in learning, and then gradually relaxed. This method is sensitive to the annealing schedule. Smith (2006) (pg. 136) use 10 annealing schedules in conjunction with three initializers. The best performing combination attains accuracy of 66.7% on WSJ10, but the worst attains accuracy of 32.5%. Finally, Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain k</context>
<context position="24785" citStr="Smith and Eisner, 2006" startWordPosition="4081" endWordPosition="4084">aining of the full CRF with the set of 14 constraints from (Haghighi and Klein, 2006), gives accuracy of 53.8%, which is above the interpolated oracle constraints curve (43.5% accuracy with 10 constraints, 61.3% accuracy with 20 constraints). With the 6 additional constraints, we obtain accuracy of 57.7% and match CE. Recall that CE, EM, and the DMV model incorporate prior knowledge indirectly, and that the reported results are heavily-tuned ideal cases (see Section 2). In contrast, GE provides a method to directly encode intuitive linguistic insights. Finally, note that structural annealing (Smith and Eisner, 2006) provides 66.7% accuracy on WSJ10 when choosing the best performing annealing schedule (Smith, 2006). As noted in Section 2 other annealing schedules provide accuracy as low as 32.5%. GE training of the full CRF attains accuracy of 67.0% with 30 constraints. 6 Experimental Comparison with Supervised Training on Long Sentences Unsupervised parsing methods are typically evaluated on short sentences, as in Section 5. In this section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. W</context>
</contexts>
<marker>Smith, Eisner, 2006</marker>
<rawString>Noah A. Smith and Jason Eisner. 2006. Annealing structural bias in multilingual weighted grammar induction. In COLING-ACL, pages 569–576.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Bootstrapping feature-rich dependency parsers with entropic priors.</title>
<date>2007</date>
<booktitle>In EMNLP-CoNLL,</booktitle>
<pages>667--677</pages>
<contexts>
<context position="5071" citStr="Smith and Eisner (2007)" startWordPosition="768" endWordPosition="771">ical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unlabeled corpus to estimate cluster features which help the parser generalize with fewer examples. Smith and Eisner (2007) apply entropy regularization to dependency parsing. The above methods can be applied to small seed corpora, but McDonald1 has criticized such methods as working from an unrealistic premise, as a significant amount of the effort required to build a treebank comes in the first 100 sentences (both because of the time it takes to create an appropriate rubric and to train annotators). There are also a number of methods for unsupervised learning of dependency parsers. Klein and Manning (2004) use a carefully initialized and structured generative model (DMV) in conjunction with the EM algorithm to g</context>
<context position="26348" citStr="Smith and Eisner, 2007" startWordPosition="4337" endWordPosition="4340"> dependencies, Klein and Manning (2004) report accuracy of 47.5%. Seginer (2007) and Bod (2006) propose unsupervised phrase structure parsing methods that give better unlabeled F-scores than DMV with EM, but they do not report directed dependency accuracy. 10Typical feature processing uses only supported features, or those features that occur on at least one true edge in the training data. Because we assume that the data is unlabeled, we instead use features on all possible edges. This generates tens of millions features, so we prune those features that occur fewer than 10 total times, as in (Smith and Eisner, 2007). 365 number of constraints Figure 1: Comparison of the constraint baseline and both GE and supervised training of the restricted and full CRF. Note that supervised training uses 5,301 parsed sentences. GE with human provided constraints closely matches the oracle results. number of constraints Figure 2: Comparison of GE training of the restricted and full CRFs with unsupervised learning of DMV. GE training of the full CRF outperforms CE with just 20 constraints. GE also matches CE with 20 human provided constraints. 90 80 70 60 50 constraint baseline CRF restricted supervised CRF supervised C</context>
</contexts>
<marker>Smith, Eisner, 2007</marker>
<rawString>David A. Smith and Jason Eisner. 2007. Bootstrapping feature-rich dependency parsers with entropic priors. In EMNLP-CoNLL, pages 667–677.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Smith</author>
<author>Jason Eisner</author>
</authors>
<title>Dependency parsing by belief propagation.</title>
<date>2008</date>
<booktitle>In EMNLP.</booktitle>
<contexts>
<context position="17056" citStr="Smith and Eisner, 2008" startWordPosition="2798" endWordPosition="2801">ovariance over possible parents for a single word, and the third term accounts for cycles. Computing the above takes O(n3) time, the time required to compute single edge marginals. In this paper, we use the O(n5) exact method, though we find that the accuracy attained by approximate training is usually within 5% of the exact method. If G is not edge-factored, then we need to compute a marginal over three or more edges, making exact training intractable. An appealing alternative to a similar approximation to the above would use loopy belief propagation to efficiently approximate the marginals (Smith and Eisner, 2008). In this paper g is binary and normalized by its total count in the corpus. The expectation of g is then the probability that it indicates a true edge. 363 4 Linguistic Prior Knowledge Training parsers using GE with the aid of linguists is an exciting direction for future work. In this paper, we use constraints derived from several basic types of linguistic knowledge. One simple form of linguistic knowledge is the set of possible parent tags for a given child tag. This type of constraint was used in the development of a rule-based dependency parser (Debusmann et al., 2004). Additional informa</context>
</contexts>
<marker>Smith, Eisner, 2008</marker>
<rawString>David A. Smith and Jason Eisner. 2008. Dependency parsing by belief propagation. In EMNLP.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David A Smith</author>
<author>Noah A Smith</author>
</authors>
<title>Probabilistic models of nonprojective dependency trees.</title>
<date>2007</date>
<booktitle>In EMNLPCoNLL,</booktitle>
<pages>132--140</pages>
<contexts>
<context position="2956" citStr="Smith and Smith, 2007" startWordPosition="437" endWordPosition="440"> is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE criteria express a preference on the value of a model expectation. For example, we know that “in English, when a determiner is directly to the left of a noun, the noun is usually the parent of the determiner”. With GE we may add a term to the objective function that encourages a feature-rich CRF to match this expectation on unlabeled data, and in the process learn about related features. In this paper we use a non-projective dependency tree CRF (Smith and Smith, 2007). While a complete exploration of linguistic prior knowledge for dependency parsing is beyond the scope of this paper, we provide several promising demonstrations of the proposed method. On the English WSJ10 data set, GE training outperforms two prominent unsupervised methods using only 20 constraints either elicited from a human or provided by an “oracle” simulating a human. We also present experiments on longer sentences in Dutch, Spanish, and Turkish in which we obtain accuracy comparable to supervised learning with tens to hundreds of complete parsed sentences. 2 Related Work This work is </context>
<context position="12574" citStr="Smith and Smith, 2007" startWordPosition="2007" endWordPosition="2010">er the child input (word, tag, or other feature), the parent input, and the rest of the sentence. This factorization implies that dependency decisions are independent conditioned on the input sentence x if y is a tree. Computing Zx and the edge expectations needed for partial derivatives requires summing over all possible trees for x. By relating the sum of the scores of all possible trees to counting the number of spanning trees in a graph, it can be shown that Zx is the determinant of the Kirchoff matrix K, which is constructed us.ing the scores of possible edges. (McDonald and Satta, 2007; Smith and Smith, 2007). Computing the determinant takes O(n3) time, where n is the length of the sentence. To compute the marginal probability of a particular edge k —* i (i.e. yi =k), the score of any edge k&apos; —* i such that k&apos; =� k is set to 0. The determinant of the resulting modified Kirchoff matrix Kk,i is then the sum of the scores of all trees that include the edge k —* i. The 362 marginal p(yi =k|x; θ) can be computed by dividing this score by Zx (McDonald and Satta, 2007). Computing all edge expectations with this algorithm takes O(n5) time. Smith and Smith (2007) describe a more efficient algorithm that ca</context>
<context position="14407" citStr="Smith and Smith (2007)" startWordPosition="2337" endWordPosition="2340">e that the model pa is still edge-factored. The sum of the scores of all trees that contain edges k —* i and k0 —* i0 can be computed by setting the scores of edges j —* i such that j =� k and j0 —* i0 such that j0 =� k0 to 0, and computing the determinant of the resulting modified Kirchoff matrix Kk→i,k0→i0. There are O(n4) pairs of possible edges, and the determinant computation takes time O(n3), so this naive algorithm takes O(n7) time. An improved algorithm computes, for each possible edge k —* i, a modified Kirchoff matrix Kk→i that requires the presence of that edge. Then, the method of Smith and Smith (2007) can be used to compute the probability of every possible edge conditioned on the presence of k —* i, pa(yi0 = k0|yi = k, x), using K−1 k→i. Multiplying this probability by pa(yi=k|x) yields the desired two edge marginal. Because this algorithm pulls the O(n3) matrix operation out of the inner loop over edges, the run time is reduced to O(n5). If it were possible to perform only one O(n3) matrix operation per sentence, then the gradient computation would take only O(n4) time, the time required to consider all pairs of edges. Unfortunately, there is no straightforward generalization of the meth</context>
</contexts>
<marker>Smith, Smith, 2007</marker>
<rawString>David A. Smith and Noah A. Smith. 2007. Probabilistic models of nonprojective dependency trees. In EMNLPCoNLL, pages 132–140.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noah A Smith</author>
</authors>
<title>Novel Estimation Methods for Unsupervised Discovery of Latent Structure in Natural Language Text.</title>
<date>2006</date>
<tech>Ph.D. thesis,</tech>
<institution>Johns Hopkins University.</institution>
<contexts>
<context position="1888" citStr="Smith, 2006" startWordPosition="265" endWordPosition="266">s explicitly annotated with their syntactic structure (Black et al., 1992). While such supervised approaches have yielded accurate parsers (Charniak, 2001), the syntactic annotation of corpora such as the Penn Treebank is extremely costly, and consequently there are few treebanks of comparable size. As a result, there has been recent interest in unsupervised parsing. However, in order to attain reasonable accuracy, these methods have to be carefully biased towards the desired syntactic structure. This weak supervision has been encoded using priors and initializations (Klein and Manning, 2004; Smith, 2006), specialized models (Klein and Manning, 2004; Seginer, 2007; Bod, 2006), and implicit negative evidence (Smith, 2006). These indirect methods for leveraging prior knowledge can be cumbersome and unintuitive for a non-machine-learning expert. This paper proposes a method for directly guiding the learning of dependency parsers with naturally encoded linguistic insights. Generalized expectation (GE) (Mann and McCallum, 2008; Druck et al., 2008) is a recently proposed framework for incorporating prior knowledge into the learning of conditional random fields (CRFs) (Lafferty et al., 2001). GE crit</context>
<context position="5816" citStr="Smith (2006)" startWordPosition="889" endWordPosition="890">ized such methods as working from an unrealistic premise, as a significant amount of the effort required to build a treebank comes in the first 100 sentences (both because of the time it takes to create an appropriate rubric and to train annotators). There are also a number of methods for unsupervised learning of dependency parsers. Klein and Manning (2004) use a carefully initialized and structured generative model (DMV) in conjunction with the EM algorithm to get the first positive results on unsupervised dependency parsing. As empirical evidence of the sensitivity of DMV to initialization, Smith (2006) (pg. 37) uses three different initializations, and only one, the method of Klein and Manning (2004), gives accuracy higher than 31% on the WSJ10 corpus (see Section 5). This initialization encodes the prior knowledge that long distance attachments are unlikely. Smith and Eisner (2005) develop contrastive estimation (CE), in which the model is encouraged to move probability mass away from implicit negative examples defined using a carefully chosen neighborhood function. For instance, Smith (2006) (pg. 82) uses eight different neighborhood functions to estimate parameters for the DMV model. The</context>
<context position="7041" citStr="Smith (2006)" startWordPosition="1074" endWordPosition="1075">ing neighborhood 1R. McDonald, personal communication, 2007 function DEL1ORTRANS1 provides accuracy of 57.6% on WSJ10 (see Section 5). Another neighborhood, DEL1ORTRANS2, provides accuracy of 51.2%. The remaining six neighborhood functions provide accuracy below 50%. This demonstrates that constructing an appropriate neighborhood function can be delicate and challenging. Smith and Eisner (2006) propose structural annealing (SA), in which a strong bias for local dependency attachments is enforced early in learning, and then gradually relaxed. This method is sensitive to the annealing schedule. Smith (2006) (pg. 136) use 10 annealing schedules in conjunction with three initializers. The best performing combination attains accuracy of 66.7% on WSJ10, but the worst attains accuracy of 32.5%. Finally, Seginer (2007) and Bod (2006) approach unsupervised parsing by constructing novel syntactic models. The development and tuning of the above methods constitute the encoding of prior domain knowledge about the desired syntactic structure. In contrast, our framework provides a straightforward and explicit method for incorporating prior knowledge. Ganchev et al. (2009) propose a related method that uses p</context>
<context position="19304" citStr="Smith (2006)" startWordPosition="3162" endWordPosition="3163">) Constraint functions are selected according to some combination of the above statistics. In some cases we additionally prune the candidate set by considering only certain templates. To compute the target expectation, we simply use bin(p(edge|g)), where bin returns the closest value in the set 10, 0.1, 0.25, 0.5, 0.75, 11. This can be viewed as specifying that g is very indicative of edge, somewhat indicative of edge, etc. 5 Experimental Comparison with Unsupervised Learning In this section we compare GE training with methods for unsupervised parsing. We use the WSJ10 corpus (as processed by Smith (2006)), which is comprised of English sentences of ten words or fewer (after stripping punctuation) from the WSJ portion of the Penn Treebank. As in previous work sentences contain only part-of-speech tags. We compare GE and supervised training of an edge-factored CRF with unsupervised learning of a DMV model (Klein and Manning, 2004) using EM and contrastive estimation (CE) (Smith and Eisner, 2005). We also report the accuracy of an attach-right baseline6. Finally, we report the accuracy of a constraint baseline that assigns a score to each possible edge that is the sum of the target expectations </context>
<context position="21499" citStr="Smith, 2006" startWordPosition="3521" endWordPosition="3522">RF model. The first, restricted set includes features that consider the head and child tags of the dependency conjoined with the direction of the attachment, (parent-POS,childPOS,direction). With this feature set, the CRF model is less expressive than DMV. The second full set includes standard features for edgefactored dependency parsers (McDonald et al., 2005), though still unlexicalized. The CRF cannot consider valency even with the full feature set, but this is balanced by the ability to use distance. 6The reported accuracies with the DMV model and the attach-right baseline are taken from (Smith, 2006). ��cedge(g) = � (x,y)ED i �p(edge|g) = �cedge(g) c(g) 364 feature ex. feature ex. MD → VB 1.00 NNS ← VBD 0.75 POS ← NN 0.75 PRP ← VBD 0.75 JJ ← NNS 0.75 VBD → TO 1.00 NNP ← POS 0.75 VBD → VBN 0.75 ROOT → MD 0.75 NNS ← VBP 0.75 ROOT → VBD 1.00 PRP ← VBP 0.75 ROOT → VBP 0.75 VBP → VBN 0.75 ROOT → VBZ 0.75 PRP ← VBZ 0.75 TO → VB 1.00 NN ← VBZ 0.75 VBN → IN 0.75 VBZ → VBN 0.75 Table 1: 20 constraints that give 61.3% accuracy on WSJ10. Tags are grouped according to heads, and are in the order they appear in the sentence, with the arrow pointing from head to modifier. We generate constraints in two</context>
<context position="24885" citStr="Smith, 2006" startWordPosition="4098" endWordPosition="4099"> which is above the interpolated oracle constraints curve (43.5% accuracy with 10 constraints, 61.3% accuracy with 20 constraints). With the 6 additional constraints, we obtain accuracy of 57.7% and match CE. Recall that CE, EM, and the DMV model incorporate prior knowledge indirectly, and that the reported results are heavily-tuned ideal cases (see Section 2). In contrast, GE provides a method to directly encode intuitive linguistic insights. Finally, note that structural annealing (Smith and Eisner, 2006) provides 66.7% accuracy on WSJ10 when choosing the best performing annealing schedule (Smith, 2006). As noted in Section 2 other annealing schedules provide accuracy as low as 32.5%. GE training of the full CRF attains accuracy of 67.0% with 30 constraints. 6 Experimental Comparison with Supervised Training on Long Sentences Unsupervised parsing methods are typically evaluated on short sentences, as in Section 5. In this section we show that GE can be used to train parsers for longer sentences that provide comparable accuracy to supervised training with tens to hundreds of parsed sentences. We use the standard train/test splits of the Spanish, Dutch, and Turkish data from the 2006 CoNLL Sha</context>
</contexts>
<marker>Smith, 2006</marker>
<rawString>Noah A. Smith. 2006. Novel Estimation Methods for Unsupervised Discovery of Latent Structure in Natural Language Text. Ph.D. thesis, Johns Hopkins University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qin Iris Wang</author>
<author>Dale Schuurmans</author>
<author>Dekang Lin</author>
</authors>
<title>Semi-supervised convex training for dependency parsing. In</title>
<date>2008</date>
<booktitle>ACL,</booktitle>
<pages>532--540</pages>
<contexts>
<context position="4821" citStr="Wang et al. (2008)" startWordPosition="726" endWordPosition="729">riven grammar induction needs to be used in conjunction with other unsupervised methods (distributional similarity and CCM (Klein and Manning, 2004)) to attain reasonable accuracy, and is only evaluated on length 10 or less sentences with no lexical information. In contrast, GE uses only the provided constraints and unparsed sentences, and is used to train a feature-rich discriminative model. Conventional semi-supervised learning requires parsed sentences. Kate and Mooney (2007) and McClosky et al. (2006) both use modified forms of self-training to bootstrap parsers from limited labeled data. Wang et al. (2008) combine a structured loss on parsed sentences with a least squares loss on unlabeled sentences. Koo et al. (2008) use a large unlabeled corpus to estimate cluster features which help the parser generalize with fewer examples. Smith and Eisner (2007) apply entropy regularization to dependency parsing. The above methods can be applied to small seed corpora, but McDonald1 has criticized such methods as working from an unrealistic premise, as a significant amount of the effort required to build a treebank comes in the first 100 sentences (both because of the time it takes to create an appropriate</context>
</contexts>
<marker>Wang, Schuurmans, Lin, 2008</marker>
<rawString>Qin Iris Wang, Dale Schuurmans, and Dekang Lin. 2008. Semi-supervised convex training for dependency parsing. In ACL, pages 532–540.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>