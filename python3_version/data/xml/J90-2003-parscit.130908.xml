<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.634179">
AN IMPLEMENTABLE SEMANTICS FOR COMPARATIVE
CONSTRUCTIONS&apos;
</title>
<author confidence="0.76645">
Manny Rayner and Amelie Banks2
</author>
<affiliation confidence="0.810054">
Swedish Institute of Computer Science
</affiliation>
<sectionHeader confidence="0.844282333333333" genericHeader="abstract">
Box 1263
S-16428 KISTA
Sweden
</sectionHeader>
<bodyText confidence="0.999856181818182">
We describe a comprehensive treatment of the syntax and semantics of comparative constructions based on
theoretical work by Pinkham, which can be implemented in a relatively straightforward fashion within a
feature-based phrase-structure grammar. Comparatives are divided up into &amp;quot;clausal&amp;quot; and &amp;quot;phrasal&amp;quot;
constructions; in contrast to most previous theories, however, phrasals are not regarded as reduced forms of
clausals. We begin by defining a Montagovian semantics for phrasal comparatives that directly links
interpretation rules to the surface syntactic structure; we then show how this solution can be made
computationally more efficient by &amp;quot;factoring&amp;quot; the interpretation through an intermediate level of representa-
tion, using a method similar to that used for dealing with scoping phenomena. Detailed examples are
provided, showing how the method can correctly describe the semantics of a variety of superficially widely
different comparative constructions. The ideas have all been implemented within a large-scale grammar for
Swedish, a &amp;quot;toy&amp;quot; version of which is presented, along with examples of the output.
</bodyText>
<sectionHeader confidence="0.998391" genericHeader="introduction">
1 INTRODUCTION
</sectionHeader>
<subsectionHeader confidence="0.510653">
1.1 OVERVIEW
</subsectionHeader>
<bodyText confidence="0.99985725">
This paper is written with two different, though to some
extent overlapping, audiences in mind. On the practical
side, we address ourselves to the natural language interface
constructor, who wants to expand the coverge of her system
so as to incorporate comparative constructions; the state of
the art has now progressed to the point where it is generally
acknowledged that this is a problem that a serious system
must attempt to deal with. In the following, we will thus
attempt to describe our ideas in a sufficiently concrete
fashion that they can be used as an implementation guide.
Typical examples of comparatives according to the tradi-
tional classification are the following:
</bodyText>
<subsectionHeader confidence="0.659006">
Clausal comparatives
</subsectionHeader>
<listItem confidence="0.8696809">
1) Mary was happier in New York than John was in
London.
2) John has more books than Mary has newspapers.
3) The table is longer than it is wide.
Comparative ellipsis
4) John is taller than Mary.
5) Few people run as fast as John.
6) John bought more books than Mary.
7) John was happier in New York than in London.
8) Mary had more friends than John thought.
9) John hit Mary harder than he meant to.
10) More men than women bought the book.
11) More people voted for the proposal than against.
12) John likes Mary&apos;s house better than Mary John&apos;s.
Unclear cases
13) More than 50 people signed the petition.
14) Mary needs a larger car than this Fiat.
15) John ran faster than the world record.
16) John was born in the same city as Mary.
17) John arrived before Mary.
</listItem>
<bodyText confidence="0.999944444444445">
On the theoretical side, we want to re-examine some funda-
mental questions about the nature of the comparative
construction, and in particular about the phenomenon gen-
erally referred to as &amp;quot;comparative ellipsis&amp;quot;; by this, we
mean comparative constructions like those listed above in
which the element after the comparative marker is not a
clause, and which traditionally have been explained in
terms of various kinds of deletion rules. Here, we will argue
that, in most common cases, it is by no means necessary to
postulate syntactic deletion operations. We will claim,
rather, that it is possible (and indeed simpler) to assign a
syntactic representation to such constructions that closely
follows the apparent surface constituent structure. We will
then show how to define semantic interpretation rules for
such structures, which at no level reconstruct a representa-
tion of a syntactic clause, but rather operate on the princi-
ple of directly comparing constituents of similar type. To
highlight the difference between our approach and the
</bodyText>
<page confidence="0.769288">
86 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.953603">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.999955068965517">
traditional one, we will refer to constructions handled by
this method as examples, not of comparative ellipsis, but
rather of contrastive comparison.
Our opinion is that the issues we are raising are probably
applicable to most grammatical frameworks subsumed un-
der the feature-based phrase structure grammar paradigm;
this includes established formalisms like LFG, GPSG,
HPSG, PATR-II etc., and a vast number of more or less
obscure formalisms in use around the world. At risk of
offending everybody and pleasing nobody, we will make no
particular attempt to align ourselves with any one of these
theories; in Section 1.2, we will describe in general terms
the properties we will expect a framework to possess, if it is
to be capable of supporting the type of operations we will
need. Basically, we will demand distinct levels of represen-
tation for constituent structure, function-argument struc-
ture, and logical form, related in the normal way; we will
also require certain constructions to be treated as syntactic
constituents. Most of this will be quite uncontroversial.
To clear the decks before moving into action, we now
spend a couple of paragraphs making clear which questions
we are not attempting to answer. We regard the lexical
semantics of comparatives as being outside the scope of the
paper; we are only interested in determining how the
phrasal semantics can be derived from them. We explain
exactly what we mean by this statement in Section 1.2. We
will ignore complex comparative operators (&amp;quot;more than
twice as much as&amp;quot;; &amp;quot;at least two inches longer than three
times as long as&amp;quot;); these are well dealt with in Ballard
(1988), and in any case do not seem to pose fundamental
difficulties. For similar reasons, we refrain from discussing
determiners with phrasal comparatives, like &amp;quot;more than
two&amp;quot; or &amp;quot;at least half&apos;: here, the most comprehensive
reference is perhaps Keenan and Stavi (1986). We also
ignore certain idiosyncratic constructions (&amp;quot;as fast as ever&amp;quot;;
&amp;quot;as much as usual&amp;quot;), which do not seem to fit any pattern
known to us.
In our treatment of clausal comparatives, we will present
two slightly different variants of a solution. The first is
simple to implement, and appears capable of giving correct
semantics to most normal examples; however, it fails to give
both readings for the notorious Russell example, &amp;quot;I thought
your yacht was longer than it is.&amp;quot; The second solution, on
the other hand, is capable of dealing with this kind of
sentence, but needs a number of additional scoping rules.
We say more about this in Section 4.
With regard to cross-linguistic coverage, we will restrict
ourselves to English, Swedish, and a few other languages in
which the comparative construction is syntactically similar
in nature; this actually appears to include most European
languages. Although we suspect that our results are proba-
bly applicable to at least some languages outside this
group,3 we shall not make any further attempt to lend
credibility to this claim.
The organization of the rest of the paper is as follows. In
Section 2 we review previous work: in particular, we point
out what we regard as the main weaknesses of the deletion
method, and summarize earlier attempts to describe phrasal
comparatives by direct interpretation methods. The next
two sections contain the main results of the paper.
In Section 3, we examine contrastive phrasal compara-
tives. We begin by defining a Montagovian semantics for
these, and then show how this can be improved by
&amp;quot;factoring&amp;quot; it through an intermediate level of representa-
tion, in which the &amp;quot;contrasting&amp;quot; relationship between
phrases is left undefined. We then go on to show how this
methodology can be used to provide a readily implement-
able semantics for a wide variety of contrastive construc-
tions, which also gives a simple explanation of the ambigu-
ity of certain comparative sentences. Section 4 then goes on
to describe our treatment of clausal comparatives, which is
largely adapted from the work reported in Klein (1980)
and Pinkham (1985).
In Section 5 we briefly discuss noncoreference of com-
pared objects; we also look at sentences containing the
words &amp;quot;before&amp;quot; and &amp;quot;after,&amp;quot; pointing out some differences
between these and comparative sentences. A corpus analy-
sis, which gives some indication of the relative frequencies
of the various constructions, is presented in Section 6. In
Section 7 we summarize our results.
The theoretical ideas advocated here were first developed
and tested in practice within the framework of the SNACK-
85 project (Rayner and Banks 1986; 1989). In Appendix 2
we give the complete program code for a &amp;quot;scaled-down&amp;quot;
version of the system, which handles all the constructions
described in the main body of the paper, and in Appendix 3
we show examples of the system&apos;s output.
</bodyText>
<sectionHeader confidence="0.795683666666667" genericHeader="method">
1.2 THEORETICAL ASSUMPTIONS
1.2.1 GENERAL REMARKS ON THE THEORETICAL
FRAMEWORK
</sectionHeader>
<bodyText confidence="0.996912458333333">
In this section, we attempt to summarize the theoretical
assumptions needed to support our arguments. The main
body of the paper is Section 3, which deals with phrasal
comparatives: here we present our theory in two separate
forms.
Version one is a Montague grammar, modified slightly to
allow use of generalized quantifiers. This has the advantage
of theoretical elegance, but as we shall see is computation-
ally unattractive. We consequently recast it in a form more
suitable for implementation purposes, which draws its inspi-
ration from the well-known treatment of scoping phenom-
ena originally described in Woods et al. (1972); later
elaborations and refinements have been implemented in a
number of systems, notably CHAT-80 (Pereira 1983),
TEAM (Grosz et al. 1986), and CLE (Moran 1988; Alshawi
et al. 1989). We will continue to use this framework in
Section 4, where we consider clausal comparatives, and
now describe it in more detail.
Most importantly, we have three distinct levels of linguis-
tic representation, which we refer to as syntax, quasi-
logical form,4 and logical form; we stress that these terms
are merely used for convenience, and are not to be read as
referring to any specific linguistic theory, Chomskian or
otherwise. The levels will encode the following information:
</bodyText>
<note confidence="0.749935">
Computational Linguistics Volume 16, Number 2, June 1990 87
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.999564925925926">
Syntax. At this level, the structure of the sentence is
represented as a phrase structure tree, where each node is
associated with a set offeatures. We will make two assump-
tions about the feature structure. First, we distinguish a
special feature, which encodes the quasi-logical form of a
constituent; not all nodes need possess this feature. Second,
there will be some mechanism that permits the definition of
long-range dependencies, by allowing features in different
constituents to share information.
Quasi-logical form (QLF). This level encodes the predi-
cate-argument structure of the phrase; the only demand we
will make is that, like any other feature value, its value can
be derived entirely by phrase structure rules with feature
unification. (This is in spirit similar to a compositionality
restriction, but is weaker.)
Logical form (LF). At this level, the sentence is associ-
ated with an expression in a (generally higher-order) predi-
cate calculus; the logical form of a sentence will be deriv-
able from its quasi-logical form by application of rewriting
rules representing scoping and other transformations. Since
there is little agreement concerning the representation of
logical forms, we now say a few words about the less usual
features of our system.
First, we will find it convenient to treat events as objects,
since this can often greatly simplify the semantics of adver-
bial modification. For example, we will represent Gustav
III ruled for 21 years as something like
</bodyText>
<sectionHeader confidence="0.532913" genericHeader="method">
3 e.event_type(e,rule)&amp;agent(e, gustaviii)&amp;duration(e,21)
</sectionHeader>
<bodyText confidence="0.983800272727273">
We will also make extensive use of generalized quantifiers
(Barwise and Cooper 1981); these will play a key role in our
representation of comparatives. We will not, however, use
Barwise and Cooper&apos;s notation, which involves combining a
determiner and a set-descriptor to form a quantifier, but
rather will take the equivalent approach of treating deter-
miners as two-place higher-order predicates on sets. We
will use IN I 4)(N)} for the determiner &amp;quot;A number N such
that 4)(N)&amp;quot;: thus we write
no(rose,Xx. send(j ohn, a, mary))
for &amp;quot;John sent no roses to Mary,&amp;quot;
</bodyText>
<sectionHeader confidence="0.905154" genericHeader="method">
IN I N&lt;SKrose,Xx.send(john,x,mary))
</sectionHeader>
<bodyText confidence="0.868862111111111">
for &amp;quot;John sent less than 5 roses to Mary,&amp;quot; and
IN I 3 N&apos;.N&lt;Wed/41
(rose,Xx.rose(x)StiOcgarden)N
(rose,Xx.send(johnxmary))
for &amp;quot;John sent fewer roses to Mary than there were roses in
the garden.&amp;quot; Formulas like the third one above will occur
frequently in Section 3, and we advise the reader to spend a
minute at this point making sure that she understands the
notation.
</bodyText>
<sectionHeader confidence="0.944727" genericHeader="method">
1.2.2 SPECIFIC SYNTACTIC AND SEMANTIC
ASSUMPTIONS
</sectionHeader>
<bodyText confidence="0.976702610169492">
The basic scheme, or some not too distant relative, is the
one used in many large-scale implemented systems; as
examples, we can quote TEAM (Grosz et al. 1987), PUN-
DIT (]Dahl et al. 1987), TACITUS (Hobbs et al. 1988),
MODL (McCord 1987), CLE (Alshawi et al. 1989), and
SNACK-85 (Rayner and Banks 1986). It also has close
links with theoretical work in situation semantics (Pollard
and Sag 1988; Fenstad etal. 1987). We start by enumerat-
ing the basic syntactic constituents S, NP, VP, DET, AP,
ADVP, PP; as far as our ontological commitments go, we
need a set of THINGS, a set of EVENTS, and a set of DEGREES.
We will assume that DEGREES are isomorphic to some kind
of numbers.
An NP will consist of a DET and a CN (we borrow this
nonstandard term for N-bar from Montague grammar). A
DET will semantically correspond to a generalized deter-
miner, and a CN to a subset of THINGS. An NP will thus
become a generalized quantifier.
A VP consists of a VERB, followed by a list of VERB-
ARGs (or just ARGs), by which we mean its obligatory
and optional complements. An ARG is represented at QLF
level as a pair (arg-type, arg-value). We will need at least
the following kinds of complements: NP, PP, 5-COMP (a
suitable S), VP-COMP (a suitable VP), APs. Semanti-
cally, a verb will be associated with a subset of EVENTS,
which we can think of as a type of event, state, or situation.
The VALUE of each ARG will also be semantically repre-
sented by a suitable object, and the ARG-TYPE will
translate to a relation between the verb-object and the
representation of the ARG-VALUE. We will require a
special kind of QLF node, called an abstraction, to repre-
sent VPs, APs, and other constituents whose denotation is a
function from individuals to propositions; one component of
the abstraction node will be the abstracted variable.
A scalar adjective A translates to a two-place predicate
A&apos;(x, d) on OBJECTS X DEGREES, with the interpretation: the
object x is A&apos; to degree d. Similarly, a scalar adverb A
translates to a two-place predicate A&apos;(x, d) on EVENTS X
DEGREES, with the interpretation: the event x is A&apos; to degree
d. We will assume that degree expressions like &amp;quot;more,&amp;quot;
&amp;quot;less,&amp;quot; or &amp;quot;at least twice as much as much as&amp;quot; translate to
two-place predicates on DEGREES X DEGREES. Since we are
assuming that DEGREES are numbers, it will also make
sense to use a generalized quantifier as the second argu-
ment to an adjective: for example, A(x, IN &lt;21) will be
interpreted as &amp;quot;x is (less than 2) A.&amp;quot;
We will also need to be able to form &amp;quot;slash categories&amp;quot; or
something similar. In particular, the following will be
required (in each example the &amp;quot;gap&amp;quot; is represented as an
underscore):
S/DET (e.g. &amp;quot;John bought _ vases&amp;quot;)
S/NP (e.g. &amp;quot;John gave _ to Mary&amp;quot;)
S/S-COMP (e.g. &amp;quot;John probably believed _ &amp;quot;)
S/VP-COMP (e.g. &amp;quot;John presumably meant to _ &amp;quot;)
A more exact formulation of the basic question we are
attacking is thus:
In terms of the above framework, state rules by which we
can systematically calculate the denotation of a complex
expression involving a comparative construction in terms of
</bodyText>
<page confidence="0.831432">
88 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.987926">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
the denotation of its scalar adjectives and adverbs, the
denotations of its degree expressions, and the denotations of
its other constituents.
</note>
<sectionHeader confidence="0.872677" genericHeader="method">
2 PREVIOUS WORK ON COMPARATIVES
</sectionHeader>
<bodyText confidence="0.999903296296296">
This section will summarize relevant previous work on
comparatives; we begin by listing sources. So far, there has
been a surprisingly small amount of work done in computa-
tional frameworks: the only major attempts known to us
that integrate syntactic and semantic processing are those
reported in Ballard (1988) and Friedmann (1989). Limited
syntactic/semantic coverage has appeared in some other
systems (e.g. DIALOGIC [Robinson 1982] and CLE
[Alshawi et al. 1989]), and the Linguistic String Project
(Sager 1981) has an advanced syntactic coverage.
On the theoretical front, we have been considerably
influenced by Bresnan (1973), Hankamer (1973), Pinkham
(1985), and Klein (1980), especially the last three; we were
also surprised to discover at a late stage of our research that
unpublished work by Heim (1985) and Kriflca (1987) had
pursued a course almost parallel to our own. We now go on
to describe what we regard as relationships between these
treatments and ours.
We will start by looking at clausal comparatives, where
the immediate problem is clearly to account for the appar-
ent &amp;quot;missing material&amp;quot; in the comparative clause. An early
and still very influential study of comparative constructions
is that of Bresnan (1972; 1973; 1977), working within trans-
formational grammar; the key concept is the introduction
of the rule of Comparative Subdeletion, which will for
example derive sentences like 1 a) and 2a) by deleting the
bracketed material from the base forms lb) and 2b).
</bodyText>
<listItem confidence="0.880128666666667">
la) John bought more books than Mary bought.
1 b) John bought more books than Mary bought [x many
books].
2a) John bought more books than Mary bought records.
2b) John bought more books than Mary bought [x many]
records.
</listItem>
<bodyText confidence="0.995812821428571">
Although Comparative Subdeletion explains many of the
facts, it makes a number of erroneous predictions. A very
long and thorough criticism was advanced in Pinkham
(1985), where reasons are given to believe that it is prefera-
ble to adopt an analysis that represents the &amp;quot;missing&amp;quot;
material as (in English) null proforms; these are bound to
the head of the comparison by a mechanism that Pinkham
calls Quantifier Binding. Pinkham&apos;s view of the clausal
comparative has many points in common with that pro-
posed in Klein (1980), in the context of a GPSG/Montague
grammar framework, although Klein only really considers
sentences of the type in example 2); our own treatment will
in this respect be similar to Pinkham&apos;s and Klein&apos;s.
Like Bresnan and Pinkham, but unlike Friedmann
(1989), we will also regard the comparative clause as in
general modifying the comparative head in the main clause,
as opposed to treating the two clauses as parallel; we
discuss further in Section 4 the reasons behind this deci-
sion.
Moving on to phrasal comparatives, there would appear
to be two basic approaches. The earlier and more common
one is to treat these as reduced forms of clausal compara-
tives; for example, Hankamer (1971) introduces a rule of
&amp;quot;C-ellipsis,&amp;quot; which deletes material from the comparative
clause under identity with material in the main clause.
Thus for example, 3a) and 4a) would be regarded as
reduced forms of 3b) and 4b), where the bracketed mate-
rial has been deleted:
</bodyText>
<listItem confidence="0.9824385">
3a) John bought more books than Mary.
3b) John bought more books than Mary [bought x many
books].
4a) John bought more books than Mary thought.
4b) John bought more books than Mary thought [that he
bought x many books].
</listItem>
<bodyText confidence="0.9977492">
In a computational treatment, this means that the deletion
rule has to be &amp;quot;reversed,&amp;quot; so as to reconstruct the deleted
material from the phrasal remnant: this is the method used
in Sager (1981) and Friedmann (1989).
However, a number of researchers have showed that
there are drawbacks to the &amp;quot;C-ellipsis&amp;quot; account. Although
both Hankamer and Pinkham use C-ellipsis in their theo-
ries, they also provide strong evidence for the existence of at
least some comparatives that are not elliptic in nature
(Hankamer 1973; Pinkham 1985). Three examples are
shown in 5)-7), where Pinkham in each case argues that
there are severe difficulties involved in deriving a sentence
of this type from a clausal comparative; the natural choice
in a transformational framework is to regard the italicized
portions as base-generated phrasal.
</bodyText>
<listItem confidence="0.98523775">
5) I invited more men than women.
6) John ran faster than the world record.
7) Mary looks taller than John when she wears high
heels.
</listItem>
<bodyText confidence="0.986016222222222">
Of particular interest here is Pinkham&apos;s treatment of exam-
ples like 5), which are interpreted using a rule that she calls
&amp;quot;distributive copying.&amp;quot; 5) receives the logical form 5a),
which after distributive copying becomes 5b). Although the
details of the solution are not fully worked out (in particu-
lar, the notation is never given a formal semantics), the
intuitive idea is clearly that of duplicating a &amp;quot;shared&amp;quot; or
&amp;quot;matrix&amp;quot; predicate, substituting in the two compared ele-
ments in a suitable way.
</bodyText>
<sectionHeader confidence="0.4604" genericHeader="method">
5a) I INVITED (MORE [ql (ql men), q2 (q2 women)])
</sectionHeader>
<subsectionHeader confidence="0.309486">
5b) MORE [ql (I INVITED ql men), q2 (I INVITED q2
women)]
</subsectionHeader>
<bodyText confidence="0.80868025">
Similar suggestions have also been made in a rather dif-
ferent context by Keenan and Stavi (1986; 282-284); con-
sidering the semantics of comparative adjectival construc-
tions like that in 8a), they argue convincingly that these are
to be regarded as directly interpreted, rather than as re-
duced forms of sentences like 8b) or 8c):
Computational Linguistics Volume 16, Number 2, June 1990 89
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</bodyText>
<listItem confidence="0.9881245">
8a) More male than female students passed the exam.
8b) More male students than female students passed the
exam.
8c) More male students passed the exam than female
</listItem>
<bodyText confidence="0.939653527777778">
students passed the exam.
We should also mention the work of McCord (1981; 1985;
1987) on &amp;quot;focalizers&amp;quot;; the key notion we borrow is the use
of rewriting rules on semantic representations, to produce a
logical form in which contrasted items appear at the same
level. Although McCord does not attempt, as we do, to
justify his operations formally, the intuitions behind them
clearly overlap to a large extent with ours.
In our own treatment of phrasal comparatives, we take
all these ideas to their logical conclusion: we dispense with
the C-ellipsis rule altogether, and regard all nonclausal
comparatives as essentially phrasal, interpreting them by a
method analogous to Pinkham&apos;s distributive copying. The
abstract scheme is concretely implemented in the form of
rewriting rules, which are applied to an intermediate quasi-
logical form. A solution along these lines, which builds on
previously reported work (Banks 1986; Banks and Rayner
1987; Rayner and Banks 1988), is described in Section 3.
As we complete this article, we discover that a similar
approach for German comparatives has independently been
suggested by Krifka (1987); Kriflca also proceeds by using
direct interpretation rules involving contrasting of com-
pared constituents, although the details of his analysis are
in some respects fairly different. The following is a typical
example: 9a) is given the semantics represented by 9b),
where tid4)(d) is to be read as &amp;quot;the maximum d, for which
4)(d) holds,&amp;quot; and KOMP(x, y, f) is defined by
ICOMP(x, y, &lt;.&gt; 4(x)&gt; 4(y)
9a) Ich habe ihr bessere Zahartze
I have him better dentist
empfohlen als du.
recommended than you-NOM.
(I have recommended him a
better dentist than you [did]).
9b) KOMP(ich, du, XxiLd[x hat ihr d-gute Zahartze
empfohlen]).
</bodyText>
<sectionHeader confidence="0.983226" genericHeader="method">
3 PHRASAL COMPARATIVES
</sectionHeader>
<subsectionHeader confidence="0.925773">
3.1 BASIC IDEAS
</subsectionHeader>
<bodyText confidence="0.998865066666667">
As we have already indicated, our strategy for handling
phrasal comparatives will be to provide direct interpreta-
tion rules, rather than to assume the existence of deletion
rules and attempt to reconstruct a clausal comparative. In
the preceding section, we referred to a number of authors
who have pointed out weaknesses in the C-ellipsis theory;
using their arguments and some of our own, we now
describe our reasons for preferring our method to the
traditional one.
Our fundamental argument will be Occam&apos;s razor: espe-
cially from the implementation viewpoint, assuming that
phrasals are derived from clausals has little real explana-
tory power. Since the authors quoted above give good
theoretical arguments to show that at least some phrasal
comparatives are not the result of C-ellipsis, we are at any
rate going to have to provide direct interpretation rules for
these eases. If it then turns out that these rules can be
systematically extended so as to cover the other phrasal
comparatives as well, we can dispense with C-ellipsis alto-
gether and arrive at a simpler system. We claim that this is
exactly what we have done.
It is worth looking a little more closely at the case in
which the comparative complement is of the form than NP;
this is certainly the one that occurs most commonly in
practice. The first point is well known, and was first de-
scribed in detail in Hankamer (1971): in English (and in
fact a good many other languages), it is possible to extract
out of contrastive NP complements, but not from clausal
comparative complements. For example, compare 10a)
with 1(lb):
</bodyText>
<listItem confidence="0.6738465">
10a) Whoi does John run faster than ti?
10b) *Who; does John run faster than t, runs?
</listItem>
<bodyText confidence="0.99205103125">
The relevance of this observation is obvious: if contrastive
NP complements really are elliptic forms of clausal comple-
ments, we would appear to need some mechanism by which
something originally an extraction island could cease to be
one when a reduction is performed. This would be a very
unusual phenomenon, which it would certainly be prefera-
ble to avoid introducing into a syntactic theory; rather than
do this, it seems much simpler to treat the two construc-
tions as fundamentally different, as we have done.
Another fairly clear-cut piece of evidence can be found in
Swedish, where a different possessive pronoun is used de-
pending on whether the comparative is clausal or phrasal,
as in 11a) and 1 ib). Here, the point is that sin refers back
to the subject of the clause, while hans refers to a nonsub-
ject NP in the same clause, or an NP in a different clause.
Once again, this would be strange if the comparative
complement in 1 la) were a clausal remnant.
11a) Sven kopte fler bocker an sin far.
Sven bought more books than his father.
11b) Sven kopte fler Nicker an hans far gjorde.
Sven bought more books than his father did.
However, in practice the biggest problem seems to be that it
is not easy to provide a satisfactory definition of the C-
ellipsis deletion operation; to be more exact, we need to
define the inverse of this operation, so as to reconstruct the
comparative clause from the reduced form. A relatively
simple example is 12a), which we quoted in Rayner and
Banks (1988); the sentence is also discussed at length by
Friedmann. Here, a naive definition of &amp;quot;deletion of identi-
cal material&amp;quot; will result in reconstructing 12b); what we
want is rather 12c), which requires an NP to be regarded as
&amp;quot;identical&amp;quot; to a pronoun bound by it.
</bodyText>
<listItem confidence="0.866203875">
90 Computational Linguistics Volume 16, Number 2, June 1990
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
12a) Every tourist spent more in London than in New
York.
12b) Every tourist spent more in London than every tourist
spent in New York.
12c) Every tourist spent more in London than he spent in
New York.
</listItem>
<bodyText confidence="0.99924625">
Friedmann&apos;s solution to the problem begins by reconstruct-
ing a form like 12b), and then makes use of rewriting rules
that &amp;quot;merge&amp;quot; the two occurrences of every tourist into a
single quantifier that has wide scope over the whole sentence;
the final result is essentially 12c). This idea is, however,
open to several criticisms. To begin with, it has little
linguistic motivation; more important, it is difficult to see
how to extend it to handle harder cases without adding
more ad hoc rules. For example, getting the normal
(&amp;quot;sloppy&amp;quot;) reading of 13a) by Friedmann-like analysis
seems to involve transforming it to something like 13b),
which rather begs the question of how to account for the
different possessive pronouns in the two clauses. On a
direct-interpretation account, however, the intended read-
ing for sentences like 13a) can be derived in a natural way;
we describe how this can be done in Section 3.4.6.
</bodyText>
<listItem confidence="0.973029">
13a) Few men are as loyal to their country as George (is).
13b) Few are as loyal to their country as George is loyal to
his country.
</listItem>
<bodyText confidence="0.999956305555556">
The remainder of Section 3 will give a detailed description
of our version of the direct-interpretation method. We start
in Section 3.2 by showing how to construct a Montagovian
semantics for a fragment containing phrasal constructions;
the basic trick is to have a phrase structure rule that
combines a syntactic structure with a pronoun-like &amp;quot;slot,&amp;quot; a
&amp;quot;filler&amp;quot; for the &amp;quot;slot,&amp;quot; and an element of the same semantic
type as the &amp;quot;filler,&amp;quot; against which it is contrasted. This rule
can then be linked in the normal way with a corresponding
semantic rule, which defines the semantics of the composite
structure in terms of the semantics of its constituents.
However, this has the same drawbacks as the original
Montague treatment of scoping phenomena, namely that
we are introducing phrase structure rules that lack syntac-
tic motivation. Consequently, we introduce in Section 3.3 a
computational version of the theory; here we perform inter-
pretation in two stages, with the intermediate QLF level of
structure interposed between phrase structure and logical
form. At QLF level, comparative phrases are linked to the
associated graded element, but not to the element they are
compared against. A subsequent transformation of the
QLF structure introduces links between compared ele-
ments, resulting in a form that can be converted into an LF.
At the penultimate stage, we will have a higher-order
four-place predicate, which takes the following arguments:
the two contrasted elements, the way in which they are
compared, and a parameterized &amp;quot;matrix&amp;quot; formula contain-
ing two &amp;quot;slots,&amp;quot; one for the degree, and one for the con-
trasted element.
In Section 3.4 we give examples showing how our frame-
work can be used to define the semantics of a variety of
phrasal comparative complements, and also touch briefly
on the question of ambiguity in phrasal comparative con-
structions. Finally, in Section 3.5 we say a few words about
how the theoretical ideas presented above can be realized
concretely within a unification-based grammar.
</bodyText>
<subsectionHeader confidence="0.978507">
3.2 MONTAGOVIAN SEMANTICS FOR PHRASAL
COMPARATIVES
</subsectionHeader>
<bodyText confidence="0.999859638888889">
We now proceed to show how the intuitive picture sketched
out in Section 3.1 can be expressed formally in terms of
Montague grammar; the technical idea is essentially in-
spired by the PTQ treatment of scoping phenomena5 (Mon-
tague 1972; Dowty et al. 1982, pp. 203-215). There are
three slightly different variants of the method, one for
constituents of type t (clauses), and two for constituents of
type ( e, t) (VPs, APs). Since we are treating adverbials as
properties of verb-objects, ADVPs will also fall into this
second group.
For each variant, we have a rule-schema, parameterized
by the syntactic type of the comparative complement; we
call this constituent COMPLEMENT, and we also assume the
existence of a &amp;quot;proform&amp;quot; that can stand for constituents of
type COMPLEMENT. An example of such a proform will be
written as c-proformi for some suitable i. We will also need
a set of proforms to stand for determiners; we will write
these as q-proformi. Finally, we will assume a syntactic
class COMP-OPERATOR, which will include expressions
like more, less, at least twice as much, and so on. The
denotation of an expression in COMP-OPERATOR will
be a constant two-place relation between degrees.
We then add syntactic rules, to say that a constituent of
type COMPLEMENT can be realized as c-proformi, and that
its denotation is a variable cj of the appropriate type;
similarly, a determiner can be realized as q-proformj, and
its denotation will be a variable (11 of the type associated
with degree expressions. Since the semantic rules are all
defined relative to a variable-substitution g, it naturally
follows that the truth conditions for a phrase containing
any of these proforms depends on the values assigned by g
to the associated variables.
We are now in a position to define the syntactic rule-
schema for composition of phrasal comparatives. We first
take the simpler case, where the phrase is of clausal type;
the input to the rule will be the following:
</bodyText>
<listItem confidence="0.96290825">
1) A phrase (I) of type S, containing occurrences of
c-proformi and q-proformj for some i and j.
2) Two phrases A1 and A2 of type COMPLEMENT.
3) A phrase if of type COMP-OPERATOR.
and produces as output the phrase Comp(l), A1, A2, if)
constructed by doing the following:
a) Replace c-proformi in 4&gt; by the phrase Al.
b) Replace q-proformj in (13. with the comparative operator
c) Concatenate than or as (depending on NY) + A2 to the
end.
d) Perform necessary morphological operations (e.g. change
more big to bigger, less many to fewer, etc.)
</listItem>
<bodyText confidence="0.958199764705882">
Computational Linguistics Volume 16, Number 2, June 1990 91
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
We let cie be the denotation of cl), 4, the denotation of 4/, etc.
Since 4) contains instances of the pronouns c-proformi and
q-proformj, clY will contain corresponding free variables ci
and q1. It will thus make sense to abstract over these: for
convenience&apos;s sake, we will refer to XciXqict/ as clr. The
associated semantic rule will then define the denotation of
Comp(l&apos;, A1, A2, 4/) to be the value of the expression
c13&amp;quot;(A IN I cl,&amp;quot;(A2&apos;, {N&apos; I ‘le(N, N&apos;)})}) (*)
This formula is both central to the paper, and sufficiently
obscure as to require some further explanation. To under-
stand what it means in intuitive terms, we focus first on (1)&amp;quot;.
This can be viewed in the usual way as a predicate with two
argument slots: the first filled by an object denoting a
phrase of type COMPLEMENT, and the second by an object
denoting a degree.
We now work &amp;quot;from the inside out.&amp;quot; We thus begin with
the subformula IN&apos; I if&apos;(N,N) 1; remember that this is a
generalized determiner (see Section 1.2). For example, if &apos;If
has the value more, it will be the determiner
IN&apos; I more(N,N)}, or to express this in more usual terms (less
than N). Working outward to the next level, the subformula
1.&amp;quot;(A2&apos;, {N&apos; I ie(N,N&apos;)}) is that formed by substituting the
complement denotation A2&apos; in the first argument place of &lt;V
and the determiner denotation {N&apos; I Ale(N,N&apos;)} in the second.
It is consequently a condition on N, which means that
{N I 4)&amp;quot;(A2&apos;, {N&apos; I 4,(N,N)))1 is also a generalized determiner.
The final formula is now constructed by once again substi-
tuting suitable values into the argument slots for 4)&amp;quot;, these
now being A1&apos; and IN I (13&amp;quot;(A2&apos;,{N&apos; I Ale(N,N)})}.
To summarize: what we have described here is a rule-
schema that allows us to construct what could be called a
comparative S. which contrasts two constituents of type
</bodyText>
<sectionHeader confidence="0.425902" genericHeader="method">
COMPLEMENT.
</sectionHeader>
<bodyText confidence="0.999718357142857">
A small extension now gives us corresponding schemas
for comparative constituents of type (e, t) (this includes
VPs, APs, and relative clauses); it seems that there are
actually two slightly different versions. The most obvious
case is the one in which contrasting takes place, as previ-
ously, between the comparative complement and some
other constituent of similar type. Here, we can use the
syntactic conditions for the rule above in unchanged form;
since the type of 43&apos; is (e, t) rather than t, the semantic part
of the rule has to be rewritten slightly, as the old definition
would no longer make the condition on N a truth-value. We
solve this problem by substituting in a value x in (1)&amp;quot;
(reducing it to a truth-value), and later abstract x away
again at the outermost level. The denotation of
</bodyText>
<equation confidence="0.7120495">
Comp(013, A1, A2, IF) will then be
Xx.(1)&amp;quot;(A1&apos;,{N I 4)&amp;quot;(A2&apos;,{N&apos; I Ale(N, N&apos;)}, x)}, (**)
</equation>
<bodyText confidence="0.9980245">
An important special case, which we will make use of in
Sections 3.4.4 and 3.4.6, occurs when the comparative
complement is an NP, and the &amp;quot;contrast&amp;quot; is between it and
the entity referred to by the abstracted variable in &lt;D.
Sentences 14)-16) illustrate this. In each, we claim that
contrasting is occurring within the italicized portion.
</bodyText>
<listItem confidence="0.99375225">
14) A man taller than John was chosen for the team.
15) Most people don&apos;t expect to live as long as John (did).
16) People who travel to London as often as John usually
have season tickets.
</listItem>
<bodyText confidence="0.751272166666667">
One way to deal with these constructions would be to make
them all equivalent with the case represented by 16): for
relative clauses, it is reasonable to maintain that contrast-
ing is between the complement, and a &amp;quot;gap&amp;quot; linked to the
relative pronoun. On this account, 14) and 15) are regarded
as derived from something like 14a) and 15a).
</bodyText>
<listItem confidence="0.91157025">
14a) A man (who is) taller than John was chosen for the
team.
15a) Most people don&apos;t expect (that they will) live as long
as John.
</listItem>
<bodyText confidence="0.999800785714286">
Although this approach is certainly also feasible, it seems
technically simpler to dispense with the null pronouns and
instead use the following semantic analogue of the idea,
essentially a type-raising trick. We let cI) be a constituent of
type ( e, t), containing an occurrence of q-proformj, if a
COMP-OPERATOR, and A2 an NP; we define
Comp, (4), A2, IF) to be the phrase formed by substituting 41
for q-proformj, and concatenating than/as A2 to the end,
and now want to define its denotation. We let ci be a
parameter ranging over NP denotations, x be a parameter
ranging over individuals, and A; be the function XQ.Q(x); if
we now define 4.&amp;quot; to be the formula XciXqj • cj (V), the
denotation of Compiet, A2, IF) is given by yet another
variant on our basic formula, namely
</bodyText>
<equation confidence="0.671582">
Xx.cf.&amp;quot;(Ai&apos;,IN I 4)&amp;quot;(A2&apos;,{N&apos; I if&apos;(N, N&apos;)})}) (***)
</equation>
<bodyText confidence="0.9998224">
Readers who wish to see examples of derivations using the
three interpretation schemas defined above may now want
to turn to Section 3.4; when they have returned, we will
proceed to describe how our theoretical picture can be
converted into one that is more readily implementable.
</bodyText>
<subsectionHeader confidence="0.999196">
3.3 A COMPUTATIONAL VERSION
</subsectionHeader>
<bodyText confidence="0.99994805">
The analysis we have just presented gives a simple and
compact formalization of our theory of phrasal compara-
tives, but it is still not easily implementable as it stands.
The reasons for this are exactly the same as those applying
to the original PTQ treatment of scoping phenomena;
essentially, the rules have insufficient syntactic motivation.
However, the solution (as far as scoping goes) is by now
standard, and has been successfully implemented in a
number of well-known systems (e.g., Pereira 1983; Lesmo
1985; Grosz et al. 1986; Alshawi et al. 1989); the methodol-
ogy can originally be traced back to Woods (1978).6 The
trick is to split interpretation into two stages, the first
linked to the syntax and the second to the semantics;
mediating between these, we have an intermediate level of
representation, the quasi-logical form. This is produced
compositionally from the syntax, and then subjected to
rewriting rules before being converted into the final logical
form. Normally, these rewriting rules formalize scoping
transformations; here, we will also use them to describe the
interpretation of nonclausal comparison. In Section 1.1, we
</bodyText>
<page confidence="0.761657">
92 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<bodyText confidence="0.856447">
Manny Rayner and Amelie Banks
An Implementable Semantics for Comparative Constructions
summarized briefly the basic properties we demanded of
the QLF level of formalism. We now describe those fea-
tures that are specially concerned with comparative con-
structions.
We start by defining the various kinds of nodes we will
need in the QLF. These will be the following.
</bodyText>
<subsubsectionHeader confidence="0.399268">
Node name Represents
</subsubsectionHeader>
<bodyText confidence="0.970884523809524">
c-complement Comparative complement.
c-operator Comparative operator.
c-degree Comparative degree; includes the com-
parative complement and compara-
tive operator as subnodes.
Placeholder; the q-proform of the Mon-
tagovian analysis.
Placeholder; the c-proform of the Mon-
tagovian analysis.
comparison Corresponds to Comp(4), A1, A2, if) and
COMp1(4), A2, if) of the Montagovian
analysis. The part of the tree under
the node corresponds to ck. The sub-
nodes are: the &amp;quot;contrasted material&amp;quot;
(Al), the comparative complement
(A2), the comparative operator (41),
and pointers to the relevant q and c
nodes (qi, ci)
The fundamental idea should be fairly easy to grasp, if the
reader has understood the previous section; the QLF is
successively transformed through a number of stages, until
it is in a form consonant with the Montagovian analysis of
Section 3.2. We go through the stages in turn, illustrating
each of them schematically; in Sections 3.4.1 and 3.4.2, we
give examples of their application.
(Stage 0) In the original QLF, the comparative comple-
ment and comparative operator turn up as c-complement
and c-operator nodes, modifying the c-degree node repre-
senting the comparative degree; the c-complement is not yet
associated with the constituent it is contrasted against (see
Figure 1).
(Stage 1) Rewriting rules replace the c-degree with a q
placeholder, and save the c-complement, c-operator, and
associated q in a separate location; we call this the &amp;quot;compar-
ative store,&amp;quot; by analogy with Cooper&apos;s &amp;quot;quantifier store&amp;quot;
(Figure 2; Cooper 1 98 3; Engdahl 1 98 5).
(Stage 2) The contents of the &amp;quot;store&amp;quot; are moved upwards
in the tree; at each higher node N, attempt to do one of i),
ii) or iii). (The second and third alternatives are special
cases) (Figure 3).
c-degree
c-operator c-complement
</bodyText>
<figureCaption confidence="0.987124">
Figure 1 Original QLF
</figureCaption>
<figure confidence="0.918464">
comparative
store c-operator
[complement
</figure>
<figureCaption confidence="0.943726">
Figure 21An item is placed in the &amp;quot;store&amp;quot;
</figureCaption>
<bodyText confidence="0.9490342">
i) Find a suitable constituent below N to contrast the
c-complement against. If such a constituent is found,
replace it by a c placeholder, and insert a comparison
node in the tree above N. The comparison node is
constructed from the following components: the c-com-
plement, the contrasted constituent, the c-operator,
and the q and c placeholders.
ii) (This is to deal with the third schema from Section 3.2)
If N is an abstraction node (representing a constituent
of type (e, t)), insert a c node above N, a comparison
</bodyText>
<figureCaption confidence="0.9663744">
Figure 3 (a) A node has been located, which can
serve as a contrast to the comparative
complement. (b) The contrast node is replaced
with a c placeholder, and a comparison node is
inserted. (c) Special case for third schema in 3.2.
</figureCaption>
<figure confidence="0.9434008">
comparison
contrast
c-complement
c-operator
Computational Linguistics Volume 16, Number 2, June 1990
</figure>
<page confidence="0.927628">
93
</page>
<note confidence="0.670978">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.99993480952381">
node above the c, and a further abstraction node above
that. The comparison node is constructed from the
c-complement, c-operator, c and q; the &amp;quot;contrast&amp;quot; com-
ponent is that corresponding to a pronoun with associ-
ated variable x, where x is the abstracted variable in
the new abstraction node.
iii) (See Section 3.4.3) If N is a constituent of type t or
(e, t), and c-complement is an S-OPERATOR, insert
an s-operator node above N, and a comparison node
above that; the body of the s-operator node will be a c
placeholder. The comparison node has the same struc-
ture as that in case i), except that the &amp;quot;contrasted
material&amp;quot; slot contains the special value it-is-true-that.
(Stage 3) The tree is now in a form where the Montagovian
analysis can be used directly; one of the formulas (*), (**),
or (***) is applied to yield the logical form, the choice
depending on which alternative was chosen in the preced-
ing step. In the final stage, the portion of the QLF under the
comparison node is duplicated twice, and the q and c
placeholders instantiated in each copy in an appropriate
manner (see Figure 4).
</bodyText>
<subsectionHeader confidence="0.9822365">
3.4. APPLICATIONS OF THE THEORY
3.4.1 NP- AND PP-COMPARATIVES
</subsectionHeader>
<bodyText confidence="0.9973801">
Phrasal comparative constructions in which the compara-
tive clause is an NP or PP appear to have fundamentally
the same structure, and we shall consequently consider
them under one heading. We will present a typical exam-
ple, first using the Montagovian framework, and then
reworking it in the computational one.
The following table represents a semantic derivation for
the sentence each woman received more roses from toronto
than from london; we will analyze this as being composed of
the subject each woman, and the comparative VP received
more roses from toronto than from london. We will use an
instance of the second schema from 3.2, with COMPLEMENT
equal to PP, and accordingly write c-proformi as from-
therei. Received will be treated as a verb taking three argu-
ments, with received&apos;(x, y, z) interpreted as &amp;quot;x received y
from z.&amp;quot; For example, {16}(Xr.roseV) &amp; red&apos;(r), X r.received&apos;
(amelie&apos;, r, toronto&apos;)) will correspond to amelie received 16
red roses from toronto, and (no&apos;(rose&apos;, Xr.received&apos;(amelie&apos;,
r, graham&apos;)) will correspond to amelie received no roses from
graham.7 (see Table 1).
</bodyText>
<figureCaption confidence="0.844398">
Figure 4 Special case for 3.4.3.
</figureCaption>
<page confidence="0.995673">
94
</page>
<tableCaption confidence="0.998734">
Table 1. Montagovian Analysis of Contrasted PPs
</tableCaption>
<listItem confidence="0.905800125">
1. each woman XP.eacie(womancP)
2. from, toronto XP.P(toronto&apos;)
3. from london XP.P(london&apos;)
4. q-proform, roses XP.q, (rose&apos;,P)
5. received XxXyXz.received&apos;(x,y,z)
6. from-there, 1,
7. received from-therei XxXy.11(Xz.received&apos;(x,y,z))
8. received q-proform, Xx.q1(rose&apos;,Xy.11(Xz.received&apos;
</listItem>
<figure confidence="0.6316212">
roses from-there,* (x,y,z)))
9. more XxXy.more&apos;(x,y)
10. received more roses Xx.IN I IN&apos; I more&apos;(N,N11
from toronto than from (rose&apos;,Xy.received&apos;(x,y,london&apos;))}
london (rose&apos;,Xy.received&apos;(x,y,toronto&apos;))
11. each woman received each&apos; (woman&apos;,Xx.{N I
more roses from toronto IN&apos; I more&apos;(N,N11(rose&apos;,
than from london Xy.received&apos;(x,y,london&apos;))}
(rose&apos;,Xy.received&apos;(x,y,
toronto&apos;)))
</figure>
<bodyText confidence="0.993652857142857">
*Remember that since q, is a variable ranging over determiner
denotations it takes two arguments, which should both be of the
type ( e,t). Similarly, 1, (an NP denotation) takes a single
argument of the same type.
Figure 5 presents in outline the analysis of the same
sentence in the computational framework of Section 3.3,
and should be compared with Figs. 1-4.
</bodyText>
<subsectionHeader confidence="0.853797">
3.4.2 CN COMPARATIVES
</subsectionHeader>
<bodyText confidence="0.96729119047619">
Comparative constructions of the type illustrated in 17a)
have been the object of considerable controversy. The
orthodox position was that they were &amp;quot;parallel&amp;quot; construc-
tions: 17a) would thus be a reduced form of 17b).
17a) More women than men read &amp;quot;Playgirl.&amp;quot;
17b) More women read &amp;quot;Playgirl&amp;quot; than men read
&amp;quot;Playgirl.&amp;quot;
Pinkham, as we have already mentioned, gives good rea-
sons for supposing that this is not the case, and that the
construction is in base generated phrasal (pp. 121-123).
We now show how her analysis can be recast in our
framework: once again, we present our derivation first in
terms of Montague grammar and then in the computa-
tional version.
In Montague grammar, we instantiate the first schema
from Section 3.2, this time with COMPLEMENT equal to CN;
in the interests of readability we write c-proformi as of_that-
kindi. The derivation appears in Table 2.
The corresponding treatment in the computational frame-
work is another direct application of the method from
Section 3.3, and appears in Figure 6.
</bodyText>
<sectionHeader confidence="0.6675325" genericHeader="method">
3.4.3 &amp;quot;S-OPERATOR&amp;quot; AND &amp;quot;V-P-OPERATOR&amp;quot;
COMPARATIVES
</sectionHeader>
<bodyText confidence="0.9633575">
Our next type of construction is illustrated in 18a), 18b)
and 18c).
</bodyText>
<figure confidence="0.721818571428571">
18a) Mary had more friends than John had expected.
Computational Linguistics Volume 16, Number 2, June 1990
Manny Rayner and Amelie Banks
An Implementable Semantics for Comparative Constructions
Tree-rewriting analysis of PP contrasting
Original QLF
A suitable contrast is found for the comparative complement.
</figure>
<figureCaption confidence="0.998214">
Figure 5 Tree-rewriting analysis of PP-contrasting
</figureCaption>
<bodyText confidence="0.938130285714286">
18b) Most people ate more biscuits than Mary said.
18c) John&apos;s yacht was longer than I thought.
To handle examples like these within our framework, we
need a syntactic representation that does not involve ellip-
sis. Our solution is to introduce a syntactic constituent that
we call an S-OPERATOR: by this, we mean a constituent
of the form S/S-COMP, that is to say, a clause with a
</bodyText>
<tableCaption confidence="0.760239">
Table 2. Montagovian Analysis of CN Comparative
Computational Linguistics Volume 16, Number 2, June 1990
</tableCaption>
<figure confidence="0.9535138">
Tree-rewriting analysis of CN contrasting
Original QLF
comparative
store
The comparative complement and operator have been placed in the &amp;quot;store&amp;quot;
agent I--
&amp;quot;women&amp;quot;
comparative
store
A suitable contrast is found for the comparative complement.
</figure>
<figureCaption confidence="0.989155">
Figure 6 Tree re-writing analysis of
CN-contrasting
</figureCaption>
<bodyText confidence="0.999932105263158">
missing sentential complement. The italicized portions of
the sentences above are accordingly deemed to be S-
OPERATORs, and the contrast is with an implicit trivial
S-OPERATOR that we can write as (it is true that). Note
that there is an unbounded dependency here between the S
and its missing constituent; we say a little more about this
in Section 3.5.
An example in the Montagovian framework is shown
below; we use the second schema from Section 3.2, with
COMPLEMENT instantiated to S-OPERATOR, and write
c-proformi as attitude&apos;. There are in fact two tricky techni-
cal points here, which we are forced by space limitations to
gloss over.
First, we are assuming that it is possible when introduc-
ing complex categories of the form A/B to derive the
associated semantic rule from those for the component
categories A and B. Since it is at any rate fairly obvious in
the present case that this is feasible (that is, that we can
justify the semantic value of the phrase mary said), we shall
</bodyText>
<page confidence="0.925431">
95
</page>
<figure confidence="0.996476805555555">
&amp;quot;each woman&amp;quot;
object
&amp;quot;from Toronto&amp;quot;
&amp;quot;received&amp;quot;
&amp;quot;from London&amp;quot;
comparative
store
comparative
store
1. woman
2. man
3. &amp;quot;Playgirl&amp;quot;
4. read &amp;quot;Playgirl&amp;quot;
5. q-proform, of-that-
kind,
6. q-proform, of-that-
kind, read &amp;quot;Playgirl&amp;quot;
7. more women than men
read &amp;quot;Playgirl&amp;quot;
woman&apos;
man&apos;
XQ.Q(playgirl&apos;)
Xx.read(x,playgirl&apos;)
XQ.q1(11,Q)
q1(11,Xx.read(x,playgirl&apos;))
f/s1 I {N&apos; I more&apos;(N,N)}
(man&apos;,Xx.read(x,playgirl&apos;)))
(womancXx.read
(x,playgirl&apos;))
kreads(x,y) is to be understood as &amp;quot;x habitually reads y&amp;quot;)]
&amp;quot;women&amp;quot;
&amp;quot;men&amp;quot;
&amp;quot;more&amp;quot;
&amp;quot;Playgirl&amp;quot; H&amp;quot;read&amp;quot;
more&amp;quot;
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</figure>
<bodyText confidence="0.934872857142857">
not discuss the matter further. Second, we allow applica-
tion of the denotation of an S-OPERATOR to the denota-
tion of a VP, which formally is of the wrong type. Here, our
reasoning is that since an S-OPERATOR denotes a func-
tion a from propositions to propositions, it will naturally
induce a function a&apos;: Xx.P(x)--. Xx.a(P(x)) from VP-
denotations to VP-denotations; we will identify a and a&apos;
(see Table 3).
It is interesting to see that Kriflca independently arrives
at exactly the same conclusion; he writes our &amp;quot;it is true
that&amp;quot; as the operator FAKT, and for example analyses
19a) below as 19b):
19a) Anna ist reicher als Otto glaubt.
Anna is richer than Otto thinks.
19b) KOMP(FAKT,Otto glaubt,Xd. [Anna ist d-reich]
Analogously with the &amp;quot;S-OPERATOR&amp;quot; introduced above,
we can also define a &amp;quot;VP-OPERATOR&amp;quot; to be a constituent
of the syntactic category S/VP, i.e. something that can
combine with a VP complement to yield an S; note that this
includes subject NPs. We can then give a similar account
for sentences like those illustrated in 20a) to c):
</bodyText>
<listItem confidence="0.9659045">
20a) Mary opened more bottles than John told her to.
20b) Mary scored more points than I normally can.
20c) Mary needs to get a better result than she&apos;s so far
managed.
</listItem>
<bodyText confidence="0.999946">
We sketch a Montagovian derivation for the first of these:
here we use the first schema from 3.2, this time with
COMPLEMENT instantiated to VP-OPERATOR. Note that
we give mary wide scope over the whole sentence, so as to
get the pronoun bindings right (see Table 4).
Readers who wish to understand the implementation
details for the computational version are referred to the
relevant program code in Appendix 2. Parse-tree and logi-
cal forms are given in example sentence 8 in Appendix 3.
</bodyText>
<sectionHeader confidence="0.9705675" genericHeader="method">
3.4.4 CONTRASTING INSIDE ADJECTIVAL AND
ADVERBIAL PHRASES
</sectionHeader>
<bodyText confidence="0.9945005">
So far, all the examples of contrastive comparatives that we
have shown have involved using one of our two schema to
</bodyText>
<tableCaption confidence="0.8384095">
Table 3. Montagovian Analysis of &amp;quot;S-OPERATOR&amp;quot;
Comparative
</tableCaption>
<listItem confidence="0.917470727272727">
1. most people AQ.most&apos;(person&apos;,Q)
2. mary said XQ.said&apos;(mary&apos;,Q)
3. (it is true that) XQ.Q
4. ate XxXy.ate&apos;(x,y)
5. ate so-many, biscuits Xx.(q,(biscuit&apos;,Xy.ate&apos;(x,y)))
6. attitude, ate so-many, a,(Xx.(q,(biscuit&apos;,Xy.ate&apos;(x,y))))
biscuits
7. (it is true that) ate more Xx.{N I said&apos;(mary&apos;,{N&apos; I more&apos;
biscuits than Mary said (N,N&apos;)}(biscuit&apos;,Xy.ate&apos;(x,y))}
(biscuit&apos;,Xy.ate&apos;(x,y)))
8. most people ate more most&apos;(person&apos;,Xx.Isaid&apos;(mary&apos;,
</listItem>
<tableCaption confidence="0.7180414">
biscuits than Mary said {N&apos; I more&apos;(N,N&apos;)}
(biscuit&apos;,Xy.ate&apos;(x,y))1
(biscuit&apos;,Xy.ate&apos;(x,y))))
Table 4. Montagovian Analysis of &amp;quot;VP-OPERATOR&amp;quot;
Comparative
</tableCaption>
<listItem confidence="0.952337">
1. Friary XQ.Q(mary&apos;)
2. hei XQQ(xl)
3. john told he, to XQ.told&apos;(john&apos;,x1,Q(x1))
4. opened so-many, bottles Xx.(q,(bottle&apos;,Xy.opened&apos;(x,y)))
5. vip-op, opened so-many, c,(Xx.(q,(bottle&apos;,Xy.opened&apos;(x,y))))
bottles
6. he, opened more bottles IN I told&apos;oohn&apos;,x,,IN&apos; I more&apos;(N,10
than john told he, to (bottle&apos;,Xy.opened&apos;(x1,y))))1
(bottle&apos;,Xy.opened&apos;(x„y))
7. mary opened more bot- IN I told&apos;(john&apos;,mary&apos;,{N&apos; I more&apos;
ties than john told her to (N,N)}(bottle&apos;,Xy.opened&apos;
(naary,y))))1
(bottle&apos;,Xy.opened&apos;
(mary,y))
</listItem>
<bodyText confidence="0.997556714285714">
construct a phrase that is either an S or a VP. In this
section, we will consider sentences where the contrasting
operation is used internally within adverbial and adjectival
phrases: Pinkham quotes constructions of this kind as some
of the clearest instances of phrasal comparatives. We start
in 21)-23) by giving some typical examples; 21) and 22)
are taken from Pinkham (1985).
</bodyText>
<listItem confidence="0.991989333333333">
21) A man taller than John was chosen for the team.
22) He ran faster than the world record.
23) John needs a spanner bigger than the No. 4.
</listItem>
<bodyText confidence="0.999925095238095">
In each of these sentences, contrasting appears to occur
within the italicized phrase; in 21), John need not have
been chosen for the team, in 22) the world record certainly
cannot run, and in 23) John presumably does not need the
No. 4. We would, however, derive all these conclusions if
contrasting were at VP or clausal level, since we would then
copy the verb.
In accordance with Pinkham&apos;s suggestions, our approach
will rather be to use a direct interpretation method based
on predicate copying; we will in fact use the third schema
from Section 3.2, defined by formula (***). This applies in
a straightforward fashion to adjectival constructions like
those in 21) and 23). Pinkham notes that a similar treat-
ment is also possible for sentences like 22) if we take fast to
be a predicate applying to the &amp;quot;running&amp;quot; event, although
we imagine that some people may find this move unattrac-
tive.
In Table 5, we present a sketch of a Montagovian
analysis for 21). Note that &amp;quot;Q tall&amp;quot; will be represented as
Xx.tall(x, Q), where Q is a generalized determiner, and that
formula (***) is used when deriving 5 from 3 and 4.
</bodyText>
<subsectionHeader confidence="0.779381">
3.4.5 CONTRASTED PREPOSITIONS
</subsectionHeader>
<bodyText confidence="0.999982666666667">
The types of contrastive comparatives described in Sections
3.4.1 to 3.4.4 appear to account for the vast majority of
those that occur in practice.8 There are also a few rare
cases, one of which we here touch on briefly. As a final
example, we consider the case of contrasted prepositions, as
shown in 24) below.9
</bodyText>
<listItem confidence="0.704781">
24) There are more points for the proposal than against.
</listItem>
<page confidence="0.595362">
96 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.694291">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<tableCaption confidence="0.979975">
Table 5. Montagovian Analysis of Contrasting in AP
</tableCaption>
<listItem confidence="0.973179818181818">
1. was chosen for the team was-chosen&apos;
2. player player&apos;
3. john XQ.Q( john&apos;)
4. q-proform, tall Xx.tall&apos;(x,q,)
5. taller than john Xx.tall&apos;(x,ID I tall&apos;( john,
ID&apos; I more&apos;(D,D&apos;)I)I)
6. player taller than john Xx.playee(x)&amp;talr(x,{D I tall&apos;
( john,{D&apos; I more&apos;(D,D)1)1)
7. a player taller than john XQ.a&apos;(Xx.player&apos;(x)&amp;tall&apos;(x,{D I tall&apos;
( john,{D&apos; I more&apos;(D,D)1)1),Q)
8. a player taller than john a&apos;(Xx.playee(x)&amp;tall&apos;(x,{D I tall&apos;
</listItem>
<bodyText confidence="0.91555075">
was chosen for the team ( john,{D&apos; I more&apos;(D,D1})1),
was-chosen&apos;)
These can be treated in a completely straightforward man-
ner in the computational version from Section 3.3; the key
step will be the replacement of the ARG-TYPE field of a
suitable NP denotation with a C-placeholder. A Montagov-
ian treatment of the construction is of course somewhat
problematic with the framework we have so far adopted,
since there is no sensible way to quantify over ARG-TYPE
of anything similar; some people may see in this fact an
argument against Montagovian formalisms. (Parse-tree
and logical form in example sentence 12 in Appendix 3).
</bodyText>
<sectionHeader confidence="0.994317" genericHeader="method">
3.4.6 AMBIGUITIES IN CONTRASTIVE
CONSTRUCTIONS
</sectionHeader>
<bodyText confidence="0.99974325">
It is well known that phrasal comparative constructions can
easily give rise to ambiguities: sentences 25)-27) illustrate
three typical possibilities. Here, we will discuss how our
system fares when attempting to explain these.
</bodyText>
<listItem confidence="0.98793425">
25) Nobody talked more to John about Carol than Mary.
26) Few men give their wives more presents than George
(does).
27) John intends to buy more books than Mary.
</listItem>
<bodyText confidence="0.999348">
We claim that most speakers find all these sentences ambig-
uous, the first in three ways, and the others in two. The
simplest case is 25), where we can paraphrase the various
readings as 25a—c):
</bodyText>
<listItem confidence="0.951329333333333">
25a) Nobody talked more to John about Carol than Mary
did.
(Mary talks a lot to John about Carol.)
25b) Nobody talked more to John than to Mary about
Carol.
(John is less popular than Mary when people want to
hold conversations about Carol.)
25c) Nobody talked more to John about Carol than they
did about Mary.
</listItem>
<bodyText confidence="0.995182818181818">
(Everyone prefers discussing Carol to discussing
Mary when they talk with John.)
In terms of the discussion from Section 3.4.1, ambiguity
arises naturally as a result of the uncertainty concerning
the identity of the element that &amp;quot;Mary&amp;quot; is intended to be
compared with. By successively choosing the NPs
&amp;quot;Nobody,&amp;quot; &amp;quot;John,&amp;quot; or &amp;quot;Carol,&amp;quot; the reader can easily sat-
isfy herself that each of the readings above can be derived.
Sentence 26) also appears to be fairly clear: here, the
distinction is essentially between the &amp;quot;strict&amp;quot; and &amp;quot;sloppy&amp;quot;
readings, which can be represented as 26a) and 26b).
</bodyText>
<listItem confidence="0.53447575">
26a) Few men give their wives more presents than George
gives them.
26b) Few men give their wives more presents than George
gives his own wife.
</listItem>
<bodyText confidence="0.985945142857143">
On a Montagovian account, we will get 26a) if the pronoun
their is still unbound in the denotation of the VP give their
wives q-proformi presents; if, on the other hand, it is bound
to the variable representing the subject, we will get 26b).
The hardest case definitely seems to be sentence 27).
Here we have at least two readings, which we represent as
27a) and 27b):
</bodyText>
<listItem confidence="0.8376894">
27a) John intends to buy more books than Mary will buy.
(John&apos;s plan is that, no matter how many books
Mary has, he will buy more.)
27b) John intends to buy more books than Mary intends to
buy.
</listItem>
<bodyText confidence="0.96029475">
(John and Mary both plan to buy specific numbers of
books, that number being in John&apos;s case greater.)
We can obtain the first of these using formula (***) from
Section 3.2, as can be seen from the schematic derivation in
Table 6.
Unfortunately, there is no very satisfactory way to derive
the wide scope reading 27b). The problem is that the
comparative degree will end up in our account with lower
scope than the modal operatorwants, irrespective of the
level at which we carry out the contrasting operation; to
derive 27b), however, it needs to have scope over the whole
clause. Although one can define an ad hoc rule that raises
the scope of the comparative quantifier, this goes very
much against the spirit of our treatment; a slightly more
attractive possibility may be to introduce alternative &amp;quot;wide-
scope&amp;quot; versions of formulas (*), (**) and (***) from 3.2.
For example, (*) would become
3 N,N&apos;.41&amp;quot;(Ai,INI)&amp; (11&amp;quot; (A2&apos;,{1\11)&amp; V(N,N)
The problem is of course to find conditions defining when
the wide-scope formulas are applicable. One idea might be
</bodyText>
<tableCaption confidence="0.472297">
Table 6. &amp;quot;Narrow Scope&amp;quot; Interpretation of Sentence 27
</tableCaption>
<figure confidence="0.736019857142857">
1. buy q-proform, books Xx.q,(book&apos;,Xy.buy&apos;(x,y))
2. buy more books than Xx.{N I IN&apos; I more(N,N)}
mary (book&apos;,Xy.buy&apos;(mary,y))}
(book&apos;,Xy.buy&apos;(x,y))
3. wants to buy more Xx.wanqx,{N I {N&apos; I more
books than mary (N,N)}(book&apos;,Xy.buy&apos;(mary,y))1
(book&apos;,Xy.buy&apos;(x,y)))
</figure>
<footnote confidence="0.5884662">
4. john wants to buy more want&apos;(john;
books than mary IN I IN&apos; I more(N,N&apos;)}
(book&apos;, Xy.buy&apos;(mary,y))1
(book&apos;, Xy.buy&apos;(x,y)))
Computational Linguistics Volume 16, Number 2, June 1990 97
</footnote>
<note confidence="0.640258">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.982065333333333">
to allow their use when the comparative occurs in an
embedded S or VP (as it does here), but the whole topic
clearly needs more study.
</bodyText>
<subsectionHeader confidence="0.618274">
3.5 IMPLEMENTATION ISSUES
</subsectionHeader>
<bodyText confidence="0.9991572">
We first discuss the syntactic level; the main implementa-
tion problems here are caused by various kinds of long-
range dependencies. Apart from normal &amp;quot;WH-movement&amp;quot;
dependencies in questions and relative clauses, we have the
following:
</bodyText>
<listItem confidence="0.945221894736842">
1. Dependency between comparative head and compara-
tive complement. Normally, the head is separated from
its associated complement in surface syntax, even though
it conceptually forms a constituent with it.
2. Dependencies associated with missing complements in
S- and VP-operators, which can be arbitrarily deeply
nested. These appear to be very similar to WH-
movement dependencies.
3. &amp;quot;Verb anaphora&amp;quot; dependencies: as is well known, cer-
tain verbs (in English do, be, can, etc.) can act anaphor-
ically for verb phrases. We treat a comparative comple-
ment consisting of an NP together with one of these
verbs as essentially equivalent with the NP on its own,
except that it is forced to contrast against an NP which
is a subject in a clause whose main verb is a suitable
antecedent. The verbal antecedent relationship also ap-
pears to lead to an unbounded dependency.
4. &amp;quot;Quantifier binding&amp;quot; in clausal comparatives; we dis-
cuss this in Section 4.1.
</listItem>
<bodyText confidence="0.9998316">
All these forms of long-range dependency are handled by
application of &amp;quot;threading&amp;quot; (Pereira 1983; Kartunnen 1986).
Properly speaking, each distinct type of dependency ought
to be associated with a distinct feature, which will be
present in relevant constituents; by unifying features in
different constituents against each other, information is
propagated through the tree. In the XG-grammar in Appen-
dix 2, we have cheated a little, by using the &amp;quot;extraposition
list&amp;quot; feature to handle all of 1, 2, and 4 above. Although this
can potentially lead to problems when dependencies &amp;quot;cross,&amp;quot;
we felt that the gain in simplicity made this compromise
worthwhile. It is a simple matter to reorganize the gram-
mar using different features.
The semantic part of the grammar follows very closely
the discussion in Section 3.3. The syntax-tree is first trans-
formed into QLF form by the predicate synto_qlf/2; the
QLF is then searched to find potential comparisons. That
is, it first tries to extract a c-complement and store it, then
tries to find a suitable contrast and finally constructs the
comparison node and inserts it.
</bodyText>
<sectionHeader confidence="0.993886" genericHeader="method">
4. CLAUSAL COMPARATIVES
</sectionHeader>
<bodyText confidence="0.99990437037037">
We borrow most of the basic principles in our treatment of
clausal comparatives from Pinkham. Firstly, just as with
phrasals, we assume that the comparative clause is nor-
mally a modifier to a degree expression in the main clause;
this assumption is also shared by Bresnan, though not by
Friedmann, who places the two clauses at the same level.
Secondly, we assume that the &amp;quot;missing material&amp;quot; in the
comparative clause is a null degree expression; this may
possibly occur together with a null copy of the material
modified by the head degree, which can be an adjective
(example 29), an adverb (30), or a CN (31, 32). If the head
degree is modifying an adjective in nonpredicate position,
then it is obligatory to copy the CN (32). This idea is more
or less borrowed from the discussion in Pinkham (pp.
33-40). Adapting Pinkham&apos;s notation slightly, we write a
null degree as Q, a null adjective or adverb as PROA, and a
null CN as PROcN.
Our third principle is that the denotation of the COMP-
OPERATOR is realized as a relation between the head
degree and the Q, and appears conjoined with the compara-
tive clause; this means that the Q originally will have wide
scope over the clause it occurs in. Examples 28)-32) illus-
trate our analysis: in each, the first item is the sentence, the
second a schematic representation of the QLF, and the
third a schematic representation of the logical form. In the
QLF., we enclose the comparative degree expression in
parentheses.
</bodyText>
<listItem confidence="0.9833355">
28) John bought more books than Mary bought records.
28a) John bought (more than Mary bought Q records)
books.
28b) John bought IN I Mary bought {/%11 records &amp; more
(N,N)} books.
29) John was happier in London than he was in New York.
29a) John was (more than he was Q PROA in New York)
happy in London.
29b) John was {D1he was {D&apos;} happy in New York &amp;
more(D,D1 I happy in London.
30) John runs faster than Mary swims.
30a) John runs (more than Mary swims Q PROA) fast.
30b) John runs (DI Mary swims {D&apos;} fast &amp; more (D,D1 I
fast.
31) John bought more books than Mary could carry.
31a) John bought (more than Mary could carry Q PROcN)
books.
31b) John bought IN I Mary bought {N&apos;} books &amp;
more(N,N1 I books.
32) John bought a more expensive vase than Mary bought.
32a) John bought a (more expensive than Mary bought Q
PROA PROcN) vase.
32b) John bought a (DI Mary bought a {D&apos;} expensive vase
&amp; more(D,D)} expensive vase.
</listItem>
<bodyText confidence="0.99947725">
It is fairly straightforward to implement a scheme of this
kind in a framework that can handle long-range dependen-
cies; in Section 4.1, we describe in more detail how this can
be done. Before doing so, however, we take a brief look at
the theoretical issues raised by our first and third assump-
tions.
With regard to the first assumption, suppose that we
chose Friedmann&apos;s alternative and allowed the main and
</bodyText>
<note confidence="0.874081">
98 Computational Linguistics Volume 16, Number 2, June 1990
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.982153659574468">
comparative clauses to be parallel. For instance, this would
give example 28) above a logical form something like 28c):
28c) 3 N,N&apos;. John bought N books &amp; Mary bought N&apos;
records &amp; more(N,N&apos;).
At first glance, this looks simpler. The problems arise when
we introduce quantified NPs: thus if we replace John with
something like no one, we are obliged to have more(N,N)
within the scope of the quantifier representing the new NP.
Of course, it is possible to require that such NPs always be
given wider scope than the whole sentence (which is what
Friedmann does), but to do so ignores the fact that an NP
that has higher scope than the NP in which the compara-
tive degree occurs normally has higher scope than the
comparative degree as well. Making the comparative clause
a modifier to the degree is from this point of view a more
principled solution.
We now consider our third assumption: what scope should
the &amp;quot;inner&amp;quot; degree receive, and where should the condition
linking the two degrees appear? Here, there are at least two
reasonable choices. Alternative A, which is the one we have
chosen, is to give the inner degree wide scope over the whole
comparative clause, and conjoin the condition; alternative
B is to give the inner degree its &amp;quot;natural&amp;quot; scope in the
comparative clause, and make the relation between the two
degrees a condition on it. This would give 28) the logical
form shown in 28d) below. We marginally prefer A, but the
issues involved are sufficiently unclear to merit further
discussion.
28d) &amp;quot;John bought IN I Mary bought IN&apos; I more(N,N&apos;)}
records} books.
The drawback to A is, once again, that quantified NPs can
cause problems: thus in a sentence like 33) we do not want
the interpretation 33a) where most Swedes have traveled
abroad the same number of times.
33) Sven has visited Japan more times than most Swedes
have traveled abroad.
33a) Sven has visited Japan {N I (most Swedes have trav-
eled abroad N&apos; times) &amp; more(N,N11 times.
To get around this, we have to postulate a rule that gives
most Swedes wide scope over N&apos;; this is not necessary if we
choose B, where the natural scoping is 33b):
33b) Sven has visited Japan IN I (most Swedes have trav-
eled abroad {N&apos; I more(N,N)} times)} times.
If we are only dealing with extensional sentences, examples
like 33) would thus make it seem that B was preferable.
However, serious problems arise with the well-known exam-
ple 34), due to Russell:
</bodyText>
<sectionHeader confidence="0.399035" genericHeader="method">
34) I thought your yacht was longer than it is.
</sectionHeader>
<bodyText confidence="0.998744684210526">
Here we are more or less forced to choose an interpretation
that gives the &amp;quot;inner&amp;quot; degree wide scope, i.e. 34a)
34a) Your yacht is D&apos; long &amp; I thought that your yacht
was {D I more(D,13&apos;)} long
If we use alternative A, it is possible to define scoping rules
that produce this interpretation. However, this appears to
be out of the question with alternative B; if the comparative
clause is given wide scope, the degree comparison
more(D,D&apos;) will be outside the scope of D. Although this
conclusion seems inescapable, we are still somewhat reluc-
tant to recommend a solution that is motivated entirely by a
type of example that essentially never occurs in normal
applications; readers interested in concrete implementation
may well consider that the practical problems involved in
formulating suitable scoping rules for alternative A out-
weigh the theoretical loss of generality. It would appear
that there is room for further research here: the reader is
warned that the issues at stake are far from simple, as
witness for example, Larson (1988).
</bodyText>
<subsectionHeader confidence="0.85626">
4.1 IMPLEMENTATION ISSUES
</subsectionHeader>
<bodyText confidence="0.984928375">
Our proposed treatment of clausal comparatives can be
implemented fairly simply in a framework that contains a
mechanism for handling long-range dependencies; the ba-
sic idea was first described in Klein (1980) in the context of
an early version of GPSG, although we have modified it
considerably. As already mentioned in Section 3.5, we will
assume some kind of gap-threading idea. Pinkham observes
(p. 81) that Quantifier Binding respects island constraints;
the most obvious way to ensure this is to propagate it using
the same mechanism as is used to handle WH-movement.
A type of dependency we have already seen is that
between the head of the comparative and the associated
comparative clause; in this case, the problem is to pass
rightward the information that a comparative clause is
being looked for, which will end up as a modifier of a
comparative degree expression somewhere to its left. Since
the possible nature of the bound null proforms in the
comparative clause depends on the structure of the associ-
ated head, the two types of dependency are interrelated;
just how, we explain below. We will call the feature associ-
ated with the first kind of dependency the Q feature, and
that associated with the second the C_complement fea-
ture. The values of both of these will as usual be pairs of the
form (Gaps_in, Gaps_out ).
Let us now examine in detail how the scheme works. A
comparative degree expression on a determiner, adjective,
or adverb causes a non-null value of the C_complement
feature to move rightwards; that is, a non-null Gaps_out
on the degree expression successively gives rise to non-null
Gaps_in values on other constituents to its right. This
continues until the C_complement feature is &amp;quot;absorbed&amp;quot;
by a non-null comparative complement. This will be a
comparative complementizer, followed by a clause with
suitable C_gaps features.
The difficult part of the business is getting the right
Gaps_in value for the Q feature on the comparative clause;
in other words, making sure that the type of null proform
that occurs in the comparative clause is one that matches
the head of the comparison. To begin with, this means that
the C_complement feature must contain information about
the permissible values for the associated Q; the rules for
Computational Linguistics Volume 16, Number 2, June 1990 99
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
comparative degree constituents then need to specify this
information in a suitable way. The following rules are those
we have implemented: we write H for the head of the
comparison and B for the bound null proforms, and enumer-
ate four separate cases.
</bodyText>
<listItem confidence="0.965531">
1. If H is a determiner, then B is either
a) a Q
b) an NP whose determiner is a Q, and whose CN is a copy
of the CN in the NP where H occurs.
2. If H is modifying an adjective A in predicate position,
then B is a Q modifying a copy of A.
3. If H is modifying a verbal adverb A, then B is a Q
modifying a copy of A.
4. If H is modifying an adjective occurring in prenominal
</listItem>
<bodyText confidence="0.994674222222222">
position in an NP N, then B is a copy of N, where H has
been replaced by a Q.
The rules above are a considerable simplification of
Pinkham&apos;s, and there are in particular two major omis-
sions. First, we copy constituents, instead of introducing
bound proforms of type PROA and PROcN. This usually
makes no difference, but becomes significant in sentences
like 35): if we copy, getting 35a), we do not guarantee that
the two occurrences of them refer to the same set.
</bodyText>
<listItem confidence="0.983050333333333">
35) John gave me more of them than I managed to eat.
35a) John gave me more of them than I managed to eat (Q
many of them).
</listItem>
<bodyText confidence="0.999875142857143">
Secondly, and more critically for practical purposes, we
have ignored the important distinction Pinkham draws
between &amp;quot;narrow-scope&amp;quot; and &amp;quot;wide-scope&amp;quot; clausals (p.
86-91). This was not done for any principled reason, but
simply for lack of time; implementing it in a satisfactory
way is an important part of the planned continuation of our
research.
</bodyText>
<sectionHeader confidence="0.995058" genericHeader="method">
5 OTHER ISSUES
</sectionHeader>
<bodyText confidence="0.999913666666667">
This concludes our analysis, with the exception of some
minor points that we have postponed until now in the
interests of expositional clarity. The first concerns noncoref-
erence of compared objects, the second the question of
whether &amp;quot;before&amp;quot; and &amp;quot;after&amp;quot; can be regarded as compara-
tives.
</bodyText>
<subsectionHeader confidence="0.927524">
5.1 NONCOREFERENCE OF COMPARED OBJECTS
</subsectionHeader>
<bodyText confidence="0.99817375">
Although speaker judgments tend not to be completely
unanimous, there is a strong tendency to assume that
comparison is always between different objects. This point
becomes important when answering questions like 36).
</bodyText>
<listItem confidence="0.634614">
36) Has any king ruled as long as Gustav V?
</listItem>
<bodyText confidence="0.998233857142857">
Most people find &amp;quot;Yes&amp;quot; meaning &amp;quot;Yes, Gustav V did&amp;quot; very
misleading. To correct this, we make a slight adjustment in
the analysis we have so far been using, so that an appropri-
ate inequality is added when the logical form is produced
from the reshaped quant tree. With this alteration 37) may
be judged true even if John is present, and 38) may
correctly be said of one of Mary&apos;s articles.
</bodyText>
<listItem confidence="0.952001666666667">
37) Nobody here has read as many books as John.
38) Ma Ty has never written an article that is as bad as this
one
</listItem>
<subsectionHeader confidence="0.999389">
5.2 &amp;quot;BEFORE&amp;quot; AND &amp;quot;AFTER&amp;quot;
</subsectionHeader>
<bodyText confidence="0.99996125">
In English, the words before and after can display several
of the features associated with comparatives. For example,
sentences like 39) and 40) would appear to have interpreta-
tions which could be represented as 39a) and 40a):
</bodyText>
<listItem confidence="0.957372">
39) John arrived before me.
39a) John arrived at a time T, T such that I arrived at a
time T&apos;, T before T&apos;.
40) Henry VIII married Anne Boleyn after Catherine of
Aragon.
</listItem>
<bodyText confidence="0.903784076923077">
40a) Henry VIII married Anne Boleyn at a time T, T such
that he married Catherine of Aragon at a time T&apos;, T
after T&apos;.
Given examples like these, it is tempting to conclude that
before and after are the &amp;quot;comparative forms&amp;quot; of adverbials
that could be represented as &amp;quot;at-early-time&amp;quot; and &amp;quot;at-late-
time.&amp;quot; (Indeed, we made exactly this proposal in an earlier
paper). However, it must be noted that, even if this analysis
is correct, these adverbials would appear to be subject to
certain restrictions with regard to the comparative comple-
ments they can take. For example, examples 41a)-42a) are
at best dubious, and should be contrasted with the correct
41 b)-42b):
</bodyText>
<listItem confidence="0.98167325">
41a) *John arrived before I expected.
41b) John arrived earlier than I expected.
42a) ?Mary left before she needed to.
42b) Mary left earlier than she needed to.
</listItem>
<bodyText confidence="0.999940909090909">
It thus seems uncertain whether these words should be
regarded as a special sort of comparative, or as belonging to
a separate class of their own. The best way to resolve this
question might perhaps be to consider cross-linguistic data;
if it turns out that there are other languages that allow a
full range of comparative complements to the analoguous
words, it would presumably make sense to hypothesize that
this was originally the case for English, and that the
missing constructions have simply fallen into disuse. Lack-
ing at the moment any such evidence, we refrain from
further speculation on this subject.
</bodyText>
<sectionHeader confidence="0.99836" genericHeader="method">
6 DATA FROM CORPUS ANALYSES
</sectionHeader>
<bodyText confidence="0.9963874">
To give our claims concerning relative frequencies of the
various constructions some substance, we here give the
results of a small corpus analysis. We took the texts of one
English and one Swedish novel (Agatha Christie&apos;s . . . And
Then There Were None; Selma Lagerlof&apos;s Kejsaren av
</bodyText>
<page confidence="0.735939">
100 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.922803">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<tableCaption confidence="0.995189">
Table 7. Data from Corpus Analysis
</tableCaption>
<table confidence="0.4822605">
Type of No. of
construction examples Frequency
</table>
<listItem confidence="0.83520525">
1. Discourse comparative:
2. Clausal:
3. Contrastive:
NP:
</listItem>
<construct confidence="0.529614666666667">
NP + &amp;quot;anaphoric verb&amp;quot;:
PP/Adverbial.&apos;
S-operator:
VP-operator:
Internal contrasting in AP:
Other:
</construct>
<listItem confidence="0.899569">
4. Determiner/Phrasal*:
5. Verb of change + comparative*:
6. Inte comparative in att...*:
7. Other:
Total:
</listItem>
<bodyText confidence="0.962195409090909">
*Constructions like &amp;quot;more than two&amp;quot; or &amp;quot;less than half.&amp;quot;
*Constructions involving verbs like &amp;quot;grow&amp;quot; or &amp;quot;become&amp;quot; together
with a comparative, as in &amp;quot;The room grew more cheerful&amp;quot; or &amp;quot;The
road became harder.&amp;quot; The problems involved in giving a correct
semantics to such sentences derive in our opinion primarily from
the verbs, and not from the comparatives.
*A construction peculiar to Swedish, as in Det var inte tyngre an
att han kunde lyfta det. (Lit: &amp;quot;It was not heavier than that he
could carry it&amp;quot;).
Portugalien), and manually extracted all sentences contain-
ing comparatives. The results are summarized in Table 7.
One striking fact is immediately apparent; the second
commonest type of construction (No. 1, &amp;quot;discourse
comparative&amp;quot;) is actually one that we fail to cover! In our
defense, however, we can at any rate claim that none of the
other authors we have quoted appear to do so either. By
discourse comparatives, we mean here comparatives where
the associated comparative complement (in English nor-
mally introduced by &amp;quot;than&amp;quot; or &amp;quot;as&amp;quot;) is completely absent,
and must be inferred from the context. Typical examples
(taken from the Agatha Christie novel) follow below in
sentences 43)-45).
</bodyText>
<listItem confidence="0.87700975">
43) The abandoned creature . . . committed a still graver
sin.
44) At eight o&apos;clock the wind was blowing more strongly.
45) I should be colder if I were dead.
</listItem>
<bodyText confidence="0.9997752">
If the discourse comparatives are excluded, however, we
are clearly capable of dealing with the vast majority of
those left. Thus we feel fairly well justified in claiming that
our treatment covers most of the common cases of compar-
ison that occur in practice.
</bodyText>
<sectionHeader confidence="0.959097" genericHeader="conclusions">
7 SUMMARY AND FURTHER DIRECTIONS
</sectionHeader>
<bodyText confidence="0.999970166666667">
We have presented a treatment of comparative construc-
tions that can claim to cover most of the commonly occur-
ring cases, and is also capable of being implemented in a
reasonably standard framework. Several of the key ideas
are adapted from the theoretical work of Pinkham. In
particular, we divide comparatives into two separate classes,
clausals and phrasals. Clausals are interpreted by a version
of Pinkham&apos;s &amp;quot;quantifier binding,&amp;quot; which treats the miss-
ing material in the comparative clause as null proforms
bound by the comparative head (Section 4); phrasals are
interpreted directly, using an adaption of Pinkham&apos;s &amp;quot;dis-
tributive copying.&amp;quot; The semantics of phrasals are summa-
rized in the key formulas (*), (**), and (***) from Section
3.2.
At the beginning of Section 1, we presented a selection of
comparative constructions, classified according to a more
or less traditional approach. Table 8 shows the same exam-
ples, this time with our classification.
Particularly in our analysis of contrastive phrasals, we
have gone to some lengths to describe how the ideas can be
implemented in a reasonably efficient way. Here, the key
idea has been to use a level of representation intermediate
between syntax and logical form, which we call quasi-
logical form, or QLF. At QLF level, phrasal comparatives
are linked to their heads, but not to the constituent they are
contrasted against. Rewriting rules then reshape the QLF
until it is in a form where the comparative complements are
at the same level as their &amp;quot;correlates.&amp;quot; We also make use of
features for defining long-range dependencies. These occur
in several varieties: the bound null proforms in clausal
comparatives, the missing sentential and VP complements
in S- and VP-operators, and finally the comparative comple-
ments, which in general are separated from their heads in
surface syntax.
Weighing up the strengths and weaknesses of our ap-
proach, it is most natural to compare it with Friedmann&apos;s.
Since Friedmann gives the comparative degree wide scope
by default, her system needs extra rewriting rules for
dealing with quantified NPs, both in the main clause and
the comparative complement; we have argued that a &amp;quot;nar-
row scope&amp;quot; default is in general preferable. We have also
claimed that it is difficult in Friedmann&apos;s syntactically
oriented approach to give a formulation of the comparative
deletion rule that will extend to the harder cases.
However, we have also seen, in Section 3.4.6, that our
semantics runs into problems when attempting to derive the
&amp;quot;wide-scope&amp;quot; reading for sentences like 27), where the
comparative head occurs within the scope of a modal
operator. Rather than postulate more ad hoc rewriting
rules, we tentatively suggested that there may be alternate
wide-scope versions of the key formulas from Section 3.2;
this fits in well with Pinkham&apos;s remarks on wide- and
narrow-scope clausals, which we refer to at the end of
Section 4. Further investigation of these issues seems like
one of the most important items on our agenda for future
research.
Another topic that urgently needs study is the interaction
between comparatives and coordination; in certain cases,
illustrated in sentences 46)-49), our first impression is that
problems will occur. Since these obviously depend on the
</bodyText>
<figure confidence="0.972361390243902">
37 33.9%
7 6.4%
45 41.3%
12 11.1%
4 3.7%
10 9.1%
5 4.6%
2 1.8%
11 10.1%
1 0.9%
6 5.5%
6 5.5%
4 3.7%
4 3.7%
109
Computational Linguistics Volume 16, Number 2, June 1990 101
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
Table 8. Typical Examples of Comparatives: Our Classification
Clausal comparatives
1) Mary was happier in New York than John was in London.
2) John has more books than Mary has newspapers.
3) The table is longer than it is wide.
Contrastive phrasal comparatives NP contrasting, adjective
4) John is taller than Mary. NP contrasting, adverbial
5) Few people run as fast as John. NP contrasting, determiner
6) John bought more books than Mary. PP contrasting
7) John was happier in New York than in S-operator contrasting
London. VP-operator contrasting
8) Mary had more friends than John thought. CN contrasting
9) John hit Mary harder than he meant to. Preposition contrasting
10) More men than women bought the book. Internal contrasting in AP
11) More people voted for the proposal than Internal contrasting in adverbial
against.
12) Mary needs a larger car than this Fiat.
13) John ran faster than the world record.
Determiner/phrasal
14) More than 50 people signed the petition.
Unclear cases: possibly contrastive phrasals
15) John was born in the same city as Mary.
16) John arrived before Mary.
17) John likes Mary&apos;s house better than Mary John&apos;s.
</figure>
<bodyText confidence="0.543132">
way in which we intend to handle coordination, we post-
pone discussion to a later paper.
</bodyText>
<listItem confidence="0.9959558">
46) No one could have a safer and more promising future
than John.
47) Mary is more attractive than Jane and Sarah.
48) John visits the U.S. more often than Mary, but less
frequently than Carol.
</listItem>
<bodyText confidence="0.984678826086957">
49) The results were better than John claimed, but worse
than we had hoped.
Several other open questions also deserve mention. We
have not been very specific in giving rules about where
comparative complements may occur, and our treatment of
phrasal contrastives also appear to allow more readings
than really exist. It would certainly be desirable to find
rules to eliminate these, or at least heuristics to say which
readings can be regarded as unlikely. Another interesting
question is whether it is possible to make the theory more
compact, by collapsing the three formulas (*), (**), and
(***) into one; they are so similar that this seems intu-
itively quite feasible. We speculate that one may be able to
do this in a framework like that described in Pereira and
Pollack (1988), which allows conditional interpretation.
Finally, we say a few more words about the &amp;quot;discourse
comparatives&amp;quot; mentioned in Section 6. A cursory examina-
tion of the example sentences would suggest that most of
the missing comparative complements are of one of the
following: &amp;quot;than previously,&amp;quot; &amp;quot;than the one just mentioned,&amp;quot;
or &amp;quot;than is the case.&amp;quot; For example, taking another look at
sentences 43)-45), we can postulate that the complement is
as given below in italics.
</bodyText>
<listItem confidence="0.8945134">
43) The abandoned creature . . . committed a still graver
sin (than the one just mentioned).
44) At eight o&apos;clock the wind was blowing more strongly
(than previously).
45) I should be colder (than is the case) if I were dead.
</listItem>
<bodyText confidence="0.99392425">
To fill in these missing complements, it as usual seems clear
that pragmatic information is needed; researchers working
in discourse theory may find these problems worth investi-
gating.
</bodyText>
<sectionHeader confidence="0.984971" genericHeader="acknowledgments">
ACKNOWLEDGMENTS
</sectionHeader>
<bodyText confidence="0.998859">
We would like to thank the following people: several anonymous referees,
for insightful criticism of earlier versions of this paper; James Allen, Jerry
Hobbs, Fernando Pereira and Remko Scha for useful comments and
general encouragement; and, last but not least, Rune Gustavsson and
Siwert Sundstrom for helpfulness and flexibility with regard to financing
our research.
</bodyText>
<sectionHeader confidence="0.977512" genericHeader="references">
REFERENCES
</sectionHeader>
<bodyText confidence="0.722067636363636">
Alshawi, H.; Carter, D. M.; van Eijck, J.; Moore, R. C.; Moran, D. B.;
Pereira, F. N. C.; Pulman, S. G.; and Smith, A. G. 1989. Research
Program in Natural Language Processing: Final Report, SRI Techni-
cal Report.
Ballard, B. 1989. A General Computational Treatment of Comparatives
for Natural Language Question Answering. Proc. 26th ACL, 41-48.
Banks, A. 1986. Modifiers in Natural Language. B.A. Thesis, Uppsala
University.
Banks, A. and Rayner, M. 1987. Comparatives in Logic Grammars—Two
Viewpoints. Proceedings of the 2nd International Workshop on Natu-
ral Language Understanding and Logic Programming.
</bodyText>
<page confidence="0.829876">
102 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.93625125">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
Barwise, J. and Cooper, R. 1981. Generalized Quantifiers and Natural
Language. Linguistics and Philosophy. 4:159-219.
Bowen, J. and Carvalho, A. 1988. A Logic Grammar Formalism for
</note>
<table confidence="0.633100307692308">
Pronoun Endophora. Unpublished manuscript.
Bresnan, J. 1973. Syntax of the Comparative Clause Construction in
English. Linguistic Inquiry 4:275-343.
Cooper, R. 1983. Quantification and Syntactic Theory. D. Reidel,
Dordrecht, Holland.
Dahl, D.; Dowding, J.; Hirschman, L.; Lang, F.; Linebarger, M.; Palmer,
M.; Passonneau, R.; and Riley, L. 1989. Integrating Syntax, Seman-
tics, and Discourse: DARPA Natural Language Understanding Pro-
gram. R&amp;D Status Report, Paoli Research Center, Unisys Defense
Systems.
Dowty, D.; Wall, R. E.; and Peters, S. 1982. Introduction to Montague
Semantics. D. Reidel, Dordrecht, Holland.
Engdahl, E. 1985. Constituent Questions. D. Reidel.
</table>
<tableCaption confidence="0.896777777777778">
Fenstad, J. E.; Halvorsen, P. K.; Langholm, T.; and van Bentham, J. 1987.
Situations, Language and Logic. D. Reidel, Dordrecht, Holland.
Friedmann, C. 1989. A General Computational Treatment of the Compar-
ative. In Proc. 27th ACL. 161-168.
Grosz, B.; Appelt, D. E.; Martin, P. A.; and Pereira, F. C N. 1987.
TEAM: An Experiment in the Design of Transportable Natural-
Language Inferfaces. Artificial Intelligence 32(2):173-244.
Hankamer, J. 1971. Why There Are Two &amp;quot;than&amp;quot; &apos;s in English. CLS
9:179-192.
</tableCaption>
<figureCaption confidence="0.5272375">
Heim, I. 1985. Notes on Comparatives and Related Matters. Unpub-
lished manuscript.
Hobbs, J.; Stickel, M.; Martin, P.; and Edwards, D. 1988. Interpretation
as Abduction. Proc. 26th ACL, 95-103.
Kartunnen, L. 1986. D-PATR: A Development Environment for Unifica-
tion-Based Grammars. Proc. I I th COLING, 74-80.
</figureCaption>
<bodyText confidence="0.68126525">
Keenan, E. L. and Stavi J. 1986. Natural Language Determiners. Linguis-
tics and Philosophy 9:253-325.
Klein, E. 1980. A Semantics for Positive and Comparative Adjectives.
Linguistics and Philosophy 4:1-45.
</bodyText>
<figureCaption confidence="0.741404916666667">
Klein, E. 1981. The Interpretation of Adjectival, Nominal, and Adverbial
Comparatives. In: Groenendijk, J.; Janssen, T.; and Stokhof, M. (eds.)
Formal Methods in the Study of Language. Mathematical Center
Tracts, Amsterdam.
Klein, E. 1982. The Interpretation of Adjective Comparatives. Journal of
Linguistics 18:113-136.
Kriflca, M. 1987. Bemerkung zu Vergleichskonstruktioner. Unpublished
manuscript. University of Tiibingen.
Larson, R. 1988. Scope and Comparatives. Linguistics and Philosophy
11:1-27.
Lesmo, L. and Torasso, P. 1985. Analysis of Conjunction in a Rule-Based
Parser. Proc. 23rd ACL, 180-187.
McCord, M. C. 1986. Focalizers, the Scoping Problem, and Semantic
Interpretation Rules in Logic Grammars. In: van Carneghem, M. and
Warren, D. H. D. (eds.) Logic Programming and its Applications.
Ablex, Norwood, N.J.
McCord, M. C. 1987. Natural Language Processing in Prolog. In: Walker,
A. (ed.) Knowledge Systems and Prolog. Addison-Wesley, Reading,
MA.
Montague, R. 1974. The Proper Treatment of Quantification in English.
In: Thomason, R. (ed.) Formal Philosophy: Selected Papers of Rich-
ard Montague. Yale University Press, New Haven, CT.
Moran D. B. 1988. Quantifier Scoping in the SRI Core Language Engine.
Proc. 26th ACI, 33-40.
</figureCaption>
<bodyText confidence="0.550107833333333">
Pereira, F. N. C. 1983. Logic for Natural Language Analysis. SRI
Technical Note No 275.
Pereira, F. N. C. and Pollack, M. E. 1988. An Integrated Framework for
Semantic and Pragmatic Interpretation. Proc. 26th ACL, 75-86.
Pereira, F. N. C. and Shieber, S. 1985. Prolog and Natural Language
Understanding. CSLI lecture notes.
</bodyText>
<figureCaption confidence="0.846371214285714">
Pinkham, J. 1985. The Formation of Comparative Clauses in French and
English. Garland Publishing Inc., New York, NY.
C. Pollard and I. Sag. 1988. Information-Based Syntax and Semantics
CSL I, University of Chicago Press, Chicago, IL.
Rayner, M. and Banks, A. 1986. Temporal Relations and Logic Gram-
mars. Proc. ECAI-86, 2:9-14.
Rayner, M. and Banks, A. 1988. Parsing and Interpreting Comparatives.
Proc. 26th ACL, 49-60.
Rayner, M. and Banks, A. 1989. An Overview of the SNACK-85 Natural
Language System. In Plander, V. (ed.) Proc. 5th Intl. Conference on Al
and Information-Control Systems of Robots, North-Holland.
Woods, W. 1978. Semantics and Quantification in Natural-language
Question-Answering. In: Yovits, M. (ed.) Advances in Computers,
17:2-64. Academic Press. New York, NY.
</figureCaption>
<sectionHeader confidence="0.348197" genericHeader="references">
NOTES
</sectionHeader>
<listItem confidence="0.940173896551724">
1. Earlier versions of several of the results herein have already been
published in Banks (1986), Rayner and Banks (1986), Banks and
Rayner (1987), and Rayner and Banks (1988a; 1988b). Since a
number of important changes have been made, this report is to be
taken as superseding all five.
2. Current address: ZYX Sweden AB, Styrmansg. 6,114 54 Stockholm.
3. It appears, for example, that Japanese allows essentially the same
range of comparative complements, and assigns a parallel semantics
to them.
4. We borrow this useful term from the Core Language Engine project
(Alshawi et al. 1988; 1989).
5. Those familiar with Montague semantics will realize that the version
we are using here is in several respects fairly different from that in
PTQ. Most important, we more or less completely dispense with the
mechanisms for dealing with intentionality; since this isn&apos;t our con-
cern here, we feel that it would only confuse the issue. Readers who
disapprove of these ideas should have no great difficulty in converting
out derivations into more conventional ones.
6. There is some disagreement between applied and theoretical linguists
concerning the correct division of credit here. Although Woods and
his colleagues were the first people to realize the idea in practice, they
made no attempt to justify their work in formal terms; this was later
achieved independently by Cooper (1983), working within the Mon-
tague grammar school. Our work has to some extent been influenced
by both of these sources.
7. Mean bastard.
8. Excluding &amp;quot;discourse comparatives&amp;quot;: see Sections 6 and 7.
9. We would like to thank Carol Friedmann for bringing this example to
our attention.
</listItem>
<table confidence="0.444615266666667">
Computational Linguistics Volume 16, Number 2, June 1990 103
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
APPENDIX 1 TERMINOLOGY
Comparative Complement: the constituent introduced by the comparison marker
Comparative Operator: expressions like more, less, twice as much.
Comparison Marker: words like than, as.
Contrasted Material: constituent in the main clause against which a phrasal
comparative complement is compared
Head of the Comparison: refers to the comparative degree or determiner in the
main clause
Phrasal Comparative: a comparative complement which is not a comparative
clause.
Q: a null quantifier which is extraposed in the interpretation of clausal
comparatives.
APPENDIX 2 PROGRAM CODE
</table>
<tableCaption confidence="0.576452">
% The syntactic part of the system, written as an XG-grammar [Pereira 83]
% Internal XC stuff, used for extraposing constituents.
open x bracket ... close_x_bracket --&gt;
</tableCaption>
<equation confidence="0.9246435">
vp(vp(Verb.Mood,trace_np(Controller),Args)) --&gt;
verb(Verb,Nbod,Voice,Subcat_pattern),
with extma_anaphor(verb(Verb,Voice),
(verb_args(Subcat_pattern,Asgs,MWS,trace_np(Controller),Voice),
verb mods(Mbds,(1))).
% NPs. As explained in the paper, NP&apos;s consist of a determiner a CN.
question_amticle(Article) :-
member(Amticle,[which,which_pl,what,who,how many( _)».
question_np(Np) --&gt;
np(Np),
(Alp np(det(fArticle,_,_)),cn(_,Nods)),
(question_article(Article);
member(mole(„np(det([Article_1,_,_1),Cn)),Mods),
question_article(Article_1))).
np(np(detUArt,Det,Num»,
cn(Noun,MOds))) --&gt;
det(det([Ast,Det,Num»),
cn(cn(Noun,Mods),Det,Num),
(np_constraints(Art,Det,Num)),
optionally_aignal_comparative(np(det) [Art,Det,Num1),
cn(Noun,Mods))),
optional_comparand.
np(name(Nalle)) --&gt; name(Name).
det(det([Art,Det,Num») --&gt;
article(Art,Det,Num).
det(det([[],_,_))) --&gt; (1.
cn(cn(Noun,Niods),Det,Num) --&gt;
optional_adj(Mods),
optional_noun(Nbeis,Noun,Det,Num).
extrapose(s_coMp(S)) s_comp(S) --&gt; [1.
extrapose(vp_comp(Vp)) vp_comp(vp) --&gt; [1.
extrapose(np(A,13)) np(np(A,B)) --&gt; [1.
</equation>
<figure confidence="0.8029892">
extrapose(det(A)) det(det(A)) --&gt; 11.
extrapose(adv(A,B)) adv(adv(A,B)) --&gt; [].
% Clauses
question(y_n_q(S)) --&gt;
extraposed verb,
s(S).
% No undetermined NP&apos;s without articles
np. constraints (Axt,Det,Num) :-
dif(Art,)]).
np_constraints(0,det,_).
</figure>
<bodyText confidence="0.659458384615385">
% If there&apos;s an adjective, then we don&apos;t necessarily need a noun.
optional.noun(Mods,Noun,Det,Num) --&gt;
noun(Noun,Det,Num).
question(wh q(s(sUbject(Stbject),Vp))) --&gt; optional noungAdj),omitted noun,_,_) --&gt; O.
question_np(Subject),
YPCVp). % optionaLly_signal_comparative propagates rightward a request for a
comparative complement.
% Swedish is a verb-second language, so a fronted WHO forces the
% next thing to be a ,erb.
question(wh q(S)) --&gt;
extraposed_question_element,
extraposed verb,
s(S).
</bodyText>
<equation confidence="0.963646935483871">
mains(S) --&gt; s(S).
mains(S) --&gt;
extraposed adv,
extraposed verb,
s(S).
s(s(subject(Subject),Vp)) --&gt;
np(Subject),
vp (Vp) .
extraposed verb ... verb(Verb,Nbod,Voice,Frame_pattern) --&gt;
verb(Verb,Nlood,Voice,Frame_pattern).
extraposed question_element np(Question_element) --&gt;
question_np(Question_element).
extraposed question_element preposition(Prep) nP(Question_element) --0
preposition (Prep),
question_np(Question_element).
optionally nignal_ccaparative(X)
comparison_signalled(Comp_operator,X,Complement) --&gt;
{contains_degree(X,deg(comp(Comp_operator,Complement)))).
optionally aignal_camparative(X) --&gt;
{\+containa_degree(X,deg(ccep(_,J))).
contains_degree(det([art(_,Degree),_,J),Degree).
contains_degree(adj(_,deg(Degree»,deg(Degree)).
contains_cgree(adv(_,deg(Degree)),deg(Degree)).
contains_degree(ap_comp(Ap),Degree) :-
contains_degree(Ap,Degree).
contains_degree(cn(_,Mbde),Degree) :-
member(Mcd,Mods),
contains_degree(Mbd,Degree).
contains_degree(np(Det,Cn),Degree) :-
Contains_degree(Det,Degree);
contains_degree(Cn,Degree).
</equation>
<bodyText confidence="0.7171867">
% This is discussed at the end of section 4.
% If we have article comparison (&amp;quot;more&amp;quot;, &amp;quot;fewer&amp;quot;), then we can either
% extrapose an article (&amp;quot;/ have more cars than he has motorcycles.&amp;quot;)
% or a whole NP (&amp;quot;I have more friends in London than he has in New York.&amp;quot;)
bound_null_proforms(np(det) )art(Axt,deg(camp(_,_))),
Det, Num)),_),
det([41(0),Det,Num]),
q(Q)).
extraposed adv adv (Adv) --&gt;
adv (Ads). bound_null_proforms(np(detUart(Art,deg(comP(_,J»,
Det,Num1),
% The XG -pre -processor has been modified slightly so as to give a simple cn(Noun,Mods)),
% transparent treatment of bound anaphora. (This idea was borrowed from np(det([q(Q),Det,NUm]).
A (Bowen 4 Carvalho 88)). The form with extra_anaphor(Anaphor,Constituents) on(Noun,mds)),
% means that Constituents are to be parsed with Anaphor available as
% an anaphoric referent. This is used to treat verbs in comparative
% complements like &amp;quot;do&amp;quot; and &amp;quot;is&amp;quot;, which (we claim, at any rate), refer back cl(Q».
% If we have prenominal adjective comparison, then we have to extrapose
% to some verbal antecedent, e.g. A a whole NP. We form it by replacing the comparative adjective by a positive
% &amp;quot;Which kings reigned longer than Charles I did?&amp;quot; one.
</bodyText>
<page confidence="0.906385">
104 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<figure confidence="0.91582092">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
bound_null_proforms(np(Det,
on(NOun,[adj(Adj,cleg(comp(_,_)))))),
np(Det,
cn(Noun,(adj(Adj,deg(g(0)))])),
q(4)).
%
If we have predicate adjective comparison, we extrapose a similar adjective.
bound_null_proforms(apcomp(adj(Adj,deg(comp(_,_)))),
ap_comp(adj(Adj,deg(g(Q)))),
4(4)).
% With an adverb, a similar adverb is extraposed
bound_null_proforms(adv(Adv,deg(comp(_,_))),
adv(Adv,deg(g(o))),
4(0».
optional_adj((Adj]) --&gt; adj(Adj).
optional_adjap --&gt; [1.
adj(adj(Adj,(J)) --&gt;
adjective(AdJ).
adj(adj(Adj,deg(COmp(Comp operator,Ccmplement))))
canparative_adjective(Adj,Comp_operator).
%Verb ergs
% Each member in the list of arguments to the verb is a term of the form
% role(Arg type, Arg value). See section1.2.2
%Base case. If we&apos;ve parsed all the frame, we&apos;re finished
</figure>
<equation confidence="0.688857214285714">
verb_args([(,Hiods,(Mods,_,_) --&gt; (1.
verb args(iSubcatIRest],(Arg)Next_args],Out args,Controller,Voice) --&gt;
verb arg(Subcat,Arg,Controller,Voice),
verb_args(Rest,Next_args,Out_args,Controller,Voice).
verb_argsUagentlRest_subcat],Next_args,Out_args,Controller,passive) --&gt;
verb_args(Rest_subcat,Next_args,out args,Controller,Voice).
verb_arg(agent,role(agent,Controller),Controller,active) --&gt; [].
%With an active verb, we parse an object by parsing an NP
verb_arg(object,role(object,Np),_,active) --&gt;
nP(Np).
%But with a passive verb, the surface subject is the object
verb_arg(object,role(object,Controller),Controller,passive) --&gt; 1].
verb arg(prep_object(Prep),role(prep_object,Np),_,_) --&gt;
preposition (Prep),
nP (NP) .
verb_arg(relational_object, role (Head. np (bet, cn(person,Mods) ) (, ,active) --&gt;
np(np(Det,on(Head,blods))).
verb_arg(scomp,role(scomp,S),_,active) --&gt;
s_comp(S).
verb_arg(apcomp,role(ap_comp,Ap),_,active) --&gt;
ap_comp(Ap).
verb_arg(inf_comp,role(inf_comp,Vp),_,_) --&gt;
vp_comp(Vp).
s_cOMp(S) --&gt;
Eatt],S(S).
vp_comp(Vp) --&gt;
vP(vP).
ap_comp(apcomp(Adj)) --&gt;
</equation>
<bodyText confidence="0.9495733125">
adj(Adj),
optionally_signal_ccmparative(ap_comp(Adj)),
optional comparand.
% A complement to a comparative. This can only be parsed if we have
% earlier detected a comparative marker, which has made its presence
% known by putting a comparative signalled element on the extraposition
% list.
optional comparand --&gt;
comparison_signalled(Comp_operator,Associated constituent, Complement),
(complementizer_forcomp operator(Comp_operator,Complementizer)),
complementizer(Complementizer),
ccmparand_complement(Complementizer,Associated_constituent,Complement).
% First case: an NP or PP comparand, the simplest (and commonest)
% kind of contrastive comparative: Section 3.4.1. We may have an
% &amp;quot;anaphoric verb&amp;quot; with an NP, which is going to be available
% from the &amp;quot;verb anaphor stack&amp;quot; (see comments above).
</bodyText>
<equation confidence="0.7933545">
comparandcomplement(Complementizer,_,subject(NP)) --&gt;
optional vad(Complementizer),
(NP)
anaphoric_verb.
comparand_complement(_,_,Np) --&gt;
np (NP ) •
co1)complement(_,_,Role) --&gt;
pp
% Second case: CN-comparison (section 3.4.2)
comparand_complement(_,_,Cn) --&gt;
cn(Cn,Det,Num).
% Third case: an &amp;quot;S-operator&amp;quot; or &amp;quot;VP-operator&amp;quot; comparand, (section 3.4.3)
comparand complement(Complementizer,_,S_operator) --&gt;
optional vad(Complementizer),
scperator(Scperator).
comparand_complement(Complementizer,_,Vp_operator) --&gt;
optional vad(Complementizer),
vp_operator(vP_Operator).
scperator(s_operator(trace_s(Inner_s),S)) --&gt;
open_x_bracket,
extrapose(scomp(trace_s(Inner_s))),
s(S),
close_x_bracket.
vp_operator(vp_operator(trace vp(Inner_vp),S)) --&gt;
open_x_bracket,
extrapose(vP_P00P(trace_vp(Inner vp))),
s(S),
close_x_bracket.
% Fourth case: contrasted prepositions (section 3.4.5)
comparand_complement(_,,role marker(Prep)) --&gt;
preposition (Prep).
% Fifth case: clausal comparison (section 4)
comparand complement(Complementizer,Associated constituent,Clausal) --&gt;
optional_vad(Complementizer),
clausalcomparative(Clausal,Associated constituent).
clausal_comparative(clausal(O,S),Associated_constituent) --&gt;
</equation>
<bodyText confidence="0.864742222222222">
(bound null_proforms(Associated constituent,Null_proforms,Q)),
open_x_bracket,
extrapose(Null_proforms),
s(S),
close_x_bracket.
% Of course, the optional comparand will usually not be present!
% However, if a comparison has been signalled we have to pick it up somewhere,
% otherwise it will still be hanging around on the extraposition list
% when we reach the end of the sentence.
</bodyText>
<listItem confidence="0.772027666666667">
optionalcomparand --&gt; [].
% In Swedish, some comparative complements, may be preceded by an optional
% &amp;quot;vad&amp;quot; (&amp;quot;what&amp;quot;).
</listItem>
<equation confidence="0.66582425">
optionalvad(than) --&gt; [vac)).
optional_vad(than) --&gt; [].
optional_vad(Other) --&gt;
fdif(Other,than)).
</equation>
<bodyText confidence="0.3674241">
% Getting an &amp;quot;anaphoric verb&amp;quot; - see comments above.
anaphoric verb --&gt;
verb(Verb,_,_,_),
anaphorstack(Potential_referents),
(verb_anaphora_antecedent(Verb,Potential_referents)).
verb_anaphora_antecedent(Verb,Potential_referents) :-
member(Ref,Potential_referents),
verb anaphora match(verb,Ref).
verb_anaphora match(Verb,verb(Ref verb,active)) -
verb_anaphora_match_1(Verb,Ref_verb,active).
verb_anaphora match(verb,verb(Ref verb,passive)) :-
verb_anaphora match_1(Verb,Ref verb,passive).
% Rules for verb anaphora (grossly oversimplified - this is not
% the main subject of the paper))
verb_anaphora match_1(&apos;do&apos;,_,active).
verb anaphora match_1(have,have,active).
verb_anaphora_match_l(&apos;be_passive],_,passive).
verb anaphora match 1(&apos;be&apos;,&apos;be&apos;,active).
Computational Linguistics Volume 16, Number 2, June 1990 105
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</bodyText>
<equation confidence="0.949977764705883">
% Verb mods
verb mods(Mods,Mods) --&gt; [].
verb mods([ModIMods),Mods) --&gt;
verb mod (Mod),
optionally_signal_comparative(Mod),
optional_comparand.
verb mod(Pp) --&gt; pp(pp).
verb mod(Adv) --&gt; adv(Adv).
pp(role(Prep,Np)) --&gt;
preposition (Prep),
np(Np).
adv(adv(Adv,[1)) --&gt;
adverb(Adv).
adv(adv(Adv,deg(comp(Comp_operator,Complement))))
comparative_adverb(Adv,Comp_operator).
adjective(AdJ) --&gt;
[Word],(word(Word,Adj,adjective)).
adjective modifier (Mod) --&gt;
(Word),(word(Word,Mod,adjective modifier)).
adverb (Adverb) --&gt;
[word],(word(Word,Adverb,adverb)).
article(Art,Det,Num) --&gt;
[Word),(word(Word,Art,article(Det,Num))).
article(art(Art,deg(comp(Comp_operator,Complement))),
Det,Num) --&gt;
comparative_article(Art,Ccmp_operator,Det,Num).
comparative_adverb(Adverb,Comp_operator) --&gt;
[Word],(word(Word,Adverb,comparative_adverb(Comp_operator))).
comparative_adverb(Adv,Mod) --&gt;
adjective modifier(Mod),
[Word],{word(Word,Adv,adverb)).
comparative_adjective(Adj,more) --&gt;
[Word],(word(Word,Adj,comparative_adjective)).
comparative_adjective(Adj,Mod) --&gt;
adjective modifier(Mod),
[word],{word(Word,Adj,adjective)).
comparative_article(Art,Comp_pperator,Det,N1m) --&gt;
[Word),(word(Word,Art,article(Comparative,Comp_operator,Det,Num))).
complementizer(null) --&gt; (I.
complementirer (Comp) --&gt;
[Word],(word(Word,Comp,complementizer)].
name (Name) --&gt;
[word],(word(word,Name,name)).
noun(Noun,Det,Num) --0
[word),(word(Word,Noun,noun(Det,Num))).
preposition (Prep) --&gt;
(word),(word(Word,Prep,preposition)).
pronoun (Pronoun) --&gt;
[Word],(word(Word,Pronoun,pronoun)).
verb(Verb,Mood,Voice,prame_pattern) --&gt;
[Word],(word(Word,Verb,verb(Voice,Mood,Frame_pattern))).
</equation>
<bodyText confidence="0.939964125">
% A note on representation:
% evnt(lambda(X,P(X)) is to be read as : &amp;quot;An event E occurred, such that P(E)
% held.
% quant(0,1ambda(X,P(X)),lambda(Y,S(Y))
% is to be taken as equivalent with
% Q(lambda(x,R(X)),lambda(Y,S(Y))).
% When reading formulas, it will often
% some sense being &amp;quot;the same variable&amp;quot;
</bodyText>
<equation confidence="0.908724236842105">
% q(N,P) is to be read as denoting the generalized quantifier {NIP).
% q(N,))) represents the quantifier (N), i.e. &amp;quot;exactly N&amp;quot;
top_sem(y_n_q(S),y_n_q(Sem))
s_form(S,Sem).
top_sem(wh_q(S),wh_q(Sem))
s_form(S,Sem).
top_sem(S,Sem) -
s_form(S,Sem).
s_form(S,Porm) :-
syn_to_qlf(S,01f),
reduce(01f,Form).
% syn_to_qlf converts the syntactic form to the quasi-logical form
syn_to_glf ()I, [] ) .
syn_to_qltuFirstlRest],(First_q1fIRest_qlf]) :-
syn_tollf(First,First_qlf),
syn_to_!Ilf(Rest,Rest_qlf).
syn_to_qlf(s(Subject,Vp),Q1f) :-
syn_to_glf(Subject,Subj_qlf),
syn to_qlf(Vp,Vp_qlf),
rewrite_q1f0(apply(Subj_qlf,Vp_qlf),Q1f).
syn_to_poi(vp(Head,_,trace_bP(X),Frame),vp(Head,X,01f)) :-
syn_to_qlf(Frame,01f).
syn_to_qlf(role(Role,Arg),role(role marker(Role),Arg_qlf)) :-
syn_to_qlf(Arg,Arg qlf).
syn_to_qlf(subject(Np),subject(Np_qlf)) :-
syn_to_qlf(Np,Np_qlf).
syn_to_Rlf(np(Det,Cn),qpant(Det_qlf,Cn_qlf)) -
syn_to_qlf(Det,Det_qlf),
syn_to qlf(Cn,Cn_qlf).
syn_to_cpt(ap comp(Adj),Q1f) :-
synt:o_qlf(Adj,Q1f).
syn_to qlf(trace_np(Var),trace np(Var)).
syn_to_qlf(detHart(_,deg(Degree)))_,_)),Degree_qlf) :-
syn_to_plf(Degree,Degree_qlf).
syn_to_ql f (det ( )q (Q) q (Q) ) ) •
syn_to2:11f(det(Met,D,N)),(Det,D,ND :-
\+functor(Det,art„),
\+functor(Det,q,_).
</equation>
<bodyText confidence="0.807113454545454">
syn to cp.f(cn(Head,Mods),cn(Head,Mods_qlf)) :-
syn_to_qlf(Molds,Mcds_olf).
syn_to_qlf(name(Name),name(Name)).
syn_too!lf(adj(Adj,deg(Degree)),
abstraction(X,relation([Adj,X,Degree_qlf]))) :-
syn_to_glf(Degree,Degree_qlf).
syn_to_qlf(adv(Adv,deg(Degree)),
abstraction(X,relation)[Adv,X,Degree_qlf]))) :-
syn_to_glf(Degree,Degree_qlf).
syn_to_qlf(comp(Comp_operator,clausal(q(01),S)),
4(O,conj(relation(CComp_operator,Q,01]),
S.Alf)))
syn_to_qlf(comp(Comp_operator,Phrasal),
c_degree(Comp_operator,Phrasal_qlf)) :-
\+functor(Phrasal,clausal,_),
syn_to_qlf(Phrasal,Phrasal_qlf).
syn to_qlf (q(0),q(Q, [I)).
% This is for &amp;quot;Soperators&amp;quot;
syn to_qlf(trace s(X),trace_s(X)).
% And this is for VP-operators.
syn_to_qlf(trace vp(X),trace_vp(X)).
syn_to_q)f(role marker(Prep),role marker(Prep)).
</bodyText>
<equation confidence="0.832247">
syn_to_qlf(s_operator(trace_s(X),S),s_operator(X,S_operator_qlf)) :-
syn_to glf(S,S_operator_qlf).
syn_to_Alf(vp_operator(trace_vp(X),S),vp_operator(X,S_Rlf)) :-
syn_tocilf(S,S_qlf) .
rewrite_q1f0(01f0,01f) :-
</equation>
<bodyText confidence="0.626912">
contaira_functor(01f0,c_degree/2),!,
rewrite_qlf(41f0,01f).
rewrite gli0(01f,01f).
% comparison nodes can be inserted in the following places:
</bodyText>
<page confidence="0.4243335">
% 1. Over a &amp;quot;role&amp;quot; node in a up
% 2. Over a &amp;quot;vp&amp;quot; node
</page>
<bodyText confidence="0.999627">
), where 0 is a generalized quantifier,
be helpful to think of X and Y as in
</bodyText>
<page confidence="0.793826">
106 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.907927">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<bodyText confidence="0.864367625">
% 3. Over an &amp;quot;abstraction&amp;quot; node (really, this should be unified with 2.)
% 4. Over an &amp;quot;apply&amp;quot; node
% rewrite_qlf recursively goes down the qlf: when it finds a place where
% a comparison could potentially occur, it checks to see if it can make one.
% That is, it
% a. tries to extract a c_complement and store it.
% b. tries to find a suitable contrast.
% c. constructs the comparison node and inserts it.
</bodyText>
<figure confidence="0.784379236111111">
rewrite_glf(Q1f0,Q1f) :-
rewrite_rilf_on_subtrees(01f0,Q1f).
rewrite_glf(Q1f0,41f) :-
comparison_insertion_site(Olf0),
raise_pomparative(01f0,Q1f1,Store),
contrastand_insert_comparison(Q1f1,Store,Q1f).
comparison_insertion_site(frole(_,_)1_1).
comparison_insertion_site(vp(_,_,_)).
ccmparison_insertion_site(abstraction(_,_)).
comparison_insertion_site(apply(_,_)).
contrast and insert comparison (QUO, Store,Q1f) :-
Store c_stored item(C_complement,_,Q),
find contrastO(C_complement,Q1f0,Q1f1,Contrast,C,(2),
insert_normal_comparison(Q1f1,Store,Contrast,C,Q1f).
contrast_and insert_comparison(Olfl,Store,Q1f) :-
insert_a_PPerator_comparison(Q1f1,Store,01f).
contrast and insert_ccmparison(Q1f1,Store,Q1f) :-
insert abstracted variable_comparison(Q1f1,Store,Q1f).
C_complement s_operator(_,_),
Qlf °
%
Raise comparative lifts a c_degree out of a constituent, leaving a
% Q behind.
raise_comparative(X,_,_) var(X),!,fail.
raise_comparative(c_degree(Coperator,C_complement),
0,
c_stored_item(C_ccaplement,C_operator,Q)).
raise_comparative(relation(List0),
relation(List1),
Store) :-
raise_comparative(ListO,Listl,Store).
raise_comparative(MIR),W1111),Store) :-
raise_comparative(FO,F1,Store).
raise_comparative(EFIR5),(F)R1(,Store) :-
raise_ccmparative(RO,R1,Store).
raise_comparative(applY(Q1f0,X),
apply(Q1f1,X),
Store) :-
raise_comparative(0100,01f1,Store).
raise_comparative(aPPly(X,Q1f0),
apply(X,01f1),
Store) :-
raise_comparative(Q1f0,01f1,Store).
raise_comparative(abstraction(X,Q1f0),
insert_normal_comparison( abstraction(X,Q1f1),
Qlf, Store)
c_stored item(C complement,C_operator,Q), raise_comparative(Q1f0,01f1,Store).
Contrast,
C,
comparison (Contrast,
C_complement,
C_operator,
C.
raise_comparative(quant(DetO,Cn_item),
quant(Detl,cn_item),
Store) :-
raise_comparative(DetO,Detl,Store).
0,
Qlf)).
% This is the first special case from section 3.3. The qlf
% under the comparison must be an abstraction, and the C_complement
% must be an NP denotation.
insert_abstracted_variable_comparison(
Qlf,
c_stored item(C_complement,C_operator,Q),
abstraction(Xl,
comparison(trace_np(X1),
C_complement,
C_operator,
C,
Q.
RPPlY(C,010))) :-
</figure>
<bodyText confidence="0.880551875">
np_denotation(C_complement),
Qlf abstraction(„_).
% This is the second special case from section 3.3. The C_complement
% must be an s_operator, and the qlf under the comparison something
% that an s_operator can be applied to - an S or VP denotation.
% The second clause is to take care of a subtle problem that arises
% if the s_operator&apos;s argument is a VP-denotation: see the remarks
% before Table 4 in section 3.4.3.
</bodyText>
<figure confidence="0.964558238095238">
insert_s_operator_comparison(
Qlf,
c_stored item(C_ccmplement,C_operator,Q),
comparison(s operator(S,S),
C_complement,
C_operator,
C,
raise_comparative(quant(Det,on(Read,M0d0()),
quant(Det,cn(Head,(Nrod1))),
Store) :-
raise_comparative(ModO,Modl,Store).
raise_comparative(role(Role,Quant0),
role(Role,Quant1),
Store) :-
raise_comparativeNvantO,Quantl,Store).
raise_comparative(subject(Quant0),
sabject(Quant1),
Store) :-
raise_comparative(QuantO,Quantl,Store).
raise_comparative(vP(Head,X,01f0),
vP(Nead,X,Q1f1),
</figure>
<equation confidence="0.839058909090909">
Store) :-
raise_comparative(Q1f0,Q1f1,Store).
rewrite_cilf_on_subtrees(apply(Np,Vp0),apply(Np,Vp)) :-
rewrite_glf(Vp0,vp).
rewrite_qlf on_subtrees(app1Y(NPO,VP),apply(Np,Vp))
rewrite_qlf(Np0,Np).
rewrite_glf_on_subtrees(vp(Head,X,Q1f0),vp(Head,X,Q1f)) :-
rewrite_glf(Q1f0,01f).
rewrite_qlf_on subtreesUFOIR),(FIR)) :-
rewrite_qlf(FO,F).
rewrite_qlf_on subtreesaFIR0],[21111) :-
rewrite_qlf(RO,R).
Q, rewrite_glf_on subtrees(role(Role,Quant0),role(Role,Quant)) :-
apply(C,Q1f))) rewrite_cilf(QuantO,Quant).
C_complement s_operator(_,_),
Qlf = apply(_,_). rewrite_glf_on_subtrees(subject(Quant0),subject(Quant)) :-
rewrite_cilf(QuantO,Quant).
insert_a_operator_comparison(
Qlf, rewrite_glf_on_subtrees(guant(Det,CnO),T/ant(Oet,Cn)) :-
c_stored item(C_complement,C_operator,Q), rewrite_glf(CnO,Cn).
abstraction(
X. rewrite_glf_on_subtrees(cn(Read,Mcds0),m(sead,Mode))
</equation>
<bodyText confidence="0.896330666666667">
comparison(s_operator(S,S), rewrite_qlf(MOds0,Nbds).
C_complement,
C_operator, % find contrast checks a C_complement against something that might
C, % be a contrastable item (or contain one). The last three arguments are: what
Q, % the thing is replaced by (either the C, or something containing the C),
apply(C,(apply(trace_np(X), % the extracted contrasted item, and a pointer to the C. Note that the
</bodyText>
<figure confidence="0.883090727272727">
Qlf)))))) % contrast cannot contain the Q - hence the following clause.
Computational Linguistics Volume 16, Number 2, June 1990 107
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
find contrastO(C_complement,Q1f0,Q1f,Contrast,C,Q) :-
find contraSt(C_complement,(01f0,01f,Contrast,C),
\+contains_id(Contrast,0).
% There are a large number of cases. It would clearly be possible to collapse
% at least some of these.
% The first five are essentially similar:
% 1: we&apos;re looking at a role, and the C_complement is also a role.
% (John has more books in the bedroom than in the kitchen)
find_contrast(role(Role,_),
role(Role,Quant),
C,role(Role,Quant),C).
% 2: we&apos;re looking at a role, and the C_complement is an NP.
% (John has more books in the bedroom than the kitchen).
find contrast(C_complement,
role(Role,Quant),
role(Role,C),Quant,C) :-
np_denotation(C_ccaplement).
% 3: we&apos;re looking at an NP, and the C_complement is an NP.
find_contrast(C_complement,
Contrast,
C,Contrast,C) :-
np_denotation(C_complement),
np denotation(Contrast).
% 4: we&apos;re looking at a subject, and the C_complement is something
% that can constrast against the subject&apos;s NP.
% (John has more books in the kitchen than Mary).
find_contrast(C_complement,
subject )Quant),
subject(Quant1),Contrast,C) :-
find_contrast(C_complement,Quant,Quantl,Contrast,C).
</figure>
<tableCaption confidence="0.669016823529412">
% 5: we&apos;re looking at a subject, and the C_complement is a subject.
% (John has more books in the kitchen than Mien&apos; does).
find_contrast(sUbject(_),
subject )Quant).
subject(C),Quant,C).
% 6: CN contrasting; we&apos;re looking at an NP, and the C_complement is a on.
% (More men have books in the kitchen than women).
find_contrast(cn(_,_),
quant(Det,Cn),
quant(Det,C),Cn,C).
% 7: VP operator contrasting; we&apos;re looking at a subject, and the
% C_complement is a vp_operator.
% (John has more books in the kitchen than Mary is able to).
find_contrast(vp_operator(_,_),
subject )Quant),
subject(C),Quant,C).
% 8: Preposition contrasting; we&apos;re looking at a role, and the
% C_ccmplement is a role marker with a &amp;quot;contrastable&amp;quot; role.
% (&amp;quot;more women voted for the proposal than against&amp;quot;.)
find_contrast(role_marker(Comp_role),
role(role marker(Role),Quant),
role(C,Quant),role marker(Rale),C) :-
contrastable_roles(Comp_role,Role).
contrastable_rOleS(X,X) :-
(contrastable_roles_1(X,X);
contrastable_roles_1(Y,X)).
% One example of a clause defining a contrastable role pair:
contrastable_roles_1(for,against).
% 9: Recursive cases:
find contrast(C_complement,
vp(Head,X,Q1f),
vp(Head,X,O1f1),
Contrasted,C) :-
find contrast(C_complement,Olf,Q1f1,Contrasted,C).
</tableCaption>
<equation confidence="0.624705606060606">
find contrast(C_complement,
apply(Olf,X),
aPply(Olf1,X),
Contrasted,C) :-
find contrast(C_complement,Olf,Q1f1,Contrasted,C).
find contrast (C_complement,
apply(X,Q1f),
apply(X,O1f1),
Contrasted,C) :-
find contrast(C_complement,01f,Q1f1,Contrasted,C).
find contrast(C_complement,(F)RL[F_1(0],Contrast,C) :-
find contrast(C complement,F,F_1,Contrast,C).
find_contrest(C_complement,(FIR],[FIR 1],Contrast,C) :-
find_contrast(C_complement,11,11 1,Contrast,C).
% Reduce turns the QLF into a logical form by recursively going through it.
reduce(X,X) var(X),!.
reduce(appLy(F_qlf,Arg qlf),LF) :-
reduce(F_qlf,F),
reduce(Arg qlf,Arg),
apply(F,Arg,LF).
reduce(abstraction(X,Q1f),X(X,LF)) :-
reduce(01f,LF).
% We have to reduce possible degree arguments to a relation.
reduce(relation(Arg_list0),LF) :-
reduce_arg list(Arg listO,Arg_list),
IF =.. Arg_list.
reduce(ccnj(Q1f1,Q1f2),LF) :-
reduce(Q1f1,LF1),
reduce(Q1f2,LF2),
conjoin([LF1,LF2(,LF).
reduce(subject(Olf),LF) reduce(Olf,LF).
reduce(quart(Det,Cn),
A.()4_sem,quant(Det_sem,Cn_sem,Vp_sem))) :-
</equation>
<bodyText confidence="0.8464226">
reduce_dct(Det,Det_sem),
reduce(Cr,Cn_sem).
% &amp;quot;substitcte(X)&amp;quot; denotes the higher-order function XP.P(X).
% Our simple-minded implementation of &amp;quot;apply&amp;quot; can&apos;t deal with anything more
% complicated than simple substitutions, so this has to be treated as a
% special case.
reduce(trace_np(X),substitute(X)).
reduce(name(N),substitute(N)).
reduce(vp_operator(X,Vp_op),X(X,Vp_op_sem))
reduce(Vp.op,Vp_pp_sem).
</bodyText>
<equation confidence="0.744105954545454">
reduce(en(Head,0),X(X,Head rel)) :-
Head rel [Head,X].
reduce(cn(Head,[Adj_qlf]),LF) :-
Head rel [Head,X],
reduce(Adj_qlf,Adj_LF),
conjoin([1(X,Head rel),Adj_LFLLF).
reduce(vp(nead,x,Q1f),X(X,LF)) :-
reduce_vP(Q1f,LF,Head,Props-Props).
reduce(trace_vp(X),X).
reduce(trace_s(X),X).
reduce(rolemarker(Role),Role).
reduce(s_operator(X,Q1f),X(X,LF)) :-
reduce(21f,LF).
% This is te expression 0” in section 3.2
reduce(comparison(Contrast,C_complement,C_operator,C,Q,Psil),LF) :-
Nl_condition = relation([C_nperator,N,N11),
P.111 = X(Q.X(C,Psil)),
applyassill,q(N1,Nl_condition),N conditlon0),
apply(NconditionO,C_complement,N_condition),
apply(Psill,q(N,N_condition),Q1f0),
apply(01f0,Contrast,01f),
reduce(Q1ff,LF).
</equation>
<page confidence="0.848998">
108 Computational Linguistics Volume 16, Number 2, June 1990
</page>
<note confidence="0.889922">
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
</note>
<tableCaption confidence="0.5825945">
reduce)((,([).
% reduce_vp is a special form of reduce for reducing the list of verb argS.
% The arguments are:
% 1: Qlf - a list of verb_arg nodes
% 2: Piece of IF produced by reducing it
% 3: The head verb
% 4: a d-list of lambda abstractions, which will end up as properties of the
% event associated with the head verb.
</tableCaption>
<figure confidence="0.895169808510638">
reduce vP(I),evnt(Property),Head,Event_properties-(])
Head rel [Head,XI,
conjoin([X(X,Read rel)!Event_properties],Property).
reduce vp([role(role marker(Role),NP_qlf)!Rest_args),
LF,Head,Event_properties-(X(E,Role_relation)!Rest_properties]) :-
np_denotation(NP qlf),
Role relation (Role,E,X],
reduce(NP qlf,NP LF),
reduce vp(Rest_args,Rest_LF,Head,Event_properties-Rest_properties),
apply(NP_LF,X(X,Rest_LF),LF).
wh_q(quant(wh_pl
X(A,king(A))
X(B,evnt(X(C,(and
reign(C)
agent(C,B)
long(C
q(D
/(B,evnt(X(E,(and
reign(E)
age
:::g (
ntE,Gustav III)
q(F
more(D,F)))))))))))))))
2: (hade,n)gon,kung,fler,$)ner,(n,Gustav Wasa)
had any king more sons than Gustav Wasa?
Syntactic form
y_n q(s(subject(np(det((some
reduce_vp([role(role marker(Role),Q1f)IRest_ergsl,
undet
LF,Head,Event_properties-[X(E,Role_relation)1Rest_properties])
sing])
\+np_denotation(Q1f),
cm (king
Role_relation =.. [Role,E,Role_LF],
(1)))
reduce(Q1f,Role_LF),
vp(have
reduce_vp(Rest_args,LF,Read,Event_properties-Rest_properties).
finite
trace_np(A)
reduce vp((abstraction(X,Q1fIlReStI, (role (agent
LF,Head,Event_properties-[X(X,Sem)!Rest_properties]) - trace_np(A))
reduce(Q1f,Sem), role (son
reduce vp(Rest,LF,Head,Event_properties-Rest_properties). np(det((art(many
deg(comp(more
reduce arg list((j,[)). name(Gustav Wasa))))
</figure>
<equation confidence="0.885383117647059">
reduce_arg list)[FOIRO),IFIR]) model
reduce_arg(FO,F), plur])
reduce_arg_list(RO,R). cn(person
( ] ) ) ) ] ) ) )
reduce_arg(x,x) var(X),!.
reduce arg(q(N,Q1f),q(N,LF)) :-
reduce(Q1f,LF).
reduce_arg(x,X).
reduce_det(fa,undet,sing),ex) !.
reduce_det([&apos;some&apos;,undet,sing],ex) - !.
reduce_det(fmany,undet,plur],many) !.
reduce_det(([],undet,sing),ex) - I.
reduce_det([[1,det,singl,the) - !.
reduce_det((which,_,_],Wh) !.
reduce_det((which_pl,_,j,wh_pl) !.
reduce_det(q(N,Q1f),q(N,LF)) !,
reduce(Q1f,LF).
</equation>
<bodyText confidence="0.867304666666667">
np_denotation(quant(_,_)).
np_denotation(name(_)).
np_denotation(trace_np(_)).
</bodyText>
<figure confidence="0.987564036474164">
Logical form
y_n_q(quant(ex
king (A)
X(B,quant(q(C
1(B,quant(q(D
more(C,D))
i(E,person(E))
X(F,evnt(A(G,(and
have (G)
agent(G,Gustav Wasa)
son(G,F)]))))))
person (H)
A(I,evnt(A(J,[and
have (J(
agent(J,B)
son(J,I)))))))))
3: (dog,Gustav Wasa,fire,Gustav /I Adolf]
died Gustav Wasa before Gustav II Adolf?
Syntactic form
APPENDIX 3 EXAMPLES
1: [vilka,kungar,regerade,l(ngre,{n,Gustav III]
which kings reigned longer than Gustav III?
Syntactic form
y_n_q(s(subject(name(Gustav Wasa))
vp(die
finite
trace_np(A)
[role (agent
trace_pp(A))
adv(at_time
deg(Ccep(before
name(Gustav II Adolf))))))))
Logical form
wh_q(s(subject(np(det([which_pl
undet
plur))
cm (king
ID))
vp(reign
finite
trace_np(A)
(role (agent
trace_np(A))
adv (long
deg(comp(more
name (Gustav ///))))))))
y_n_q(evnt(X(A,(and
die (A)
agent(A,Gustav Wasa)
at_time(A
q(B
l(C,evnt().(D,(and
die(D)
agent(D,Gustav // Adolf)
at_time(D
q(E
before(B,E)))j)))))j)))
4: (vilka,kungar,var,mer,berlmda,(n,Karl XIII
Logical form which kings were more famous than Karl XII?
Computational Linguistics Volume 16, Number 2, June 1990 109
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
Syntactic form 6: [Marie,klpte,en,dyrare,vas,(n,vad,Kalle,klpte]
wh_q(s(subject(np(det(fwhich_pl Mary bought a dearer vase than (what) Charlie bought.
undet
plurl)
cm (king
[1)))
Syntactic form
op (be
finite
trace_np(A)
[role (agent
trace_np(A))
role(ap_comp
ap_comp(adj(famous
deg(comp(more
name(Earl XII))))))1)))
Charlie bought more books than (what) Mary could carry.
s(subject(name(Charlie))
vp(buy
finite
trace_np(A)
[role (agent
trace_np(A))
role (object
np(detuart(many
deg(comp(more
clausal [q(5(
s(subject(name(Mary))
vp(be able to
finite
trace_pp(C)
[role (agent
trace_np(C))
role(inf_comp
vp(carry
infinite
trace_np(D)
[role (agent
trace_hp(n))
role (object
NP(det(ig(170
undet
plur])
cn(book
[]))))))]))))))
undet
plur])
cn(book
[DM))
Logical form
quant(q(A
land
more(A,B)
evnt(X(C,[and
be able to(C)
agent(C,Mary)
inf_comp(C
X(D,quant(q(B,[])
X(E,book(E))
X(F,evnt(),(G,(and
carry (G(
agent(G,D)
object(G,F))))))))]))))
X(H,book(H))
X(I,evnt(X(J,]and
buy (J(
agent(J,Charlie)
object(J,I)]))))
s(subject(name(Mary))
vp0),,y
finite
trace_np(A)
[role (agent
trace_np(B))
role (object
np(det(Ea
undet
sing])
cn(vase
[adj(expensive
deg(comp(more
clausal(q(B)
s(subject(name(Charlie))
vP(buy
finite
trace_np(C)
[role (agent
trace_np(C))
role (object
np(det((a
undet
sing])
cn(vase
fadj(expensive
deg(q(B)))
Logical form
quant (ex
X(h,(and
vase (A)
expensive (A
q(13
[and
more(B,C)
quant (es
1)5, [and
vase(B)
expensive(h,q(C,[1])])
X(E,evnt(X(F,[and
buy (F)
agent(F,Charlie)
object(F,E)1))))]))))
XIG,evnt(X(H,[and
buy(H)
agent(H,Mary)
object(H,G)]))))
7. (m)nga,turister,spenderade,fler,kronor,i,London,fn,i,New York]
many tourists spent more kronor in London than in New York
Syntactic form
s(subject(np(det([many
undet
plur])
cn(tourist
[ I ) ) )
vP(apend
finite
trace_hp(A)
[role (agent
trace_np(A))
role (object
np(det) [art(many
deg(comp(more
role (in
nem= (New York) ) ) ) )
undet
plur])
cn(krona
[])))
role (in
name (London)
Logical form
wh_q(quant(wh_pl
X(A,king(A))
103,evnt(X(C,[and
be(C)
agent(C,B)
ap_comp(C
X(D,famous(D
q(E
famous (Karl XII
q(F,more(E,B)))))))])))))
5: [Kalle,klpte,fler,blcker,{n,vad,Marie,kunde,b(ra]
Syntactic form ]))))))))))])))1))
110 Computational Linguistics Volume 16, Number 2, June 1990
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
Logical form
quant (many
tourist (A)
).(B,quant(q(C
103,quant(q(D,00re(C,D))
1(E,krona(E))
X(F,evnt(l(G,[and
spend(G)
agent(G,B)
object(G,F)
in(G,New York)1))))))
X(H,krona(8))
),(I,evnt(X(J,(and
spend )J)
agent(J,B)
object (5,1)
in(J,London)]))))))
8: (Gustav Wasa,hade,fler,(1skarinnor,(11,Kalle,p)stod]
Logical form
quant(q(A
quant(q(B
more (A
B))
mc,man(c))
X(B,evnt(X(E,[and
read(E)
agent(E,D)
object(E,News of the World)])))))
woman (F)
X(D,evnt(l(G,(and
read(G)
agent(G,D)
object(G,News of the World)]))))
10: (Marie,verkar,l(ngre,(n,Ealle]
Mary looks taller than Charlie.
Gustav Wasa had more mistresses than Charlie claimed.
Syntactic form
Syntactic form
s(subject(name(Gustav Wasa)) s(subject(name(Mary))
vp(have vp(appear
finite finite
trace_np(A) trace_np(A)
(role (agent (role (agent
trace_np(A)) trace_np(A))
role (mistress role(ap_ccep
np(det((art(many ap comp(adj(tall
deg(ccap(more deg(comp(more
name (Charlie))))))(()
s_operator(trace_s(B) Logical form
s(subject(nwne(Charlie))
vp(claim
finite
trace_np(C)
(role (agent
trace_np(C))
role(s_comp
trace_s(B))1))))))
undet evnt(X(A,(and
plur]) appear (A)
on (person agent(A,Mary)
[I)))) ap_comp(A
103,tall(B
q(C
tall (Charlie
q(D,more(C,D))))))))))
11: (Kalle,springer,fortare,in,vad,Marie,kan]
Logical form
quant(q(A Charlie runs faster than Mary can.
Syntactic form
evnt(1)5,[and
claim )B(
agent(B,Charlie)
s_comp(B
quant(q(C,more(A,C))
X(D,person(D))
A(E,evnt(1(F,[and
have (F)
agent(F,Gustav Wasa)
mistress(F,E)1)))))))))
X(G,person(G))
l(H,evnt(/(I,(and
have(/)
agent(I,Gustav Wasa)
mistress (1,8))))
9: (fler,kvinnor,(n,m(n,liser,Hint i Veckan)
more women than men read &apos;News of the world.
s(subject(name(Charlie))
vp(run
finite
trace_np(A)
(role )agent
trace_np(A))
adv (fast
deq(ccap(more
vp_operator
(trace_vp(a)
s(aubject(name(Mary))
vp(be able to
finite
trace_np(C)
(role (agent
trace_np(C))
role(inf_comp
trace_vp(B)))))))))]))
Syntactic form
Logical form
s(subject(np(detUart(many
deg(comp(more evnt(X(A,(and
cm (man run(A)
OM) agent(A,Charlie)
undet fast (A
plur]) q(B
cm (woman evnt(l(C,(and
[1))) be able to(C)
</figure>
<reference confidence="0.893771090909091">
vp(read agent(C,Mary)
finite inf_comp(C
trace_np(A) l(D,evnt(X(E,(and
[role (agent run(E)
trace_np(A)) agent(E,D)
role (object fast(E,q(F,more(B,F)
name(News of the World))))) ))1))))1)))))))
Computational Linguistics Volume 16, Number 2, June 1990 111
Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions
21, (fler,kvinnor,r)stade,f1r,firslaget,ln,emot] Logical form
more women voted for the-suggestion than against.
</reference>
<figure confidence="0.969248">
quant(q(A
quant(q(B,more(A,B))
Syntactic form A(C,woman(C))
A(0,quant(the
A(E,suggestion(S))
s(subject(np(det((art(many A(F,evnt(A(G, (and
deg(ccmp(more vote(G)
role marker(against)))) agent (0,0)
undet against(G,F)))))))))
plur]) ((H,maman(H))
cn(woman A(D,cpaant(the
(1))) A(I,suggestion(I))
vp(vote A(J,evnt(1(K, [and
finite vote(K)
trace_np(A) agent(K,D)
(role(agent for(K,J)]))))))
trace_nP(K))
role (for
np(det((]]
det
sing])
cm (suggestion
WM))
</figure>
<page confidence="0.696939">
112 Couriputational Linguistics Volume 16, Number 2, June 1990
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.053149">
<title confidence="0.984673">AN IMPLEMENTABLE SEMANTICS FOR CONSTRUCTIONS&apos;</title>
<author confidence="0.795306">Rayner</author>
<author confidence="0.795306">Amelie</author>
<affiliation confidence="0.854198">Swedish Institute of Computer</affiliation>
<address confidence="0.776794">Box</address>
<pubnum confidence="0.383721">S-16428</pubnum>
<abstract confidence="0.989739534161491">Sweden We describe a comprehensive treatment of the syntax and semantics of comparative constructions based on theoretical work by Pinkham, which can be implemented in a relatively straightforward fashion within a feature-based phrase-structure grammar. Comparatives are divided up into &amp;quot;clausal&amp;quot; and &amp;quot;phrasal&amp;quot; constructions; in contrast to most previous theories, however, phrasals are not regarded as reduced forms of clausals. We begin by defining a Montagovian semantics for phrasal comparatives that directly links interpretation rules to the surface syntactic structure; we then show how this solution can be made computationally more efficient by &amp;quot;factoring&amp;quot; the interpretation through an intermediate level of representation, using a method similar to that used for dealing with scoping phenomena. Detailed examples are provided, showing how the method can correctly describe the semantics of a variety of superficially widely different comparative constructions. The ideas have all been implemented within a large-scale grammar for Swedish, a &amp;quot;toy&amp;quot; version of which is presented, along with examples of the output. 1 1.1 OVERVIEW This paper is written with two different, though to some extent overlapping, audiences in mind. On the practical side, we address ourselves to the natural language interface constructor, who wants to expand the coverge of her system so as to incorporate comparative constructions; the state of the art has now progressed to the point where it is generally acknowledged that this is a problem that a serious system must attempt to deal with. In the following, we will thus attempt to describe our ideas in a sufficiently concrete fashion that they can be used as an implementation guide. Typical examples of comparatives according to the traditional classification are the following: Clausal comparatives 1) Mary was happier in New York than John was in London. 2) John has more books than Mary has newspapers. 3) The table is longer than it is wide. Comparative ellipsis 4) John is taller than Mary. Few people run as John. 6) John bought more books than Mary. 7) John was happier in New York than in London. 8) Mary had more friends than John thought. 9) John hit Mary harder than he meant to. 10) More men than women bought the book. 11) More people voted for the proposal than against. 12) John likes Mary&apos;s house better than Mary John&apos;s. Unclear cases 13) More than 50 people signed the petition. 14) Mary needs a larger car than this Fiat. 15) John ran faster than the world record. 16) John was born in the same city as Mary. 17) John arrived before Mary. On the theoretical side, we want to re-examine some fundamental questions about the nature of the comparative construction, and in particular about the phenomenon generally referred to as &amp;quot;comparative ellipsis&amp;quot;; by this, we mean comparative constructions like those listed above in which the element after the comparative marker is not a clause, and which traditionally have been explained in terms of various kinds of deletion rules. Here, we will argue that, in most common cases, it is by no means necessary to postulate syntactic deletion operations. We will claim, that it is possible (and indeed assign a syntactic representation to such constructions that closely follows the apparent surface constituent structure. We will then show how to define semantic interpretation rules for such structures, which at no level reconstruct a representation of a syntactic clause, but rather operate on the principle of directly comparing constituents of similar type. To highlight the difference between our approach and the 86 Computational Linguistics Volume 16, Number 2, June 1990 Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions traditional one, we will refer to constructions handled by method as examples, not of ellipsis, of comparison. Our opinion is that the issues we are raising are probably applicable to most grammatical frameworks subsumed unfeature-based phrase structure grammar this includes established formalisms like LFG, GPSG, HPSG, PATR-II etc., and a vast number of more or less obscure formalisms in use around the world. At risk of offending everybody and pleasing nobody, we will make no particular attempt to align ourselves with any one of these theories; in Section 1.2, we will describe in general terms the properties we will expect a framework to possess, if it is to be capable of supporting the type of operations we will need. Basically, we will demand distinct levels of representation for constituent structure, function-argument structure, and logical form, related in the normal way; we will also require certain constructions to be treated as syntactic constituents. Most of this will be quite uncontroversial. To clear the decks before moving into action, we now spend a couple of paragraphs making clear which questions are to answer. We regard the lexical semantics of comparatives as being outside the scope of the paper; we are only interested in determining how the phrasal semantics can be derived from them. We explain exactly what we mean by this statement in Section 1.2. We will ignore complex comparative operators (&amp;quot;more than twice as much as&amp;quot;; &amp;quot;at least two inches longer than three times as long as&amp;quot;); these are well dealt with in Ballard (1988), and in any case do not seem to pose fundamental difficulties. For similar reasons, we refrain from discussing determiners with phrasal comparatives, like &amp;quot;more than two&amp;quot; or &amp;quot;at least half&apos;: here, the most comprehensive reference is perhaps Keenan and Stavi (1986). We also ignore certain idiosyncratic constructions (&amp;quot;as fast as ever&amp;quot;; &amp;quot;as much as usual&amp;quot;), which do not seem to fit any pattern known to us. In our treatment of clausal comparatives, we will present two slightly different variants of a solution. The first is simple to implement, and appears capable of giving correct semantics to most normal examples; however, it fails to give both readings for the notorious Russell example, &amp;quot;I thought your yacht was longer than it is.&amp;quot; The second solution, on the other hand, is capable of dealing with this kind of sentence, but needs a number of additional scoping rules. We say more about this in Section 4. With regard to cross-linguistic coverage, we will restrict ourselves to English, Swedish, and a few other languages in which the comparative construction is syntactically similar in nature; this actually appears to include most European languages. Although we suspect that our results are probably applicable to at least some languages outside this shall not make any further attempt to lend credibility to this claim. The organization of the rest of the paper is as follows. In Section 2 we review previous work: in particular, we point out what we regard as the main weaknesses of the deletion method, and summarize earlier attempts to describe phrasal comparatives by direct interpretation methods. The next two sections contain the main results of the paper. In Section 3, we examine contrastive phrasal comparatives. We begin by defining a Montagovian semantics for these, and then show how this can be improved by &amp;quot;factoring&amp;quot; it through an intermediate level of representation, in which the &amp;quot;contrasting&amp;quot; relationship between phrases is left undefined. We then go on to show how this methodology can be used to provide a readily implementable semantics for a wide variety of contrastive constructions, which also gives a simple explanation of the ambiguity of certain comparative sentences. Section 4 then goes on to describe our treatment of clausal comparatives, which is largely adapted from the work reported in Klein (1980) and Pinkham (1985). In Section 5 we briefly discuss noncoreference of compared objects; we also look at sentences containing the words &amp;quot;before&amp;quot; and &amp;quot;after,&amp;quot; pointing out some differences between these and comparative sentences. A corpus analysis, which gives some indication of the relative frequencies of the various constructions, is presented in Section 6. In Section 7 we summarize our results. The theoretical ideas advocated here were first developed and tested in practice within the framework of the SNACK- 85 project (Rayner and Banks 1986; 1989). In Appendix 2 we give the complete program code for a &amp;quot;scaled-down&amp;quot; version of the system, which handles all the constructions described in the main body of the paper, and in Appendix 3 we show examples of the system&apos;s output. 1.2 THEORETICAL ASSUMPTIONS 1.2.1 GENERAL REMARKS ON THE FRAMEWORK In this section, we attempt to summarize the theoretical assumptions needed to support our arguments. The main body of the paper is Section 3, which deals with phrasal comparatives: here we present our theory in two separate forms. Version one is a Montague grammar, modified slightly to allow use of generalized quantifiers. This has the advantage of theoretical elegance, but as we shall see is computationally unattractive. We consequently recast it in a form more suitable for implementation purposes, which draws its inspiration from the well-known treatment of scoping phenomena originally described in Woods et al. (1972); later elaborations and refinements have been implemented in a number of systems, notably CHAT-80 (Pereira 1983), TEAM (Grosz et al. 1986), and CLE (Moran 1988; Alshawi et al. 1989). We will continue to use this framework in Section 4, where we consider clausal comparatives, and now describe it in more detail. Most importantly, we have three distinct levels of linguisrepresentation, which we refer to as quasiand form; stress that these terms are merely used for convenience, and are not to be read as referring to any specific linguistic theory, Chomskian or otherwise. The levels will encode the following information: Computational Linguistics Volume 16, Number 2, June 1990 87 Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions this level, the structure of the sentence is represented as a phrase structure tree, where each node is with a set will make two assumptions about the feature structure. First, we distinguish a special feature, which encodes the quasi-logical form of a constituent; not all nodes need possess this feature. Second, there will be some mechanism that permits the definition of long-range dependencies, by allowing features in different constituents to share information. form (QLF). level encodes the predicate-argument structure of the phrase; the only demand we will make is that, like any other feature value, its value can be derived entirely by phrase structure rules with feature unification. (This is in spirit similar to a compositionality restriction, but is weaker.) form (LF). this level, the sentence is associated with an expression in a (generally higher-order) predicate calculus; the logical form of a sentence will be derivable from its quasi-logical form by application of rewriting rules representing scoping and other transformations. Since there is little agreement concerning the representation of logical forms, we now say a few words about the less usual features of our system. First, we will find it convenient to treat events as objects, since this can often greatly simplify the semantics of advermodification. For example, we will represent ruled for 21 years something like 3 e.event_type(e,rule)&amp;agent(e, gustaviii)&amp;duration(e,21) We will also make extensive use of generalized quantifiers (Barwise and Cooper 1981); these will play a key role in our representation of comparatives. We will not, however, use Barwise and Cooper&apos;s notation, which involves combining a determiner and a set-descriptor to form a quantifier, but rather will take the equivalent approach of treating determiners as two-place higher-order predicates on sets. We use I 4)(N)} the determiner &amp;quot;A number we write no(rose,Xx. send(j ohn, a, mary)) for &amp;quot;John sent no roses to Mary,&amp;quot; IN I N&lt;SKrose,Xx.send(john,x,mary)) for &amp;quot;John sent less than 5 roses to Mary,&amp;quot; and I N&apos;.N&lt;Wed/41 (rose,Xx.rose(x)StiOcgarden)N (rose,Xx.send(johnxmary)) for &amp;quot;John sent fewer roses to Mary than there were roses in the garden.&amp;quot; Formulas like the third one above will occur frequently in Section 3, and we advise the reader to spend a minute at this point making sure that she understands the notation. 1.2.2 SPECIFIC SYNTACTIC AND ASSUMPTIONS The basic scheme, or some not too distant relative, is the one used in many large-scale implemented systems; as examples, we can quote TEAM (Grosz et al. 1987), PUN- DIT (]Dahl et al. 1987), TACITUS (Hobbs et al. 1988), MODL (McCord 1987), CLE (Alshawi et al. 1989), and SNACK-85 (Rayner and Banks 1986). It also has close links with theoretical work in situation semantics (Pollard and Sag 1988; Fenstad etal. 1987). We start by enumerating the basic syntactic constituents S, NP, VP, DET, AP, ADVP, PP; as far as our ontological commitments go, we a set of set of a set of will assume that isomorphic to some kind of numbers. An NP will consist of a DET and a CN (we borrow this term for from Montague grammar). A DET will semantically correspond to a generalized deterand a a subset of thus become a generalized quantifier. VP consists of a VERB, followed by a list of VERB- ARGs (or just ARGs), by which we mean its obligatory and optional complements. An ARG is represented at QLF as a pair will need at least following kinds of complements: (a S), VP-COMP (a suitable VP), APs. Semantia verb will be associated with a subset of which we can think of as a type of event, state, or situation. VALUE of each ARG will also be semantically represented by a suitable object, and the ARG-TYPE will translate to a relation between the verb-object and the representation of the ARG-VALUE. We will require a kind of QLF node, called an represent VPs, APs, and other constituents whose denotation is a function from individuals to propositions; one component of will be the abstracted variable. A scalar adjective A translates to a two-place predicate X DEGREES, the interpretation: the x is A&apos; to degree a scalar adverb A to a two-place predicate A&apos;(x, X the interpretation: the event A&apos; to degree We assume that degree expressions like &amp;quot;more,&amp;quot; &amp;quot;less,&amp;quot; or &amp;quot;at least twice as much as much as&amp;quot; translate to predicates on X DEGREES. we are that numbers, it will also make to use a generalized quantifier as the second arguto an adjective: for example, A(x, will interpreted as &amp;quot;x is (less than 2) A.&amp;quot; We will also need to be able to form &amp;quot;slash categories&amp;quot; or something similar. In particular, the following will be required (in each example the &amp;quot;gap&amp;quot; is represented as an underscore): &amp;quot;John bought _ vases&amp;quot;) S/NP (e.g. &amp;quot;John gave _ to Mary&amp;quot;) S/S-COMP (e.g. &amp;quot;John probably believed _ &amp;quot;) S/VP-COMP (e.g. &amp;quot;John presumably meant to _ &amp;quot;) A more exact formulation of the basic question we are attacking is thus: In terms of the above framework, state rules by which we can systematically calculate the denotation of a complex expression involving a comparative construction in terms of 88 Computational Linguistics Volume 16, Number 2, June 1990 Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions the denotation of its scalar adjectives and adverbs, the denotations of its degree expressions, and the denotations of its other constituents. 2 PREVIOUS WORK ON COMPARATIVES This section will summarize relevant previous work on comparatives; we begin by listing sources. So far, there has been a surprisingly small amount of work done in computational frameworks: the only major attempts known to us that integrate syntactic and semantic processing are those reported in Ballard (1988) and Friedmann (1989). Limited syntactic/semantic coverage has appeared in some other systems (e.g. DIALOGIC [Robinson 1982] and CLE [Alshawi et al. 1989]), and the Linguistic String Project (Sager 1981) has an advanced syntactic coverage. On the theoretical front, we have been considerably influenced by Bresnan (1973), Hankamer (1973), Pinkham (1985), and Klein (1980), especially the last three; we were also surprised to discover at a late stage of our research that unpublished work by Heim (1985) and Kriflca (1987) had pursued a course almost parallel to our own. We now go on to describe what we regard as relationships between these treatments and ours. We will start by looking at clausal comparatives, where the immediate problem is clearly to account for the apparent &amp;quot;missing material&amp;quot; in the comparative clause. An early and still very influential study of comparative constructions is that of Bresnan (1972; 1973; 1977), working within trans-</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>vp(read agent(C,Mary) finite inf_comp(C trace_np(A) l(D,evnt(X(E,(and [role (agent run(E) trace_np(A)) agent(E,D) role (object fast(E,q(F,more(B,F)</title>
<date>1990</date>
<journal>name(News of the World))))) ))1))))1))))))) Computational Linguistics</journal>
<volume>16</volume>
<pages>111</pages>
<marker>1990</marker>
<rawString>vp(read agent(C,Mary) finite inf_comp(C trace_np(A) l(D,evnt(X(E,(and [role (agent run(E) trace_np(A)) agent(E,D) role (object fast(E,q(F,more(B,F) name(News of the World))))) ))1))))1))))))) Computational Linguistics Volume 16, Number 2, June 1990 111</rawString>
</citation>
<citation valid="false">
<authors>
<author>Manny Rayner</author>
<author>Amelie Banks</author>
</authors>
<title>An Implementable Semantics for Comparative Constructions 21, (fler,kvinnor,r)stade,f1r,firslaget,ln,emot] Logical form more women voted for the-suggestion than against.</title>
<marker>Rayner, Banks, </marker>
<rawString>Manny Rayner and Amelie Banks An Implementable Semantics for Comparative Constructions 21, (fler,kvinnor,r)stade,f1r,firslaget,ln,emot] Logical form more women voted for the-suggestion than against.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>