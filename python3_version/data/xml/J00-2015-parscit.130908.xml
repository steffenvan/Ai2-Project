<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.020566">
<note confidence="0.294572">
Book Reviews
</note>
<title confidence="0.9808085">
Systemic Functional Grammar in Natural Language Generation:
Linguistic Description and Computational Representation
</title>
<author confidence="0.773834">
Elke Teich
</author>
<bodyText confidence="0.431045">
(University of the Saarland)
London: Cassell (Communication in
artificial intelligence series, edited by
Robin P. Fawcett), 1999, xvii+250 pp;
hardbound, ISBN 0-304-70168-8, £55.00
</bodyText>
<figure confidence="0.774940666666667">
Reviewed by
Graham Wilcock
UMIST
</figure>
<bodyText confidence="0.999550714285714">
Teich&apos;s book will be of interest to three groups of readers. First, specialists in Systemic
Functional Grammar (SFG) will find a detailed description of the use of SFG theory for
a specific application, a discussion of some fundamental problems in the theory that are
revealed by the application, and proposals for a modification of SFG theory to handle
these problems. Second, those working in natural language generation (NLG) will find
a detailed discussion of why SFG is effective for NLG, an interesting comparison of
the SFG-based Penman system with three other generation systems, and a description
of a fully implemented SFG-based surface realization system for German.
The third group is less likely to read the book, but I recommend it to specialists in
Head-driven Phrase Structure Grammar (HPSG). After identifying some fundamen-
tal problems in SFG theory, the author explains that these problems have been fully
solved in HPSG. However, rather than abandoning SFG and adopting HPSG, the au-
thor prefers to try to integrate the HPSG-style solutions into the existing SFG theory.
This conviction that the wider SFG framework has major advantages, so significant
that they outweigh the identified problems, should be respected as deeply challenging
for HPSG theory.
The basic approach to NLG, using SFG and the Penman system, has already been
described in an earlier book (Matthiessen and Bateman 1991) from the same series,
with examples from English and Japanese. Teich&apos;s distinctive contributions are the
development of a large SFG-based grammar for German using the KOMET-Penman
system, and a detailed analysis of the problems encountered due to the absence of any
notion of head-daughter dependency within SFG theory. Comparing SFG and HPSG,
Teich proposes a modification of SFG theory to allow the inclusion of dependency
relations.
Chapter 1, &amp;quot;Introduction&amp;quot;, presents the motivation for the book. The terminology
used within SFG theory sometimes appears to be unnecessarily daunting. For example,
we learn on p. 3 that the background is &amp;quot;linguistic theory as metasemiosis.&amp;quot;
Chapter 2, &amp;quot;Theory and linguistic representation: Systemic functional linguistics,&amp;quot;
is intended as a short introduction to SFG theory. This is very well written for SFG
specialists, but it covers an enormous amount of ground at great speed (even sum-
marizing the theoretical differences between Hudson, Huddleston, Henrici, Halliday,
Fawcett, and Berry) and is unsuitable as a first introduction to SFG. Instead, I recom-
mend Berry (1975 and 1977). Although this old textbook was never intended to be
used for any computational implementation, it gives a very clear account of how SFG
actually works, and is especially good on realization rules.
</bodyText>
<page confidence="0.982488">
291
</page>
<note confidence="0.628201">
Computational Linguistics Volume 26, Number 2
</note>
<bodyText confidence="0.999248675">
Chapter 3, &amp;quot;Computational application: Grammar models in natural language gen-
eration,&amp;quot; presents an interesting comparison of four different approaches to the use
of grammars in surface generation: SFG in Penman, Meaning-Text Theory in GOS-
SIP, Functional Unification Grammar in COMET, and Tree Adjoining Grammar in
Mumble-86 and SPOKESMAN.
As Teich points out, the key issue for SFG-based generators is when to choose
which features from the system network. These decisions are taken in Penman by
choosers, but the description of choosers (pp. 63-65) is obscure. In the example given
(Figure 3.7), the PROCESS-TYPE chooser starts with an unexplained choice of static/non-
static. This turns out to be irrelevant for verbal and mental processes, while it is the only
distinction between relational and material processes. Why not call it material/non-
material? A more interesting issue here concerning the &amp;quot;generation gap&amp;quot; is the rela-
tionship between the Penman Upper Model ontology and these distinctions required
by the grammar.
Chapter 4, &amp;quot;Description: A systemic functional grammar of German for natural
language generation,&amp;quot; gives a detailed description of the SFG-based grammar of Ger-
man developed in KOMET. Although the details are mainly of interest for those work-
ing on German, this work has a wider significance as Teich accumulates evidence of
the need for a head-dependency mechanism in SFG. The problems include govern-
ment and case assignment in the clause, and lexical gender agreement in the noun
group, which are highlighted in German but can be largely functionally motivated in
English.
Chapter 5, &amp;quot;Computational representation: A proposal for dependency in sys-
temic functional grammar,&amp;quot; is, despite its title, mainly a discussion of noncomputa-
tional issues in grammatical theory. Teich describes the strengths of HPSG in handling
head-dependency relations, and proposes a mechanism to support dependency in
SFG. However, this proposal has important computational implications, as it includes
reimplementing SFG in terms of typed feature structures, the formal basis underly-
ing HPSG. Several computational systems for typed feature structures are listed, but
the valuable work of Erbach (1994) (based on earlier work by Mellish) on multidi-
mensional inheritance and typed feature structures for both SFG and HPSG is not
mentioned.
Chapter 6, &amp;quot;Summary and conclusions,&amp;quot; very briefly compares the strengths and
weaknesses of SFG and HPSG, which are viewed as complementary. The discussion is
theoretical and does not cover practical contributions such as the eclectic combination
of ideas from SFG and HPSG in the SURGE generator (Elhadad and Robin 1996).
The book will be valuable to SFG specialists, and will also be of interest to
others working in NLG, as it presents significant contributions in both fields. The
suggested wider potential for synergy between SFG and HPSG remains to be ex-
plored.
</bodyText>
<sectionHeader confidence="0.991626" genericHeader="abstract">
References
</sectionHeader>
<reference confidence="0.997670894736842">
Berry, Margaret. 1975 and 1977. Introduction
to Systemic Linguistics: 1 Structures and
Systems (1975), 2 Levels and Links (1977).
Batsford, London.
Elhadad, Michael and Jacques Robin. 1996.
An overview of SURGE: A reusable
comprehensive syntactic realization
component. In INLG&apos;96 Demonstrations and
Posters, pages 1-4. Eighth International
Natural Language Generation Workshop,
Sussex, UK.
Erbach, Gregor. 1994. Multi-dimensional
inheritance. In H. Trost, editor, Proceedings
of KONVENS &apos;94, pages 102-111, Vienna.
Springer.
Matthiessen, Christian and John Bateman.
1991. Text Generation and
Systemic-Functional Linguistics: Experiences
from English and Japanese. Pinter, London.
</reference>
<page confidence="0.964823">
292
</page>
<reference confidence="0.975688">
Book Reviews
Graham Wilcock is a member of the Centre for Computational Linguistics at the University of
Manchester Institute of Science and Technology. He has worked on natural language generation
using both SFG and HPSG. Wilcock&apos;s address is: Department of Language Engineering, UMIST,
P.O. Box 88, Manchester M60 1QD, United Kingdom; e-mail: graham@ccLumistac.uk
</reference>
<page confidence="0.998969">
293
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.061661">
<title confidence="0.998471333333333">Book Reviews Systemic Functional Grammar in Natural Language Generation: Linguistic Description and Computational Representation</title>
<author confidence="0.99928">Elke Teich</author>
<affiliation confidence="0.915122">(University of the Saarland)</affiliation>
<note confidence="0.756375">London: Cassell (Communication in artificial intelligence series, edited by Robin P. Fawcett), 1999, xvii+250 pp; hardbound, ISBN 0-304-70168-8, £55.00 Reviewed by</note>
<author confidence="0.992717">Graham Wilcock</author>
<affiliation confidence="0.534855">UMIST</affiliation>
<abstract confidence="0.964782583333333">Teich&apos;s book will be of interest to three groups of readers. First, specialists in Systemic Functional Grammar (SFG) will find a detailed description of the use of SFG theory for a specific application, a discussion of some fundamental problems in the theory that are revealed by the application, and proposals for a modification of SFG theory to handle these problems. Second, those working in natural language generation (NLG) will find a detailed discussion of why SFG is effective for NLG, an interesting comparison of the SFG-based Penman system with three other generation systems, and a description of a fully implemented SFG-based surface realization system for German. The third group is less likely to read the book, but I recommend it to specialists in Head-driven Phrase Structure Grammar (HPSG). After identifying some fundamental problems in SFG theory, the author explains that these problems have been fully solved in HPSG. However, rather than abandoning SFG and adopting HPSG, the author prefers to try to integrate the HPSG-style solutions into the existing SFG theory. This conviction that the wider SFG framework has major advantages, so significant that they outweigh the identified problems, should be respected as deeply challenging for HPSG theory. The basic approach to NLG, using SFG and the Penman system, has already been described in an earlier book (Matthiessen and Bateman 1991) from the same series, with examples from English and Japanese. Teich&apos;s distinctive contributions are the development of a large SFG-based grammar for German using the KOMET-Penman system, and a detailed analysis of the problems encountered due to the absence of any notion of head-daughter dependency within SFG theory. Comparing SFG and HPSG, Teich proposes a modification of SFG theory to allow the inclusion of dependency relations.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Margaret Berry</author>
</authors>
<title>and 1977. Introduction to Systemic Linguistics:</title>
<date>1975</date>
<booktitle>1 Structures and Systems (1975), 2 Levels and Links</booktitle>
<location>Batsford, London.</location>
<contexts>
<context position="2878" citStr="Berry (1975" startWordPosition="433" endWordPosition="434">he terminology used within SFG theory sometimes appears to be unnecessarily daunting. For example, we learn on p. 3 that the background is &amp;quot;linguistic theory as metasemiosis.&amp;quot; Chapter 2, &amp;quot;Theory and linguistic representation: Systemic functional linguistics,&amp;quot; is intended as a short introduction to SFG theory. This is very well written for SFG specialists, but it covers an enormous amount of ground at great speed (even summarizing the theoretical differences between Hudson, Huddleston, Henrici, Halliday, Fawcett, and Berry) and is unsuitable as a first introduction to SFG. Instead, I recommend Berry (1975 and 1977). Although this old textbook was never intended to be used for any computational implementation, it gives a very clear account of how SFG actually works, and is especially good on realization rules. 291 Computational Linguistics Volume 26, Number 2 Chapter 3, &amp;quot;Computational application: Grammar models in natural language generation,&amp;quot; presents an interesting comparison of four different approaches to the use of grammars in surface generation: SFG in Penman, Meaning-Text Theory in GOSSIP, Functional Unification Grammar in COMET, and Tree Adjoining Grammar in Mumble-86 and SPOKESMAN. As</context>
</contexts>
<marker>Berry, 1975</marker>
<rawString>Berry, Margaret. 1975 and 1977. Introduction to Systemic Linguistics: 1 Structures and Systems (1975), 2 Levels and Links (1977). Batsford, London.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Elhadad</author>
<author>Jacques Robin</author>
</authors>
<title>An overview of SURGE: A reusable comprehensive syntactic realization component.</title>
<date>1996</date>
<booktitle>In INLG&apos;96 Demonstrations and Posters,</booktitle>
<pages>1--4</pages>
<location>Sussex, UK.</location>
<marker>Elhadad, Robin, 1996</marker>
<rawString>Elhadad, Michael and Jacques Robin. 1996. An overview of SURGE: A reusable comprehensive syntactic realization component. In INLG&apos;96 Demonstrations and Posters, pages 1-4. Eighth International Natural Language Generation Workshop, Sussex, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gregor Erbach</author>
</authors>
<title>Multi-dimensional inheritance.</title>
<date>1994</date>
<booktitle>Proceedings of KONVENS &apos;94,</booktitle>
<pages>102--111</pages>
<editor>In H. Trost, editor,</editor>
<publisher>Springer.</publisher>
<location>Vienna.</location>
<contexts>
<context position="5343" citStr="Erbach (1994)" startWordPosition="807" endWordPosition="808">glish. Chapter 5, &amp;quot;Computational representation: A proposal for dependency in systemic functional grammar,&amp;quot; is, despite its title, mainly a discussion of noncomputational issues in grammatical theory. Teich describes the strengths of HPSG in handling head-dependency relations, and proposes a mechanism to support dependency in SFG. However, this proposal has important computational implications, as it includes reimplementing SFG in terms of typed feature structures, the formal basis underlying HPSG. Several computational systems for typed feature structures are listed, but the valuable work of Erbach (1994) (based on earlier work by Mellish) on multidimensional inheritance and typed feature structures for both SFG and HPSG is not mentioned. Chapter 6, &amp;quot;Summary and conclusions,&amp;quot; very briefly compares the strengths and weaknesses of SFG and HPSG, which are viewed as complementary. The discussion is theoretical and does not cover practical contributions such as the eclectic combination of ideas from SFG and HPSG in the SURGE generator (Elhadad and Robin 1996). The book will be valuable to SFG specialists, and will also be of interest to others working in NLG, as it presents significant contribution</context>
</contexts>
<marker>Erbach, 1994</marker>
<rawString>Erbach, Gregor. 1994. Multi-dimensional inheritance. In H. Trost, editor, Proceedings of KONVENS &apos;94, pages 102-111, Vienna. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian Matthiessen</author>
<author>John Bateman</author>
</authors>
<date>1991</date>
<booktitle>Text Generation and Systemic-Functional Linguistics: Experiences from English and Japanese.</booktitle>
<location>Pinter, London.</location>
<contexts>
<context position="1764" citStr="Matthiessen and Bateman 1991" startWordPosition="263" endWordPosition="266">e Structure Grammar (HPSG). After identifying some fundamental problems in SFG theory, the author explains that these problems have been fully solved in HPSG. However, rather than abandoning SFG and adopting HPSG, the author prefers to try to integrate the HPSG-style solutions into the existing SFG theory. This conviction that the wider SFG framework has major advantages, so significant that they outweigh the identified problems, should be respected as deeply challenging for HPSG theory. The basic approach to NLG, using SFG and the Penman system, has already been described in an earlier book (Matthiessen and Bateman 1991) from the same series, with examples from English and Japanese. Teich&apos;s distinctive contributions are the development of a large SFG-based grammar for German using the KOMET-Penman system, and a detailed analysis of the problems encountered due to the absence of any notion of head-daughter dependency within SFG theory. Comparing SFG and HPSG, Teich proposes a modification of SFG theory to allow the inclusion of dependency relations. Chapter 1, &amp;quot;Introduction&amp;quot;, presents the motivation for the book. The terminology used within SFG theory sometimes appears to be unnecessarily daunting. For example</context>
</contexts>
<marker>Matthiessen, Bateman, 1991</marker>
<rawString>Matthiessen, Christian and John Bateman. 1991. Text Generation and Systemic-Functional Linguistics: Experiences from English and Japanese. Pinter, London.</rawString>
</citation>
<citation valid="false">
<title>Book Reviews Graham Wilcock is a member of the Centre for Computational Linguistics at the</title>
<booktitle>of Science and Technology. He has worked on natural language generation using both SFG and HPSG. Wilcock&apos;s address is: Department of Language Engineering, UMIST, P.O. Box 88, Manchester M60 1QD, United Kingdom; e-mail: graham@ccLumistac.uk</booktitle>
<institution>University of Manchester Institute</institution>
<marker></marker>
<rawString>Book Reviews Graham Wilcock is a member of the Centre for Computational Linguistics at the University of Manchester Institute of Science and Technology. He has worked on natural language generation using both SFG and HPSG. Wilcock&apos;s address is: Department of Language Engineering, UMIST, P.O. Box 88, Manchester M60 1QD, United Kingdom; e-mail: graham@ccLumistac.uk</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>