<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.005647">
<title confidence="0.665734">
Learning to find transliteration on the Web
</title>
<author confidence="0.964645">
Chien-Cheng Wu
</author>
<affiliation confidence="0.9901335">
Department of Computer Science
National Tsing Hua University
</affiliation>
<address confidence="0.896029">
101 Kuang Fu Road, Hsin chu, Taiwan
</address>
<email confidence="0.992145">
d9283228@cs.nthu.edu.tw
</email>
<author confidence="0.8506">
Jason S. Chang
</author>
<affiliation confidence="0.982508">
Department of Computer Science
National Tsing Hua University
</affiliation>
<address confidence="0.892055">
101 Kuang Fu Road, Hsin chu, Taiwan
</address>
<email confidence="0.992275">
jschang@cs.nthu.edu.tw
</email>
<bodyText confidence="0.999276371428571">
This prototype demonstrate a novel method for
learning to find transliterations of proper nouns on
the Web based on query expansion aimed at
maximizing the probability of retrieving translit-
erations from existing search engines. Since the
method we used involves learning the morphologi-
cal relationships between names and their translit-
erations, we refer to this IR-based approach as
morphological query expansion for machine trans-
literation. The morphological query expansion
approach is general in scope and can be applied to
translation and transliteration, but we focus on
transliteration in this paper.
Many texts containing proper names (e.g., “The
cities of Mesopotamia prospered under Parthian
and Sassanian rule.”) are submitted to machine
translation services on the Web every day, and
there are also service on the Web specifically tar-
get transliteration of proper names, including
CHINET (Kwok et al. 2005) ad Livetrans (Lu,
Chien, and Lee 2004).
Machine translation systems on the Web such as
Yahoo Translate (babelfish.yahoo.com) and Goo-
gle Translate (translate.google.com/translate_t.g)
typically use a bilingual dictionary that is either
manually compiled or learned from a parallel cor-
pus. However, such dictionaries often have insuffi-
cient coverage of proper names and technical
terms, leading to poor translation due to out of vo-
cabulary problem. The OOV problems of machine
translation or cross language information retrieval
can be handled more effectively by learning to find
transliteration on the Web.
Consider Sentence 1 containing three place
names.
</bodyText>
<listItem confidence="0.954228666666667">
1. The cities of Mesopotamia prospered under
Parthian and Sassanian rule.
2. ,%r-) &apos; _Fparthian ����sassanian0l
Ip°
3. AVT ::K�_tb�r Ir±E;AK�_f0#Me,/fIff
�,tom*°
</listItem>
<bodyText confidence="0.98745575">
Google Translate produce Sentence 2, leaving
“Parthian” and “Sassanian” not translated. A good
response might be a translation like Sentence 3
where all place names have appropriate translitera-
tions (underlined). These transliterations can be
more effectively retrieved from mixed code Web
pages by extend each of the place names into a
query (e.g., “Parthian NEAR E;”). Intuitively by
requiring one of likely prefix transliteration mor-
phemes (e.g., “E;” or “0” for “par-“ names), we
can bias the search engine towards retrieving the
correct transliterations (e.g., “E;TK�” and “01�9
K�”) in snippets of many top-ranked documents.
The method involves pairing up the prefixing
morphemes between name and transliteration in a
set of train data, calculating the statistical associa-
tion for these pair, and selecting pairs with a high
degree of statistical association. The results of this
training stage are morphological relationships be-
tween prefixes and postfixes of names and translit-
erations. At run time, a given name is automati-
cally extended into a query with relevant prefixing
morphemes, then the query is submit to some
search engine. After retrieving snippets from a
search engine, the system extract transliterations
from the snippets based on redundancy, proximity
between name and transliteration, and cross lan-
guage morphological relationships of prefix and
postfix.
We present a new machine transliteration sys-
tem based on information retrieval and morpho-
logical query expansion. The system automatically
</bodyText>
<page confidence="0.985406">
21
</page>
<table confidence="0.93235605">
NAACL HLT Demonstration Program, pages 21–22,
Rochester, New York, USA, April 2007. c�2007 Association for Computational Linguistics
Demonstration Script
The system runs under
Microsoft Windows as a
local application pro-
gram. It opens up a form
and accepts a name for
translation. The user can
choose to search on the
Web or to look up in the
local dictionary for re-
sults previously obtained
and edited.
The system now ex-
panded the query and
sending them to a search
engine to retrieve snip-
pets containing translit-
erations.
</table>
<page confidence="0.991096">
23
</page>
<bodyText confidence="0.998828777777778">
The system extracted
transliterations from the
snippets and showed the
list of most likely an-
swers.
The user can click each
answer and view a list of
snippets where the trans-
literation appears.
</bodyText>
<page confidence="0.902908">
24
</page>
<figure confidence="0.7431537">
The user finds and selects Ò����Ó in the snippets for Ò���Ó
The transliteration Ò����Ó is added to the list
The user can do a num-
ber of things with the
transliteration list:
1. View the snip-
pets associated
with each
transliteration
2. Delete a
transliteration
3. Save the list
along with the
snippet
4. Select a string in
the snippets and
add it to the an-
swer list by
clicking the right
bottom
</figure>
<page confidence="0.97784">
25
</page>
<bodyText confidence="0.8695605">
This slide shows the relationships between the
prefixes of names and translations.
</bodyText>
<table confidence="0.907783076923077">
Ngram Char Map_no Ngramno Prob
alla 亞 2 11 0.1818
alla 阿 9 11 0.8182
anti gF 1 11 0.0909
anti 安 10 11 0.9091
bart E 11 11 1.0000
bata 八 1 11 0.0909
bata E 10 11 0.9091
belo EL 2 11 0.1818
belo 貝 9 11 0.8182
beth 伯 1 11 0.0909
beth 貝 10 11 0.9091
buch E 2 11 0.1818
</table>
<bodyText confidence="0.433497">
This slide shows the relationships between the
postfixes of names and translations.
</bodyText>
<figure confidence="0.627840727272727">
Ngram Char Map_no Ngramno Prob
ague 圭 4 11 0.3636
ague 格 6 11 0.5455
ague 蓋 1 11 0.0909
alen 侖 1 11 0.0909
alen 倫 2 11 0.1818
alen 連 8 11 0.7273
andi 地 1 11 0.0909
andi L 7 11 0.6364
andi 第 2 11 0.1818
andi 德 1 11 0.0909
</figure>
<page confidence="0.949452">
26
</page>
<bodyText confidence="0.890985">
The performance can improved by clustering
transliteration user can click each answer and
view a list of snippets where the transliteration
appears.
</bodyText>
<figure confidence="0.999602275">
Morpheme Phonetic symbol
A 5Y
E 5Y
把 5Y
拔 5Y
x 5Y
霸 5Y
白 5-6
百 5-6
伯 5-6
波 5-6
泊 5-6
勃 5-6
柏 5-6
玻 5-6
f 5-6
搏 5-6
白 535
百 535
拜 535
Cluster
A
A
A
A
A
A
白
白
白
白
白
白
白
白
白
白
白
白
白
</figure>
<page confidence="0.959569">
27
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.084168">
<title confidence="0.995662">Learning to find transliteration on the Web</title>
<author confidence="0.878196">Chien-Cheng</author>
<affiliation confidence="0.953037">Department of Computer National Tsing Hua</affiliation>
<address confidence="0.998774">101 Kuang Fu Road, Hsin chu, Taiwan</address>
<email confidence="0.962686">d9283228@cs.nthu.edu.tw</email>
<author confidence="0.998221">S Jason</author>
<affiliation confidence="0.9547715">Department of Computer National Tsing Hua</affiliation>
<address confidence="0.997554">101 Kuang Fu Road, Hsin chu, Taiwan</address>
<email confidence="0.832311">jschang@cs.nthu.edu.tw</email>
<abstract confidence="0.992040428571429">This prototype demonstrate a novel method for learning to find transliterations of proper nouns on the Web based on query expansion aimed at maximizing the probability of retrieving transliterations from existing search engines. Since the method we used involves learning the morphological relationships between names and their transliterations, we refer to this IR-based approach as morphological query expansion for machine trans- The query expansion approach is general in scope and can be applied to translation and transliteration, but we focus on transliteration in this paper. Many texts containing proper names (e.g., “The cities of Mesopotamia prospered under Parthian and Sassanian rule.”) are submitted to machine translation services on the Web every day, and there are also service on the Web specifically target transliteration of proper names, including et al. 2005) ad Chien, and Lee 2004). Machine translation systems on the Web such as Translate and Goo- Translate typically use a bilingual dictionary that is either manually compiled or learned from a parallel corpus. However, such dictionaries often have insufficient coverage of proper names and technical terms, leading to poor translation due to out of vocabulary problem. The OOV problems of machine translation or cross language information retrieval can be handled more effectively by learning to find transliteration on the Web. Consider Sentence 1 containing three place names. cities of Mesopotamia prospered under and Sassanian ,%r-) &apos; Ip° AVT ::K�_tb�r �,tom*° Translate Sentence 2, leaving “Parthian” and “Sassanian” not translated. A good response might be a translation like Sentence 3 where all place names have appropriate transliterations (underlined). These transliterations can be more effectively retrieved from mixed code Web pages by extend each of the place names into a (e.g., “Parthian NEAR Intuitively by requiring one of likely prefix transliteration mor- (e.g., or for “par-“ names), we can bias the search engine towards retrieving the transliterations (e.g., and in snippets of many top-ranked documents. The method involves pairing up the prefixing morphemes between name and transliteration in a set of train data, calculating the statistical association for these pair, and selecting pairs with a high degree of statistical association. The results of this training stage are morphological relationships between prefixes and postfixes of names and transliterations. At run time, a given name is automatically extended into a query with relevant prefixing morphemes, then the query is submit to some search engine. After retrieving snippets from a search engine, the system extract transliterations from the snippets based on redundancy, proximity between name and transliteration, and cross language morphological relationships of prefix and postfix. We present a new machine transliteration system based on information retrieval and morphological query expansion. The system automatically 21 HLT Demonstration pages 21–22, New York, USA, April 2007. Association for Computational Linguistics Demonstration Script The system runs under Microsoft Windows as a local application pro-gram. It opens up a form and accepts a name for translation. The user can choose to search on the Web or to look up in the local dictionary for re-sults previously obtained and edited. The system now ex-panded the query and sending them to a search engine to retrieve snip-pets containing translit-erations. 23 The system extracted transliterations from the snippets and showed the list of most likely answers. The user can click each answer and view a list of snippets where the trans-literation appears. 24 user finds and selects in the snippets for transliteration is added to the list The user can do a number of things with the transliteration list: 1. View the snippets associated with transliteration 2. Delete transliteration 3. Save the list along with the snippet 4. Select a string in the snippets and add it to the answer list by clicking the right bottom 25 This slide shows the relationships between the prefixes of names and translations. Ngram Char Map_no Ngramno Prob alla 亞 2 11 0.1818 alla 阿 9 11 0.8182 anti gF 1 11 0.0909 anti 安 10 11 0.9091 bart E 11 11 1.0000 bata 八 1 11 0.0909 bata E 10 11 0.9091 belo EL 2 11 0.1818 belo 貝 9 11 0.8182 beth 伯 1 11 0.0909 beth 貝 10 11 0.9091 buch E 2 11 0.1818 This slide shows the relationships between the postfixes of names and translations. Ngram Char Map_no Ngramno Prob ague 圭 4 11 0.3636 ague 格 6 11 0.5455 ague 蓋 1 11 0.0909 alen 侖 1 11 0.0909 alen 倫 2 11 0.1818 alen 連 8 11 0.7273 andi 地 1 11 0.0909 andi L 7 11 0.6364 andi 第 2 11 0.1818 andi 德 1 11 0.0909 26 The performance can improved by clustering transliteration user can click each answer and view a list of snippets where the transliteration appears. Morpheme Phonetic symbol A 5Y E 5Y 把 5Y 拔 5Y x 5Y 霸 5Y 白 百 伯 波 泊 勃 柏 玻 f 搏 白 535 百 535 拜 535</abstract>
<title confidence="0.947232571428571">Cluster A A A A A A</title>
<abstract confidence="0.982685153846154"></abstract>
<intro confidence="0.650631">27</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>