<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<title confidence="0.998805">
Espresso: Leveraging Generic Patterns for
Automatically Harvesting Semantic Relations
</title>
<author confidence="0.996853">
Patrick Pantel
</author>
<affiliation confidence="0.9970985">
Information Sciences Institute
University of Southern California
</affiliation>
<address confidence="0.844984">
4676 Admiralty Way
Marina del Rey, CA 90292
</address>
<email confidence="0.998726">
pantel@isi.edu
</email>
<sectionHeader confidence="0.997554" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.994897333333334">
In this paper, we present Espresso, a
weakly-supervised, general-purpose,
and accurate algorithm for harvesting
semantic relations. The main contribu-
tions are: i) a method for exploiting ge-
neric patterns by filtering incorrect
instances using the Web; and ii) a prin-
cipled measure of pattern and instance
reliability enabling the filtering algo-
rithm. We present an empirical com-
parison of Espresso with various state of
the art systems, on different size and
genre corpora, on extracting various
general and specific relations. Experi-
mental results show that our exploita-
tion of generic patterns substantially
increases system recall with small effect
on overall precision.
</bodyText>
<sectionHeader confidence="0.999515" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999765176470588">
Recent attention to knowledge-rich problems
such as question answering (Pasca and Harabagiu
2001) and textual entailment (Geffet and Dagan
2005) has encouraged natural language process-
ing researchers to develop algorithms for auto-
matically harvesting shallow semantic resources.
With seemingly endless amounts of textual data
at our disposal, we have a tremendous opportu-
nity to automatically grow semantic term banks
and ontological resources.
To date, researchers have harvested, with
varying success, several resources, including
concept lists (Lin and Pantel 2002), topic signa-
tures (Lin and Hovy 2000), facts (Etzioni et al.
2005), and word similarity lists (Hindle 1990).
Many recent efforts have also focused on extract-
ing semantic relations between entities, such as
</bodyText>
<author confidence="0.268408">
Marco Pennacchiotti
</author>
<affiliation confidence="0.626546">
ART Group - DISP
University of Rome “Tor Vergata”
</affiliation>
<address confidence="0.7371635">
Viale del Politecnico 1
Rome, Italy
</address>
<email confidence="0.918016">
pennacchiotti@info.uniroma2.it
</email>
<bodyText confidence="0.9973122">
entailments (Szpektor et al. 2004), is-a (Ravi-
chandran and Hovy 2002), part-of (Girju et al.
2006), and other relations.
The following desiderata outline the properties
of an ideal relation harvesting algorithm:
</bodyText>
<listItem confidence="0.999694142857143">
• Performance: it must generate both high preci-
sion and high recall relation instances;
• Minimal supervision: it must require little or no
human annotation;
• Breadth: it must be applicable to varying cor-
pus sizes and domains; and
• Generality: it must be applicable to a wide va-
</listItem>
<bodyText confidence="0.9973995">
riety of relations (i.e., not just is-a or part-of).
To our knowledge, no previous harvesting algo-
rithm addresses all these properties concurrently.
In this paper, we present Espresso, a general-
purpose, broad, and accurate corpus harvesting
algorithm requiring minimal supervision. The
main algorithmic contribution is a novel method
for exploiting generic patterns, which are broad
coverage noisy patterns – i.e., patterns with high
recall and low precision. Insofar, difficulties in
using these patterns have been a major impedi-
ment for minimally supervised algorithms result-
ing in either very low precision or recall. We
propose a method to automatically detect generic
patterns and to separate their correct and incor-
rect instances. The key intuition behind the algo-
rithm is that given a set of reliable (high
precision) patterns on a corpus, correct instances
of a generic pattern will fire more with reliable
patterns on a very large corpus, like the Web,
than incorrect ones. Below is a summary of the
main contributions of this paper:
</bodyText>
<listItem confidence="0.7921065">
• Algorithm for exploiting generic patterns:
Unlike previous algorithms that require signifi-
cant manual work to make use of generic pat-
terns, we propose an unsupervised Web-
filtering method for using generic patterns; and
• Principled reliability measure: We propose a
new measure of pattern and instance reliability
which enables the use of generic patterns.
</listItem>
<page confidence="0.990442">
113
</page>
<note confidence="0.6325405">
Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 113–120,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</note>
<bodyText confidence="0.765734">
Espresso addresses the desiderata as follows:
</bodyText>
<listItem confidence="0.993428538461538">
• Performance: Espresso generates balanced
precision and recall relation instances by ex-
ploiting generic patterns;
• Minimal supervision: Espresso requires as in-
put only a small number of seed instances;
• Breadth: Espresso works on both small and
large corpora – it uses Web and syntactic ex-
pansions to compensate for lacks of redun-
dancy in small corpora;
• Generality: Espresso is amenable to a wide
variety of binary relations, from classical is-a
and part-of to specific ones such as reaction
and succession.
</listItem>
<bodyText confidence="0.998042">
Previous work like (Girju et al. 2006) that has
made use of generic patterns through filtering has
shown both high precision and high recall, at the
expensive cost of much manual semantic annota-
tion. Minimally supervised algorithms, like
(Hearst 1992; Pantel et al. 2004), typically ignore
generic patterns since system precision dramati-
cally decreases from the introduced noise and
bootstrapping quickly spins out of control.
</bodyText>
<sectionHeader confidence="0.99873" genericHeader="introduction">
2 Relevant Work
</sectionHeader>
<bodyText confidence="0.999951621621622">
To date, most research on relation harvesting has
focused on is-a and part-of. Approaches fall into
two categories: pattern- and clustering-based.
Most common are pattern-based approaches.
Hearst (1992) pioneered using patterns to extract
hyponym (is-a) relations. Manually building
three lexico-syntactic patterns, Hearst sketched a
bootstrapping algorithm to learn more patterns
from instances, which has served as the model
for most subsequent pattern-based algorithms.
Berland and Charniak (1999) proposed a sys-
tem for part-of relation extraction, based on the
(Hearst 1992) approach. Seed instances are used
to infer linguistic patterns that are used to extract
new instances. While this study introduces statis-
tical measures to evaluate instance quality, it re-
mains vulnerable to data sparseness and has the
limitation of considering only one-word terms.
Improving upon (Berland and Charniak 1999),
Girju et al. (2006) employ machine learning al-
gorithms and WordNet (Fellbaum 1998) to dis-
ambiguate part-of generic patterns like “X’s Y”
and “X of Y”. This study is the first extensive at-
tempt to make use of generic patterns. In order to
discard incorrect instances, they learn WordNet-
based selectional restrictions, like “X(scene#4)’s
Y(movie#1)”. While making huge grounds on
improving precision/recall, heavy supervision is
required through manual semantic annotations.
Ravichandran and Hovy (2002) focus on scal-
ing relation extraction to the Web. A simple and
effective algorithm is proposed to infer surface
patterns from a small set of instance seeds by
extracting substrings relating seeds in corpus sen-
tences. The approach gives good results on spe-
cific relations such as birthdates, however it has
low precision on generic ones like is-a and part-
of. Pantel et al. (2004) proposed a similar, highly
scalable approach, based on an edit-distance
technique, to learn lexico-POS patterns, showing
both good performance and efficiency. Espresso
uses a similar approach to infer patterns, but we
make use of generic patterns and apply refining
techniques to deal with wide variety of relations.
Other pattern-based algorithms include (Riloff
and Shepherd 1997), who used a semi-automatic
method for discovering similar words using a
few seed examples, KnowItAll (Etzioni et al.
2005) that performs large-scale extraction of
facts from the Web, Mann (2002) who used part
of speech patterns to extract a subset of is-a rela-
tions involving proper nouns, and (Downey et al.
2005) who formalized the problem of relation
extraction in a coherent and effective combinato-
rial model that is shown to outperform previous
probabilistic frameworks.
Clustering approaches have so far been ap-
plied only to is-a extraction. These methods use
clustering algorithms to group words according
to their meanings in text, label the clusters using
its members’ lexical or syntactic dependencies,
and then extract an is-a relation between each
cluster member and the cluster label. Caraballo
(1999) proposed the first attempt, which used
conjunction and apposition features to build noun
clusters. Recently, Pantel and Ravichandran
(2004) extended this approach by making use of
all syntactic dependency features for each noun.
The advantage of clustering approaches is that
they permit algorithms to identify is-a relations
that do not explicitly appear in text, however
they generally fail to produce coherent clusters
from fewer than 100 million words; hence they
are unreliable for small corpora.
</bodyText>
<sectionHeader confidence="0.97624" genericHeader="method">
3 The Espresso Algorithm
</sectionHeader>
<bodyText confidence="0.999436285714286">
Espresso is based on the framework adopted in
(Hearst 1992). It is a minimally supervised boot-
strapping algorithm that takes as input a few seed
instances of a particular relation and iteratively
learns surface patterns to extract more instances.
The key to Espresso lies in its use of generic pat-
ters, i.e., those broad coverage noisy patterns that
</bodyText>
<page confidence="0.997953">
114
</page>
<bodyText confidence="0.999796533333333">
extract both many correct and incorrect relation
instances. For example, for part-of relations, the
pattern “X of Y” extracts many correct relation
instances like “wheel of the car” but also many
incorrect ones like “house of representatives”.
The key assumption behind Espresso is that in
very large corpora, like the Web, correct in-
stances generated by a generic pattern will be
instantiated by some reliable patterns, where
reliable patterns are patterns that have high preci-
sion but often very low recall (e.g., “X consists of
Y” for part-of relations). In this section, we de-
scribe the overall architecture of Espresso, pro-
pose a principled measure of reliability, and give
an algorithm for exploiting generic patterns.
</bodyText>
<subsectionHeader confidence="0.999146">
3.1 System Architecture
</subsectionHeader>
<bodyText confidence="0.9711944">
Espresso iterates between the following three
phases: pattern induction, pattern rank-
ing/selection, and instance extraction.
The algorithm begins with seed instances of a
particular binary relation (e.g., is-a) and then it-
erates through the phases until it extracts ti1 pat-
terns or the average pattern score decreases by
more than ti2 from the previous iteration. In our
experiments, we set ti1 = 5 and ti2 = 50%.
For our tokenization, in order to harvest multi-
word terms as relation instances, we adopt a
slightly modified version of the term definition
given in (Justeson 1995), as it is one of the most
commonly used in the NLP literature:
((Adj|Noun)+|((Adj|Noun)*(NounPrep)?)(Adj|Noun)*)Noun
</bodyText>
<subsectionHeader confidence="0.657483">
Pattern Induction
</subsectionHeader>
<bodyText confidence="0.99997775">
In the pattern induction phase, Espresso infers a
set of surface patterns P that connects as many of
the seed instances as possible in a given corpus.
Any pattern learning algorithm would do. We
chose the state of the art algorithm described in
(Ravichandran and Hovy 2002) with the follow-
ing slight modification. For each input instance
{x, y}, we first retrieve all sentences containing
the two terms x and y. The sentences are then
generalized into a set of new sentences Sx,y by
replacing all terminological expressions by a
terminological label, TR. For example:
</bodyText>
<equation confidence="0.8744015">
“Because/IN HF/NNP is/VBZ a/DT weak/JJ acid/NN
and/CC x is/VBZ a/DT y”
is generalized as:
“Because/IN TR is/VBZ a/DT TR and/CC x is/VBZ a/DT y”
</equation>
<bodyText confidence="0.998615857142857">
Term generalization is useful for small corpora to
ease data sparseness. Generalized patterns are
naturally less precise, but this is ameliorated by
our filtering step described in Section 3.3.
As in the original algorithm, all substrings
linking terms x and y are then extracted from Sx,y,
and overall frequencies are computed to form P.
</bodyText>
<subsectionHeader confidence="0.806766">
Pattern Ranking/Selection
</subsectionHeader>
<bodyText confidence="0.99999">
In (Ravichandran and Hovy 2002), a frequency
threshold on the patterns in P is set to select the
final patterns. However, low frequency patterns
may in fact be very good. In this paper, instead of
frequency, we propose a novel measure of pat-
tern reliability, r,, which is described in detail in
Section 3.2.
Espresso ranks all patterns in P according to
reliability rt and discards all but the top-k, where
k is set to the number of patterns from the previ-
ous iteration plus one. In general, we expect that
the set of patterns is formed by those of the pre-
vious iteration plus a new one. Yet, new statisti-
cal evidence can lead the algorithm to discard a
pattern that was previously discovered.
</bodyText>
<subsectionHeader confidence="0.65774">
Instance Extraction
</subsectionHeader>
<bodyText confidence="0.999863">
In this phase, Espresso retrieves from the corpus
the set of instances I that match any of the pat-
terns in P. In Section 3.2, we propose a princi-
pled measure of instance reliability, rt, for
ranking instances. Next, Espresso filters incor-
rect instances using the algorithm proposed in
Section 3.3 and then selects the highest scoring m
instances, according to rt, as input for the subse-
quent iteration. We experimentally set m=200.
In small corpora, the number of extracted in-
stances can be too low to guarantee sufficient
statistical evidence for the pattern discovery
phase of the next iteration. In such cases, the sys-
tem enters an expansion phase, where instances
are expanded as follows:
Web expansion: New instances of the patterns
in P are retrieved from the Web, using the
Google search engine. Specifically, for each in-
stance {x, y}E I, the system creates a set of que-
ries, using each pattern in P instantiated with y.
For example, given the instance “Italy, country”
and the pattern “Y such as X”, the resulting
Google query will be “country such as *”. New
instances are then created from the retrieved Web
results (e.g. “Canada, country”) and added to I.
The noise generated from this expansion is at-
tenuated by the filtering algorithm described in
Section 3.3.
Syntactic expansion: New instances are cre-
ated from each instance {x, y}E I by extracting
sub-terminological expressions from x corre-
sponding to the syntactic head of terms. For ex-
</bodyText>
<page confidence="0.994817">
115
</page>
<bodyText confidence="0.99672925">
ample, the relation “new record of a criminal
conviction part-of FBI report” expands to: “new
record part-of FBI report”, and “record part-of
FBI report”.
</bodyText>
<subsectionHeader confidence="0.996517">
3.2 Pattern and Instance Reliability
</subsectionHeader>
<bodyText confidence="0.999412214285714">
Intuitively, a reliable pattern is one that is both
highly precise and one that extracts many in-
stances. The recall of a pattern p can be approxi-
mated by the fraction of input instances that are
extracted by p. Since it is non-trivial to estimate
automatically the precision of a pattern, we are
wary of keeping patterns that generate many in-
stances (i.e., patterns that generate high recall but
potentially disastrous precision). Hence, we de-
sire patterns that are highly associated with the
input instances. Pointwise mutual information
(Cover and Thomas 1991) is a commonly used
metric for measuring this strength of association
between two events x and y:
</bodyText>
<equation confidence="0.744285">
pmi(x,y)=log P(x,y)
P(x)P(y )
</equation>
<bodyText confidence="0.99899175">
We define the reliability of a pattern p, rπ(p),
as its average strength of association across each
input instance i in I, weighted by the reliability of
each instance i:
</bodyText>
<equation confidence="0.9856894">
⎛ ⎞
∑ ⎜⎜pmi i p
( , ) ∗ r i
ι( ) ⎟⎟
i∈I maxpmi ⎠
</equation>
<bodyText confidence="0.999988428571428">
where rι(i) is the reliability of instance i (defined
below) and maxpmi is the maximum pointwise
mutual information between all patterns and all
instances. rπ(p) ranges from [0,1]. The reliability
of the manually supplied seed instances are rι(i)
= 1. The pointwise mutual information between
instance i = {x, y} and pattern p is estimated us-
ing the following formula:
where |x, p, y |is the frequency of pattern p in-
stantiated with terms x and y and where the aster-
isk (*) represents a wildcard. A well-known
problem is that pointwise mutual information is
biased towards infrequent events. We thus multi-
ply pmi(i, p) with the discounting factor sug-
gested in (Pantel and Ravichandran 2004).
Estimating the reliability of an instance is
similar to estimating the reliability of a pattern.
Intuitively, a reliable instance is one that is
highly associated with as many reliable patterns
as possible (i.e., we have more confidence in an
instance when multiple reliable patterns instanti-
ate it.) Hence, analogous to our pattern reliability
measure, we define the reliability of an instance
i, rι(i), as:
where rπ(p) is the reliability of pattern p (defined
earlier) and maxpmi is as before. Note that rι(i)
and rπ(p) are recursively defined, where rι(i) = 1
for the manually supplied seed instances.
</bodyText>
<subsectionHeader confidence="0.999345">
3.3 Exploiting Generic Patterns
</subsectionHeader>
<bodyText confidence="0.999984909090909">
Generic patterns are high recall / low precision
patterns (e.g, the pattern “X of Y” can ambigu-
ously refer to a part-of, is-a and possession rela-
tions). Using them blindly increases system
recall while dramatically reducing precision.
Minimally supervised algorithms have typically
ignored them for this reason. Only heavily super-
vised approaches, like (Girju et al. 2006) have
successfully exploited them.
Espresso’s recall can be significantly in-
creased by automatically separating correct in-
stances extracted by generic patterns from
incorrect ones. The challenge is to harness the
expressive power of the generic patterns while
remaining minimally supervised.
The intuition behind our method is that in a
very large corpus, like the Web, correct instances
of a generic pattern will be instantiated by many
of Espresso’s reliable patterns accepted in P. Re-
call that, by definition, Espresso’s reliable pat-
terns extract instances with high precision (yet
often low recall). In a very large corpus, like the
Web, we assume that a correct instance will oc-
cur in at least one of Espresso’s reliable pattern
even though the patterns’ recall is low. Intui-
tively, our confidence in a correct instance in-
creases when, i) the instance is associated with
many reliable patterns; and ii) its association
with the reliable patterns is high. At a given Es-
presso iteration, where PR represents the set of
previously selected reliable patterns, this intui-
tion is captured by the following measure of con-
fidence in an instance i = {x, y}:
</bodyText>
<equation confidence="0.844794">
S(i) = ∑Sp (i)× rπ (p) T
</equation>
<bodyText confidence="0.8520305">
where T is the sum of the reliability scores rπ(p)
for each pattern p ∈ PR, and
</bodyText>
<equation confidence="0.754525538461538">
I
pmi(i, p) =
log
x,
p y
,
x,*
, *,
y p
*
,
∑′∈max
pP pmi
P
pmi i p
( , ) ∗
rπ
( )
p
rι
=
( )
i
Sp (i) = pmi(i, p) =
x p y
, ,
x
,
*y ×
*,
p
,*
log
=
( )
p
rπ
p PR
∈
</equation>
<page confidence="0.997329">
116
</page>
<tableCaption confidence="0.8867215">
Table 1. Sample seeds used for each semantic relation and sample outputs from Espresso. The number
in the parentheses for each relation denotes the total number of seeds used as input for the system.
</tableCaption>
<table confidence="0.92729864">
Is-a (12) Part-Of (12) Succession (12) Reaction (13) Production (14)
Seeds wheat :: crop leader :: panel Khrushchev :: Stalin magnesium :: oxygen bright flame :: flares
George Wendt :: star city :: region Carla Hills :: Yeutter hydrazine :: water hydrogen :: metal hydrides
nitrogen :: element ion :: matter Bush :: Reagan aluminum metal :: oxygen ammonia :: nitric oxide
diborane °:: substance oxygen °:: water Julio Barbosa °:: Mendes lithium metal °:: fluorine gas copper °:: brown gas
Picasso :: artist
Es- tax :: charge
presso protein :: biopolymer
HCl :: strong acid
trees :: land
material :: FBI report
oxygen :: air
atom :: molecule
Ford :: Nixon
Setrakian :: John Griesemer
Camero Cardiel :: Camacho
Susan Weiss :: editor
hydrogen :: oxygen
Ni :: HCl
carbon dioxide :: methane
boron :: fluorine
electron :: ions
glycerin :: nitroglycerin
kidneys :: kidney stones
ions :: charge
</table>
<bodyText confidence="0.999905666666667">
where pointwise mutual information between
instance i and pattern p is estimated with Google
as follows:
An instance i is rejected if S(i) is smaller than
some threshold i.
Although this filtering may also be applied to
reliable patterns, we found this to be detrimental
in our experiments since most instances gener-
ated by reliable patterns are correct. In Espresso,
we classify a pattern as generic when it generates
more than 10 times the instances of previously
accepted reliable patterns.
</bodyText>
<sectionHeader confidence="0.997868" genericHeader="evaluation">
4 Experimental Results
</sectionHeader>
<bodyText confidence="0.999901">
In this section, we present an empirical compari-
son of Espresso with three state of the art sys-
tems on the task of extracting various semantic
relations.
</bodyText>
<subsectionHeader confidence="0.969016">
4.1 Experimental Setup
</subsectionHeader>
<bodyText confidence="0.995106">
We perform our experiments using the following
two datasets:
</bodyText>
<listItem confidence="0.993039777777778">
• TREC: This dataset consists of a sample of
articles from the Aquaint (TREC-9) newswire
text collection. The sample consists of
5,951,432 words extracted from the following
data files: AP890101 – AP890131, AP890201
– AP890228, and AP890310 – AP890319.
• CHEM: This small dataset of 313,590 words
consists of a college level textbook of introduc-
tory chemistry (Brown et al. 2003).
</listItem>
<bodyText confidence="0.99754675">
Each corpus is pre-processed using the Alembic
Workbench POS-tagger (Day et al. 1997).
Below we describe the systems used in our
empirical evaluation of Espresso.
</bodyText>
<listItem confidence="0.981022">
• RH02: The algorithm by Ravichandran and
Hovy (2002) described in Section 2.
• GI03: The algorithm by Girju et al. (2006) de-
scribed in Section 2.
• PR04: The algorithm by Pantel and Ravi-
chandran (2004) described in Section 2.
• ESP-: The Espresso algorithm using the pat-
tern and instance reliability measures, but
without using generic patterns.
• ESP+: The full Espresso algorithm described
in this paper exploiting generic patterns.
</listItem>
<bodyText confidence="0.97561175">
For ESP+, we experimentally set i from Section
3.3 to i = 0.4 for TREC and i = 0.3 for CHEM
by manually inspecting a small set of instances.
Espresso is designed to extract various seman-
tic relations exemplified by a given small set of
seed instances. We consider the standard is-a and
part-of relations as well as the following more
specific relations:
</bodyText>
<listItem confidence="0.999867307692308">
• succession: This relation indicates that a person
succeeds another in a position or title. For ex-
ample, George Bush succeeded Bill Clinton
and Pope Benedict XVI succeeded Pope John
Paul II. We evaluate this relation on the
TREC-9 corpus.
• reaction: This relation occurs between chemi-
cal elements/molecules that can be combined
in a chemical reaction. For example, hydrogen
gas reacts-with oxygen gas and zinc reacts-with
hydrochloric acid. We evaluate this relation on
the CHEM corpus.
• production: This relation occurs when a proc-
</listItem>
<bodyText confidence="0.8755185">
ess or element/object produces a result1. For
example, ammonia produces nitric oxide. We
evaluate this relation on the CHEM corpus.
For each semantic relation, we manually ex-
tracted a small set of seed examples. The seeds
were used for both Espresso as well as RH02.
Table 1 lists a sample of the seeds as well as
sample outputs from Espresso.
</bodyText>
<subsectionHeader confidence="0.994739">
4.2 Precision and Recall
</subsectionHeader>
<bodyText confidence="0.9776045">
We implemented the systems outlined in Section
4.1, except for GI03, and applied them to the
</bodyText>
<footnote confidence="0.859157">
1 Production is an ambiguous relation; it is intended to be
a causation relation in the context of chemical reactions.
</footnote>
<equation confidence="0.7461386">
Sp( i)
xxyxp
x,
p y
,
</equation>
<page confidence="0.996691">
117
</page>
<tableCaption confidence="0.999576">
Table 2. System performance: TREC/is-a.
</tableCaption>
<table confidence="0.9995738">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 57,525 28.0% 5.31
PR04 1,504 47.0% 0.23
ESP- 4,154 73.0% 1.00
ESP+ 69,156 36.2% 8.26
</table>
<tableCaption confidence="0.996925">
Table 4. System performance: TREC/part-of.
</tableCaption>
<table confidence="0.999659">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 12,828 35.0% 42.52
ESP- 132 80.0% 1.00
ESP+ 87,203 69.9% 577.22
</table>
<tableCaption confidence="0.582426">
Table 6. System performance: TREC/succession.
</tableCaption>
<table confidence="0.998933">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 49,798 2.0% 36.96
ESP- 55 49.0% 1.00
ESP+ 55 49.0% 1.00
</table>
<bodyText confidence="0.998567961538462">
TREC and CHEM datasets. For each output set,
per relation, we evaluate the precision of the sys-
tem by extracting a random sample of instances
(50 for the TREC corpus and 20 for the CHEM
corpus) and evaluating their quality manually
using two human judges (a total of 680 instances
were annotated per judge). For each instance,
judges may assign a score of 1 for correct, 0 for
incorrect, and 1/2 for partially correct. Example
instances that were judged partially correct in-
clude “analyst is-a manager” and “pilot is-a
teacher”. The kappa statistic (Siegel and Castel-
lan Jr. 1988) on this task was K = 0.692. The pre-
cision for a given set of instances is the sum of
the judges’ scores divided by the total instances.
Although knowing the total number of correct
instances of a particular relation in any non-
trivial corpus is impossible, it is possible to com-
pute the recall of a system relative to another sys-
tem’s recall. Following (Pantel et al. 2004), we
define the relative recall of system A given sys-
tem B, RA|B, as:
where RA is the recall of A, CA is the number of
correct instances extracted by A, C is the (un-
known) total number of correct instances in the
corpus, PA is A’s precision in our experiments,
</bodyText>
<footnote confidence="0.77975">
2 The kappa statistic jumps to K = 0.79 if we treat partially
correct classifications as correct.
</footnote>
<tableCaption confidence="0.99351">
Table 3. System performance: CHEM/is-a.
</tableCaption>
<table confidence="0.999602">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 2556 25.0% 3.76
PR04 108 40.0% 0.25
ESP- 200 85.0% 1.00
ESP+ 1490 76.0% 6.66
</table>
<tableCaption confidence="0.99114">
Table 5. System performance: CHEM/part-of.
</tableCaption>
<table confidence="0.9996605">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 11,582 33.8% 58.78
ESP- 111 60.0% 1.00
ESP+ 5973 50.7% 45.47
</table>
<tableCaption confidence="0.992939">
Table 7. System performance: CHEM/reaction.
</tableCaption>
<table confidence="0.999573">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 6,083 30% 53.67
ESP- 40 85% 1.00
ESP+ 3102 91.4% 89.39
</table>
<tableCaption confidence="0.985827">
Table 8. System performance: CHEM/production.
</tableCaption>
<table confidence="0.9986875">
SYSTEM INSTANCES PRECISION* REL RECALL†
RH02 197 57.5% 0.80
ESP- 196 72.5% 1.00
ESP+ 1676 55.8% 6.58
</table>
<bodyText confidence="0.98594845">
and |A |is the total number of instances discov-
ered by A.
Tables 2 – 8 report the total number of in-
stances, precision, and relative recall of each sys-
tem on the TREC-9 and CHEM corpora. The
relative recall is always given in relation to the
ESP- system. For example, in Table 2, RH02 has
a relative recall of 5.31 with ESP-, which means
that the RH02 system outputs 5.31 times more
correct relations than ESP- (at a cost of much
lower precision). Similarly, PR04 has a relative
recall of 0.23 with ESP-, which means that PR04
outputs 4.35 fewer correct relations than ESP-
(also with a smaller precision). We did not in-
clude the results from GI03 in the tables since the
system is only applicable to part-of relations and
we did not reproduce it. However, the authors
evaluated their system on a sample of the TREC-
9 dataset and reported 83% precision and 72%
recall (this algorithm is heavily supervised.)
</bodyText>
<footnote confidence="0.950566333333333">
* Because of the small evaluation sets, we estimate the
95% confidence intervals using bootstrap resampling to be
in the order of ± 10-15% (absolute numbers).
</footnote>
<figure confidence="0.954520214285714">
† Relative recall is given in relation to ESP-.
X
A
PA
X
B
PB
CA
RA C CA
R
=
CB
A|B= R = CB =
B C
</figure>
<page confidence="0.697237">
118
</page>
<figureCaption confidence="0.995745">
Figure 1. Precision, recall and F-score curves of the Top-K% ranking instances of patterns “X is a Y”
(TREC/is-a), “X in Y” (TREC/part-of), “X in the Y” (CHEM/part-of), and “X and Y” (CHEM/reaction).
</figureCaption>
<figure confidence="0.999203305555555">
0.8
0.6
0.4
0.2
0
1
5 15 25 35 45 55 65 75 85 95
a) TREC/Is-a: &amp;quot;X Is a Y&amp;quot;
Top-K%
0.8
0.6
0.4
0.2
0
1
5 15 25 35 45 55 65 75 85 95
b) TREC/part-of: &amp;quot;X In the Y&amp;quot;
Top-K%
0.8
0.6
0.4
0.2
0
1
5 15 25 35 45 55 65 75 85 95
c) CHEM/part-of: &amp;quot;X In Y&amp;quot;
Top-K%
0.8
0.6
0.4
0.2
0
1
5 15 25 35 45 55 65 75 85 95
d) CHEM/reactIon: &amp;quot;X and Y&amp;quot;
Top-K%
</figure>
<bodyText confidence="0.9984552">
In all tables, RH02 extracts many more rela-
tions than ESP-, but with a much lower precision,
because it uses generic patterns without filtering.
The high precision of ESP- is due to the effective
reliability measures presented in Section 3.2.
</bodyText>
<subsectionHeader confidence="0.999488">
4.3 Effect of Generic Patterns
</subsectionHeader>
<bodyText confidence="0.981057924528302">
Experimental results, for all relations and the two
different corpus sizes, show that ESP- greatly
outperforms the other methods on precision.
However, without the use of generic patterns, the
ESP- system shows lower recall in all but the
production relation.
As hypothesized, exploiting generic patterns
using the algorithm from Section 3.3 substan-
tially improves recall without much deterioration
in precision. ESP+ shows one to two orders of
magnitude improvement on recall while losing
on average below 10% precision. The succession
relation in Table 6 was the only relation where
Espresso found no generic pattern. For other re-
lations, Espresso found from one to five generic
patterns. Table 4 shows the power of generic pat-
terns where system recall increases by 577 times
with only a 10% drop in precision. In Table 7, we
see a case where the combination of filtering
with a large increase in retrieved instances re-
sulted in both higher precision and recall.
In order to better analyze our use of generic
patterns, we performed the following experiment.
For each relation, we randomly sampled 100 in-
stances for each generic pattern and built a gold
standard for them (by manually tagging each in-
stance as correct or incorrect). We then sorted the
100 instances according to the scoring formula
S(i) derived in Section 3.3 and computed the av-
erage precision, recall, and F-score of each top-K
ranked instances for each pattern5. Due to lack of
space, we only present the graphs for four of the
22 generic patterns: “X is a Y” for the is-a rela-
tion of Table 2, “X in the Y” for the part-of rela-
tion of Table 4, “X in Y” for the part-of relation
of Table 5, and “X and Y” for the reaction rela-
tion of Table 7. Figure 1 illustrates the results.
In each figure, notice that recall climbs at a
much faster rate than precision decreases. This
indicates that the scoring function of Section 3.3
effectively separates correct and incorrect in-
stances. In Figure 1a), there is a big initial drop
in precision that accounts for the poor precision
reported in Table 1.
Recall that the cutoff points on S(i) were set to
τ = 0.4 for TREC and τ = 0.3 for CHEM. The
figures show that this cutoff is far from the
maximum F-score. An interesting avenue of fu-
ture work would be to automatically determine
the proper threshold for each individual generic
pattern instead of setting a uniform threshold.
5 We can directly compute recall here since we built a
gold standard for each set of 100 samples.
</bodyText>
<page confidence="0.998507">
119
</page>
<sectionHeader confidence="0.999688" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.999985647058823">
We proposed a weakly-supervised, general-
purpose, and accurate algorithm, called Espresso,
for harvesting binary semantic relations from raw
text. The main contributions are: i) a method for
exploiting generic patterns by filtering incorrect
instances using the Web; and ii) a principled
measure of pattern and instance reliability ena-
bling the filtering algorithm.
We have empirically compared Espresso’s
precision and recall with other systems on both a
small domain-specific textbook and on a larger
corpus of general news, and have extracted sev-
eral standard and specific semantic relations: is-
a, part-of, succession, reaction, and production.
Espresso achieves higher and more balanced per-
formance than other state of the art systems. By
exploiting generic patterns, system recall sub-
stantially increases with little effect on precision.
There are many avenues of future work both in
improving system performance and making use
of the relations in applications like question an-
swering. For the former, we plan to investigate
the use of WordNet to automatically learn selec-
tional constraints on generic patterns, as pro-
posed by (Girju et al. 2006). We expect here that
negative instances will play a key role in deter-
mining the selectional restrictions.
Espresso is the first system, to our knowledge,
to emphasize concurrently performance, minimal
supervision, breadth, and generality. It remains
to be seen whether one could enrich existing on-
tologies with relations harvested by Espresso,
and it is our hope that these relations will benefit
NLP applications.
</bodyText>
<sectionHeader confidence="0.999277" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999934753424658">
Berland, M. and E. Charniak, 1999. Finding parts in very
large corpora. In Proceedings of ACL-1999. pp. 57-64.
College Park, MD.
Brown, T.L.; LeMay, H.E.; Bursten, B.E.; and Burdge, J.R.
2003. Chemistry: The Central Science, Ninth Edition.
Prentice Hall.
Caraballo, S. 1999. Automatic acquisition of a hypernym-
labeled noun hierarchy from text. In Proceedings of
ACL-99. pp 120-126, Baltimore, MD.
Cover, T.M. and Thomas, J.A. 1991. Elements of
Information Theory. John Wiley &amp; Sons.
Day, D.; Aberdeen, J.; Hirschman, L.; Kozierok, R.;
Robinson, P.; and Vilain, M. 1997. Mixed-initiative
development of language processing systems. In
Proceedings of ANLP-97. Washington D.C.
Downey, D.; Etzioni, O.; and Soderland, S. 2005. A
Probabilistic model of redundancy in information
extraction. In Proceedings of IJCAI-05. pp. 1034-1041.
Edinburgh, Scotland.
Etzioni, O.; Cafarella, M.J.; Downey, D.; Popescu, A.-M.;
Shaked, T.; Soderland, S.; Weld, D.S.; and Yates, A.
2005. Unsupervised named-entity extraction from the
Web: An experimental study. Artificial Intelligence,
165(1): 91-134.
Fellbaum, C. 1998. WordNet: An Electronic Lexical
Database. MIT Press.
Geffet, M. and Dagan, I. 2005. The Distributional Inclusion
Hypotheses and Lexical Entailment. In Proceedings of
ACL-2005. Ann Arbor, MI.
Girju, R.; Badulescu, A.; and Moldovan, D. 2006.
Automatic Discovery of Part-Whole Relations.
Computational Linguistics, 32(1): 83-135.
Hearst, M. 1992. Automatic acquisition of hyponyms from
large text corpora. In Proceedings of COLING-92. pp.
539-545. Nantes, France.
Hindle, D. 1990. Noun classification from predicate-
argument structures. In Proceedings of ACL-90. pp. 268–
275. Pittsburgh, PA.
Justeson J.S. and Katz S.M. 1995. Technical Terminology:
some linguistic properties and algorithms for
identification in text. In Proceedings of ICCL-95.
pp.539-545. Nantes, France.
Lin, C.-Y. and Hovy, E.H.. 2000. The Automated
acquisition of topic signatures for text summarization. In
Proceedings of COLING-00. pp. 495-501. Saarbrücken,
Germany.
Lin, D. and Pantel, P. 2002. Concept discovery from text. In
Proceedings of COLING-02. pp. 577-583. Taipei,
Taiwan.
Mann, G. S. 2002. Fine-Grained Proper Noun Ontologies
for Question Answering. In Proceedings of SemaNet’ 02:
Building and Using Semantic Networks, Taipei, Taiwan.
Pantel, P. and Ravichandran, D. 2004. Automatically
labeling semantic classes. In Proceedings of
HLT/NAACL-04. pp. 321-328. Boston, MA.
Pantel, P.; Ravichandran, D.; Hovy, E.H. 2004. Towards
terascale knowledge acquisition. In Proceedings of
COLING-04. pp. 771-777. Geneva, Switzerland.
Pasca, M. and Harabagiu, S. 2001. The informative role of
WordNet in Open-Domain Question Answering. In
Proceedings of NAACL-01 Workshop on WordNet and
Other Lexical Resources. pp. 138-143. Pittsburgh, PA.
Ravichandran, D. and Hovy, E.H. 2002. Learning surface
text patterns for a question answering system. In
Proceedings of ACL-2002. pp. 41-47. Philadelphia, PA.
Riloff, E. and Shepherd, J. 1997. A corpus-based approach
for building semantic lexicons. In Proceedings of
EMNLP-97.
Siegel, S. and Castellan Jr., N. J. 1988. Nonparametric
Statistics for the Behavioral Sciences. McGraw-Hill.
Szpektor, I.; Tanev, H.; Dagan, I.; and Coppola, B. 2004.
Scaling web-based acquisition of entailment relations. In
Proceedings of EMNLP-04. Barcelona, Spain.
</reference>
<page confidence="0.996288">
120
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.977282">
<title confidence="0.9990345">Espresso: Leveraging Generic Patterns for Automatically Harvesting Semantic Relations</title>
<author confidence="0.999596">Patrick Pantel</author>
<affiliation confidence="0.9986455">Information Sciences Institute University of Southern California</affiliation>
<address confidence="0.998634">4676 Admiralty Way Marina del Rey, CA 90292</address>
<email confidence="0.998664">pantel@isi.edu</email>
<abstract confidence="0.999271368421053">this paper, we present a weakly-supervised, general-purpose, and accurate algorithm for harvesting semantic relations. The main contributions are: i) a method for exploiting generic patterns by filtering incorrect instances using the Web; and ii) a principled measure of pattern and instance reliability enabling the filtering algorithm. We present an empirical comof various state of the art systems, on different size and genre corpora, on extracting various general and specific relations. Experimental results show that our exploitation of generic patterns substantially increases system recall with small effect on overall precision.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>M Berland</author>
<author>E Charniak</author>
</authors>
<title>Finding parts in very large corpora.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL-1999.</booktitle>
<pages>57--64</pages>
<location>College Park, MD.</location>
<contexts>
<context position="5432" citStr="Berland and Charniak (1999)" startWordPosition="807" endWordPosition="810">tem precision dramatically decreases from the introduced noise and bootstrapping quickly spins out of control. 2 Relevant Work To date, most research on relation harvesting has focused on is-a and part-of. Approaches fall into two categories: pattern- and clustering-based. Most common are pattern-based approaches. Hearst (1992) pioneered using patterns to extract hyponym (is-a) relations. Manually building three lexico-syntactic patterns, Hearst sketched a bootstrapping algorithm to learn more patterns from instances, which has served as the model for most subsequent pattern-based algorithms. Berland and Charniak (1999) proposed a system for part-of relation extraction, based on the (Hearst 1992) approach. Seed instances are used to infer linguistic patterns that are used to extract new instances. While this study introduces statistical measures to evaluate instance quality, it remains vulnerable to data sparseness and has the limitation of considering only one-word terms. Improving upon (Berland and Charniak 1999), Girju et al. (2006) employ machine learning algorithms and WordNet (Fellbaum 1998) to disambiguate part-of generic patterns like “X’s Y” and “X of Y”. This study is the first extensive attempt to</context>
</contexts>
<marker>Berland, Charniak, 1999</marker>
<rawString>Berland, M. and E. Charniak, 1999. Finding parts in very large corpora. In Proceedings of ACL-1999. pp. 57-64. College Park, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T L Brown</author>
<author>H E LeMay</author>
<author>B E Bursten</author>
<author>J R Burdge</author>
</authors>
<title>Chemistry: The Central Science, Ninth Edition.</title>
<date>2003</date>
<publisher>Prentice Hall.</publisher>
<contexts>
<context position="19962" citStr="Brown et al. 2003" startWordPosition="3212" endWordPosition="3215"> In this section, we present an empirical comparison of Espresso with three state of the art systems on the task of extracting various semantic relations. 4.1 Experimental Setup We perform our experiments using the following two datasets: • TREC: This dataset consists of a sample of articles from the Aquaint (TREC-9) newswire text collection. The sample consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319. • CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al. 2003). Each corpus is pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). Below we describe the systems used in our empirical evaluation of Espresso. • RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2. • GI03: The algorithm by Girju et al. (2006) described in Section 2. • PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2. • ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. • ESP+: The full Espresso algorithm described in this paper exploiting generic patterns.</context>
</contexts>
<marker>Brown, LeMay, Bursten, Burdge, 2003</marker>
<rawString>Brown, T.L.; LeMay, H.E.; Bursten, B.E.; and Burdge, J.R. 2003. Chemistry: The Central Science, Ninth Edition. Prentice Hall.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Caraballo</author>
</authors>
<title>Automatic acquisition of a hypernymlabeled noun hierarchy from text.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL-99.</booktitle>
<pages>120--126</pages>
<location>Baltimore, MD.</location>
<contexts>
<context position="7914" citStr="Caraballo (1999)" startWordPosition="1192" endWordPosition="1193"> used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al. 2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then extract an is-a relation between each cluster member and the cluster label. Caraballo (1999) proposed the first attempt, which used conjunction and apposition features to build noun clusters. Recently, Pantel and Ravichandran (2004) extended this approach by making use of all syntactic dependency features for each noun. The advantage of clustering approaches is that they permit algorithms to identify is-a relations that do not explicitly appear in text, however they generally fail to produce coherent clusters from fewer than 100 million words; hence they are unreliable for small corpora. 3 The Espresso Algorithm Espresso is based on the framework adopted in (Hearst 1992). It is a min</context>
</contexts>
<marker>Caraballo, 1999</marker>
<rawString>Caraballo, S. 1999. Automatic acquisition of a hypernymlabeled noun hierarchy from text. In Proceedings of ACL-99. pp 120-126, Baltimore, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T M Cover</author>
<author>J A Thomas</author>
</authors>
<title>Elements of Information Theory.</title>
<date>1991</date>
<publisher>John Wiley &amp; Sons.</publisher>
<contexts>
<context position="14263" citStr="Cover and Thomas 1991" startWordPosition="2226" endWordPosition="2229">d part-of FBI report”. 3.2 Pattern and Instance Reliability Intuitively, a reliable pattern is one that is both highly precise and one that extracts many instances. The recall of a pattern p can be approximated by the fraction of input instances that are extracted by p. Since it is non-trivial to estimate automatically the precision of a pattern, we are wary of keeping patterns that generate many instances (i.e., patterns that generate high recall but potentially disastrous precision). Hence, we desire patterns that are highly associated with the input instances. Pointwise mutual information (Cover and Thomas 1991) is a commonly used metric for measuring this strength of association between two events x and y: pmi(x,y)=log P(x,y) P(x)P(y ) We define the reliability of a pattern p, rπ(p), as its average strength of association across each input instance i in I, weighted by the reliability of each instance i: ⎛ ⎞ ∑ ⎜⎜pmi i p ( , ) ∗ r i ι( ) ⎟⎟ i∈I maxpmi ⎠ where rι(i) is the reliability of instance i (defined below) and maxpmi is the maximum pointwise mutual information between all patterns and all instances. rπ(p) ranges from [0,1]. The reliability of the manually supplied seed instances are rι(i) = 1. </context>
</contexts>
<marker>Cover, Thomas, 1991</marker>
<rawString>Cover, T.M. and Thomas, J.A. 1991. Elements of Information Theory. John Wiley &amp; Sons.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Day</author>
<author>J Aberdeen</author>
<author>L Hirschman</author>
<author>R Kozierok</author>
<author>P Robinson</author>
<author>M Vilain</author>
</authors>
<title>Mixed-initiative development of language processing systems.</title>
<date>1997</date>
<booktitle>In Proceedings of ANLP-97. Washington D.C.</booktitle>
<contexts>
<context position="20049" citStr="Day et al. 1997" startWordPosition="3225" endWordPosition="3228">art systems on the task of extracting various semantic relations. 4.1 Experimental Setup We perform our experiments using the following two datasets: • TREC: This dataset consists of a sample of articles from the Aquaint (TREC-9) newswire text collection. The sample consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319. • CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al. 2003). Each corpus is pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). Below we describe the systems used in our empirical evaluation of Espresso. • RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2. • GI03: The algorithm by Girju et al. (2006) described in Section 2. • PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2. • ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. • ESP+: The full Espresso algorithm described in this paper exploiting generic patterns. For ESP+, we experimentally set i from Section 3.3 to i = 0.4 for TREC and i = 0.3 for</context>
</contexts>
<marker>Day, Aberdeen, Hirschman, Kozierok, Robinson, Vilain, 1997</marker>
<rawString>Day, D.; Aberdeen, J.; Hirschman, L.; Kozierok, R.; Robinson, P.; and Vilain, M. 1997. Mixed-initiative development of language processing systems. In Proceedings of ANLP-97. Washington D.C.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Downey</author>
<author>O Etzioni</author>
<author>S Soderland</author>
</authors>
<title>A Probabilistic model of redundancy in information extraction.</title>
<date>2005</date>
<booktitle>In Proceedings of IJCAI-05.</booktitle>
<pages>1034--1041</pages>
<location>Edinburgh, Scotland.</location>
<contexts>
<context position="7414" citStr="Downey et al. 2005" startWordPosition="1115" endWordPosition="1118">que, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations. Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al. 2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al. 2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then extract an is-a relation between each cluster member and the cluster label. Caraballo (1999) proposed the first attempt, which used conjunction and apposition features to build noun clusters. </context>
</contexts>
<marker>Downey, Etzioni, Soderland, 2005</marker>
<rawString>Downey, D.; Etzioni, O.; and Soderland, S. 2005. A Probabilistic model of redundancy in information extraction. In Proceedings of IJCAI-05. pp. 1034-1041. Edinburgh, Scotland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Etzioni</author>
<author>M J Cafarella</author>
<author>D Downey</author>
<author>A-M Popescu</author>
<author>T Shaked</author>
<author>S Soderland</author>
<author>D S Weld</author>
<author>A Yates</author>
</authors>
<title>Unsupervised named-entity extraction from the Web: An experimental study.</title>
<date>2005</date>
<journal>Artificial Intelligence,</journal>
<volume>165</volume>
<issue>1</issue>
<pages>91--134</pages>
<contexts>
<context position="1558" citStr="Etzioni et al. 2005" startWordPosition="218" endWordPosition="221">n to knowledge-rich problems such as question answering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: </context>
<context position="7222" citStr="Etzioni et al. 2005" startWordPosition="1082" endWordPosition="1085">ations such as birthdates, however it has low precision on generic ones like is-a and partof. Pantel et al. (2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations. Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al. 2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al. 2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then </context>
</contexts>
<marker>Etzioni, Cafarella, Downey, Popescu, Shaked, Soderland, Weld, Yates, 2005</marker>
<rawString>Etzioni, O.; Cafarella, M.J.; Downey, D.; Popescu, A.-M.; Shaked, T.; Soderland, S.; Weld, D.S.; and Yates, A. 2005. Unsupervised named-entity extraction from the Web: An experimental study. Artificial Intelligence, 165(1): 91-134.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Fellbaum</author>
</authors>
<title>WordNet: An Electronic Lexical Database.</title>
<date>1998</date>
<publisher>MIT Press.</publisher>
<contexts>
<context position="5919" citStr="Fellbaum 1998" startWordPosition="884" endWordPosition="885">atterns from instances, which has served as the model for most subsequent pattern-based algorithms. Berland and Charniak (1999) proposed a system for part-of relation extraction, based on the (Hearst 1992) approach. Seed instances are used to infer linguistic patterns that are used to extract new instances. While this study introduces statistical measures to evaluate instance quality, it remains vulnerable to data sparseness and has the limitation of considering only one-word terms. Improving upon (Berland and Charniak 1999), Girju et al. (2006) employ machine learning algorithms and WordNet (Fellbaum 1998) to disambiguate part-of generic patterns like “X’s Y” and “X of Y”. This study is the first extensive attempt to make use of generic patterns. In order to discard incorrect instances, they learn WordNetbased selectional restrictions, like “X(scene#4)’s Y(movie#1)”. While making huge grounds on improving precision/recall, heavy supervision is required through manual semantic annotations. Ravichandran and Hovy (2002) focus on scaling relation extraction to the Web. A simple and effective algorithm is proposed to infer surface patterns from a small set of instance seeds by extracting substrings </context>
</contexts>
<marker>Fellbaum, 1998</marker>
<rawString>Fellbaum, C. 1998. WordNet: An Electronic Lexical Database. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Geffet</author>
<author>I Dagan</author>
</authors>
<title>The Distributional Inclusion Hypotheses and Lexical Entailment.</title>
<date>2005</date>
<booktitle>In Proceedings of ACL-2005.</booktitle>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="1067" citStr="Geffet and Dagan 2005" startWordPosition="147" endWordPosition="150">ering incorrect instances using the Web; and ii) a principled measure of pattern and instance reliability enabling the filtering algorithm. We present an empirical comparison of Espresso with various state of the art systems, on different size and genre corpora, on extracting various general and specific relations. Experimental results show that our exploitation of generic patterns substantially increases system recall with small effect on overall precision. 1 Introduction Recent attention to knowledge-rich problems such as question answering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relat</context>
</contexts>
<marker>Geffet, Dagan, 2005</marker>
<rawString>Geffet, M. and Dagan, I. 2005. The Distributional Inclusion Hypotheses and Lexical Entailment. In Proceedings of ACL-2005. Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Girju</author>
<author>A Badulescu</author>
<author>D Moldovan</author>
</authors>
<title>Automatic Discovery of Part-Whole Relations.</title>
<date>2006</date>
<journal>Computational Linguistics,</journal>
<volume>32</volume>
<issue>1</issue>
<pages>83--135</pages>
<contexts>
<context position="1933" citStr="Girju et al. 2006" startWordPosition="273" endWordPosition="276"> grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: it must require little or no human annotation; • Breadth: it must be applicable to varying corpus sizes and domains; and • Generality: it must be applicable to a wide variety of relations (i.e., not just is-a or part-of). To our knowledge, no previous harvesting algorithm addresses all these properties concurrently. In this paper, we present Espresso, a generalpurpose, bro</context>
<context position="4527" citStr="Girju et al. 2006" startWordPosition="679" endWordPosition="682">tational Linguistics Espresso addresses the desiderata as follows: • Performance: Espresso generates balanced precision and recall relation instances by exploiting generic patterns; • Minimal supervision: Espresso requires as input only a small number of seed instances; • Breadth: Espresso works on both small and large corpora – it uses Web and syntactic expansions to compensate for lacks of redundancy in small corpora; • Generality: Espresso is amenable to a wide variety of binary relations, from classical is-a and part-of to specific ones such as reaction and succession. Previous work like (Girju et al. 2006) that has made use of generic patterns through filtering has shown both high precision and high recall, at the expensive cost of much manual semantic annotation. Minimally supervised algorithms, like (Hearst 1992; Pantel et al. 2004), typically ignore generic patterns since system precision dramatically decreases from the introduced noise and bootstrapping quickly spins out of control. 2 Relevant Work To date, most research on relation harvesting has focused on is-a and part-of. Approaches fall into two categories: pattern- and clustering-based. Most common are pattern-based approaches. Hearst</context>
<context position="5856" citStr="Girju et al. (2006)" startWordPosition="873" endWordPosition="876"> patterns, Hearst sketched a bootstrapping algorithm to learn more patterns from instances, which has served as the model for most subsequent pattern-based algorithms. Berland and Charniak (1999) proposed a system for part-of relation extraction, based on the (Hearst 1992) approach. Seed instances are used to infer linguistic patterns that are used to extract new instances. While this study introduces statistical measures to evaluate instance quality, it remains vulnerable to data sparseness and has the limitation of considering only one-word terms. Improving upon (Berland and Charniak 1999), Girju et al. (2006) employ machine learning algorithms and WordNet (Fellbaum 1998) to disambiguate part-of generic patterns like “X’s Y” and “X of Y”. This study is the first extensive attempt to make use of generic patterns. In order to discard incorrect instances, they learn WordNetbased selectional restrictions, like “X(scene#4)’s Y(movie#1)”. While making huge grounds on improving precision/recall, heavy supervision is required through manual semantic annotations. Ravichandran and Hovy (2002) focus on scaling relation extraction to the Web. A simple and effective algorithm is proposed to infer surface patter</context>
<context position="16312" citStr="Girju et al. 2006" startWordPosition="2569" endWordPosition="2572">nce i, rι(i), as: where rπ(p) is the reliability of pattern p (defined earlier) and maxpmi is as before. Note that rι(i) and rπ(p) are recursively defined, where rι(i) = 1 for the manually supplied seed instances. 3.3 Exploiting Generic Patterns Generic patterns are high recall / low precision patterns (e.g, the pattern “X of Y” can ambiguously refer to a part-of, is-a and possession relations). Using them blindly increases system recall while dramatically reducing precision. Minimally supervised algorithms have typically ignored them for this reason. Only heavily supervised approaches, like (Girju et al. 2006) have successfully exploited them. Espresso’s recall can be significantly increased by automatically separating correct instances extracted by generic patterns from incorrect ones. The challenge is to harness the expressive power of the generic patterns while remaining minimally supervised. The intuition behind our method is that in a very large corpus, like the Web, correct instances of a generic pattern will be instantiated by many of Espresso’s reliable patterns accepted in P. Recall that, by definition, Espresso’s reliable patterns extract instances with high precision (yet often low recal</context>
<context position="20249" citStr="Girju et al. (2006)" startWordPosition="3259" endWordPosition="3262">ticles from the Aquaint (TREC-9) newswire text collection. The sample consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319. • CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al. 2003). Each corpus is pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). Below we describe the systems used in our empirical evaluation of Espresso. • RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2. • GI03: The algorithm by Girju et al. (2006) described in Section 2. • PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2. • ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. • ESP+: The full Espresso algorithm described in this paper exploiting generic patterns. For ESP+, we experimentally set i from Section 3.3 to i = 0.4 for TREC and i = 0.3 for CHEM by manually inspecting a small set of instances. Espresso is designed to extract various semantic relations exemplified by a given small set of seed instances. We consider the standard is-a and </context>
</contexts>
<marker>Girju, Badulescu, Moldovan, 2006</marker>
<rawString>Girju, R.; Badulescu, A.; and Moldovan, D. 2006. Automatic Discovery of Part-Whole Relations. Computational Linguistics, 32(1): 83-135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Hearst</author>
</authors>
<title>Automatic acquisition of hyponyms from large text corpora.</title>
<date>1992</date>
<booktitle>In Proceedings of COLING-92.</booktitle>
<pages>539--545</pages>
<location>Nantes, France.</location>
<contexts>
<context position="4739" citStr="Hearst 1992" startWordPosition="714" endWordPosition="715">res as input only a small number of seed instances; • Breadth: Espresso works on both small and large corpora – it uses Web and syntactic expansions to compensate for lacks of redundancy in small corpora; • Generality: Espresso is amenable to a wide variety of binary relations, from classical is-a and part-of to specific ones such as reaction and succession. Previous work like (Girju et al. 2006) that has made use of generic patterns through filtering has shown both high precision and high recall, at the expensive cost of much manual semantic annotation. Minimally supervised algorithms, like (Hearst 1992; Pantel et al. 2004), typically ignore generic patterns since system precision dramatically decreases from the introduced noise and bootstrapping quickly spins out of control. 2 Relevant Work To date, most research on relation harvesting has focused on is-a and part-of. Approaches fall into two categories: pattern- and clustering-based. Most common are pattern-based approaches. Hearst (1992) pioneered using patterns to extract hyponym (is-a) relations. Manually building three lexico-syntactic patterns, Hearst sketched a bootstrapping algorithm to learn more patterns from instances, which has </context>
<context position="8501" citStr="Hearst 1992" startWordPosition="1281" endWordPosition="1282">r label. Caraballo (1999) proposed the first attempt, which used conjunction and apposition features to build noun clusters. Recently, Pantel and Ravichandran (2004) extended this approach by making use of all syntactic dependency features for each noun. The advantage of clustering approaches is that they permit algorithms to identify is-a relations that do not explicitly appear in text, however they generally fail to produce coherent clusters from fewer than 100 million words; hence they are unreliable for small corpora. 3 The Espresso Algorithm Espresso is based on the framework adopted in (Hearst 1992). It is a minimally supervised bootstrapping algorithm that takes as input a few seed instances of a particular relation and iteratively learns surface patterns to extract more instances. The key to Espresso lies in its use of generic patters, i.e., those broad coverage noisy patterns that 114 extract both many correct and incorrect relation instances. For example, for part-of relations, the pattern “X of Y” extracts many correct relation instances like “wheel of the car” but also many incorrect ones like “house of representatives”. The key assumption behind Espresso is that in very large corp</context>
</contexts>
<marker>Hearst, 1992</marker>
<rawString>Hearst, M. 1992. Automatic acquisition of hyponyms from large text corpora. In Proceedings of COLING-92. pp. 539-545. Nantes, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Hindle</author>
</authors>
<title>Noun classification from predicateargument structures.</title>
<date>1990</date>
<booktitle>In Proceedings of ACL-90.</booktitle>
<pages>268--275</pages>
<location>Pittsburgh, PA.</location>
<contexts>
<context position="1599" citStr="Hindle 1990" startWordPosition="226" endWordPosition="227">wering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: it must require little or no human annota</context>
</contexts>
<marker>Hindle, 1990</marker>
<rawString>Hindle, D. 1990. Noun classification from predicateargument structures. In Proceedings of ACL-90. pp. 268– 275. Pittsburgh, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J S Justeson</author>
<author>S M Katz</author>
</authors>
<title>Technical Terminology: some linguistic properties and algorithms for identification in text.</title>
<date>1995</date>
<booktitle>In Proceedings of ICCL-95.</booktitle>
<pages>539--545</pages>
<location>Nantes, France.</location>
<marker>Justeson, Katz, 1995</marker>
<rawString>Justeson J.S. and Katz S.M. 1995. Technical Terminology: some linguistic properties and algorithms for identification in text. In Proceedings of ICCL-95. pp.539-545. Nantes, France.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C-Y Lin</author>
<author>E H Hovy</author>
</authors>
<title>The Automated acquisition of topic signatures for text summarization.</title>
<date>2000</date>
<booktitle>In Proceedings of COLING-00.</booktitle>
<pages>495--501</pages>
<location>Saarbrücken, Germany.</location>
<contexts>
<context position="1529" citStr="Lin and Hovy 2000" startWordPosition="213" endWordPosition="216">ntroduction Recent attention to knowledge-rich problems such as question answering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation insta</context>
</contexts>
<marker>Lin, Hovy, 2000</marker>
<rawString>Lin, C.-Y. and Hovy, E.H.. 2000. The Automated acquisition of topic signatures for text summarization. In Proceedings of COLING-00. pp. 495-501. Saarbrücken, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Lin</author>
<author>P Pantel</author>
</authors>
<title>Concept discovery from text.</title>
<date>2002</date>
<booktitle>In Proceedings of COLING-02.</booktitle>
<pages>577--583</pages>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="1491" citStr="Lin and Pantel 2002" startWordPosition="206" endWordPosition="209">h small effect on overall precision. 1 Introduction Recent attention to knowledge-rich problems such as question answering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high pr</context>
</contexts>
<marker>Lin, Pantel, 2002</marker>
<rawString>Lin, D. and Pantel, P. 2002. Concept discovery from text. In Proceedings of COLING-02. pp. 577-583. Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G S Mann</author>
</authors>
<title>Fine-Grained Proper Noun Ontologies for Question Answering.</title>
<date>2002</date>
<booktitle>In Proceedings of SemaNet’ 02: Building and Using Semantic Networks,</booktitle>
<location>Taipei, Taiwan.</location>
<contexts>
<context position="7294" citStr="Mann (2002)" startWordPosition="1095" endWordPosition="1096"> and partof. Pantel et al. (2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations. Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al. 2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al. 2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then extract an is-a relation between each cluster member and the cluster lab</context>
</contexts>
<marker>Mann, 2002</marker>
<rawString>Mann, G. S. 2002. Fine-Grained Proper Noun Ontologies for Question Answering. In Proceedings of SemaNet’ 02: Building and Using Semantic Networks, Taipei, Taiwan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Pantel</author>
<author>D Ravichandran</author>
</authors>
<title>Automatically labeling semantic classes.</title>
<date>2004</date>
<booktitle>In Proceedings of HLT/NAACL-04.</booktitle>
<pages>321--328</pages>
<location>Boston, MA.</location>
<contexts>
<context position="8054" citStr="Pantel and Ravichandran (2004)" startWordPosition="1209" endWordPosition="1212">lized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group words according to their meanings in text, label the clusters using its members’ lexical or syntactic dependencies, and then extract an is-a relation between each cluster member and the cluster label. Caraballo (1999) proposed the first attempt, which used conjunction and apposition features to build noun clusters. Recently, Pantel and Ravichandran (2004) extended this approach by making use of all syntactic dependency features for each noun. The advantage of clustering approaches is that they permit algorithms to identify is-a relations that do not explicitly appear in text, however they generally fail to produce coherent clusters from fewer than 100 million words; hence they are unreliable for small corpora. 3 The Espresso Algorithm Espresso is based on the framework adopted in (Hearst 1992). It is a minimally supervised bootstrapping algorithm that takes as input a few seed instances of a particular relation and iteratively learns surface p</context>
<context position="15301" citStr="Pantel and Ravichandran 2004" startWordPosition="2411" endWordPosition="2414">and maxpmi is the maximum pointwise mutual information between all patterns and all instances. rπ(p) ranges from [0,1]. The reliability of the manually supplied seed instances are rι(i) = 1. The pointwise mutual information between instance i = {x, y} and pattern p is estimated using the following formula: where |x, p, y |is the frequency of pattern p instantiated with terms x and y and where the asterisk (*) represents a wildcard. A well-known problem is that pointwise mutual information is biased towards infrequent events. We thus multiply pmi(i, p) with the discounting factor suggested in (Pantel and Ravichandran 2004). Estimating the reliability of an instance is similar to estimating the reliability of a pattern. Intuitively, a reliable instance is one that is highly associated with as many reliable patterns as possible (i.e., we have more confidence in an instance when multiple reliable patterns instantiate it.) Hence, analogous to our pattern reliability measure, we define the reliability of an instance i, rι(i), as: where rπ(p) is the reliability of pattern p (defined earlier) and maxpmi is as before. Note that rι(i) and rπ(p) are recursively defined, where rι(i) = 1 for the manually supplied seed inst</context>
<context position="20329" citStr="Pantel and Ravichandran (2004)" startWordPosition="3273" endWordPosition="3277"> consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319. • CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al. 2003). Each corpus is pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). Below we describe the systems used in our empirical evaluation of Espresso. • RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2. • GI03: The algorithm by Girju et al. (2006) described in Section 2. • PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2. • ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. • ESP+: The full Espresso algorithm described in this paper exploiting generic patterns. For ESP+, we experimentally set i from Section 3.3 to i = 0.4 for TREC and i = 0.3 for CHEM by manually inspecting a small set of instances. Espresso is designed to extract various semantic relations exemplified by a given small set of seed instances. We consider the standard is-a and part-of relations as well as the following more specific relations: • succession</context>
</contexts>
<marker>Pantel, Ravichandran, 2004</marker>
<rawString>Pantel, P. and Ravichandran, D. 2004. Automatically labeling semantic classes. In Proceedings of HLT/NAACL-04. pp. 321-328. Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Pantel</author>
<author>D Ravichandran</author>
<author>E H Hovy</author>
</authors>
<title>Towards terascale knowledge acquisition.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING-04.</booktitle>
<pages>771--777</pages>
<location>Geneva,</location>
<contexts>
<context position="4760" citStr="Pantel et al. 2004" startWordPosition="716" endWordPosition="719">only a small number of seed instances; • Breadth: Espresso works on both small and large corpora – it uses Web and syntactic expansions to compensate for lacks of redundancy in small corpora; • Generality: Espresso is amenable to a wide variety of binary relations, from classical is-a and part-of to specific ones such as reaction and succession. Previous work like (Girju et al. 2006) that has made use of generic patterns through filtering has shown both high precision and high recall, at the expensive cost of much manual semantic annotation. Minimally supervised algorithms, like (Hearst 1992; Pantel et al. 2004), typically ignore generic patterns since system precision dramatically decreases from the introduced noise and bootstrapping quickly spins out of control. 2 Relevant Work To date, most research on relation harvesting has focused on is-a and part-of. Approaches fall into two categories: pattern- and clustering-based. Most common are pattern-based approaches. Hearst (1992) pioneered using patterns to extract hyponym (is-a) relations. Manually building three lexico-syntactic patterns, Hearst sketched a bootstrapping algorithm to learn more patterns from instances, which has served as the model f</context>
<context position="6716" citStr="Pantel et al. (2004)" startWordPosition="1008" endWordPosition="1011">tances, they learn WordNetbased selectional restrictions, like “X(scene#4)’s Y(movie#1)”. While making huge grounds on improving precision/recall, heavy supervision is required through manual semantic annotations. Ravichandran and Hovy (2002) focus on scaling relation extraction to the Web. A simple and effective algorithm is proposed to infer surface patterns from a small set of instance seeds by extracting substrings relating seeds in corpus sentences. The approach gives good results on specific relations such as birthdates, however it has low precision on generic ones like is-a and partof. Pantel et al. (2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations. Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al. 2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of spee</context>
<context position="23481" citStr="Pantel et al. 2004" startWordPosition="3803" endWordPosition="3806">may assign a score of 1 for correct, 0 for incorrect, and 1/2 for partially correct. Example instances that were judged partially correct include “analyst is-a manager” and “pilot is-a teacher”. The kappa statistic (Siegel and Castellan Jr. 1988) on this task was K = 0.692. The precision for a given set of instances is the sum of the judges’ scores divided by the total instances. Although knowing the total number of correct instances of a particular relation in any nontrivial corpus is impossible, it is possible to compute the recall of a system relative to another system’s recall. Following (Pantel et al. 2004), we define the relative recall of system A given system B, RA|B, as: where RA is the recall of A, CA is the number of correct instances extracted by A, C is the (unknown) total number of correct instances in the corpus, PA is A’s precision in our experiments, 2 The kappa statistic jumps to K = 0.79 if we treat partially correct classifications as correct. Table 3. System performance: CHEM/is-a. SYSTEM INSTANCES PRECISION* REL RECALL† RH02 2556 25.0% 3.76 PR04 108 40.0% 0.25 ESP- 200 85.0% 1.00 ESP+ 1490 76.0% 6.66 Table 5. System performance: CHEM/part-of. SYSTEM INSTANCES PRECISION* REL RECA</context>
</contexts>
<marker>Pantel, Ravichandran, Hovy, 2004</marker>
<rawString>Pantel, P.; Ravichandran, D.; Hovy, E.H. 2004. Towards terascale knowledge acquisition. In Proceedings of COLING-04. pp. 771-777. Geneva, Switzerland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Pasca</author>
<author>S Harabagiu</author>
</authors>
<title>The informative role of WordNet in Open-Domain Question Answering.</title>
<date>2001</date>
<booktitle>In Proceedings of NAACL-01 Workshop on WordNet and Other Lexical Resources.</booktitle>
<pages>138--143</pages>
<location>Pittsburgh, PA.</location>
<contexts>
<context position="1020" citStr="Pasca and Harabagiu 2001" startWordPosition="140" endWordPosition="143">) a method for exploiting generic patterns by filtering incorrect instances using the Web; and ii) a principled measure of pattern and instance reliability enabling the filtering algorithm. We present an empirical comparison of Espresso with various state of the art systems, on different size and genre corpora, on extracting various general and specific relations. Experimental results show that our exploitation of generic patterns substantially increases system recall with small effect on overall precision. 1 Introduction Recent attention to knowledge-rich problems such as question answering (Pasca and Harabagiu 2001) and textual entailment (Geffet and Dagan 2005) has encouraged natural language processing researchers to develop algorithms for automatically harvesting shallow semantic resources. With seemingly endless amounts of textual data at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts</context>
</contexts>
<marker>Pasca, Harabagiu, 2001</marker>
<rawString>Pasca, M. and Harabagiu, S. 2001. The informative role of WordNet in Open-Domain Question Answering. In Proceedings of NAACL-01 Workshop on WordNet and Other Lexical Resources. pp. 138-143. Pittsburgh, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Ravichandran</author>
<author>E H Hovy</author>
</authors>
<title>Learning surface text patterns for a question answering system.</title>
<date>2002</date>
<booktitle>In Proceedings of ACL-2002.</booktitle>
<pages>41--47</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="1904" citStr="Ravichandran and Hovy 2002" startWordPosition="267" endWordPosition="271">remendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: it must require little or no human annotation; • Breadth: it must be applicable to varying corpus sizes and domains; and • Generality: it must be applicable to a wide variety of relations (i.e., not just is-a or part-of). To our knowledge, no previous harvesting algorithm addresses all these properties concurrently. In this paper, we present Es</context>
<context position="6338" citStr="Ravichandran and Hovy (2002)" startWordPosition="943" endWordPosition="946">able to data sparseness and has the limitation of considering only one-word terms. Improving upon (Berland and Charniak 1999), Girju et al. (2006) employ machine learning algorithms and WordNet (Fellbaum 1998) to disambiguate part-of generic patterns like “X’s Y” and “X of Y”. This study is the first extensive attempt to make use of generic patterns. In order to discard incorrect instances, they learn WordNetbased selectional restrictions, like “X(scene#4)’s Y(movie#1)”. While making huge grounds on improving precision/recall, heavy supervision is required through manual semantic annotations. Ravichandran and Hovy (2002) focus on scaling relation extraction to the Web. A simple and effective algorithm is proposed to infer surface patterns from a small set of instance seeds by extracting substrings relating seeds in corpus sentences. The approach gives good results on specific relations such as birthdates, however it has low precision on generic ones like is-a and partof. Pantel et al. (2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we mak</context>
<context position="10533" citStr="Ravichandran and Hovy 2002" startWordPosition="1603" endWordPosition="1606">n. In our experiments, we set ti1 = 5 and ti2 = 50%. For our tokenization, in order to harvest multiword terms as relation instances, we adopt a slightly modified version of the term definition given in (Justeson 1995), as it is one of the most commonly used in the NLP literature: ((Adj|Noun)+|((Adj|Noun)*(NounPrep)?)(Adj|Noun)*)Noun Pattern Induction In the pattern induction phase, Espresso infers a set of surface patterns P that connects as many of the seed instances as possible in a given corpus. Any pattern learning algorithm would do. We chose the state of the art algorithm described in (Ravichandran and Hovy 2002) with the following slight modification. For each input instance {x, y}, we first retrieve all sentences containing the two terms x and y. The sentences are then generalized into a set of new sentences Sx,y by replacing all terminological expressions by a terminological label, TR. For example: “Because/IN HF/NNP is/VBZ a/DT weak/JJ acid/NN and/CC x is/VBZ a/DT y” is generalized as: “Because/IN TR is/VBZ a/DT TR and/CC x is/VBZ a/DT y” Term generalization is useful for small corpora to ease data sparseness. Generalized patterns are naturally less precise, but this is ameliorated by our filterin</context>
<context position="20180" citStr="Ravichandran and Hovy (2002)" startWordPosition="3246" endWordPosition="3249">ng the following two datasets: • TREC: This dataset consists of a sample of articles from the Aquaint (TREC-9) newswire text collection. The sample consists of 5,951,432 words extracted from the following data files: AP890101 – AP890131, AP890201 – AP890228, and AP890310 – AP890319. • CHEM: This small dataset of 313,590 words consists of a college level textbook of introductory chemistry (Brown et al. 2003). Each corpus is pre-processed using the Alembic Workbench POS-tagger (Day et al. 1997). Below we describe the systems used in our empirical evaluation of Espresso. • RH02: The algorithm by Ravichandran and Hovy (2002) described in Section 2. • GI03: The algorithm by Girju et al. (2006) described in Section 2. • PR04: The algorithm by Pantel and Ravichandran (2004) described in Section 2. • ESP-: The Espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. • ESP+: The full Espresso algorithm described in this paper exploiting generic patterns. For ESP+, we experimentally set i from Section 3.3 to i = 0.4 for TREC and i = 0.3 for CHEM by manually inspecting a small set of instances. Espresso is designed to extract various semantic relations exemplified by a </context>
</contexts>
<marker>Ravichandran, Hovy, 2002</marker>
<rawString>Ravichandran, D. and Hovy, E.H. 2002. Learning surface text patterns for a question answering system. In Proceedings of ACL-2002. pp. 41-47. Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Riloff</author>
<author>J Shepherd</author>
</authors>
<title>A corpus-based approach for building semantic lexicons.</title>
<date>1997</date>
<booktitle>In Proceedings of EMNLP-97.</booktitle>
<contexts>
<context position="7099" citStr="Riloff and Shepherd 1997" startWordPosition="1063" endWordPosition="1066">t of instance seeds by extracting substrings relating seeds in corpus sentences. The approach gives good results on specific relations such as birthdates, however it has low precision on generic ones like is-a and partof. Pantel et al. (2004) proposed a similar, highly scalable approach, based on an edit-distance technique, to learn lexico-POS patterns, showing both good performance and efficiency. Espresso uses a similar approach to infer patterns, but we make use of generic patterns and apply refining techniques to deal with wide variety of relations. Other pattern-based algorithms include (Riloff and Shepherd 1997), who used a semi-automatic method for discovering similar words using a few seed examples, KnowItAll (Etzioni et al. 2005) that performs large-scale extraction of facts from the Web, Mann (2002) who used part of speech patterns to extract a subset of is-a relations involving proper nouns, and (Downey et al. 2005) who formalized the problem of relation extraction in a coherent and effective combinatorial model that is shown to outperform previous probabilistic frameworks. Clustering approaches have so far been applied only to is-a extraction. These methods use clustering algorithms to group wo</context>
</contexts>
<marker>Riloff, Shepherd, 1997</marker>
<rawString>Riloff, E. and Shepherd, J. 1997. A corpus-based approach for building semantic lexicons. In Proceedings of EMNLP-97.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Siegel</author>
<author>Castellan Jr</author>
<author>N J</author>
</authors>
<title>Nonparametric Statistics for the Behavioral Sciences.</title>
<date>1988</date>
<publisher>McGraw-Hill.</publisher>
<marker>Siegel, Jr, J, 1988</marker>
<rawString>Siegel, S. and Castellan Jr., N. J. 1988. Nonparametric Statistics for the Behavioral Sciences. McGraw-Hill.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Szpektor</author>
<author>H Tanev</author>
<author>I Dagan</author>
<author>B Coppola</author>
</authors>
<title>Scaling web-based acquisition of entailment relations.</title>
<date>2004</date>
<booktitle>In Proceedings of EMNLP-04.</booktitle>
<location>Barcelona,</location>
<contexts>
<context position="1869" citStr="Szpektor et al. 2004" startWordPosition="262" endWordPosition="265"> at our disposal, we have a tremendous opportunity to automatically grow semantic term banks and ontological resources. To date, researchers have harvested, with varying success, several resources, including concept lists (Lin and Pantel 2002), topic signatures (Lin and Hovy 2000), facts (Etzioni et al. 2005), and word similarity lists (Hindle 1990). Many recent efforts have also focused on extracting semantic relations between entities, such as Marco Pennacchiotti ART Group - DISP University of Rome “Tor Vergata” Viale del Politecnico 1 Rome, Italy pennacchiotti@info.uniroma2.it entailments (Szpektor et al. 2004), is-a (Ravichandran and Hovy 2002), part-of (Girju et al. 2006), and other relations. The following desiderata outline the properties of an ideal relation harvesting algorithm: • Performance: it must generate both high precision and high recall relation instances; • Minimal supervision: it must require little or no human annotation; • Breadth: it must be applicable to varying corpus sizes and domains; and • Generality: it must be applicable to a wide variety of relations (i.e., not just is-a or part-of). To our knowledge, no previous harvesting algorithm addresses all these properties concurr</context>
</contexts>
<marker>Szpektor, Tanev, Dagan, Coppola, 2004</marker>
<rawString>Szpektor, I.; Tanev, H.; Dagan, I.; and Coppola, B. 2004. Scaling web-based acquisition of entailment relations. In Proceedings of EMNLP-04. Barcelona, Spain.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>