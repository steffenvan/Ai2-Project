<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000130">
<note confidence="0.86942">
HANDLING ILL-FORKED INPUT: SESSION INTRODUCTION
</note>
<author confidence="0.796876">
Ralph M. Weischedel
</author>
<affiliation confidence="0.872748333333333">
Department of Computer and Information Sciences
University of Delaware
Newark, Delaware 19711
</affiliation>
<sectionHeader confidence="0.994546" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999947">
Suppose we call &amp;quot;normative&amp;quot; any sys-
tem based on a set of constraints (wheth-
er pragmatic, semantic, or syntactic).
Input that violates the constraints of a
system could be termed &amp;quot;ill-formed&amp;quot;. Son-
dheimer and Weischedel (1980) identify
two general classes of input appearing
ill-formed to a normative system. Input
will be called
absolutely ill-formed, if native
speakers generally agree that it
violates one or more linguistic con-
straints, or
relatively ill-formed, if it violates
some constiqint(s) of the computa-
tional system, though native speakers
perceive nothing odd about it.
</bodyText>
<subsectionHeader confidence="0.770026">
Examples of absolute ill-formedness
</subsectionHeader>
<bodyText confidence="0.998765555555556">
include misspellings, mistypings,
mispunctuations, tense and number errors,
word order problems, run-on sentences,
sentence fragments, extraneous forms, and
meaningless sentences. Examples of rela-
tively ill-formed input include unknown
words and requests that are beyond the
limits of either the computer system or
the natural language interface.
In natural language access (e.g.
English access) to information systems,
the magnitude of the problem of absolute
ill-formedness can be seen in several
case studies. If one includes telegraphic
and elliptical constructions in the class
of absolute ill-formedness, then case
studies reported in Thompson (1980) and
Eastman and McLean (1981) indicate that
</bodyText>
<footnote confidence="0.739065666666667">
&apos;This material is based upon work partially sup-
ported by the National Science Foundation under
Grant No. IST-8009673.
</footnote>
<bodyText confidence="0.976765904761905">
as much as 25% of queries to question-
answering systems are absolutely in-
formed. On the other hand, no matter how
large the dictionary, grammar, and under-
lying system, there will always be unk-
nown words and phrases (e.g. proper
names) and impossible requests (due to
user misconceptions of the capabilities
of the underlying system).
2. Brief overview of the papers of this
session
This session consists of papers by
Jensen and Heidorn; Marsh; and Granger et
al. The paper by Jensen and Heidorn
presents a particular heuristic for
dealing with unparsable input. Since
they have separate explicit heuristics
for specific ungrammatical forms, a sig-
nificant proportion of unparsable input
in their system will be relatively in-
formed. One of the goals of the EPISTLE
project, of which this is a part, is cri-
tiquing business letters.
Marsh&apos;s paper describes a technique
for filling in material omitted from
fragmentary inputs. Both syntactic in-
formation and domain-specific constraints
on semantic classes are used. This is
part of an ongoing effort in extracting a
data base from free-text medical records,
such as narrative discharge summaries.
The paper by Granger et al. reports
on NOMAD, a system for taking cryptic,
errorful naval ship-to-shore messages ani
generating well-formed versions. The
paper describes the methods &apos;used for pro-
cessing unknown words, fragments, missing
punctuation, and tense errors.
One way to classify ill-formednes3
work is by the choices made regarding
several issues. Each of the following
sections will present one issue.
</bodyText>
<page confidence="0.999172">
89
</page>
<listItem confidence="0.275974">
3. Application area and responding to
</listItem>
<bodyText confidence="0.937017970588235">
ill-formedness
Ill-formedness processing has been
examined in many application areas, in-
cluding data base access (Hendrix, et
al., 1978), building a data base (Marsh,
1983), grammar checking (Jensen and
Heidorn, 1983),. generating well-formed
messages from ill-formed and incomplete
ones (Granger, et al., 1983) and
intelligent computer-assisted language
instruction (Weischedel, at al., 1978).
Proper response to an ill-formed
input depends on the application environ-
ment and the user. For example, suppose
a presupposition of an input is incorrect
according to the computer model. In a
language instruction environment, the
system should correct the erroneous in-
put, informing the student of the cause
of the error; this makes sense since stu-
dents are error prone in learning a
language. In data base access, the sys-
tem might inform the user of the false
presupposition and suggest alternative
queries (Kaplan, 1978), since the user
does not usually benefit from the empty
set as a response. On the other hand, in
the application Granger is investigating,
the system should check an assumption it
has made regarding the incomplete text
and try an alternative, since the incon-
sistency may stem from an assumption the
system made in completing fragmentary
input.
</bodyText>
<sectionHeader confidence="0.377644" genericHeader="method">
4. The role of constraints
</sectionHeader>
<bodyText confidence="0.999604166666667">
Perhaps ill-formedness should be
handled by simply not encoding some con-
straints in the normative system. Waltz
(1978) and Schenk, at al. (1980) have
taken this approach for a large class of
syntactic constraints. In certain appli-
cations, one can get by with such an
approach due to the great amount of
redundancy in natural language. However,
it clearly will not work in general, sin-
ce constraints generally carry meaning
and trim the search space. All three
papers of this session capitalize on con-
straints (or expectations), and propose
mechanisms for processing ill-formedness.
Given a commitment to employ con-
straints rather than ignoring them, there
are still the following design issues:
</bodyText>
<listItem confidence="0.923108363636364">
a) whether two separate systems,
perhaps running in parallel, should
be built for well-formedness and for
ill -formedness
b) whether ill-formed processing
can be stated as explicit modifica-
tions to well-formedness processing,
and
c) whether a metric can be used
instead of employing any special
procedures for ill-formedness.
</listItem>
<bodyText confidence="0.932096551724138">
Weischedel and Sondheimer (1981) argue
for an approach that explicitly relates
ill-formedness processing to the rules of
the normative system via meta-rules
(rules that operate on rules). A more
complete discussion of the alternatives
appears there.
5. Categorization of ellipsis,
conjunction, and other gray cases
It is debatable whether certain
phenomena should be classified as well-
formed or not. Ellipsis (fragmentary
input which in context conveys a complete
thought) is an example. In such cases,
the definition of &amp;quot;ill-formedness&amp;quot; in
terms of a normative system, as well as
the distinction between absolute and
relative ill-formedness, sheds light on
the issue. In Marsh&apos;s system, syntactic
forms for ellipses are explicitly coded
in the normative system. Jensen and
Heidorn do not include rules for frag-
ments in the grammar, but view it as
relative ill-formedness to be processed
by a recovery strategy. Granger, at al.
also view ellipsis as relatively in-
formed.
Conjunction formation is another
interesting case. Though use of conjunc-
tion is clearly grammatical, a number of
individuals (Sager, 1973; Woods, 1973;
Kwasny and Sondheimer, 1981) have argued
that it should not be included in the
normative grammar, but rather should be
processed via a recovery strategy.
Therefore, they have argued for treating
it as relatively ill-formed.
I suspect that categorizing almost
any particular constraint as normative
could be the basis for argument. The
criteria for deciding whether a con-
straint should be included in the norma-
tive system include at least the fol-
lowing:
a) whether a native speaker would
edit inputs that violate it,
b) whether violating the constraint
can yield useful inferences,
c) whether examples exist where the
constraint carries meaning,
d) whether the constraint, if
classified as normative, trims the
search space, and
e) whether a processing strategy
for the constraint can be stated
more easily as a modification of
normative processing, as in the case
of conjunction.
</bodyText>
<page confidence="0.998026">
90
</page>
<sectionHeader confidence="0.982852" genericHeader="method">
6. Knowledge sources
</sectionHeader>
<bodyText confidence="0.999960571428572">
In processing ill-formedness, there
is usually more than one alternative for
diagnosing the problem and for recover-
ing. Oftentimes there is more than one
alternative for what was intended. What
kinds of knowledge are brought to bear on
the problem? Jensen and Heidorn use syn-
tactic information and an ordering heu-
ristic in their parser. Marsh uses syn-
tactic information and semantics (pri-
marily selection restrictions). Granger
et al. also employ syntactic and semantic
constraints, but additionally employ
&amp;quot;scripts&amp;quot; of stereotypical events in the
environment of naval ship-to-shore mes-
sages.
Using more classes of information to
infer What was intended is an open prob-
lem; the kinds of semantic and pragmatic
knowledge that could be helpful have
barely been tapped.
</bodyText>
<sectionHeader confidence="0.919286" genericHeader="method">
7. Control
</sectionHeader>
<bodyText confidence="0.980740487179487">
The control mechanisms of the norma-
tive system (e.g. bottom-up versus top-
down and the point at which semantic con-
straints are used) are not of concern to
us here. Rather, what is of interest is
a) the point at which
ill-
formedness strategies are employed,
b) the mechanism for identifying
what the problem is,
c) the nature of response, if any,
once a specific hypothesis of the
problem is made, and
the search strategy for selec-
ting an intended interpretation.
Many alternatives exist for these de-
cisions; an overview of them appears in
Sondheimer and Weischedel (1980).
8. Future directions
As evident from this session, the
processing of ill-formed input has become
a very active research topic that is of
critical importance in a wide variety of
applications. Yet, there is much to be
done. There are many kinds of ill-
formedness for which better heuristics
are needed.
Another need is empirical studies.
Controlling the processing of ill-formed
input is a substantial problem no matter
what approach one takes, since processing
ill-formedness requires relaxing the very
constraints that trim the search space
for possible interpretations. Because
control is such an important issue,
thorough, rigorous empirical studies are
much needed to determine the effec-
tiveness and costs of competing stra-
tegies.
</bodyText>
<subsectionHeader confidence="0.775284">
Publishing additional collections of
</subsectionHeader>
<bodyText confidence="0.989592153846154">
ill-formed input is critical. The pat-
terns of behavior evident in such
collections not only suggest heuristics
for ill-formedness processing but also
provide a basis for benchmarks upon which
to base empirical comparisons.
One other area needing much research
is models of particular users, their
plans, and goals. This is important to
infer the intended meaning of an indivi-
dual, since many explanations exist. For
instance, when no interpretation can be
found, spelling corrections, inferring
the meaning of an unknown word, or relax-
ing a syntactic or semantic constraint
are all possibilities. Granger, et al.
(1983) and Allen, et al. (1983) both
report progress on using pragmatic infor-
mation to deal with fragmentary input.
The obvious benefit of
ill-
formedness research is more natural,
easy-to-use systems. An additional bene-
fit is that study of ill-formedness
should lead to better understanding of
how normative systems should be designed.
</bodyText>
<sectionHeader confidence="0.998369" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.971948642857143">
Allen, James F., Alan M. Frisch, Diane J.
Litman, &amp;quot;ARGOT: The Rochester Dialogue
System&amp;quot;, Proceedings of the National
Conference on Artific1 771telTIFEEe:
(1982), 66-70.
Eastman, C. M. and D. S. McLean, &amp;quot;On the
Need for Parsing Ill-formed Input,&amp;quot;
American Journal of Computational
riTaii7.7Eics,-7777-(1987, 257.
Granger, Richard H., Chris J. Staros,
Gregory B. Taylor, and Riku Yoshii,
&amp;quot;Scruffy Text Understanding: Design an
Implementation of the NOMAD System&amp;quot;, this
volume, 1983.
Hendrix, G. G., E. D. Sacerdoti, D. Sa-
galowicz and J. Slocum, &amp;quot;Developing a
Natural Language Interface to Complex
Data&amp;quot;, ACM Transactions on Database
Systems, 3, 2, (1978), 105-147.
Jensen, Karen and George E. Heinorn, &amp;quot;The
&apos;Fitted&apos; Parse: 100% Parsing Capability
in a Syntactic Grammar of English&amp;quot;, this
volume, 1983.
Kaplan, S. J., &amp;quot;Indirect Responses to
Loaded Questions,&amp;quot; Theoretical Issues in
Natural Language Processing-2, University
of Illinois at Urbana-Champaign, July,
1978.
</reference>
<page confidence="0.992851">
91
</page>
<reference confidence="0.999858872340425">
Kwasny, S. C., and N. K. Sondheimer,
&amp;quot;Relaxation Techniques for Parsing Ill-
Formed Input&amp;quot;, American Journal of
Computational LiFiTrigiTEs, -77-71981T7
99-108.
Marsh, Elaine, &amp;quot;Utilizing Domain-Specific
Information for Processing Compact Text&amp;quot;,
this volume, 1983.
Sager, Naomi, &amp;quot;The String Parser for
Scientific Literature.&amp;quot; In R. Rustin,
Ed., Natural Language Processing. New
York: Algorithmics Press, 1973.
Schank, Roger C., Michael Lebowitz, and
Lawrence Birnbaum, &amp;quot;An Integrated
Understander&amp;quot;, American Journal of
Computational Li341-11-SET.Es, 6, 1, (1980T7
13-30.
Sondheimer, N. K. and R. M. Weischedel,
&amp;quot;A Rule-Based Approach to Ill-Formed
Input,&amp;quot; Proceedings of the Eighth
International Conference on Computational
Linguistics, Tokyo, October 1980, 46=T4.
Thompson, B. H., &amp;quot;Linguistic Analysis of
Natural Language Communication with Com-
puters&amp;quot;, Proceedings of the Eighth
International Conference on Computational
Linguistics, Tokyo, October, 1980,
190-201.
Waltz, D. L., &amp;quot;An English Language Ques-
tion Answering System for a Large Rela-
tional Database&amp;quot;, Communications of the
ACM, 21, 7, (1978), 526-539.
Weischedel, R.M. and N. K. Sondheimer, &amp;quot;A
Framework for Processing Ill-Formed
Input&amp;quot;, Dept. of Computer &amp; Information
Sciences, University of Delaware, Newark,
DE, 1981.
Weischedel, R. M., W. M. Voge, and M.
James, &amp;quot;An Artificial Intelligence
Approach to Language Instruction&amp;quot;,
Artificial Intelligence, 10, (1978),
225-240.
Woods, W. A., &amp;quot;An Experimental Parsing
System for Transition Network Grammars.&amp;quot;
In R. Austin, Ed., Natural Language
Processing. New York: Algorithmics
Press, 1973.
</reference>
<page confidence="0.996019">
92
</page>
</variant>
</algorithm>

<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>James F Allen</author>
<author>Alan M Frisch</author>
<author>Diane J Litman</author>
</authors>
<title>ARGOT: The Rochester Dialogue System&amp;quot;,</title>
<date>1982</date>
<booktitle>Proceedings of the National Conference on Artific1 771telTIFEEe:</booktitle>
<pages>66--70</pages>
<marker>Allen, Frisch, Litman, 1982</marker>
<rawString>Allen, James F., Alan M. Frisch, Diane J. Litman, &amp;quot;ARGOT: The Rochester Dialogue System&amp;quot;, Proceedings of the National Conference on Artific1 771telTIFEEe: (1982), 66-70.</rawString>
</citation>
<citation valid="false">
<authors>
<author>C M Eastman</author>
<author>D S McLean</author>
</authors>
<title>On the Need for Parsing Ill-formed Input,&amp;quot;</title>
<journal>American Journal of Computational</journal>
<volume>7</volume>
<pages>257</pages>
<marker>Eastman, McLean, </marker>
<rawString>Eastman, C. M. and D. S. McLean, &amp;quot;On the Need for Parsing Ill-formed Input,&amp;quot; American Journal of Computational riTaii7.7Eics,-7777-(1987, 257.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard H Granger</author>
<author>Chris J Staros</author>
<author>Gregory B Taylor</author>
<author>Riku Yoshii</author>
</authors>
<title>Scruffy Text Understanding: Design an Implementation of the NOMAD System&amp;quot;, this volume,</title>
<date>1983</date>
<contexts>
<context position="3520" citStr="Granger, et al., 1983" startWordPosition="522" endWordPosition="525">rsions. The paper describes the methods &apos;used for processing unknown words, fragments, missing punctuation, and tense errors. One way to classify ill-formednes3 work is by the choices made regarding several issues. Each of the following sections will present one issue. 89 3. Application area and responding to ill-formedness Ill-formedness processing has been examined in many application areas, including data base access (Hendrix, et al., 1978), building a data base (Marsh, 1983), grammar checking (Jensen and Heidorn, 1983),. generating well-formed messages from ill-formed and incomplete ones (Granger, et al., 1983) and intelligent computer-assisted language instruction (Weischedel, at al., 1978). Proper response to an ill-formed input depends on the application environment and the user. For example, suppose a presupposition of an input is incorrect according to the computer model. In a language instruction environment, the system should correct the erroneous input, informing the student of the cause of the error; this makes sense since students are error prone in learning a language. In data base access, the system might inform the user of the false presupposition and suggest alternative queries (Kaplan</context>
</contexts>
<marker>Granger, Staros, Taylor, Yoshii, 1983</marker>
<rawString>Granger, Richard H., Chris J. Staros, Gregory B. Taylor, and Riku Yoshii, &amp;quot;Scruffy Text Understanding: Design an Implementation of the NOMAD System&amp;quot;, this volume, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G G Hendrix</author>
<author>E D Sacerdoti</author>
<author>D Sagalowicz</author>
<author>J Slocum</author>
</authors>
<title>Developing a Natural Language Interface to Complex Data&amp;quot;,</title>
<date>1978</date>
<journal>ACM Transactions on Database Systems,</journal>
<volume>3</volume>
<pages>105--147</pages>
<contexts>
<context position="3345" citStr="Hendrix, et al., 1978" startWordPosition="498" endWordPosition="501">s narrative discharge summaries. The paper by Granger et al. reports on NOMAD, a system for taking cryptic, errorful naval ship-to-shore messages ani generating well-formed versions. The paper describes the methods &apos;used for processing unknown words, fragments, missing punctuation, and tense errors. One way to classify ill-formednes3 work is by the choices made regarding several issues. Each of the following sections will present one issue. 89 3. Application area and responding to ill-formedness Ill-formedness processing has been examined in many application areas, including data base access (Hendrix, et al., 1978), building a data base (Marsh, 1983), grammar checking (Jensen and Heidorn, 1983),. generating well-formed messages from ill-formed and incomplete ones (Granger, et al., 1983) and intelligent computer-assisted language instruction (Weischedel, at al., 1978). Proper response to an ill-formed input depends on the application environment and the user. For example, suppose a presupposition of an input is incorrect according to the computer model. In a language instruction environment, the system should correct the erroneous input, informing the student of the cause of the error; this makes sense s</context>
</contexts>
<marker>Hendrix, Sacerdoti, Sagalowicz, Slocum, 1978</marker>
<rawString>Hendrix, G. G., E. D. Sacerdoti, D. Sagalowicz and J. Slocum, &amp;quot;Developing a Natural Language Interface to Complex Data&amp;quot;, ACM Transactions on Database Systems, 3, 2, (1978), 105-147.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karen Jensen</author>
<author>George E Heinorn</author>
</authors>
<title>The &apos;Fitted&apos; Parse: 100% Parsing Capability in a Syntactic Grammar of English&amp;quot;, this volume,</title>
<date>1983</date>
<marker>Jensen, Heinorn, 1983</marker>
<rawString>Jensen, Karen and George E. Heinorn, &amp;quot;The &apos;Fitted&apos; Parse: 100% Parsing Capability in a Syntactic Grammar of English&amp;quot;, this volume, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S J Kaplan</author>
</authors>
<title>Indirect Responses to Loaded Questions,&amp;quot; Theoretical Issues</title>
<date>1978</date>
<booktitle>in Natural Language Processing-2,</booktitle>
<institution>University of Illinois at Urbana-Champaign,</institution>
<contexts>
<context position="4127" citStr="Kaplan, 1978" startWordPosition="619" endWordPosition="620"> 1983) and intelligent computer-assisted language instruction (Weischedel, at al., 1978). Proper response to an ill-formed input depends on the application environment and the user. For example, suppose a presupposition of an input is incorrect according to the computer model. In a language instruction environment, the system should correct the erroneous input, informing the student of the cause of the error; this makes sense since students are error prone in learning a language. In data base access, the system might inform the user of the false presupposition and suggest alternative queries (Kaplan, 1978), since the user does not usually benefit from the empty set as a response. On the other hand, in the application Granger is investigating, the system should check an assumption it has made regarding the incomplete text and try an alternative, since the inconsistency may stem from an assumption the system made in completing fragmentary input. 4. The role of constraints Perhaps ill-formedness should be handled by simply not encoding some constraints in the normative system. Waltz (1978) and Schenk, at al. (1980) have taken this approach for a large class of syntactic constraints. In certain app</context>
</contexts>
<marker>Kaplan, 1978</marker>
<rawString>Kaplan, S. J., &amp;quot;Indirect Responses to Loaded Questions,&amp;quot; Theoretical Issues in Natural Language Processing-2, University of Illinois at Urbana-Champaign, July, 1978.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S C Kwasny</author>
<author>N K Sondheimer</author>
</authors>
<title>Relaxation Techniques for Parsing IllFormed Input&amp;quot;,</title>
<journal>American Journal of Computational LiFiTrigiTEs,</journal>
<pages>77--71981</pages>
<marker>Kwasny, Sondheimer, </marker>
<rawString>Kwasny, S. C., and N. K. Sondheimer, &amp;quot;Relaxation Techniques for Parsing IllFormed Input&amp;quot;, American Journal of Computational LiFiTrigiTEs, -77-71981T7 99-108.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Elaine Marsh</author>
</authors>
<title>Utilizing Domain-Specific Information for Processing Compact Text&amp;quot;, this volume,</title>
<date>1983</date>
<contexts>
<context position="3381" citStr="Marsh, 1983" startWordPosition="506" endWordPosition="507">Granger et al. reports on NOMAD, a system for taking cryptic, errorful naval ship-to-shore messages ani generating well-formed versions. The paper describes the methods &apos;used for processing unknown words, fragments, missing punctuation, and tense errors. One way to classify ill-formednes3 work is by the choices made regarding several issues. Each of the following sections will present one issue. 89 3. Application area and responding to ill-formedness Ill-formedness processing has been examined in many application areas, including data base access (Hendrix, et al., 1978), building a data base (Marsh, 1983), grammar checking (Jensen and Heidorn, 1983),. generating well-formed messages from ill-formed and incomplete ones (Granger, et al., 1983) and intelligent computer-assisted language instruction (Weischedel, at al., 1978). Proper response to an ill-formed input depends on the application environment and the user. For example, suppose a presupposition of an input is incorrect according to the computer model. In a language instruction environment, the system should correct the erroneous input, informing the student of the cause of the error; this makes sense since students are error prone in lea</context>
</contexts>
<marker>Marsh, 1983</marker>
<rawString>Marsh, Elaine, &amp;quot;Utilizing Domain-Specific Information for Processing Compact Text&amp;quot;, this volume, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Naomi Sager</author>
</authors>
<title>The String Parser for Scientific Literature.&amp;quot; In</title>
<date>1973</date>
<publisher>Algorithmics Press,</publisher>
<location>New York:</location>
<contexts>
<context position="6628" citStr="Sager, 1973" startWordPosition="1010" endWordPosition="1011">ases, the definition of &amp;quot;ill-formedness&amp;quot; in terms of a normative system, as well as the distinction between absolute and relative ill-formedness, sheds light on the issue. In Marsh&apos;s system, syntactic forms for ellipses are explicitly coded in the normative system. Jensen and Heidorn do not include rules for fragments in the grammar, but view it as relative ill-formedness to be processed by a recovery strategy. Granger, at al. also view ellipsis as relatively informed. Conjunction formation is another interesting case. Though use of conjunction is clearly grammatical, a number of individuals (Sager, 1973; Woods, 1973; Kwasny and Sondheimer, 1981) have argued that it should not be included in the normative grammar, but rather should be processed via a recovery strategy. Therefore, they have argued for treating it as relatively ill-formed. I suspect that categorizing almost any particular constraint as normative could be the basis for argument. The criteria for deciding whether a constraint should be included in the normative system include at least the following: a) whether a native speaker would edit inputs that violate it, b) whether violating the constraint can yield useful inferences, c) w</context>
</contexts>
<marker>Sager, 1973</marker>
<rawString>Sager, Naomi, &amp;quot;The String Parser for Scientific Literature.&amp;quot; In R. Rustin, Ed., Natural Language Processing. New York: Algorithmics Press, 1973.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger C Schank</author>
<author>Michael Lebowitz</author>
<author>Lawrence Birnbaum</author>
</authors>
<title>An Integrated Understander&amp;quot;,</title>
<date>1980</date>
<journal>American Journal of Computational Li341-11-SET.Es,</journal>
<volume>6</volume>
<pages>13--30</pages>
<marker>Schank, Lebowitz, Birnbaum, 1980</marker>
<rawString>Schank, Roger C., Michael Lebowitz, and Lawrence Birnbaum, &amp;quot;An Integrated Understander&amp;quot;, American Journal of Computational Li341-11-SET.Es, 6, 1, (1980T7 13-30.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N K Sondheimer</author>
<author>R M Weischedel</author>
</authors>
<title>A Rule-Based Approach to Ill-Formed Input,&amp;quot;</title>
<date>1980</date>
<booktitle>Proceedings of the Eighth International Conference on Computational Linguistics,</booktitle>
<pages>46--4</pages>
<location>Tokyo,</location>
<contexts>
<context position="8894" citStr="Sondheimer and Weischedel (1980)" startWordPosition="1374" endWordPosition="1377">edge that could be helpful have barely been tapped. 7. Control The control mechanisms of the normative system (e.g. bottom-up versus topdown and the point at which semantic constraints are used) are not of concern to us here. Rather, what is of interest is a) the point at which illformedness strategies are employed, b) the mechanism for identifying what the problem is, c) the nature of response, if any, once a specific hypothesis of the problem is made, and the search strategy for selecting an intended interpretation. Many alternatives exist for these decisions; an overview of them appears in Sondheimer and Weischedel (1980). 8. Future directions As evident from this session, the processing of ill-formed input has become a very active research topic that is of critical importance in a wide variety of applications. Yet, there is much to be done. There are many kinds of illformedness for which better heuristics are needed. Another need is empirical studies. Controlling the processing of ill-formed input is a substantial problem no matter what approach one takes, since processing ill-formedness requires relaxing the very constraints that trim the search space for possible interpretations. Because control is such an </context>
</contexts>
<marker>Sondheimer, Weischedel, 1980</marker>
<rawString>Sondheimer, N. K. and R. M. Weischedel, &amp;quot;A Rule-Based Approach to Ill-Formed Input,&amp;quot; Proceedings of the Eighth International Conference on Computational Linguistics, Tokyo, October 1980, 46=T4.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B H Thompson</author>
</authors>
<title>Linguistic Analysis of Natural Language Communication with Computers&amp;quot;,</title>
<date>1980</date>
<booktitle>Proceedings of the Eighth International Conference on Computational Linguistics,</booktitle>
<pages>190--201</pages>
<location>Tokyo,</location>
<contexts>
<context position="1452" citStr="Thompson (1980)" startWordPosition="204" endWordPosition="205">tuations, tense and number errors, word order problems, run-on sentences, sentence fragments, extraneous forms, and meaningless sentences. Examples of relatively ill-formed input include unknown words and requests that are beyond the limits of either the computer system or the natural language interface. In natural language access (e.g. English access) to information systems, the magnitude of the problem of absolute ill-formedness can be seen in several case studies. If one includes telegraphic and elliptical constructions in the class of absolute ill-formedness, then case studies reported in Thompson (1980) and Eastman and McLean (1981) indicate that &apos;This material is based upon work partially supported by the National Science Foundation under Grant No. IST-8009673. as much as 25% of queries to questionanswering systems are absolutely informed. On the other hand, no matter how large the dictionary, grammar, and underlying system, there will always be unknown words and phrases (e.g. proper names) and impossible requests (due to user misconceptions of the capabilities of the underlying system). 2. Brief overview of the papers of this session This session consists of papers by Jensen and Heidorn; M</context>
</contexts>
<marker>Thompson, 1980</marker>
<rawString>Thompson, B. H., &amp;quot;Linguistic Analysis of Natural Language Communication with Computers&amp;quot;, Proceedings of the Eighth International Conference on Computational Linguistics, Tokyo, October, 1980, 190-201.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D L Waltz</author>
</authors>
<title>An English Language Question Answering System for a Large Relational Database&amp;quot;,</title>
<date>1978</date>
<journal>Communications of the ACM,</journal>
<volume>21</volume>
<pages>526--539</pages>
<contexts>
<context position="4617" citStr="Waltz (1978)" startWordPosition="699" endWordPosition="700">a base access, the system might inform the user of the false presupposition and suggest alternative queries (Kaplan, 1978), since the user does not usually benefit from the empty set as a response. On the other hand, in the application Granger is investigating, the system should check an assumption it has made regarding the incomplete text and try an alternative, since the inconsistency may stem from an assumption the system made in completing fragmentary input. 4. The role of constraints Perhaps ill-formedness should be handled by simply not encoding some constraints in the normative system. Waltz (1978) and Schenk, at al. (1980) have taken this approach for a large class of syntactic constraints. In certain applications, one can get by with such an approach due to the great amount of redundancy in natural language. However, it clearly will not work in general, since constraints generally carry meaning and trim the search space. All three papers of this session capitalize on constraints (or expectations), and propose mechanisms for processing ill-formedness. Given a commitment to employ constraints rather than ignoring them, there are still the following design issues: a) whether two separate</context>
</contexts>
<marker>Waltz, 1978</marker>
<rawString>Waltz, D. L., &amp;quot;An English Language Question Answering System for a Large Relational Database&amp;quot;, Communications of the ACM, 21, 7, (1978), 526-539.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Weischedel</author>
<author>N K Sondheimer</author>
</authors>
<title>A Framework for Processing Ill-Formed Input&amp;quot;,</title>
<date>1981</date>
<institution>Dept. of Computer &amp; Information Sciences, University of Delaware,</institution>
<location>Newark, DE,</location>
<contexts>
<context position="5552" citStr="Weischedel and Sondheimer (1981)" startWordPosition="842" endWordPosition="845">g and trim the search space. All three papers of this session capitalize on constraints (or expectations), and propose mechanisms for processing ill-formedness. Given a commitment to employ constraints rather than ignoring them, there are still the following design issues: a) whether two separate systems, perhaps running in parallel, should be built for well-formedness and for ill -formedness b) whether ill-formed processing can be stated as explicit modifications to well-formedness processing, and c) whether a metric can be used instead of employing any special procedures for ill-formedness. Weischedel and Sondheimer (1981) argue for an approach that explicitly relates ill-formedness processing to the rules of the normative system via meta-rules (rules that operate on rules). A more complete discussion of the alternatives appears there. 5. Categorization of ellipsis, conjunction, and other gray cases It is debatable whether certain phenomena should be classified as wellformed or not. Ellipsis (fragmentary input which in context conveys a complete thought) is an example. In such cases, the definition of &amp;quot;ill-formedness&amp;quot; in terms of a normative system, as well as the distinction between absolute and relative ill-f</context>
</contexts>
<marker>Weischedel, Sondheimer, 1981</marker>
<rawString>Weischedel, R.M. and N. K. Sondheimer, &amp;quot;A Framework for Processing Ill-Formed Input&amp;quot;, Dept. of Computer &amp; Information Sciences, University of Delaware, Newark, DE, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Weischedel</author>
<author>W M Voge</author>
<author>M James</author>
</authors>
<title>An Artificial Intelligence Approach to Language Instruction&amp;quot;,</title>
<date>1978</date>
<journal>Artificial Intelligence,</journal>
<volume>10</volume>
<pages>225--240</pages>
<marker>Weischedel, Voge, James, 1978</marker>
<rawString>Weischedel, R. M., W. M. Voge, and M. James, &amp;quot;An Artificial Intelligence Approach to Language Instruction&amp;quot;, Artificial Intelligence, 10, (1978), 225-240.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
</authors>
<title>An Experimental Parsing System for Transition Network Grammars.&amp;quot; In</title>
<date>1973</date>
<publisher>Algorithmics Press,</publisher>
<location>New York:</location>
<contexts>
<context position="6641" citStr="Woods, 1973" startWordPosition="1012" endWordPosition="1013">inition of &amp;quot;ill-formedness&amp;quot; in terms of a normative system, as well as the distinction between absolute and relative ill-formedness, sheds light on the issue. In Marsh&apos;s system, syntactic forms for ellipses are explicitly coded in the normative system. Jensen and Heidorn do not include rules for fragments in the grammar, but view it as relative ill-formedness to be processed by a recovery strategy. Granger, at al. also view ellipsis as relatively informed. Conjunction formation is another interesting case. Though use of conjunction is clearly grammatical, a number of individuals (Sager, 1973; Woods, 1973; Kwasny and Sondheimer, 1981) have argued that it should not be included in the normative grammar, but rather should be processed via a recovery strategy. Therefore, they have argued for treating it as relatively ill-formed. I suspect that categorizing almost any particular constraint as normative could be the basis for argument. The criteria for deciding whether a constraint should be included in the normative system include at least the following: a) whether a native speaker would edit inputs that violate it, b) whether violating the constraint can yield useful inferences, c) whether exampl</context>
</contexts>
<marker>Woods, 1973</marker>
<rawString>Woods, W. A., &amp;quot;An Experimental Parsing System for Transition Network Grammars.&amp;quot; In R. Austin, Ed., Natural Language Processing. New York: Algorithmics Press, 1973.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>