<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003494">
<title confidence="0.916521">
XARA: An XML- and rule-based semantic role labeler
</title>
<author confidence="0.984049">
Gerwert Stevens
</author>
<affiliation confidence="0.99108">
University of Utrecht, the Netherlands
</affiliation>
<email confidence="0.997594">
gerwert.stevens@let.uu.nl
</email>
<sectionHeader confidence="0.995615" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999704294117647">
XARA is a rule-based PropBank labeler for
Alpino XML files, written in Java. I used
XARA in my research on semantic role la-
beling in a Dutch corpus to bootstrap a
dependency treebank with semantic roles.
Rules in XARA are based on XPath expres-
sions, which makes it a versatile tool that is
applicable to other treebanks as well.
In addition to automatic role annotation,
XARA is able to extract training instances
(sets of features) from an XML based tree-
bank. Such an instance base can be used to
train machine learning algorithms for auto-
matic semantic role labeling (SRL). In my
semantic role labeling research, I used the
Tilburg Memory Learner (TiMBL) for this
purpose.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999705047619048">
Ever since the pioneering article of Gildea and Ju-
rafsky (2002), there has been an increasing interest
in automatic semantic role labeling (SRL). In gen-
eral, classification algorithms (a supervised machine
learning strategy) are used for this purpose. Manual
annotated corpora provide a gold standard for such
classifiers.
Starting manual annotation from scratch is very
time consuming and therefore expensive. A possible
solution is to start from a (partially) automatically
annotated corpus. In fact, this reduces the manual
annotation task to a manual correction task. Initial
automatic annotation of a corpus is often referred to
as bootstrapping or unsupervised SRL.
In recent years relatively little effort has gone into
the development of unsupervised SRL systems. This
is partly because semantically annotated English
corpora, such as PropBank (Kingsbury et al., 2002)
and FrameNet (Johnson et al., 2002), currently con-
tain enough data to develop and test SRL systems
based on machine learning. Therefore, bootstrap-
ping large collections of English texts has no prior-
ity anymore. For languages other than English how-
ever, annotated corpora are rare and still very much
needed. Therefore, the development of bootstrap-
ping techniques is very relevant.
One of the languages for which the creation of
semantically annotated corpora has lagged dramat-
ically behind, is Dutch. Within the project Dutch
Language Corpus Initiative (D-Coi)1, the first steps
have been taken towards the development of a large
semantically annotated Dutch corpus. The D-Coi
project is a preparatory project which will deliver
a blueprint and the tools needed for the construc-
tion of a 500-million-word reference corpus of con-
temporary written Dutch. The corpus will be an-
notated with several layers of annotation, amongst
others with semantic roles.
In the context of this project, I developed XARA:
(XML-based Automatic Role-labeler for Alpino-
trees). In my research, XARA was used for two pur-
poses:
</bodyText>
<listItem confidence="0.970895">
• Bootstrap a dependency treebank with seman-
tic roles
</listItem>
<footnote confidence="0.984824">
1http://lands.let.ru.nl/projects/d-coi/
</footnote>
<page confidence="0.99436">
113
</page>
<bodyText confidence="0.8851065">
Proceedings of the Linguistic Annotation Workshop, pages 113–116,
Prague, June 2007. c�2007 Association for Computational Linguistics
</bodyText>
<listItem confidence="0.9711645">
• Extract an instance base for the training of a
semantic role classifier.
</listItem>
<sectionHeader confidence="0.536824" genericHeader="method">
2 Rule-based role labeling
</sectionHeader>
<subsectionHeader confidence="0.992071">
2.1 The Alpino XML-format
</subsectionHeader>
<bodyText confidence="0.999800210526316">
The input for the semantic role tagger is a set of
sentences annotated by the Dutch dependency parser
Alpino (Bouma et al., 2000) 2. Alpino is based on
a hand-crafted Head-driven Phrase Structure Gram-
mar (HPSG).
The annotation scheme of Alpino dependency
trees is based on the Spoken Dutch Corpus (CGN)
(Oostdijk, 2002) annotation format. In Alpino trees
the same labels are used as in their CGN counter-
parts and nodes are structured in the same way. The
XML-format used to store dependency trees how-
ever differs. In the CGN, sentences are stored in
the TIGER-XML format (Lezius, 2002) 3, Alpino
uses its own XML format to store parsed sentences
(Bouma and Kloosterman, 2002). In our treebank,
every sentence was encoded in a separate XML file.
An example of an Alpino dependency tree annotated
with semantic roles is shown in figure 1. Below, the
corresponding XML output is shown:
</bodyText>
<figure confidence="0.968504133333333">
&lt;node rel=&amp;quot;top&amp;quot;&gt;
&lt;node cat=&amp;quot;top&amp;quot; rel=&amp;quot;top&amp;quot;&gt;
&lt;node cat=&amp;quot;smain&amp;quot; rel=&amp;quot;--&amp;quot;&gt;
&lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;su&amp;quot;&gt;
&lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt;
&lt;node pos=&amp;quot;noun&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;jongen&amp;quot;/&gt;
&lt;/node&gt;
&lt;node pos=&amp;quot;verb&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;aait&amp;quot;/&gt;
&lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;obj1&amp;quot;&gt;
&lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt;
&lt;node pos=&amp;quot;adj&amp;quot; rel=&amp;quot;mod&amp;quot; word=&amp;quot;zwarte&amp;quot;/&gt;
&lt;node pos=&amp;quot;noun&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;hond&amp;quot;/&gt;
&lt;/node&gt;
&lt;/node&gt;
&lt;/node&gt;
</figure>
<bodyText confidence="0.998871285714286">
The structure of Alpino XML documents directly
corresponds to the structure of the dependency tree:
dependency nodes are represented by NODE ele-
ments, attributes of the node elements are the c-
label, d-label, pos-tag, etc. The format is designed
to support a range of linguistic queries on the depen-
dency trees in XPath directly (Bouma and Klooster-
</bodyText>
<footnote confidence="0.8798582">
2A demonstration of the Alpino parser can be found
on the following website: http://ziu.let.rug.nl/
vannoord_bin/alpino
3see also http://www.ims.uni-stuttgart.de/
projekte/TIGER/TIGERSearch/index.shtml
</footnote>
<bodyText confidence="0.998870111111111">
man, 2002). XPath (Clark and DeRose, 1999) is a
powerful query language for the XML format and it
is the cornerstone of XARA’s rule-based approach.
I would like to stress that although our SRL re-
search focused on Alpino structures, XARA can be
used with any XML-based treebank, thanks to the
fact that XPath and XML are widely accepted stan-
dards. This property satisfies one of the major de-
sign criteria of the system: reusability.
</bodyText>
<subsectionHeader confidence="0.994915">
2.2 The annotation process
</subsectionHeader>
<bodyText confidence="0.983785222222222">
The input for the tagger is set of directories con-
taining Alpino XML files, called a treebank. Each
sentence is annotated separately by applying a set
of rules. Rules are applied to local dependency do-
mains (subtrees of the complete dependency tree).
The local dependency domain to which a rule is ap-
plied, is called the rule’s context. A context is sim-
ply defined by an XPath expression which selects a
group of nodes.
Suppose for example that we want to apply a cer-
tain rule to nodes that are part of a passive partici-
ple, i.e the context of our rule are passive participles.
Passive participles in Alpino trees are local depen-
dency domains with a root node with c-label PPART.
An example is shown in figure 2.
The dark colored nodes are the ones we are inter-
ested in. To select these nodes, the following XPath
expression can be used:
</bodyText>
<figureCaption confidence="0.9029875">
Figure 1: Example CGN dependency graph (’The
boy pets the black dog’)
</figureCaption>
<table confidence="0.5402677">
SMAIN
HD OBJ1
verb
aait MOD HD
DET
det adj noun
de zwarte hond
np
dejongen
SU
</table>
<page confidence="0.994525">
114
</page>
<bodyText confidence="0.9164382">
Formally, a rule in XARA can be defined as a
(path, label) pair. Suppose for example that we
want to select direct object nodes in the previously
defined context and assign them the label ARG1.
This can be formulated as:
</bodyText>
<figureCaption confidence="0.9854355">
Figure 2: Example PropBank annotation on a De-
pendency tree (’She is never seen’)
</figureCaption>
<bodyText confidence="0.737946111111111">
SMAIN
(./node[@rel=’obj1’],1)
The first element of this pair is an XPath expres-
sion that selects direct object daughters, the second
element is a number that specifies which label we
want to assign to these target nodes. In this case the
label is a positive integer 1, which means the target
node will receive the label ARG1. Upon application
of a rule, an attribute (”pb”) is added to the target
</bodyText>
<table confidence="0.9490743">
node element in the XML file. This attribute con-
tains the PropBank label.
SU HD VC
L:pron verb ppart
Arg,
wordt
OBJ1 MOD HD
ze �1 adv verb
nooit REL
gezien 3 Feature extraction
</table>
<equation confidence="0.356061">
//node[@cat=’ppart’]
[preceding-sibling::
node[@rel=’hd’ and (@root=’word’)]]
</equation>
<bodyText confidence="0.9987262">
which says that we are looking for nodes with the c-
label PPART and the auxiliary verb indicating passive
tense (word) as preceding sibling.
Once a context is defined, rules can be applied
to nodes in this context. Rules consist of an XPath
expression which specifies a relative path from the
context’s root node to the target node and an output
label. Upon application of the rule, the target node
will be labeled with output label.
The output label can have three kinds of values:
</bodyText>
<listItem confidence="0.955696166666667">
• A positive number n, to label a node with
ARGn.
• The value -1, to label the node with the first
available numbered argument.
• A string value, to label the node with an arbi-
trary label, for example an ARGM.
</listItem>
<bodyText confidence="0.999687611111111">
Notice that because the label can be specified as
a string value, the set of possible labels is not re-
stricted. In my work, I used PropBank labels, but
other labels - such as generic thematic roles - can be
used just as well.
Besides bootstrapping an unannotated corpus, train-
ing a SRL classifier was another important part of
my automatic SRL strategy. The learning tool I
used for this purpose was TiMBL (Tilburg Memory
Based Learner) (Daelemans et al., 2004).
In order to be able to train a TiMBL classifier, a
file with training data is needed. Training data is
represented as a text file containing instances. Each
line in the text file represents a single instance. An
instance consists of a set of features separated by
commas and a target class. XARA is able to create
such an instance base from a set of XML files auto-
matically.
</bodyText>
<subsectionHeader confidence="0.998878">
3.1 The automatic feature extraction process
</subsectionHeader>
<bodyText confidence="0.999933071428571">
The target instance base consists of predi-
cate/argument pairs encoded in training instances.
Each instance contains features of a predicate and
its candidate argument. Candidate arguments are
nodes (constituents) in the dependency tree. This
pair-wise approach is analogous to earlier work by
van den Bosch et al. (2004) and Tjong Kim Sang
et al. (2005) in which instances were built from
verb/phrase pairs from which the phrase parent is an
ancestor of the verb.
Once it is clear how instances will be encoded, an
instance base can be extracted from the annotated
corpus. For example, the following instances can be
extracted from the tree in figure 2:
</bodyText>
<page confidence="0.996554">
115
</page>
<bodyText confidence="0.982386285714286">
zie,passive,mod,adv,#
zie,passive,su,pron,ARG1
These two example instances consist of 4 features
and a target class each. In this example, the predi-
cate lemma (stem) and voice, and the candidate ar-
gument c-label, d-label are used. For null values
the hash symbol (#) is specified. The first instance
represents the predicate/argument pair (zie, nooit)
(’see,never’), the second instance represents the pair
(zie, ze) (’see, she’).
The extraction of instances from the annotated
corpus can be done fully automatically by XARA
from the command line. The resulting feature base
can be directly used in training a TiMBL classifier.
</bodyText>
<sectionHeader confidence="0.999537" genericHeader="conclusions">
4 Performance
</sectionHeader>
<bodyText confidence="0.999548">
In order to evaluate the labeling of XARA, the out-
put of XARA’s semantic role tagger was compared
with the manual corrected annotation of 2,395 sen-
tences. The results are shown in table 1.
</bodyText>
<tableCaption confidence="0.999038">
Table 1: Overall performance
</tableCaption>
<table confidence="0.983674">
Precision Recall F,a_i
65,11% 45,83% 53,80
</table>
<bodyText confidence="0.998359571428571">
Since current rules in XARA cover only a sub-
set of PropBank labels, recall is notably lower than
precision. However, current overall performance of
XARA is encouraging. Our expectation is that, es-
pecially if the current rule set is improved and/or ex-
tended, XARA can be a very useful tool in current
and future SRL research.
</bodyText>
<sectionHeader confidence="0.998613" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999880780487805">
G. Bouma and G. Kloosterman. 2002. Querying depen-
dency treebanks in xml. In Proceedings of the Third
international conference on Language Resources and
Evaluation (LREC). Gran Canaria.
G. Bouma, G. van Noord, and R. Malouf. 2000. Alpino:
wide-coverage computational analysis of dutch.
J. Clark and S. DeRose. 1999. Xml path language
(xpath). W3C Recommendation 16 November 1999.
URL: http://www.w3.org/TR/xpath.
D. Daelemans, D. Zavrel, K. van der Sloot, and
A. van den Bosch. 2004. Timbl: Tilburg memory
based learner, version 5.1, reference guide. ILK Tech-
nical Report Series 04-02, Tilburg University.
D. Gildea and D. Jurafsky. 2002. Automatic labeling of
semantic roles. Comput. Linguist., 28(3):245–288.
C. R. Johnson, C. J. Fillmore, M. R. L. Petruck, C. F.
Baker, M. J. Ellsworth, J. Ruppenhofer, and E. J.
Wood. 2002. FrameNet:Theory and Practice.
P. Kingsbury, M. Palmer, and M. Marcus. 2002. Adding
semantic annotation to the penn treebank. In Proceed-
ings of the Human Language Technology Conference
(HLT’02).
W Lezius. 2002. Ein Suchwerkzeug f¨ur syntaktisch
annotierte Textkorpora. Ph.D. thesis, University of
Stuttgart.
N. Oostdijk. 2002. The design of the spoken dutch cor-
pus. In P. Peters, P. Collins, and A. Smith, editors, New
Frontiers of Corpus Research, pages 105–112. Ams-
terdam: Rodopi.
E. Tjong Kim Sang, S. Canisius, A. van den Bosch, and
T. Bogers. 2005. Applying spelling error correction
techniques for improving semantic role labeling. In
Proceedings of the Ninth Conference on Natural Lan-
guage Learning (CoNLL-2005). Ann Arbor, MI, USA.
A. van den Bosch, S. Canisius, W. Daelemans, I. Hen-
drickx, and E. Tjong Kim Sang. 2004. Memory-
based semantic role labeling: Optimizing features, al-
gorithm, and output. In H.T. Ng and E. Riloff, edi-
tors, Proceedings of the Eighth Conference on Compu-
tational Natural Language Learning (CoNLL-2004).
Boston, MA, USA.
</reference>
<page confidence="0.999026">
116
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.816739">
<title confidence="0.999077">XARA: An XMLand rule-based semantic role labeler</title>
<author confidence="0.968898">Gerwert Stevens</author>
<affiliation confidence="0.966785">University of Utrecht, the</affiliation>
<email confidence="0.931946">gerwert.stevens@let.uu.nl</email>
<abstract confidence="0.995048166666666">XARA is a rule-based PropBank labeler for Alpino XML files, written in Java. I used XARA in my research on semantic role labeling in a Dutch corpus to bootstrap a dependency treebank with semantic roles. Rules in XARA are based on XPath expressions, which makes it a versatile tool that is applicable to other treebanks as well. In addition to automatic role annotation, XARA is able to extract training instances (sets of features) from an XML based treebank. Such an instance base can be used to train machine learning algorithms for automatic semantic role labeling (SRL). In my semantic role labeling research, I used the Tilburg Memory Learner (TiMBL) for this purpose.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G Bouma</author>
<author>G Kloosterman</author>
</authors>
<title>Querying dependency treebanks in xml.</title>
<date>2002</date>
<booktitle>In Proceedings of the Third international conference on Language Resources and Evaluation (LREC). Gran Canaria.</booktitle>
<contexts>
<context position="3846" citStr="Bouma and Kloosterman, 2002" startWordPosition="597" endWordPosition="600"> of sentences annotated by the Dutch dependency parser Alpino (Bouma et al., 2000) 2. Alpino is based on a hand-crafted Head-driven Phrase Structure Grammar (HPSG). The annotation scheme of Alpino dependency trees is based on the Spoken Dutch Corpus (CGN) (Oostdijk, 2002) annotation format. In Alpino trees the same labels are used as in their CGN counterparts and nodes are structured in the same way. The XML-format used to store dependency trees however differs. In the CGN, sentences are stored in the TIGER-XML format (Lezius, 2002) 3, Alpino uses its own XML format to store parsed sentences (Bouma and Kloosterman, 2002). In our treebank, every sentence was encoded in a separate XML file. An example of an Alpino dependency tree annotated with semantic roles is shown in figure 1. Below, the corresponding XML output is shown: &lt;node rel=&amp;quot;top&amp;quot;&gt; &lt;node cat=&amp;quot;top&amp;quot; rel=&amp;quot;top&amp;quot;&gt; &lt;node cat=&amp;quot;smain&amp;quot; rel=&amp;quot;--&amp;quot;&gt; &lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;su&amp;quot;&gt; &lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt; &lt;node pos=&amp;quot;noun&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;jongen&amp;quot;/&gt; &lt;/node&gt; &lt;node pos=&amp;quot;verb&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;aait&amp;quot;/&gt; &lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;obj1&amp;quot;&gt; &lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt; &lt;node pos=&amp;quot;adj&amp;quot; rel=&amp;quot;mod&amp;quot; word=&amp;quot;zwarte&amp;quot;/&gt; &lt;node pos=&amp;quot;noun&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;hond&amp;quot;/&gt; &lt;/node&gt; &lt;/node&gt; &lt;/no</context>
</contexts>
<marker>Bouma, Kloosterman, 2002</marker>
<rawString>G. Bouma and G. Kloosterman. 2002. Querying dependency treebanks in xml. In Proceedings of the Third international conference on Language Resources and Evaluation (LREC). Gran Canaria.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Bouma</author>
<author>G van Noord</author>
<author>R Malouf</author>
</authors>
<title>Alpino: wide-coverage computational analysis of dutch.</title>
<date>2000</date>
<marker>Bouma, van Noord, Malouf, 2000</marker>
<rawString>G. Bouma, G. van Noord, and R. Malouf. 2000. Alpino: wide-coverage computational analysis of dutch.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clark</author>
<author>S DeRose</author>
</authors>
<title>Xml path language (xpath).</title>
<date>1999</date>
<journal>W3C Recommendation</journal>
<volume>16</volume>
<note>URL: http://www.w3.org/TR/xpath.</note>
<contexts>
<context position="5041" citStr="Clark and DeRose, 1999" startWordPosition="757" endWordPosition="760">hond&amp;quot;/&gt; &lt;/node&gt; &lt;/node&gt; &lt;/node&gt; The structure of Alpino XML documents directly corresponds to the structure of the dependency tree: dependency nodes are represented by NODE elements, attributes of the node elements are the clabel, d-label, pos-tag, etc. The format is designed to support a range of linguistic queries on the dependency trees in XPath directly (Bouma and Klooster2A demonstration of the Alpino parser can be found on the following website: http://ziu.let.rug.nl/ vannoord_bin/alpino 3see also http://www.ims.uni-stuttgart.de/ projekte/TIGER/TIGERSearch/index.shtml man, 2002). XPath (Clark and DeRose, 1999) is a powerful query language for the XML format and it is the cornerstone of XARA’s rule-based approach. I would like to stress that although our SRL research focused on Alpino structures, XARA can be used with any XML-based treebank, thanks to the fact that XPath and XML are widely accepted standards. This property satisfies one of the major design criteria of the system: reusability. 2.2 The annotation process The input for the tagger is set of directories containing Alpino XML files, called a treebank. Each sentence is annotated separately by applying a set of rules. Rules are applied to l</context>
</contexts>
<marker>Clark, DeRose, 1999</marker>
<rawString>J. Clark and S. DeRose. 1999. Xml path language (xpath). W3C Recommendation 16 November 1999. URL: http://www.w3.org/TR/xpath.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Daelemans</author>
<author>D Zavrel</author>
<author>K van der Sloot</author>
<author>A van den Bosch</author>
</authors>
<title>Timbl: Tilburg memory based learner, version 5.1, reference guide.</title>
<date>2004</date>
<tech>ILK Technical Report Series 04-02,</tech>
<institution>Tilburg University.</institution>
<marker>Daelemans, Zavrel, van der Sloot, van den Bosch, 2004</marker>
<rawString>D. Daelemans, D. Zavrel, K. van der Sloot, and A. van den Bosch. 2004. Timbl: Tilburg memory based learner, version 5.1, reference guide. ILK Technical Report Series 04-02, Tilburg University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gildea</author>
<author>D Jurafsky</author>
</authors>
<title>Automatic labeling of semantic roles.</title>
<date>2002</date>
<journal>Comput. Linguist.,</journal>
<volume>28</volume>
<issue>3</issue>
<contexts>
<context position="894" citStr="Gildea and Jurafsky (2002)" startWordPosition="141" endWordPosition="145">ng in a Dutch corpus to bootstrap a dependency treebank with semantic roles. Rules in XARA are based on XPath expressions, which makes it a versatile tool that is applicable to other treebanks as well. In addition to automatic role annotation, XARA is able to extract training instances (sets of features) from an XML based treebank. Such an instance base can be used to train machine learning algorithms for automatic semantic role labeling (SRL). In my semantic role labeling research, I used the Tilburg Memory Learner (TiMBL) for this purpose. 1 Introduction Ever since the pioneering article of Gildea and Jurafsky (2002), there has been an increasing interest in automatic semantic role labeling (SRL). In general, classification algorithms (a supervised machine learning strategy) are used for this purpose. Manual annotated corpora provide a gold standard for such classifiers. Starting manual annotation from scratch is very time consuming and therefore expensive. A possible solution is to start from a (partially) automatically annotated corpus. In fact, this reduces the manual annotation task to a manual correction task. Initial automatic annotation of a corpus is often referred to as bootstrapping or unsupervi</context>
</contexts>
<marker>Gildea, Jurafsky, 2002</marker>
<rawString>D. Gildea and D. Jurafsky. 2002. Automatic labeling of semantic roles. Comput. Linguist., 28(3):245–288.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C R Johnson</author>
<author>C J Fillmore</author>
<author>M R L Petruck</author>
<author>C F Baker</author>
<author>M J Ellsworth</author>
<author>J Ruppenhofer</author>
<author>E J Wood</author>
</authors>
<title>FrameNet:Theory and Practice.</title>
<date>2002</date>
<contexts>
<context position="1743" citStr="Johnson et al., 2002" startWordPosition="267" endWordPosition="270"> standard for such classifiers. Starting manual annotation from scratch is very time consuming and therefore expensive. A possible solution is to start from a (partially) automatically annotated corpus. In fact, this reduces the manual annotation task to a manual correction task. Initial automatic annotation of a corpus is often referred to as bootstrapping or unsupervised SRL. In recent years relatively little effort has gone into the development of unsupervised SRL systems. This is partly because semantically annotated English corpora, such as PropBank (Kingsbury et al., 2002) and FrameNet (Johnson et al., 2002), currently contain enough data to develop and test SRL systems based on machine learning. Therefore, bootstrapping large collections of English texts has no priority anymore. For languages other than English however, annotated corpora are rare and still very much needed. Therefore, the development of bootstrapping techniques is very relevant. One of the languages for which the creation of semantically annotated corpora has lagged dramatically behind, is Dutch. Within the project Dutch Language Corpus Initiative (D-Coi)1, the first steps have been taken towards the development of a large seman</context>
</contexts>
<marker>Johnson, Fillmore, Petruck, Baker, Ellsworth, Ruppenhofer, Wood, 2002</marker>
<rawString>C. R. Johnson, C. J. Fillmore, M. R. L. Petruck, C. F. Baker, M. J. Ellsworth, J. Ruppenhofer, and E. J. Wood. 2002. FrameNet:Theory and Practice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Kingsbury</author>
<author>M Palmer</author>
<author>M Marcus</author>
</authors>
<title>Adding semantic annotation to the penn treebank.</title>
<date>2002</date>
<booktitle>In Proceedings of the Human Language Technology Conference (HLT’02).</booktitle>
<contexts>
<context position="1707" citStr="Kingsbury et al., 2002" startWordPosition="261" endWordPosition="264">anual annotated corpora provide a gold standard for such classifiers. Starting manual annotation from scratch is very time consuming and therefore expensive. A possible solution is to start from a (partially) automatically annotated corpus. In fact, this reduces the manual annotation task to a manual correction task. Initial automatic annotation of a corpus is often referred to as bootstrapping or unsupervised SRL. In recent years relatively little effort has gone into the development of unsupervised SRL systems. This is partly because semantically annotated English corpora, such as PropBank (Kingsbury et al., 2002) and FrameNet (Johnson et al., 2002), currently contain enough data to develop and test SRL systems based on machine learning. Therefore, bootstrapping large collections of English texts has no priority anymore. For languages other than English however, annotated corpora are rare and still very much needed. Therefore, the development of bootstrapping techniques is very relevant. One of the languages for which the creation of semantically annotated corpora has lagged dramatically behind, is Dutch. Within the project Dutch Language Corpus Initiative (D-Coi)1, the first steps have been taken towa</context>
</contexts>
<marker>Kingsbury, Palmer, Marcus, 2002</marker>
<rawString>P. Kingsbury, M. Palmer, and M. Marcus. 2002. Adding semantic annotation to the penn treebank. In Proceedings of the Human Language Technology Conference (HLT’02).</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Lezius</author>
</authors>
<title>Ein Suchwerkzeug f¨ur syntaktisch annotierte Textkorpora.</title>
<date>2002</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Stuttgart.</institution>
<contexts>
<context position="3756" citStr="Lezius, 2002" startWordPosition="584" endWordPosition="585">g 2.1 The Alpino XML-format The input for the semantic role tagger is a set of sentences annotated by the Dutch dependency parser Alpino (Bouma et al., 2000) 2. Alpino is based on a hand-crafted Head-driven Phrase Structure Grammar (HPSG). The annotation scheme of Alpino dependency trees is based on the Spoken Dutch Corpus (CGN) (Oostdijk, 2002) annotation format. In Alpino trees the same labels are used as in their CGN counterparts and nodes are structured in the same way. The XML-format used to store dependency trees however differs. In the CGN, sentences are stored in the TIGER-XML format (Lezius, 2002) 3, Alpino uses its own XML format to store parsed sentences (Bouma and Kloosterman, 2002). In our treebank, every sentence was encoded in a separate XML file. An example of an Alpino dependency tree annotated with semantic roles is shown in figure 1. Below, the corresponding XML output is shown: &lt;node rel=&amp;quot;top&amp;quot;&gt; &lt;node cat=&amp;quot;top&amp;quot; rel=&amp;quot;top&amp;quot;&gt; &lt;node cat=&amp;quot;smain&amp;quot; rel=&amp;quot;--&amp;quot;&gt; &lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;su&amp;quot;&gt; &lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt; &lt;node pos=&amp;quot;noun&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;jongen&amp;quot;/&gt; &lt;/node&gt; &lt;node pos=&amp;quot;verb&amp;quot; rel=&amp;quot;hd&amp;quot; word=&amp;quot;aait&amp;quot;/&gt; &lt;node cat=&amp;quot;np&amp;quot; rel=&amp;quot;obj1&amp;quot;&gt; &lt;node pos=&amp;quot;det&amp;quot; rel=&amp;quot;det&amp;quot; word=&amp;quot;de&amp;quot;/&gt; &lt;node pos=&amp;quot;a</context>
</contexts>
<marker>Lezius, 2002</marker>
<rawString>W Lezius. 2002. Ein Suchwerkzeug f¨ur syntaktisch annotierte Textkorpora. Ph.D. thesis, University of Stuttgart.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Oostdijk</author>
</authors>
<title>The design of the spoken dutch corpus.</title>
<date>2002</date>
<booktitle>New Frontiers of Corpus Research,</booktitle>
<pages>105--112</pages>
<editor>In P. Peters, P. Collins, and A. Smith, editors,</editor>
<location>Amsterdam: Rodopi.</location>
<contexts>
<context position="3490" citStr="Oostdijk, 2002" startWordPosition="538" endWordPosition="539">nds.let.ru.nl/projects/d-coi/ 113 Proceedings of the Linguistic Annotation Workshop, pages 113–116, Prague, June 2007. c�2007 Association for Computational Linguistics • Extract an instance base for the training of a semantic role classifier. 2 Rule-based role labeling 2.1 The Alpino XML-format The input for the semantic role tagger is a set of sentences annotated by the Dutch dependency parser Alpino (Bouma et al., 2000) 2. Alpino is based on a hand-crafted Head-driven Phrase Structure Grammar (HPSG). The annotation scheme of Alpino dependency trees is based on the Spoken Dutch Corpus (CGN) (Oostdijk, 2002) annotation format. In Alpino trees the same labels are used as in their CGN counterparts and nodes are structured in the same way. The XML-format used to store dependency trees however differs. In the CGN, sentences are stored in the TIGER-XML format (Lezius, 2002) 3, Alpino uses its own XML format to store parsed sentences (Bouma and Kloosterman, 2002). In our treebank, every sentence was encoded in a separate XML file. An example of an Alpino dependency tree annotated with semantic roles is shown in figure 1. Below, the corresponding XML output is shown: &lt;node rel=&amp;quot;top&amp;quot;&gt; &lt;node cat=&amp;quot;top&amp;quot; rel</context>
</contexts>
<marker>Oostdijk, 2002</marker>
<rawString>N. Oostdijk. 2002. The design of the spoken dutch corpus. In P. Peters, P. Collins, and A. Smith, editors, New Frontiers of Corpus Research, pages 105–112. Amsterdam: Rodopi.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Tjong Kim Sang</author>
<author>S Canisius</author>
<author>A van den Bosch</author>
<author>T Bogers</author>
</authors>
<title>Applying spelling error correction techniques for improving semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of the Ninth Conference on Natural Language Learning (CoNLL-2005).</booktitle>
<location>Ann Arbor, MI, USA.</location>
<marker>Sang, Canisius, van den Bosch, Bogers, 2005</marker>
<rawString>E. Tjong Kim Sang, S. Canisius, A. van den Bosch, and T. Bogers. 2005. Applying spelling error correction techniques for improving semantic role labeling. In Proceedings of the Ninth Conference on Natural Language Learning (CoNLL-2005). Ann Arbor, MI, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A van den Bosch</author>
<author>S Canisius</author>
<author>W Daelemans</author>
<author>I Hendrickx</author>
<author>E Tjong Kim Sang</author>
</authors>
<title>Memorybased semantic role labeling: Optimizing features, algorithm, and output.</title>
<date>2004</date>
<booktitle>Proceedings of the Eighth Conference on Computational Natural Language Learning (CoNLL-2004).</booktitle>
<editor>In H.T. Ng and E. Riloff, editors,</editor>
<location>Boston, MA, USA.</location>
<marker>van den Bosch, Canisius, Daelemans, Hendrickx, Sang, 2004</marker>
<rawString>A. van den Bosch, S. Canisius, W. Daelemans, I. Hendrickx, and E. Tjong Kim Sang. 2004. Memorybased semantic role labeling: Optimizing features, algorithm, and output. In H.T. Ng and E. Riloff, editors, Proceedings of the Eighth Conference on Computational Natural Language Learning (CoNLL-2004). Boston, MA, USA.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>