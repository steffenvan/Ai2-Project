<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.009763">
<title confidence="0.6111855">
NL Assistant: A Toolkit for Developing Natural Language
Applications
Deborah A. Dahl, Lewis M. Norton, Ahmed Bouzid, and Li Li
Unisys Corporation
</title>
<sectionHeader confidence="0.90521" genericHeader="abstract">
Introduction
</sectionHeader>
<bodyText confidence="0.999989466666667">
We will be demonstrating a toolkit for
developing natural language-based applications
and two applications. The goals of this toolkit
are to reduce development time and cost for
natural language based applications by reducing
the amount of linguistic and programming work
needed. Linguistic work has been reduced by
integrating large-scale linguistics resources—
Comlex (Grishman, et. al., 1993) and WordNet
(Miller, 1990). Programming work is reduced by
automating some of the programming tasks. The
toolkit is designed for both speech- and text-
based interface applications. It runs in a
Windows NT environment. Applications can
run in either Windows NT or Unix.
</bodyText>
<subsectionHeader confidence="0.903181">
System Components
</subsectionHeader>
<bodyText confidence="0.977743">
The NL Assistant toolkit consists of
</bodyText>
<listItem confidence="0.994737">
1. a natural language processing engine (Dahl,
1992)
2. lexical and semantic servers based on
Comlex and WordNet (Grishman et.al,
1993, Miller, 1990)
3. template files which serve as the basis for
new applications
4. a graphical toolkit for entering linguistic
and application-related information
5. algorithms for automatic rule generation
based on developer input.
</listItem>
<subsectionHeader confidence="0.952912">
Natural Language Development
</subsectionHeader>
<bodyText confidence="0.9998798">
Two strategies address the goal of minimizing
the amount of linguistics expertise required to
develop applications with the NL Assistant
toolkit. To reduce the amount of lexical
information that the developer must add, large-
scale lexical resources have been integrated with
the toolkit. These include Comlex and WordNet
as well as additional, internally developed
resources. The second strategy is to provide easy
to use editors for entering linguistic information.
</bodyText>
<subsubsectionHeader confidence="0.537428">
Servers
</subsubsectionHeader>
<bodyText confidence="0.999963391304348">
Lexical information is supplied by four external
servers which are accessed by the natural
language engine during processing. Syntactic
information is supplied by a lexical server based
on the 50K word Comlex dictionary available
from the Linguistic Data Consortium. Semantic
information comes from two servers, a KB
server based on the noun portion of WordNet
(70K concepts), and a semantics server
containing case frame information for 2500
English verbs. A denotations server using
unique concept names generated for each
WordNet synset at ISI links the words in the
lexicon to the concepts in the KB. When the
engine is connected to the servers, whenever
lexical information for specific words cannot be
found in the local engine, it is requested from
the servers. When the servers cannot supply
lexical information for a particular word,
various heuristics are used to hypothesize the
missing information. When hypothesized
information is wrong, it can be corrected by
using the editors.
</bodyText>
<subsubsectionHeader confidence="0.467508">
Editors
</subsubsectionHeader>
<bodyText confidence="0.999958666666667">
Although the servers minimize the amount of
linguistic work that needs to be done to develop
an application, they do not eliminate it. The
main reason for this is that a particular
application will make use of words that do not
exist in the dictionary. For example, in our
initial applications these have included words
such as the verbs &apos;OEM&apos;, &apos;interface&apos;,
&apos;download&apos;, and &apos;customize&apos;. To improve the
</bodyText>
<page confidence="0.996008">
33
</page>
<bodyText confidence="0.984940285714286">
ease of use of the linguistic development
environment, several special-purpose editors
have also been implemented. These include
editors for lexical, semantic, and knowledge-
base work.
The figure below illustrates an editing session in
the semantic rule editor for the verb advise.
</bodyText>
<figure confidence="0.998157576923077">
anent Rule:
or ladvise
Poll of I verb
Speech:
adviceP
Activ ate Rule
:Available fstnantioPeles:
actor
agent
amount
approximate_time_t
attribute
benefactive
between_locations -
cause
mde_exp
:ompared_to
Assigned mantic Roles:
actor
goal
theme
Delete All
Md &gt;&gt;
f4appings
Constraints ...
Cancel
</figure>
<subsectionHeader confidence="0.487428">
Application Development
</subsectionHeader>
<bodyText confidence="0.986440041666667">
Linking the application-independent semantic
representation to the back-end application
software is the task of the application module.
To reduce the amount of time required to
develop an application and the amount of
expertise required, we have structured the
application module into a set of several different
types of rules. (Norton, et. al., 1996) The tasks
these rules have to perform are: (1) map the
user&apos;s utterance into an utterance class which
consists of pragmatically equivalent utterances.
(2) determine, based on the user&apos;s utterance, the
state of the dialog, and any other information
relevant to the application (such as the state of a
database) what to do next (3) perform the next
action or set of actions. Actions include saying
something to the user, retrieving information
from a database, and resetting the dialog to a
new state. These rules are written in Prolog. The
toolkit provides an editor for editing and
managing these rules. In addition, the toolkit
provides tools for automatically generating rules
in the special case of applications which do not
control a dialog.
</bodyText>
<sectionHeader confidence="0.891446" genericHeader="keywords">
Applications
</sectionHeader>
<bodyText confidence="0.9995826">
We will demonstrate a web-based text
application on the topic of the NL Assistant
product. We will also demonstrate a speech
recognition application for mortgage quotations,
our Mortgage Assistant product.
</bodyText>
<sectionHeader confidence="0.611448" genericHeader="introduction">
Metrics
</sectionHeader>
<bodyText confidence="0.999892875">
The largest application we have developed to
date has 37 answer classes on the topic of the
NL Assistant product. It used 683 training
sentences and achieved a score of 83% first
answer correct and 88% first or second answer
correct on a live test with 144 queries. It
required approximately two person-months to
develop.
</bodyText>
<sectionHeader confidence="0.998985" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999840631578947">
Dahl, Deborah A. &amp;quot;Pundit—Natural language
interfaces&amp;quot;. In G. Comyn, N.E. Fuchs, and M.
J. Ratcliffe, eds. Logic programming in action.
Springer-Verlag, 1992.
Grishman, Ralph, Catherine Macleod and
Susanne Wolf. &amp;quot;The Comlex syntax project&amp;quot;.
ARPA Human Language Technology
Workshop. Morgan Kaufmann, 1993.
Linebarger, Marcia C., Lewis M. Norton, and
Deborah A. Dahl. &amp;quot;A Portable approach to last
resort parsing and interpretation&amp;quot;. ARPA
Human Language Technology Workshop, 1993.
Miller, George A. &amp;quot;Five papers on WordNet&amp;quot;.
International Journal of Lexicography. 1990.
Norton, Lewis M., Carl E. Weir, Ahmed
Bouzid, Deborah A. Dahl, and K.W. Scholz. &amp;quot;A
methodology or application development for
spoken language systems&amp;quot;. Proceedings of
ICSLP96. Philadelphia, PA, 1996.
</reference>
<page confidence="0.999322">
34
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.980028">
<title confidence="0.9979695">NL Assistant: A Toolkit for Developing Natural Language Applications</title>
<author confidence="0.999566">Deborah A Dahl</author>
<author confidence="0.999566">Lewis M Norton</author>
<author confidence="0.999566">Ahmed Bouzid</author>
<author confidence="0.999566">Li Li</author>
<affiliation confidence="0.983817">Unisys Corporation</affiliation>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Deborah A Dahl</author>
</authors>
<title>Pundit—Natural language interfaces&amp;quot;.</title>
<date>1992</date>
<editor>In G. Comyn, N.E. Fuchs, and M. J. Ratcliffe, eds.</editor>
<publisher>Springer-Verlag,</publisher>
<contexts>
<context position="930" citStr="Dahl, 1992" startWordPosition="136" endWordPosition="137">time and cost for natural language based applications by reducing the amount of linguistic and programming work needed. Linguistic work has been reduced by integrating large-scale linguistics resources— Comlex (Grishman, et. al., 1993) and WordNet (Miller, 1990). Programming work is reduced by automating some of the programming tasks. The toolkit is designed for both speech- and textbased interface applications. It runs in a Windows NT environment. Applications can run in either Windows NT or Unix. System Components The NL Assistant toolkit consists of 1. a natural language processing engine (Dahl, 1992) 2. lexical and semantic servers based on Comlex and WordNet (Grishman et.al, 1993, Miller, 1990) 3. template files which serve as the basis for new applications 4. a graphical toolkit for entering linguistic and application-related information 5. algorithms for automatic rule generation based on developer input. Natural Language Development Two strategies address the goal of minimizing the amount of linguistics expertise required to develop applications with the NL Assistant toolkit. To reduce the amount of lexical information that the developer must add, largescale lexical resources have bee</context>
</contexts>
<marker>Dahl, 1992</marker>
<rawString>Dahl, Deborah A. &amp;quot;Pundit—Natural language interfaces&amp;quot;. In G. Comyn, N.E. Fuchs, and M. J. Ratcliffe, eds. Logic programming in action. Springer-Verlag, 1992.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralph Grishman</author>
<author>Catherine Macleod</author>
<author>Susanne Wolf</author>
</authors>
<title>The Comlex syntax project&amp;quot;. ARPA Human Language Technology Workshop.</title>
<date>1993</date>
<publisher>Morgan Kaufmann,</publisher>
<marker>Grishman, Macleod, Wolf, 1993</marker>
<rawString>Grishman, Ralph, Catherine Macleod and Susanne Wolf. &amp;quot;The Comlex syntax project&amp;quot;. ARPA Human Language Technology Workshop. Morgan Kaufmann, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcia C Linebarger</author>
<author>Lewis M Norton</author>
<author>Deborah A Dahl</author>
</authors>
<title>A Portable approach to last resort parsing and interpretation&amp;quot;. ARPA Human Language Technology Workshop,</title>
<date>1993</date>
<marker>Linebarger, Norton, Dahl, 1993</marker>
<rawString>Linebarger, Marcia C., Lewis M. Norton, and Deborah A. Dahl. &amp;quot;A Portable approach to last resort parsing and interpretation&amp;quot;. ARPA Human Language Technology Workshop, 1993.</rawString>
</citation>
<citation valid="true">
<authors>
<author>George A Miller</author>
</authors>
<title>Five papers on WordNet&amp;quot;.</title>
<date>1990</date>
<journal>International Journal of Lexicography.</journal>
<contexts>
<context position="1027" citStr="Miller, 1990" startWordPosition="151" endWordPosition="152">programming work needed. Linguistic work has been reduced by integrating large-scale linguistics resources— Comlex (Grishman, et. al., 1993) and WordNet (Miller, 1990). Programming work is reduced by automating some of the programming tasks. The toolkit is designed for both speech- and textbased interface applications. It runs in a Windows NT environment. Applications can run in either Windows NT or Unix. System Components The NL Assistant toolkit consists of 1. a natural language processing engine (Dahl, 1992) 2. lexical and semantic servers based on Comlex and WordNet (Grishman et.al, 1993, Miller, 1990) 3. template files which serve as the basis for new applications 4. a graphical toolkit for entering linguistic and application-related information 5. algorithms for automatic rule generation based on developer input. Natural Language Development Two strategies address the goal of minimizing the amount of linguistics expertise required to develop applications with the NL Assistant toolkit. To reduce the amount of lexical information that the developer must add, largescale lexical resources have been integrated with the toolkit. These include Comlex and WordNet as well as additional, internally</context>
</contexts>
<marker>Miller, 1990</marker>
<rawString>Miller, George A. &amp;quot;Five papers on WordNet&amp;quot;. International Journal of Lexicography. 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lewis M Norton</author>
<author>Carl E Weir</author>
<author>Ahmed Bouzid</author>
<author>Deborah A Dahl</author>
<author>K W Scholz</author>
</authors>
<title>A methodology or application development for spoken language systems&amp;quot;.</title>
<date>1996</date>
<booktitle>Proceedings of ICSLP96.</booktitle>
<location>Philadelphia, PA,</location>
<marker>Norton, Weir, Bouzid, Dahl, Scholz, 1996</marker>
<rawString>Norton, Lewis M., Carl E. Weir, Ahmed Bouzid, Deborah A. Dahl, and K.W. Scholz. &amp;quot;A methodology or application development for spoken language systems&amp;quot;. Proceedings of ICSLP96. Philadelphia, PA, 1996.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>