<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002718">
<note confidence="0.420104">
Book Reviews Knowledge Systems and Prolog: A Logical Approach to Expert Systems and Natural Language Processing
</note>
<bodyText confidence="0.993460666666667">
with SWESIL?), it might have been better to wait until
more care could be taken.
Although the title leads one to assume the authors
will concern themselves with &amp;quot;word experts,&amp;quot; which
usually implies lexical procedures in Small&apos;s sense (they
cite him several times), it turns out that nothing in DLT
can be construed as such. The dictionary entries are
intended to be numerous, but the authors themselves
proscribe large entries (p. 145), or even ones wherein
procedures appear (&amp;quot;There is no level of abstraction
within the LKB in which meaning can be viewed as
separate from words&amp;quot; (p. 118), and other pro-modu-
larity arguments). DLT&apos;s semantic rules seem much
more akin to Wilks&apos;s preference semantics than to
Small&apos;s word expert procedures; and syntactic parsing
in DLT, it turns out, is based on dependency grammar
(p. 105) and is quite independent of any semantic
processing.
More serious are certain scientific and technical
claims that are un(der)supported. Here, of course, one
tends to leave the realm of reviewing the book and move
on to critiquing the work behind it. As this may not be
in the purview of a book review proper, I will constrain
myself to two points. First, the &amp;quot;lexical taxonomy&amp;quot;
issue, for all the attention paid to it, is glossed over. In
particular, while the authors promote the &amp;quot;good&amp;quot; re-
sults, identification of noun and verb hierarchies,
achieved by Calzolari and Amsler, they fail to mention
the problems that Amsler, at least, brings up: the noun
hierarchies tend to attach themselves to the verb hier-
archies eventually (which seems to violate a structural
assumption built into DLT) and, worse, hierarchies
seem quite inappropriate for any other part of speech
(e.g., adjectives and adverbs).
Second, it is perhaps most unfortunate that the
writers, who discount results reported on the basis of
small prototypes (Part III, Chapter 1), are reduced to
just such claims themselves—testing but seven phrases
(p. 172) and one single sentence (p. 176) using a system
with a &amp;quot;Semantic Dictionary [that] contains some 800
headwords&amp;quot; (p. 205). True, such a vocabulary is an
order of magnitude larger than that found in most
academic AI/NLP systems; but it is still an order of
magnitude below the 10,000 that the authors themselves
think reasonable (p. 145)—which is in turn one or two
orders of magnitude below that probably required for
such uses as they anticipate for DLT, if claims like
those of Walker and Amsler (based on several months
of New York Times text) are to be believed. Regardless,
the trivial number of test cases put to SWESIL prove
absolutely nothing, notwithstanding statements like
&amp;quot;some interesting successes have already been
achieved&amp;quot; (p. 205). (I grade SWESIL at 79% on the
7-phrase test (p. 172). At least they are honest: many
AI/NLP reports neglect to mention errors at all, and
fewer yet quantify anything.)
In short, the authors are inconsistent about the
evaluation of other NLP systems against their own, and
too much of this• book talks about DLT in the future
tense (again, not problems unique to this book). It was
written too early, and apparently in too great a hurry.
For the most part, it is interesting reading for the
uninformed; there is no news for the professional. But
for this I could have liked it, whether or not I agree with
their approach.
Jonathan Slocum is staff scientist at Symantec, a software
firm that includes Al applications—notably Q&amp;A, a file man-
agement system with a natural language interface—among its
offerings. Previously, Dr. Slocum directed the successful
METAL machine translation project at the University of
Texas. Slocum&apos;s address is: Symantec, 1302 Darter Lane,
Austin, TX 78746. E-mail: slocum@cs.utexas.edu
</bodyText>
<sectionHeader confidence="0.983196" genericHeader="method">
KNOWLEDGE SYSTEMS AND PROLOG: A LOGICAL
APPROACH TO EXPERT SYSTEMS AND NATURAL
LANGUAGE PROCESSING
</sectionHeader>
<bodyText confidence="0.8915755">
Adrian Walker (ed.); Michael McCord, John F. Sowa,
and Walter G. Wilson
</bodyText>
<construct confidence="0.50528775">
(IBM T.J. Watson Research Center and IBM Systems
Research Institute)
Reading, MA: Addison-Wesley, corrected reprinting,
March 1987, xii + 475 pp.
ISBN 0-201-09044-9, $35.50 (hb)
Reviewed by
Stan C. Kwasny
Washington University
</construct>
<bodyText confidence="0.999955461538462">
Books written by committees—where everyone writes a
chapter--usually suffer from problems of readability,
continuity, and stylistic variations that are difficult for a
reader to overcome. Such were my expectations in
reviewing this book. To the credit of the committee that
produced it, none of these expectations were met. On
the contrary, I found this book to be among the very
best Prolog-based descriptions of expert systems, nat-
ural language processing, and knowledge systems.
The book takes a formal, logical approach to its
subject. Every opportunity is taken to demonstrate in
concise terms the relationship of Prolog with logic. Too
many Prolog textbooks fail to point out connections
with classical logic where possible. They approach
Prolog as a conventional programming language. An
important and obvious aspect of Prolog is thus missed:
that Prolog, since it is based on logic, permits relatively
easy translation from logical form to program. More-
over, given the close relationship between logical form
and program, various mixtures of declarative and pro-
cedural styles can be incorporated into problem solu-
tions. To emphasize one to the exclusion of the other
does not tell the whole story.
This book does tell the whole story, and gives the
reader a good sense of Prolog&apos;s flexibility in addressing
difficult issues across a spectrum of problems. Care-
</bodyText>
<page confidence="0.949511">
210 Computational Linguistics, Volume 15, Number 3, September 1989
</page>
<note confidence="0.448175">
Book Reviews Briefly Noted
</note>
<bodyText confidence="0.981440852941176">
fully, and with a pedagogically attractive style, it dis-
cusses topics related to expert systems (e.g., represen-
tation, rules, shells, explanation, and confidence
factors) as well as topics related to natural language
processing (e.g., conjunctions, inflection, left-recur-
sion, question-answering, and scoping). All of this com-
bines to provide a very concrete, yet readable, intro-
duction to these fields. It achieves this through
examples, woven with explanations that are clear. All
coded examples have just enough odd details to reas-
sure us that they have survived a process of close
scrutiny and debugging.
Chapter 2 is of special note. &amp;quot;A Prolog to Prolog&amp;quot; by
John Sowa is perhaps the best informal introduction to
Prolog I have ever read. I found it both thorough and
complete, but written in a style that makes it pleasant
and delightful to learn. Pure Prolog techniques are
applied to several classic and novel artificial intelligence
problems. Simple, direct comparisons are made to
standard logic (with quantifiers), to Pascal record struc-
tures, and to relational data bases. Unification is ex-
plained with a few simple examples and criteria for
reversible predicates are given.
Chapter 3 discusses more advanced programming
techniques in Prolog. Here, the book departs slightly
from its concentration on classic artificial intelligence
problems to discuss the more mundane issues of Prolog
itself: data structures, unification, control structures,
labels, and metavariables. Later in the chapter, tech-
niques for representing and searching graphs and trees
are presented along with a worked-out example of
alpha-beta pruning. Throughout the book, principles of
good Prolog programming style are emphasized. At the
conclusion of this chapter, these are summarized into a
neat list of 11 guidelines. Warnings about side effects
and the judicious use of cuts are similarly presented.
Syllog (from &amp;quot;syllogism&amp;quot;) is described in Chapter 4;
it represents an expert system shell embedded in Pro-
log. It features some interesting ideas for implementing
the interpreter based on backchain iteration which,
when run, leads eventually to a fixed point representing
the answer. Several sample expert systems built from
Syllog are also presented in the chapter. PLANTDOC,
for example, is a MYCIN-like system that diagnoses
disease in garden plants. It serves to illustrate reasoning
using confidence factors, frames, and explanation tech-
niques.
In Chapter 5, the book presents a score of methods
for constructing syntactic structures from inputs, a
particular semantic model, and a set of techniques for
mapping syntactic structures to semantic forms. It
demonstrates the ease with which input sentences can
be coerced into logical expressions of meaning (ex-
pressed in &amp;quot;Logical Form Language&amp;quot;). Much of this
chapter has appeared in recent research articles by
McCord and, to his credit, he is able to clearly present
solutions to some rather complicated issues.
In the chapter, definite clause grammars (DCGs) are
introduced first. Since these are so clean and elegant in
their simplicity, they nicely introduce some of the
mechanisms for natural language processing in Prolog.
Next, modular logic grammars (MLGs) are introduced
and shown to allow for a greater degree of modularity
between syntax and semantics. The bulk of the chapter
is dedicated to deriving solutions to a variety of prob-
lems using MLG. The range of issues and the degree of
detailed discussion are impressive. In the conclusion, a
natural language question-answering system for a uni-
versity data base is presented.
I have very few criticisms of the book. It is based
entirely on IBM Prolog with little or no effort to provide
information about other implementations of Prolog. An
appendix is provided which serves as a type of refer-
ence manual for IBM Prolog. Perhaps the book could be
more generic, but then I feel it would undermine its
reliance on concrete examples that the reader can
confidently run. Most readers will not find this to be a
difficult problem and the slight effort required to over-
come the problem is well worth it. I found very few
errors and all were very minor (e.g., missing existential
quantifier on page 49). They never detract from what
the author is saying.
I was impressed with this book. Much of the credit
for this certainly belongs with the editor, Adrian
Walker, who does a marvelous job of weaving together
a coherent book from the contributions of his co-
authors. The credentials of the supporting cast are
equally impeccable. I found many enjoyable segments
in the book. Although an appendix is provided which
discusses the logical basis of Prolog and Syllog, I think
it would be difficult to use this book for the logical
fundamentals of Prolog, as the authors suggest. How-
ever, it is certainly an important reference and could
easily be used as a textbook in support of a course on
artificial intelligence, Prolog programming, expert sys-
tems, or natural language processing.
Stan Kwasny holds a visiting appointment with the Depart-
ment of Computer Science and is affiliated with the Center for
Intelligent Computer Systems at Washington University in St.
Louis, MO. He has over 15 years experience conducting
research in computational linguistics. His address is: Wash-
ington University, Campus Box 1045, St. Louis, MO 63130.
</bodyText>
<email confidence="0.604931">
E-mail: sck@wucsl.wustl.edu
</email>
<sectionHeader confidence="0.9856325" genericHeader="method">
BRIEFLY NOTED
CATEGORIAL GRAMMAR
</sectionHeader>
<reference confidence="0.950518888888889">
Wojciech Buszkowski, Witold Marciszewski, and Johan van
Benthem (eds.)
(Adam Mickiewicz University, Warsaw University, and
University of Amsterdam, resp.)
Amsterdam: John Benjamins Publishing, 1988, viii + 365
pp.
(Linguistics and literary studies in Eastern Europe 25)
ISBN 90-272-1530-8, $100.00, Dfl 225.00 (hb)
Computational Linguistics, Volume 15, Number 3, September 1989 211
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.040652">
<title confidence="0.987192">Book Reviews Knowledge Systems and Prolog: A Logical Approach to Expert Systems and Natural Language Processing</title>
<abstract confidence="0.997322492753623">with SWESIL?), it might have been better to wait until more care could be taken. Although the title leads one to assume the authors will concern themselves with &amp;quot;word experts,&amp;quot; which usually implies lexical procedures in Small&apos;s sense (they cite him several times), it turns out that nothing in DLT can be construed as such. The dictionary entries are intended to be numerous, but the authors themselves proscribe large entries (p. 145), or even ones wherein procedures appear (&amp;quot;There is no level of abstraction within the LKB in which meaning can be viewed as from words&amp;quot; (p. 118), and other pro-modularity arguments). DLT&apos;s semantic rules seem much more akin to Wilks&apos;s preference semantics than to Small&apos;s word expert procedures; and syntactic parsing in DLT, it turns out, is based on dependency grammar (p. 105) and is quite independent of any semantic processing. More serious are certain scientific and technical claims that are un(der)supported. Here, of course, one tends to leave the realm of reviewing the book and move on to critiquing the work behind it. As this may not be in the purview of a book review proper, I will constrain myself to two points. First, the &amp;quot;lexical taxonomy&amp;quot; issue, for all the attention paid to it, is glossed over. In while the authors promote the &amp;quot;good&amp;quot; results, identification of noun and verb hierarchies, achieved by Calzolari and Amsler, they fail to mention the problems that Amsler, at least, brings up: the noun hierarchies tend to attach themselves to the verb hierarchies eventually (which seems to violate a structural assumption built into DLT) and, worse, hierarchies seem quite inappropriate for any other part of speech (e.g., adjectives and adverbs). Second, it is perhaps most unfortunate that the writers, who discount results reported on the basis of prototypes (Part 1), are reduced to just such claims themselves—testing but seven phrases (p. 172) and one single sentence (p. 176) using a system with a &amp;quot;Semantic Dictionary [that] contains some 800 headwords&amp;quot; (p. 205). True, such a vocabulary is an order of magnitude larger than that found in most academic AI/NLP systems; but it is still an order of magnitude below the 10,000 that the authors themselves think reasonable (p. 145)—which is in turn one or two orders of magnitude below that probably required for such uses as they anticipate for DLT, if claims like those of Walker and Amsler (based on several months York Times are to be believed. Regardless, the trivial number of test cases put to SWESIL prove absolutely nothing, notwithstanding statements like &amp;quot;some interesting successes have already been achieved&amp;quot; (p. 205). (I grade SWESIL at 79% on the 7-phrase test (p. 172). At least they are honest: many AI/NLP reports neglect to mention errors at all, and fewer yet quantify anything.) In short, the authors are inconsistent about the evaluation of other NLP systems against their own, and too much of this• book talks about DLT in the future tense (again, not problems unique to this book). It was written too early, and apparently in too great a hurry. For the most part, it is interesting reading for the uninformed; there is no news for the professional. But for this I could have liked it, whether or not I agree with their approach. Slocum staff scientist at Symantec, a software firm that includes Al applications—notably Q&amp;A, a file management system with a natural language interface—among its offerings. Previously, Dr. Slocum directed the successful</abstract>
<affiliation confidence="0.554369">METAL machine translation project at the University of Texas. Slocum&apos;s address is: Symantec, 1302 Darter Lane,</affiliation>
<address confidence="0.655497">Austin, TX 78746. E-mail: slocum@cs.utexas.edu</address>
<title confidence="0.932651">SYSTEMS AND PROLOG: APPROACH TO EXPERT SYSTEMS AND NATURAL LANGUAGE PROCESSING</title>
<author confidence="0.949699">Michael McCord</author>
<author confidence="0.949699">John F Sowa</author>
<author confidence="0.949699">Walter G Wilson</author>
<affiliation confidence="0.879745">Watson Research Center and IBM Systems Research Institute) Reading, MA: Addison-Wesley, corrected reprinting,</affiliation>
<address confidence="0.503945">March 1987, xii + 475 pp.</address>
<note confidence="0.9411345">ISBN 0-201-09044-9, $35.50 (hb) Reviewed by</note>
<author confidence="0.999254">Stan C Kwasny</author>
<affiliation confidence="0.999896">Washington University</affiliation>
<abstract confidence="0.98773995">Books written by committees—where everyone writes a chapter--usually suffer from problems of readability, continuity, and stylistic variations that are difficult for a reader to overcome. Such were my expectations in reviewing this book. To the credit of the committee that produced it, none of these expectations were met. On contrary, this book to be among the very best Prolog-based descriptions of expert systems, natural language processing, and knowledge systems. The book takes a formal, logical approach to its subject. Every opportunity is taken to demonstrate in concise terms the relationship of Prolog with logic. Too many Prolog textbooks fail to point out connections with classical logic where possible. They approach Prolog as a conventional programming language. An important and obvious aspect of Prolog is thus missed: that Prolog, since it is based on logic, permits relatively easy translation from logical form to program. Moreover, given the close relationship between logical form and program, various mixtures of declarative and procedural styles can be incorporated into problem solutions. To emphasize one to the exclusion of the other does not tell the whole story. book the whole story, and gives the reader a good sense of Prolog&apos;s flexibility in addressing issues across a spectrum of problems. Care- 210 Computational Linguistics, Volume 15, Number 3, September 1989 Briefly Noted fully, and with a pedagogically attractive style, it distopics related to expert systems (e.g., representation, rules, shells, explanation, and confidence factors) as well as topics related to natural language (e.g., conjunctions, inflection, left-recurquestion-answering, and scoping). All of this combines to provide a very concrete, yet readable, introduction to these fields. It achieves this through examples, woven with explanations that are clear. All coded examples have just enough odd details to reassure us that they have survived a process of close scrutiny and debugging.</abstract>
<intro confidence="0.925474">Chapter 2 is of special note. &amp;quot;A Prolog to Prolog&amp;quot; by</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<editor>Wojciech Buszkowski, Witold Marciszewski, and Johan van Benthem (eds.)</editor>
<marker></marker>
<rawString>Wojciech Buszkowski, Witold Marciszewski, and Johan van Benthem (eds.)</rawString>
</citation>
<citation valid="false">
<institution>(Adam Mickiewicz University, Warsaw University, and University of Amsterdam, resp.)</institution>
<marker></marker>
<rawString>(Adam Mickiewicz University, Warsaw University, and University of Amsterdam, resp.)</rawString>
</citation>
<citation valid="true">
<authors>
<author>Amsterdam John Benjamins Publishing</author>
</authors>
<date>1988</date>
<journal>viii +</journal>
<volume>365</volume>
<pages>pp.</pages>
<marker>Publishing, 1988</marker>
<rawString>Amsterdam: John Benjamins Publishing, 1988, viii + 365 pp.</rawString>
</citation>
<citation valid="false">
<title>literary studies in</title>
<journal>Eastern Europe</journal>
<volume>25</volume>
<pages>90--272</pages>
<note>Dfl 225.00 (hb)</note>
<marker></marker>
<rawString>(Linguistics and literary studies in Eastern Europe 25) ISBN 90-272-1530-8, $100.00, Dfl 225.00 (hb)</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<date>1989</date>
<volume>15</volume>
<pages>211</pages>
<marker>Linguistics, 1989</marker>
<rawString>Computational Linguistics, Volume 15, Number 3, September 1989 211</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>