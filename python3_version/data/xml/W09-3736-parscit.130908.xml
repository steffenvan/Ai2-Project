<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000123">
<title confidence="0.989998">
Well-formed Default Unification in
Non-deterministic Multiple Inheritance Hierarchies
</title>
<author confidence="0.987153">
Christian Schulz, Jan Alexandersson and Tilman Becker
</author>
<email confidence="0.284983">
DFKI, Saarbr¨ucken
</email>
<sectionHeader confidence="0.990105" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999064">
Default unification represents a fundamental extension of the common uni-
fication operation, where even in case of inconsistency between the infor-
mation to be merged, there will always be a result. As default unification
is no longer a commutative operation, a distinction is made between the
argument containing default information, the background, and the other ar-
gument consisting of non-default information, the cover.
An elegant point of departure to formalizing default unification has been
delivered by Carpenter’s credulous default unification (CDU) (Carpenter,
1993):
</bodyText>
<equation confidence="0.872222">
&lt;
F U, G = IF U G′ I G′ E G is maximal such that F U G′ is defined}
</equation>
<bodyText confidence="0.998532">
Unlike previous strategies to replace conflicting parts by the non-default
information (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter sug-
gests in case of clashes to relax the specificity in the defeasible part to
achieve consistency with the non-default structure. Since the detection of
the generalized default might not be deterministic, multiple results may
arise.
</bodyText>
<figure confidence="0.592376375">
� � (1) User: I’d like to go to the movies
Entertainment tonight.
beginTime (2) SmartKom: Here (/) are the
... films showing in Heidelberg.
� � � � (3) User: No, there is nothing inter-
Broadcast Performance esting there,
Channel Location (4) User: what is showing on TV?
... ...
</figure>
<figureCaption confidence="0.986447333333333">
Figure 1: An excerpt from the SMARTKoM ontology and the multi-modal interaction
of a dialog between the user and the system. ր denotes the pointing gesture by the
presentation agent.
</figureCaption>
<page confidence="0.949021">
320
</page>
<bodyText confidence="0.981242823529412">
Proceedings of the 8th International Conference on Computational Semantics, pages 320–325,
Tilburg, January 2009. c�2009 International Conference on Computational Semantics
A CDU formalization in (Alexandersson &amp; Becker, 2007) is used in the
SMARTKOM system (Wahlster, 2006) on the basis of typed feature structures
(TFS) and CDU as the knowledge representation and inference mechanism,
in order to monitor the discourse processing, where the user’s input, the
cover, updates the internal dialogue state, the background, see figure 1.
The second crucial point of departure is how Alexandersson and Becker
understand to exploit the information inherent to an inheritance hierarchy
and henceforward to transfer Carpenter’s notion to a very effective and
sound way to specify CDU, which stands in contrast to the formalization by
(Grover, Brew, Manandhar, &amp; Moens, 1994)&apos; that suffers from theoretical
and computational drawbacks.
This Work (Schulz, 2007) develops an extension to the CDU operation
presented in (Alexandersson &amp; Becker, 2007) for which the CDU algorithm
is adapted to deal with multiple inheritance type hierarchies omitting the
requirement to be bounded complete.
</bodyText>
<sectionHeader confidence="0.993152" genericHeader="method">
2 Efficient Computation of Well-formed Default
Unification
</sectionHeader>
<bodyText confidence="0.993707588235294">
The core result of our work is a refinement of the characterization of CDU
as described in (Carpenter, 1993) along with a revision of the algorithm
presented in (Alexandersson &amp; Becker, 2007). By identifying basic scenar-
ios, see figure 2, we have gained insights into the limitations of Carpenter
as described below and identified the resulting deficits of the algorithm in
Alexandersson and Becker. Crucial facets of our work include efficient lat-
tice operations, for the calculation of maximal lower bound (mlb) and min-
imal upper bound (mub). During CDU we suggest that the well-formedness
condition on TFS formulated in (Copestake, 1992) is met. The two-stage
procedural approach of the CDU mechanism is as the following:
1 Assimilation is a preprocessing step that first computes the target types for the
cover and background; the Type Preprocessing. Next, the cover and the background
will be translated to their appropriate target types by the operations Specialization
and Generalization respectively.
2 Overlay’ performs type assignment by combining the information from the two
TFSs returned by the assimilation and monitors the recursive invocation of Assim-
ilation.2
</bodyText>
<footnote confidence="0.7558255">
1In Grover et al. priority union is aimed to resolve parallelism dependent anaphora,
in particular verb phrase ellipsis with a resolution mechanism based on the linguistic
discourse model of (Pr¨ust, Scha, &amp; Berg, 1994).
2For a detailed description of Overlay’ see (Alexandersson &amp; Becker, 2007).
</footnote>
<page confidence="0.964031">
321
</page>
<equation confidence="0.911529125">
t1 t2 t8
tbg t3 t4
t6 t7
t5 tco
tbg t3
t1 t2
t3
tco
</equation>
<figureCaption confidence="0.94992">
Figure 2: A CDU scenario that is not entirely covered by Carpenter’s definition (left).
Determination of the required search space of all relevant type configurations (right).
</figureCaption>
<bodyText confidence="0.998573">
A convenient concept is the definition of the type configuration, which
enables to describe the Type Preprocessing effectively:
</bodyText>
<subsectionHeader confidence="0.46365">
Definition 1 Type Configuration
</subsectionHeader>
<bodyText confidence="0.9988634">
Given tbg, the type of the background and tco, the type of the cover; a type
configuration tconf , ht′bg,t′coi is a pair of type identifiers where, t′bg
is the abstract
background type of tbg with ⊔t(t′bg,tco) =6 ∅ and t′ bg ⊑ tbg; t′ co is the abstract cover
type of tco with t′ co ∈ ⊔t(t′ bg,tco)
At this point we would like to express subsumption ordering between two type
configurations t′conf = ht′bg,t′coi and t′′conf = ht′′ bg,t′′ coi as follows. We say t′conf ⊑
t′′conf , if t′bg ⊑ t′′ bg and t′ co ⊑ t′′co. Given some type t and θ(qco) = tco we additionally
propose a function, that returns the potential abstract background types located
in the next level of the hierarchy T (t) = {t′  |t′ ⊑ t with t′ is maximal and
⊔t(t′, tco) =6 ∅}.
The scenario in figure 2 (left) bears the type configuration ht2, t3i which is
covered by Carpenter’s definition, since t2 corresponds to the relaxed struc-
ture of the background which according to Carpenter should contain max-
imal information. However, ht5, t4i encloses the valid abstract background
type t5 that is more general than t2, which is caused by the non-deterministic
inheritance behaviour among background’s supertypes; ⊔t(t5, tco) yields a
non-empty set {t7, t4}. This example reveals the limits of Carpenter’s defi-
nition, that can be adjusted by the omission of the restriction on specificity
imposed on the generalized background structure:
</bodyText>
<equation confidence="0.903332">
Definition 2 Credulous Default Unification Revised
&lt;
F ⊔c G = {F ⊔ G′  |G′ ⊑ G such that F ⊔ G′ is defined and maximal}
</equation>
<bodyText confidence="0.993362">
The definition says that the result of CDU between F and G are rep-
resented by unifications between F and G′, that are defined, most specific
</bodyText>
<page confidence="0.992565">
322
</page>
<bodyText confidence="0.923867285714286">
and G′ subsumes G. For this purpose we motivate the task of Type Prepro-
cessing to identify all type configurations that are relevant for subsequent
procedures in CDU. The hierarchy in figure 2 (left) comprises the type con-
figurations {ht2, t3i, ht5, t4i, ht5, t7i}, though ht2, t3i makes ht5, t7i dispens-
able, since ht5, t7i results into a TFS that subsumes the outcome stemming
from ht2, t3i. Type Preprocessing sorts out redundant type configurations by
the subsumption check and prevents them to be input for the Specialization
and the Generalization process respectively.
The algorithm of Alexandersson and Becker narrows down the search for
abstract background types to the candidates that are situated exclusively on
the path between the background type and the least upper bound of cover
and background. The hierarchy in figure 2 (right), however, contains an
abstract background type that is not located on any path towards elements
of mub, i. e., it is justified to state that in addition to t2 also the type t1 is
an abstract background type. In order to capture all potentially valid type
configurations the search may only terminate if the currently visited type
subsumes a mub element.
Algorithm 1 Assimilation
Let co and bg be two TFS such that co = hQco, qco, θco, δcoi and bg = hQbg, qbg, θbg,
δbgi. Further we have tbg := θbg(¯qbg) and tco := θco(¯qco). The assimilation of co
and bg, A(bg, co) = Q, where Q is a set of tuples of bg′ and co′ such that:
</bodyText>
<equation confidence="0.954364466666666">
(1) if tbg ⊑ tomo
then bg′ = b′g, co′ = co
hbg′, coi ∈ Q
(2) if tomo ⊑ tbg
(3.1) if t′bg ⊑ tmub
then exit
elsefor each tmlb ∈ ⊔t(t′bg,tco)
go to (3.2)
if ⊔(co, MGsat(tbg)) =6 ∅
(3
then
CO′ = ⊔(co, MGsat(tbg))
bg′ = bg
{bg′} × CO′ ⊆ Q
else
</equation>
<bodyText confidence="0.8013285">
go to (3∗) with T (tbg) (
tmub = tco
</bodyText>
<listItem confidence="0.444341">
(3) else for each tmub ∈ ⊓t(tbg,tco)
go to (3∗) with T (tbg)
(3∗) for each tbg′ ∈ T (t) go to (3.1)
</listItem>
<figure confidence="0.919873">
.2)
if ht′ bg, tmlbi ⊑6 t′ conf ∀ t′ conf ,
thenCO′ = ⊔(co, MGsat(tmlb))
bg′ = G(bg, t′
bg)
{bg′} × CO′ ⊆ Q
go to (3∗) with T (t′bg)
else go to (3∗) with T (t′
bg)
with t′ conf = hθ(qbg′), θ(qco′)i
and hbg′, co′i ∈ Q
then go to (3.3)
else go to (3∗) with T (t′bg)
3.3.) if ⊔(co, MGsat(tmlb)) =6 ∅
,
</figure>
<figureCaption confidence="0.974518">
Figure 3: Along the CDU procedure Overlay’ recursively assimilates the structures of
the arguments one level deeper and combines the previously assimilated parts stemming
from background and cover resulting in an intermediate TFS.
</figureCaption>
<page confidence="0.997755">
323
</page>
<bodyText confidence="0.9997864">
During CDU well-formedness of TFS is guaranteed if exclusively Special-
ization is well-formed, where its operational foundation refers to the ternary
unification operation in (Copestake, 1992). In the algorithm specification 1
we present the Assimilation algorithm concerning multiple inheritance hier-
archies featuring non-determinism.
</bodyText>
<sectionHeader confidence="0.98962" genericHeader="conclusions">
3 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.9999870625">
We have motivated and demonstrated a formalism of CDU dealing with mul-
tiple inheritance hierarchies featuring non-determinism. Thereby we have
provided a reformulation of Carpenter’s definition and a precisely formalized
characterization of the algorithm extending the work in (Alexandersson &amp;
Becker, 2007). The non-deterministic behaviour increases considerably the
degree of difficulty regarding lattice operations in order to identify all pos-
sible outcomes in CDU. To this end, we were able to boil down the efficient
implementation of CDU to an efficient realization of mlb and mub compu-
tation based on the detailed discussion in (Schulz, 2007).
In this work we have gained insights considering coreferences, though
we postpone the theoretical and practical elaboration as a goal for future
research. A crucial contribution in (Alexandersson, Becker, &amp; Pfleger, 2004)
is the usage of a scoring function that computes the best hypothesis among
the multiple outcome of CDU. The notion of informational distance appears
to be a reasonable device to restrain the production of multiple results in
the current context as well.
</bodyText>
<sectionHeader confidence="0.992081" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.670144285714286">
Alexandersson, J., &amp; Becker, T. (2007). Efficient Computation of Over-
lay for Multiple Inheritance Hierarchies in Discourse Modeling. In
H. Bunt &amp; R. Muskens (Eds.), (Vol. 3, pp. 423–455). Dordrecht: Dor-
drecht:Kluwer.
Alexandersson, J., Becker, T., &amp; Pfleger, N. (2004). Scoring for overlay
based on informational distance. In Proceedings of Konvens 2004 (pp.
1–4). Vienna, Austria.
</reference>
<bodyText confidence="0.79401475">
Bouma, G. (1990, 6–9 June). Defaults in Unification Grammar. In Pro-
ceedings of the 28th annual meeting on Association for Computational
Linguistics (pp. 165–172). Morristown, NJ, USA: Association for Com-
putational Linguistics.
</bodyText>
<page confidence="0.996829">
324
</page>
<reference confidence="0.998757692307692">
Carpenter, B. (1993). Skeptical and Credulous Default Unification with
Applications to Templates and Inheritance. In T. Briscoe, V. de Paiva,
&amp; A. Copestake (Eds.), Inheritance, Defaults, and the Lexicon (pp.
13–37). Cambridge, CA: Cambridge University Press.
Copestake, A. (1992). The Representation of Lexical Semantic Information.
Doctoral dissertation, University of Sussex.
Grover, C., Brew, C., Manandhar, S., &amp; Moens, M. (1994). Priority Union
and Generalization in Discourse Grammars. In 32nd. Annual Meeting
of the Association for Computational Linguistics (pp. 17 – 24). Las
Cruces, NM: Association for Computational Linguistics.
Kaplan, R. M. (1987). Three Seductions of Computational Psycholinguis-
tics. In P. Whitelock, H. Somers, P. Bennett, R. Johnson, &amp; M. M.
Wood (Eds.), Linguistic Theory and Computer Applications (pp. 149–
188). London: Academic Press.
Pr¨ust, H., Scha, R., &amp; Berg, M. van den. (1994). Discourse Grammar
and Verb Phrase Anaphora. In Linguistics and Philosophy 17 (pp.
261–327). Amsterdam, Netherlands: Springer.
Schulz, C. H. (2007). Well-formed Default Unification in Multiple Inheri-
tance Hierarchies. Diploma thesis, Saarland University, Saarbr¨ucken,
Germany.
Shieber, S. M. (1986). A Simple Reconstruction of GPSG. In Proc. of the
11th COLING (pp. 211–215). Morristown, NJ, USA: Association for
Computational Linguistics.
Wahlster, W. (2006). Dialogue Systems Go Multimodal: The Smartkom Ex-
perience. In Smartkom - Foundations of Multimodal Dialogue Systems
(pp. 3–27). Heidelberg, Germany: Springer.
</reference>
<page confidence="0.999131">
325
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.712878">
<title confidence="0.9996705">Well-formed Default Unification Non-deterministic Multiple Inheritance Hierarchies</title>
<author confidence="0.996454">Christian Schulz</author>
<author confidence="0.996454">Jan Alexandersson</author>
<author confidence="0.996454">Tilman</author>
<intro confidence="0.714966">DFKI, Saarbr¨ucken</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>J Alexandersson</author>
<author>T Becker</author>
</authors>
<title>Efficient Computation of Overlay for Multiple Inheritance Hierarchies in Discourse Modeling.</title>
<date>2007</date>
<journal>In H. Bunt &amp; R. Muskens (Eds.),</journal>
<volume>3</volume>
<pages>423--455</pages>
<location>Dordrecht: Dordrecht:Kluwer.</location>
<contexts>
<context position="1884" citStr="Alexandersson &amp; Becker, 2007" startWordPosition="283" endWordPosition="286">ht. beginTime (2) SmartKom: Here (/) are the ... films showing in Heidelberg. � � � � (3) User: No, there is nothing interBroadcast Performance esting there, Channel Location (4) User: what is showing on TV? ... ... Figure 1: An excerpt from the SMARTKoM ontology and the multi-modal interaction of a dialog between the user and the system. ր denotes the pointing gesture by the presentation agent. 320 Proceedings of the 8th International Conference on Computational Semantics, pages 320–325, Tilburg, January 2009. c�2009 International Conference on Computational Semantics A CDU formalization in (Alexandersson &amp; Becker, 2007) is used in the SMARTKOM system (Wahlster, 2006) on the basis of typed feature structures (TFS) and CDU as the knowledge representation and inference mechanism, in order to monitor the discourse processing, where the user’s input, the cover, updates the internal dialogue state, the background, see figure 1. The second crucial point of departure is how Alexandersson and Becker understand to exploit the information inherent to an inheritance hierarchy and henceforward to transfer Carpenter’s notion to a very effective and sound way to specify CDU, which stands in contrast to the formalization by</context>
<context position="4368" citStr="Alexandersson &amp; Becker, 2007" startWordPosition="661" endWordPosition="664">processing. Next, the cover and the background will be translated to their appropriate target types by the operations Specialization and Generalization respectively. 2 Overlay’ performs type assignment by combining the information from the two TFSs returned by the assimilation and monitors the recursive invocation of Assimilation.2 1In Grover et al. priority union is aimed to resolve parallelism dependent anaphora, in particular verb phrase ellipsis with a resolution mechanism based on the linguistic discourse model of (Pr¨ust, Scha, &amp; Berg, 1994). 2For a detailed description of Overlay’ see (Alexandersson &amp; Becker, 2007). 321 t1 t2 t8 tbg t3 t4 t6 t7 t5 tco tbg t3 t1 t2 t3 tco Figure 2: A CDU scenario that is not entirely covered by Carpenter’s definition (left). Determination of the required search space of all relevant type configurations (right). A convenient concept is the definition of the type configuration, which enables to describe the Type Preprocessing effectively: Definition 1 Type Configuration Given tbg, the type of the background and tco, the type of the cover; a type configuration tconf , ht′bg,t′coi is a pair of type identifiers where, t′bg is the abstract background type of tbg with ⊔t(t′bg,t</context>
<context position="9478" citStr="Alexandersson &amp; Becker, 2007" startWordPosition="1560" endWordPosition="1563">nteed if exclusively Specialization is well-formed, where its operational foundation refers to the ternary unification operation in (Copestake, 1992). In the algorithm specification 1 we present the Assimilation algorithm concerning multiple inheritance hierarchies featuring non-determinism. 3 Conclusion and Future Work We have motivated and demonstrated a formalism of CDU dealing with multiple inheritance hierarchies featuring non-determinism. Thereby we have provided a reformulation of Carpenter’s definition and a precisely formalized characterization of the algorithm extending the work in (Alexandersson &amp; Becker, 2007). The non-deterministic behaviour increases considerably the degree of difficulty regarding lattice operations in order to identify all possible outcomes in CDU. To this end, we were able to boil down the efficient implementation of CDU to an efficient realization of mlb and mub computation based on the detailed discussion in (Schulz, 2007). In this work we have gained insights considering coreferences, though we postpone the theoretical and practical elaboration as a goal for future research. A crucial contribution in (Alexandersson, Becker, &amp; Pfleger, 2004) is the usage of a scoring function</context>
</contexts>
<marker>Alexandersson, Becker, 2007</marker>
<rawString>Alexandersson, J., &amp; Becker, T. (2007). Efficient Computation of Overlay for Multiple Inheritance Hierarchies in Discourse Modeling. In H. Bunt &amp; R. Muskens (Eds.), (Vol. 3, pp. 423–455). Dordrecht: Dordrecht:Kluwer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Alexandersson</author>
<author>T Becker</author>
<author>N Pfleger</author>
</authors>
<title>Scoring for overlay based on informational distance.</title>
<date>2004</date>
<booktitle>In Proceedings of Konvens</booktitle>
<pages>1--4</pages>
<location>Vienna, Austria.</location>
<marker>Alexandersson, Becker, Pfleger, 2004</marker>
<rawString>Alexandersson, J., Becker, T., &amp; Pfleger, N. (2004). Scoring for overlay based on informational distance. In Proceedings of Konvens 2004 (pp. 1–4). Vienna, Austria.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Carpenter</author>
</authors>
<title>Skeptical and Credulous Default Unification with Applications to Templates and Inheritance. In</title>
<date>1993</date>
<publisher>Cambridge University Press.</publisher>
<contexts>
<context position="748" citStr="Carpenter, 1993" startWordPosition="100" endWordPosition="101"> Becker DFKI, Saarbr¨ucken 1 Introduction Default unification represents a fundamental extension of the common unification operation, where even in case of inconsistency between the information to be merged, there will always be a result. As default unification is no longer a commutative operation, a distinction is made between the argument containing default information, the background, and the other argument consisting of non-default information, the cover. An elegant point of departure to formalizing default unification has been delivered by Carpenter’s credulous default unification (CDU) (Carpenter, 1993): &lt; F U, G = IF U G′ I G′ E G is maximal such that F U G′ is defined} Unlike previous strategies to replace conflicting parts by the non-default information (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter suggests in case of clashes to relax the specificity in the defeasible part to achieve consistency with the non-default structure. Since the detection of the generalized default might not be deterministic, multiple results may arise. � � (1) User: I’d like to go to the movies Entertainment tonight. beginTime (2) SmartKom: Here (/) are the ... films showing in Heidelberg. � � � � (3) Use</context>
<context position="3004" citStr="Carpenter, 1993" startWordPosition="455" endWordPosition="456"> a very effective and sound way to specify CDU, which stands in contrast to the formalization by (Grover, Brew, Manandhar, &amp; Moens, 1994)&apos; that suffers from theoretical and computational drawbacks. This Work (Schulz, 2007) develops an extension to the CDU operation presented in (Alexandersson &amp; Becker, 2007) for which the CDU algorithm is adapted to deal with multiple inheritance type hierarchies omitting the requirement to be bounded complete. 2 Efficient Computation of Well-formed Default Unification The core result of our work is a refinement of the characterization of CDU as described in (Carpenter, 1993) along with a revision of the algorithm presented in (Alexandersson &amp; Becker, 2007). By identifying basic scenarios, see figure 2, we have gained insights into the limitations of Carpenter as described below and identified the resulting deficits of the algorithm in Alexandersson and Becker. Crucial facets of our work include efficient lattice operations, for the calculation of maximal lower bound (mlb) and minimal upper bound (mub). During CDU we suggest that the well-formedness condition on TFS formulated in (Copestake, 1992) is met. The two-stage procedural approach of the CDU mechanism is a</context>
</contexts>
<marker>Carpenter, 1993</marker>
<rawString>Carpenter, B. (1993). Skeptical and Credulous Default Unification with Applications to Templates and Inheritance. In T. Briscoe, V. de Paiva, &amp; A. Copestake (Eds.), Inheritance, Defaults, and the Lexicon (pp. 13–37). Cambridge, CA: Cambridge University Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Copestake</author>
</authors>
<title>The Representation of Lexical Semantic Information. Doctoral dissertation,</title>
<date>1992</date>
<institution>University of Sussex.</institution>
<contexts>
<context position="3536" citStr="Copestake, 1992" startWordPosition="538" endWordPosition="539">ork is a refinement of the characterization of CDU as described in (Carpenter, 1993) along with a revision of the algorithm presented in (Alexandersson &amp; Becker, 2007). By identifying basic scenarios, see figure 2, we have gained insights into the limitations of Carpenter as described below and identified the resulting deficits of the algorithm in Alexandersson and Becker. Crucial facets of our work include efficient lattice operations, for the calculation of maximal lower bound (mlb) and minimal upper bound (mub). During CDU we suggest that the well-formedness condition on TFS formulated in (Copestake, 1992) is met. The two-stage procedural approach of the CDU mechanism is as the following: 1 Assimilation is a preprocessing step that first computes the target types for the cover and background; the Type Preprocessing. Next, the cover and the background will be translated to their appropriate target types by the operations Specialization and Generalization respectively. 2 Overlay’ performs type assignment by combining the information from the two TFSs returned by the assimilation and monitors the recursive invocation of Assimilation.2 1In Grover et al. priority union is aimed to resolve parallelis</context>
<context position="8998" citStr="Copestake, 1992" startWordPosition="1498" endWordPosition="1499">o to (3∗) with T (t′bg) else go to (3∗) with T (t′ bg) with t′ conf = hθ(qbg′), θ(qco′)i and hbg′, co′i ∈ Q then go to (3.3) else go to (3∗) with T (t′bg) 3.3.) if ⊔(co, MGsat(tmlb)) =6 ∅ , Figure 3: Along the CDU procedure Overlay’ recursively assimilates the structures of the arguments one level deeper and combines the previously assimilated parts stemming from background and cover resulting in an intermediate TFS. 323 During CDU well-formedness of TFS is guaranteed if exclusively Specialization is well-formed, where its operational foundation refers to the ternary unification operation in (Copestake, 1992). In the algorithm specification 1 we present the Assimilation algorithm concerning multiple inheritance hierarchies featuring non-determinism. 3 Conclusion and Future Work We have motivated and demonstrated a formalism of CDU dealing with multiple inheritance hierarchies featuring non-determinism. Thereby we have provided a reformulation of Carpenter’s definition and a precisely formalized characterization of the algorithm extending the work in (Alexandersson &amp; Becker, 2007). The non-deterministic behaviour increases considerably the degree of difficulty regarding lattice operations in order </context>
</contexts>
<marker>Copestake, 1992</marker>
<rawString>Copestake, A. (1992). The Representation of Lexical Semantic Information. Doctoral dissertation, University of Sussex.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Grover</author>
<author>C Brew</author>
<author>S Manandhar</author>
<author>M Moens</author>
</authors>
<title>Priority Union and Generalization in Discourse Grammars.</title>
<date>1994</date>
<booktitle>In 32nd. Annual Meeting of the Association for Computational Linguistics (pp. 17 – 24). Las Cruces, NM: Association for Computational Linguistics.</booktitle>
<contexts>
<context position="2524" citStr="Grover, Brew, Manandhar, &amp; Moens, 1994" startWordPosition="380" endWordPosition="385">s used in the SMARTKOM system (Wahlster, 2006) on the basis of typed feature structures (TFS) and CDU as the knowledge representation and inference mechanism, in order to monitor the discourse processing, where the user’s input, the cover, updates the internal dialogue state, the background, see figure 1. The second crucial point of departure is how Alexandersson and Becker understand to exploit the information inherent to an inheritance hierarchy and henceforward to transfer Carpenter’s notion to a very effective and sound way to specify CDU, which stands in contrast to the formalization by (Grover, Brew, Manandhar, &amp; Moens, 1994)&apos; that suffers from theoretical and computational drawbacks. This Work (Schulz, 2007) develops an extension to the CDU operation presented in (Alexandersson &amp; Becker, 2007) for which the CDU algorithm is adapted to deal with multiple inheritance type hierarchies omitting the requirement to be bounded complete. 2 Efficient Computation of Well-formed Default Unification The core result of our work is a refinement of the characterization of CDU as described in (Carpenter, 1993) along with a revision of the algorithm presented in (Alexandersson &amp; Becker, 2007). By identifying basic scenarios, see</context>
</contexts>
<marker>Grover, Brew, Manandhar, Moens, 1994</marker>
<rawString>Grover, C., Brew, C., Manandhar, S., &amp; Moens, M. (1994). Priority Union and Generalization in Discourse Grammars. In 32nd. Annual Meeting of the Association for Computational Linguistics (pp. 17 – 24). Las Cruces, NM: Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Kaplan</author>
</authors>
<title>Three Seductions of Computational Psycholinguistics. In</title>
<date>1987</date>
<booktitle>Linguistic Theory and Computer Applications</booktitle>
<pages>149--188</pages>
<publisher>Academic Press.</publisher>
<location>London:</location>
<contexts>
<context position="933" citStr="Kaplan, 1987" startWordPosition="136" endWordPosition="137">tion to be merged, there will always be a result. As default unification is no longer a commutative operation, a distinction is made between the argument containing default information, the background, and the other argument consisting of non-default information, the cover. An elegant point of departure to formalizing default unification has been delivered by Carpenter’s credulous default unification (CDU) (Carpenter, 1993): &lt; F U, G = IF U G′ I G′ E G is maximal such that F U G′ is defined} Unlike previous strategies to replace conflicting parts by the non-default information (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter suggests in case of clashes to relax the specificity in the defeasible part to achieve consistency with the non-default structure. Since the detection of the generalized default might not be deterministic, multiple results may arise. � � (1) User: I’d like to go to the movies Entertainment tonight. beginTime (2) SmartKom: Here (/) are the ... films showing in Heidelberg. � � � � (3) User: No, there is nothing interBroadcast Performance esting there, Channel Location (4) User: what is showing on TV? ... ... Figure 1: An excerpt from the SMARTKoM ontology and the multi-</context>
</contexts>
<marker>Kaplan, 1987</marker>
<rawString>Kaplan, R. M. (1987). Three Seductions of Computational Psycholinguistics. In P. Whitelock, H. Somers, P. Bennett, R. Johnson, &amp; M. M. Wood (Eds.), Linguistic Theory and Computer Applications (pp. 149– 188). London: Academic Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Pr¨ust</author>
<author>R Scha</author>
<author>M van den Berg</author>
</authors>
<date>1994</date>
<booktitle>Discourse Grammar and Verb Phrase Anaphora. In Linguistics and Philosophy</booktitle>
<volume>17</volume>
<pages>261--327</pages>
<publisher>Springer.</publisher>
<location>Amsterdam, Netherlands:</location>
<marker>Pr¨ust, Scha, Berg, 1994</marker>
<rawString>Pr¨ust, H., Scha, R., &amp; Berg, M. van den. (1994). Discourse Grammar and Verb Phrase Anaphora. In Linguistics and Philosophy 17 (pp. 261–327). Amsterdam, Netherlands: Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C H Schulz</author>
</authors>
<title>Well-formed Default Unification in Multiple Inheritance Hierarchies. Diploma thesis,</title>
<date>2007</date>
<institution>Saarland University,</institution>
<location>Saarbr¨ucken, Germany.</location>
<contexts>
<context position="2610" citStr="Schulz, 2007" startWordPosition="395" endWordPosition="396">owledge representation and inference mechanism, in order to monitor the discourse processing, where the user’s input, the cover, updates the internal dialogue state, the background, see figure 1. The second crucial point of departure is how Alexandersson and Becker understand to exploit the information inherent to an inheritance hierarchy and henceforward to transfer Carpenter’s notion to a very effective and sound way to specify CDU, which stands in contrast to the formalization by (Grover, Brew, Manandhar, &amp; Moens, 1994)&apos; that suffers from theoretical and computational drawbacks. This Work (Schulz, 2007) develops an extension to the CDU operation presented in (Alexandersson &amp; Becker, 2007) for which the CDU algorithm is adapted to deal with multiple inheritance type hierarchies omitting the requirement to be bounded complete. 2 Efficient Computation of Well-formed Default Unification The core result of our work is a refinement of the characterization of CDU as described in (Carpenter, 1993) along with a revision of the algorithm presented in (Alexandersson &amp; Becker, 2007). By identifying basic scenarios, see figure 2, we have gained insights into the limitations of Carpenter as described belo</context>
</contexts>
<marker>Schulz, 2007</marker>
<rawString>Schulz, C. H. (2007). Well-formed Default Unification in Multiple Inheritance Hierarchies. Diploma thesis, Saarland University, Saarbr¨ucken, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S M Shieber</author>
</authors>
<title>A Simple Reconstruction of GPSG.</title>
<date>1986</date>
<booktitle>In Proc. of the 11th COLING</booktitle>
<pages>211--215</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA:</location>
<contexts>
<context position="919" citStr="Shieber, 1986" startWordPosition="134" endWordPosition="135">een the information to be merged, there will always be a result. As default unification is no longer a commutative operation, a distinction is made between the argument containing default information, the background, and the other argument consisting of non-default information, the cover. An elegant point of departure to formalizing default unification has been delivered by Carpenter’s credulous default unification (CDU) (Carpenter, 1993): &lt; F U, G = IF U G′ I G′ E G is maximal such that F U G′ is defined} Unlike previous strategies to replace conflicting parts by the non-default information (Shieber, 1986; Kaplan, 1987; Bouma, 1990), Carpenter suggests in case of clashes to relax the specificity in the defeasible part to achieve consistency with the non-default structure. Since the detection of the generalized default might not be deterministic, multiple results may arise. � � (1) User: I’d like to go to the movies Entertainment tonight. beginTime (2) SmartKom: Here (/) are the ... films showing in Heidelberg. � � � � (3) User: No, there is nothing interBroadcast Performance esting there, Channel Location (4) User: what is showing on TV? ... ... Figure 1: An excerpt from the SMARTKoM ontology </context>
</contexts>
<marker>Shieber, 1986</marker>
<rawString>Shieber, S. M. (1986). A Simple Reconstruction of GPSG. In Proc. of the 11th COLING (pp. 211–215). Morristown, NJ, USA: Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Wahlster</author>
</authors>
<title>Dialogue Systems Go Multimodal: The Smartkom Experience.</title>
<date>2006</date>
<booktitle>In Smartkom - Foundations of Multimodal Dialogue Systems (pp. 3–27).</booktitle>
<publisher>Springer.</publisher>
<location>Heidelberg, Germany:</location>
<contexts>
<context position="1932" citStr="Wahlster, 2006" startWordPosition="293" endWordPosition="294"> in Heidelberg. � � � � (3) User: No, there is nothing interBroadcast Performance esting there, Channel Location (4) User: what is showing on TV? ... ... Figure 1: An excerpt from the SMARTKoM ontology and the multi-modal interaction of a dialog between the user and the system. ր denotes the pointing gesture by the presentation agent. 320 Proceedings of the 8th International Conference on Computational Semantics, pages 320–325, Tilburg, January 2009. c�2009 International Conference on Computational Semantics A CDU formalization in (Alexandersson &amp; Becker, 2007) is used in the SMARTKOM system (Wahlster, 2006) on the basis of typed feature structures (TFS) and CDU as the knowledge representation and inference mechanism, in order to monitor the discourse processing, where the user’s input, the cover, updates the internal dialogue state, the background, see figure 1. The second crucial point of departure is how Alexandersson and Becker understand to exploit the information inherent to an inheritance hierarchy and henceforward to transfer Carpenter’s notion to a very effective and sound way to specify CDU, which stands in contrast to the formalization by (Grover, Brew, Manandhar, &amp; Moens, 1994)&apos; that </context>
</contexts>
<marker>Wahlster, 2006</marker>
<rawString>Wahlster, W. (2006). Dialogue Systems Go Multimodal: The Smartkom Experience. In Smartkom - Foundations of Multimodal Dialogue Systems (pp. 3–27). Heidelberg, Germany: Springer.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>