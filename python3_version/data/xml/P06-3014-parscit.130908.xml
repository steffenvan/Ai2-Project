<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000043">
<title confidence="0.980351">
Parsing and Subcategorization Data
</title>
<author confidence="0.99879">
Jianguo Li
</author>
<affiliation confidence="0.994227">
Department of Linguistics
The Ohio State University
</affiliation>
<address confidence="0.871736">
Columbus, OH, USA
</address>
<email confidence="0.999456">
jianguo@ling.ohio-state.edu
</email>
<sectionHeader confidence="0.993912" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999869263157895">
In this paper, we compare the per-
formance of a state-of-the-art statistical
parser (Bikel, 2004) in parsing written and
spoken language and in generating sub-
categorization cues from written and spo-
ken language. Although Bikel’s parser
achieves a higher accuracy for parsing
written language, it achieves a higher ac-
curacy when extracting subcategorization
cues from spoken language. Additionally,
we explore the utility of punctuation in
helping parsing and extraction of subcat-
egorization cues. Our experiments show
that punctuation is of little help in pars-
ing spoken language and extracting sub-
categorization cues from spoken language.
This indicates that there is no need to add
punctuation in transcribing spoken cor-
pora simply in order to help parsers.
</bodyText>
<sectionHeader confidence="0.999134" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999884613636364">
Robust statistical syntactic parsers, made possi-
ble by new statistical techniques (Collins, 1999;
Charniak, 2000; Bikel, 2004) and by the avail-
ability of large, hand-annotated training corpora
such as WSJ (Marcus et al., 1993) and Switch-
board (Godefrey et al., 1992), have had a major
impact on the field of natural language process-
ing. There are many ways to make use of parsers’
output. One particular form of data that can be ex-
tracted from parses is information about subcate-
gorization. Subcategorization data comes in two
forms: subcategorization frame (SCF) and sub-
categorization cue (SCC). SCFs differ from SCCs
in that SCFs contain only arguments while SCCs
contain both arguments and adjuncts. Both SCFs
and SCCs have been crucial to NLP tasks. For ex-
ample, SCFs have been used for verb disambigua-
tion and classification (Schulte im Walde, 2000;
Merlo and Stevenson, 2001; Lapata and Brew,
2004; Merlo et al., 2005) and SCCs for semantic
role labeling (Xue and Palmer, 2004; Punyakanok
et al., 2005).
Current technology for automatically acquiring
subcategorization data from corpora usually relies
on statistical parsers to generate SCCs. While
great efforts have been made in parsing written
texts and extracting subcategorization data from
written texts, spoken corpora have received little
attention. This is understandable given that spoken
language poses several challenges that are absent
in written texts, including disfluency, uncertainty
about utterance segmentation and lack of punctu-
ation. Roland and Jurafsky (1998) have suggested
that there are substantial subcategorization differ-
ences between written corpora and spoken cor-
pora. For example, while written corpora show a
much higher percentage of passive structures, spo-
ken corpora usually have a higher percentage of
zero-anaphora constructions. We believe that sub-
categorization data derived from spoken language,
if of acceptable quality, would be of more value to
NLP tasks involving a syntactic analysis of spoken
language, but we do not pursue it here.
The goals of this study are as follows:
</bodyText>
<listItem confidence="0.963502">
1. Test the performance of Bikel’s parser in
parsing written and spoken language.
2. Compare the accuracy level of SCCs gen-
erated from parsed written and spoken lan-
guage. We hope that such a comparison will
shed some light on the feasibility of acquiring
SCFs from spoken language using the cur-
</listItem>
<page confidence="0.95329">
79
</page>
<bodyText confidence="0.563948">
Proceedings of the COLING/ACL 2006 Student Research Workshop, pages 79–84,
Sydney, July 2006. c�2006 Association for Computational Linguistics
rent SCF acquisition technology initially de-
signed for written language.
3. Explore the utility of punctuation1 in pars-
ing and extraction of SCCs. It is gen-
erally recognized that punctuation helps in
parsing written texts. For example, Roark
(2001) finds that removing punctuation from
both training and test data (WSJ) decreases
his parser’s accuracy from 86.4%/86.8%
(LR/LP) to 83.4%/84.1%. However, spo-
ken language does not come with punctua-
tion. Even when punctuation is added in the
process of transcription, its utility in help-
ing parsing is slight. Both Roark (2001)
and Engel et al. (2002) report that removing
punctuation from both training and test data
(Switchboard) results in only 1% decrease in
their parser’s accuracy.
</bodyText>
<sectionHeader confidence="0.969733" genericHeader="method">
2 Experiment Design
</sectionHeader>
<bodyText confidence="0.9819655">
Three models will be investigated for parsing and
extracting SCCs from the parser’s output:
</bodyText>
<listItem confidence="0.9987465">
1. punc: leaving punctuation in both training
and test data.
2. no-punc: removing punctuation from both
training and test data.
3. punc-no-punc: removing punctuation from
only test data.
</listItem>
<bodyText confidence="0.998006181818182">
Following the convention in the parsing com-
munity, for written language, we selected sections
02-21 of WSJ as training data and section 23 as
test data (Collins, 1999). For spoken language, we
designated section 2 and 3 of Switchboard as train-
ing data and files of sw4004 to sw4135 of section 4
as test data (Roark, 2001). Since we are also inter-
ested in extracting SCCs from the parser’s output,
we eliminated from the two test corpora all sen-
tences that do not contain verbs. Our experiments
proceed in the following three steps:
</bodyText>
<listItem confidence="0.99792725">
1. Tag test data using the POS-tagger described
in Ratnaparkhi (1996).
2. Parse the POS-tagged data using Bikel’s
parser.
</listItem>
<footnote confidence="0.888965">
1We use punctuation to refer to sentence-internal punctu-
ation unless otherwise specified.
</footnote>
<table confidence="0.851988571428571">
label clause type desired SCCs
gerundive (NP)-GERUND
S small clause NP-NP, (NP)-ADJP
control (NP)-INF-to
control (NP)-INF-wh-to
SBAR with a complementizer (NP)-S-wh, (NP)-S-that
without a complementizer (NP)-S-that
</table>
<tableCaption confidence="0.993663">
Table 1: SCCs for different clauses
</tableCaption>
<bodyText confidence="0.907321166666667">
3. Extract SCCs from the parser’s output. The
extractor we built first locates each verb in the
parser’s output and then identifies the syntac-
tic categories of all its sisters and combines
them into an SCC. However, there are cases
where the extractor has more work to do.
</bodyText>
<listItem confidence="0.9761416">
• Finite and Infinite Clauses: In the Penn
Treebank, S and SBAR are used to label
different types of clauses, obscuring too
much detail about the internal structure
of each clause. Our extractor is designed
to identify the internal structure of dif-
ferent types of clause, as shown in Table
1.
• Passive Structures: As noted above,
Roland and Jurafsky (Roland and Juraf-
</listItem>
<bodyText confidence="0.815662">
sky, 1998) have noticed that written lan-
guage tends to have a much higher per-
centage of passive structures than spo-
ken language. Our extractor is also
designed to identify passive structures
from the parser’s output.
</bodyText>
<sectionHeader confidence="0.998352" genericHeader="method">
3 Experiment Results
</sectionHeader>
<subsectionHeader confidence="0.999944">
3.1 Parsing and SCCs
</subsectionHeader>
<bodyText confidence="0.8868533">
We used EVALB measures Labeled Recall (LR)
and Labeled Precision (LP) to compare the pars-
ing performance of different models. To compare
the accuracy of SCCs proposed from the parser’s
output, we calculated SCC Recall (SR) and SCC
Precision (SP). SR and SP are defined as follows:
SR =
number of correct cues from the parser’s output (1)
number of cues from treebank parse
number of correct cues from the parser’s output
</bodyText>
<equation confidence="0.9351892">
SP = (2)
number of cues from the parser’s output
2 * SR * SP
SCC Balanced F-measure = (3)
SR + SP
</equation>
<bodyText confidence="0.999968666666667">
The results for parsing WSJ and Switchboard
and extracting SCCs are summarized in Table 2.
The LR/LP figures show the following trends:
</bodyText>
<page confidence="0.992423">
80
</page>
<table confidence="0.9769931">
WSJ
model LR/LP SR/SP
punc 87.92%/88.29% 76.93%/77.70%
no-punc 86.25%/86.91% 76.96%/76.47%
punc-no-punc 82.31%/83.70% 74.62%/74.88%
Switchboard
model LR/LP SR/SP
punc 83.14%/83.80% 79.04%/78.62%
no-punc 82.42%/83.74% 78.81%/78.37%
punc-no-punc 78.62%/80.68% 75.51%/75.02%
</table>
<tableCaption confidence="0.998621">
Table 2: Results of parsing and extraction of SCCs
</tableCaption>
<listItem confidence="0.9237036">
1. Roark (2001) showed LR/LP of
86.4%/86.8% for punctuated written
language, 83.4%/84.1% for unpunctuated
written language. We achieve a higher
accuracy in both punctuated and unpunctu-
ated written language, and the decrease if
punctuation is removed is less
2. For spoken language, Roark (2001) showed
LR/LP of 85.2%/85.6% for punctuated spo-
ken language, 84.0%/84.6% for unpunctu-
ated spoken language. We achieve a lower
accuracy in both punctuated and unpunctu-
ated spoken language, and the decrease if
punctuation is removed is less. The trends in
(1) and (2) may be due to parser differences,
or to the removal of sentences lacking verbs.
3. Unsurprisingly, if the test data is unpunctu-
ated, but the models have been trained on
punctuated language, performance decreases
sharply.
</listItem>
<bodyText confidence="0.9996854">
In terms of the accuracy of extraction of SCCs,
the results follow a similar pattern. However, the
utility of punctuation turns out to be even smaller.
Removing punctuation from both training and test
data results in a less than 0.3% drop in the accu-
racy of SCC extraction.
Figure 1 exhibits the relation between the ac-
curacy of parsing and that of extracting SCCs.
If we consider WSJ and Switchboard individu-
ally, there seems to exist a positive correlation
between the accuracy of parsing and that of ex-
tracting SCCs. In other words, higher LR/LP
indicates higher SR/SP. However, Figure 1 also
shows that although the parser achieves a higher
F-measure value for paring WSJ, it achieves a
higher F-measure value when generating SCCs
from Switchboard.
The fact that the parser achieves a higher accu-
racy for extracting SCCs from Switchboard than
WSJ merits further discussion. Intuitively, it
</bodyText>
<figure confidence="0.8690715">
punc no−punc punc−no−punc
Models
</figure>
<figureCaption confidence="0.97916">
Figure 1: F-measure for parsing and extraction of
SCCs
</figureCaption>
<bodyText confidence="0.999897523809524">
seems to be true that the shorter an SCC is, the
more likely that the parser is to get it right. This
intuition is confirmed by the data shown in Fig-
ure 2. Figure 2 plots the accuracy level of extract-
ing SCCs by SCC’s length. It is clear from Fig-
ure 2 that as SCCs get longer, the F-measure value
drops progressively for both WSJ and Switch-
board. Again, Roland and Jurafsky (1998) have
suggested that one major subcategorization differ-
ence between written and spoken corpora is that
spoken corpora have a much higher percentage of
the zero-anaphora construction. We then exam-
ined the distribution of SCCs of different length in
WSJ and Switchboard. Figure 3 shows that SCCs
of length 02 account for a much higher percentage
in Switchboard than WSJ, but it is always the other
way around for SCCs of non-zero length. This
observation led us to believe that the better per-
formance that Bikel’s parser achieves in extracting
SCCs from Switchboard may be attributed to the
following two factors:
</bodyText>
<listItem confidence="0.9896975">
1. Switchboard has a much higher percentage of
SCCs of length 0.
2. The parser is very accurate in extracting
shorter SCCs.
</listItem>
<subsectionHeader confidence="0.999796">
3.2 Extraction of Dependents
</subsectionHeader>
<bodyText confidence="0.9991982">
In order to estimate the effects of SCCs of length
0, we examined the parser’s performance in re-
trieving dependents of verbs. Every constituent
(whether an argument or adjunct) in an SCC gen-
erated by the parser is considered a dependent of
</bodyText>
<footnote confidence="0.93181">
2Verbs have a length-0 SCC if they are intransitive and
have no modifiers.
</footnote>
<figure confidence="0.973899444444445">
90
88
86
84
82
80
78
76
74
WSJ parsing
Switchboard parsing
WSJ SCC
Switchboard SCC
F−measure(%)
81
0 1 2 3 4
Length of SCC
Length of SCCs
</figure>
<figureCaption confidence="0.999997">
Figure 3: Distribution of SCCs by length
</figureCaption>
<bodyText confidence="0.998957555555556">
that verb. SCCs of length 0 will be discounted be-
cause verbs that do not take any arguments or ad-
juncts have no dependents3. In addition, this way
of evaluating the extraction of SCCs also matches
the practice in some NLP tasks such as semantic
role labeling (Xue and Palmer, 2004). For the task
of semantic role labeling, the total number of de-
pendents correctly retrieved from the parser’s out-
put affects the accuracy level of the task.
To do this, we calculated the number of depen-
dents shared by between each SCC proposed from
the parser’s output and its corresponding SCC pro-
posed from Penn Treebank. We based our cal-
culation on a modified version of Minimum Edit
Distance Algorithm. Our algorithm works by cre-
ating a shared-dependents matrix with one col-
umn for each constituent in the target sequence
(SCCs proposed from Penn Treebank) and one
</bodyText>
<footnote confidence="0.886211666666667">
3We are aware that subjects are typically also consid-
ered dependents, but we did not include subjects in our
experiments
</footnote>
<equation confidence="0.9710674">
shared-dependents[i.j] = MAX(
shared-dependents[i-1,j],
shared-dependents[i-1,j-1]+1 iftarget[i] = source[j],
shared-dependents[i-1,j-1] if target[i] != source[j],
shared-dependents[i,j-1])
</equation>
<tableCaption confidence="0.902253">
Table 3: The algorithm for computing shared de-
pendents
</tableCaption>
<table confidence="0.999940857142857">
INF #5 1 1 2 3
ADVP #4 1 1 2 2
PP-in #3 1 1 2 2
NP #2 1 1 1 1
NP #1 1 1 1 1
#0 #1 #2 #3 #4
NP S-that PP-in INF
</table>
<tableCaption confidence="0.951731">
Table 4: An example of computing the number of
shared dependents
</tableCaption>
<bodyText confidence="0.9904648">
row for each constituent in the source sequence
(SCCs proposed from the parser’s output). Each
cell shared-dependent[i,j] contains the number of
constituents shared between the first i constituents
of the target sequence and the first j constituents of
the source sequence. Each cell can then be com-
puted as a simple function of the three possible
paths through the matrix that arrive there. The al-
gorithm is illustrated in Table 3.
Table 4 shows an example of how the algo-
rithm works with NP-S-that-PP-in-INF as the tar-
get sequence and NP-NP-PP-in-ADVP-INF as the
source sequence. The algorithm returns 3 as the
number of dependents shared by two SCCs.
We compared the performance of Bikel’s parser
in retrieving dependents from written and spo-
ken language over all three models using De-
pendency Recall (DR) and Dependency Precision
(DP). These metrics are defined as follows:
number of correct dependents from parser’s output
</bodyText>
<equation confidence="0.90744575">
DR =
number of dependents from treebank parse
number of correct dependents from parser’s output
DP =
number of dependents from parser’s output
2 * DR * DP
Dependency F-measure = (6)
DR + DP
</equation>
<bodyText confidence="0.999103857142857">
The results of Bikel’s parser in retrieving depen-
dents are summarized in Figure 4. Overall, the
parser achieves a better performance for WSJ over
all three models, just the opposite of what have
been observed for SCC extraction. Interestingly,
removing punctuation from both the training and
test data actually slightly improves the F-measure.
</bodyText>
<note confidence="0.362677">
WSJ
Switchboard
</note>
<figureCaption confidence="0.735375">
Figure 2: F-measure for SCCs of different length
</figureCaption>
<figure confidence="0.999154736842105">
WSJ
Switchboard
0 1 2 3 4
Percentage(%) 60
50
40
30
20
10
0
F−measure(%) 90
80
70
60
50
40
30
20
10
</figure>
<page confidence="0.995115">
82
</page>
<bodyText confidence="0.999713">
This holds true for both WSJ and Switchboard.
This Dependency F-measure differs in detail from
similar measures in (Xue and Palmer, 2004). For
present purposes all that matters is the relative
value for WSJ and Switchboard.
</bodyText>
<figure confidence="0.776734">
punc no−punc punc−no−punc
Models
</figure>
<figureCaption confidence="0.995524">
Figure 4: F-measure for extracting dependents
</figureCaption>
<sectionHeader confidence="0.986556" genericHeader="conclusions">
4 Conclusions and Future Work
</sectionHeader>
<subsectionHeader confidence="0.999675">
4.1 Use of Parser’s Output
</subsectionHeader>
<bodyText confidence="0.999915444444444">
In this paper, we have shown that it is not nec-
essarily true that statistical parsers always per-
form worse when dealing with spoken language.
The conventional accuracy metrics for parsing
(LR/LP) should not be taken as the only metrics
in determining the feasibility of applying statisti-
cal parsers to spoken language. It is necessary to
consider what information we want to extract out
of parsers’ output and make use of.
</bodyText>
<listItem confidence="0.968289578947368">
1. Extraction of SCFs from Corpora: This task
usually proceeds in two stages: (i) Use sta-
tistical parsers to generate SCCs. (ii) Ap-
ply some statistical tests such as the Bino-
mial Hypothesis Test (Brent, 1993) and log-
likelihood ratio score (Dunning, 1993) to
SCCs to filter out false SCCs on the basis of
their reliability and likelihood. Our experi-
ments show that the SCCs generated for spo-
ken language are as accurate as those gen-
erated for written language, which suggests
that it is feasible to apply the current technol-
ogy for automatically extracting SCFs from
corpora to spoken language.
2. Semantic Role Labeling: This task usually
operates on parsers’ output and the number
of dependents of each verb that are correctly
retrieved by the parser clearly affects the ac-
curacy of the task. Our experiments show
</listItem>
<bodyText confidence="0.994830285714286">
that the parser achieves a much lower accu-
racy in retrieving dependents from the spoken
language than written language. This seems
to suggest that a lower accuracy is likely to
be achieved for a semantic role labeling task
performed on spoken language. We are not
aware that this has yet been tried.
</bodyText>
<subsectionHeader confidence="0.967362">
4.2 Punctuation and Speech Transcription
Practice
</subsectionHeader>
<bodyText confidence="0.999923928571429">
Both our experiments and Roark’s experiments
show that parsing accuracy measured by LR/LP
experiences a sharper decrease for WSJ than
Switchboard after we removed punctuation from
training and test data. In spoken language, com-
mas are largely used to delimit disfluency ele-
ments. As noted in Engel et al. (2002), statis-
tical parsers usually condition the probability of
a constituent on the types of its neighboring con-
stituents. The way that commas are used in speech
transcription seems to have the effect of increasing
the range of neighboring constituents, thus frag-
menting the data and making it less reliable. On
the other hand, in written texts, commas serve as
more reliable cues for parsers to identify phrasal
and clausal boundaries.
In addition, our experiment demonstrates that
punctuation does not help much with extraction of
SCCs from spoken language. Removing punctua-
tion from both the training and test data results in a
less than 0.3% decrease in SR/SP. Furthermore, re-
moving punctuation from both the training and test
data actually slightly improves the performance
of Bikel’s parser in retrieving dependents from
spoken language. All these results seem to sug-
gest that adding punctuation in speech transcrip-
tion is of little help to statistical parsers includ-
ing at least three state-of-the-art statistical parsers
(Collins, 1999; Charniak, 2000; Bikel, 2004). As a
result, there may be other good reasons why some-
one who wants to build a Switchboard-like corpus
should choose to provide punctuation, but there is
no need to do so simply in order to help parsers.
However, segmenting utterances into individual
units is necessary because statistical parsers re-
quire sentence boundaries to be clearly delimited.
Current statistical parsers are unable to handle an
input string consisting of two sentences. For ex-
ample, when presented with an input string as in
(1) and (2), if the two sentences are separated by a
period (1), Bikel’s parser wrongly treats the sec-
ond sentence as a sentential complement of the
</bodyText>
<figure confidence="0.991335571428571">
WSJ
Switchboard
F−measure(%) 86
84
82
80
78
</figure>
<page confidence="0.996622">
83
</page>
<bodyText confidence="0.9997368">
main verb like in the first sentence. As a result, the
extractor generates an SCC NP-S for like, which is
incorrect. The parser returns the same parse after
we removed the period (2) and let the parser parse
it again.
</bodyText>
<listItem confidence="0.935797666666667">
(1) I like the long hair. It was back in high
school.
(2) I like the long hair It was back in high school.
</listItem>
<bodyText confidence="0.999834571428571">
Hence, while adding punctuation in transcribing
a Switchboard-like corpus is not of much help to
statistical parsers, segmenting utterances into in-
dividual units is crucial for statistical parsers. In
future work, we plan to develop a system capa-
ble of automatically segmenting speech utterances
into individual units.
</bodyText>
<sectionHeader confidence="0.999667" genericHeader="acknowledgments">
5 Acknowledgments
</sectionHeader>
<bodyText confidence="0.99886375">
This study was supported by NSF grant 0347799.
Our thanks go to Chris Brew, Eric Fosler-Lussier,
Mike White and three anonymous reviewers for
their valuable comments.
</bodyText>
<sectionHeader confidence="0.999059" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999960672131147">
D. Bikel. 2004. Intricacies of Collin’s parsing models.
Computational Linguistics, 30(2):479–511.
M. Brent. 1993. From grammar to lexicon: Unsu-
pervised learning of lexical syntax. Computational
Linguistics, 19(3):243–262.
E. Charniak. 2000. A maximum-entropy-inspired
parser. In Proceedings of the 2000 Conference of
the North American Chapter of the Association for
Computation Linguistics, pages 132–139.
M. Collins. 1999. Head-driven statistical models for
natural language parsing. Ph.D. thesis, University
of Pennsylvania.
T. Dunning. 1993. Accurate methods for the statistics
of surprise and coincidence. Computational Lin-
guistics, 19(1):61–74.
D. Engel, E. Charniak, and M. Johnson. 2002. Parsing
and disfluency placement. In Proceedings of 2002
Conference on Empirical Methods of Natural Lan-
guage Processing, pages 49–54.
J. Godefrey, E. Holliman, and J. McDaniel. 1992.
SWITCHBOARD: Telephone speech corpus for
research and development. In Proceedings of
ICASSP-92, pages 517–520.
M. Lapata and C. Brew. 2004. Verb class disambigua-
tion using informative priors. Computational Lin-
guistics, 30(1):45–73.
M. Marcus, G. Kim, and M. Marcinkiewicz. 1993.
Building a large annotated corpus of English:
the Penn Treebank. Computational Linguistics,
19(2):313–330.
P. Merlo and S. Stevenson. 2001. Automatic
verb classification based on statistical distribution
of argument structure. Computational Linguistics,
27(3):373–408.
P. Merlo, E. Joanis, and J. Henderson. 2005. Unsuper-
vised verb class disambiguation based on diathesis
alternations. manuscripts.
V. Punyakanok, D. Roth, and W. Yih. 2005. The neces-
sity of syntactic parsing for semantic role labeling.
In Proceedings of the 2nd Midwest Computational
Linguistics Colloquium, pages 15–22.
A. Ratnaparkhi. 1996. A maximum entropy model for
part-of-speech tagging. In Proceedings of the Con-
ference on Empirical Methods of Natural Language
Processing, pages 133–142.
B. Roark. 2001. Robust Probabilistic Predictive
Processing: Motivation, Models, and Applications.
Ph.D. thesis, Brown University.
D. Roland and D. Jurafsky. 1998. How verb sub-
categorization frequency is affected by the corpus
choice. In Proceedings of the 17th International
Conference on Computational Linguistics, pages
1122–1128.
S. Schulte im Walde. 2000. Clustering verbs semanti-
cally according to alternation behavior. In Proceed-
ings of the 18th International Conference on Com-
putational Linguistics, pages 747–753.
N. Xue and M. Palmer. 2004. Calibrating features for
semantic role labeling. In Proceedings of2004 Con-
ference on Empirical Methods in Natural Language
Processing, pages 88–94.
</reference>
<page confidence="0.999241">
84
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.926324">
<title confidence="0.999944">Parsing and Subcategorization Data</title>
<author confidence="0.999087">Jianguo Li</author>
<affiliation confidence="0.9998095">Department of Linguistics The Ohio State University</affiliation>
<address confidence="0.999978">Columbus, OH, USA</address>
<email confidence="0.99986">jianguo@ling.ohio-state.edu</email>
<abstract confidence="0.99236735">In this paper, we compare the performance of a state-of-the-art statistical parser (Bikel, 2004) in parsing written and spoken language and in generating subcategorization cues from written and spoken language. Although Bikel’s parser achieves a higher accuracy for parsing written language, it achieves a higher accuracy when extracting subcategorization cues from spoken language. Additionally, we explore the utility of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>D Bikel</author>
</authors>
<title>Intricacies of Collin’s parsing models.</title>
<date>2004</date>
<journal>Computational Linguistics,</journal>
<volume>30</volume>
<issue>2</issue>
<contexts>
<context position="1053" citStr="Bikel, 2004" startWordPosition="151" endWordPosition="152">ge, it achieves a higher accuracy when extracting subcategorization cues from spoken language. Additionally, we explore the utility of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers. 1 Introduction Robust statistical syntactic parsers, made possible by new statistical techniques (Collins, 1999; Charniak, 2000; Bikel, 2004) and by the availability of large, hand-annotated training corpora such as WSJ (Marcus et al., 1993) and Switchboard (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have</context>
<context position="17103" citStr="Bikel, 2004" startWordPosition="2777" endWordPosition="2778">ent demonstrates that punctuation does not help much with extraction of SCCs from spoken language. Removing punctuation from both the training and test data results in a less than 0.3% decrease in SR/SP. Furthermore, removing punctuation from both the training and test data actually slightly improves the performance of Bikel’s parser in retrieving dependents from spoken language. All these results seem to suggest that adding punctuation in speech transcription is of little help to statistical parsers including at least three state-of-the-art statistical parsers (Collins, 1999; Charniak, 2000; Bikel, 2004). As a result, there may be other good reasons why someone who wants to build a Switchboard-like corpus should choose to provide punctuation, but there is no need to do so simply in order to help parsers. However, segmenting utterances into individual units is necessary because statistical parsers require sentence boundaries to be clearly delimited. Current statistical parsers are unable to handle an input string consisting of two sentences. For example, when presented with an input string as in (1) and (2), if the two sentences are separated by a period (1), Bikel’s parser wrongly treats the </context>
</contexts>
<marker>Bikel, 2004</marker>
<rawString>D. Bikel. 2004. Intricacies of Collin’s parsing models. Computational Linguistics, 30(2):479–511.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Brent</author>
</authors>
<title>From grammar to lexicon: Unsupervised learning of lexical syntax.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>3</issue>
<contexts>
<context position="14766" citStr="Brent, 1993" startWordPosition="2400" endWordPosition="2401">ave shown that it is not necessarily true that statistical parsers always perform worse when dealing with spoken language. The conventional accuracy metrics for parsing (LR/LP) should not be taken as the only metrics in determining the feasibility of applying statistical parsers to spoken language. It is necessary to consider what information we want to extract out of parsers’ output and make use of. 1. Extraction of SCFs from Corpora: This task usually proceeds in two stages: (i) Use statistical parsers to generate SCCs. (ii) Apply some statistical tests such as the Binomial Hypothesis Test (Brent, 1993) and loglikelihood ratio score (Dunning, 1993) to SCCs to filter out false SCCs on the basis of their reliability and likelihood. Our experiments show that the SCCs generated for spoken language are as accurate as those generated for written language, which suggests that it is feasible to apply the current technology for automatically extracting SCFs from corpora to spoken language. 2. Semantic Role Labeling: This task usually operates on parsers’ output and the number of dependents of each verb that are correctly retrieved by the parser clearly affects the accuracy of the task. Our experiment</context>
</contexts>
<marker>Brent, 1993</marker>
<rawString>M. Brent. 1993. From grammar to lexicon: Unsupervised learning of lexical syntax. Computational Linguistics, 19(3):243–262.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
</authors>
<title>A maximum-entropy-inspired parser.</title>
<date>2000</date>
<booktitle>In Proceedings of the 2000 Conference of the North American Chapter of the Association for Computation Linguistics,</booktitle>
<pages>132--139</pages>
<contexts>
<context position="1039" citStr="Charniak, 2000" startWordPosition="149" endWordPosition="150">g written language, it achieves a higher accuracy when extracting subcategorization cues from spoken language. Additionally, we explore the utility of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers. 1 Introduction Robust statistical syntactic parsers, made possible by new statistical techniques (Collins, 1999; Charniak, 2000; Bikel, 2004) and by the availability of large, hand-annotated training corpora such as WSJ (Marcus et al., 1993) and Switchboard (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs</context>
<context position="17089" citStr="Charniak, 2000" startWordPosition="2775" endWordPosition="2776">ion, our experiment demonstrates that punctuation does not help much with extraction of SCCs from spoken language. Removing punctuation from both the training and test data results in a less than 0.3% decrease in SR/SP. Furthermore, removing punctuation from both the training and test data actually slightly improves the performance of Bikel’s parser in retrieving dependents from spoken language. All these results seem to suggest that adding punctuation in speech transcription is of little help to statistical parsers including at least three state-of-the-art statistical parsers (Collins, 1999; Charniak, 2000; Bikel, 2004). As a result, there may be other good reasons why someone who wants to build a Switchboard-like corpus should choose to provide punctuation, but there is no need to do so simply in order to help parsers. However, segmenting utterances into individual units is necessary because statistical parsers require sentence boundaries to be clearly delimited. Current statistical parsers are unable to handle an input string consisting of two sentences. For example, when presented with an input string as in (1) and (2), if the two sentences are separated by a period (1), Bikel’s parser wrong</context>
</contexts>
<marker>Charniak, 2000</marker>
<rawString>E. Charniak. 2000. A maximum-entropy-inspired parser. In Proceedings of the 2000 Conference of the North American Chapter of the Association for Computation Linguistics, pages 132–139.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Collins</author>
</authors>
<title>Head-driven statistical models for natural language parsing.</title>
<date>1999</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="1023" citStr="Collins, 1999" startWordPosition="147" endWordPosition="148">racy for parsing written language, it achieves a higher accuracy when extracting subcategorization cues from spoken language. Additionally, we explore the utility of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers. 1 Introduction Robust statistical syntactic parsers, made possible by new statistical techniques (Collins, 1999; Charniak, 2000; Bikel, 2004) and by the availability of large, hand-annotated training corpora such as WSJ (Marcus et al., 1993) and Switchboard (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adj</context>
<context position="4641" citStr="Collins, 1999" startWordPosition="712" endWordPosition="713"> al. (2002) report that removing punctuation from both training and test data (Switchboard) results in only 1% decrease in their parser’s accuracy. 2 Experiment Design Three models will be investigated for parsing and extracting SCCs from the parser’s output: 1. punc: leaving punctuation in both training and test data. 2. no-punc: removing punctuation from both training and test data. 3. punc-no-punc: removing punctuation from only test data. Following the convention in the parsing community, for written language, we selected sections 02-21 of WSJ as training data and section 23 as test data (Collins, 1999). For spoken language, we designated section 2 and 3 of Switchboard as training data and files of sw4004 to sw4135 of section 4 as test data (Roark, 2001). Since we are also interested in extracting SCCs from the parser’s output, we eliminated from the two test corpora all sentences that do not contain verbs. Our experiments proceed in the following three steps: 1. Tag test data using the POS-tagger described in Ratnaparkhi (1996). 2. Parse the POS-tagged data using Bikel’s parser. 1We use punctuation to refer to sentence-internal punctuation unless otherwise specified. label clause type desir</context>
<context position="17073" citStr="Collins, 1999" startWordPosition="2773" endWordPosition="2774">aries. In addition, our experiment demonstrates that punctuation does not help much with extraction of SCCs from spoken language. Removing punctuation from both the training and test data results in a less than 0.3% decrease in SR/SP. Furthermore, removing punctuation from both the training and test data actually slightly improves the performance of Bikel’s parser in retrieving dependents from spoken language. All these results seem to suggest that adding punctuation in speech transcription is of little help to statistical parsers including at least three state-of-the-art statistical parsers (Collins, 1999; Charniak, 2000; Bikel, 2004). As a result, there may be other good reasons why someone who wants to build a Switchboard-like corpus should choose to provide punctuation, but there is no need to do so simply in order to help parsers. However, segmenting utterances into individual units is necessary because statistical parsers require sentence boundaries to be clearly delimited. Current statistical parsers are unable to handle an input string consisting of two sentences. For example, when presented with an input string as in (1) and (2), if the two sentences are separated by a period (1), Bike</context>
</contexts>
<marker>Collins, 1999</marker>
<rawString>M. Collins. 1999. Head-driven statistical models for natural language parsing. Ph.D. thesis, University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Dunning</author>
</authors>
<title>Accurate methods for the statistics of surprise and coincidence.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>1</issue>
<contexts>
<context position="14812" citStr="Dunning, 1993" startWordPosition="2407" endWordPosition="2408">at statistical parsers always perform worse when dealing with spoken language. The conventional accuracy metrics for parsing (LR/LP) should not be taken as the only metrics in determining the feasibility of applying statistical parsers to spoken language. It is necessary to consider what information we want to extract out of parsers’ output and make use of. 1. Extraction of SCFs from Corpora: This task usually proceeds in two stages: (i) Use statistical parsers to generate SCCs. (ii) Apply some statistical tests such as the Binomial Hypothesis Test (Brent, 1993) and loglikelihood ratio score (Dunning, 1993) to SCCs to filter out false SCCs on the basis of their reliability and likelihood. Our experiments show that the SCCs generated for spoken language are as accurate as those generated for written language, which suggests that it is feasible to apply the current technology for automatically extracting SCFs from corpora to spoken language. 2. Semantic Role Labeling: This task usually operates on parsers’ output and the number of dependents of each verb that are correctly retrieved by the parser clearly affects the accuracy of the task. Our experiments show that the parser achieves a much lower a</context>
</contexts>
<marker>Dunning, 1993</marker>
<rawString>T. Dunning. 1993. Accurate methods for the statistics of surprise and coincidence. Computational Linguistics, 19(1):61–74.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Engel</author>
<author>E Charniak</author>
<author>M Johnson</author>
</authors>
<title>Parsing and disfluency placement.</title>
<date>2002</date>
<booktitle>In Proceedings of 2002 Conference on Empirical Methods of Natural Language Processing,</booktitle>
<pages>49--54</pages>
<contexts>
<context position="4038" citStr="Engel et al. (2002)" startWordPosition="617" endWordPosition="620">utational Linguistics rent SCF acquisition technology initially designed for written language. 3. Explore the utility of punctuation1 in parsing and extraction of SCCs. It is generally recognized that punctuation helps in parsing written texts. For example, Roark (2001) finds that removing punctuation from both training and test data (WSJ) decreases his parser’s accuracy from 86.4%/86.8% (LR/LP) to 83.4%/84.1%. However, spoken language does not come with punctuation. Even when punctuation is added in the process of transcription, its utility in helping parsing is slight. Both Roark (2001) and Engel et al. (2002) report that removing punctuation from both training and test data (Switchboard) results in only 1% decrease in their parser’s accuracy. 2 Experiment Design Three models will be investigated for parsing and extracting SCCs from the parser’s output: 1. punc: leaving punctuation in both training and test data. 2. no-punc: removing punctuation from both training and test data. 3. punc-no-punc: removing punctuation from only test data. Following the convention in the parsing community, for written language, we selected sections 02-21 of WSJ as training data and section 23 as test data (Collins, 19</context>
<context position="16034" citStr="Engel et al. (2002)" startWordPosition="2608" endWordPosition="2611">racy in retrieving dependents from the spoken language than written language. This seems to suggest that a lower accuracy is likely to be achieved for a semantic role labeling task performed on spoken language. We are not aware that this has yet been tried. 4.2 Punctuation and Speech Transcription Practice Both our experiments and Roark’s experiments show that parsing accuracy measured by LR/LP experiences a sharper decrease for WSJ than Switchboard after we removed punctuation from training and test data. In spoken language, commas are largely used to delimit disfluency elements. As noted in Engel et al. (2002), statistical parsers usually condition the probability of a constituent on the types of its neighboring constituents. The way that commas are used in speech transcription seems to have the effect of increasing the range of neighboring constituents, thus fragmenting the data and making it less reliable. On the other hand, in written texts, commas serve as more reliable cues for parsers to identify phrasal and clausal boundaries. In addition, our experiment demonstrates that punctuation does not help much with extraction of SCCs from spoken language. Removing punctuation from both the training </context>
</contexts>
<marker>Engel, Charniak, Johnson, 2002</marker>
<rawString>D. Engel, E. Charniak, and M. Johnson. 2002. Parsing and disfluency placement. In Proceedings of 2002 Conference on Empirical Methods of Natural Language Processing, pages 49–54.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Godefrey</author>
<author>E Holliman</author>
<author>J McDaniel</author>
</authors>
<title>SWITCHBOARD: Telephone speech corpus for research and development.</title>
<date>1992</date>
<booktitle>In Proceedings of ICASSP-92,</booktitle>
<pages>517--520</pages>
<contexts>
<context position="1193" citStr="Godefrey et al., 1992" startWordPosition="173" endWordPosition="176">y of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers. 1 Introduction Robust statistical syntactic parsers, made possible by new statistical techniques (Collins, 1999; Charniak, 2000; Bikel, 2004) and by the availability of large, hand-annotated training corpora such as WSJ (Marcus et al., 1993) and Switchboard (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and S</context>
</contexts>
<marker>Godefrey, Holliman, McDaniel, 1992</marker>
<rawString>J. Godefrey, E. Holliman, and J. McDaniel. 1992. SWITCHBOARD: Telephone speech corpus for research and development. In Proceedings of ICASSP-92, pages 517–520.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Lapata</author>
<author>C Brew</author>
</authors>
<title>Verb class disambiguation using informative priors.</title>
<date>2004</date>
<journal>Computational Linguistics,</journal>
<volume>30</volume>
<issue>1</issue>
<contexts>
<context position="1830" citStr="Lapata and Brew, 2004" startWordPosition="279" endWordPosition="282">or impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segmentation and lack of punct</context>
</contexts>
<marker>Lapata, Brew, 2004</marker>
<rawString>M. Lapata and C. Brew. 2004. Verb class disambiguation using informative priors. Computational Linguistics, 30(1):45–73.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Marcus</author>
<author>G Kim</author>
<author>M Marcinkiewicz</author>
</authors>
<title>Building a large annotated corpus of English: the Penn Treebank. Computational Linguistics,</title>
<date>1993</date>
<contexts>
<context position="1153" citStr="Marcus et al., 1993" startWordPosition="166" endWordPosition="169">e. Additionally, we explore the utility of punctuation in helping parsing and extraction of subcategorization cues. Our experiments show that punctuation is of little help in parsing spoken language and extracting subcategorization cues from spoken language. This indicates that there is no need to add punctuation in transcribing spoken corpora simply in order to help parsers. 1 Introduction Robust statistical syntactic parsers, made possible by new statistical techniques (Collins, 1999; Charniak, 2000; Bikel, 2004) and by the availability of large, hand-annotated training corpora such as WSJ (Marcus et al., 1993) and Switchboard (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classificat</context>
</contexts>
<marker>Marcus, Kim, Marcinkiewicz, 1993</marker>
<rawString>M. Marcus, G. Kim, and M. Marcinkiewicz. 1993. Building a large annotated corpus of English: the Penn Treebank. Computational Linguistics, 19(2):313–330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Merlo</author>
<author>S Stevenson</author>
</authors>
<title>Automatic verb classification based on statistical distribution of argument structure.</title>
<date>2001</date>
<journal>Computational Linguistics,</journal>
<volume>27</volume>
<issue>3</issue>
<contexts>
<context position="1807" citStr="Merlo and Stevenson, 2001" startWordPosition="275" endWordPosition="278"> al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segment</context>
</contexts>
<marker>Merlo, Stevenson, 2001</marker>
<rawString>P. Merlo and S. Stevenson. 2001. Automatic verb classification based on statistical distribution of argument structure. Computational Linguistics, 27(3):373–408.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Merlo</author>
<author>E Joanis</author>
<author>J Henderson</author>
</authors>
<title>Unsupervised verb class disambiguation based on diathesis alternations.</title>
<date>2005</date>
<note>manuscripts.</note>
<contexts>
<context position="1851" citStr="Merlo et al., 2005" startWordPosition="283" endWordPosition="286">of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segmentation and lack of punctuation. Roland and Ju</context>
</contexts>
<marker>Merlo, Joanis, Henderson, 2005</marker>
<rawString>P. Merlo, E. Joanis, and J. Henderson. 2005. Unsupervised verb class disambiguation based on diathesis alternations. manuscripts.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Punyakanok</author>
<author>D Roth</author>
<author>W Yih</author>
</authors>
<title>The necessity of syntactic parsing for semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of the 2nd Midwest Computational Linguistics Colloquium,</booktitle>
<pages>15--22</pages>
<contexts>
<context position="1935" citStr="Punyakanok et al., 2005" startWordPosition="297" endWordPosition="300">put. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segmentation and lack of punctuation. Roland and Jurafsky (1998) have suggested that there are substantial subcategorization difference</context>
</contexts>
<marker>Punyakanok, Roth, Yih, 2005</marker>
<rawString>V. Punyakanok, D. Roth, and W. Yih. 2005. The necessity of syntactic parsing for semantic role labeling. In Proceedings of the 2nd Midwest Computational Linguistics Colloquium, pages 15–22.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Ratnaparkhi</author>
</authors>
<title>A maximum entropy model for part-of-speech tagging.</title>
<date>1996</date>
<booktitle>In Proceedings of the Conference on Empirical Methods of Natural Language Processing,</booktitle>
<pages>133--142</pages>
<contexts>
<context position="5075" citStr="Ratnaparkhi (1996)" startWordPosition="788" endWordPosition="789"> only test data. Following the convention in the parsing community, for written language, we selected sections 02-21 of WSJ as training data and section 23 as test data (Collins, 1999). For spoken language, we designated section 2 and 3 of Switchboard as training data and files of sw4004 to sw4135 of section 4 as test data (Roark, 2001). Since we are also interested in extracting SCCs from the parser’s output, we eliminated from the two test corpora all sentences that do not contain verbs. Our experiments proceed in the following three steps: 1. Tag test data using the POS-tagger described in Ratnaparkhi (1996). 2. Parse the POS-tagged data using Bikel’s parser. 1We use punctuation to refer to sentence-internal punctuation unless otherwise specified. label clause type desired SCCs gerundive (NP)-GERUND S small clause NP-NP, (NP)-ADJP control (NP)-INF-to control (NP)-INF-wh-to SBAR with a complementizer (NP)-S-wh, (NP)-S-that without a complementizer (NP)-S-that Table 1: SCCs for different clauses 3. Extract SCCs from the parser’s output. The extractor we built first locates each verb in the parser’s output and then identifies the syntactic categories of all its sisters and combines them into an SCC.</context>
</contexts>
<marker>Ratnaparkhi, 1996</marker>
<rawString>A. Ratnaparkhi. 1996. A maximum entropy model for part-of-speech tagging. In Proceedings of the Conference on Empirical Methods of Natural Language Processing, pages 133–142.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Roark</author>
</authors>
<title>Robust Probabilistic Predictive Processing: Motivation, Models, and Applications.</title>
<date>2001</date>
<tech>Ph.D. thesis,</tech>
<institution>Brown University.</institution>
<contexts>
<context position="3689" citStr="Roark (2001)" startWordPosition="563" endWordPosition="564">uage. 2. Compare the accuracy level of SCCs generated from parsed written and spoken language. We hope that such a comparison will shed some light on the feasibility of acquiring SCFs from spoken language using the cur79 Proceedings of the COLING/ACL 2006 Student Research Workshop, pages 79–84, Sydney, July 2006. c�2006 Association for Computational Linguistics rent SCF acquisition technology initially designed for written language. 3. Explore the utility of punctuation1 in parsing and extraction of SCCs. It is generally recognized that punctuation helps in parsing written texts. For example, Roark (2001) finds that removing punctuation from both training and test data (WSJ) decreases his parser’s accuracy from 86.4%/86.8% (LR/LP) to 83.4%/84.1%. However, spoken language does not come with punctuation. Even when punctuation is added in the process of transcription, its utility in helping parsing is slight. Both Roark (2001) and Engel et al. (2002) report that removing punctuation from both training and test data (Switchboard) results in only 1% decrease in their parser’s accuracy. 2 Experiment Design Three models will be investigated for parsing and extracting SCCs from the parser’s output: 1.</context>
<context position="7365" citStr="Roark (2001)" startWordPosition="1150" endWordPosition="1151">orrect cues from the parser’s output SP = (2) number of cues from the parser’s output 2 * SR * SP SCC Balanced F-measure = (3) SR + SP The results for parsing WSJ and Switchboard and extracting SCCs are summarized in Table 2. The LR/LP figures show the following trends: 80 WSJ model LR/LP SR/SP punc 87.92%/88.29% 76.93%/77.70% no-punc 86.25%/86.91% 76.96%/76.47% punc-no-punc 82.31%/83.70% 74.62%/74.88% Switchboard model LR/LP SR/SP punc 83.14%/83.80% 79.04%/78.62% no-punc 82.42%/83.74% 78.81%/78.37% punc-no-punc 78.62%/80.68% 75.51%/75.02% Table 2: Results of parsing and extraction of SCCs 1. Roark (2001) showed LR/LP of 86.4%/86.8% for punctuated written language, 83.4%/84.1% for unpunctuated written language. We achieve a higher accuracy in both punctuated and unpunctuated written language, and the decrease if punctuation is removed is less 2. For spoken language, Roark (2001) showed LR/LP of 85.2%/85.6% for punctuated spoken language, 84.0%/84.6% for unpunctuated spoken language. We achieve a lower accuracy in both punctuated and unpunctuated spoken language, and the decrease if punctuation is removed is less. The trends in (1) and (2) may be due to parser differences, or to the removal of </context>
</contexts>
<marker>Roark, 2001</marker>
<rawString>B. Roark. 2001. Robust Probabilistic Predictive Processing: Motivation, Models, and Applications. Ph.D. thesis, Brown University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Roland</author>
<author>D Jurafsky</author>
</authors>
<title>How verb subcategorization frequency is affected by the corpus choice.</title>
<date>1998</date>
<booktitle>In Proceedings of the 17th International Conference on Computational Linguistics,</booktitle>
<pages>1122--1128</pages>
<contexts>
<context position="2464" citStr="Roland and Jurafsky (1998)" startWordPosition="368" endWordPosition="371">et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segmentation and lack of punctuation. Roland and Jurafsky (1998) have suggested that there are substantial subcategorization differences between written corpora and spoken corpora. For example, while written corpora show a much higher percentage of passive structures, spoken corpora usually have a higher percentage of zero-anaphora constructions. We believe that subcategorization data derived from spoken language, if of acceptable quality, would be of more value to NLP tasks involving a syntactic analysis of spoken language, but we do not pursue it here. The goals of this study are as follows: 1. Test the performance of Bikel’s parser in parsing written an</context>
<context position="6120" citStr="Roland and Jurafsky, 1998" startWordPosition="950" endWordPosition="954">parser’s output. The extractor we built first locates each verb in the parser’s output and then identifies the syntactic categories of all its sisters and combines them into an SCC. However, there are cases where the extractor has more work to do. • Finite and Infinite Clauses: In the Penn Treebank, S and SBAR are used to label different types of clauses, obscuring too much detail about the internal structure of each clause. Our extractor is designed to identify the internal structure of different types of clause, as shown in Table 1. • Passive Structures: As noted above, Roland and Jurafsky (Roland and Jurafsky, 1998) have noticed that written language tends to have a much higher percentage of passive structures than spoken language. Our extractor is also designed to identify passive structures from the parser’s output. 3 Experiment Results 3.1 Parsing and SCCs We used EVALB measures Labeled Recall (LR) and Labeled Precision (LP) to compare the parsing performance of different models. To compare the accuracy of SCCs proposed from the parser’s output, we calculated SCC Recall (SR) and SCC Precision (SP). SR and SP are defined as follows: SR = number of correct cues from the parser’s output (1) number of cue</context>
<context position="9493" citStr="Roland and Jurafsky (1998)" startWordPosition="1502" endWordPosition="1505">rom Switchboard. The fact that the parser achieves a higher accuracy for extracting SCCs from Switchboard than WSJ merits further discussion. Intuitively, it punc no−punc punc−no−punc Models Figure 1: F-measure for parsing and extraction of SCCs seems to be true that the shorter an SCC is, the more likely that the parser is to get it right. This intuition is confirmed by the data shown in Figure 2. Figure 2 plots the accuracy level of extracting SCCs by SCC’s length. It is clear from Figure 2 that as SCCs get longer, the F-measure value drops progressively for both WSJ and Switchboard. Again, Roland and Jurafsky (1998) have suggested that one major subcategorization difference between written and spoken corpora is that spoken corpora have a much higher percentage of the zero-anaphora construction. We then examined the distribution of SCCs of different length in WSJ and Switchboard. Figure 3 shows that SCCs of length 02 account for a much higher percentage in Switchboard than WSJ, but it is always the other way around for SCCs of non-zero length. This observation led us to believe that the better performance that Bikel’s parser achieves in extracting SCCs from Switchboard may be attributed to the following t</context>
</contexts>
<marker>Roland, Jurafsky, 1998</marker>
<rawString>D. Roland and D. Jurafsky. 1998. How verb subcategorization frequency is affected by the corpus choice. In Proceedings of the 17th International Conference on Computational Linguistics, pages 1122–1128.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Schulte im Walde</author>
</authors>
<title>Clustering verbs semantically according to alternation behavior.</title>
<date>2000</date>
<booktitle>In Proceedings of the 18th International Conference on Computational Linguistics,</booktitle>
<pages>747--753</pages>
<contexts>
<context position="1780" citStr="Walde, 2000" startWordPosition="273" endWordPosition="274"> (Godefrey et al., 1992), have had a major impact on the field of natural language processing. There are many ways to make use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertai</context>
</contexts>
<marker>Walde, 2000</marker>
<rawString>S. Schulte im Walde. 2000. Clustering verbs semantically according to alternation behavior. In Proceedings of the 18th International Conference on Computational Linguistics, pages 747–753.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Xue</author>
<author>M Palmer</author>
</authors>
<title>Calibrating features for semantic role labeling.</title>
<date>2004</date>
<booktitle>In Proceedings of2004 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>88--94</pages>
<contexts>
<context position="1909" citStr="Xue and Palmer, 2004" startWordPosition="293" endWordPosition="296">ke use of parsers’ output. One particular form of data that can be extracted from parses is information about subcategorization. Subcategorization data comes in two forms: subcategorization frame (SCF) and subcategorization cue (SCC). SCFs differ from SCCs in that SCFs contain only arguments while SCCs contain both arguments and adjuncts. Both SCFs and SCCs have been crucial to NLP tasks. For example, SCFs have been used for verb disambiguation and classification (Schulte im Walde, 2000; Merlo and Stevenson, 2001; Lapata and Brew, 2004; Merlo et al., 2005) and SCCs for semantic role labeling (Xue and Palmer, 2004; Punyakanok et al., 2005). Current technology for automatically acquiring subcategorization data from corpora usually relies on statistical parsers to generate SCCs. While great efforts have been made in parsing written texts and extracting subcategorization data from written texts, spoken corpora have received little attention. This is understandable given that spoken language poses several challenges that are absent in written texts, including disfluency, uncertainty about utterance segmentation and lack of punctuation. Roland and Jurafsky (1998) have suggested that there are substantial su</context>
<context position="11033" citStr="Xue and Palmer, 2004" startWordPosition="1771" endWordPosition="1774">n argument or adjunct) in an SCC generated by the parser is considered a dependent of 2Verbs have a length-0 SCC if they are intransitive and have no modifiers. 90 88 86 84 82 80 78 76 74 WSJ parsing Switchboard parsing WSJ SCC Switchboard SCC F−measure(%) 81 0 1 2 3 4 Length of SCC Length of SCCs Figure 3: Distribution of SCCs by length that verb. SCCs of length 0 will be discounted because verbs that do not take any arguments or adjuncts have no dependents3. In addition, this way of evaluating the extraction of SCCs also matches the practice in some NLP tasks such as semantic role labeling (Xue and Palmer, 2004). For the task of semantic role labeling, the total number of dependents correctly retrieved from the parser’s output affects the accuracy level of the task. To do this, we calculated the number of dependents shared by between each SCC proposed from the parser’s output and its corresponding SCC proposed from Penn Treebank. We based our calculation on a modified version of Minimum Edit Distance Algorithm. Our algorithm works by creating a shared-dependents matrix with one column for each constituent in the target sequence (SCCs proposed from Penn Treebank) and one 3We are aware that subjects ar</context>
<context position="13912" citStr="Xue and Palmer, 2004" startWordPosition="2257" endWordPosition="2260">r in retrieving dependents are summarized in Figure 4. Overall, the parser achieves a better performance for WSJ over all three models, just the opposite of what have been observed for SCC extraction. Interestingly, removing punctuation from both the training and test data actually slightly improves the F-measure. WSJ Switchboard Figure 2: F-measure for SCCs of different length WSJ Switchboard 0 1 2 3 4 Percentage(%) 60 50 40 30 20 10 0 F−measure(%) 90 80 70 60 50 40 30 20 10 82 This holds true for both WSJ and Switchboard. This Dependency F-measure differs in detail from similar measures in (Xue and Palmer, 2004). For present purposes all that matters is the relative value for WSJ and Switchboard. punc no−punc punc−no−punc Models Figure 4: F-measure for extracting dependents 4 Conclusions and Future Work 4.1 Use of Parser’s Output In this paper, we have shown that it is not necessarily true that statistical parsers always perform worse when dealing with spoken language. The conventional accuracy metrics for parsing (LR/LP) should not be taken as the only metrics in determining the feasibility of applying statistical parsers to spoken language. It is necessary to consider what information we want to ex</context>
</contexts>
<marker>Xue, Palmer, 2004</marker>
<rawString>N. Xue and M. Palmer. 2004. Calibrating features for semantic role labeling. In Proceedings of2004 Conference on Empirical Methods in Natural Language Processing, pages 88–94.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>