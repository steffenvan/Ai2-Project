<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.038208">
<title confidence="0.9981715">
Introduction to the Special Issue on
Finite-State Methods in NLP
</title>
<author confidence="0.98411">
Lauri Karttunen* Kemal Oflazert
</author>
<affiliation confidence="0.574046">
Xerox Research Centre Europe Bilkent University
</affiliation>
<bodyText confidence="0.995225621621622">
The idea for this special issue came up during the preparations of the International
Workshop on Finite-State Methods in Natural Language Processing, that was held at
Bilkent University in Ankara, Turkey in the summer of 1998. The number of the sub-
missions had exceeded our initial expectations and we were able to select quite a good
set of papers from those submitted. Further, the workshop and the preceding tutorial
by Kenneth Beesley, on finite-state methods, was attended by quite a large number of
participants. This led us to believe that interest in the theory and applications of finite-
state machinery was alive and well, and that some of the papers from this workshop
along with further additional submissions could make a very good special issue for
this journal. The five papers in this issue are the result of this process.
The last decade has seen a quite a substantial surge in the use of finite-state meth-
ods in all aspects of natural language applications. Fueled by the theoretical contribu-
tions of Kaplan and Kay (1994), Mohri&apos;s recent contributions on the use of finite-state
techniques in various NLP problems (Mohri 1996, 1997), the success of finite-state ap-
proaches especially in computational morphology, for example, Koskenniemi (1983),
Karttunen (1983), and Karttunen, Kaplan, and Zaenen (1992), and, finally, the avail-
ability of state-of-the-art tools for building and manipulating large-scale finite-state
systems (Karttunen 1993; Karttunen and Beesley 1992; Karttunen et al. 1996; Mohri,
Pereira, and Riley 1998; van Noord 1999), recent years have seen many successful
applications of finite-state approaches in tagging, spell checking, information extrac-
tion, parsing, speech recognition, and text-to-speech applications. This is a remarkable
comeback considering that in the dawn of modern linguistics (Chomsky 1957), finite-
state grammars were dismissed as fundamentally inadequate. As a result, most of the
work in computational linguistics in the past few decades has been focused on far
more powerful formalisms.
Recent publications on finite-state technology include two collections of papers
(Roche and Schabes 1997; Kornai 1999) with contributions covering a wide range of
these topics. This special issue, we hope, will add to these contributions.
The five papers in this collection cover many aspects of finite-state theory and
applications. The papers Treatment of Epsilon Moves in Subset Construction by van Noord
and Incremental Construction of Minimal Acyclic Finite-State Automata and Transducers by
Daciuk, Watson, Watson, and Mihov, address two fundamental aspects in the con-
struction of finite-state recognizers. Van Noord presents results for various methods
for producing a deterministic automaton with no epsilon transitions from a nondeter-
ministic automaton with a large number of epsilon transitions, especially those result-
ing from finite-state approximations of context-free and more powerful formalisms.
Daciuk et al. present a new method for constructing minimal, deterministic, acyclic
</bodyText>
<footnote confidence="0.4647345">
* 6, chemin de Maupertuis, 38240, Meylan, France
t Bilkent, TR-06533, Ankara, Turkey
© 2000 Association for Computational Linguistics
Computational Linguistics Volume 26, Number 1
</footnote>
<bodyText confidence="0.9990319">
finite-state machines from a list of input strings, in a single pass. Practical Experiments
with Regular Approximations of Context-free Languages by Nederhof, presents evaluations
of various regular approximation algorithms on actual grammars, providing insights
into pros and cons of such algorithms. Multitiered Nonlinear Morphology Using Multitape
Finite Automata: A Case Study on Semitic by Kiraz presents the formalism and implemen-
tation of an approach for dealing with nonlinear phenomena found in the morphology
of semitic languages and compares his approach with other systems that have been
proposed for the same languages. Finally, Learning Dependency Translation Models as Col-
lections of Finite-State Head Transducers by Alshawi, Bangalore, and Douglas, presents
an application of the finite-state transducer framework in a machine translation task
where weighted finite-state head transducers induced from a corpus of aligned par-
allel sentences are used to recursively map headwords from the source to the target
language.
Our guest editorial board for this issue included Ken Beesley, Eric Brill, Eva
Ejerhed, George Kiraz, Andras Kornai, Mehryar Mohri, Mark-Jan Nederhof, Mar-
tin Kay, Ron Kaplan, and Atro Voutilainen; we received additional help from many
other reviewers. Julia Hirschberg, editor-in-chief of Computational Linguistics, helped us
through all aspects of the selection process, guiding us around many intricate issues.
We thank the guest editorial board, the additional reviewers, and Julia for their superb
contributions. We hope you find this special issue well worth the effort.
</bodyText>
<sectionHeader confidence="0.959305" genericHeader="abstract">
References
</sectionHeader>
<bodyText confidence="0.964923">
Chomsky, Noam. 1957. Syntactic Structures.
Mouton, The Hague.
Kaplan, Ronald M. and Martin Kay.1994.
Regular models of phonological rule
systems. Computational Linguistics,
20(3):331-378.
Karttunen, Lauri. 1983. KIMMO: A general
morphological processor. Texas Linguistic
Forum, 22:163-186.
Karttunen, Lauri. 1993. Finite-state lexicon
compiler. Technical Report, XEROX Palo
Alto Research Center, April. Available at
http://www.xrce.xerox.com/research
/m1tt/fsSoft.
Karttunen, Lauri and Kenneth. R. Beesley.
1992. Two-level rule compiler. Technical
Report, XEROX Palo Alto Research
Center. Available at
http://www.xrce.xerox.com/research/
mltt/fsSoft.
</bodyText>
<reference confidence="0.865526727272727">
Karttunen, Lauri, Jean-Pierre Chanod,
Gregory Grefenstette, and Anne Schiller.
1996. Regular expressions for language
engineering. Natural Language Engineering,
2(4):305-328.
Karttunen, Lauri, Ronald M. Kaplan, and
Annie Zaenen. 1992. Two-level
morphology with composition. In
COLING-92: Papers Presented to the 15th [sic]
International Conference on Computational
Linguistics, volume 1, pages 141-148,
Nantes, France. International Committee
on Computational Linguistics.
Kornai, Andras, editor. 1999. Extented Finite
State Models of Language. Cambridge
University Press, Cambridge, England.
Koskenniemi, Kimmo. 1983. Two-level
morphology: A general computational
model for word form recognition and
production. Publication No: 11,
Department of General Linguistics,
University of Helsinki.
Mohri, Mehryar. 1996. On some applications
of finite-state automata theory to natural
language processing. Natural Language
Engineering, 2:1-20.
Mohri, Mehryar. 1997. Finite-state
transducers in language and speech
processing. Computational Linguistics,
23(2):269-311, June.
Mohri, Mehryar, Fernando C.N. Pereira, and
Michael Riley. 1998. A rational design for
a weighted finite—state transducer library.
In Derick Wood and Sheng Yu, editors,
Automata Implementation. Lecture Notes in
Computer Science, Number 1436.
Springer Verlag, pages 144-158.
Roche, Emmanuel and Yves Schabes,
editors. 1997. Finite-State Language
Processing. MIT Press, Cambridge, MA.
van Noord, Gertjan. 1999. FSA6: Finite state
automata utilities (version 6) manual.
Available at http://odur.let.rug.nl/van-
noord /Fsa /Manual.
</reference>
<page confidence="0.996707">
2
</page>
</variant>
</algorithm>

<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
<author>Jean-Pierre Chanod</author>
<author>Gregory Grefenstette</author>
<author>Anne Schiller</author>
</authors>
<title>Regular expressions for language engineering.</title>
<date>1996</date>
<journal>Natural Language Engineering,</journal>
<pages>2--4</pages>
<contexts>
<context position="1655" citStr="Karttunen et al. 1996" startWordPosition="254" endWordPosition="257">e in the use of finite-state methods in all aspects of natural language applications. Fueled by the theoretical contributions of Kaplan and Kay (1994), Mohri&apos;s recent contributions on the use of finite-state techniques in various NLP problems (Mohri 1996, 1997), the success of finite-state approaches especially in computational morphology, for example, Koskenniemi (1983), Karttunen (1983), and Karttunen, Kaplan, and Zaenen (1992), and, finally, the availability of state-of-the-art tools for building and manipulating large-scale finite-state systems (Karttunen 1993; Karttunen and Beesley 1992; Karttunen et al. 1996; Mohri, Pereira, and Riley 1998; van Noord 1999), recent years have seen many successful applications of finite-state approaches in tagging, spell checking, information extraction, parsing, speech recognition, and text-to-speech applications. This is a remarkable comeback considering that in the dawn of modern linguistics (Chomsky 1957), finitestate grammars were dismissed as fundamentally inadequate. As a result, most of the work in computational linguistics in the past few decades has been focused on far more powerful formalisms. Recent publications on finite-state technology include two co</context>
</contexts>
<marker>Karttunen, Chanod, Grefenstette, Schiller, 1996</marker>
<rawString>Karttunen, Lauri, Jean-Pierre Chanod, Gregory Grefenstette, and Anne Schiller. 1996. Regular expressions for language engineering. Natural Language Engineering, 2(4):305-328.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lauri Karttunen</author>
<author>Ronald M Kaplan</author>
<author>Annie Zaenen</author>
</authors>
<title>Two-level morphology with composition.</title>
<date>1992</date>
<journal>International Committee on Computational Linguistics.</journal>
<booktitle>In COLING-92: Papers Presented to the 15th [sic] International Conference on Computational Linguistics,</booktitle>
<volume>1</volume>
<pages>141--148</pages>
<location>Nantes, France.</location>
<marker>Karttunen, Kaplan, Zaenen, 1992</marker>
<rawString>Karttunen, Lauri, Ronald M. Kaplan, and Annie Zaenen. 1992. Two-level morphology with composition. In COLING-92: Papers Presented to the 15th [sic] International Conference on Computational Linguistics, volume 1, pages 141-148, Nantes, France. International Committee on Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<title>Extented Finite State Models of Language.</title>
<date>1999</date>
<editor>Kornai, Andras, editor.</editor>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, England.</location>
<marker>1999</marker>
<rawString>Kornai, Andras, editor. 1999. Extented Finite State Models of Language. Cambridge University Press, Cambridge, England.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kimmo Koskenniemi</author>
</authors>
<title>Two-level morphology: A general computational model for word form recognition and production.</title>
<date>1983</date>
<journal>Publication No:</journal>
<volume>11</volume>
<institution>Department of General Linguistics, University of Helsinki.</institution>
<contexts>
<context position="1407" citStr="Koskenniemi (1983)" startWordPosition="223" endWordPosition="224">e of the papers from this workshop along with further additional submissions could make a very good special issue for this journal. The five papers in this issue are the result of this process. The last decade has seen a quite a substantial surge in the use of finite-state methods in all aspects of natural language applications. Fueled by the theoretical contributions of Kaplan and Kay (1994), Mohri&apos;s recent contributions on the use of finite-state techniques in various NLP problems (Mohri 1996, 1997), the success of finite-state approaches especially in computational morphology, for example, Koskenniemi (1983), Karttunen (1983), and Karttunen, Kaplan, and Zaenen (1992), and, finally, the availability of state-of-the-art tools for building and manipulating large-scale finite-state systems (Karttunen 1993; Karttunen and Beesley 1992; Karttunen et al. 1996; Mohri, Pereira, and Riley 1998; van Noord 1999), recent years have seen many successful applications of finite-state approaches in tagging, spell checking, information extraction, parsing, speech recognition, and text-to-speech applications. This is a remarkable comeback considering that in the dawn of modern linguistics (Chomsky 1957), finitestate</context>
</contexts>
<marker>Koskenniemi, 1983</marker>
<rawString>Koskenniemi, Kimmo. 1983. Two-level morphology: A general computational model for word form recognition and production. Publication No: 11, Department of General Linguistics, University of Helsinki.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehryar Mohri</author>
</authors>
<title>On some applications of finite-state automata theory to natural language processing.</title>
<date>1996</date>
<journal>Natural Language Engineering,</journal>
<pages>2--1</pages>
<contexts>
<context position="1288" citStr="Mohri 1996" startWordPosition="208" endWordPosition="209"> believe that interest in the theory and applications of finitestate machinery was alive and well, and that some of the papers from this workshop along with further additional submissions could make a very good special issue for this journal. The five papers in this issue are the result of this process. The last decade has seen a quite a substantial surge in the use of finite-state methods in all aspects of natural language applications. Fueled by the theoretical contributions of Kaplan and Kay (1994), Mohri&apos;s recent contributions on the use of finite-state techniques in various NLP problems (Mohri 1996, 1997), the success of finite-state approaches especially in computational morphology, for example, Koskenniemi (1983), Karttunen (1983), and Karttunen, Kaplan, and Zaenen (1992), and, finally, the availability of state-of-the-art tools for building and manipulating large-scale finite-state systems (Karttunen 1993; Karttunen and Beesley 1992; Karttunen et al. 1996; Mohri, Pereira, and Riley 1998; van Noord 1999), recent years have seen many successful applications of finite-state approaches in tagging, spell checking, information extraction, parsing, speech recognition, and text-to-speech app</context>
</contexts>
<marker>Mohri, 1996</marker>
<rawString>Mohri, Mehryar. 1996. On some applications of finite-state automata theory to natural language processing. Natural Language Engineering, 2:1-20.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehryar Mohri</author>
</authors>
<title>Finite-state transducers in language and speech processing.</title>
<date>1997</date>
<journal>Computational Linguistics,</journal>
<pages>23--2</pages>
<marker>Mohri, 1997</marker>
<rawString>Mohri, Mehryar. 1997. Finite-state transducers in language and speech processing. Computational Linguistics, 23(2):269-311, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehryar Mohri</author>
<author>Fernando C N Pereira</author>
<author>Michael Riley</author>
</authors>
<title>A rational design for a weighted finite—state transducer library.</title>
<date>1998</date>
<marker>Mohri, Pereira, Riley, 1998</marker>
<rawString>Mohri, Mehryar, Fernando C.N. Pereira, and Michael Riley. 1998. A rational design for a weighted finite—state transducer library.</rawString>
</citation>
<citation valid="false">
<booktitle>Automata Implementation. Lecture Notes in Computer Science, Number 1436.</booktitle>
<pages>144--158</pages>
<editor>In Derick Wood and Sheng Yu, editors,</editor>
<publisher>Springer Verlag,</publisher>
<marker></marker>
<rawString>In Derick Wood and Sheng Yu, editors, Automata Implementation. Lecture Notes in Computer Science, Number 1436. Springer Verlag, pages 144-158.</rawString>
</citation>
<citation valid="true">
<title>Finite-State Language Processing.</title>
<date>1997</date>
<editor>Roche, Emmanuel and Yves Schabes, editors.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>1997</marker>
<rawString>Roche, Emmanuel and Yves Schabes, editors. 1997. Finite-State Language Processing. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gertjan van Noord</author>
</authors>
<title>FSA6: Finite state automata utilities (version 6) manual. Available at http://odur.let.rug.nl/vannoord /Fsa /Manual.</title>
<date>1999</date>
<marker>van Noord, 1999</marker>
<rawString>van Noord, Gertjan. 1999. FSA6: Finite state automata utilities (version 6) manual. Available at http://odur.let.rug.nl/vannoord /Fsa /Manual.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>