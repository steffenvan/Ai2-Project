<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.032890">
<title confidence="0.994775">
Lexicon Design Using a Paradigmatic Approach
</title>
<author confidence="0.950379">
Cristian Dumitrescu
</author>
<affiliation confidence="0.921372">
Research Institute for Informatics
</affiliation>
<address confidence="0.8255735">
Alex. Averescu Blvd. 8-10,
71316 Bucharest 1, Romania, Fax: 653095
</address>
<sectionHeader confidence="0.972444" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999836">
The paper describes models for representation and
methods to handle lexicographic structures supplied by the
MORPHO-2 system. It was built to manage monolingual
lexicons and to incorporate lexical processing.
</bodyText>
<sectionHeader confidence="0.999649" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999847315789474">
Most advanced systems for natural language processing use
powerful lexicons and morpho-lexical processing environments.
The system described below enables monolingual lexicon han-
incorporates morpho-lexical processes (ie. word-form
and synthes4 at lexicon level At present, it works as a
component of the RES environment for building natural lan-
guage applications (Thfis and Cristea, 1985).
Since in our approach the morphological processes obey a
paradigmatic morphology 1.%9:1), word-forms analysis and
synthesis take into account only grammatical endings (which m-
dudes both desinences and suffixes) and the lexicons handled by
MORPHO-2 system are root- or lemma-oriented. By lexicon we
don&apos;t mean only a collection of roots and associated features. At
lexicon level we also encounter the control structures needed for
morphol.ical processing: morpho-lexical acquisition menus,
root ma I &apos;cation rules, word-forms synthesis rules, etc.
The services provided by the system may be classified accord-
ing to the following goals: morphological model design, lexical
stock building and morpho-lexical processing(Dumitrescu, 1994
</bodyText>
<sectionHeader confidence="0.999517" genericHeader="method">
2 Morphological Model Design
</sectionHeader>
<bodyText confidence="0.9994998">
In order to build the morphological model, an integrated environ-
ment which allows editing viewing and compiling the mor-
phol I cal model description, is available to the linguist.
Dei • the morphological model takes place m several steps,
during whi the linguist has to specify the following
</bodyText>
<listItem confidence="0.807776125">
a) the categories, subcategories, features and their
values, in a hierarchical manner
b) the paradigmatic descriptions
c) the default feature specifications associated to each
paradigmatic description
d) the lemma entry correspondence, for each paradig-
matic description
e) the inflectional paradigms and root detection rules.
</listItem>
<bodyText confidence="0.986829538461538">
The hierarchical description of features is achieved by cor-
relating several feature specifications.+A feature specification is
given in the form of a (feature: value ) pair. We call a paradig-
matic description a hierarchical description build of several
simple (feature: value) pairs.
Figure 1 partially presents, in the form of an incomplete
the hierarchical description of features from the morphologi
model for the Romanian language. By tree traversal, all paradig-
matic descriptions of the model may by generated.
Each non-terminal node contains a single feature specifica-
tion. The leaf nodes may contain one or more feature specifica-
dons. According to the successor selection criteria, which is ap-
plied when visiting a non-terminal node, we can distinguish
</bodyText>
<figure confidence="0.927186333333333">
ART CASE
DEF INDEF N/A G/ D
• • • •
</figure>
<figureCaption confidence="0.997215">
Figure 1 Hierarchical description of features
</figureCaption>
<bodyText confidence="0.98647394117647">
CHOOSE nodes(when only one successor is selected) or POREACH
nodes (when the individual selection of each successor is re-
quired). In the figure, a FoREAcH node is outlined by a curve
drawn over the emerging edges. By traversing the tree across the
longest path which starts from the root node, thru CHOOSE nodes
only, the selector of a paradigmatic description is obtained(e.g.
CAT = NOUN &amp; SCAT = COMMON &amp; GEN = FEM, CAT = VERB).
The description attached to a leaf node is represented by
means of a morpho-lexical acquisition scenario. A scenario entry
(further on referred to as a slot) corresponds to a point of the
paradigmatic description space.
Selectors of those descriptions allowing_ default feature
specifications are attached with (feature: value ) pairs which are
fault inheritances of the corresponding slots. In our example
the following association is possible: (Gea= vB) - &gt; (PER 1 23).
The area of the morphological model where the lemma - entry
(from paradigmatic description) correspondences are described,
consists in a specification of the points from the paradigmatic
description spaces, which characterize the lemma field from the
lexicon entry. This way, the lexical level required by the lexical
transfer is ensured.
The last step in the morphological model description is to
inform the system about how to build inflexional paradigms and
root detection rules. For each paradigmatic description the lin-
guist may specify more paradigmatic ending families from which
the system then builds the inflectional paradigms. For the
Romanian _uap, there have been identified 136 inflectional
paradigms (11ffistl%9).
Based on the inflectional paradigms, the system will determine
the rules for root detection and word-form generation.
Such a rule has the following form:
&lt; inflexion &gt; = ( &lt; inflectional-paradigm &gt; &lt; slot-number &gt; )
with the following meanings:
a) if a word ends in &lt; inflexion &gt; then
</bodyText>
<figure confidence="0.99890752173913">
CAT
NOUN
ADJI VERB ... CON]
NMB PER
SG PL 1 2 3
• • • • •
GEN
NEUIER
MASC
PPM
z
AT
PROPER]
TENSE
PRES
IMPF
MOOD
Ci
GER
ND
COMMON
NMB
SG I PL
</figure>
<page confidence="0.975653">
247
</page>
<bodyText confidence="0.996122083333333">
othe root is what remains from the word after dropping
the &lt; inflexion &gt;
othe root belongs to the &lt; inflectional-paradigm &gt;
*the contextual information corresponding to the current
word is given by &lt; slot-number &gt;
b) if a root belongs to the &lt; inflectional-paradigm &gt; and
it is used in the context given by &lt; slot -number &gt; then
othe word is obtained by concatenating the given root
with the &lt; inflexion &gt; .
The lexi 6s .,4 apher&apos;s interface is strictly dependent on the
spedfications 1 om the • s interface smce alargçpait of the
former is built automatically from the specifications of the latter.
</bodyText>
<sectionHeader confidence="0.989684" genericHeader="method">
3 Lexical Stock Building
</sectionHeader>
<bodyText confidence="0.986993666666667">
MORPHO-2 lets the lexicographer define new entries in the lexi-
con by means of a user-friendly window oriented interface.
A lexicon entry has the following formal structure:
</bodyText>
<listItem confidence="0.783118166666667">
&lt; entry &gt; :: = ( &lt; lemma &gt;
( &lt; paradigmatic-description-selector &gt;
&lt; inflexional-paradigm &gt;
&lt; root &gt; &lt; morphOlogic-description &gt;
• • •
&lt; tactic-description &gt; &lt; semantic . :ption &gt; ) ) )
</listItem>
<bodyText confidence="0.99365715909091">
The helds &lt; lemma &gt; , &lt; paradigmatic-description-selector &gt;
and &lt; inflexional-paradigm &gt; have the obvious meaning.
The field &lt; root &gt; may contain one or more roots. Inserting
roots in the lexicon takes place in such a way that these should
inherit the morphological descriptions belonging to the slots
where they occur.
By &lt; syntactic-description &gt; we refer to restrictions on co-
occurrence with other words (or phrases). In order to specify
such restrictions for the Romanian language we have performed a
subcategorization of verbs based on their valency, object
categories which they govern(eg., a direct object may be an ac-
cusative noun without preposition, a reflexive pronoun or a non-
finite form of a verb) and semantic features.The latter allow a
noncontextual subcategorization (for example of nouns) and a
contexual one using selectional restrictions (in the ease of verbs).
Typically, verbs have a valency between 1 and 3 (though
impersonal verbs may have valency 0). The intransitive verbs are
classified according to semantic criteria (verbs of motion, state) or
by their syntactic usage (like predicative auxiliaries, urupersonal
verbs with dative). We should notice that the same verb may be
transitive or intransitive according to its meanings; for example a
ajunge (to get to) with the meaninga prinde (to catch) is transitive
and with the meanmgafismdIcient tobe enough) is intransitive.
Trivalent verbs include verbs taking
two direct objects which have different meanings and are
not coordinated (the first one is doubled by an accusative,
personal pronoun).
Pe Ion I-am ascultat lectia.
I examined Ion about the lesson.
oa direct object and an object clause
L-am rugat sa-mi imprumute pixul.
I asked him to lend me the pen.
oa direct object and an indirect object
L-am intrebat despe carte.
I asked him about the book.
For each syntactic description, the lexicographer may provide
one or more semantic descriptions. The &lt; semantic-dip-
tion &gt; field contains the name of a case-frame structure placed m
a generic-specific hierarchy. The actual semantic descriptions are
stored in a separate data area, than the rest of the lexicon, and
they are managed independently of MORPHO-2.
A lexicon editor offers the lexicographer commands for delet-
ing, modifying a lexicon entry and llieir listing according to dif-
ferent requests with respect to entry fields (Dumitrescu, 1).
</bodyText>
<sectionHeader confidence="0.99857" genericHeader="method">
4 Morpho-Lexical Processing
</sectionHeader>
<bodyText confidence="0.999964333333333">
The target natural language processing system is the benefi
of the morpho-lexical processes executed MORPHO-2. Wor
forms analysis and synthesis are mediated by a process interface.
In the case of lexical analysis, if the interface is given a se-
quence of words, it will return a sequence of morpho-lexical
atoms. The structure of these atoms is presented below.
</bodyText>
<equation confidence="0.9127654">
( &lt; root &gt; ( &lt; lemma &gt;
( &lt; paradigmatic-description-selector &gt;
&lt; morphol c-description &gt;
• • • •
( &lt; syntactic &apos;on &gt; &lt; semantic-description &gt; ) ) ) )
</equation>
<bodyText confidence="0.99877844">
A morphological . .
on contains both contextual and
context-free information. The former is obtained from ending
analysis and the latter from the lexicon entry corresponding to the
root. The information for the other fields from the atom structure
is also taken from the lexicon entry corresponding to the root.
With respect to the result of morphological congruence and
root retrieval within the lexicon, we may classify the morpho-lexi-
cal atoms as unambiguous, ambiguous and undetermined
The unambiguous morpho-lexical atoms associate the
analyzed word with a sin* lemma. In the case of a root which
corresponds to one lemma and has more possible morphological
descriptions, for the same paradigmatic description selector, the
system will attempt to compact them.
The ambiguous morpho-lexical atoms come from words to
which several lemmae may be attached. The association of a root
with several lemmae is possible either due to ambiguity of
category (e.g. noun vs. verb) or to apparent homography,
enerated by the absence of prosodic markers in the Romanian
(modele, modele, acele, acele, modul, modul, etc.). The
possible interpretations are ordered in such way that those which
come from shorter roots (that means longer ending) have priority.
The undetermined morpho-lexical atoms correspond to
words which have no entry in the lexicon. The atoms generated in
this situation have the following structure:
</bodyText>
<equation confidence="0.9368375">
(UNKNOWN &lt; unknown-word &gt;
( &lt; possible-root &gt; &lt; morphologic-description &gt;))
</equation>
<bodyText confidence="0.996061933333333">
The unknown word is associated with all legal segmentations
and for each of them the morphological information deduced
from the identified endings is provided
Lexical synthesis is the reverse of lexical analysis. The process
interface ensures conversion of a morpho-lexical atom sequence
into a word sequence. The morpho-lexical synthesis requires the
description of morpho-lexical atoms according to the pattern:
( &lt; entry-idenhfier &gt; &lt; morphologic-descrytion &gt;
&lt; syntactic-de mption &gt; )
where &lt; entry-identifier &gt; maybe a lemma, a root or a semantic
description.
We have to point out that previous to morpho-lexical analysis
and synthesis, the target processor may configure the structure of
morpho-lexical atoms according to the designed application, by
means of a communication protocoL
</bodyText>
<sectionHeader confidence="0.999497" genericHeader="conclusions">
5 Implementation
</sectionHeader>
<bodyText confidence="0.999968090909091">
The MORPHO projeq, started in 1986, has achieved as a first
result, a prototype version now available on a PDP-11 compatible
computer. The second version of the system, the one presented in
this per, is implemented in C on a IBM-PC compatible.
The network representation of data and techniques used Rqr
implementation, like lexicon indexing using prefixed virtual B
trees (based .on whi for 20000 pseudo-random generated
words, of variable les retrieval requires 2 external accesses
only), have led to an average response time of lexical processes,
quite mdeperident of the lexicons size (for more details on perfor-
mance analysis see (Ilifis and Dumitrescu,1990)).
</bodyText>
<sectionHeader confidence="0.99962" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998212777777778">
Dumitrescu,C. MORPHO user manuaL ICI., Bucharest, 1991
Tuf4D., Cristea D. IURES: A human engineering approach to
natural language question answering. Artificial Intelligence:
Methodology, Systems, Applications, NortMolland,Elsevler,1985
Tufi4D. It would trif much easier if WENT were GOED.
Proceedings of the 4 Conference of ECACL, Manchester, 1989
Tufis,D, Dumitrescu,C.: MOVHO - A dictionary management
system. Proceedings of the 13 International Seminar on DBMS,
Mamaia, 1990
</reference>
<page confidence="0.99699">
248
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.697363">
<title confidence="0.999972">Lexicon Design Using a Paradigmatic Approach</title>
<author confidence="0.982641">Cristian Dumitrescu</author>
<affiliation confidence="0.855852">Research Institute for Informatics</affiliation>
<address confidence="0.837347">Alex. Averescu Blvd. 8-10, 71316 Bucharest 1, Romania, Fax: 653095</address>
<abstract confidence="0.9975096">The paper describes models for representation and methods to handle lexicographic structures supplied by the It was built to manage monolingual lexicons and to incorporate lexical processing.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>C MORPHO user manuaL ICI Dumitrescu</author>
<author>Bucharest</author>
</authors>
<title>Tuf4D., Cristea D. IURES: A human engineering approach to natural language question answering. Artificial Intelligence: Methodology, Systems, Applications, NortMolland,Elsevler,1985 Tufi4D. It would trif much easier if WENT were GOED.</title>
<date>1991</date>
<booktitle>Proceedings of the 4 Conference of ECACL,</booktitle>
<location>Manchester,</location>
<marker>Dumitrescu, Bucharest, 1991</marker>
<rawString>Dumitrescu,C. MORPHO user manuaL ICI., Bucharest, 1991 Tuf4D., Cristea D. IURES: A human engineering approach to natural language question answering. Artificial Intelligence: Methodology, Systems, Applications, NortMolland,Elsevler,1985 Tufi4D. It would trif much easier if WENT were GOED. Proceedings of the 4 Conference of ECACL, Manchester, 1989 Tufis,D, Dumitrescu,C.: MOVHO - A dictionary management system. Proceedings of the 13 International Seminar on DBMS, Mamaia, 1990</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>