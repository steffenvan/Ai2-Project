<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.991785">
A hybrid approach to Urdu verb phrase chunking
</title>
<author confidence="0.994851">
Wajid Ali
</author>
<affiliation confidence="0.906319333333333">
National University of Computer
and Emergence Sciences,
Pakistan.
</affiliation>
<email confidence="0.998477">
wajid.ali@msn.com
</email>
<sectionHeader confidence="0.993884" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999527458333333">
A variety of verb phrases exist in Urdu includ-
ing simple verb phrases, conjunct verb phrases
and compound verb phrases. This paper ex-
plains the structure of Urdu verb phrases, and
details a series of experiment to automatically
tag them. Initially, a rule based model is de-
veloped using 21 linguistic rules for automatic
VP chunking. A 100,000 word Urdu corpus is
manually tagged with VP chunk tags. The
corpus is then used to develop a hybrid ap-
proach using HMM based statistical chunking
and correction rules. The technique is en-
hanced by changing chunking direction and
merging chunk and POS tags. The automati-
cally chunked data is compared with manually
tagged held-out data to identify and analyze
the errors. Based on the analysis, correction
rules are extracted to address the errors. By
applying these rules after statistical tagging,
further improvement is achieved in chunking
accuracy. The results of all experiments are
reported with maximum overall accuracy of
98.44% achieved using hybrid approach with
extended tagset.
</bodyText>
<sectionHeader confidence="0.999131" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999831384615385">
Urdu is an Indo-Aryan language, spoken by more
than 100 million speakers across the world. It is
the national language of Pakistan and state lan-
guage of India. Urdu has free phrase-order, i.e.
the phrases within a sentence can arbitrarily
change order1, but the words within a phrase
have a fixed order. As the order of the phrases is
variable, the case markers (CM), which are ex-
plicitly written in Urdu as separate words, help
determine the role of each phrase in a sentence.
Verb Phrase (VP) is the head of a sentence and
licenses the number as well as role of the other
phrases in a sentence, e.g. subject, object, etc.
</bodyText>
<footnote confidence="0.92624">
1 Though the meaning does not change, the phrase-order
may change the emphasis of the phrase within a sentence.
</footnote>
<author confidence="0.70362">
Sarmad Hussain
</author>
<affiliation confidence="0.90461825">
Center for Language Engineering,
Al-Khawarizmi Institute of Computer
Science, University of Engineering
and Technology, Pakistan
</affiliation>
<email confidence="0.985627">
sarmad.hussain@kics.edu.pk
</email>
<bodyText confidence="0.999337217391305">
The number of arguments licensed depends on
the valency of the verb, also categorized as in-
transitive, transitive and di-transitive. This in-
formation is normally encoded in the sub-
categorization frame of a verb, which lists the
number and type of arguments the verb licenses.
Determining these phrases within a sentence is
very useful for a variety of applications, and the
process which directly labels these phrases is
called chunking. Chunking helps to identify
phrases in a sentence, which are further used for
the development of natural language processing
(NLP) applications like parsing, searching, ma-
chine translation, question-answering and infor-
mation extraction. The current work focuses on
chunking VP in Urdu.
Relevant Urdu VP analysis is summarized in
Section 2. Section 3 presents some relevant
chunking related work. Section 4 contains the
detail of the tagged corpus developed for this
task. Methodology is discussed in Section 5. The
results and discussion are presented in Section 6.
Section 7 concludes the work.
</bodyText>
<sectionHeader confidence="0.643524" genericHeader="introduction">
2 Verb phrases in Urdu
</sectionHeader>
<bodyText confidence="0.999784142857143">
Minimally, an Urdu VP is represented by a sin-
gle verb. However, a typical Urdu verb phrase
contains a verb followed by one or more aux-
iliary verbs (AUX) and verb tense markers
(VBT). Each is represented by a separate word.
Some of the tense and aspect information is also
encoded within the verb morphology (Hussain
2004). An Urdu verb phrase can be categorized
into a simple verb phrase or complex verb
phrase. In a complex verb phrase, the verb is
formed by a combination of nominal + verb
(called conjunct verb) or a verb + verb (called
compound verb). These complex verbs are also
referred as complex predicates.
</bodyText>
<page confidence="0.979653">
137
</page>
<note confidence="0.927721">
Proceedings of the 8th Workshop on Asian Language Resources, pages 137–143,
Beijing, China, 21-22 August 2010. c�2010 Asian Federation for Natural Language Processing
</note>
<subsectionHeader confidence="0.934833">
Verb Phrase
</subsectionHeader>
<bodyText confidence="0.9978685">
The following subsections explain these types of
verb phrases with examples.
</bodyText>
<subsectionHeader confidence="0.997949">
2.1 Simple Verb Phrase
</subsectionHeader>
<bodyText confidence="0.999478">
A simple verb phrase consists of a verb root fol-
lowed by auxiliaries and tense verb, if any, as
shown in (1).
</bodyText>
<equation confidence="0.506992111111111">
zSJ ���
Ali school gaya
Ali school went
�
&amp;quot;Ali went to school&amp;quot;
-U-1., J��. J
li school jata hai
li school go� �
VBT-present
</equation>
<bodyText confidence="0.473831">
&amp;quot;Ali goes to the school&amp;quot;
</bodyText>
<subsectionHeader confidence="0.998381">
2.2 Complex Verb Phrase
</subsectionHeader>
<bodyText confidence="0.998779333333333">
A conjunct verb phrase consists of a nominal or
an adjective and a verb, optionally followed by
auxiliaries and tense verb, as shown inf(2).
</bodyText>
<equation confidence="0.961863125">
��� ��� ��� � ���
Ali ne sabaq yaad kiya
Ali CM lesson learn do-past
&amp;quot;Ali learnt the lesson&amp;quot;
��� ��� ��� �� � � ���
Ali ne kamraa saaf kiya tha
� clean �
Ali CM room do-past VBT-past
</equation>
<bodyText confidence="0.9671455">
&amp;quot;Ali cleaned the room&amp;quot;
A compound verb phrase consists of two verbs,
optionally followed by auxiliaries and verb tense
marker. The first verb is main verb and contri-
butes the meaning of the sentence. The second
verb adds additional information as shown in (3).
</bodyText>
<equation confidence="0.844177">
2 Urdu sentences are written from right to left.
(3)
�� ��! �� �� �� &amp;quot;�# ���
</equation>
<bodyText confidence="0.923307333333333">
Ali kam kar baeTha hai
Ali work do sit VBT-present
&amp;quot;Ali has done the work&amp;quot;
Detailed analysis of Urdu VP is not in the scope
of this paper. For further discussion, see e.g.
Butt (1995) and Chakrabarti et al. (2008).
</bodyText>
<sectionHeader confidence="0.998704" genericHeader="method">
3 Earlier work on Chunkin
</sectionHeader>
<subsectionHeader confidence="0.496051">
g
</subsectionHeader>
<bodyText confidence="0.999972857142857">
The work on chunking based on machine learn-
ing was introduced by Church ( 1988) for Eng-
lish. Abney (1991) proposed the idea of parsing
by chunks, defining the chunks in English by
assuming that a chunk has syntactic structure.
Chunking was used to convert sentences into
non-overlapping phrases, like VP and Noun
Phrase (NP), to parse the sentence. Chen (1993)
proposed a probabilistic chunker based on Abney
(1991). Ramshaw et al. (1995) used transforma-
tion based learning using a large annotated cor-
pus for English. They proposed chunking as an
IOB tagging task, where I marks the words
which are Inside a chunk, O marks the words
which are Outside the chunk and B marks the
words which are at the Beginning of a chunk.
Overall recall and precision achieved by this ap-
proach is about 88%.
Zhou et al. (2000) use standard HMM based
tagging methods to model the chunking process,
and achieved an accuracy of 91 .99% precision
and 92.25% recall using a contextual lexicon.
Veenstra et al. (2000) use memory based phrase
chunking with accuracy of 91.05 % precision and
92.03% recall for English. Kudo et al. (2001) use
support vector machines for chunking with
93.48% accuracy for English. Park et al. (2003)
described a hybrid approach using rule based and
memory based learning to chunk the phrases of
Korean language. First, the rule based chunker is
applied to chunk the phrases then memory based
learning technique is used for the correction of
errors which were not handled by rule based
chunker. Grover et al. (2007) proposed rule
based chunking using XML. They reported
90.18% precision and 92.49% recall for verb
group chunker for English.
Singh et al. (2005) presented HMM based
chunk tagger for Hindi. They divi ded chunk tag-
ging into two main tasks: one was identification
of chunk boundaries and the other was labeling
of chunks. The Hindi annotated corpus of
</bodyText>
<figure confidence="0.9935445">
Simple verb Complex verb
phrase phrase
Conjuntverb Compound
phrase verb phrase
</figure>
<figureCaption confidence="0.999945">
Figure 1: Categorization of Urdu verb phrase
</figureCaption>
<page confidence="0.986209">
138
</page>
<bodyText confidence="0.9999816">
200,000 words was used in their work. The data
of 150,000 words used to train different HMM
representations and 50,000 words data was kept
aside as unseen data. The chunker was tested on
20,000 words and chunker achieved 92% preci-
sion with 100% recall for chunk boundaries by
the HMM based chunker. Dalal et al. (2006) pre-
sented a maximum entropy based statistical ap-
proach to POS tagger and chunk tagger for Hin-
di. The model uses multiple features simulta-
neously to predict the tag for a word. The feature
set is broadly classified as context-based fea-
tures, word features, dictionary features and cor-
pus-based features. The annotated corpus con-
tained almost 35,000 words for training and test-
ing. The reported accuracy was 87.4%. Agarwal
et al. (2006) used Conditional Random Field for
POS tagging and chunking Hindi text. Various
experiments were carried out with various sets
and combinations of features to mark a gradual
increase in the performance of the system
throughout the building process. A data of
21,000 words used for the training. The chunker
gave 90.89% accuracy on the data for CONLL
2000.
</bodyText>
<sectionHeader confidence="0.947453" genericHeader="method">
4 Corpus and Tagset
</sectionHeader>
<bodyText confidence="0.999846666666667">
For the current work, Part of speech (POS)
tagged corpus containing 4,585 sentences and
101,414 words is used (from Muaz et al. 2009).
Complex phrase is composed of a nominal, ad-
jective or a verb combined with a light verb. In
the POS tagged corpus used, light verbs are not
tagged separately. However, tagging such verbs
as light verbs helps determine whether the pre-
ceding word is part of verb phrase. So, we cus-
tomized the tagset by introducing light verb tag
(VBL) and infinitive light verb tag (VBLI) to
better address the compound and conjunct verb
phrases, following Sajjad (2007). The example
demonstrates the light verb tag and chunk boun-
dary of complex phrase.
</bodyText>
<figure confidence="0.6066666">
&lt;JJ&gt; &amp;quot;t— &lt;NN&gt; e-)es &lt;PP&gt; ­3 &lt;NNP
&lt;VBL&gt; L&amp;
&lt;O&gt;&lt;NN&gt;6-)A &lt;O&gt;&lt;PP&gt;-3 &lt;O&gt;&lt;NNP&gt;,,6
I&gt;&lt;&lt;VBT&gt; tO &lt;I&gt;&lt;VBL&gt; is &lt;B&gt;&lt;JJ&gt; &amp;quot;k—
Ali ne kamraa saaf kiya tha
</figure>
<figureCaption confidence="0.349276">
Ali CMroom clean do-past VBT-past
&amp;quot;Ali cleaned the room&amp;quot;
</figureCaption>
<bodyText confidence="0.999932">
The IOB tagset is used to prepare chunk anno-
tated data. The data of 3,650 sentences contain-
ing 81,430 words is for training, 530 sentences
containing 9,985 words are used for analysis dur-
ing the implementation of methodologies (as
held-out data) and the remaining 405 sentences
with 9,999 words are used for testing.
</bodyText>
<sectionHeader confidence="0.998941" genericHeader="method">
5 Methodology
</sectionHeader>
<bodyText confidence="0.9956885">
A hybrid approach is used for VP chunking.
First, a rule based chunker is developed for base-
line. Then HMM based statistical approach is
used. Finally, error correction rules are identi-
fied for further correction. The methodology is
described below.
</bodyText>
<subsectionHeader confidence="0.980125">
5.1 Rule Based Chunldng
</subsectionHeader>
<bodyText confidence="0.9997346">
Initially, a set of 21 hand crafted rules are de-
rived, based on experience through manual tag-
ging, for VP chunking. These rules are incre-
mentally built and applied using the training cor-
pus.
</bodyText>
<subsectionHeader confidence="0.998552">
5.2 Statistical Chunldng
</subsectionHeader>
<bodyText confidence="0.9999528">
A statistical model for automatic tagging is also
developed. Given a sequence of n words, there
are corresponding t1 to tn POS tags and c1 to cn
chunk tags. The aim is to find the most probable
chunk sequence for given the POS tags.
</bodyText>
<equation confidence="0.998739333333333">
C = arg max P(ti ��
� � � ����
� ��
</equation>
<bodyText confidence="0.9999898">
We assume that the probability of a POS tag de-
pends on its own chunk tag and the probability of
a chunk tag is dependent only on the previous
two chunk tags. Using chain rule, problem is re-
duced to the following equation.
</bodyText>
<equation confidence="0.975014333333333">
n
C = arg max H P(ti1ci)• P(Ci1ci-1, ci-z)
L=1
</equation>
<bodyText confidence="0.9929004">
TnT tagger (Brants 2000) is used for training and
testing, which is based on this model. All the
experiments are executed using its default option
of second order HMM (trigram model, as pre-
sented).
</bodyText>
<subsectionHeader confidence="0.80048">
5.3 Error Correction Rules
</subsectionHeader>
<bodyText confidence="0.9995504">
The statistical tagger is run on the held out data
and errors are analyzed to derive rules to fix
them as part of the post-processing module.
Based on error analysis, twelve rules are identi-
fied. Here we discuss some errors and corres-
</bodyText>
<figure confidence="0.782884666666667">
&gt; ,,��
45
&lt;VBT&gt;
</figure>
<page confidence="0.989689">
139
</page>
<bodyText confidence="0.9152366">
ponding rules for correction. The complete list of
error correction rules is included in the appendix.
The most frequent error was assigning I tag to
VBT, when it was not preceded by a verb, as it is
itself the verb in this case. In this case, it should
have been assigned B tag, as it is the beginning
of the verb phrase. For example, see the tags
underlined below.
&lt;O&gt; &lt;PP&gt; ,,S &lt;O&gt; &lt;NN&gt;v.s�+ &lt;O&gt; &lt;JJ&gt; �����,)� �
&lt;I&gt; &lt;VBT&gt; =; &lt;O&gt; &lt;CD&gt;919&lt;O&gt; &lt;CD&gt; .1Ia.5
Zair-e-taleem bachoon ki tadaad 919 hai
Under-education children&apos;s number 919 is
&amp;quot;Number of children under education is 919&amp;quot;
The following simple rule makes the needed cor-
rection.
</bodyText>
<listItem confidence="0.750434666666667">
• If POS(wi) = VBT and POS(wi_1) 1 =
{VB, VBI, VBL, VBLI, AUX}, then chunk
tag for wi is B.
</listItem>
<bodyText confidence="0.911441142857143">
Another error is to assign O tag to JJ while it
precedes the light verb and follows NN. Here it
should be the part of the verb phrase.
&lt;O&gt; &lt;NN&gt; ,A�� &lt;O&gt; &lt;PP&gt; ,,s &lt;O&gt; &lt;NN&gt; u.sy+
&lt;I&gt; &lt;VBT&gt; ,,g &lt;B&gt; &lt;VBL&gt; u.s; &lt;O&gt; &lt;JJ&gt; 0.1_
Bachon ki jailain alaidha hon gi
Children&apos;s jails separate be VBT-�uture
&amp;quot;Children&apos;s jails will be separate&amp;quot;
The following rule makes the correction.
• If POS(wi) = VBL , POS(wi_1) = JJ
and POS(wi_Z) = NN, Then chunk tag
for wi_1 is B and wi is I.
B tag is assigned to VBL while it follows the
CVRP and CVRP follows VB. Here it should be
the part of same verb phrase starting from VB.
,)s &lt;B&gt; &lt;VB&gt; 45J &lt;O&gt; &lt;NN&gt; J-1 &lt;O&gt; &lt;PRP&gt; e9
&lt;I&gt; &lt;VBT&gt; 4 &lt;B&gt; &lt;VBL&gt; i &lt;I&gt; &lt;CVRP&gt;
Wo khaat likh ker aa gya
He letter write do come VBT-past
&amp;quot;He came after a writing letter&amp;quot;
The following rule makes the correction.
</bodyText>
<listItem confidence="0.980225">
• IfPOS(wi) = VB, POS(wi_1) = CVRP
</listItem>
<bodyText confidence="0.8191654">
and POS(wi_Z) = VBL, Then chunk tag
for wi is I.
One more error is to assign O tag to WALA
while it follows VBLI. Here it should be the part
of the verb phrase.
</bodyText>
<equation confidence="0.657496">
,,�Is &lt;I&gt; &lt;VBLI&gt; =3,)� &lt;B&gt; &lt;NN&gt; flS
&lt;O&gt;&lt;PP&gt; =3 &lt;O&gt;&lt;NN&gt; &lt;O&gt;&lt;WALA&gt;
&lt;B&gt;&lt;VB&gt; t,L+:+
</equation>
<bodyText confidence="0.99661">
kaam karnay wali khaton ne batayaa
Work doing WALA3 women CM told
&amp;quot;Working woman told&amp;quot;
The following rule makes the correction.
</bodyText>
<listItem confidence="0.979193">
• If POS(wi) = WALA , POS(wi_1) =
VBLI, Then chunk tag for tag for wi is
also I.
</listItem>
<subsectionHeader confidence="0.997994">
5.4 Architecture of VP Chunker
</subsectionHeader>
<bodyText confidence="0.9996941">
A POS tagged sentence is the input of the VP
chunker. The input data is prepared in a specific
format and each line contains only a POS tag
corresponding to the word in the sentence. TnT
Tagger outputs appropriate chunk tag against
each POS tag using HMM model. Then post
processing is performed on the output of the sta-
tistical chunker to enhance the accuracy by ap-
plying the error correction rules. Figure 2 shows
the architecture of this VP chunker.
</bodyText>
<figureCaption confidence="0.997037">
Figure 2: Architecture of VP Chunker
</figureCaption>
<figure confidence="0.520109">
3 There is no easy translation for WALA. See Muaz
and Khan (2009).
IOB tagged
sentence
n
</figure>
<page confidence="0.971643">
140
</page>
<sectionHeader confidence="0.513928" genericHeader="method">
5.5 Experiments
</sectionHeader>
<bodyText confidence="0.9936676875">
VP chunking system is evaluated by conducting
a series of experiments. The data is trained and
tested using TnT tagger. Three additional factors
are used. First, if one scans the sentence in re-
verse order, one may be able to better predict
phrase boundary, as CM comes at the end of a
NP. Thus, both Right to Left (default for Urdu)
and Left to Right (reverse) directions are ex-
plored for scanning and tagging. Second, IOB
tagging scheme is further fine-grained by merg-
ing it with POS tagset, as an alternate system.
Thus B-NN and B-VB are used as different tags,
instead of just using B. Third, only statistical vs.
hybrid methodologies are used. So, a total nine
experiments including rule based model (as base-
line) are performed which are listed in Table 1.
</bodyText>
<tableCaption confidence="0.993335">
Table 1: Scheme for VP chunking experiments
</tableCaption>
<table confidence="0.9987486">
No. Tagset Model Scanning
IOB Rule Base Right to left
IOB Statistical Right to left
IOB Hybrid Right to left
IOB Extended Statistical Right to left
IOB Extended Hybrid Right to left
IOB Statistical Left to right
IOB Hybrid Left to right
IOB Extended Statistical Left to right
IOB Extended Hybrid Left to right
</table>
<sectionHeader confidence="0.995297" genericHeader="evaluation">
6 Results and Discussion
</sectionHeader>
<subsectionHeader confidence="0.761936">
6.1 Results
</subsectionHeader>
<bodyText confidence="0.999771740740741">
There are a total of nine experiments which are
performed. First Rule based method is executed
on testing data using 21 handcrafted linguistic
rules for automatic VP chunking and 93.23%
accuracy is achieved. Then statistical experiment
is executed on same testing data with simple IOB
tagset scheme, and right to left scanning direc-
tion. The precision and recall for I, O and B tags
are calculated separately. The overall accuracy is
95.14%. By applying error correction rules on
this output of statistical chunker, we obtain an
overall accuracy of 98.14%. This is given in Ta-
ble 2 below.
Experiments are also performed using ex-
tended tagset by merging IOB tag with POS tag.
The overall accuracy of experiment is improved
to 95.95%. Error correction rules are applied on
output of the statistical chunker, and accuracy is
improved to 98.44%.
When the scanning direction is changed to
Left to Right, the overall accuracy of statistical
approach with simple tagset is 95.06% and
98.02% overall accuracy is obtained using hybrid
approach. When extended tagset is used with
statistical and hybrid approaches in this scanning
direction, the overall accuracy of 95.86% and
98.29% is achieved respectively.
</bodyText>
<tableCaption confidence="0.998619">
Table 2: Results of VP chunking Experiments
</tableCaption>
<table confidence="0.999882095238095">
No. Methodology Over all B-tag I-tag O-tag
result (/o)
Precision Recall Precision Recall Precision Recall
Rule Base (all rules) and 93.23 94.93 56.78 92.64 82.95 99.94 92.99
RTL scanning
Statistical using IOB tagset 95.14 82.52 75.08 88.45 85.17 97.54 99.22
and RTL scanning
Hybrid using IOB tagset 98.14 96.21 87.54 92.00 96.62 99.42 99.72
and RTL scanning
Statistical using Extended 95.95 83.98 79.13 88.88 86.41 98.27 99.51
tagset and RTL scanning
Hybrid using Extended 98.44 97.16 90.07 93.10 96.62 99.45 99.77
tagset and RTL scanning
Statistical using IOB tagset 95.06 81.64 74.77 88.20 84.93 97.62 99.22
and LTR scanning
Hybrid using IOB tagset 98.02 95.95 86.32 91.57 96.62 99.28 99.69
and LTR scanning
Statistical using Extended 95.86 83.24 78.01 88.45 85.67 98.78 99.51
tagset and LTR scanning
Hybrid using Extended 98.29 96.80 88.75 91.78 96.62 99.42 99.74
tagset and LTR scanning
</table>
<page confidence="0.989301">
141
</page>
<subsectionHeader confidence="0.983612">
6.2 Discussion
</subsectionHeader>
<bodyText confidence="0.999979294117647">
The aim of this research has been to develop an
automatic verb phrase chunker for Urdu. To get
maximum accuracy different experiments have
been conducted using rule base, statistical and
hybrid approaches. The intention has been to
identify the factors which are important for high
accuracy. The experiments show that statistical
technique performs better than the rule based
system, though the accuracy of the rule based
system may be increased further by adding more
rules to the repository, which is a tedious
process. It is also observed that a few simple er-
ror correction rules give a significant 3% im-
provement in accuracy. Moreover, merging POS
tag with IOB tag gives minor improvement in
accuracy but reversing scanning direction de-
creases accuracy.
These results are comparable, even a bit better
than the work reported for English. The results
are also comparable, perhaps a little better, than
Hindi, as reported in the literature, even though
Hindi is same as Urdu as spoken. Though the
difference in results from English can be attri-
buted to the grammatical differences, it is inter-
esting to note the differences with Hindi. Future
work should explore how much of the difference
can be attributed to the difference in data used
for training, and how much of this difference is
caused due to a slight morpho-syntactic differ-
ence between the two languages, where in Hindi
the case markers are written with the noun as
single word in Devanagari script, but are written
as separate words from nouns in Urdu using
Arabic script.
</bodyText>
<sectionHeader confidence="0.998508" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.99993925">
In this paper, we have proposed a hybrid ap-
proach to learn verb phrase chunking for Urdu
using HMM based statistical chunking and rule
based correction afterwards. We have performed
different experiments to get maximum accuracy
and found the scheme based on hybrid approach
with extended tagset and right to left scanning
gives the best accuracy of 98.44%.
</bodyText>
<sectionHeader confidence="0.991217" genericHeader="acknowledgments">
Appendix
</sectionHeader>
<bodyText confidence="0.88397">
The rules for verb phrase chunking are as following:
</bodyText>
<listItem confidence="0.5132122">
1. If POS(wi) = VBT and POS(wi_1) ! =
{VB, VBI, VBL, VBLI, AUX}, Then chunk
tag for wi is B.
2. If POS(wi) = VB and POS(wi_1) =
{VB, VBI, VBL}, Then chunk tag for wi
is I.
3. IfPOS(wi) = VB, POS(wi_1) = CVRP
and POS(wi_2) = VBL, Then chunk tag
for wi is I.
4. If POS(wi) = VBL , POS(wi_1) = JJ
and POS(wi_2) = NN, Then chunk tag
for wi_1 is B and wi is I.
5. If POS(wi) = VBL , POS(wi_1) = NN
and POS(wi_2) = JJ, Then chunk tag
for wi_1 is B and wi is I.
6. If POS(wi) = VBLI , POS(wi_1) =
NNP and POS(wi_2) = NN , Then
chunk tag for wi_1 is B and wi is I.
7. IfPOS(wi) = VBLI, POS(wi_1) = NN
and POS(wi_2) = NNP, Then chunk
tag for wi_1 is B and wi is I.
8. If POS(wi) = WALA , POS(wi+1) =
NN and POS(wi+2) = NN, Then chunk
tag for wi+1 is I.
9. IfPOS(wi) = WALA, POS(wi+1) = JJ
</listItem>
<bodyText confidence="0.596114111111111">
and POS(wi+2) = NN, Then chunk tag
for wi+1 is I.
10. If POS(wi) = WALA , POS(wi_1) =
VBI, Then chunk tag for wi is I.
11. If POS(wi) = WALA , POS(wi_1) =
VBLI, Then chunk tag for wi is I.
12. If POS(wi) = WALA , POS(wi_1) =
VBLI, Then chunk tag for tag for wi is
also I.
</bodyText>
<sectionHeader confidence="0.995538" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998381294117647">
bney S. 1991. Parsing by Chunks: Principle
based parsing. Kluwer Academic Publishers,
Dordrecht.
Agarwal H. and Mani A. 2006. Part of Speech Tag-
ging and Chunking with Conditional Random
Fields. In proceedings of NLPAI Machine Learn-
ing Context, Mumbai, India.
Butt M. 1995. The Structure of Complex Predicates in
Urdu. Stanford, CA: CSLI Publications.
Brant T. 2000. TnT: a statistical part of speech
tager. In proceeding of the sixth conference on ap-
plied natural language processing, Seattle, Wash-
ington: 224-231.
Chakrabarti D., Mandalia H., Priya R., Sarma V., and
Bhattacharyya P. 2008. Hindi Compound Verbs
and their Automatic Extraction. Computational
Linguistics (COLING08), Manchester, UK.
</reference>
<page confidence="0.978044">
142
</page>
<reference confidence="0.999789482142857">
Chen Kuang-Hua and Chen Hsin-His. 1993. A Pro-
bablistic Chunker. In proceedings of ROCLING
VI.
Church K. 1988. A stochastic parts program and
noun phrase parser for unrestricted text. In
proceedings of Second Conference on Applied
Natural Language Processing: 136-143.
Dalal A., Nagaraj K., Sawant U. and Shelke S. 2006.
Hindi Part-of-speech tagging and chunking: A
Maximum Entropy Approach. In proceedings of
NLPAI Machine Learning Context, Mumbai, India.
Grover C. and Tobin R. 2007. Rule Based Chunking
and Reusability. In proceedings of the Fifth inter-
national conference on Language Resources.
Hussain, S. 2004. Finite-State Morphological Ana-
lyzer for Urdu. Unpublished MS Thesis, National
University of Computer and Emerging Sciences,
Lahore, Pakistan. Available at www.crulp.org.
Kudo T. and Matsumoto, Y. 2001. Chunking with
Support Vector Machines. Proceedings of NAACL
2001:1013-1015.
Muaz A., Ali A. and Hussain S. 2009. Analysis and
Development of Urdu POS Tagged Corpora.
In proceedings of the 7th Workshop on Asian Lan-
guage Resources, IJCNLP&apos;09, Suntec City, Singa-
pore.
Muaz, A., Khan, A. 2009. &amp;quot;The Morphosyntactic Be-
havior of `Wala&apos; in Urdu Language&amp;quot;, In the Pro-
ceedings of 28th Annual Meeting of the South
Asian Language Analysis Roundtable, SALA&apos;09,
University of North Texas, USA. Available at
http://www.crulp.org.
Park S. and Zhang B. 2003. Text Chunking by
Combining Hand-Crafted Rules and Memory-
Based Learning. In proceedings of the 41st An-
nual Meeting on Association for Computational
Linguistics - Volume 1: 497-504.
Ramshaw L. A. and Marcus M. P. 1995. Text chunk-
ing using transformation based learning. In
proceedings of the third ACL workshop on Very
Large Corpora, Somerset, NJ: 82-94.
Sajjad, H. 2007. Statistical Part of Speech Tagger for
Urdu. Unpublished MS Thesis, National Universi-
ty of Computer and Emerging Sciences, Lahore,
Pakistan. Available at www.crulp.org.
Singh A., Bendre S. and Sangal R. 2005. HMM
Based Chunker for Hindi. In the Proceedings of
IJCNLP-05: The Second International Joint Confe-
rence on Natural Language Processing.
Veenstra, J. and van den Bosch, A. 2000. Single-
Classifier Memory-Based Phrase Chunking. In
proceedings of CoNLL-2000 and LLL-2000: 157-
159.
Zhou, G., Su, J. and Tey, T. 2000. Hybrid Text
Chunking. In proceedings of CoNLL- 2000 and
LLL-2000: 163-165.
</reference>
<page confidence="0.99913">
143
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.282023">
<title confidence="0.994235">A hybrid approach to Urdu verb phrase chunking</title>
<author confidence="0.587638">Wajid</author>
<affiliation confidence="0.684988">National University of and Emergence Pakistan.</affiliation>
<email confidence="0.999809">wajid.ali@msn.com</email>
<abstract confidence="0.9990538">A variety of verb phrases exist in Urdu including simple verb phrases, conjunct verb phrases and compound verb phrases. This paper explains the structure of Urdu verb phrases, and details a series of experiment to automatically tag them. Initially, a rule based model is developed using 21 linguistic rules for automatic VP chunking. A 100,000 word Urdu corpus is manually tagged with VP chunk tags. The corpus is then used to develop a hybrid approach using HMM based statistical chunking and correction rules. The technique is enhanced by changing chunking direction and merging chunk and POS tags. The automatically chunked data is compared with manually tagged held-out data to identify and analyze the errors. Based on the analysis, correction rules are extracted to address the errors. By applying these rules after statistical tagging, further improvement is achieved in chunking accuracy. The results of all experiments are reported with maximum overall accuracy of 98.44% achieved using hybrid approach with extended tagset.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>S bney</author>
</authors>
<title>Parsing by Chunks: Principle based parsing.</title>
<date>1991</date>
<publisher>Kluwer Academic Publishers,</publisher>
<location>Dordrecht.</location>
<contexts>
<context position="5355" citStr="bney (1991)" startWordPosition="898" endWordPosition="899">ally followed by auxiliaries and verb tense marker. The first verb is main verb and contributes the meaning of the sentence. The second verb adds additional information as shown in (3). 2 Urdu sentences are written from right to left. (3) �� ��! �� �� �� &amp;quot;�# ��� Ali kam kar baeTha hai Ali work do sit VBT-present &amp;quot;Ali has done the work&amp;quot; Detailed analysis of Urdu VP is not in the scope of this paper. For further discussion, see e.g. Butt (1995) and Chakrabarti et al. (2008). 3 Earlier work on Chunkin g The work on chunking based on machine learning was introduced by Church ( 1988) for English. Abney (1991) proposed the idea of parsing by chunks, defining the chunks in English by assuming that a chunk has syntactic structure. Chunking was used to convert sentences into non-overlapping phrases, like VP and Noun Phrase (NP), to parse the sentence. Chen (1993) proposed a probabilistic chunker based on Abney (1991). Ramshaw et al. (1995) used transformation based learning using a large annotated corpus for English. They proposed chunking as an IOB tagging task, where I marks the words which are Inside a chunk, O marks the words which are Outside the chunk and B marks the words which are at the Begin</context>
</contexts>
<marker>bney, 1991</marker>
<rawString>bney S. 1991. Parsing by Chunks: Principle based parsing. Kluwer Academic Publishers, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Agarwal</author>
<author>A Mani</author>
</authors>
<title>Part of Speech Tagging and Chunking with Conditional Random Fields.</title>
<date>2006</date>
<booktitle>In proceedings of NLPAI Machine Learning Context,</booktitle>
<location>Mumbai, India.</location>
<marker>Agarwal, Mani, 2006</marker>
<rawString>Agarwal H. and Mani A. 2006. Part of Speech Tagging and Chunking with Conditional Random Fields. In proceedings of NLPAI Machine Learning Context, Mumbai, India.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Butt</author>
</authors>
<date>1995</date>
<booktitle>The Structure of Complex Predicates in Urdu.</booktitle>
<publisher>CSLI Publications.</publisher>
<location>Stanford, CA:</location>
<contexts>
<context position="5190" citStr="Butt (1995)" startWordPosition="867" endWordPosition="868">��� ��� ��� �� � � ��� Ali ne kamraa saaf kiya tha � clean � Ali CM room do-past VBT-past &amp;quot;Ali cleaned the room&amp;quot; A compound verb phrase consists of two verbs, optionally followed by auxiliaries and verb tense marker. The first verb is main verb and contributes the meaning of the sentence. The second verb adds additional information as shown in (3). 2 Urdu sentences are written from right to left. (3) �� ��! �� �� �� &amp;quot;�# ��� Ali kam kar baeTha hai Ali work do sit VBT-present &amp;quot;Ali has done the work&amp;quot; Detailed analysis of Urdu VP is not in the scope of this paper. For further discussion, see e.g. Butt (1995) and Chakrabarti et al. (2008). 3 Earlier work on Chunkin g The work on chunking based on machine learning was introduced by Church ( 1988) for English. Abney (1991) proposed the idea of parsing by chunks, defining the chunks in English by assuming that a chunk has syntactic structure. Chunking was used to convert sentences into non-overlapping phrases, like VP and Noun Phrase (NP), to parse the sentence. Chen (1993) proposed a probabilistic chunker based on Abney (1991). Ramshaw et al. (1995) used transformation based learning using a large annotated corpus for English. They proposed chunking</context>
</contexts>
<marker>Butt, 1995</marker>
<rawString>Butt M. 1995. The Structure of Complex Predicates in Urdu. Stanford, CA: CSLI Publications.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Brant</author>
</authors>
<title>TnT: a statistical part of speech tager.</title>
<date>2000</date>
<booktitle>In proceeding of the sixth conference on applied natural language processing,</booktitle>
<pages>224--231</pages>
<location>Seattle, Washington:</location>
<marker>Brant, 2000</marker>
<rawString>Brant T. 2000. TnT: a statistical part of speech tager. In proceeding of the sixth conference on applied natural language processing, Seattle, Washington: 224-231.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Chakrabarti</author>
<author>H Mandalia</author>
<author>R Priya</author>
<author>V Sarma</author>
<author>P Bhattacharyya</author>
</authors>
<date>2008</date>
<booktitle>Hindi Compound Verbs and their Automatic Extraction. Computational Linguistics (COLING08),</booktitle>
<location>Manchester, UK.</location>
<contexts>
<context position="5220" citStr="Chakrabarti et al. (2008)" startWordPosition="870" endWordPosition="873"> � ��� Ali ne kamraa saaf kiya tha � clean � Ali CM room do-past VBT-past &amp;quot;Ali cleaned the room&amp;quot; A compound verb phrase consists of two verbs, optionally followed by auxiliaries and verb tense marker. The first verb is main verb and contributes the meaning of the sentence. The second verb adds additional information as shown in (3). 2 Urdu sentences are written from right to left. (3) �� ��! �� �� �� &amp;quot;�# ��� Ali kam kar baeTha hai Ali work do sit VBT-present &amp;quot;Ali has done the work&amp;quot; Detailed analysis of Urdu VP is not in the scope of this paper. For further discussion, see e.g. Butt (1995) and Chakrabarti et al. (2008). 3 Earlier work on Chunkin g The work on chunking based on machine learning was introduced by Church ( 1988) for English. Abney (1991) proposed the idea of parsing by chunks, defining the chunks in English by assuming that a chunk has syntactic structure. Chunking was used to convert sentences into non-overlapping phrases, like VP and Noun Phrase (NP), to parse the sentence. Chen (1993) proposed a probabilistic chunker based on Abney (1991). Ramshaw et al. (1995) used transformation based learning using a large annotated corpus for English. They proposed chunking as an IOB tagging task, where</context>
</contexts>
<marker>Chakrabarti, Mandalia, Priya, Sarma, Bhattacharyya, 2008</marker>
<rawString>Chakrabarti D., Mandalia H., Priya R., Sarma V., and Bhattacharyya P. 2008. Hindi Compound Verbs and their Automatic Extraction. Computational Linguistics (COLING08), Manchester, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chen Kuang-Hua</author>
<author>Chen Hsin-His</author>
</authors>
<title>A Probablistic Chunker.</title>
<date>1993</date>
<booktitle>In proceedings of ROCLING VI.</booktitle>
<marker>Kuang-Hua, Hsin-His, 1993</marker>
<rawString>Chen Kuang-Hua and Chen Hsin-His. 1993. A Probablistic Chunker. In proceedings of ROCLING VI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Church</author>
</authors>
<title>A stochastic parts program and noun phrase parser for unrestricted text.</title>
<date>1988</date>
<booktitle>In proceedings of Second Conference on Applied Natural Language Processing:</booktitle>
<pages>136--143</pages>
<marker>Church, 1988</marker>
<rawString>Church K. 1988. A stochastic parts program and noun phrase parser for unrestricted text. In proceedings of Second Conference on Applied Natural Language Processing: 136-143.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Dalal</author>
<author>K Nagaraj</author>
<author>U Sawant</author>
<author>S Shelke</author>
</authors>
<title>Hindi Part-of-speech tagging and chunking: A Maximum Entropy Approach.</title>
<date>2006</date>
<booktitle>In proceedings of NLPAI Machine Learning Context,</booktitle>
<location>Mumbai, India.</location>
<contexts>
<context position="7567" citStr="Dalal et al. (2006)" startWordPosition="1269" endWordPosition="1272">r for Hindi. They divi ded chunk tagging into two main tasks: one was identification of chunk boundaries and the other was labeling of chunks. The Hindi annotated corpus of Simple verb Complex verb phrase phrase Conjuntverb Compound phrase verb phrase Figure 1: Categorization of Urdu verb phrase 138 200,000 words was used in their work. The data of 150,000 words used to train different HMM representations and 50,000 words data was kept aside as unseen data. The chunker was tested on 20,000 words and chunker achieved 92% precision with 100% recall for chunk boundaries by the HMM based chunker. Dalal et al. (2006) presented a maximum entropy based statistical approach to POS tagger and chunk tagger for Hindi. The model uses multiple features simultaneously to predict the tag for a word. The feature set is broadly classified as context-based features, word features, dictionary features and corpus-based features. The annotated corpus contained almost 35,000 words for training and testing. The reported accuracy was 87.4%. Agarwal et al. (2006) used Conditional Random Field for POS tagging and chunking Hindi text. Various experiments were carried out with various sets and combinations of features to mark a</context>
</contexts>
<marker>Dalal, Nagaraj, Sawant, Shelke, 2006</marker>
<rawString>Dalal A., Nagaraj K., Sawant U. and Shelke S. 2006. Hindi Part-of-speech tagging and chunking: A Maximum Entropy Approach. In proceedings of NLPAI Machine Learning Context, Mumbai, India.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Grover</author>
<author>R Tobin</author>
</authors>
<title>Rule Based Chunking and Reusability.</title>
<date>2007</date>
<booktitle>In proceedings of the Fifth international conference on Language Resources.</booktitle>
<marker>Grover, Tobin, 2007</marker>
<rawString>Grover C. and Tobin R. 2007. Rule Based Chunking and Reusability. In proceedings of the Fifth international conference on Language Resources.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Hussain</author>
</authors>
<title>Finite-State Morphological Analyzer for Urdu. Unpublished MS Thesis,</title>
<date>2004</date>
<institution>National University of Computer and Emerging Sciences, Lahore, Pakistan.</institution>
<note>Available at www.crulp.org.</note>
<contexts>
<context position="3483" citStr="Hussain 2004" startWordPosition="558" endWordPosition="559">n Section 2. Section 3 presents some relevant chunking related work. Section 4 contains the detail of the tagged corpus developed for this task. Methodology is discussed in Section 5. The results and discussion are presented in Section 6. Section 7 concludes the work. 2 Verb phrases in Urdu Minimally, an Urdu VP is represented by a single verb. However, a typical Urdu verb phrase contains a verb followed by one or more auxiliary verbs (AUX) and verb tense markers (VBT). Each is represented by a separate word. Some of the tense and aspect information is also encoded within the verb morphology (Hussain 2004). An Urdu verb phrase can be categorized into a simple verb phrase or complex verb phrase. In a complex verb phrase, the verb is formed by a combination of nominal + verb (called conjunct verb) or a verb + verb (called compound verb). These complex verbs are also referred as complex predicates. 137 Proceedings of the 8th Workshop on Asian Language Resources, pages 137–143, Beijing, China, 21-22 August 2010. c�2010 Asian Federation for Natural Language Processing Verb Phrase The following subsections explain these types of verb phrases with examples. 2.1 Simple Verb Phrase A simple verb phrase </context>
</contexts>
<marker>Hussain, 2004</marker>
<rawString>Hussain, S. 2004. Finite-State Morphological Analyzer for Urdu. Unpublished MS Thesis, National University of Computer and Emerging Sciences, Lahore, Pakistan. Available at www.crulp.org.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Kudo</author>
<author>Y Matsumoto</author>
</authors>
<title>Chunking with Support Vector Machines.</title>
<date>2001</date>
<booktitle>Proceedings of NAACL</booktitle>
<pages>2001--1013</pages>
<marker>Kudo, Matsumoto, 2001</marker>
<rawString>Kudo T. and Matsumoto, Y. 2001. Chunking with Support Vector Machines. Proceedings of NAACL 2001:1013-1015.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Muaz</author>
<author>A Ali</author>
<author>S Hussain</author>
</authors>
<title>Analysis and Development of Urdu POS Tagged Corpora.</title>
<date>2009</date>
<booktitle>In proceedings of the 7th Workshop on Asian Language Resources, IJCNLP&apos;09, Suntec City,</booktitle>
<contexts>
<context position="8511" citStr="Muaz et al. 2009" startWordPosition="1426" endWordPosition="1429">ntained almost 35,000 words for training and testing. The reported accuracy was 87.4%. Agarwal et al. (2006) used Conditional Random Field for POS tagging and chunking Hindi text. Various experiments were carried out with various sets and combinations of features to mark a gradual increase in the performance of the system throughout the building process. A data of 21,000 words used for the training. The chunker gave 90.89% accuracy on the data for CONLL 2000. 4 Corpus and Tagset For the current work, Part of speech (POS) tagged corpus containing 4,585 sentences and 101,414 words is used (from Muaz et al. 2009). Complex phrase is composed of a nominal, adjective or a verb combined with a light verb. In the POS tagged corpus used, light verbs are not tagged separately. However, tagging such verbs as light verbs helps determine whether the preceding word is part of verb phrase. So, we customized the tagset by introducing light verb tag (VBL) and infinitive light verb tag (VBLI) to better address the compound and conjunct verb phrases, following Sajjad (2007). The example demonstrates the light verb tag and chunk boundary of complex phrase. &lt;JJ&gt; &amp;quot;t— &lt;NN&gt; e-)es &lt;PP&gt; 3 &lt;NNP &lt;VBL&gt; L&amp; &lt;O&gt;&lt;NN&gt;6-)A &lt;O&gt;&lt;PP&gt;-</context>
</contexts>
<marker>Muaz, Ali, Hussain, 2009</marker>
<rawString>Muaz A., Ali A. and Hussain S. 2009. Analysis and Development of Urdu POS Tagged Corpora. In proceedings of the 7th Workshop on Asian Language Resources, IJCNLP&apos;09, Suntec City, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Muaz</author>
<author>A Khan</author>
</authors>
<title>The Morphosyntactic Behavior of `Wala&apos; in Urdu Language&amp;quot;,</title>
<date>2009</date>
<booktitle>In the Proceedings of 28th Annual Meeting of the South Asian Language Analysis Roundtable, SALA&apos;09,</booktitle>
<institution>University of North Texas, USA.</institution>
<note>Available at http://www.crulp.org.</note>
<contexts>
<context position="13696" citStr="Muaz and Khan (2009)" startWordPosition="2376" endWordPosition="2379">unk tag for tag for wi is also I. 5.4 Architecture of VP Chunker A POS tagged sentence is the input of the VP chunker. The input data is prepared in a specific format and each line contains only a POS tag corresponding to the word in the sentence. TnT Tagger outputs appropriate chunk tag against each POS tag using HMM model. Then post processing is performed on the output of the statistical chunker to enhance the accuracy by applying the error correction rules. Figure 2 shows the architecture of this VP chunker. Figure 2: Architecture of VP Chunker 3 There is no easy translation for WALA. See Muaz and Khan (2009). IOB tagged sentence n 140 5.5 Experiments VP chunking system is evaluated by conducting a series of experiments. The data is trained and tested using TnT tagger. Three additional factors are used. First, if one scans the sentence in reverse order, one may be able to better predict phrase boundary, as CM comes at the end of a NP. Thus, both Right to Left (default for Urdu) and Left to Right (reverse) directions are explored for scanning and tagging. Second, IOB tagging scheme is further fine-grained by merging it with POS tagset, as an alternate system. Thus B-NN and B-VB are used as differen</context>
</contexts>
<marker>Muaz, Khan, 2009</marker>
<rawString>Muaz, A., Khan, A. 2009. &amp;quot;The Morphosyntactic Behavior of `Wala&apos; in Urdu Language&amp;quot;, In the Proceedings of 28th Annual Meeting of the South Asian Language Analysis Roundtable, SALA&apos;09, University of North Texas, USA. Available at http://www.crulp.org.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Park</author>
<author>B Zhang</author>
</authors>
<title>Text Chunking by Combining Hand-Crafted Rules and MemoryBased Learning.</title>
<date>2003</date>
<booktitle>In proceedings of the 41st Annual Meeting on Association for Computational Linguistics -</booktitle>
<volume>1</volume>
<pages>497--504</pages>
<marker>Park, Zhang, 2003</marker>
<rawString>Park S. and Zhang B. 2003. Text Chunking by Combining Hand-Crafted Rules and MemoryBased Learning. In proceedings of the 41st Annual Meeting on Association for Computational Linguistics - Volume 1: 497-504.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L A Ramshaw</author>
<author>M P Marcus</author>
</authors>
<title>Text chunking using transformation based learning.</title>
<date>1995</date>
<booktitle>In proceedings of the third ACL workshop on Very Large Corpora,</booktitle>
<pages>82--94</pages>
<location>Somerset, NJ:</location>
<marker>Ramshaw, Marcus, 1995</marker>
<rawString>Ramshaw L. A. and Marcus M. P. 1995. Text chunking using transformation based learning. In proceedings of the third ACL workshop on Very Large Corpora, Somerset, NJ: 82-94.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Sajjad</author>
</authors>
<title>Statistical Part of Speech Tagger for Urdu. Unpublished MS Thesis,</title>
<date>2007</date>
<institution>National University of Computer and Emerging Sciences, Lahore, Pakistan.</institution>
<note>Available at www.crulp.org.</note>
<contexts>
<context position="8965" citStr="Sajjad (2007)" startWordPosition="1506" endWordPosition="1507">2000. 4 Corpus and Tagset For the current work, Part of speech (POS) tagged corpus containing 4,585 sentences and 101,414 words is used (from Muaz et al. 2009). Complex phrase is composed of a nominal, adjective or a verb combined with a light verb. In the POS tagged corpus used, light verbs are not tagged separately. However, tagging such verbs as light verbs helps determine whether the preceding word is part of verb phrase. So, we customized the tagset by introducing light verb tag (VBL) and infinitive light verb tag (VBLI) to better address the compound and conjunct verb phrases, following Sajjad (2007). The example demonstrates the light verb tag and chunk boundary of complex phrase. &lt;JJ&gt; &amp;quot;t— &lt;NN&gt; e-)es &lt;PP&gt; 3 &lt;NNP &lt;VBL&gt; L&amp; &lt;O&gt;&lt;NN&gt;6-)A &lt;O&gt;&lt;PP&gt;-3 &lt;O&gt;&lt;NNP&gt;,,6 I&gt;&lt;&lt;VBT&gt; tO &lt;I&gt;&lt;VBL&gt; is &lt;B&gt;&lt;JJ&gt; &amp;quot;k— Ali ne kamraa saaf kiya tha Ali CMroom clean do-past VBT-past &amp;quot;Ali cleaned the room&amp;quot; The IOB tagset is used to prepare chunk annotated data. The data of 3,650 sentences containing 81,430 words is for training, 530 sentences containing 9,985 words are used for analysis during the implementation of methodologies (as held-out data) and the remaining 405 sentences with 9,999 words are used for testing. 5 </context>
</contexts>
<marker>Sajjad, 2007</marker>
<rawString>Sajjad, H. 2007. Statistical Part of Speech Tagger for Urdu. Unpublished MS Thesis, National University of Computer and Emerging Sciences, Lahore, Pakistan. Available at www.crulp.org.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Singh</author>
<author>S Bendre</author>
<author>R Sangal</author>
</authors>
<title>HMM Based Chunker for Hindi.</title>
<date>2005</date>
<booktitle>In the Proceedings of IJCNLP-05: The Second International Joint Conference on Natural Language Processing.</booktitle>
<contexts>
<context position="6916" citStr="Singh et al. (2005)" startWordPosition="1159" endWordPosition="1162">.05 % precision and 92.03% recall for English. Kudo et al. (2001) use support vector machines for chunking with 93.48% accuracy for English. Park et al. (2003) described a hybrid approach using rule based and memory based learning to chunk the phrases of Korean language. First, the rule based chunker is applied to chunk the phrases then memory based learning technique is used for the correction of errors which were not handled by rule based chunker. Grover et al. (2007) proposed rule based chunking using XML. They reported 90.18% precision and 92.49% recall for verb group chunker for English. Singh et al. (2005) presented HMM based chunk tagger for Hindi. They divi ded chunk tagging into two main tasks: one was identification of chunk boundaries and the other was labeling of chunks. The Hindi annotated corpus of Simple verb Complex verb phrase phrase Conjuntverb Compound phrase verb phrase Figure 1: Categorization of Urdu verb phrase 138 200,000 words was used in their work. The data of 150,000 words used to train different HMM representations and 50,000 words data was kept aside as unseen data. The chunker was tested on 20,000 words and chunker achieved 92% precision with 100% recall for chunk bound</context>
</contexts>
<marker>Singh, Bendre, Sangal, 2005</marker>
<rawString>Singh A., Bendre S. and Sangal R. 2005. HMM Based Chunker for Hindi. In the Proceedings of IJCNLP-05: The Second International Joint Conference on Natural Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Veenstra</author>
<author>A van den Bosch</author>
</authors>
<title>SingleClassifier Memory-Based Phrase Chunking.</title>
<date>2000</date>
<booktitle>In proceedings of CoNLL-2000 and LLL-2000:</booktitle>
<pages>157--159</pages>
<marker>Veenstra, van den Bosch, 2000</marker>
<rawString>Veenstra, J. and van den Bosch, A. 2000. SingleClassifier Memory-Based Phrase Chunking. In proceedings of CoNLL-2000 and LLL-2000: 157-159.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Zhou</author>
<author>J Su</author>
<author>T Tey</author>
</authors>
<title>Hybrid Text Chunking.</title>
<date>2000</date>
<booktitle>In proceedings of CoNLL- 2000 and LLL-2000:</booktitle>
<pages>163--165</pages>
<contexts>
<context position="6059" citStr="Zhou et al. (2000)" startWordPosition="1018" endWordPosition="1021">at a chunk has syntactic structure. Chunking was used to convert sentences into non-overlapping phrases, like VP and Noun Phrase (NP), to parse the sentence. Chen (1993) proposed a probabilistic chunker based on Abney (1991). Ramshaw et al. (1995) used transformation based learning using a large annotated corpus for English. They proposed chunking as an IOB tagging task, where I marks the words which are Inside a chunk, O marks the words which are Outside the chunk and B marks the words which are at the Beginning of a chunk. Overall recall and precision achieved by this approach is about 88%. Zhou et al. (2000) use standard HMM based tagging methods to model the chunking process, and achieved an accuracy of 91 .99% precision and 92.25% recall using a contextual lexicon. Veenstra et al. (2000) use memory based phrase chunking with accuracy of 91.05 % precision and 92.03% recall for English. Kudo et al. (2001) use support vector machines for chunking with 93.48% accuracy for English. Park et al. (2003) described a hybrid approach using rule based and memory based learning to chunk the phrases of Korean language. First, the rule based chunker is applied to chunk the phrases then memory based learning t</context>
</contexts>
<marker>Zhou, Su, Tey, 2000</marker>
<rawString>Zhou, G., Su, J. and Tey, T. 2000. Hybrid Text Chunking. In proceedings of CoNLL- 2000 and LLL-2000: 163-165.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>