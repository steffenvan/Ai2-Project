<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000110">
<title confidence="0.998347">
A Practical Classification of Multiword Expressions
</title>
<author confidence="0.679889">
Radosław Moszczyiiski
</author>
<affiliation confidence="0.6398175">
Institute of Computer Science
Polish Academy of Sciences
</affiliation>
<address confidence="0.789584">
Ordona 21, 01-237 Warszawa, Poland
</address>
<email confidence="0.995479">
rm@ipipan.waw.pl
</email>
<sectionHeader confidence="0.998583" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999979636363636">
The paper proposes a methodology for deal-
ing with multiword expressions in natu-
ral language processing applications. It
provides a practically justified taxonomy
of such units, and suggests the ways in
which the individual classes can be pro-
cessed computationally. While the study is
currently limited to Polish and English, we
believe our findings can be successfully em-
ployed in the processing of other languages,
with emphasis on inflectional ones.
</bodyText>
<sectionHeader confidence="0.999516" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999953">
radosław moszczyńskiIt is generally acknowledged
that multiword expressions constitute a serious diffi-
culty in all kinds of natural language processing ap-
plications (Sag et al., 2002). It has also been shown
that proper handling of such expressions can result
in significantly better results in parsing (Zhang et
al., 2006).
The difficulties in processing multiword expres-
sions result from their lexical variability, and the
fact that many of them can undergo syntactic trans-
formations. Another problem is that the label “mul-
tiword expressions” covers many linguistic units
that often have little in common. We believe that
the past approaches to formalize the phenomenon,
such as IDAREX (Segond and Breidt, 1995) and
Phrase Manager (Pedrazzini, 1994), suffered from
trying to cover all multiword expressions as a
whole. Such an approach, as is shown below, can-
not efficiently cover all the phenomena related to
multiword expressions.
Therefore, in the present paper we formulate a
proposal of a taxonomy for multiword expressions,
useful for the purposes of natural language process-
ing. The taxonomy is based on the stages in the
NLP workflow in which the individual classes of
units can be processed successfully. We also sug-
gest the tools that can be used for processing the
units in each of the classes.
</bodyText>
<sectionHeader confidence="0.987431" genericHeader="method">
2 An NLP Taxonomy of Multiword
Expressions
</sectionHeader>
<bodyText confidence="0.999732428571429">
At this stage of work, our taxonomy is composed
of two groups of multiword expressions. The first
one consists of units that should be processed be-
fore syntactic analysis, and the other one includes
expressions whose recognition should be combined
with the syntactic analysis process. The next sec-
tions describe both groups in more detail.
</bodyText>
<subsectionHeader confidence="0.7507215">
2.1 Morphosyntactically Idiosyncratic
Expressions
</subsectionHeader>
<bodyText confidence="0.999578363636364">
The first group consists of morphosyntactically id-
iosyncratic units. They follow unusual morpholog-
ical and syntactic patterns, which causes difficulties
for automatic analyzers.
By morphological idiosyncrasies we mean two
types of units. First of all, there are bound words
that do not inflect and cannot be used independently
outside of the given multiword expression. In Pol-
ish, there are many such units, which are typically
prepositional phrases functioning as complex adver-
bials, e.g.:1
</bodyText>
<footnote confidence="0.9877325">
1The asterisk in this and the following examples indicates
an untranslatable bound word.
</footnote>
<page confidence="0.994086">
19
</page>
<bodyText confidence="0.918359625">
Proceedings of the ACL 2007 Student Research Workshop, pages 19–24,
Prague, June 2007. c�2007 Association for Computational Linguistics
(1) na wskroś words, but that could be interpreted wrongly by the
on * syntactic analyzer. Consider the following multi-
‘thoroughly’ word expression:
Secondly, there are unusual forms of otherwise
ordinary words that only appear in strictly defined
multiword expressions. An example is the follow-
ing unit, in which the genitive form of the noun
‘daddy’ is different than the one used outside this
particular construction:
(4) na kolanach
on knees-Loc
‘on one’s knees’ (‘groveling’)
This expression can be used in constructions of the
following type:
</bodyText>
<listItem confidence="0.588886">
(2) nie rób z tata
</listItem>
<subsectionHeader confidence="0.931175">
Neg do-Imperative of *daddy-Gen
</subsectionHeader>
<bodyText confidence="0.979483333333333">
wariata
fool
‘stop making a fool of me’
Morphological idiosyncrasies can be referred to
as “objective” in the sense that it can be proved by
doing corpus research that particular words only ap-
pear in a strictly limited set of constructions. Since
outside such constructions the words do not have
any meaning of their own, it is pointless to put them
in the lexicon of a morphological analyzer. From
the processing point of view, they are parts of com-
plex multiword lexemes which should be considered
as indivisible wholes.
Syntactically idiosyncratic phrases are those
whose structure or behavior is incorrect from the
point of view of a given grammar. In this sense,
they are “subjective”, because they depend on the
rules underlying a particular parser.
A typical parser of Polish is expected to accept
full sentences, i.e. phrases that contain a finite verb
phrase, but possibly not many phraseologisms that
are extremely common in texts and speech, and do
not constitute proper sentences from the point of
view of the grammar. This qualifies such phrases
to be included and formalized among the first group
we have distinguished. In Polish, such phrases in-
clude, e.g.:
</bodyText>
<listItem confidence="0.966806">
(3) Precz z łapami!
</listItem>
<subsectionHeader confidence="0.6141735">
off with hands-Inst
‘Get your hands off!’
</subsectionHeader>
<bodyText confidence="0.991411">
Another group of multiword expressions that
should be processed before parsing consists of com-
plex adverbials that do not include any bound
</bodyText>
<listItem confidence="0.8849625">
(5) Na kolanach Kowalskiego
on knees-Loc Kowalski-Gen
</listItem>
<bodyText confidence="0.9399834">
będą błagać.
be-Future;Pl;3rd beg-Infinitive
‘They will beg Kowalski on their knees.’
In the above example na kolanach is an adjunct
that is not subcategorized for by any of the remain-
ing constituents. However, since Kowalskiego is
genitive, the parser would be fooled to believe that
one of the possible interpretations is ‘They will beg
on Kowalski’s knees’, which is not correct and se-
mantically odd. Such complex adverbials are very
common in Polish, which is why we believe that for-
malizing them as wholes would allow us to achieve
better parsing results.
The last type of units that it is necessary to for-
malize for syntactic analysis are multiword text co-
hesion devices and interjections, whose syntactic
structure is hard to establish, as their constituents
belong to weakly defined classes. They can also
directly violate the grammar rules, as the coordina-
tion in the English example does:
</bodyText>
<listItem confidence="0.78121975">
(6) bądź co bądź
be-Imperative;Sg what be-Imperative;Sg
‘after all’
(7) by and large
</listItem>
<bodyText confidence="0.999576888888889">
Since the recognition and tagging of all the above
units will be performed before syntactic analysis, it
seems natural to combine this process with a gener-
alized mechanism of named entity recognition. We
intend to build a preprocessor for syntactic analy-
sis, along the lines of the ideas presented by Sagot
and Boullier (2005). However, in addition to the
set of named entities presented by the authors, we
also intend to formalize multiword expressions of
</bodyText>
<page confidence="0.967656">
20
</page>
<bodyText confidence="0.9999952">
the types presented above, possibly with the use of
lxtransduce.2 This will allow us to prepare the
input to the parser in such a way as to eliminate all
the unparsable elements. This in turn should result
in significantly better parsing coverage.
</bodyText>
<subsectionHeader confidence="0.998188">
2.2 Semantically Idiosyncratic Expressions
</subsectionHeader>
<bodyText confidence="0.9998612">
The other group in our classification consists of
multiword expressions that are idiosyncratic from
the point of view of semantics. It includes such
units as:
However, if the subject is postponed to a position
after the verb, all the potential right hand side ad-
verbials need to be attached after the subject, and
not directly after the verb. Thus, taking all the vari-
ation possibilities into account, it is not unlikely to
encounter such phrases in Polish:
</bodyText>
<figure confidence="0.7773894">
(9) Wziął pan
take-1sg;Masc;Past you-1sg;Masc;Nom
przed wszystkimi nogi za
before everyone legs-Acc under
pas!
(8) NP-Nom wziąć nogi za belt-Acc
NP-Nom to take legs-Acc under ‘You ran away before everyone else!’
pas
belt-Acc
‘to run away’
</figure>
<bodyText confidence="0.999846392857143">
From the syntactic analysis point of view, such
units are not problematic, as they follow regu-
lar grammatical patterns. They create difficulties
in other types of NLP-based applications, as their
meaning is not compositional, and cannot be pre-
dicted from the meaning of their constituents. Ex-
amples of such applications include electronic dic-
tionaries, which should be able to recognize idioms
and provide an appropriate, non-literal translation
(Prósz´eky and F¨oldes, 2005).
Such expressions can be extremely complex due
to the lexical and word order variations they can
undergo, which is especially the case in such lan-
guages as Polish. The set of syntactic variations
that are possible in unit (8) is very large. First of
all, there is the subject (NP-Nom). English multi-
word expressions are usually encoded disregarding
the subject, as it can never break the continuity of
the other constituents. In Polish it is different —
the subject can be absent altogether, it can appear
at the very beginning of the multiword expression
without breaking its continuity, but it can also ap-
pear after the verb, between the core constituents.
The subject can be of arbitrary length and needs to
agree in morphosyntactic features (number, gender,
and person) with the verb.
The verb can be modified with adverbial phrases,
both on the left hand side and the right hand side.
</bodyText>
<footnote confidence="0.851641">
2http://www.cogsci.ed.ac.uk/-richard/ltxml2/
lxtransduce.html
</footnote>
<bodyText confidence="0.99986095">
Some of the English multiword expressions also
display properties that make them difficult to pro-
cess automatically. Although the word order is
more rigid, it is still necessary to handle, e.g., pas-
sivization and nominalization. This concerns the
canonical example of spill the beans, and many oth-
ers.
It follows that the units in the second group
should not, and probably cannot, be reliably en-
coded with the same means as the simpler units
from Section 2.1, which can be accounted for prop-
erly with simple methods based on regular gram-
mars and surface processing.
One possible solution is to encode the complex
units with the rules of a formal grammar of the
given language. Another solution could be con-
structing an appropriate valence dictionary for verbs
in such expressions. Both possibilities imply that
the recognition process should be performed simul-
taneously with syntactic analysis.
</bodyText>
<sectionHeader confidence="0.999147" genericHeader="method">
3 Rationale
</sectionHeader>
<bodyText confidence="0.999925363636364">
The above classification was formulated during an
examination of the available formalisms for encod-
ing multiword expressions, which was a part of the
present work.
The attempts to formalize multiword expressions
for natural language processing can be roughly di-
vided into two groups. There are approaches that
aim at encoding such units with the rules of an
existing formal grammar, such as the approach de-
scribed by Debusmann (2004). On the other hand,
specialized, limited formalisms have been created,
</bodyText>
<page confidence="0.99586">
21
</page>
<bodyText confidence="0.999244952380952">
whose purpose is to encode only multiword expres-
sions. Such formalisms include the already men-
tioned IDAREX (Segond and Breidt, 1995) and
Phrase Manager (Pedrazzini, 1994).
The first approach has two drawbacks. One of
them is that using the rules of a given grammar to
encode multiword expressions seems to have sense
only if the rest of the language is formalized in the
same way. Thus, such an approach makes the lexi-
con of multiword expressions heavily dependant on
a particular grammar, which might make its reuse
difficult or impossible.
The other disadvantage concerns complexity.
While full-blown grammars do have the means to
handle the most complex multiword expressions
and their transformational potential, they create too
much overhead in the case of simple units, such
as idiomatic prepositional phrases that function as
adverbials, which have been presented above.
Thus, we decided to encode Polish multiword ex-
pressions with an existing, specialized formalism.
However, after an evaluation of such formalisms
none of the ones we were able to find proved to
be adequate for Polish. This is mostly due to the
properties of the language — Polish is highly in-
flectional and has a relatively free word order. Both
of these properties also apply to multiword expres-
sions, which implies that in order to capture all their
possible variations in Polish, it is necessary to use
a powerful formalism (cf. the example in (9)).
Our analysis revealed that IDAREX, which is a
simple formalism based on regular grammars, is
not appropriate for handling expressions that have a
very variable word order and allow many modifica-
tions. In IDAREX, each multiword unit is encoded
with a regular expression, whose symbols are words
or POS-markers. The words are described in terms
of two-level morphology, and can appear either on
the lexical level (which permits inflection) or the
surface level (which restricts the word to the form
present in the regular expression). An example is
provided below:
</bodyText>
<listItem confidence="0.907473">
(10) kick: :the :bucket;
</listItem>
<bodyText confidence="0.9972794">
Encoding the multiword expression in (8) with
IDAREX in such a way as to include all the pos-
sible variations leads to a description that suffers
from overgeneration. Also, IDAREX does not in-
clude any unification mechanisms. This makes it
unsuitable for any generation purposes (and reli-
able recognition purposes, too), as Polish requires
a means to enforce agreement between constituents.
Phrase Manager makes encoding multiword ex-
pressions difficult for other reasons. The method-
ology employed in the formalism requires each ex-
pression to be assigned to a predefined syntactic
class which determines the unit’s constituents, as
well as the modifications and transformations that
it can undergo:3
</bodyText>
<equation confidence="0.961998333333333">
(11) SYNTAX-TREE
(VP V (NP Art Adj N AdvP))
MODIFICATIONS
V &gt;
TRANSFORMATIONS
Passive, N-Adj-inversion
</equation>
<bodyText confidence="0.999314733333334">
Since it is sometimes the case that multiword
expressions belonging to the same class differ in
respect of the syntactic operations they can undergo,
the classes are arranged into a tree-like structure in
which a class might be subdivided further on into a
subclass that allows passivization, another one that
allows nominalization and subject-verb inversion,
etc.
The problem with this approach is that it leads
to a proliferation of classes. At least in Polish,
multiword expressions that follow the same general
syntactic pattern often differ in the transformations
they allow. Besides, the formalism creates too much
overhead in the case of simple multiword expres-
sions. Consider the following example in Polish:
</bodyText>
<listItem confidence="0.739400666666667">
(12) No nie!
oh no
‘Oh, come on!’
</listItem>
<bodyText confidence="0.99865">
In Phrase Manager it would be necessary to define
a syntactic class for this unit, which seems to be
both superfluous and problematic, as it is hard to
establish what parts of speech are the constituents
without taking purely arbitrary decisions.
To complicate matters further, the expression in
the example has a variant in which both constituents
</bodyText>
<footnote confidence="0.9816665">
3The transformations need to be defined with separate rules
elsewhere. The whole description is abbreviated.
</footnote>
<page confidence="0.998873">
22
</page>
<bodyText confidence="0.999964214285714">
switch their positions (with the meaning preserved).
In the case of such a simple expression, it is impos-
sible to “name” this transformation and assign any
syntactic or semantic prominence to it — it can
safely be treated as a simple permutation. How-
ever, Phrase Manager requires each operation to
be named and precisely defined in syntactic terms,
which in this case is more than it is worth.
In our opinion both those formalisms are in-
adequate for encoding all the phenomena labeled
as “multiword expressions”, especially in inflec-
tional languages. Such approaches might be suc-
cessful to a large extent in the case of fixed order
languages, such as English — both IDAREX and
Phrase Manager are reported to have been success-
fully employed for such purposes (Breidt and Feld-
weg, 1997; Tschichold, 2000). However, they fail
with languages that have richer inflection and per-
mit more word order variations. When used for
Polish, the surface processing oriented IDAREX
reaches the limits of its expressiveness; Phrase
Manager is inadequate for different reasons — the
assumptions it is based on would require something
not far from writing a complete grammar of Polish,
a task to which it is not suitable due to its limita-
tions. And on the other hand, it is much too com-
plicated for simple multiword expressions, such as
(12).
</bodyText>
<sectionHeader confidence="0.988127" genericHeader="method">
4 Previous Classifications
</sectionHeader>
<bodyText confidence="0.999916342857142">
There are numerous classifications available in lin-
guistic literature, and we considered three of them
in turn. From the practical point of view, none of
them proved to be adequate for our needs. More
precisely, none of them partitioned the field of
multiword expressions into manageable classes that
could be handled individually by uniform mecha-
nisms.
The classification presented by Brundage et al.
(1992) approaches the whole problem from an an-
gle similar to what is required in Phrase Manager.
It is based on a study of ca. 300 English and Ger-
man multiword expressions, which were divided
into classes based on their syntactic constituency
and the transformations they are able to undergo.
Such an approach seems to be a dead end for
exactly the same reasons that Phrase Manager has
been criticized above. The study was limited to 300
units, which made the whole undertaking manage-
able. We believe that a really extensive study would
lead to an unpredictable proliferation of very similar
classes, which would make the whole classification
too fine-grained and unpractical for any processing
purposes.
The categorization that has been examined next
is the one presented by Sag et al. (2002). It con-
sists of three categories: fixed expressions (abso-
lutely immutable), semi-fixed expressions (strictly
fixed word order, but some lexical variation is al-
lowed), syntactically-flexible expressions (mainly
decomposable idioms — cf. (8)), and institution-
alized phrases (statistical idiosyncrasies). Unfortu-
nately, such a categorization is hard to use in the
case of some Polish multiword expressions. Con-
sider this example:
</bodyText>
<figure confidence="0.305786333333333">
(13) Niech to szlag trafi!
let it-Acc * hit-Future
‘Damn it!’
</figure>
<bodyText confidence="0.99987752">
It is hard to establish which of the above categories
does it belong to. The only lexically variable el-
ement is it, which can be substituted with another
noun. This would qualify the expression to be in-
cluded in the second category. However, it has a
very free word order (Niech to trafi szlag!, Szlag
niech to trafi!, and Niech trafi to szlag! are all
acceptable). This in turn qualifies it to the third
category, but it is not a decomposable idiom, and
the word order variations are not semantically jus-
tified transformations, but rather permutations, as
in (12). To make matters worse, the main element
— szlag — is a word with a very limited distribu-
tion. This intuitively makes the unit fit more into
the first category of unproductive expressions. This
is even more obvious considering the fact that the
word order variations do not change the meaning.
Another classification was presented by Guenth-
ner and Blanco (2004). Their categories are very
numerous, and the whole undertaking suffers from
the fact that they are not formally defined. It also
lacks a coherent purpose – it is neither a linguistic,
nor a natural language processing classification, as
it tries to put very different phenomena into one
bag.
</bodyText>
<page confidence="0.992993">
23
</page>
<bodyText confidence="0.999723181818182">
The categories are sometimes more lexicograph-
ically, and sometimes more syntactically oriented.
For example, on the one hand the authors distin-
guish compound expressions (nouns, adverbs, etc.),
and on the other hand collocations. In our opinion
the categories should not be considered as parts of
the same classification, as members of the former
category belong to the lexicon, and the latter are
a purely distributional phenomenon. Therefore, in
the present form, the classification has no practical
use.
</bodyText>
<sectionHeader confidence="0.997083" genericHeader="conclusions">
5 Conclusions and Further Work
</sectionHeader>
<bodyText confidence="0.99999252">
We have shown that trying to provide a formal de-
scription of all phenomena labeled as multiword ex-
pressions as a whole is not possible, which becomes
obvious if one goes beyond English and tries to de-
scribe multiword expressions in heavily inflectional
and relatively free word order languages, such as
Polish. We have also shown the inadequacy of the
available classifications of multiword expressions
for computational processing of such languages.
In our opinion, a successful computational de-
scription of multiword expressions requires distin-
guishing two groups of units: idiosyncratic from
the point of view of morphosyntax and idiosyn-
cratic from the point of view of semantics. Such
a division allows for efficient use of existing tools
without the need of creating a cumbersome formal-
ism.
We believe that the practically oriented classifi-
cation presented above will allow us to build robust
tools for handling both types of multiword expres-
sions, which is the aim of our further research. The
immediate task is to build the syntactic preproces-
sor. We also plan to extend the classification to
make it slightly more fine-grained, which hopefully
will make even more efficient processing possible.
</bodyText>
<sectionHeader confidence="0.999635" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999742811320755">
Elisabeth Breidt and Helmut Feldweg. 1997. Accessing
foreign languages with COMPASS. Machine Trans-
lation, 12(1/2):153–174.
Jennifer Brundage, Maren Kresse, Ulrike Schwall, and
Angelika Storrer. 1992. Multiword lexemes: A
monolingual and contrastive typology for NLP and
MT. Technical Report IWBS 232, IBM Deutschland
GmbH, Institut f¨ur Wissenbasierte Systeme, Heidel-
berg.
Ralph Debusmann. 2004. Multiword expressions as
dependency subgraphs. In Proceedings of the ACL
2004 Workshop on Multiword Expressions: Integrat-
ing Processing, Barcelona, Spain.
Frantz Guenthner and Xavier Blanco. 2004. Multi-
lexemic expressions: an overview. In Christian
L`eclere; ´Eric Laporte; Mireille Piot; Max Silberztein,
editor, Syntax, Lexis, and Lexicon-Grammar, vol-
ume 24 of Linguisticce Investigationes Supplementa,
pages 239–252. John Benjamins.
Sandro Pedrazzini. 1994. Phrase Manager: A System
for Phrasal and Idiomatic Dictionaries. Georg Olms
Verlag, Hildeseim, Z¨urich, New York.
G´abor Prósz´eky and Andr´as F¨oldes. 2005. An intel-
ligent context-sensitive dictionary: A Polish-English
comprehension tool. In Human Language Tech-
nologies as a Challenge for Computer Science and
Linguistics. 2nd Language &amp; Technology Conference
April 21–23, 2005,, pages 386–389, Poznań, Poland.
Ivan Sag, Timothy Baldwin, Francis Bond, Ann Copes-
take, and Dan Flickinger. 2002. Multiword expres-
sions: A pain in the neck for NLP. In Proc. of the 3rd
International Conference on Intelligent Text Process-
ing and Computational Linguistics (CICLing-2002),
pages 1–15, Mexico City, Mexico.
Benoit Sagot and Pierre Boullier. 2005. From raw cor-
pus to word lattices: robust pre-parsing processing.
Archives of Control Sciences, special issue of selected
papers from LTC’05, 15(4):653–662.
Fr´ed´erique Segond and Elisabeth Breidt. 1995.
IDAREX: Formal description of German and French
multi-word expressions with finite state technology.
Technical Report MLTT-022, Rank Xerox Research
Centre, Grenoble.
Cornelia Tschichold. 2000. Multi-word units in natural
language processing. Georg Olms Verlag, Hildeseim,
Z¨urich, New York.
Yi Zhang, Valia Kordoni, Aline Villavicencio, and
Marco Idiart. 2006. Automated multiword expression
prediction for grammar engineering. In Proceedings
of the Workshop on Multiword Expressions: Identify-
ing and Exploiting Underlying Properties, pages 36–
44, Sydney, Australia. Association for Computational
Linguistics.
</reference>
<page confidence="0.999171">
24
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.960706">
<title confidence="0.999637">A Practical Classification of Multiword Expressions</title>
<author confidence="0.993516">Radosław Moszczyiiski</author>
<affiliation confidence="0.997831">Institute of Computer Science Polish Academy of Sciences</affiliation>
<address confidence="0.997568">Ordona 21, 01-237 Warszawa, Poland</address>
<email confidence="0.995098">rm@ipipan.waw.pl</email>
<abstract confidence="0.99793025">The paper proposes a methodology for dealing with multiword expressions in natural language processing applications. It provides a practically justified taxonomy of such units, and suggests the ways in which the individual classes can be processed computationally. While the study is currently limited to Polish and English, we believe our findings can be successfully employed in the processing of other languages, with emphasis on inflectional ones.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Elisabeth Breidt</author>
<author>Helmut Feldweg</author>
</authors>
<title>Accessing foreign languages with COMPASS.</title>
<date>1997</date>
<booktitle>Machine Translation,</booktitle>
<pages>12--1</pages>
<contexts>
<context position="15238" citStr="Breidt and Feldweg, 1997" startWordPosition="2418" endWordPosition="2422">tactic or semantic prominence to it — it can safely be treated as a simple permutation. However, Phrase Manager requires each operation to be named and precisely defined in syntactic terms, which in this case is more than it is worth. In our opinion both those formalisms are inadequate for encoding all the phenomena labeled as “multiword expressions”, especially in inflectional languages. Such approaches might be successful to a large extent in the case of fixed order languages, such as English — both IDAREX and Phrase Manager are reported to have been successfully employed for such purposes (Breidt and Feldweg, 1997; Tschichold, 2000). However, they fail with languages that have richer inflection and permit more word order variations. When used for Polish, the surface processing oriented IDAREX reaches the limits of its expressiveness; Phrase Manager is inadequate for different reasons — the assumptions it is based on would require something not far from writing a complete grammar of Polish, a task to which it is not suitable due to its limitations. And on the other hand, it is much too complicated for simple multiword expressions, such as (12). 4 Previous Classifications There are numerous classificatio</context>
</contexts>
<marker>Breidt, Feldweg, 1997</marker>
<rawString>Elisabeth Breidt and Helmut Feldweg. 1997. Accessing foreign languages with COMPASS. Machine Translation, 12(1/2):153–174.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jennifer Brundage</author>
<author>Maren Kresse</author>
<author>Ulrike Schwall</author>
<author>Angelika Storrer</author>
</authors>
<title>Multiword lexemes: A monolingual and contrastive typology for NLP and MT.</title>
<date>1992</date>
<tech>Technical Report IWBS 232,</tech>
<institution>IBM Deutschland GmbH, Institut f¨ur Wissenbasierte Systeme,</institution>
<location>Heidelberg.</location>
<contexts>
<context position="16214" citStr="Brundage et al. (1992)" startWordPosition="2576" endWordPosition="2579">a complete grammar of Polish, a task to which it is not suitable due to its limitations. And on the other hand, it is much too complicated for simple multiword expressions, such as (12). 4 Previous Classifications There are numerous classifications available in linguistic literature, and we considered three of them in turn. From the practical point of view, none of them proved to be adequate for our needs. More precisely, none of them partitioned the field of multiword expressions into manageable classes that could be handled individually by uniform mechanisms. The classification presented by Brundage et al. (1992) approaches the whole problem from an angle similar to what is required in Phrase Manager. It is based on a study of ca. 300 English and German multiword expressions, which were divided into classes based on their syntactic constituency and the transformations they are able to undergo. Such an approach seems to be a dead end for exactly the same reasons that Phrase Manager has been criticized above. The study was limited to 300 units, which made the whole undertaking manageable. We believe that a really extensive study would lead to an unpredictable proliferation of very similar classes, which</context>
</contexts>
<marker>Brundage, Kresse, Schwall, Storrer, 1992</marker>
<rawString>Jennifer Brundage, Maren Kresse, Ulrike Schwall, and Angelika Storrer. 1992. Multiword lexemes: A monolingual and contrastive typology for NLP and MT. Technical Report IWBS 232, IBM Deutschland GmbH, Institut f¨ur Wissenbasierte Systeme, Heidelberg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ralph Debusmann</author>
</authors>
<title>Multiword expressions as dependency subgraphs.</title>
<date>2004</date>
<booktitle>In Proceedings of the ACL 2004 Workshop on Multiword Expressions: Integrating Processing,</booktitle>
<location>Barcelona,</location>
<contexts>
<context position="10349" citStr="Debusmann (2004)" startWordPosition="1636" endWordPosition="1637">priate valence dictionary for verbs in such expressions. Both possibilities imply that the recognition process should be performed simultaneously with syntactic analysis. 3 Rationale The above classification was formulated during an examination of the available formalisms for encoding multiword expressions, which was a part of the present work. The attempts to formalize multiword expressions for natural language processing can be roughly divided into two groups. There are approaches that aim at encoding such units with the rules of an existing formal grammar, such as the approach described by Debusmann (2004). On the other hand, specialized, limited formalisms have been created, 21 whose purpose is to encode only multiword expressions. Such formalisms include the already mentioned IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994). The first approach has two drawbacks. One of them is that using the rules of a given grammar to encode multiword expressions seems to have sense only if the rest of the language is formalized in the same way. Thus, such an approach makes the lexicon of multiword expressions heavily dependant on a particular grammar, which might make its reuse difficu</context>
</contexts>
<marker>Debusmann, 2004</marker>
<rawString>Ralph Debusmann. 2004. Multiword expressions as dependency subgraphs. In Proceedings of the ACL 2004 Workshop on Multiword Expressions: Integrating Processing, Barcelona, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frantz Guenthner</author>
<author>Xavier Blanco</author>
</authors>
<title>Multilexemic expressions: an overview.</title>
<date>2004</date>
<booktitle>of Linguisticce Investigationes Supplementa,</booktitle>
<volume>24</volume>
<pages>239--252</pages>
<editor>In Christian L`eclere; ´Eric Laporte; Mireille Piot; Max Silberztein, editor, Syntax, Lexis, and Lexicon-Grammar,</editor>
<publisher>John Benjamins.</publisher>
<contexts>
<context position="18417" citStr="Guenthner and Blanco (2004)" startWordPosition="2936" endWordPosition="2940">ag niech to trafi!, and Niech trafi to szlag! are all acceptable). This in turn qualifies it to the third category, but it is not a decomposable idiom, and the word order variations are not semantically justified transformations, but rather permutations, as in (12). To make matters worse, the main element — szlag — is a word with a very limited distribution. This intuitively makes the unit fit more into the first category of unproductive expressions. This is even more obvious considering the fact that the word order variations do not change the meaning. Another classification was presented by Guenthner and Blanco (2004). Their categories are very numerous, and the whole undertaking suffers from the fact that they are not formally defined. It also lacks a coherent purpose – it is neither a linguistic, nor a natural language processing classification, as it tries to put very different phenomena into one bag. 23 The categories are sometimes more lexicographically, and sometimes more syntactically oriented. For example, on the one hand the authors distinguish compound expressions (nouns, adverbs, etc.), and on the other hand collocations. In our opinion the categories should not be considered as parts of the sam</context>
</contexts>
<marker>Guenthner, Blanco, 2004</marker>
<rawString>Frantz Guenthner and Xavier Blanco. 2004. Multilexemic expressions: an overview. In Christian L`eclere; ´Eric Laporte; Mireille Piot; Max Silberztein, editor, Syntax, Lexis, and Lexicon-Grammar, volume 24 of Linguisticce Investigationes Supplementa, pages 239–252. John Benjamins.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sandro Pedrazzini</author>
</authors>
<title>Phrase Manager: A System for Phrasal and Idiomatic Dictionaries. Georg Olms Verlag, Hildeseim,</title>
<date>1994</date>
<location>Z¨urich, New York.</location>
<contexts>
<context position="1410" citStr="Pedrazzini, 1994" startWordPosition="207" endWordPosition="208">nguage processing applications (Sag et al., 2002). It has also been shown that proper handling of such expressions can result in significantly better results in parsing (Zhang et al., 2006). The difficulties in processing multiword expressions result from their lexical variability, and the fact that many of them can undergo syntactic transformations. Another problem is that the label “multiword expressions” covers many linguistic units that often have little in common. We believe that the past approaches to formalize the phenomenon, such as IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994), suffered from trying to cover all multiword expressions as a whole. Such an approach, as is shown below, cannot efficiently cover all the phenomena related to multiword expressions. Therefore, in the present paper we formulate a proposal of a taxonomy for multiword expressions, useful for the purposes of natural language processing. The taxonomy is based on the stages in the NLP workflow in which the individual classes of units can be processed successfully. We also suggest the tools that can be used for processing the units in each of the classes. 2 An NLP Taxonomy of Multiword Expressions </context>
<context position="10595" citStr="Pedrazzini, 1994" startWordPosition="1673" endWordPosition="1674">of the available formalisms for encoding multiword expressions, which was a part of the present work. The attempts to formalize multiword expressions for natural language processing can be roughly divided into two groups. There are approaches that aim at encoding such units with the rules of an existing formal grammar, such as the approach described by Debusmann (2004). On the other hand, specialized, limited formalisms have been created, 21 whose purpose is to encode only multiword expressions. Such formalisms include the already mentioned IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994). The first approach has two drawbacks. One of them is that using the rules of a given grammar to encode multiword expressions seems to have sense only if the rest of the language is formalized in the same way. Thus, such an approach makes the lexicon of multiword expressions heavily dependant on a particular grammar, which might make its reuse difficult or impossible. The other disadvantage concerns complexity. While full-blown grammars do have the means to handle the most complex multiword expressions and their transformational potential, they create too much overhead in the case of simple u</context>
</contexts>
<marker>Pedrazzini, 1994</marker>
<rawString>Sandro Pedrazzini. 1994. Phrase Manager: A System for Phrasal and Idiomatic Dictionaries. Georg Olms Verlag, Hildeseim, Z¨urich, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G´abor Prósz´eky</author>
<author>Andr´as F¨oldes</author>
</authors>
<title>An intelligent context-sensitive dictionary: A Polish-English comprehension tool.</title>
<date>2005</date>
<booktitle>In Human Language Technologies as a Challenge for Computer Science and Linguistics. 2nd Language &amp; Technology Conference</booktitle>
<pages>386--389</pages>
<location>Poznań,</location>
<marker>Prósz´eky, F¨oldes, 2005</marker>
<rawString>G´abor Prósz´eky and Andr´as F¨oldes. 2005. An intelligent context-sensitive dictionary: A Polish-English comprehension tool. In Human Language Technologies as a Challenge for Computer Science and Linguistics. 2nd Language &amp; Technology Conference April 21–23, 2005,, pages 386–389, Poznań, Poland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Sag</author>
<author>Timothy Baldwin</author>
<author>Francis Bond</author>
<author>Ann Copestake</author>
<author>Dan Flickinger</author>
</authors>
<title>Multiword expressions: A pain in the neck for NLP.</title>
<date>2002</date>
<booktitle>In Proc. of the 3rd International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2002),</booktitle>
<pages>1--15</pages>
<location>Mexico City, Mexico.</location>
<contexts>
<context position="842" citStr="Sag et al., 2002" startWordPosition="117" endWordPosition="120">for dealing with multiword expressions in natural language processing applications. It provides a practically justified taxonomy of such units, and suggests the ways in which the individual classes can be processed computationally. While the study is currently limited to Polish and English, we believe our findings can be successfully employed in the processing of other languages, with emphasis on inflectional ones. 1 Introduction radosław moszczyńskiIt is generally acknowledged that multiword expressions constitute a serious difficulty in all kinds of natural language processing applications (Sag et al., 2002). It has also been shown that proper handling of such expressions can result in significantly better results in parsing (Zhang et al., 2006). The difficulties in processing multiword expressions result from their lexical variability, and the fact that many of them can undergo syntactic transformations. Another problem is that the label “multiword expressions” covers many linguistic units that often have little in common. We believe that the past approaches to formalize the phenomenon, such as IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994), suffered from trying to cover </context>
<context position="17001" citStr="Sag et al. (2002)" startWordPosition="2707" endWordPosition="2710">ch were divided into classes based on their syntactic constituency and the transformations they are able to undergo. Such an approach seems to be a dead end for exactly the same reasons that Phrase Manager has been criticized above. The study was limited to 300 units, which made the whole undertaking manageable. We believe that a really extensive study would lead to an unpredictable proliferation of very similar classes, which would make the whole classification too fine-grained and unpractical for any processing purposes. The categorization that has been examined next is the one presented by Sag et al. (2002). It consists of three categories: fixed expressions (absolutely immutable), semi-fixed expressions (strictly fixed word order, but some lexical variation is allowed), syntactically-flexible expressions (mainly decomposable idioms — cf. (8)), and institutionalized phrases (statistical idiosyncrasies). Unfortunately, such a categorization is hard to use in the case of some Polish multiword expressions. Consider this example: (13) Niech to szlag trafi! let it-Acc * hit-Future ‘Damn it!’ It is hard to establish which of the above categories does it belong to. The only lexically variable element i</context>
</contexts>
<marker>Sag, Baldwin, Bond, Copestake, Flickinger, 2002</marker>
<rawString>Ivan Sag, Timothy Baldwin, Francis Bond, Ann Copestake, and Dan Flickinger. 2002. Multiword expressions: A pain in the neck for NLP. In Proc. of the 3rd International Conference on Intelligent Text Processing and Computational Linguistics (CICLing-2002), pages 1–15, Mexico City, Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Benoit Sagot</author>
<author>Pierre Boullier</author>
</authors>
<title>From raw corpus to word lattices: robust pre-parsing processing. Archives of Control Sciences, special issue of selected papers from LTC’05,</title>
<date>2005</date>
<pages>15--4</pages>
<contexts>
<context position="6459" citStr="Sagot and Boullier (2005)" startWordPosition="1013" endWordPosition="1016">rjections, whose syntactic structure is hard to establish, as their constituents belong to weakly defined classes. They can also directly violate the grammar rules, as the coordination in the English example does: (6) bądź co bądź be-Imperative;Sg what be-Imperative;Sg ‘after all’ (7) by and large Since the recognition and tagging of all the above units will be performed before syntactic analysis, it seems natural to combine this process with a generalized mechanism of named entity recognition. We intend to build a preprocessor for syntactic analysis, along the lines of the ideas presented by Sagot and Boullier (2005). However, in addition to the set of named entities presented by the authors, we also intend to formalize multiword expressions of 20 the types presented above, possibly with the use of lxtransduce.2 This will allow us to prepare the input to the parser in such a way as to eliminate all the unparsable elements. This in turn should result in significantly better parsing coverage. 2.2 Semantically Idiosyncratic Expressions The other group in our classification consists of multiword expressions that are idiosyncratic from the point of view of semantics. It includes such units as: However, if the </context>
</contexts>
<marker>Sagot, Boullier, 2005</marker>
<rawString>Benoit Sagot and Pierre Boullier. 2005. From raw corpus to word lattices: robust pre-parsing processing. Archives of Control Sciences, special issue of selected papers from LTC’05, 15(4):653–662.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fr´ed´erique Segond</author>
<author>Elisabeth Breidt</author>
</authors>
<title>IDAREX: Formal description of German and French multi-word expressions with finite state technology.</title>
<date>1995</date>
<tech>Technical Report MLTT-022,</tech>
<institution>Rank Xerox Research Centre,</institution>
<location>Grenoble.</location>
<contexts>
<context position="1372" citStr="Segond and Breidt, 1995" startWordPosition="200" endWordPosition="203">serious difficulty in all kinds of natural language processing applications (Sag et al., 2002). It has also been shown that proper handling of such expressions can result in significantly better results in parsing (Zhang et al., 2006). The difficulties in processing multiword expressions result from their lexical variability, and the fact that many of them can undergo syntactic transformations. Another problem is that the label “multiword expressions” covers many linguistic units that often have little in common. We believe that the past approaches to formalize the phenomenon, such as IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994), suffered from trying to cover all multiword expressions as a whole. Such an approach, as is shown below, cannot efficiently cover all the phenomena related to multiword expressions. Therefore, in the present paper we formulate a proposal of a taxonomy for multiword expressions, useful for the purposes of natural language processing. The taxonomy is based on the stages in the NLP workflow in which the individual classes of units can be processed successfully. We also suggest the tools that can be used for processing the units in each of the classes. 2 An </context>
<context position="10557" citStr="Segond and Breidt, 1995" startWordPosition="1666" endWordPosition="1669">ication was formulated during an examination of the available formalisms for encoding multiword expressions, which was a part of the present work. The attempts to formalize multiword expressions for natural language processing can be roughly divided into two groups. There are approaches that aim at encoding such units with the rules of an existing formal grammar, such as the approach described by Debusmann (2004). On the other hand, specialized, limited formalisms have been created, 21 whose purpose is to encode only multiword expressions. Such formalisms include the already mentioned IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994). The first approach has two drawbacks. One of them is that using the rules of a given grammar to encode multiword expressions seems to have sense only if the rest of the language is formalized in the same way. Thus, such an approach makes the lexicon of multiword expressions heavily dependant on a particular grammar, which might make its reuse difficult or impossible. The other disadvantage concerns complexity. While full-blown grammars do have the means to handle the most complex multiword expressions and their transformational potential, they create too</context>
</contexts>
<marker>Segond, Breidt, 1995</marker>
<rawString>Fr´ed´erique Segond and Elisabeth Breidt. 1995. IDAREX: Formal description of German and French multi-word expressions with finite state technology. Technical Report MLTT-022, Rank Xerox Research Centre, Grenoble.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cornelia Tschichold</author>
</authors>
<title>Multi-word units in natural language processing. Georg Olms Verlag, Hildeseim,</title>
<date>2000</date>
<location>Z¨urich, New York.</location>
<contexts>
<context position="15257" citStr="Tschichold, 2000" startWordPosition="2423" endWordPosition="2424">nce to it — it can safely be treated as a simple permutation. However, Phrase Manager requires each operation to be named and precisely defined in syntactic terms, which in this case is more than it is worth. In our opinion both those formalisms are inadequate for encoding all the phenomena labeled as “multiword expressions”, especially in inflectional languages. Such approaches might be successful to a large extent in the case of fixed order languages, such as English — both IDAREX and Phrase Manager are reported to have been successfully employed for such purposes (Breidt and Feldweg, 1997; Tschichold, 2000). However, they fail with languages that have richer inflection and permit more word order variations. When used for Polish, the surface processing oriented IDAREX reaches the limits of its expressiveness; Phrase Manager is inadequate for different reasons — the assumptions it is based on would require something not far from writing a complete grammar of Polish, a task to which it is not suitable due to its limitations. And on the other hand, it is much too complicated for simple multiword expressions, such as (12). 4 Previous Classifications There are numerous classifications available in lin</context>
</contexts>
<marker>Tschichold, 2000</marker>
<rawString>Cornelia Tschichold. 2000. Multi-word units in natural language processing. Georg Olms Verlag, Hildeseim, Z¨urich, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yi Zhang</author>
<author>Valia Kordoni</author>
<author>Aline Villavicencio</author>
<author>Marco Idiart</author>
</authors>
<title>Automated multiword expression prediction for grammar engineering.</title>
<date>2006</date>
<booktitle>In Proceedings of the Workshop on Multiword Expressions: Identifying and Exploiting Underlying Properties,</booktitle>
<pages>36--44</pages>
<institution>Sydney, Australia. Association for Computational Linguistics.</institution>
<contexts>
<context position="982" citStr="Zhang et al., 2006" startWordPosition="140" endWordPosition="143">nits, and suggests the ways in which the individual classes can be processed computationally. While the study is currently limited to Polish and English, we believe our findings can be successfully employed in the processing of other languages, with emphasis on inflectional ones. 1 Introduction radosław moszczyńskiIt is generally acknowledged that multiword expressions constitute a serious difficulty in all kinds of natural language processing applications (Sag et al., 2002). It has also been shown that proper handling of such expressions can result in significantly better results in parsing (Zhang et al., 2006). The difficulties in processing multiword expressions result from their lexical variability, and the fact that many of them can undergo syntactic transformations. Another problem is that the label “multiword expressions” covers many linguistic units that often have little in common. We believe that the past approaches to formalize the phenomenon, such as IDAREX (Segond and Breidt, 1995) and Phrase Manager (Pedrazzini, 1994), suffered from trying to cover all multiword expressions as a whole. Such an approach, as is shown below, cannot efficiently cover all the phenomena related to multiword e</context>
</contexts>
<marker>Zhang, Kordoni, Villavicencio, Idiart, 2006</marker>
<rawString>Yi Zhang, Valia Kordoni, Aline Villavicencio, and Marco Idiart. 2006. Automated multiword expression prediction for grammar engineering. In Proceedings of the Workshop on Multiword Expressions: Identifying and Exploiting Underlying Properties, pages 36– 44, Sydney, Australia. Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>