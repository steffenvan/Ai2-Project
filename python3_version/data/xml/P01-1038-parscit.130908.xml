<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001588">
<title confidence="0.999395">
Generation of VP Ellipsis:
A Corpus-Based Approach
</title>
<author confidence="0.998244">
Daniel Hardt Owen Rambow
</author>
<affiliation confidence="0.8706065">
Copenhagen Business School AT&amp;T Labs – Research
Copenhagen, Denmark Florham Park, NJ, USA
</affiliation>
<email confidence="0.99612">
dh@id.cbs.dk rambow@research.att.com
</email>
<sectionHeader confidence="0.995603" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999726875">
We present conditions under which
verb phrases are elided based on a cor-
pus of positive and negative examples.
Factor that affect verb phrase ellipsis in-
clude: the distance between antecedent
and ellipsis site, the syntactic relation
between antecedent and ellipsis site,
and the presence or absence of adjuncts.
Building on these results, we exam-
ine where in the generation architec-
ture a trainable algorithm for VP ellip-
sis should be located. We show that
the best performance is achieved when
the trainable module is located after
the realizer and has access to surface-
oriented features (error rate of 7.5%).
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.950773886363636">
While there is a vast theoretical and computa-
tional literature on the interpretation of elliptical
forms, there has been little study of the generation
of ellipsis.1 In this paper, we focus on Verb Phase
Ellipsis (VPE), in which a verb phrase is elided,
with an auxiliary verb left in its place. Here is an
example:
(1) In 1980, 18% of federal prosecutions con-
cluded at trial; in 1987, only 9% did.
Here, the verb phase concluded at trial is omit-
ted, and the auxiliary did appears in its place. The
1We would like to thank Marilyn Walker, three review-
ers for a previous submission, and three reviewers for this
submission for helpful comments.
basic condition on VPE is clear from the litera-
ture:2 there must be an antecedent VP that is iden-
tical in meaning to the elided VP. Furthermore,
it seems clear that the antecedent must be suffi-
ciently close to the ellipsis site (in a sense to be
made precise).
This basic condition provides a beginning of an
account of the generation of VPE. However, there
is more to be said, as is shown by the following
examples:
(2) Ernst &amp; Young said Eastern’s plan would
miss projections by $100 million. Goldman
said Eastern would miss the same mark by at
least $120 million.
In this example, the italicized VP could be
elided, since it has a nearby antecedent (in bold)
with the same meaning. Indeed the antecedents in
this example is closer than in the following exam-
ple in which ellipsis does occur:
(3) In particular Mr Coxon says businesses are
paying out a smaller percentage of their
profits and cash flow in the form of dividends
than they have VPE historically.
In this paper, we identify factors which govern
the decision to elide VPs. We examine a corpus of
positive and negative examples; i.e., examples in
which VPs were or were not elided. We find that,
indeed, the distance between ellipsis site and an-
tecedent is correlated with the decision to elide,
as are the syntactic relation between antecedent
</bodyText>
<note confidence="0.866752">
2The classic study is (Sag, 1976); for more recent work,
see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and
May, 1994; Hardt, 1999).
</note>
<bodyText confidence="0.999817">
and ellipsis site, and the presence or absence of
adjuncts. Building on these results, we use ma-
chine learning techniques to examine where in the
generation architecture a trainable algorithm for
VP ellipsis should be located. We show that the
best performance (error rate of 7.5%) is achieved
when the trainable module is located after the re-
alizer and has access to surface-oriented features.
In what follows, we first describe our corpus
of negative and positive examples. Next, we de-
scribe the factors we coded for. Then we give the
results of the statistical analysis of those factors,
and finally we describe several algorithms for the
generation of VPE which we automatically ac-
quired from the corpus.
</bodyText>
<sectionHeader confidence="0.988676" genericHeader="method">
2 The Corpus
</sectionHeader>
<bodyText confidence="0.999353740740741">
All our examples are taken from the Wall Street
Journal corpus of the Penn Treebank (PTB). We
collected both negative and positive examples
from Sections 5 and 6 of the PTB. The negative
examples were collected using a mixture of man-
ual and automatic techniques. First, candidate ex-
amples were identified automatically if there were
two occurrences of the same verb, separated by
fewer than 10 intervening verbs. Then, the col-
lected examples were manually examined to de-
termine whether the two verb phrases had identi-
cal meanings or not.3 If not, the examples were
eliminated. This yielded 111 negative examples.
The positive examples were taken from the cor-
pus collected in previous work (Hardt, 1997).
This is a corpus of several hundred examples of
VPE from the Treebank, based on their syntac-
tic analysis. VPE is not annotated uniformly in
the PTB. We found several different bracketing
patterns and searched for these patterns, but one
cannot be certain that no other bracketing patterns
were used in the PTB. This yielded 15 positive
examples in Sections 5 and 6. The negative and
positive examples from Sections 5 and 6 – 126 in
total – form our basic corpus, which we will refer
to as SECTIONS5+6.
While not pathologically peripheral, VPE is a
</bodyText>
<footnote confidence="0.9549426">
3The proper characterization of the identity condition li-
censing VPE remains an open area of research, but it is
known to permit various complications, such as “sloppy
identity” and “vehicle change” (see (Fiengo and May, 1994)
and references therein).
</footnote>
<bodyText confidence="0.9998820625">
fairly rare phenomenon, and 15 positive exam-
ples is a fairly small number. We created a second
corpus by extending SECTIONS5+6 with positive
examples from other sections of the PTB so that
the number of positive examples equals that of the
negative examples. Specifically, we included all
positive examples from Section 8 through 13. The
result is a corpus with 111 negative examples –
those from SECTIONS5+6 – and 121 positive ex-
amples (including the 15 positive examples from
SECTIONS5+6). We call this corpus BALANCED;
clearly BALANCED does not reflect the distribu-
tion of VPE in naturally occurring text, as does
SECTIONS5+6; we therefore use it only in exam-
ining factors affecting VPE in Section 4, and we
do not use it in algorithm evaluation in Section 5.
</bodyText>
<sectionHeader confidence="0.984931" genericHeader="method">
3 Factors Examined
</sectionHeader>
<bodyText confidence="0.999327047619047">
Each example was coded for several features,
each of which has figured implicitly or explicitly
in the research on VPE. The following surface-
oriented features were added automatically.
Sentential Distance (sed): Measures dis-
tance between possible antecedent and can-
didate, in sentences. A value of 0 means that
the VPs are in the same sentence.
Word Distance (vpd): Measures distance
between possible antecedent and candidate,
in words.
Antecedent VP Length(anl): Measures size
of the antecedent VP, in words.
All subsequent features were coded by hand by
two of the authors. The following morphological
features were used:
Auxiliaries (int and in2): Two features, for
antecedent and candidate VP. The value is
the list of full forms of the auxiliaries (and
verbal particle to) on the antecedent and can-
didate verbs. This information can be an-
</bodyText>
<footnote confidence="0.940936125">
notated reliably ( and
).4
4Following (Carletta, 1996), we use the statistic to esti-
mate reliability of annotation. We assume that values
show reliability, and values show suffi-
cient reliability for drawing conclusions, given that the other
variable we are comparing these variables to (VPE) is coded
100% correctly.
</footnote>
<bodyText confidence="0.988881552238806">
The following syntactic features were coded:
Voice (vox): Grammatical voice (ac-
tive/passive) of antecedent and candidate.
This information can be annotated reliably
( ).
Syntactic Structure (syn): This feature de-
scribes the syntactic relation between the
head verbs of the two VPs, i.e., conjunction
(which includes “conjunction” by juxtaposi-
tion of root sentences), subordination, com-
parative constructions, and as-appositive
(for example, the index maintains a level be-
low 50%, as it has for the past couple of
months). This information can be annotated
reasonably reliably ( ).
Subcategorization frame for each verb.
Standard distinctions between intransitive
and transitive verbs with special categories
for other subcategorization frames (total of
six possible values). These two features can
be annotated highly reliably ( ).
We now turn to semantic and discourse fea-
tures.
Adjuncts (adj): that the arguments have the
same meaning is a precondition for VPE, and
it is also a precondition for us to include a
negative example in the corpus. Therefore,
semantic similarity of arguments need not be
coded. However, we do need to code for
the semantic similarity of adjuncts, as they
may differ in the case of VPE: in (3) above,
the second (elided) VP has the additional ad-
verb historically. We distinguish the follow-
ing cases: adjuncts being identical in mean-
ing, similar in meaning (of the same seman-
tic category, such as temporal adjuncts), only
the antecedent or candidate VP having an ad-
junct, the adjuncts being different, there be-
ing no adjuncts at all. This information can
be annotated reliably at a satisfactory level
( ).
In-Quotes (qut): Is the antecedent and/or
the candidate within a quoted passage, and if
yes, is it semantically the same quote. This
information can be annotated highly reliably
( ).
Discourse Structure (dst): Are the dis-
course segments containing the antecedent
and candidate directly related in the dis-
course structure? Possible values are Y and
N. Here, “directly related” means that the
two VPs are in the same segment, the seg-
ments are directly related to each other, or
the segments are both directly related to the
same third discourse segment. For this fea-
ture, inter-annotator agreement could not be
achieved to a satisfactory degree ( ),
but the feature was not identified as use-
ful during machine learning anyway. In fu-
ture research, we hope to use independently
coded discourse structure in order to investi-
gate its interaction with ellipsis decisions.
Polarity (pol): Does the antecedent or can-
didate sentence contain the negation marker
not or one of its contractions. This informa-
tion can be annotated highly reliably (
).
</bodyText>
<subsectionHeader confidence="0.510089">
4 Analysis of Data
</subsectionHeader>
<bodyText confidence="0.999814238095238">
In this section, we analyze the data to find which
factors correlate with the presence of absence
of VPE. We use the ANOVA test (or a linear
model in the case of continuous-valued indepen-
dent variables) and report the probability of the
value. We follow general practice in assuming
that a value of means that there is signifi-
cant correlation.
We present results for both of our corpora: the
SECTIONS5+6 corpus consisting only of exam-
ples from Sections 5 and 6 of the Penn Tree Bank,
and the BALANCED corpus, containing a bal-
anced number of negative and positive examples.
Recall that BALANCED is derived from SEC-
TIONS5+6 by adding positive examples, but no
negative examples. Therefore, when summariz-
ing the data, we report three figures: for the nega-
tive cases (No VPE), all from SECTIONS5+6; for
the positive cases in SECTIONS5+6 (SEC VPE);
and for the positive cases in BALANCED (BAL
VPE).
</bodyText>
<subsectionHeader confidence="0.95988">
4.1 Numerical Features
</subsectionHeader>
<bodyText confidence="0.9999444">
The two distance measures (based on words and
based on sentences) both are significantly corre-
lated with the presence of VPE while the length
of the antecedent VP is not. The results are sum-
marized in Figure 1.
</bodyText>
<subsectionHeader confidence="0.991289">
4.2 Morphological Features
</subsectionHeader>
<bodyText confidence="0.999457166666667">
For the two auxiliaries features, we do not get
significant correlation for the auxiliaries on the
antecedent VP, with either corpus. The situa-
tion does not change if we distinguish only two
classes, namely the presence or absence of auxil-
iaries
</bodyText>
<subsectionHeader confidence="0.997852">
4.3 Syntactic Features
</subsectionHeader>
<bodyText confidence="0.967477368421052">
When VPE occurs, the voice of the two VPs is the
same, an effect that is significant only in BAL-
ANCED ( ) but not in SECTIONS5+6
( ), presumably because of the small
number of data points. The counts are shown in
Figure 2.
The syntactic structure also correlates with
VPE, with the different forms of subordination
favoring VPE, and the absence of a direct rela-
tion disfavoring VPE ( for both SEC-
TIONS5+6 and BALANCED). The frequency dis-
tributions are shown in Figure 2.
Features related to argument structure are
not significantly correlated with VPE. However,
whether the two argument structures are identi-
cal is a factor approaching significance: in the
two cases where they differ, no VPE happens
( ). More data may make this result more
robust.
</bodyText>
<subsectionHeader confidence="0.995373">
4.4 Semantic and Discourse Features
</subsectionHeader>
<bodyText confidence="0.990345714285714">
If the adjuncts of the antecedent and candidate
VPs (matched pairwise) are the same, then VPE
is more likely to happen. If only one VP or the
other has adjuncts, or if the VPs have different
adjuncts, VPE is unlikely to happen. The correla-
tion is significant for both corpora ( ).
The distribution is shown in Figure 2.
Feature In-Quotes correlates significantly with
VPE in both corpora ( for SEC and
for BAL). We see that VPE does not
often occur across quotes, and that it occurs un-
usually frequently within quotes, suggesting that
it is more common in spoken language than in
written language (or, at any rate, in the WSJ).
The binary discourse structure feature corre-
lates significantly with VPE ( for SEC-
TIONS5+6 and for BAL), with pres-
ence of a close relation correlating with VPE.
Since inter-annotator agreement was not achieved
at a satisfactory level, the value of this feature re-
mains to be confirmed.
</bodyText>
<sectionHeader confidence="0.994354" genericHeader="method">
5 Algorithms for VPE
</sectionHeader>
<bodyText confidence="0.9999285">
The previous section has presented a corpus-
based static analysis of factors affecting VPE. In
this section, we take a computational approach.
We would like to use a trainable module that
learns rules to decide whether or not to perform
VPE. Trainable components have the advantage
of easily being ported to new domains. For this
reason we use the machine learning system Rip-
per (Cohen, 1996). However, before we can use
Ripper, we must discuss the issue of how our new
trainable VPE module fits into the architecture of
generation.
</bodyText>
<subsectionHeader confidence="0.763957">
5.1 VPE in the Generation Architecture
</subsectionHeader>
<bodyText confidence="0.999935666666667">
Tasks in the generation process have been di-
vided into three stages (Rambow and Korelsky,
1992): the text planner has access only to in-
formation about communicative goals, the dis-
course context, and semantics, and generates a
non-linguistic representation of text structure and
content. The sentence planner chooses abstract
linguistic resources (meaning-bearing lexemes,
syntactic constructions) and determines sentence
boundaries. It passes an abstract lexico-syntactic
specifications to the Realizer, which inflects,
adds function words, and linearizes, thus produc-
ing the surface string. The question arises where
in this architecture the decision about VPE should
be made. We will investigate this question in this
section by distinguishing three places for making
the VPE decision: in or just after the text planner;
in or just after the sentence planner; and in or just
after the realizer (i..e, at the end of the whole gen-
eration process if there are no modules after real-
ization, such as prosody). We will refer to these
three architecture options as TP, SP, and Real.
From the point of view of this study, the three
options are distinguished by the subset of the fea-
</bodyText>
<footnote confidence="0.9764758">
5The interface between sentence planner and realizer dif-
fers among approaches and can be more or less semantic;
we will assume that it is an abstract syntactic interface, with
structures marked for grammatical function, but which does
not represent word order.
</footnote>
<table confidence="0.99861225">
Measure No VPE SEC VPE BAL VPE SEC Prob BAL Prob
Word Distance 35.5 6.5 7.2
Sentential Distance 1.6 0.1 0.2
Antecedent VP length 3.6 3.9 3.3
</table>
<figureCaption confidence="0.884324">
Figure 1: Means and linear model analysis of correlation for numerical features
</figureCaption>
<table confidence="0.999709928571428">
Voice Feature (vox) No VPE SEC VPE BAL VPE
Both active 87 15 97
Antecedent active,candidate passive 13 0 0
Antecedent passive, candidate active 3 0 0
Both passive 8 0 4
Syntactic Feature (syn) No VPE SEC VPE BAL VPE
as appositive 1 4 16
Comparative 0 6 24
Other Subordination 5 2 24
Conjunction 7 2 21
Other or no relation 98 1 15
Adjunct Feature (adj) No VPE SEC VPE BAL VPE
Adjunct only on antecedent VP 10 0 0
Adjunct only on candidate VP 23 1 4
Different adjuncts 15 0 1
Neither VP has adjunct 33 7 56
VPs have same adjuncts 3 6 33
VPs have adjuncts of similar type 24 0 6
Quote Feature (qut) No VPE SEC VPE BAL VPE
No quotes 91 9 75
Antecedent only in quotes 2 0 1
Candidate only in quotes 6 1 1
Both in different quotes 6 0 1
Both in same quotes 6 5 23
Binary Discourse Structure Feature (dst) No VPE SEC VPE BAL VPE
Close discourse relation 70 15 96
No close discourse relation 41 0 5
Total 111 15 101
</table>
<figureCaption confidence="0.990445">
Figure 2: Counts for different features
</figureCaption>
<bodyText confidence="0.999975571428572">
tures as identified in Section 3 that the algorithm
has access to: TP only has access to discourse
and semantic features; SP can also use syntactic
features, but not morphological features or those
that relate to surface ordering. Real can access
all features. We summarize the relation between
architecture option and features in Figure 3.
</bodyText>
<subsectionHeader confidence="0.999956">
5.2 Using a Machine Learning Algorithm
</subsectionHeader>
<bodyText confidence="0.999998236842105">
We use Ripper to automatically learn rule sets
from the data. Ripper is a rule learning program,
which unlike some other machine learning pro-
grams supports bag-valued features.6 Using a set
of attributes, Ripper greedily learns rule sets that
choose one of several classes for each data set.
We use two classes, vpe and novpe. By using
different parameter settings for Ripper, we obtain
different rule sets. These parameter settings are
of two types: first, parameters internal to Ripper,
such as the number of optimization passes; and
second, the specification of which attributes are
used. To determine the optimal number of opti-
mization passes, we randomly divided our SEC-
TIONS5+6 corpus into a training and test part,
with the test corpus representing 20% of the data.
We then ran Ripper with different settings for the
optimization pass parameter. We determined that
best results are obtained with six passes. We then
used this setting in all subsequent work with Rip-
per. The test/training partition used to determine
this setting was not used for any other purpose.
In the next subsection (Section 5.3), we present
and discuss several rule sets, as they bring out dif-
ferent properties of ellipsis. We discuss rule sets
trained on and evaluated against the entire set of
data from SECTIONS5+6: since our data set is
relatively small, we decided not to divide it into
distinct training and test sets (except for deter-
mining the internal parameter; see above). The
fact that these rule sets are obtained by a ma-
chine learning algorithm is in some sense inci-
dental here, and while we give the coverage fig-
ures for the training corpus, we consider them
of mainly qualitative interest. We present three
rule sets, one each for each of three architecture
options, each one with its own set of attributes.
We start out with a full set of attributes, and suc-
</bodyText>
<footnote confidence="0.97443">
6Our only bag-valued set of features is the set of auxil-
iaries, which is not used in the rules we present here.
</footnote>
<bodyText confidence="0.9996245">
cessively eliminate the more surface-oriented and
syntactic ones. As we will see, the earlier the VPE
decision is made, the less reliable it is.
In the subsection after next (Section 5.4), we
present results using ten-fold cross-validation, for
which the quantitative results are meaningful.
However, since each run produces ten different
rule sets, the qualitative results, in some sense, are
not meaningful. We therefore do not give any rule
sets; the cross-validation demonstrates that effec-
tive rule sets can be learned even from relatively
small data sets.
</bodyText>
<subsectionHeader confidence="0.963015">
5.3 Algorithms for VP Ellipsis Generation
</subsectionHeader>
<bodyText confidence="0.963156916666666">
We will present three different rule sets for the
three architecture options. All rule sets must be
used in conjunction with a basic screening al-
gorithm, which is the same one that we used in
order to identify negative examples: there must
be two identical verbs with at most ten interven-
ing verbs, and the arguments of the verbs must
have the same meaning. Then the following rule
sets can be applied to determine whether a VPE
should be generated or not.
We start out with the Real set of features,
which is available after realization has completed,
and thus all surface-oriented and morphological
features are available. Of course, we also assume
that all other features are still available at that
time, not just the surface features. We obtain the
following rule set:
Choose VPE if sed&lt;=0 and syn=com (6/0).
Choose VPE if vpd&lt;=14, sed&lt;=0,
and anl&gt;=3 (7/1).
Otherwise default to no VPE (110/2).
Each rule (except the first) only applies if the
preceding ones do not. The first rule says that if
the distance in sentences between the antecedent
VP and candidate VP (sed) is less than or equal
to 0, i.e., the candidate and the antecedent are
in the same sentence, and the syntactic construc-
tion is a comparative, then choose VPE. This rule
accounts for 6 cases correctly and misclassified
none. The second rule says that if the distance
in words between antecedent VP and candidate
VP is less than or equal to 14, and the VPs are
in the same sentence, and the antecedent VP con-
tains 3 or more words, then the candidate VP is
elided. This rule accounts for 7 cases correctly
but misclassified one. Finally, all other cases are
</bodyText>
<table confidence="0.8642966">
Short Name VPE Module After Features Used
TP Text planner quotes, polarity, adjuncts, discourse structure
SP Sentence planner all from TP plus voice, syntactic relation, subcat, size of an-
tecedent VP, and distance in sentences
Real Realizer all from SP plus auxiliaries and distance in words
</table>
<figureCaption confidence="0.994442">
Figure 3: Architecture options and features
</figureCaption>
<bodyText confidence="0.975079676470588">
not treated as VPE, which misses 2 examples but
classifies 110 correctly. This yields an overall
training error rate of 2.4% (3 misclassified exam-
ples). (Recall that we are here comparing the per-
formance against the training set.)
We now consider the examples from the intro-
duction, which are repeated here for convenience.
(4) In 1980, 18% of federal prosecutions con-
cluded at trial; in 1987, only 9% did.
(5) Ernst &amp; Young said Eastern’s plan would
miss projections by $100 million. Goldman
said Eastern would miss the same mark by at
least $120 million.
(6) In particular Mr Coxon says businesses are
paying out a smaller percentage of their
profits and cash flow in the form of dividends
than they have VPE historically.
Consider example (4). The first rule does not
apply (this is not a comparative), but the second
does, since both VPs are in the same sentence,
and the antecedent has three words, and the dis-
tance between them is fewer than 14 words. Thus
(4) would be generated as a VPE. The first rule
does apply to example (6), so it would also be
generated as a VPE. Example (5), however, is not
caught by either of the first two rules, so it would
not yield a VPE. We thus replicate the data in the
corpus for these three examples.
We now turn to SP. We assume that we are
making the VPE decision before realization, and
therefore have access only to syntactic and se-
mantic features, but not to surface features. As
a result, distance in words is no longer available
as a feature.
</bodyText>
<footnote confidence="0.765001333333333">
Choose VPE if sed&lt;=0 and anl&gt;=3 (10/3).
Choose VPE if sed&lt;=0 and adj=sam (3/0).
Otherwise default to no VPE (108/2).
</footnote>
<bodyText confidence="0.99846492">
Here, we first choose VPE if the antecedent and
candidate are in the same sentence and the an-
tecedent VP length is greater than three, or if the
two VPs are in the same sentence and they have
the same adjuncts. In all other cases, we choose
not to elide. The training error rate goes up to
3.97%.
With this rule set, we can correctly predict a
VPE for examples (4) and (6), using the first rule.
We do not generate a VPE for (5), since it does
not match either of the two first rules.
Finally, we consider architecture option TP, in
which the VPE decision is made right after text
planning, and only semantic and discourse fea-
tures are available. The rule set is simplified:
Choose VPE if adj=sam (6/3).
Otherwise default to no VPE (108/9).
VPE is only chosen if the adjuncts are the
same; in all other cases, VPE is avoided. The
training error rate climbs to 9.52%.
For our examples, only example (4) generates
a VPE since the adjuncts are the same on the two
VPS7 (6) fails to meet the requirements of the first
rule since the second VP has an adjunct of its own,
historically.
</bodyText>
<subsectionHeader confidence="0.992337">
5.4 Quantitative Analysis
</subsectionHeader>
<bodyText confidence="0.999886363636364">
In the previous subsection we presented different
rule sets. We now show that rule sets can be de-
rived in a consistent manner and tested on a held-
out test set with satisfactory results. We take these
results to be indicative of performance on unseen
data (which is in the WSJ domain and genre, of
course). We use ten-fold cross-validation for this
purpose, with the same three sets of possible at-
tributes used above.
The results for the three attribute sets are shown
in Figure 4 (average error rates for the tenfold
</bodyText>
<footnote confidence="0.992026">
7The adjunct is elided on the second VP, of course, but
present in the input representation, not shown here.
</footnote>
<table confidence="0.9984675">
Architecture Mean Error Error
Option Rate Reduction
TP 11.7% 0%
SP 9.2% 23%
Real 7.5% 35%
Baseline 11.9% —-
</table>
<figureCaption confidence="0.986497">
Figure 4: Results for 10-fold cross validation for
different architectures: after realizer, after sen-
tence planner, after text planner
</figureCaption>
<bodyText confidence="0.99996005882353">
can be made after sentence planning. However,
it is also possible that decisions about VPE (and
related pronominal constraints) cannot be made
before the text is linearized, presumably because
of the processing limitations of the hearer/reader
(and of the speaker/writer). Walker (1996) has ar-
gued in favor of the importance of limited atten-
tion in processing discourse phenomena, and the
surface-oriented features can be argued to model
such cognitive constraints.
cross-validations). The baseline is obtained by
never choosing VPE (which, recall, is relatively
rare in the SECTIONS5+6 corpus). We see that
the TP architecture does not do better than the
baseline, while SP results in an error reduction of
23% and the Real architecture in an error reduc-
tion of 35%, for an average error rate of 7.5%.
</bodyText>
<sectionHeader confidence="0.999506" genericHeader="conclusions">
6 Conclusion
</sectionHeader>
<bodyText confidence="0.999995571428571">
We have found that the decision to elide VPs
is statistically correlated with several factors, in-
cluding distance between antecedent and candi-
date VPs by word or sentence, and the pres-
ence or absence of syntactic and discourse rela-
tions. These findings provide a strong founda-
tion on which to build algorithms for the gener-
ation of VPE. We have explored several possible
algorithms with the help of a machine learning
system, and we have found that these automati-
cally derived algorithms perform well on cross-
validation tests.
We have also seen that the decision whether or
not to elide can be better made later in the gen-
eration process: the more features are available,
the better. It is perhaps not surprising that the de-
cision cannot be made very well just after after
text planning: it is well known that VPE is subject
to syntactic constraints, and the relevant informa-
tion is not yet available. It is perhaps more sur-
prising that the surface-oriented features appear
to contribute to the quality of the decision, push-
ing the decision past the realization phase. One
possible explanation is that there are in fact other
features, which we have not yet identified, and
for which the surface-oriented features are stand-
ins. If this is the case, further work will allow us
to define algorithms so that the decision on VPE
</bodyText>
<sectionHeader confidence="0.999188" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9998713125">
Jean Carletta. 1996. Assessing agreement on classi-
fication tasks: The kappa statistic. Computational
Linguistics, 22(2):249–254.
William Cohen. 1996. Learning trees and rules with
set-valued features. In Fourteenth Conference of
the American Association ofArtificial Intelligence.
AAAI.
Mary Dalrymple, Stuart Shieber, and Fernando
Pereira. 1991. Ellipsis and higher-order unifica-
tion. Linguistics and Philosophy, 14(4), August.
Robert Fiengo and Robert May. 1994. Indices and
Identity. MIT Press, Cambridge, MA.
Daniel Hardt. 1997. An empirical approach to vp el-
lipsis. Computational Linguistics, 23(4):525–541.
Daniel Hardt. 1999. Dynamic interpretation of
verb phrase ellipsis. Linguistics and Philosophy,
22(2):187–221.
Andrew Kehler. 1993. The effect of establishing co-
herence in ellipsis and anaphora resolution. In Pro-
ceedings, 28th Annual Meeting of the ACL, Colum-
bus, OH.
Owen Rambow and Tanya Korelsky. 1992. Ap-
plied text generation. In Third Conference on Ap-
plied Natural Language Processing, pages 40–47,
Trento, Italy.
Ivan A. Sag. 1976. Deletion and Logical Form.
Ph.D. thesis, Massachusetts Institute of Technol-
ogy. (Published 1980 by Garland Publishing, New
York).
Marilyn A. Walker. 1996. Limited attention and dis-
course structure. Computational Linguistics, 22-
2:255–264.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.542985">
<title confidence="0.999772">Generation of VP Ellipsis: A Corpus-Based Approach</title>
<author confidence="0.999941">Daniel Hardt Owen Rambow</author>
<affiliation confidence="0.999433">Copenhagen Business School AT&amp;T Labs – Research</affiliation>
<address confidence="0.997836">Copenhagen, Denmark Florham Park, NJ, USA</address>
<email confidence="0.997091">dh@id.cbs.dkrambow@research.att.com</email>
<abstract confidence="0.972202352941176">We present conditions under which verb phrases are elided based on a corpus of positive and negative examples. Factor that affect verb phrase ellipsis include: the distance between antecedent and ellipsis site, the syntactic relation between antecedent and ellipsis site, and the presence or absence of adjuncts. Building on these results, we examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance is achieved when the trainable module is located after the realizer and has access to surfaceoriented features (error rate of 7.5%).</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Jean Carletta</author>
</authors>
<title>Assessing agreement on classification tasks: The kappa statistic.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>2</issue>
<contexts>
<context position="6837" citStr="Carletta, 1996" startWordPosition="1138" endWordPosition="1139">ces. A value of 0 means that the VPs are in the same sentence. Word Distance (vpd): Measures distance between possible antecedent and candidate, in words. Antecedent VP Length(anl): Measures size of the antecedent VP, in words. All subsequent features were coded by hand by two of the authors. The following morphological features were used: Auxiliaries (int and in2): Two features, for antecedent and candidate VP. The value is the list of full forms of the auxiliaries (and verbal particle to) on the antecedent and candidate verbs. This information can be annotated reliably ( and ).4 4Following (Carletta, 1996), we use the statistic to estimate reliability of annotation. We assume that values show reliability, and values show sufficient reliability for drawing conclusions, given that the other variable we are comparing these variables to (VPE) is coded 100% correctly. The following syntactic features were coded: Voice (vox): Grammatical voice (active/passive) of antecedent and candidate. This information can be annotated reliably ( ). Syntactic Structure (syn): This feature describes the syntactic relation between the head verbs of the two VPs, i.e., conjunction (which includes “conjunction” by juxt</context>
</contexts>
<marker>Carletta, 1996</marker>
<rawString>Jean Carletta. 1996. Assessing agreement on classification tasks: The kappa statistic. Computational Linguistics, 22(2):249–254.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Cohen</author>
</authors>
<title>Learning trees and rules with set-valued features.</title>
<date>1996</date>
<booktitle>In Fourteenth Conference of the American Association ofArtificial Intelligence.</booktitle>
<publisher>AAAI.</publisher>
<contexts>
<context position="13328" citStr="Cohen, 1996" startWordPosition="2222" endWordPosition="2223">S5+6 and for BAL), with presence of a close relation correlating with VPE. Since inter-annotator agreement was not achieved at a satisfactory level, the value of this feature remains to be confirmed. 5 Algorithms for VPE The previous section has presented a corpusbased static analysis of factors affecting VPE. In this section, we take a computational approach. We would like to use a trainable module that learns rules to decide whether or not to perform VPE. Trainable components have the advantage of easily being ported to new domains. For this reason we use the machine learning system Ripper (Cohen, 1996). However, before we can use Ripper, we must discuss the issue of how our new trainable VPE module fits into the architecture of generation. 5.1 VPE in the Generation Architecture Tasks in the generation process have been divided into three stages (Rambow and Korelsky, 1992): the text planner has access only to information about communicative goals, the discourse context, and semantics, and generates a non-linguistic representation of text structure and content. The sentence planner chooses abstract linguistic resources (meaning-bearing lexemes, syntactic constructions) and determines sentence</context>
</contexts>
<marker>Cohen, 1996</marker>
<rawString>William Cohen. 1996. Learning trees and rules with set-valued features. In Fourteenth Conference of the American Association ofArtificial Intelligence. AAAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mary Dalrymple</author>
<author>Stuart Shieber</author>
<author>Fernando Pereira</author>
</authors>
<title>Ellipsis and higher-order unification.</title>
<date>1991</date>
<journal>Linguistics and Philosophy,</journal>
<volume>14</volume>
<issue>4</issue>
<contexts>
<context position="2880" citStr="Dalrymple et al., 1991" startWordPosition="484" endWordPosition="487">lipsis does occur: (3) In particular Mr Coxon says businesses are paying out a smaller percentage of their profits and cash flow in the form of dividends than they have VPE historically. In this paper, we identify factors which govern the decision to elide VPs. We examine a corpus of positive and negative examples; i.e., examples in which VPs were or were not elided. We find that, indeed, the distance between ellipsis site and antecedent is correlated with the decision to elide, as are the syntactic relation between antecedent 2The classic study is (Sag, 1976); for more recent work, see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and May, 1994; Hardt, 1999). and ellipsis site, and the presence or absence of adjuncts. Building on these results, we use machine learning techniques to examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance (error rate of 7.5%) is achieved when the trainable module is located after the realizer and has access to surface-oriented features. In what follows, we first describe our corpus of negative and positive examples. Next, we describe the factors we coded for. Then we give the results of </context>
</contexts>
<marker>Dalrymple, Shieber, Pereira, 1991</marker>
<rawString>Mary Dalrymple, Stuart Shieber, and Fernando Pereira. 1991. Ellipsis and higher-order unification. Linguistics and Philosophy, 14(4), August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Fiengo</author>
<author>Robert May</author>
</authors>
<title>Indices and Identity.</title>
<date>1994</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="2916" citStr="Fiengo and May, 1994" startWordPosition="490" endWordPosition="493">r Coxon says businesses are paying out a smaller percentage of their profits and cash flow in the form of dividends than they have VPE historically. In this paper, we identify factors which govern the decision to elide VPs. We examine a corpus of positive and negative examples; i.e., examples in which VPs were or were not elided. We find that, indeed, the distance between ellipsis site and antecedent is correlated with the decision to elide, as are the syntactic relation between antecedent 2The classic study is (Sag, 1976); for more recent work, see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and May, 1994; Hardt, 1999). and ellipsis site, and the presence or absence of adjuncts. Building on these results, we use machine learning techniques to examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance (error rate of 7.5%) is achieved when the trainable module is located after the realizer and has access to surface-oriented features. In what follows, we first describe our corpus of negative and positive examples. Next, we describe the factors we coded for. Then we give the results of the statistical analysis of those fa</context>
<context position="5132" citStr="Fiengo and May, 1994" startWordPosition="860" endWordPosition="863">ound several different bracketing patterns and searched for these patterns, but one cannot be certain that no other bracketing patterns were used in the PTB. This yielded 15 positive examples in Sections 5 and 6. The negative and positive examples from Sections 5 and 6 – 126 in total – form our basic corpus, which we will refer to as SECTIONS5+6. While not pathologically peripheral, VPE is a 3The proper characterization of the identity condition licensing VPE remains an open area of research, but it is known to permit various complications, such as “sloppy identity” and “vehicle change” (see (Fiengo and May, 1994) and references therein). fairly rare phenomenon, and 15 positive examples is a fairly small number. We created a second corpus by extending SECTIONS5+6 with positive examples from other sections of the PTB so that the number of positive examples equals that of the negative examples. Specifically, we included all positive examples from Section 8 through 13. The result is a corpus with 111 negative examples – those from SECTIONS5+6 – and 121 positive examples (including the 15 positive examples from SECTIONS5+6). We call this corpus BALANCED; clearly BALANCED does not reflect the distribution o</context>
</contexts>
<marker>Fiengo, May, 1994</marker>
<rawString>Robert Fiengo and Robert May. 1994. Indices and Identity. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Hardt</author>
</authors>
<title>An empirical approach to vp ellipsis.</title>
<date>1997</date>
<journal>Computational Linguistics,</journal>
<volume>23</volume>
<issue>4</issue>
<contexts>
<context position="4356" citStr="Hardt, 1997" startWordPosition="730" endWordPosition="731"> We collected both negative and positive examples from Sections 5 and 6 of the PTB. The negative examples were collected using a mixture of manual and automatic techniques. First, candidate examples were identified automatically if there were two occurrences of the same verb, separated by fewer than 10 intervening verbs. Then, the collected examples were manually examined to determine whether the two verb phrases had identical meanings or not.3 If not, the examples were eliminated. This yielded 111 negative examples. The positive examples were taken from the corpus collected in previous work (Hardt, 1997). This is a corpus of several hundred examples of VPE from the Treebank, based on their syntactic analysis. VPE is not annotated uniformly in the PTB. We found several different bracketing patterns and searched for these patterns, but one cannot be certain that no other bracketing patterns were used in the PTB. This yielded 15 positive examples in Sections 5 and 6. The negative and positive examples from Sections 5 and 6 – 126 in total – form our basic corpus, which we will refer to as SECTIONS5+6. While not pathologically peripheral, VPE is a 3The proper characterization of the identity condi</context>
</contexts>
<marker>Hardt, 1997</marker>
<rawString>Daniel Hardt. 1997. An empirical approach to vp ellipsis. Computational Linguistics, 23(4):525–541.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Hardt</author>
</authors>
<title>Dynamic interpretation of verb phrase ellipsis.</title>
<date>1999</date>
<journal>Linguistics and Philosophy,</journal>
<volume>22</volume>
<issue>2</issue>
<contexts>
<context position="2930" citStr="Hardt, 1999" startWordPosition="494" endWordPosition="495">s are paying out a smaller percentage of their profits and cash flow in the form of dividends than they have VPE historically. In this paper, we identify factors which govern the decision to elide VPs. We examine a corpus of positive and negative examples; i.e., examples in which VPs were or were not elided. We find that, indeed, the distance between ellipsis site and antecedent is correlated with the decision to elide, as are the syntactic relation between antecedent 2The classic study is (Sag, 1976); for more recent work, see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and May, 1994; Hardt, 1999). and ellipsis site, and the presence or absence of adjuncts. Building on these results, we use machine learning techniques to examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance (error rate of 7.5%) is achieved when the trainable module is located after the realizer and has access to surface-oriented features. In what follows, we first describe our corpus of negative and positive examples. Next, we describe the factors we coded for. Then we give the results of the statistical analysis of those factors, and fin</context>
</contexts>
<marker>Hardt, 1999</marker>
<rawString>Daniel Hardt. 1999. Dynamic interpretation of verb phrase ellipsis. Linguistics and Philosophy, 22(2):187–221.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew Kehler</author>
</authors>
<title>The effect of establishing coherence in ellipsis and anaphora resolution.</title>
<date>1993</date>
<booktitle>In Proceedings, 28th Annual Meeting of the ACL,</booktitle>
<location>Columbus, OH.</location>
<contexts>
<context position="2894" citStr="Kehler, 1993" startWordPosition="488" endWordPosition="489">n particular Mr Coxon says businesses are paying out a smaller percentage of their profits and cash flow in the form of dividends than they have VPE historically. In this paper, we identify factors which govern the decision to elide VPs. We examine a corpus of positive and negative examples; i.e., examples in which VPs were or were not elided. We find that, indeed, the distance between ellipsis site and antecedent is correlated with the decision to elide, as are the syntactic relation between antecedent 2The classic study is (Sag, 1976); for more recent work, see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and May, 1994; Hardt, 1999). and ellipsis site, and the presence or absence of adjuncts. Building on these results, we use machine learning techniques to examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance (error rate of 7.5%) is achieved when the trainable module is located after the realizer and has access to surface-oriented features. In what follows, we first describe our corpus of negative and positive examples. Next, we describe the factors we coded for. Then we give the results of the statistica</context>
</contexts>
<marker>Kehler, 1993</marker>
<rawString>Andrew Kehler. 1993. The effect of establishing coherence in ellipsis and anaphora resolution. In Proceedings, 28th Annual Meeting of the ACL, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Owen Rambow</author>
<author>Tanya Korelsky</author>
</authors>
<title>Applied text generation.</title>
<date>1992</date>
<booktitle>In Third Conference on Applied Natural Language Processing,</booktitle>
<pages>40--47</pages>
<location>Trento, Italy.</location>
<contexts>
<context position="13603" citStr="Rambow and Korelsky, 1992" startWordPosition="2266" endWordPosition="2269">pusbased static analysis of factors affecting VPE. In this section, we take a computational approach. We would like to use a trainable module that learns rules to decide whether or not to perform VPE. Trainable components have the advantage of easily being ported to new domains. For this reason we use the machine learning system Ripper (Cohen, 1996). However, before we can use Ripper, we must discuss the issue of how our new trainable VPE module fits into the architecture of generation. 5.1 VPE in the Generation Architecture Tasks in the generation process have been divided into three stages (Rambow and Korelsky, 1992): the text planner has access only to information about communicative goals, the discourse context, and semantics, and generates a non-linguistic representation of text structure and content. The sentence planner chooses abstract linguistic resources (meaning-bearing lexemes, syntactic constructions) and determines sentence boundaries. It passes an abstract lexico-syntactic specifications to the Realizer, which inflects, adds function words, and linearizes, thus producing the surface string. The question arises where in this architecture the decision about VPE should be made. We will investiga</context>
</contexts>
<marker>Rambow, Korelsky, 1992</marker>
<rawString>Owen Rambow and Tanya Korelsky. 1992. Applied text generation. In Third Conference on Applied Natural Language Processing, pages 40–47, Trento, Italy.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan A Sag</author>
</authors>
<title>Deletion and Logical Form.</title>
<date>1976</date>
<tech>Ph.D. thesis,</tech>
<publisher>by Garland Publishing,</publisher>
<institution>Massachusetts Institute of Technology. (Published</institution>
<location>New York).</location>
<contexts>
<context position="2824" citStr="Sag, 1976" startWordPosition="476" endWordPosition="477">er than in the following example in which ellipsis does occur: (3) In particular Mr Coxon says businesses are paying out a smaller percentage of their profits and cash flow in the form of dividends than they have VPE historically. In this paper, we identify factors which govern the decision to elide VPs. We examine a corpus of positive and negative examples; i.e., examples in which VPs were or were not elided. We find that, indeed, the distance between ellipsis site and antecedent is correlated with the decision to elide, as are the syntactic relation between antecedent 2The classic study is (Sag, 1976); for more recent work, see, eg, (Dalrymple et al., 1991; Kehler, 1993; Fiengo and May, 1994; Hardt, 1999). and ellipsis site, and the presence or absence of adjuncts. Building on these results, we use machine learning techniques to examine where in the generation architecture a trainable algorithm for VP ellipsis should be located. We show that the best performance (error rate of 7.5%) is achieved when the trainable module is located after the realizer and has access to surface-oriented features. In what follows, we first describe our corpus of negative and positive examples. Next, we describ</context>
</contexts>
<marker>Sag, 1976</marker>
<rawString>Ivan A. Sag. 1976. Deletion and Logical Form. Ph.D. thesis, Massachusetts Institute of Technology. (Published 1980 by Garland Publishing, New York).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marilyn A Walker</author>
</authors>
<title>Limited attention and discourse structure.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<pages>22--2</pages>
<contexts>
<context position="24903" citStr="Walker (1996)" startWordPosition="4225" endWordPosition="4226"> the second VP, of course, but present in the input representation, not shown here. Architecture Mean Error Error Option Rate Reduction TP 11.7% 0% SP 9.2% 23% Real 7.5% 35% Baseline 11.9% —- Figure 4: Results for 10-fold cross validation for different architectures: after realizer, after sentence planner, after text planner can be made after sentence planning. However, it is also possible that decisions about VPE (and related pronominal constraints) cannot be made before the text is linearized, presumably because of the processing limitations of the hearer/reader (and of the speaker/writer). Walker (1996) has argued in favor of the importance of limited attention in processing discourse phenomena, and the surface-oriented features can be argued to model such cognitive constraints. cross-validations). The baseline is obtained by never choosing VPE (which, recall, is relatively rare in the SECTIONS5+6 corpus). We see that the TP architecture does not do better than the baseline, while SP results in an error reduction of 23% and the Real architecture in an error reduction of 35%, for an average error rate of 7.5%. 6 Conclusion We have found that the decision to elide VPs is statistically correlat</context>
</contexts>
<marker>Walker, 1996</marker>
<rawString>Marilyn A. Walker. 1996. Limited attention and discourse structure. Computational Linguistics, 22-2:255–264.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>