<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.002102">
<note confidence="0.792262">
TECHNICAL CORRESPONDENCE
THE EXTRACTION OF A MINIMUM SET OF SEMANTIC
PRIMITIVES FROM A MONOLINGUAL DICTIONARY IS
</note>
<bodyText confidence="0.981321138888889">
NP-COMPLETE
Within the last 15 years, a variety of unsolved prob-
lems of interest primarily to operations researchers,
computer scientists, and mathematicians have been
demonstrated to be equivalent in the sense that a
solution to any of them would yield a solution to all of
them. This class of problems, known as
NP-complete, contains many long-standing problems
of scheduling, routing, and resource allocation. This
note contains a demonstration that a problem of
interest to applied linguistics also belongs to this class
— namely, the process of extracting a minimum set of
semantic primitives from a monolingual dictionary is
NP-complete, implying that the task is currently
computationally insoluble.
A particular linguistic problem has found applied rele-
vance in three areas: natural language comprehension,
bilingual dictionary construction, and reading theory.
The problem is that of maximally simplifying the cross-
referential lexicon known as the dictionary. For a variety
of purposes of those who wish to make dictionaries
computer readable, the problem of finding a &amp;quot;base&amp;quot; set
of semantic primitives from which other lexical entries
may be defined has been of interest. If, for example, a
set of 60 lexical entries (each unwavering in semantic
denotation, connotation, intent, and content) could be
found, out of which all other entries could be satisfactori-
ly defined, then certain problems of circularity of defi-
nition and of algorithmic complexity could be solved.
Simiarly, the speed of construction of a truly
&amp;quot;bidirectional&amp;quot; bilingual dictionary could be enhanced if
those persons engaged in the construction were aware of
such a minum set of monolingual primitives. This paper
demonstrates that, in general, such problems are compu-
tationally intractable by virtue of their isomorphism to a
group of problems known as NP-complete.
</bodyText>
<sectionHeader confidence="0.890476" genericHeader="abstract">
DEFINITIONS
</sectionHeader>
<listItem confidence="0.998042222222222">
1. A lexicon is a set.
2. The elements of a lexicon are called words.
3. A string is a sequence of words.
4. The string universe, X*, of a lexicon X is the set of all
strings composed of elements of X.
5. A language (over a lexicon, X) is a subset of X*.
6. Within a language, L, a definition of a word, w, is
some string in L of words within the lexicon (exclud-
ing w itself). That is, a definition associates a string
with the word being defined.
7. A dictonary for a lexicon X is a set of definitions such
that each word in X is defined.
8. A directed graph G= (N,L) consists of a set N of
nodes, together with a set L of ordered pairs of
elements of N.
9. In a graph G, a directed cycle is a sequence of nodes,
(n1, n2, ..., nK) in which each of the lines (ni, ni+i) as
well as (BK&apos; n1) is in L.
</listItem>
<sectionHeader confidence="0.99917" genericHeader="categories and subject descriptors">
DISCUSSION OF DEFINITIONS
</sectionHeader>
<bodyText confidence="0.999965630434783">
It may appear backwards to define a language based on
its words, since in agglutinating languages, for example,
the determination of what is or is not a word is based on
extensive prior knowledge of the language. However,
this notation is fairly common, which is the reason for its
adoption. One might take the morpheme as the primary
element rather than the word without loss of applicability
of these remarks.
Also, we might be tempted to define a sentence as a
string contained in a given language, though such is not
needed here.
Definition 6 excludes the possibility that a word might
appear within its own definition. This restriction can be
relaxed under certain circumstances.
The problem of semantic reduction to a minimum set
of lexical primitives may now be stated thusly: Given a
dictionary, we seek to rewrite that dictionary, substituting
definitions for words freely so as to minimize that portion
of the lexicon occurring as members of defining strings.
That is, what is the smallest number of words in the lexi-
con such that all other words may be defined from this
select set?
Karp (1972) demonstrated that the problem
&amp;quot;Feedback Vertex Set&amp;quot;, FVS, is NP-complete. [For read-
ers unfamiliar with the concept of NP-completeness,
Garey and Johnson (1979) present an overview of the
topic.] The following shows that our semantic reduction
problem is equivalent to FVS. FVS is stated as follows by
Garey and Johnson: Given a directed graph G= (N,L)
and a positive integer k, is there a subset of N consisting
of k or fewer nodes that contains at least one vertex from
every directed cycle in G?
To show the problems equivalent, we first note that
for the sake of simplifying the dictionary we are not
concerned, per se, with the order of words within defin-
ing strings. That is, so long as we keep track of this
ordering, it will not affect the ultimate size of the defin-
ing lexicon. Let D be a dictionary for the lexicon X. We
now construct a directed graph G based upon D: let each
w in X be a node of G. Now for each w construct a line
leading from w to any word occurring in the string defin-
ing w. The construction of G is now complete.
We now observe that asking the question of the size of
the smallest set of entries from which D may be recon-
structed is computationally equivalent to asking whether
or not there is a set of k such entries (and re-asking this
</bodyText>
<page confidence="0.961179">
306 Computational Linguistics, Volume 12, Number 4, October-December 1986
</page>
<subsectionHeader confidence="0.490285">
Technical Correspondence The Extraction of a Minimum Set of Semantic Primitives from a Monolingual Dictionary is NP-Complete
</subsectionHeader>
<bodyText confidence="0.988575222222222">
question for a new value of k). Next, in redefining a
word w, we may explore any path leading from w. If all
such paths terminate in primitives, then w has been
defined in terms of primitives. Yet, if any such path
returns to w, then w has not been appropriate defined.
We are therefore concerned with finding the smallest set
of nodes that will &amp;quot;stop&amp;quot; any directed cycle. This is
precisely the problem of FVS.
Example: Let D be given as follows:
</bodyText>
<equation confidence="0.858748">
X = ama,ba,di,enig,gala,ki,li,tso,ub,zomirl
ama = di gala li tso
ba = ii zomir ki enig
di = ub enig ki zomir ba tso
enig = di zomir ba ki
gala = ub tso ub li
ki = ba tso ub tso li
ii = ub ki di gala ba enig
tso = ba zomir ki li gala
ub = di li zomir
zomir = di gala ba tso
</equation>
<bodyText confidence="0.7606712">
Clearly, no human language would be representable by
such a small dictionary; any larger lexicon, though, would
not be easily exemplified herein. The transformation of
D to a directed graph is shown below.
A SIMPLIFIED DICTIONARY WITH FIVE PRIMITIVES
ama = di ((di li zomir) tso (di li zomir) li) ii tso
ba + primitive +
di + primitive +
enig = di zomir ba (ba tso (di li zomir) tso li)
gala = (di li zomir) tso (di li zomir) ii
ki = ba tso (di li zomir) tso ii
ii + primitive
tso + primitive +
ub = di li zomir
zomir + primitive +
</bodyText>
<reference confidence="0.798326818181818">
David P. Dailey
Department of Psychology
University of Alaska
Fairbanks, Alaska
REFERENCES
Garey, M.R. and Johnson, D.S. 1979 Computers and Intractability.
W.H. Freeman and Company, San Francisco, California.
Karp, R.M. 1972 Reducibility among Combinatorial Problems. In
Miller, R.E. and Thatcher, J.W., Eds., Complexity of Computer
Computations. Plenum Press, New York, New York: 85-103.
Computational Linguistics, Volume 12, Number 4, October-December 1986 307
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.123221">
<title confidence="0.856047">TECHNICAL CORRESPONDENCE THE EXTRACTION OF A MINIMUM SET OF SEMANTIC PRIMITIVES FROM A MONOLINGUAL DICTIONARY IS NP-COMPLETE</title>
<abstract confidence="0.996621014492754">Within the last 15 years, a variety of unsolved problems of interest primarily to operations researchers, computer scientists, and mathematicians have been demonstrated to be equivalent in the sense that a solution to any of them would yield a solution to all of them. This class of problems, known NP-complete, contains many long-standing problems of scheduling, routing, and resource allocation. This note contains a demonstration that a problem of interest to applied linguistics also belongs to this class — namely, the process of extracting a minimum set of semantic primitives from a monolingual dictionary is NP-complete, implying that the task is currently computationally insoluble. A particular linguistic problem has found applied relevance in three areas: natural language comprehension, bilingual dictionary construction, and reading theory. The problem is that of maximally simplifying the crossreferential lexicon known as the dictionary. For a variety of purposes of those who wish to make dictionaries computer readable, the problem of finding a &amp;quot;base&amp;quot; set of semantic primitives from which other lexical entries may be defined has been of interest. If, for example, a set of 60 lexical entries (each unwavering in semantic denotation, connotation, intent, and content) could be found, out of which all other entries could be satisfactorily defined, then certain problems of circularity of definition and of algorithmic complexity could be solved. Simiarly, the speed of construction of a truly &amp;quot;bidirectional&amp;quot; bilingual dictionary could be enhanced if those persons engaged in the construction were aware of such a minum set of monolingual primitives. This paper demonstrates that, in general, such problems are computationally intractable by virtue of their isomorphism to a group of problems known as NP-complete. DEFINITIONS 1. A lexicon is a set. 2. The elements of a lexicon are called words. 3. A string is a sequence of words. 4. The string universe, X*, of a lexicon X is the set of all strings composed of elements of X. 5. A language (over a lexicon, X) is a subset of X*. 6. Within a language, L, a definition of a word, w, is some string in L of words within the lexicon (excluding w itself). That is, a definition associates a string with the word being defined. 7. A dictonary for a lexicon X is a set of definitions such that each word in X is defined. 8. A directed graph G= (N,L) consists of a set N of nodes, together with a set L of ordered pairs of elements of N. 9. In a graph G, a directed cycle is a sequence of nodes, ..., in which each of the lines as as (BK&apos;is in L. DISCUSSION OF DEFINITIONS It may appear backwards to define a language based on its words, since in agglutinating languages, for example, the determination of what is or is not a word is based on extensive prior knowledge of the language. However, this notation is fairly common, which is the reason for its adoption. One might take the morpheme as the primary element rather than the word without loss of applicability of these remarks. Also, we might be tempted to define a sentence as a string contained in a given language, though such is not needed here. Definition 6 excludes the possibility that a word might appear within its own definition. This restriction can be relaxed under certain circumstances. The problem of semantic reduction to a minimum set of lexical primitives may now be stated thusly: Given a dictionary, we seek to rewrite that dictionary, substituting definitions for words freely so as to minimize that portion of the lexicon occurring as members of defining strings. That is, what is the smallest number of words in the lexicon such that all other words may be defined from this select set? Karp (1972) demonstrated that the problem &amp;quot;Feedback Vertex Set&amp;quot;, FVS, is NP-complete. [For readers unfamiliar with the concept of NP-completeness, Garey and Johnson (1979) present an overview of the topic.] The following shows that our semantic reduction problem is equivalent to FVS. FVS is stated as follows by Garey and Johnson: Given a directed graph G= (N,L) and a positive integer k, is there a subset of N consisting of k or fewer nodes that contains at least one vertex from every directed cycle in G? To show the problems equivalent, we first note that for the sake of simplifying the dictionary we are not concerned, per se, with the order of words within defining strings. That is, so long as we keep track of this ordering, it will not affect the ultimate size of the defining lexicon. Let D be a dictionary for the lexicon X. We now construct a directed graph G based upon D: let each w in X be a node of G. Now for each w construct a line leading from w to any word occurring in the string defining w. The construction of G is now complete. We now observe that asking the question of the size of the smallest set of entries from which D may be reconstructed is computationally equivalent to asking whether or not there is a set of k such entries (and re-asking this Linguistics, Volume 12, Number 4, October-December 1986 Technical Correspondence The Extraction of a Minimum Set of Semantic Primitives from a Monolingual Dictionary is NP-Complete question for a new value of k). Next, in redefining a word w, we may explore any path leading from w. If all such paths terminate in primitives, then w has been defined in terms of primitives. Yet, if any such path returns to w, then w has not been appropriate defined. We are therefore concerned with finding the smallest set of nodes that will &amp;quot;stop&amp;quot; any directed cycle. This is precisely the problem of FVS. Example: Let D be given as follows: X = ama,ba,di,enig,gala,ki,li,tso,ub,zomirl ama = di gala li tso ba = ii zomir ki enig di = ub enig ki zomir ba tso enig = di zomir ba ki = ub tso ub = ba tso ub tso ub ki di gala ba enig tso = ba zomir ki li gala ub = di li zomir zomir = di gala ba tso Clearly, no human language would be representable by such a small dictionary; any larger lexicon, though, would not be easily exemplified herein. The transformation of D to a directed graph is shown below. SIMPLIFIED WITH FIVE PRIMITIVES ama = di ((di li zomir) tso (di li zomir) li) ii tso ba + primitive + di + primitive + enig = di zomir ba (ba tso (di li zomir) tso li) = (di li zomir) tso (di li zomir) = ba tso (di li zomir) tso primitive tso + primitive + ub = di li zomir + primitive +</abstract>
<author confidence="0.999901">David P Dailey</author>
<affiliation confidence="0.999867">Department of Psychology University of Alaska</affiliation>
<address confidence="0.997591">Fairbanks, Alaska</address>
<email confidence="0.591994">REFERENCES</email>
<note confidence="0.909888">Johnson, D.S. 1979 and Intractability. and Company, San Francisco, California. Karp, R.M. 1972 Reducibility among Combinatorial Problems. In R.E. and Thatcher, J.W., Eds., of Computer Press, New York, New York: 85-103. Linguistics, Volume 12, Number 4, October-December 1986</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>P David</author>
</authors>
<institution>Dailey Department of Psychology University of Alaska Fairbanks,</institution>
<location>Alaska REFERENCES</location>
<marker>David, </marker>
<rawString>David P. Dailey Department of Psychology University of Alaska Fairbanks, Alaska REFERENCES</rawString>
</citation>
<citation valid="true">
<authors>
<author>M R Garey</author>
<author>D S Johnson</author>
</authors>
<date>1979</date>
<booktitle>Computers and Intractability. W.H. Freeman and Company,</booktitle>
<location>San Francisco, California.</location>
<contexts>
<context position="4064" citStr="Garey and Johnson (1979)" startWordPosition="679" endWordPosition="682">can be relaxed under certain circumstances. The problem of semantic reduction to a minimum set of lexical primitives may now be stated thusly: Given a dictionary, we seek to rewrite that dictionary, substituting definitions for words freely so as to minimize that portion of the lexicon occurring as members of defining strings. That is, what is the smallest number of words in the lexicon such that all other words may be defined from this select set? Karp (1972) demonstrated that the problem &amp;quot;Feedback Vertex Set&amp;quot;, FVS, is NP-complete. [For readers unfamiliar with the concept of NP-completeness, Garey and Johnson (1979) present an overview of the topic.] The following shows that our semantic reduction problem is equivalent to FVS. FVS is stated as follows by Garey and Johnson: Given a directed graph G= (N,L) and a positive integer k, is there a subset of N consisting of k or fewer nodes that contains at least one vertex from every directed cycle in G? To show the problems equivalent, we first note that for the sake of simplifying the dictionary we are not concerned, per se, with the order of words within defining strings. That is, so long as we keep track of this ordering, it will not affect the ultimate siz</context>
</contexts>
<marker>Garey, Johnson, 1979</marker>
<rawString>Garey, M.R. and Johnson, D.S. 1979 Computers and Intractability. W.H. Freeman and Company, San Francisco, California.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R M Karp</author>
</authors>
<title>Reducibility among Combinatorial Problems. In</title>
<date>1972</date>
<pages>85--103</pages>
<publisher>Plenum Press,</publisher>
<institution>Complexity of Computer Computations.</institution>
<location>New York, New York:</location>
<contexts>
<context position="3904" citStr="Karp (1972)" startWordPosition="658" endWordPosition="659">nguage, though such is not needed here. Definition 6 excludes the possibility that a word might appear within its own definition. This restriction can be relaxed under certain circumstances. The problem of semantic reduction to a minimum set of lexical primitives may now be stated thusly: Given a dictionary, we seek to rewrite that dictionary, substituting definitions for words freely so as to minimize that portion of the lexicon occurring as members of defining strings. That is, what is the smallest number of words in the lexicon such that all other words may be defined from this select set? Karp (1972) demonstrated that the problem &amp;quot;Feedback Vertex Set&amp;quot;, FVS, is NP-complete. [For readers unfamiliar with the concept of NP-completeness, Garey and Johnson (1979) present an overview of the topic.] The following shows that our semantic reduction problem is equivalent to FVS. FVS is stated as follows by Garey and Johnson: Given a directed graph G= (N,L) and a positive integer k, is there a subset of N consisting of k or fewer nodes that contains at least one vertex from every directed cycle in G? To show the problems equivalent, we first note that for the sake of simplifying the dictionary we are</context>
</contexts>
<marker>Karp, 1972</marker>
<rawString>Karp, R.M. 1972 Reducibility among Combinatorial Problems. In Miller, R.E. and Thatcher, J.W., Eds., Complexity of Computer Computations. Plenum Press, New York, New York: 85-103.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Computational Linguistics</author>
</authors>
<date>1986</date>
<volume>12</volume>
<pages>307</pages>
<marker>Linguistics, 1986</marker>
<rawString>Computational Linguistics, Volume 12, Number 4, October-December 1986 307</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>