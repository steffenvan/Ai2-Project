<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001869">
<title confidence="0.984459">
Jointly Identifying Temporal Relations with Markov Logic
</title>
<author confidence="0.991002">
Katsumasa Yoshikawa Sebastian Riedel Masayuki Asahara Yuji Matsumoto
</author>
<affiliation confidence="0.995746">
NAIST, Japan University of Tokyo, Japan NAIST, Japan NAIST, Japan
</affiliation>
<email confidence="0.962716">
katsumasa-y@is.naist.jp sebastian.riedel@gmail.com masayu-a@is.naist.jp matsu@is.naist.jp
</email>
<sectionHeader confidence="0.992939" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999429">
Recent work on temporal relation iden-
tification has focused on three types of
relations between events: temporal rela-
tions between an event and a time expres-
sion, between a pair of events and between
an event and the document creation time.
These types of relations have mostly been
identified in isolation by event pairwise
comparison. However, this approach ne-
glects logical constraints between tempo-
ral relations of different types that we be-
lieve to be helpful. We therefore propose a
Markov Logic model that jointly identifies
relations of all three relation types simul-
taneously. By evaluating our model on the
TempEval data we show that this approach
leads to about 2% higher accuracy for all
three types of relations —and to the best
results for the task when compared to those
of other machine learning based systems.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999929237288136">
Temporal relation identification (or temporal or-
dering) involves the prediction of temporal order
between events and/or time expressions mentioned
in text, as well as the relation between events in a
document and the time at which the document was
created.
With the introduction of the TimeBank corpus
(Pustejovsky et al., 2003), a set of documents an-
notated with temporal information, it became pos-
sible to apply machine learning to temporal order-
ing (Boguraev and Ando, 2005; Mani et al., 2006).
These tasks have been regarded as essential for
complete document understanding and are useful
for a wide range of NLP applications such as ques-
tion answering and machine translation.
Most of these approaches follow a simple
schema: they learn classifiers that predict the tem-
poral order of a given event pair based on a set of
the pair’s of features. This approach is local in the
sense that only a single temporal relation is consid-
ered at a time.
Learning to predict temporal relations in this iso-
lated manner has at least two advantages over any
approach that considers several temporal relations
jointly. First, it allows us to use off-the-shelf ma-
chine learning software that, up until now, has been
mostly focused on the case of local classifiers. Sec-
ond, it is computationally very efficient both in
terms of training and testing.
However, the local approach has a inherent
drawback: it can lead to solutions that violate logi-
cal constraints we know to hold for any sets of tem-
poral relations. For example, by classifying tempo-
ral relations in isolation we may predict that event
A happened before, and event B after, the time
of document creation, but also that event A hap-
pened after event B—a clear contradiction in terms
of temporal logic.
In order to repair the contradictions that the local
classifier predicts, Chambers and Jurafsky (2008)
proposed a global framework based on Integer Lin-
ear Programming (ILP). They showed that large
improvements can be achieved by explicitly incor-
porating temporal constraints.
The approach we propose in this paper is similar
in spirit to that of Chambers and Jurafsky: we seek
to improve the accuracy of temporal relation iden-
tification by predicting relations in a more global
manner. However, while they focused only on the
temporal relations between events mentioned in a
document, we also jointly predict the temporal or-
der between events and time expressions, and be-
tween events and the document creation time.
Our work also differs in another important as-
pect from the approach of Chambers and Jurafsky.
Instead of combining the output of a set of local
classifiers using ILP, we approach the problem of
joint temporal relation identification using Markov
Logic (Richardson and Domingos, 2006). In this
</bodyText>
<page confidence="0.986755">
405
</page>
<note confidence="0.999612">
Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 405–413,
Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.999908386363637">
framework global correlations can be readily cap-
tured through the addition of weighted first order
logic formulae.
Using Markov Logic instead of an ILP-based ap-
proach has at least two advantages. First, it allows
us to easily capture non-deterministic (soft) rules
that tend to hold between temporal relations but do
not have to. 1 For example, if event A happens be-
fore B, and B overlaps with C, then there is a good
chance that A also happens before C, but this is not
guaranteed.
Second, the amount of engineering required to
build our system is similar to the efforts required
for using an off-the-shelf classifier: we only need
to define features (in terms of formulae) and pro-
vide input data in the correct format. 2 In particu-
lar, we do not need to manually construct ILPs for
each document we encounter. Moreover, we can
exploit and compare advanced methods of global
inference and learning, as long as they are imple-
mented in our Markov Logic interpreter of choice.
Hence, in our future work we can focus entirely
on temporal relations, as opposed to inference or
learning techniques for machine learning.
We evaluate our approach using the data of the
“TempEval” challenge held at the SemEval 2007
Workshop (Verhagen et al., 2007). This challenge
involved three tasks corresponding to three types
of temporal relations: between events and time ex-
pressions in a sentence (Task A), between events of
a document and the document creation time (Task
B), and between events in two consecutive sen-
tences (Task C).
Our findings show that by incorporating global
constraints that hold between temporal relations
predicted in Tasks A, B and C, the accuracy for
all three tasks can be improved significantly. In
comparison to other participants of the “TempE-
val” challenge our approach is very competitive:
for two out of the three tasks we achieve the best
results reported so far, by a margin of at least 2%. 3
Only for Task B we were unable to reach the perfor-
mance of a rule-based entry to the challenge. How-
ever, we do perform better than all pure machine
</bodyText>
<footnote confidence="0.997243">
1It is clearly possible to incorporate weighted constraints
into ILPs, but how to learn the corresponding weights is not
obvious.
2This is not to say that picking the right formulae in
Markov Logic, or features for local classification, is always
easy.
3To be slightly more precise: for Task C we achieve this
margin only for “strict” scoring—see sections 5 and 6 for more
details.
</footnote>
<bodyText confidence="0.9721105">
learning-based entries.
The remainder of this paper is organized as fol-
lows: Section 2 describes temporal relation identi-
fication including TempEval; Section 3 introduces
Markov Logic; Section 4 explains our proposed
Markov Logic Network; Section 5 presents the set-
up of our experiments; Section 6 shows and dis-
cusses the results of our experiments; and in Sec-
tion 7 we conclude and present ideas for future re-
search.
</bodyText>
<sectionHeader confidence="0.970577" genericHeader="method">
2 Temporal Relation Identification
</sectionHeader>
<bodyText confidence="0.996850270270271">
Temporal relation identification aims to predict
the temporal order of events and/or time expres-
sions in documents, as well as their relations to the
document creation time (DCT). For example, con-
sider the following (slightly simplified) sentence of
Section 1 in this paper.
With the introduction of the TimeBank cor-
pus (Pustejovsky et al., 2003), machine
learning approaches to temporal ordering
became possible.
Here we have to predict that the “Machine learn-
ing becoming possible” event happened AFTER
the “introduction of the TimeBank corpus” event,
and that it has a temporal OVERLAP with the year
2003. Moreover, we need to determine that both
events happened BEFORE the time this paper was
created.
Most previous work on temporal relation iden-
tification (Boguraev and Ando, 2005; Mani et al.,
2006; Chambers and Jurafsky, 2008) is based on
the TimeBank corpus. The temporal relations in
the Timebank corpus are divided into 11 classes;
10 of them are defined by the following 5 relations
and their inverse: BEFORE, IBEFORE (immedi-
ately before), BEGINS, ENDS, INCLUDES; the re-
maining one is SIMULTANEOUS.
In order to drive forward research on temporal
relation identification, the SemEval 2007 shared
task (Verhagen et al., 2007) (TempEval) included
the following three tasks.
TASK A Temporal relations between events and
time expressions that occur within the same
sentence.
TASK B Temporal relations between the Docu-
ment Creation Time (DCT) and events.
TASK C Temporal relations between the main
events of adjacent sentences.4
</bodyText>
<footnote confidence="0.9974995">
4The main event of a sentence is expressed by its syntacti-
cally dominant verb.
</footnote>
<page confidence="0.99881">
406
</page>
<bodyText confidence="0.976807666666667">
To simplify matters, in the TempEval data, the
classes of temporal relations were reduced from
the original 11 to 6: BEFORE, OVERLAP, AFTER,
BEFORE-OR-OVERLAP, OVERLAP-OR-AFTER,
and VAGUE.
In this work we are focusing on the three tasks of
TempEval, and our running hypothesis is that they
should be tackled jointly. That is, instead of learn-
ing separate probabilistic models for each task, we
want to learn a single one for all three tasks. This
allows us to incorporate rules of temporal consis-
tency that should hold across tasks. For example, if
an event X happens before DCT, and another event
Y after DCT, then surely X should have happened
before Y. We illustrate this type of transition rule in
Figure 1.
Note that the correct temporal ordering of events
and time expressions can be controversial. For in-
stance, consider the example sentence again. Here
one could argue that “the introduction of the Time-
Bank” may OVERLAP with “Machine learning be-
coming possible” because “introduction” can be
understood as a process that is not finished with
the release of the data but also includes later adver-
tisements and announcements. This is reflected by
the low inter-annotator agreement score of 72% on
Tasks A and B, and 68% on Task C.
</bodyText>
<sectionHeader confidence="0.978424" genericHeader="method">
3 Markov Logic
</sectionHeader>
<bodyText confidence="0.999207428571429">
It has long been clear that local classification
alone cannot adequately solve all prediction prob-
lems we encounter in practice.5 This observa-
tion motivated a field within machine learning,
often referred to as Statistical Relational Learn-
ing (SRL), which focuses on the incorporation
of global correlations that hold between statistical
variables (Getoor and Taskar, 2007).
One particular SRL framework that has recently
gained momentum as a platform for global learn-
ing and inference in AI is Markov Logic (Richard-
son and Domingos, 2006), a combination of first-
order logic and Markov Networks. It can be under-
stood as a formalism that extends first-order logic
to allow formulae that can be violated with some
penalty. From an alternative point of view, it is an
expressive template language that uses first order
logic formulae to instantiate Markov Networks of
repetitive structure.
From a wide range of SRL languages we chose
Markov Logic because it supports discriminative
</bodyText>
<footnote confidence="0.9833705">
5It can, however, solve a large number of problems surpris-
ingly well.
</footnote>
<figureCaption confidence="0.999958">
Figure 1: Example of Transition Rule 1
</figureCaption>
<bodyText confidence="0.999982678571429">
training (as opposed to generative SRL languages
such as PRM (Koller, 1999)). Moreover, sev-
eral Markov Logic software libraries exist and are
freely available (as opposed to other discrimina-
tive frameworks such as Relational Markov Net-
works (Taskar et al., 2002)).
In the following we will explain Markov Logic
by example. One usually starts out with a set
of predicates that model the decisions we need to
make. For simplicity, let us assume that we only
predict two types of decisions: whether an event e
happens before the document creation time (DCT),
and whether, for a pair of events e1 and e2, e1
happens before e2. Here the first type of deci-
sion can be modeled through a unary predicate
beforeDCT(e), while the latter type can be repre-
sented by a binary predicate before(e1, e2). Both
predicates will be referred to as hidden because we
do not know their extensions at test time. We also
introduce a set of observed predicates, representing
information that is available at test time. For ex-
ample, in our case we could introduce a predicate
futureTense(e) which indicates that e is an event
described in the future tense.
With our predicates defined, we can now go on
to incorporate our intuition about the task using
weighted first-order logic formulae. For example,
it seems reasonable to assume that
</bodyText>
<equation confidence="0.525117">
futureTense (e) ==&gt;- -,beforeDCT (e) (1)
</equation>
<bodyText confidence="0.9996768">
often, but not always, holds. Our remaining un-
certainty with regard to this formula is captured
by a weight w we associate with it. Generally
we can say that the larger this weight is, the more
likely/often the formula holds in the solutions de-
scribed by our model. Note, however, that we do
not need to manually pick these weights; instead
they are learned from the given training corpus.
The intuition behind the previous formula can
also be captured using a local classifier.6 However,
</bodyText>
<footnote confidence="0.950729">
6Consider a log-linear binary classifier with a “past-tense”
</footnote>
<page confidence="0.968127">
407
</page>
<equation confidence="0.783857333333333">
Markov Logic also allows us to say more:
beforeDCT (e1) n -beforeDCT (e2)
==&gt;. before (e1, e2) (2)
</equation>
<bodyText confidence="0.996164363636364">
In this case, we made a statement about more
global properties of a temporal ordering that can-
not be captured with local classifiers. This formula
is also an example of the transition rules as seen in
Figure 2. This type of rule forms the core idea of
our joint approach.
A Markov Logic Network (MLN) M is a set of
pairs (0, w) where 0 is a first order formula and w
is a real number (the formula’s weight). It defines a
probability distribution over sets of ground atoms,
or so-called possible worlds, as follows:
</bodyText>
<equation confidence="0.9985375">
p(y) = Z exp ∑w∑fOc (y) (3)
((O,w)EM cECO
</equation>
<bodyText confidence="0.996169952380952">
Here each c is a binding of free variables in 0 to
constants in our domain. Each fOc is a binary fea-
ture function that returns 1 if in the possible world
y the ground formula we get by replacing the free
variables in 0 with the constants in c is true, and
0 otherwise. CO is the set of all bindings for the
free variables in 0. Z is a normalisation constant.
Note that this distribution corresponds to a Markov
Network (the so-called Ground Markov Network)
where nodes represent ground atoms and factors
represent ground formulae.
Designing formulae is only one part of the game.
In practice, we also need to choose a training
regime (in order to learn the weights of the formu-
lae we added to the MLN) and a search/inference
method that picks the most likely set of ground
atoms (temporal relations in our case) given our
trained MLN and a set of observations. How-
ever, implementations of these methods are often
already provided in existing Markov Logic inter-
preters such as Alchemy 7 and Markov thebeast. 8
</bodyText>
<sectionHeader confidence="0.993969" genericHeader="method">
4 Proposed Markov Logic Network
</sectionHeader>
<bodyText confidence="0.9300581">
As stated before, our aim is to jointly tackle
Tasks A, B and C of the TempEval challenge. In
this section we introduce the Markov Logic Net-
work we designed for this goal.
We have three hidden predicates, corresponding
to Tasks A, B, and C: relE2T(e, t, r) represents the
temporal relation of class r between an event e
feature: here for every event e the decision “e happens be-
fore DCT” becomes more likely with a higher weight for this
feature.
</bodyText>
<footnote confidence="0.9999195">
7http://alchemy.cs.washington.edu/
8http://code.google.com/p/thebeast/
</footnote>
<figureCaption confidence="0.999859">
Figure 2: Example of Transition Rule 2
</figureCaption>
<bodyText confidence="0.999828176470588">
and a time expression t; relDCT(e, r) denotes the
temporal relation r between an event e and DCT;
relE2E(e1, e2, r) represents the relation r between
two events of the adjacent sentences, e1 and e2.
Our observed predicates reflect information we
were given (such as the words of a sentence), and
additional information we extracted from the cor-
pus (such as POS tags and parse trees). Note that
the TempEval data also contained temporal rela-
tions that were not supposed to be predicted. These
relations are represented using two observed pred-
icates: relT2T(t1, t2, r) for the relation r between
two time expressions t1 and t2; dctOrder(t, r) for
the relation r between a time expression t and a
fixed DCT.
An illustration of all “temporal” predicates, both
hidden and observed, can be seen in Figure 3.
</bodyText>
<subsectionHeader confidence="0.994531">
4.1 Local Formula
</subsectionHeader>
<bodyText confidence="0.999967631578947">
Our MLN is composed of several weighted for-
mulae that we divide into two classes. The first
class contains local formulae for the Tasks A, B
and C. We say that a formula is local if it only
considers the hidden temporal relation of a single
event-event, event-time or event-DCT pair. The
formulae in the second class are global: they in-
volve two or more temporal relations at the same
time, and consider Tasks A, B and C simultane-
ously.
The local formulae are based on features em-
ployed in previous work (Cheng et al., 2007;
Bethard and Martin, 2007) and are listed in Table 1.
What follows is a simple example in order to illus-
trate how we implement each feature as a formula
(or set of formulae).
Consider the tense-feature for Task C. For this
feature we first introduce a predicate tense(e, t)
that denotes the tense t for an event e. Then we
</bodyText>
<page confidence="0.996553">
408
</page>
<figureCaption confidence="0.9937815">
Figure 3: Predicates for Joint Formulae; observed
predicates are indicated with dashed lines.
</figureCaption>
<tableCaption confidence="0.971109">
Table 1: Local Features
</tableCaption>
<table confidence="0.782227">
Feature A B C
</table>
<equation confidence="0.965050391304348">
EVENT-word X X
EVENT-POS X X
EVENT-stem X X
EVENT-aspect X X X
EVENT-tense X X X
EVENT-class X X X
EVENT-polarity X X
TIMEX3-word X
TIMEX3-POS X
TIMEX3-value X
TIMEX3-type X
TIMEX3-DCT order X X
positional order X
in/outside X
unigram(word) X X
unigram(POS) X X
bigram(POS) X
trigram(POS) X X
Dependency-Word X X X
Dependency-POS X X
add a set of formulae such as
tense(e1,past) n tense(e2,future)
==&gt;. relE2E(e1, e2, before) (4)
</equation>
<bodyText confidence="0.992783">
for all possible combinations of tenses and tempo-
ral relations.9
</bodyText>
<subsectionHeader confidence="0.987307">
4.2 Global Formula
</subsectionHeader>
<bodyText confidence="0.99966325">
Our global formulae are designed to enforce con-
sistency between the three hidden predicates (and
the two observed temporal predicates we men-
tioned earlier). They are based on the transition
</bodyText>
<footnote confidence="0.680031">
9This type of “template-based” formulae generation can be
performed automatically by the Markov Logic Engine.
</footnote>
<bodyText confidence="0.98762">
rules we mentioned in Section 3.
Table 2 shows the set of formula templates we
use to generate the global formulae. Here each
template produces several instantiations, one for
each assignment of temporal relation classes to the
variables R1, R2, etc. One example of a template
instantiation is the following formula.
</bodyText>
<equation confidence="0.7611705">
dctOrder(t1, before) n relDCT(e1, after)
==&gt;. relE2T(e1, t1, after) (5a)
</equation>
<bodyText confidence="0.9986794">
This formula is an expansion of the formula tem-
plate in the second row of Table 2. Note that it
utilizes the results of Task B to solve Task A.
Formula 5a should always hold,10 and hence we
could easily implement it as a hard constraint in
an ILP-based framework. However, some transi-
tion rules are less determinstic and should rather
be taken as “rules of thumb”. For example, for-
mula 5b is a rule which we expect to hold often,
but not always.
</bodyText>
<equation confidence="0.8276255">
dctOrder(t1, before) n relDCT(e1, overlap)
==&gt;. relE2T(e1, t1, after) (5b)
</equation>
<bodyText confidence="0.999948">
Fortunately, this type of soft rule poses no prob-
lem for Markov Logic: after training, Formula 5b
will simply have a lower weight than Formula 5a.
By contrast, in a “Local Classifier + ILP”-based
approach as followed by Chambers and Jurafsky
(2008) it is less clear how to proceed in the case
of soft rules. Surely it is possible to incorporate
weighted constraints into ILPs, but how to learn the
corresponding weights is not obvious.
</bodyText>
<sectionHeader confidence="0.99869" genericHeader="method">
5 Experimental Setup
</sectionHeader>
<bodyText confidence="0.991906166666666">
With our experiments we want to answer two
questions: (1) does jointly tackling Tasks A, B,
and C help to increase overall accuracy of tempo-
ral relation identification? (2) How does our ap-
proach compare to state-of-the-art results? In the
following we will present the experimental set-up
we chose to answer these questions.
In our experiments we use the test and training
sets provided by the TempEval shared task. We
further split the original training data into a training
and a development set, used for optimizing param-
eters and formulae. For brevity we will refer to the
training, development and test set as TRAIN, DEV
and TEST, respectively. The numbers of temporal
relations in TRAIN, DEV, and TEST are summa-
rized in Table 3.
10However, due to inconsistent annotations one will find vi-
olations of this rule in the TempEval data.
</bodyText>
<page confidence="0.999644">
409
</page>
<tableCaption confidence="0.993084">
Table 2: Joint Formulae for Global Model
</tableCaption>
<table confidence="0.823556857142857">
Task Formula
A → B dctOrder(t, R1) ∧ relE2T(e, t, R2) ⇒ relDCT(e, R3)
B → A dctOrder(t, R1) ∧ relDCT(e, R2) ⇒ relE2T(e, t, R3)
B → C relDCT(e1, R1) ∧ relDCT(e2, R2) ⇒ relE2E(e1, e2, R3)
C → B relDCT(e1, R1) ∧ relE2E(e1, e2, R2) ⇒ relDCT(e2, R3)
A → C relE2T(e1, t1, R1) ∧ relT2T(t1, t2, R2) ∧ relE2T(e2, t2, R3) ⇒ relE2E(e1, e2, R4)
C → A relE2T(e2, t2, R1) ∧ relT2T(t1, t2, R2) ∧ relE2E(e1, e2, R3) ⇒ relE2T(e1, t1, R4)
</table>
<tableCaption confidence="0.986055">
Table 3: Numbers of Labeled Relations for All
Tasks
</tableCaption>
<table confidence="0.98198625">
TRAIN DEV TEST TOTAL
Task A 1359 131 169 1659
Task B 2330 227 331 2888
Task C 1597 147 258 2002
</table>
<bodyText confidence="0.997664130434783">
For feature generation we use the following
tools. 11 POS tagging is performed with TnT
ver2.2;12 for our dependency-based features we use
MaltParser 1.0.0.13 For inference in our models
we use Cutting Plane Inference (Riedel, 2008) with
ILP as a base solver. This type of inference is ex-
act and often very fast because it avoids instantia-
tion of the complete Markov Network. For learning
we apply one-best MIRA (Crammer and Singer,
2003) with Cutting Plane Inference to find the cur-
rent model guess. Both training and inference algo-
rithms are provided by Markov thebeast, a Markov
Logic interpreter tailored for NLP applications.
Note that there are several ways to manually op-
timize the set of formulae to use. One way is to
pick a task and then choose formulae that increase
the accuracy for this task on DEV. However, our
primary goal is to improve the performance of all
the tasks together. Hence we choose formulae with
respect to the total score over all three tasks. We
will refer to this type of optimization as “averaged
optimization”. The total scores of the all three tasks
are defined as follows:
</bodyText>
<equation confidence="0.989027">
Ca + Cb + Cc
Ga + Gb + Gc
</equation>
<bodyText confidence="0.9999478">
where Ca, Cb, and Cc are the number of the cor-
rectly identified labels in each task, and Ga, Gb,
and Gc are the numbers of gold labels of each task.
Our system necessarily outputs one label to one re-
lational link to identify. Therefore, for all our re-
</bodyText>
<footnote confidence="0.955006428571428">
11Since the TempEval trial has no restriction on pre-
processing such as syntactic parsing, most participants used
some sort of parsers.
12http://www.coli.uni-saarland.de/
˜thorsten/tnt/
13http://w3.msi.vxu.se/˜nivre/research/
MaltParser.html
</footnote>
<bodyText confidence="0.998688">
sults, precision, recall, and F-measure are the exact
same value.
For evaluation, TempEval proposed the two scor-
ing schemes: “strict” and “relaxed”. For strict scor-
ing we give full credit if the relations match, and no
credit if they do not match. On the other hand, re-
laxed scoring gives credit for a relation according
to Table 4. For example, if a system picks the re-
lation “AFTER” that should have been “BEFORE”
according to the gold label, it gets neither “strict”
nor “relaxed” credit. But if the system assigns
“B-O (BEFORE-OR-OVERLAP)” to the relation,
it gets a 0.5 “relaxed” score (and still no “strict”
score).
</bodyText>
<sectionHeader confidence="0.999841" genericHeader="evaluation">
6 Results
</sectionHeader>
<bodyText confidence="0.99992075">
In the following we will first present our com-
parison of the local and global model. We will then
go on to put our results into context and compare
them to the state-of-the-art.
</bodyText>
<subsectionHeader confidence="0.999747">
6.1 Impact of Global Formulae
</subsectionHeader>
<bodyText confidence="0.999929090909091">
First, let us show the results on TEST in Ta-
ble 5. You will find two columns, “Global” and
“Local”, showing scores achieved with and with-
out joint formulae, respectively. Clearly, the global
models scores are higher than the local scores for
all three tasks. This is also reflected by the last row
of Table 5. Here we see that we have improved
the averaged performance across the three tasks by
approximately 2.5% (p &lt; 0.01, McNemar’s test 2-
tailed). Note that with 3.5% the improvements are
particularly large for Task C.
The TempEval test set is relatively small (see Ta-
ble 3). Hence it is not clear how well our results
would generalize in practice. To overcome this is-
sue, we also evaluated the local and global model
using 10-fold cross validation on the training data
(TRAIN + DEV). The corresponding results can be
seen in Table 6. Note that the general picture re-
mains: performance for all tasks is improved, and
the averaged score is improved only slightly less
than for the TEST results. However, this time the
score increase for Task B is lower than before. We
</bodyText>
<page confidence="0.999163">
410
</page>
<tableCaption confidence="0.999422">
Table 4: Evaluation Weights for Relaxed Scoring
</tableCaption>
<table confidence="0.999500714285714">
B O A B-O O-A V
B 1 0 0 0.5 0 0.33
O 0 1 0 0.5 0.5 0.33
A 0 0 1 0 0.5 0.33
B-O 0.5 0.5 0 1 0.5 0.67
O-A 0 0.5 0.5 0.5 1 0.67
V 0.33 0.33 0.33 0.67 0.67 1
</table>
<tableCaption confidence="0.997751">
Table 5: Results on TEST Set
</tableCaption>
<table confidence="0.999736666666667">
Local Global
task strict relaxed strict relaxed
Task A 0.621 0.669 0.645 0.687
Task B 0.737 0.753 0.758 0.777
Task C 0.531 0.599 0.566 0.632
All 0.641 0.682 0.668 0.708
</table>
<tableCaption confidence="0.996205">
Table 6: Results with 10-fold Cross Validation
</tableCaption>
<table confidence="0.998592666666667">
Local Global
task strict relaxed strict relaxed
Task A 0.613 0.645 0.662 0.691
Task B 0.789 0.810 0.799 0.819
Task C 0.533 0.608 0.552 0.623
All 0.667 0.707 0.689 0.727
</table>
<bodyText confidence="0.998660272727273">
see that this is compensated by much higher scores
for Task A and C. Again, the improvements for all
three tasks are statistically significant (p &lt; 10−8,
McNemar’s test, 2-tailed).
To summarize, we have shown that by tightly
connecting tasks A, B and C, we can improve tem-
poral relation identification significantly. But are
we just improving a weak baseline, or can joint
modelling help to reach or improve the state-of-the-
art results? We will try to answer this question in
the next section.
</bodyText>
<subsectionHeader confidence="0.999893">
6.2 Comparison to the State-of-the-art
</subsectionHeader>
<bodyText confidence="0.999967051282051">
In order to put our results into context, Table 7
shows them along those of other TempEval par-
ticipants. In the first row, TempEval Best gives
the best scores of TempEval for each task. Note
that all but the strict scores of Task C are achieved
by WVALI (Puscasu, 2007), a hybrid system that
combines machine learning and hand-coded rules.
In the second row we see the TempEval average
scores of all six participants in TempEval. The
third row shows the results of CU-TMP (Bethard
and Martin, 2007), an SVM-based system that
achieved the second highest scores in TempEval for
all three tasks. CU-TMP is of interest because it is
the best pure Machine-Learning-based approach so
far.
The scores of our local and global model come
in the fourth and fifth row, respectively. The last
row in the table shows task-adjusted scores. Here
we essentially designed and applied three global
MLNs, each one tailored and optimized for a dif-
ferent task. Note that the task-adjusted scores are
always about 1% higher than those of the single
global model.
Let us discuss the results of Table 7 in detail. We
see that for task A, our global model improves an
already strong local model to reach the best results
both for strict scores (with a 3% points margin) and
relaxed scores (with a 5% points margin).
For Task C we see a similar picture: here adding
global constraints helped to reach the best strict
scores, again by a wide margin. We also achieve
competitive relaxed scores which are in close range
to the TempEval best results.
Only for task B our results cannot reach the best
TempEval scores. While we perform slightly better
than the second-best system (CU-TMP), and hence
report the best scores among all pure Machine-
Learning based approaches, we cannot quite com-
pete with WVALI.
</bodyText>
<subsectionHeader confidence="0.936369">
6.3 Discussion
</subsectionHeader>
<bodyText confidence="0.999984476190476">
Let us discuss some further characteristics and
advantages of our approach. First, notice that
global formulae not only improve strict but also re-
laxed scores for all tasks. This suggests that we
produce more ambiguous labels (such as BEFORE-
OR-OVERLAP) in cases where the local model has
been overconfident (and wrongly chose BEFORE
or OVERLAP), and hence make less “fatal errors”.
Intuitively this makes sense: global consistency is
easier to achieve if our labels remain ambiguous.
For example, a solution that labels every relation
as VAGUE is globally consistent (but not very in-
formative).
Secondly, one could argue that our solution to
joint temporal relation identification is too com-
plicated. Instead of performing global inference,
one could simply arrange local classifiers for the
tasks into a pipeline. In fact, this has been done by
Bethard and Martin (2007): they first solve task B
and then use this information as features for Tasks
A and C. While they do report improvements (0.7%
</bodyText>
<table confidence="0.976277666666667">
B: BEFORE O: OVERLAP
A: AFTER B-O: BEFORE-OR-OVERLAP
O-A: OVERLAP-OR-AFTER V: VAGUE
</table>
<page confidence="0.967386">
411
</page>
<tableCaption confidence="0.99993">
Table 7: Comparison with Other Systems
</tableCaption>
<table confidence="0.999168125">
Task A Task B Task C
strict relaxed strict relaxed strict relaxed
TempEval Best 0.62 0.64 0.80 0.81 0.55 0.64
TempEval Average 0.56 0.59 0.74 0.75 0.51 0.58
CU-TMP 0.61 0.63 0.75 0.76 0.54 0.58
Local Model 0.62 0.67 0.74 0.75 0.53 0.60
Global Model 0.65 0.69 0.76 0.78 0.57 0.63
Global Model (Task-Adjusted) (0.66) (0.70) (0.76) (0.79) (0.58) (0.64)
</table>
<bodyText confidence="0.9991895">
on Task A, and about 0.5% on Task C), generally
these improvements do not seem as significant as
ours. What is more, by design their approach can
not improve the first stage (Task B) of the pipeline.
On the same note, we also argue that our ap-
proach does not require more implementation ef-
forts than a pipeline. Essentially we only have to
provide features (in the form of formulae) to the
Markov Logic Engine, just as we have to provide
for a SVM or MaxEnt classifier.
Finally, it became more clear to us that there are
problems inherent to this task and dataset that we
cannot (or only partially) solve using global meth-
ods. First, there are inconsistencies in the training
data (as reflected by the low inter-annotator agree-
ment) that often mislead the learner—this prob-
lem applies to learning of local and global formu-
lae/features alike. Second, the training data is rela-
tively small. Obviously, this makes learning of re-
liable parameters more difficult, particularly when
data is as noisy as in our case. Third, the tempo-
ral relations in the TempEval dataset only directly
connect a small subset of events. This makes global
formulae less effective.14
</bodyText>
<sectionHeader confidence="0.998501" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.999207522727273">
In this paper we presented a novel approach to
temporal relation identification. Instead of using
local classifiers to predict temporal order in a pair-
wise fashion, our approach uses Markov Logic to
incorporate both local features and global transi-
tion rules between temporal relations.
We have focused on transition rules between
temporal relations of the three TempEval subtasks:
temporal ordering of events, of events and time ex-
pressions, and of events and the document creation
time. Our results have shown that global transition
rules lead to significantly higher accuracy for all
three tasks. Moreover, our global Markov Logic
14See (Chambers and Jurafsky, 2008) for a detailed discus-
sion of this problem, and a possible solution for it.
model achieves the highest scores reported so far
for two of three tasks, and very competitive results
for the remaining one.
While temporal transition rules can also be cap-
tured with an Integer Linear Programming ap-
proach (Chambers and Jurafsky, 2008), Markov
Logic has at least two advantages. First, handling
of “rules of thumb” between less specific tempo-
ral relations (such as OVERLAP or VAGUE) is
straightforward—we simply let the Markov Logic
Engine learn weights for these rules. Second, there
is less engineering overhead for us to perform, be-
cause we do not need to generate ILPs for each doc-
ument.
However, potential for further improvements
through global approaches seems to be limited by
the sparseness and inconsistency of the data. To
overcome this problem, we are planning to use ex-
ternal or untagged data along with methods for un-
supervised learning in Markov Logic (Poon and
Domingos, 2008).
Furthermore, TempEval-215 is planned for 2010
and it has challenging temporal ordering tasks in
five languages. So, we would like to investigate the
utility of global formulae for multilingual tempo-
ral ordering. Here we expect that while lexical and
syntax-based features may be quite language de-
pendent, global transition rules should hold across
languages.
</bodyText>
<sectionHeader confidence="0.996548" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999736666666667">
This work is partly supported by the Integrated
Database Project, Ministry of Education, Culture,
Sports, Science and Technology of Japan.
</bodyText>
<sectionHeader confidence="0.999427" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.995418">
Steven Bethard and James H. Martin. 2007. Cu-tmp:
Temporal relation classification using syntactic and
semantic features. In Proceedings of the 4th Interna-
tional Workshop on SemEval-2007., pages 129–132.
</reference>
<footnote confidence="0.520207">
15http://www.timeml.org/tempeval2/
</footnote>
<page confidence="0.987023">
412
</page>
<reference confidence="0.999769645161291">
Branimir Boguraev and Rie Kubota Ando. 2005.
Timeml-compliant text analysis for temporal reason-
ing. In Proceedings of the 19th International Joint
Conference on Artificial Intelligence, pages 997–
1003.
Nathanael Chambers and Daniel Jurafsky. 2008.
Jointly combining implicit constraints improves tem-
poral ordering. In Proceedings of the 2008 Con-
ference on Empirical Methods in Natural Language
Processing, pages 698–706, Honolulu, Hawaii, Oc-
tober. Association for Computational Linguistics.
Yuchang Cheng, Masayuki Asahara, and Yuji Mat-
sumoto. 2007. Naist.japan: Temporal relation iden-
tification using dependency parsed tree. In Proceed-
ings of the 4th International Workshop on SemEval-
2007., pages 245–248.
Koby Crammer and Yoram Singer. 2003. Ultracon-
servative online algorithms for multiclass problems.
Journal of Machine Learning Research, 3:951–991.
Lise Getoor and Ben Taskar. 2007. Introduction to Sta-
tistical Relational Learning (Adaptive Computation
and Machine Learning). The MIT Press.
Daphne Koller, 1999. Probabilistic Relational Models,
pages 3–13. Springer, Berlin/Heidelberg, Germany.
Inderjeet Mani, Marc Verhagen, Ben Wellner,
Chong Min Lee, and James Pustejovsky. 2006.
Machine learning of temporal relations. In ACL-44:
Proceedings of the 21st International Conference
on Computational Linguistics and the 44th annual
meeting of the Association for Computational Lin-
guistics, pages 753–760, Morristown, NJ, USA.
Association for Computational Linguistics.
Hoifung Poon and Pedro Domingos. 2008. Joint unsu-
pervised coreference resolution with Markov Logic.
In Proceedings of the 2008 Conference on Empiri-
cal Methods in Natural Language Processing, pages
650–659, Honolulu, Hawaii, October. Association for
Computational Linguistics.
Georgiana Puscasu. 2007. Wvali: Temporal relation
identification by syntactico-semantic analysis. In
Proceedings of the 4th International Workshop on
SemEval-2007., pages 484–487.
James Pustejovsky, Jose Castano, Robert Ingria, Reser
Sauri, Robert Gaizauskas, Andrea Setzer, and Gra-
ham Katz. 2003. The timebank corpus. In Proceed-
ings of Corpus Linguistics 2003, pages 647–656.
Matthew Richardson and Pedro Domingos. 2006.
Markov logic networks. In Machine Learning.
Sebastian Riedel. 2008. Improving the accuracy and
efficiency of map inference for markov logic. In Pro-
ceedings of UAI 2008.
Ben Taskar, Abbeel Pieter, and Daphne Koller. 2002.
Discriminative probabilistic models for relational
data. In Proceedings of the 18th Annual Conference
on Uncertainty in Artificial Intelligence (UAI-02),
pages 485–492, San Francisco, CA. Morgan Kauf-
mann.
Marc Verhagen, Robert Gaizaukas, Frank Schilder,
Mark Hepple, Graham Katz, and James Pustejovsky.
2007. Semeval-2007 task 15: Tempeval temporal re-
lation identification. In Proceedings of the 4th Inter-
national Workshop on SemEval-2007., pages 75–80.
</reference>
<page confidence="0.998988">
413
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.291970">
<title confidence="0.972448">Jointly Identifying Temporal Relations with Markov Logic</title>
<author confidence="0.91195">Katsumasa Yoshikawa Sebastian Riedel Masayuki Asahara Yuji Matsumoto</author>
<affiliation confidence="0.402826">NAIST, Japan University of Tokyo, Japan NAIST, Japan NAIST, Japan</affiliation>
<email confidence="0.757943">katsumasa-y@is.naist.jpsebastian.riedel@gmail.commasayu-a@is.naist.jpmatsu@is.naist.jp</email>
<abstract confidence="0.999724666666667">Recent work on temporal relation identification has focused on three types of relations between events: temporal relations between an event and a time expression, between a pair of events and between an event and the document creation time. These types of relations have mostly been identified in isolation by event pairwise comparison. However, this approach neglects logical constraints between temporal relations of different types that we believe to be helpful. We therefore propose a Markov Logic model that jointly identifies relations of all three relation types simultaneously. By evaluating our model on the TempEval data we show that this approach leads to about 2% higher accuracy for all three types of relations —and to the best results for the task when compared to those of other machine learning based systems.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Steven Bethard</author>
<author>James H Martin</author>
</authors>
<title>Cu-tmp: Temporal relation classification using syntactic and semantic features.</title>
<date>2007</date>
<booktitle>In Proceedings of the 4th International Workshop on SemEval-2007.,</booktitle>
<pages>129--132</pages>
<contexts>
<context position="16437" citStr="Bethard and Martin, 2007" startWordPosition="2739" endWordPosition="2742">ates, both hidden and observed, can be seen in Figure 3. 4.1 Local Formula Our MLN is composed of several weighted formulae that we divide into two classes. The first class contains local formulae for the Tasks A, B and C. We say that a formula is local if it only considers the hidden temporal relation of a single event-event, event-time or event-DCT pair. The formulae in the second class are global: they involve two or more temporal relations at the same time, and consider Tasks A, B and C simultaneously. The local formulae are based on features employed in previous work (Cheng et al., 2007; Bethard and Martin, 2007) and are listed in Table 1. What follows is a simple example in order to illustrate how we implement each feature as a formula (or set of formulae). Consider the tense-feature for Task C. For this feature we first introduce a predicate tense(e, t) that denotes the tense t for an event e. Then we 408 Figure 3: Predicates for Joint Formulae; observed predicates are indicated with dashed lines. Table 1: Local Features Feature A B C EVENT-word X X EVENT-POS X X EVENT-stem X X EVENT-aspect X X X EVENT-tense X X X EVENT-class X X X EVENT-polarity X X TIMEX3-word X TIMEX3-POS X TIMEX3-value X TIMEX3-</context>
<context position="25696" citStr="Bethard and Martin, 2007" startWordPosition="4364" endWordPosition="4367">e the state-of-theart results? We will try to answer this question in the next section. 6.2 Comparison to the State-of-the-art In order to put our results into context, Table 7 shows them along those of other TempEval participants. In the first row, TempEval Best gives the best scores of TempEval for each task. Note that all but the strict scores of Task C are achieved by WVALI (Puscasu, 2007), a hybrid system that combines machine learning and hand-coded rules. In the second row we see the TempEval average scores of all six participants in TempEval. The third row shows the results of CU-TMP (Bethard and Martin, 2007), an SVM-based system that achieved the second highest scores in TempEval for all three tasks. CU-TMP is of interest because it is the best pure Machine-Learning-based approach so far. The scores of our local and global model come in the fourth and fifth row, respectively. The last row in the table shows task-adjusted scores. Here we essentially designed and applied three global MLNs, each one tailored and optimized for a different task. Note that the task-adjusted scores are always about 1% higher than those of the single global model. Let us discuss the results of Table 7 in detail. We see t</context>
<context position="27861" citStr="Bethard and Martin (2007)" startWordPosition="4723" endWordPosition="4726">ERLAP) in cases where the local model has been overconfident (and wrongly chose BEFORE or OVERLAP), and hence make less “fatal errors”. Intuitively this makes sense: global consistency is easier to achieve if our labels remain ambiguous. For example, a solution that labels every relation as VAGUE is globally consistent (but not very informative). Secondly, one could argue that our solution to joint temporal relation identification is too complicated. Instead of performing global inference, one could simply arrange local classifiers for the tasks into a pipeline. In fact, this has been done by Bethard and Martin (2007): they first solve task B and then use this information as features for Tasks A and C. While they do report improvements (0.7% B: BEFORE O: OVERLAP A: AFTER B-O: BEFORE-OR-OVERLAP O-A: OVERLAP-OR-AFTER V: VAGUE 411 Table 7: Comparison with Other Systems Task A Task B Task C strict relaxed strict relaxed strict relaxed TempEval Best 0.62 0.64 0.80 0.81 0.55 0.64 TempEval Average 0.56 0.59 0.74 0.75 0.51 0.58 CU-TMP 0.61 0.63 0.75 0.76 0.54 0.58 Local Model 0.62 0.67 0.74 0.75 0.53 0.60 Global Model 0.65 0.69 0.76 0.78 0.57 0.63 Global Model (Task-Adjusted) (0.66) (0.70) (0.76) (0.79) (0.58) (0.</context>
</contexts>
<marker>Bethard, Martin, 2007</marker>
<rawString>Steven Bethard and James H. Martin. 2007. Cu-tmp: Temporal relation classification using syntactic and semantic features. In Proceedings of the 4th International Workshop on SemEval-2007., pages 129–132.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Branimir Boguraev</author>
<author>Rie Kubota Ando</author>
</authors>
<title>Timeml-compliant text analysis for temporal reasoning.</title>
<date>2005</date>
<booktitle>In Proceedings of the 19th International Joint Conference on Artificial Intelligence,</booktitle>
<pages>997--1003</pages>
<contexts>
<context position="1609" citStr="Boguraev and Ando, 2005" startWordPosition="241" endWordPosition="244"> all three types of relations —and to the best results for the task when compared to those of other machine learning based systems. 1 Introduction Temporal relation identification (or temporal ordering) involves the prediction of temporal order between events and/or time expressions mentioned in text, as well as the relation between events in a document and the time at which the document was created. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), a set of documents annotated with temporal information, it became possible to apply machine learning to temporal ordering (Boguraev and Ando, 2005; Mani et al., 2006). These tasks have been regarded as essential for complete document understanding and are useful for a wide range of NLP applications such as question answering and machine translation. Most of these approaches follow a simple schema: they learn classifiers that predict the temporal order of a given event pair based on a set of the pair’s of features. This approach is local in the sense that only a single temporal relation is considered at a time. Learning to predict temporal relations in this isolated manner has at least two advantages over any approach that considers seve</context>
<context position="7732" citStr="Boguraev and Ando, 2005" startWordPosition="1261" endWordPosition="1264">ation time (DCT). For example, consider the following (slightly simplified) sentence of Section 1 in this paper. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), machine learning approaches to temporal ordering became possible. Here we have to predict that the “Machine learning becoming possible” event happened AFTER the “introduction of the TimeBank corpus” event, and that it has a temporal OVERLAP with the year 2003. Moreover, we need to determine that both events happened BEFORE the time this paper was created. Most previous work on temporal relation identification (Boguraev and Ando, 2005; Mani et al., 2006; Chambers and Jurafsky, 2008) is based on the TimeBank corpus. The temporal relations in the Timebank corpus are divided into 11 classes; 10 of them are defined by the following 5 relations and their inverse: BEFORE, IBEFORE (immediately before), BEGINS, ENDS, INCLUDES; the remaining one is SIMULTANEOUS. In order to drive forward research on temporal relation identification, the SemEval 2007 shared task (Verhagen et al., 2007) (TempEval) included the following three tasks. TASK A Temporal relations between events and time expressions that occur within the same sentence. TAS</context>
</contexts>
<marker>Boguraev, Ando, 2005</marker>
<rawString>Branimir Boguraev and Rie Kubota Ando. 2005. Timeml-compliant text analysis for temporal reasoning. In Proceedings of the 19th International Joint Conference on Artificial Intelligence, pages 997– 1003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nathanael Chambers</author>
<author>Daniel Jurafsky</author>
</authors>
<title>Jointly combining implicit constraints improves temporal ordering.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>698--706</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Honolulu, Hawaii,</location>
<contexts>
<context position="2985" citStr="Chambers and Jurafsky (2008)" startWordPosition="474" endWordPosition="477">e case of local classifiers. Second, it is computationally very efficient both in terms of training and testing. However, the local approach has a inherent drawback: it can lead to solutions that violate logical constraints we know to hold for any sets of temporal relations. For example, by classifying temporal relations in isolation we may predict that event A happened before, and event B after, the time of document creation, but also that event A happened after event B—a clear contradiction in terms of temporal logic. In order to repair the contradictions that the local classifier predicts, Chambers and Jurafsky (2008) proposed a global framework based on Integer Linear Programming (ILP). They showed that large improvements can be achieved by explicitly incorporating temporal constraints. The approach we propose in this paper is similar in spirit to that of Chambers and Jurafsky: we seek to improve the accuracy of temporal relation identification by predicting relations in a more global manner. However, while they focused only on the temporal relations between events mentioned in a document, we also jointly predict the temporal order between events and time expressions, and between events and the document c</context>
<context position="7781" citStr="Chambers and Jurafsky, 2008" startWordPosition="1269" endWordPosition="1272">following (slightly simplified) sentence of Section 1 in this paper. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), machine learning approaches to temporal ordering became possible. Here we have to predict that the “Machine learning becoming possible” event happened AFTER the “introduction of the TimeBank corpus” event, and that it has a temporal OVERLAP with the year 2003. Moreover, we need to determine that both events happened BEFORE the time this paper was created. Most previous work on temporal relation identification (Boguraev and Ando, 2005; Mani et al., 2006; Chambers and Jurafsky, 2008) is based on the TimeBank corpus. The temporal relations in the Timebank corpus are divided into 11 classes; 10 of them are defined by the following 5 relations and their inverse: BEFORE, IBEFORE (immediately before), BEGINS, ENDS, INCLUDES; the remaining one is SIMULTANEOUS. In order to drive forward research on temporal relation identification, the SemEval 2007 shared task (Verhagen et al., 2007) (TempEval) included the following three tasks. TASK A Temporal relations between events and time expressions that occur within the same sentence. TASK B Temporal relations between the Document Creat</context>
<context position="18843" citStr="Chambers and Jurafsky (2008)" startWordPosition="3146" endWordPosition="3149">A. Formula 5a should always hold,10 and hence we could easily implement it as a hard constraint in an ILP-based framework. However, some transition rules are less determinstic and should rather be taken as “rules of thumb”. For example, formula 5b is a rule which we expect to hold often, but not always. dctOrder(t1, before) n relDCT(e1, overlap) ==&gt;. relE2T(e1, t1, after) (5b) Fortunately, this type of soft rule poses no problem for Markov Logic: after training, Formula 5b will simply have a lower weight than Formula 5a. By contrast, in a “Local Classifier + ILP”-based approach as followed by Chambers and Jurafsky (2008) it is less clear how to proceed in the case of soft rules. Surely it is possible to incorporate weighted constraints into ILPs, but how to learn the corresponding weights is not obvious. 5 Experimental Setup With our experiments we want to answer two questions: (1) does jointly tackling Tasks A, B, and C help to increase overall accuracy of temporal relation identification? (2) How does our approach compare to state-of-the-art results? In the following we will present the experimental set-up we chose to answer these questions. In our experiments we use the test and training sets provided by t</context>
<context position="30304" citStr="Chambers and Jurafsky, 2008" startWordPosition="5129" endWordPosition="5132">ch to temporal relation identification. Instead of using local classifiers to predict temporal order in a pairwise fashion, our approach uses Markov Logic to incorporate both local features and global transition rules between temporal relations. We have focused on transition rules between temporal relations of the three TempEval subtasks: temporal ordering of events, of events and time expressions, and of events and the document creation time. Our results have shown that global transition rules lead to significantly higher accuracy for all three tasks. Moreover, our global Markov Logic 14See (Chambers and Jurafsky, 2008) for a detailed discussion of this problem, and a possible solution for it. model achieves the highest scores reported so far for two of three tasks, and very competitive results for the remaining one. While temporal transition rules can also be captured with an Integer Linear Programming approach (Chambers and Jurafsky, 2008), Markov Logic has at least two advantages. First, handling of “rules of thumb” between less specific temporal relations (such as OVERLAP or VAGUE) is straightforward—we simply let the Markov Logic Engine learn weights for these rules. Second, there is less engineering ov</context>
</contexts>
<marker>Chambers, Jurafsky, 2008</marker>
<rawString>Nathanael Chambers and Daniel Jurafsky. 2008. Jointly combining implicit constraints improves temporal ordering. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 698–706, Honolulu, Hawaii, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yuchang Cheng</author>
<author>Masayuki Asahara</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Naist.japan: Temporal relation identification using dependency parsed tree.</title>
<date>2007</date>
<booktitle>In Proceedings of the 4th International Workshop on SemEval2007.,</booktitle>
<pages>245--248</pages>
<contexts>
<context position="16410" citStr="Cheng et al., 2007" startWordPosition="2735" endWordPosition="2738">ll “temporal” predicates, both hidden and observed, can be seen in Figure 3. 4.1 Local Formula Our MLN is composed of several weighted formulae that we divide into two classes. The first class contains local formulae for the Tasks A, B and C. We say that a formula is local if it only considers the hidden temporal relation of a single event-event, event-time or event-DCT pair. The formulae in the second class are global: they involve two or more temporal relations at the same time, and consider Tasks A, B and C simultaneously. The local formulae are based on features employed in previous work (Cheng et al., 2007; Bethard and Martin, 2007) and are listed in Table 1. What follows is a simple example in order to illustrate how we implement each feature as a formula (or set of formulae). Consider the tense-feature for Task C. For this feature we first introduce a predicate tense(e, t) that denotes the tense t for an event e. Then we 408 Figure 3: Predicates for Joint Formulae; observed predicates are indicated with dashed lines. Table 1: Local Features Feature A B C EVENT-word X X EVENT-POS X X EVENT-stem X X EVENT-aspect X X X EVENT-tense X X X EVENT-class X X X EVENT-polarity X X TIMEX3-word X TIMEX3-P</context>
</contexts>
<marker>Cheng, Asahara, Matsumoto, 2007</marker>
<rawString>Yuchang Cheng, Masayuki Asahara, and Yuji Matsumoto. 2007. Naist.japan: Temporal relation identification using dependency parsed tree. In Proceedings of the 4th International Workshop on SemEval2007., pages 245–248.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Koby Crammer</author>
<author>Yoram Singer</author>
</authors>
<title>Ultraconservative online algorithms for multiclass problems.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<pages>3--951</pages>
<contexts>
<context position="20942" citStr="Crammer and Singer, 2003" startWordPosition="3521" endWordPosition="3524">elE2E(e1, e2, R3) ⇒ relE2T(e1, t1, R4) Table 3: Numbers of Labeled Relations for All Tasks TRAIN DEV TEST TOTAL Task A 1359 131 169 1659 Task B 2330 227 331 2888 Task C 1597 147 258 2002 For feature generation we use the following tools. 11 POS tagging is performed with TnT ver2.2;12 for our dependency-based features we use MaltParser 1.0.0.13 For inference in our models we use Cutting Plane Inference (Riedel, 2008) with ILP as a base solver. This type of inference is exact and often very fast because it avoids instantiation of the complete Markov Network. For learning we apply one-best MIRA (Crammer and Singer, 2003) with Cutting Plane Inference to find the current model guess. Both training and inference algorithms are provided by Markov thebeast, a Markov Logic interpreter tailored for NLP applications. Note that there are several ways to manually optimize the set of formulae to use. One way is to pick a task and then choose formulae that increase the accuracy for this task on DEV. However, our primary goal is to improve the performance of all the tasks together. Hence we choose formulae with respect to the total score over all three tasks. We will refer to this type of optimization as “averaged optimiz</context>
</contexts>
<marker>Crammer, Singer, 2003</marker>
<rawString>Koby Crammer and Yoram Singer. 2003. Ultraconservative online algorithms for multiclass problems. Journal of Machine Learning Research, 3:951–991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lise Getoor</author>
<author>Ben Taskar</author>
</authors>
<title>Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning).</title>
<date>2007</date>
<publisher>The MIT Press.</publisher>
<contexts>
<context position="10191" citStr="Getoor and Taskar, 2007" startWordPosition="1660" endWordPosition="1663">nderstood as a process that is not finished with the release of the data but also includes later advertisements and announcements. This is reflected by the low inter-annotator agreement score of 72% on Tasks A and B, and 68% on Task C. 3 Markov Logic It has long been clear that local classification alone cannot adequately solve all prediction problems we encounter in practice.5 This observation motivated a field within machine learning, often referred to as Statistical Relational Learning (SRL), which focuses on the incorporation of global correlations that hold between statistical variables (Getoor and Taskar, 2007). One particular SRL framework that has recently gained momentum as a platform for global learning and inference in AI is Markov Logic (Richardson and Domingos, 2006), a combination of firstorder logic and Markov Networks. It can be understood as a formalism that extends first-order logic to allow formulae that can be violated with some penalty. From an alternative point of view, it is an expressive template language that uses first order logic formulae to instantiate Markov Networks of repetitive structure. From a wide range of SRL languages we chose Markov Logic because it supports discrimin</context>
</contexts>
<marker>Getoor, Taskar, 2007</marker>
<rawString>Lise Getoor and Ben Taskar. 2007. Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning). The MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daphne Koller</author>
</authors>
<title>Probabilistic Relational Models,</title>
<date>1999</date>
<pages>3--13</pages>
<publisher>Springer,</publisher>
<location>Berlin/Heidelberg, Germany.</location>
<contexts>
<context position="10981" citStr="Koller, 1999" startWordPosition="1792" endWordPosition="1793">tion of firstorder logic and Markov Networks. It can be understood as a formalism that extends first-order logic to allow formulae that can be violated with some penalty. From an alternative point of view, it is an expressive template language that uses first order logic formulae to instantiate Markov Networks of repetitive structure. From a wide range of SRL languages we chose Markov Logic because it supports discriminative 5It can, however, solve a large number of problems surprisingly well. Figure 1: Example of Transition Rule 1 training (as opposed to generative SRL languages such as PRM (Koller, 1999)). Moreover, several Markov Logic software libraries exist and are freely available (as opposed to other discriminative frameworks such as Relational Markov Networks (Taskar et al., 2002)). In the following we will explain Markov Logic by example. One usually starts out with a set of predicates that model the decisions we need to make. For simplicity, let us assume that we only predict two types of decisions: whether an event e happens before the document creation time (DCT), and whether, for a pair of events e1 and e2, e1 happens before e2. Here the first type of decision can be modeled throu</context>
</contexts>
<marker>Koller, 1999</marker>
<rawString>Daphne Koller, 1999. Probabilistic Relational Models, pages 3–13. Springer, Berlin/Heidelberg, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inderjeet Mani</author>
<author>Marc Verhagen</author>
<author>Ben Wellner</author>
<author>Chong Min Lee</author>
<author>James Pustejovsky</author>
</authors>
<title>Machine learning of temporal relations.</title>
<date>2006</date>
<booktitle>In ACL-44: Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics,</booktitle>
<pages>753--760</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="1629" citStr="Mani et al., 2006" startWordPosition="245" endWordPosition="248">ions —and to the best results for the task when compared to those of other machine learning based systems. 1 Introduction Temporal relation identification (or temporal ordering) involves the prediction of temporal order between events and/or time expressions mentioned in text, as well as the relation between events in a document and the time at which the document was created. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), a set of documents annotated with temporal information, it became possible to apply machine learning to temporal ordering (Boguraev and Ando, 2005; Mani et al., 2006). These tasks have been regarded as essential for complete document understanding and are useful for a wide range of NLP applications such as question answering and machine translation. Most of these approaches follow a simple schema: they learn classifiers that predict the temporal order of a given event pair based on a set of the pair’s of features. This approach is local in the sense that only a single temporal relation is considered at a time. Learning to predict temporal relations in this isolated manner has at least two advantages over any approach that considers several temporal relatio</context>
<context position="7751" citStr="Mani et al., 2006" startWordPosition="1265" endWordPosition="1268">mple, consider the following (slightly simplified) sentence of Section 1 in this paper. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), machine learning approaches to temporal ordering became possible. Here we have to predict that the “Machine learning becoming possible” event happened AFTER the “introduction of the TimeBank corpus” event, and that it has a temporal OVERLAP with the year 2003. Moreover, we need to determine that both events happened BEFORE the time this paper was created. Most previous work on temporal relation identification (Boguraev and Ando, 2005; Mani et al., 2006; Chambers and Jurafsky, 2008) is based on the TimeBank corpus. The temporal relations in the Timebank corpus are divided into 11 classes; 10 of them are defined by the following 5 relations and their inverse: BEFORE, IBEFORE (immediately before), BEGINS, ENDS, INCLUDES; the remaining one is SIMULTANEOUS. In order to drive forward research on temporal relation identification, the SemEval 2007 shared task (Verhagen et al., 2007) (TempEval) included the following three tasks. TASK A Temporal relations between events and time expressions that occur within the same sentence. TASK B Temporal relati</context>
</contexts>
<marker>Mani, Verhagen, Wellner, Lee, Pustejovsky, 2006</marker>
<rawString>Inderjeet Mani, Marc Verhagen, Ben Wellner, Chong Min Lee, and James Pustejovsky. 2006. Machine learning of temporal relations. In ACL-44: Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics, pages 753–760, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hoifung Poon</author>
<author>Pedro Domingos</author>
</authors>
<title>Joint unsupervised coreference resolution with Markov Logic.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing,</booktitle>
<pages>650--659</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Honolulu, Hawaii,</location>
<marker>Poon, Domingos, 2008</marker>
<rawString>Hoifung Poon and Pedro Domingos. 2008. Joint unsupervised coreference resolution with Markov Logic. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 650–659, Honolulu, Hawaii, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Georgiana Puscasu</author>
</authors>
<title>Wvali: Temporal relation identification by syntactico-semantic analysis.</title>
<date>2007</date>
<booktitle>In Proceedings of the 4th International Workshop on SemEval-2007.,</booktitle>
<pages>484--487</pages>
<contexts>
<context position="25467" citStr="Puscasu, 2007" startWordPosition="4328" endWordPosition="4329">arize, we have shown that by tightly connecting tasks A, B and C, we can improve temporal relation identification significantly. But are we just improving a weak baseline, or can joint modelling help to reach or improve the state-of-theart results? We will try to answer this question in the next section. 6.2 Comparison to the State-of-the-art In order to put our results into context, Table 7 shows them along those of other TempEval participants. In the first row, TempEval Best gives the best scores of TempEval for each task. Note that all but the strict scores of Task C are achieved by WVALI (Puscasu, 2007), a hybrid system that combines machine learning and hand-coded rules. In the second row we see the TempEval average scores of all six participants in TempEval. The third row shows the results of CU-TMP (Bethard and Martin, 2007), an SVM-based system that achieved the second highest scores in TempEval for all three tasks. CU-TMP is of interest because it is the best pure Machine-Learning-based approach so far. The scores of our local and global model come in the fourth and fifth row, respectively. The last row in the table shows task-adjusted scores. Here we essentially designed and applied th</context>
</contexts>
<marker>Puscasu, 2007</marker>
<rawString>Georgiana Puscasu. 2007. Wvali: Temporal relation identification by syntactico-semantic analysis. In Proceedings of the 4th International Workshop on SemEval-2007., pages 484–487.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Pustejovsky</author>
<author>Jose Castano</author>
<author>Robert Ingria</author>
<author>Reser Sauri</author>
<author>Robert Gaizauskas</author>
<author>Andrea Setzer</author>
<author>Graham Katz</author>
</authors>
<title>The timebank corpus.</title>
<date>2003</date>
<booktitle>In Proceedings of Corpus Linguistics</booktitle>
<pages>647--656</pages>
<contexts>
<context position="1461" citStr="Pustejovsky et al., 2003" startWordPosition="216" endWordPosition="219">all three relation types simultaneously. By evaluating our model on the TempEval data we show that this approach leads to about 2% higher accuracy for all three types of relations —and to the best results for the task when compared to those of other machine learning based systems. 1 Introduction Temporal relation identification (or temporal ordering) involves the prediction of temporal order between events and/or time expressions mentioned in text, as well as the relation between events in a document and the time at which the document was created. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), a set of documents annotated with temporal information, it became possible to apply machine learning to temporal ordering (Boguraev and Ando, 2005; Mani et al., 2006). These tasks have been regarded as essential for complete document understanding and are useful for a wide range of NLP applications such as question answering and machine translation. Most of these approaches follow a simple schema: they learn classifiers that predict the temporal order of a given event pair based on a set of the pair’s of features. This approach is local in the sense that only a single temporal relation is co</context>
<context position="7293" citStr="Pustejovsky et al., 2003" startWordPosition="1192" endWordPosition="1195">kov Logic; Section 4 explains our proposed Markov Logic Network; Section 5 presents the setup of our experiments; Section 6 shows and discusses the results of our experiments; and in Section 7 we conclude and present ideas for future research. 2 Temporal Relation Identification Temporal relation identification aims to predict the temporal order of events and/or time expressions in documents, as well as their relations to the document creation time (DCT). For example, consider the following (slightly simplified) sentence of Section 1 in this paper. With the introduction of the TimeBank corpus (Pustejovsky et al., 2003), machine learning approaches to temporal ordering became possible. Here we have to predict that the “Machine learning becoming possible” event happened AFTER the “introduction of the TimeBank corpus” event, and that it has a temporal OVERLAP with the year 2003. Moreover, we need to determine that both events happened BEFORE the time this paper was created. Most previous work on temporal relation identification (Boguraev and Ando, 2005; Mani et al., 2006; Chambers and Jurafsky, 2008) is based on the TimeBank corpus. The temporal relations in the Timebank corpus are divided into 11 classes; 10 </context>
</contexts>
<marker>Pustejovsky, Castano, Ingria, Sauri, Gaizauskas, Setzer, Katz, 2003</marker>
<rawString>James Pustejovsky, Jose Castano, Robert Ingria, Reser Sauri, Robert Gaizauskas, Andrea Setzer, and Graham Katz. 2003. The timebank corpus. In Proceedings of Corpus Linguistics 2003, pages 647–656.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Richardson</author>
<author>Pedro Domingos</author>
</authors>
<title>Markov logic networks.</title>
<date>2006</date>
<booktitle>In Machine Learning.</booktitle>
<contexts>
<context position="3882" citStr="Richardson and Domingos, 2006" startWordPosition="617" endWordPosition="620">we seek to improve the accuracy of temporal relation identification by predicting relations in a more global manner. However, while they focused only on the temporal relations between events mentioned in a document, we also jointly predict the temporal order between events and time expressions, and between events and the document creation time. Our work also differs in another important aspect from the approach of Chambers and Jurafsky. Instead of combining the output of a set of local classifiers using ILP, we approach the problem of joint temporal relation identification using Markov Logic (Richardson and Domingos, 2006). In this 405 Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP, pages 405–413, Suntec, Singapore, 2-7 August 2009. c�2009 ACL and AFNLP framework global correlations can be readily captured through the addition of weighted first order logic formulae. Using Markov Logic instead of an ILP-based approach has at least two advantages. First, it allows us to easily capture non-deterministic (soft) rules that tend to hold between temporal relations but do not have to. 1 For example, if event A happens before B, and B overlaps with C, then there is a good chance that A</context>
<context position="10357" citStr="Richardson and Domingos, 2006" startWordPosition="1687" endWordPosition="1691">inter-annotator agreement score of 72% on Tasks A and B, and 68% on Task C. 3 Markov Logic It has long been clear that local classification alone cannot adequately solve all prediction problems we encounter in practice.5 This observation motivated a field within machine learning, often referred to as Statistical Relational Learning (SRL), which focuses on the incorporation of global correlations that hold between statistical variables (Getoor and Taskar, 2007). One particular SRL framework that has recently gained momentum as a platform for global learning and inference in AI is Markov Logic (Richardson and Domingos, 2006), a combination of firstorder logic and Markov Networks. It can be understood as a formalism that extends first-order logic to allow formulae that can be violated with some penalty. From an alternative point of view, it is an expressive template language that uses first order logic formulae to instantiate Markov Networks of repetitive structure. From a wide range of SRL languages we chose Markov Logic because it supports discriminative 5It can, however, solve a large number of problems surprisingly well. Figure 1: Example of Transition Rule 1 training (as opposed to generative SRL languages su</context>
</contexts>
<marker>Richardson, Domingos, 2006</marker>
<rawString>Matthew Richardson and Pedro Domingos. 2006. Markov logic networks. In Machine Learning.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sebastian Riedel</author>
</authors>
<title>Improving the accuracy and efficiency of map inference for markov logic.</title>
<date>2008</date>
<booktitle>In Proceedings of UAI</booktitle>
<contexts>
<context position="20736" citStr="Riedel, 2008" startWordPosition="3486" endWordPosition="3487">→ B relDCT(e1, R1) ∧ relE2E(e1, e2, R2) ⇒ relDCT(e2, R3) A → C relE2T(e1, t1, R1) ∧ relT2T(t1, t2, R2) ∧ relE2T(e2, t2, R3) ⇒ relE2E(e1, e2, R4) C → A relE2T(e2, t2, R1) ∧ relT2T(t1, t2, R2) ∧ relE2E(e1, e2, R3) ⇒ relE2T(e1, t1, R4) Table 3: Numbers of Labeled Relations for All Tasks TRAIN DEV TEST TOTAL Task A 1359 131 169 1659 Task B 2330 227 331 2888 Task C 1597 147 258 2002 For feature generation we use the following tools. 11 POS tagging is performed with TnT ver2.2;12 for our dependency-based features we use MaltParser 1.0.0.13 For inference in our models we use Cutting Plane Inference (Riedel, 2008) with ILP as a base solver. This type of inference is exact and often very fast because it avoids instantiation of the complete Markov Network. For learning we apply one-best MIRA (Crammer and Singer, 2003) with Cutting Plane Inference to find the current model guess. Both training and inference algorithms are provided by Markov thebeast, a Markov Logic interpreter tailored for NLP applications. Note that there are several ways to manually optimize the set of formulae to use. One way is to pick a task and then choose formulae that increase the accuracy for this task on DEV. However, our primar</context>
</contexts>
<marker>Riedel, 2008</marker>
<rawString>Sebastian Riedel. 2008. Improving the accuracy and efficiency of map inference for markov logic. In Proceedings of UAI 2008.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ben Taskar</author>
<author>Abbeel Pieter</author>
<author>Daphne Koller</author>
</authors>
<title>Discriminative probabilistic models for relational data.</title>
<date>2002</date>
<booktitle>In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02),</booktitle>
<pages>485--492</pages>
<publisher>Morgan Kaufmann.</publisher>
<location>San Francisco, CA.</location>
<contexts>
<context position="11168" citStr="Taskar et al., 2002" startWordPosition="1819" endWordPosition="1822">lternative point of view, it is an expressive template language that uses first order logic formulae to instantiate Markov Networks of repetitive structure. From a wide range of SRL languages we chose Markov Logic because it supports discriminative 5It can, however, solve a large number of problems surprisingly well. Figure 1: Example of Transition Rule 1 training (as opposed to generative SRL languages such as PRM (Koller, 1999)). Moreover, several Markov Logic software libraries exist and are freely available (as opposed to other discriminative frameworks such as Relational Markov Networks (Taskar et al., 2002)). In the following we will explain Markov Logic by example. One usually starts out with a set of predicates that model the decisions we need to make. For simplicity, let us assume that we only predict two types of decisions: whether an event e happens before the document creation time (DCT), and whether, for a pair of events e1 and e2, e1 happens before e2. Here the first type of decision can be modeled through a unary predicate beforeDCT(e), while the latter type can be represented by a binary predicate before(e1, e2). Both predicates will be referred to as hidden because we do not know thei</context>
</contexts>
<marker>Taskar, Pieter, Koller, 2002</marker>
<rawString>Ben Taskar, Abbeel Pieter, and Daphne Koller. 2002. Discriminative probabilistic models for relational data. In Proceedings of the 18th Annual Conference on Uncertainty in Artificial Intelligence (UAI-02), pages 485–492, San Francisco, CA. Morgan Kaufmann.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marc Verhagen</author>
<author>Robert Gaizaukas</author>
<author>Frank Schilder</author>
<author>Mark Hepple</author>
<author>Graham Katz</author>
<author>James Pustejovsky</author>
</authors>
<title>Semeval-2007 task 15: Tempeval temporal relation identification.</title>
<date>2007</date>
<booktitle>In Proceedings of the 4th International Workshop on SemEval-2007.,</booktitle>
<pages>75--80</pages>
<contexts>
<context position="5291" citStr="Verhagen et al., 2007" startWordPosition="859" endWordPosition="862">: we only need to define features (in terms of formulae) and provide input data in the correct format. 2 In particular, we do not need to manually construct ILPs for each document we encounter. Moreover, we can exploit and compare advanced methods of global inference and learning, as long as they are implemented in our Markov Logic interpreter of choice. Hence, in our future work we can focus entirely on temporal relations, as opposed to inference or learning techniques for machine learning. We evaluate our approach using the data of the “TempEval” challenge held at the SemEval 2007 Workshop (Verhagen et al., 2007). This challenge involved three tasks corresponding to three types of temporal relations: between events and time expressions in a sentence (Task A), between events of a document and the document creation time (Task B), and between events in two consecutive sentences (Task C). Our findings show that by incorporating global constraints that hold between temporal relations predicted in Tasks A, B and C, the accuracy for all three tasks can be improved significantly. In comparison to other participants of the “TempEval” challenge our approach is very competitive: for two out of the three tasks we</context>
<context position="8182" citStr="Verhagen et al., 2007" startWordPosition="1333" endWordPosition="1336">over, we need to determine that both events happened BEFORE the time this paper was created. Most previous work on temporal relation identification (Boguraev and Ando, 2005; Mani et al., 2006; Chambers and Jurafsky, 2008) is based on the TimeBank corpus. The temporal relations in the Timebank corpus are divided into 11 classes; 10 of them are defined by the following 5 relations and their inverse: BEFORE, IBEFORE (immediately before), BEGINS, ENDS, INCLUDES; the remaining one is SIMULTANEOUS. In order to drive forward research on temporal relation identification, the SemEval 2007 shared task (Verhagen et al., 2007) (TempEval) included the following three tasks. TASK A Temporal relations between events and time expressions that occur within the same sentence. TASK B Temporal relations between the Document Creation Time (DCT) and events. TASK C Temporal relations between the main events of adjacent sentences.4 4The main event of a sentence is expressed by its syntactically dominant verb. 406 To simplify matters, in the TempEval data, the classes of temporal relations were reduced from the original 11 to 6: BEFORE, OVERLAP, AFTER, BEFORE-OR-OVERLAP, OVERLAP-OR-AFTER, and VAGUE. In this work we are focusing</context>
</contexts>
<marker>Verhagen, Gaizaukas, Schilder, Hepple, Katz, Pustejovsky, 2007</marker>
<rawString>Marc Verhagen, Robert Gaizaukas, Frank Schilder, Mark Hepple, Graham Katz, and James Pustejovsky. 2007. Semeval-2007 task 15: Tempeval temporal relation identification. In Proceedings of the 4th International Workshop on SemEval-2007., pages 75–80.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>