<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.684761">
The Mathematics of Statistical Machine
Translation: Parameter Estimation
</title>
<author confidence="0.852738">
Peter F. Brown* Stephen A. Della Pietra*
</author>
<affiliation confidence="0.666819">
IBM T.J. Watson Research Center IBM T.J. Watson Research Center
</affiliation>
<author confidence="0.762161">
Vincent J. Della Pietra* Robert L. Mercer*
</author>
<affiliation confidence="0.383409">
IBM T.J. Watson Research Center IBM T.J. Watson Research Center
</affiliation>
<bodyText confidence="0.999613916666667">
We describe a series of five statistical models of the translation process and give algorithms for
estimating the parameters of these models given a set of pairs of sentences that are translations
of one another. We define a concept of word-by-word alignment between such pairs of sentences.
For any given pair of such sentences each of our models assigns a probability to each of the
possible word-by-word alignments. We give an algorithm for seeking the most probable of these
alignments. Although the algorithm is suboptimal, the alignment thus obtained accounts well for
the word-by-word relationships in the pair of sentences. We have a great deal of data in French
and English from the proceedings of the Canadian Parliament. Accordingly, we have restricted
our work to these two languages; but we feel that because our algorithms have minimal linguistic
content they would work well on other pairs of languages. We also feel, again because of the
minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word
alignments are inherent in any sufficiently large bilingual corpus.
</bodyText>
<sectionHeader confidence="0.992135" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.999606105263158">
The growing availability of bilingual, machine-readable texts has stimulated interest
in methods for extracting linguistically valuable information from such texts. For ex-
ample, a number of recent papers deal with the problem of automatically obtaining
pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown,
Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert,
and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is
possible to obtain such aligned pairs of sentences without inspecting the words that
the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of
words that the sentences contain, while Gale and Church base a similar algorithm on
the number of characters that the sentences contain. The lesson to be learned from
these two efforts is that simple, statistical methods can be surprisingly successful in
achieving linguistically interesting goals. Here, we address a natural extension of that
work: matching up the words within pairs of aligned sentences.
In recent papers, Brown et al. (1988, 1990) propose a statistical approach to ma-
chine translation from French to English. In the latter of these papers, they sketch an
algorithm for estimating the probability that an English word will be translated into
any particular French word and show that such probabilities, once estimated, can be
used together with a statistical model of the translation process to align the words
in an English sentence with the words in its French translation (see their Figure 3).
</bodyText>
<footnote confidence="0.583763">
* IBM T.J. Watson Research Center, Yorktown Heights, NY 10598
</footnote>
<note confidence="0.8298485">
C) 1993 Association for Computational Linguistics
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.999876136363636">
Pairs of sentences with words aligned in this way offer a valuable resource for work
in bilingual lexicography and machine translation.
Section 2 is a synopsis of our statistical approach to machine translation. Following
this synopsis, we develop some terminology and notation for describing the word-by-
word alignment of pairs of sentences. In Section 4 we describe our series of models
of the translation process and give an informal discussion of the algorithms by which
we estimate their parameters from data. We have written Section 4 with two aims
in mind: first, to provide the interested reader with sufficient detail to reproduce our
results, and second, to hold the mathematics at the level of college calculus. A few
more difficult parts of the discussion have been postponed to the Appendix.
In Section 5, we present results obtained by estimating the parameters for these
models from a large collection of aligned pairs of sentences from the Canadian Hansard
data (Brown, Lai, and Mercer 1991). For a number of English words, we show trans-
lation probabilities that give convincing evidence of the power of statistical methods
to extract linguistically interesting correlations from large corpora. We also show au-
tomatically derived word-by-word alignments for several sentences.
In Section 6, we discuss some shortcomings of our models and propose modifica-
tions to address some of them. In the final section, we discuss the significance of our
work and the possibility of extending it to other pairs of languages.
Finally, we include two appendices: one to summarize notation and one to collect
the formulae for the various models that we describe and to fill an occasional gap in
our development.
</bodyText>
<sectionHeader confidence="0.888707" genericHeader="keywords">
2. Statistical Translation
</sectionHeader>
<bodyText confidence="0.999036090909091">
In 1949, Warren Weaver suggested applying the statistical and cryptanalytic techniques
then emerging from the nascent field of communication theory to the problem of us-
ing computers to translate text from one natural language to another (published in
Weaver 1955). Efforts in this direction were soon abandoned for various philosophical
and theoretical reasons, but at a time when the most advanced computers were of a
piece with today&apos;s digital watch, any such approach was surely doomed to computa-
tional starvation. Today, the fruitful application of statistical methods to the study of
machine translation is within the computational grasp of anyone with a well-equipped
workstation.
A string of English words, e, can be translated into a string of French words in
many different ways. Often, knowing the broader context in which e occurs may serve
to winnow the field of acceptable French translations, but even so, many acceptable
translations will remain; the choice among them is largely a matter of taste. In statistical
translation, we take the view that every French string, f, is a possible translation of e.
We assign to every pair of strings (e, f) a number Pr (f le), which we interpret as the
probability that a translator, when presented with e, will produce f as his translation.
We further take the view that when a native speaker of French produces a string
of French words, he has actually conceived of a string of English words, which he
translated mentally. Given a French string f, the job of our translation system is to find
the string e that the native speaker had in mind when he produced f. We minimize
our chance of error by choosing that English string e for which Pr (e If ) is greatest.
Using Bayes&apos; theorem, we can write
</bodyText>
<equation confidence="0.989884">
Pr(e)Pr(fle)
Pr(elf) = pr(f) . (1)
</equation>
<bodyText confidence="0.97106">
Since the denominator here is independent of e, finding Ãª is the same as finding e
</bodyText>
<page confidence="0.994789">
264
</page>
<note confidence="0.980006">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.9868585">
so as to make the product Pr(e) Pr(fl e) as large as possible. We arrive, then, at the
Fundamental Equation of Machine Translation:
</bodyText>
<equation confidence="0.9780175">
6 = argmax Pr(e) POI e). (2)
e
</equation>
<bodyText confidence="0.999971456521739">
As a representation of the process by which a human being translates a passage from
French to English, this equation is fanciful at best. One can hardly imagine someone
rifling mentally through the list of all English passages computing the product of the
a priori probability of the passage, Pr(e), and the conditional probability of the French
passage given the English passage, POI e). Instead, there is an overwhelming intuitive
appeal to the idea that a translator proceeds by first understanding the French, and
then expressing in English the meaning that he has thus grasped. Many people have
been guided by this intuitive picture when building machine translation systems.
From a purely formal point of view, on the other hand, Equation (2) is completely
adequate. The conditional distribution POI e) is just an enormous table that associates
a real number between zero and one with every possible pairing of a French passage
and an English passage. With the proper choice for this distribution, translations of
arbitrarily high quality can be achieved. Of course, to construct Pr(f le) by examining
individual pairs of French and English passages one by one is out of the question.
Even if we restrict our attention to passages no longer than a typical novel, there are
just too many such pairs. But this is only a problem in practice, not in principle. The
essential question for statistical translation, then, is not a philosophical one, but an
empirical one: Can one construct approximations to the distributions Pr(e) and Pr(f le)
that are good enough to achieve an acceptable quality of translation?
Equation (2) summarizes the three computational challenges presented by the
practice of statistical translation: estimating the language model probability, Pr(e); esti-
mating the translation model probability, Pr(f le); and devising an effective and efficient
suboptimal search for the English string that maximizes their product. We call these
the language modeling problem, the translation modeling problem, and the search
problem.
The language modeling problem for machine translation is essentially the same
as that for speech recognition and has been dealt with elsewhere in that context (see,
for example, the recent paper by Maltese and Mancini [1992] and references therein).
We hope to deal with the search problem in a later paper. In this paper, we focus
on the translation modeling problem. Before we turn to this problem, however, we
should address an issue that may be a concern to some readers: Why do we estimate
Pr(e) and POI e) rather than estimate Pr(e If) directly? We are really interested in this
latter probability. Wouldn&apos;t we reduce our problems from three to two by this direct
approach? If we can estimate POI e) adequately, why can&apos;t we just turn the whole
process around to estimate Pr (el f)?
To understand this, imagine that we divide French and English strings into those
that are well-formed and those that are ill-formed. This is not a precise notion. We
have in mind that strings like Il va a la bibliotheque, or I live in a house, or even Colorless
green ideas sleep furiously are well-formed, but that strings like a la va Il bibliotheque or a
I in live house are not. When we translate a French string into English, we can think of
ourselves as springing from a well-formed French string into the sea of well-formed
English strings with the hope of landing on a good one. It is important, therefore,
that our model for Pr(elf) concentrate its probability as much as possible on well-
formed English strings. But it is not important that our model for POI e) concentrate
its probability on well-formed French strings. If we were to reduce the probability
of all well-formed French strings by the same factor, spreading the probability thus
</bodyText>
<page confidence="0.995081">
265
</page>
<note confidence="0.844463">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.9986648">
liberated over ill-formed French strings, there would be no effect on our translations:
the argument that maximizes some function f(x) also maximizes cf(x) for any posi-
tive constant c. As we shall see below, our translation models are prodigal, spraying
probability all over the place, most of it on ill-formed French strings. In fact, as we
discuss in Section 4.5, two of our models waste much of their probability on things
that are not strings at all, having, for example, several different second words but no
first word. If we were to turn one of these models around to model Pr(elf) directly,
the result would be a model with so little probability concentrated on well-formed
English strings as to confound any scheme to discover one.
The two factors in Equation (2) cooperate. The translation model probability is
large for English strings, whether well- or ill-formed, that have the necessary words in
them in roughly the right places to explain the French. The language model probability
is large for well-formed English strings regardless of their connection to the French.
Together, they produce a large probability for well-formed English strings that account
well for the French. We cannot achieve this simply by reversing our translation models.
</bodyText>
<sectionHeader confidence="0.963718" genericHeader="introduction">
3. Alignments
</sectionHeader>
<bodyText confidence="0.999945878787879">
We say that a pair of strings that are translations of one another form a translation,
and we show this by enclosing the strings in parentheses and separating them by a
vertical bar. Thus, we write the translation (Qu&apos;aurions-nous Pu faire? I What could we
have done?) to show that What could we have done? is a translation of Qu&apos;aurions-nous pu
faire? When the strings end in sentences, we usually omit the final stop unless it is a
question mark or an exclamation point.
Brown et al. (1990) introduce the idea of an alignment between a pair of strings as
an object indicating for each word in the French string that word in the English string
from which it arose. Alignments are shown graphically, as in Figure 1, by drawing
lines, which we call connections, from some of the English words to some of the French
words. The alignment in Figure 1 has seven connections: (the, Le), (program, programme),
and so on. Following the notation of Brown et al., we write this alignment as (Le
programme a ete mis en application I And the(1) program(2) has(3) been(4) implemented(5,6,7)).
The list of numbers following an English word shows the positions in the French string
of the words to which it is connected. Because And is not connected to any French
words here, there is no list of numbers after it. We consider every alignment to be
correct with some probability, and so we find (Le programme a ete mis en application I
And(1,2,3,4,5,6,7) the program has been implemented) perfectly acceptable. Of course, we
expect it to be much less probable than the alignment shown in Figure 1.
In Figure 1 each French word is connected to exactly one English word, but more
general alignments are possible and may be appropriate for some translations. For
example, we may have a French word connected to several English words as in Fig-
ure 2, which we write as (Le reste appartenait aux autoch tones I The(1) balance(2) was(3)
the(3) territory(3) of(4) the(4) aboriginal(5) people(5)). More generally still, we may have
several French words connected to several English words as in Figure 3, which we
write as (Les pauvres sont demunis I The(1) poor(2) don&apos;t(3,4) have(3,4) any(3,4) money(3,4)).
Here, the four English words don&apos;t have any money work together to generate the two
French words sont demunis.
In a figurative sense, an English passage is a web of concepts woven together
according to the rules of English grammar. When we look at a passage, we cannot see
the concepts directly but only the words that they leave behind. To show that these
words are related to a concept but are not quite the whole story, we say that they form
a cept. Some of the words in a passage may participate in more than one cept, while
</bodyText>
<page confidence="0.99516">
266
</page>
<note confidence="0.955019">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<figure confidence="0.747447352941176">
Andi the2 program3 has4 been5 implemented6
Lei programme2 a3 ete4 mis5 en6 application7
Figure 1
An alignment with independent English words.
Thei Lei
balance2 reste2
was3 appartenait3
the4 aux4
territory5 autochtones5
of6
the7
aboriginal8
people9
Figure 2
An alignment with independent French words.
Thei poor2 don&apos;t3 have,&apos; any5 money6
Lesi pauvres2 sont3 demunis4
</figure>
<figureCaption confidence="0.732011">
Figure 3
</figureCaption>
<note confidence="0.29248">
A general alignment.
</note>
<page confidence="0.97568">
267
</page>
<note confidence="0.833313">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.98603775">
others may participate in none, serving only as a sort of syntactic glue to bind the
whole together. When a passage is translated into French, each of its cepts contributes
some French words to the translation. We formalize this use of the term cept and relate
it to the idea of an alignment as follows.
We call the set of English words connected to a French word in a particular align-
ment the cept that generates the French word. Thus, an alignment resolves an English
string into a set of possibly overlapping cepts that we call the ceptual scheme of the
English string with respect to the alignment. The alignment in Figure 3 contains the
three cepts The, poor, and don&apos;t have any money. When one or more of the French words
is connected to no English words, we say that the ceptual scheme includes the empty
cept and that each of these words has been generated by this empty cept.
Formally, a cept is a subset of the positions in the English string together with the
words occupying those positions. When we write the words that make up a cept, we
sometimes affix a subscript to each one showing its position. The alignment in Figure 2
includes the cepts thei and 016 the7, but not the cepts of6 thei or the7. In (J&apos;applaudis a la
decision I 1(1) applaud(2) the(4) decision(5)), a is generated by the empty cept. Although
the empty cept has no position, we place it by convention in position zero, and write
it as eo. Thus, we may also write the previous alignment as (J&apos;applaudis a la decision
e0(3) 1(1) applaud(2) the(4) decision(5)).
We denote the set of alignments of (fl e) by .,4(e, f). If e has length 1 and f has
length in, there are /m different connections that can be drawn between them because
each of the m French words can be connected to any of the 1 English words. Since an
alignment is determined by the connections that it contains, and since a subset of the
possible connections can be chosen in 2&amp;quot; ways, there are 2&amp;quot; alignments in A(e, f).
</bodyText>
<sectionHeader confidence="0.969832" genericHeader="method">
4. Translation Models
</sectionHeader>
<bodyText confidence="0.999936041666666">
In this section, we develop a series of five translation models together with the al-
gorithms necessary to estimate their parameters. Each model gives a prescription for
computing the conditional probability Pr(f le), which we call the likelihood of the trans-
lation (f, e). This likelihood is a function of a large number of free parameters that we
must estimate in a process that we call training. The likelihood of a set of transla-
tions is the product of the likelihoods of its members. In broad outline, our plan is to
guess values for these parameters and then to apply the EM algorithm (Baum 1972;
Dempster, Laird, and Rubin 1977) iteratively so as to approach a local maximum of
the likelihood of a particular set of translations that we call the training data. When
the likelihood of the training data has more than one local maximum, the one that we
approach will depend on our initial guess.
In Models 1 and 2, we first choose a length for the French string, assuming all
reasonable lengths to be equally likely. Then, for each position in the French string, we
decide how to connect it to the English string and what French word to place there.
In Model 1 we assume all connections for each French position to be equally likely.
Therefore, the order of the words in e and f does not affect Pr(fl e). In Model 2 we
make the more realistic assumption that the probability of a connection depends on
the positions it connects and on the lengths of the two strings. Therefore, for Model 2,
Pr (f I e) does depend on the order of the words in e and f. Although it is possible
to obtain interesting correlations between some pairs of frequent words in the two
languages using Models 1 and 2, as we will see later (in Figure 5), these models often
lead to unsatisfactory alignments.
In Models 3, 4, and 5, we develop the French string by choosing, for each word in
the English string, first the number of words in the French string that will be connected
</bodyText>
<page confidence="0.995457">
268
</page>
<note confidence="0.979725">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.999954775510204">
to it, then the identity of these French words, and finally the actual positions in the
French string that these words will occupy. It is this last step that determines the
connections between the English string and the French string and it is here that these
three models differ. In Model 3, as in Model 2, the probability of a connection depends
on the positions that it connects and on the lengths of the English and French strings.
In Model 4 the probability of a connection depends in addition on the identities of the
French and English words connected and on the positions of any other French words
that are connected to the same English word. Models 3 and 4 are deficient, a technical
concept defined and discussed in Section 4.5. Briefly, this means that they waste some
of their probability on objects that are not French strings at all. Model 5 is very much
like Model 4, except that it is not deficient.
Models 1-4 serve as stepping stones to the training of Model 5. Models 1 and 2
have an especially simple mathematical form so that iterations of the EM algorithm
can be computed exactly. That is, we can explicitly perform sums over all possible
alignments for these two models. In addition, Model 1 has a unique local maximum so
that parameters derived for it in a series of EM iterations do not depend on the starting
point for the iterations. As explained below, we use Model 1 to provide initial estimates
for the parameters of Model 2. In Model 2 and subsequent models, the likelihood
function does not have a unique local maximum, but by initializing each model from
the parameters of the model before it, we arrive at estimates of the parameters of the
final model that do not depend on our initial estimates of the parameters for Model 1.
In Models 3 and 4, we must be content with approximate EM iterations because it is
not feasible to carry out sums over all possible alignments for these models. But, while
approaching more closely the complexity of Model 5, they retain enough simplicity
to allow an efficient investigation of the neighborhood of probable alignments and
therefore allow us to include what we hope are all of the important alignments in
each EM iteration.
In the remainder of this section, we give an informal but reasonably precise de-
scription of each of the five models and an intuitive account of the EM algorithm as
applied to them. We assume the reader to be comfortable with Lagrange multipliers,
partial differentiation, and constrained optimization as they are presented in a typical
college calculus text, and to have a nodding acquaintance with random variables. On
the first time through, the reader may wish to jump from here directly to Section 5,
returning to this Section when and if he should desire to understand more deeply
how the results reported later are achieved.
The basic mathematical object with which we deal here is the joint probability
distribution Pr(F = f, A = a, E = e), where the random variables F and E are a French
string and an English string making up a translation, and the random variable A is
an alignment between them. We also consider various marginal and conditional prob-
ability distributions that can be constructed from Pr(F = f, A = a, E = e), especially
the distribution Pr(F = fl E = e). We generally follow the common convention of using
uppercase letters to denote random variables and the corresponding lowercase letters
to denote specific values that the random variables may take. We have already used 1
and in to represent the lengths of the strings e and f, and so we use L and M to denote
the corresponding random variables. When there is no possibility for confusion, or,
more properly, when the probability of confusion is not thereby materially increased,
we write Pr (f, a, e) for Pr(F f, A = a, E = e), and use similar shorthands throughout.
We can write the likelihood of (f le) in terms of the conditional probability Pr(f, ale)
as
</bodyText>
<equation confidence="0.75615">
Pr(fle) = Pr(f, ale). (3)
a
</equation>
<page confidence="0.989456">
269
</page>
<note confidence="0.363051">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.998818">
The sum here, like all subsequent sums over a, is over the elements of A(e, f). We
restrict ourselves in this section to alignments like the one shown in Figure 1 where
each French word has exactly one connection. In this kind of alignment, each cept is
either a single English word or it is empty. Therefore, we can assign cepts to positions
in the English string, reserving position zero .for the empty cept. If the English string,
e = e1e2... e1, has 1 words, and the French string, f = firn 1112 â¢ fm, has m
words, then the alignment, a, can be represented by a series, ay&apos; a1a2 ...am, of m
values, each between 0 and 1 such that if the word in position j of the French string
is connected to the word in position i of the English string, then al = i, and if it is not
connected to any English word, then a] = 0.
Without loss of generality, we can write
</bodyText>
<equation confidence="0.979847">
Tit
Pr(f, ale) = Pr(mle) m,e)PrUjIali,f1-1, m, e) . (4)
)=1
</equation>
<bodyText confidence="0.996150571428571">
This is only one of many ways in which Pr(f, ale) can be written as the product of a
series of conditional probabilities. It is important to realize that Equation (4) is not an
approximation. Regardless of the form of Pr(f, ale), it can always be analyzed into a
product of terms in this way. We are simply asserting in this equation that when we
generate a French string together with an alignment from an English string, we can
first choose the length of the French string given our knowledge of the English string.
Then we can choose where to connect the first position in the French string given
our knowledge of the English string and the length of the French string. Then we can
choose the identity of the first word in the French string given our knowledge of the
English string, the length of the French string, and the position in the English string
to which the first position in the French string is connected, and so on. As we step
through the French string, at each point we make our next choice given our complete
knowledge of the English string and of all our previous choices as to the details of the
French string and its alignment.
</bodyText>
<subsectionHeader confidence="0.995747">
4.1 Model 1
</subsectionHeader>
<bodyText confidence="0.889084066666667">
The conditional probabilities on the right-hand side of Equation (4) cannot all be
taken as independent parameters because there are too many of them. In Model 1, we
assume that Pr(mle) is independent of e and m; that Pr(ajlail-1,fil-17 rrt,e),
depends
only on 1,.the length of the English string, and therefore must be (1 + 1)-1; and that
Pr(fin, e) depends only on f and eaj. The parameters, then, are â¬ Pr(m le),
I
and t(le) E Pr(fi e) , which we call the translation probability of fl given
ea,. We think of E as some small, fixed number. The distribution of M, the length of the
French string, is unnormalized but this is a minor technical issue of no significance
to our computations. If we wish, we can think of M as having some finite range. As
long as this range encompasses everything that actually occurs in training data, no
problems arise.
We turn now to the problem of estimating the translation probabilities for Model 1.
The joint likelihood of a French string and an alignment given an English string is
</bodyText>
<equation confidence="0.872042909090909">
in
Pr(f, ale) = (1 + nin II 4.6 I ) (5)
The alignment is determined by specifying the values of al for j from 1 to m, each of
270
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
which can take any value from 0 to 1. Therefore,
1 1 m
f
Pr(fle) =- E... E t ( lea)). (6)
(1 Â± 1)m
171=0 am=0 .7=1
</equation>
<bodyText confidence="0.998512">
We wish to adjust the translation probabilities so as to maximize Pr(fle) subject to
the constraints that for each e,
</bodyText>
<equation confidence="0.996511">
E t(f le) 1. (7)
</equation>
<bodyText confidence="0.9773055">
Following standard practice for constrained maximization, we introduce Lagrange
multipliers Aâ and seek an unconstrained extremum of the auxiliary function
</bodyText>
<equation confidence="0.998735666666667">
1 1 m
h(t, A) _-_- E... EV, I ea, ) - ( t(f I e) - 1). (8)
(1+ 1)m
</equation>
<bodyText confidence="0.99982475">
An extremum occurs when all of the partial derivatives of h with respect to the compo-
nents of t and A are zero. That the partial derivatives with respect to the components
of A be zero is simply a restatement of the constraints on the translation probabilities.
The partial derivative of h with respect to VI e) is
</bodyText>
<equation confidence="0.997089333333333">
1 1 m rn
) (i +i,â E â¢ â¢ â¢ E E 6(f , fi)6(e, eaj)t(f le) 1-11-1 t(ficleak) - Ae,
)ajr=O am=0 ]=1
</equation>
<bodyText confidence="0.997969">
where is the Kronecker delta function, equal to one when both of its arguments are
the same and equal to zero otherwise. This partial derivative will be zero provided
that
</bodyText>
<equation confidence="0.689588">
a1=0 am=0 1=1 k=1
</equation>
<bodyText confidence="0.999465636363636">
Superficially, Equation (10) looks like a solution to the extremum problem, but
it is not because the translation probabilities appear on both sides of the equal sign.
Nonetheless, it suggests an iterative procedure for finding a solution: given an initial
guess for the translation probabilities, we can evaluate the right-hand side of Equation
(10) and use the result as a new estimate for t(f le). (Here and elsewhere, the Lagrange
multipliers simply serve as a reminder that we need to normalize the translation
probabilities so that they satisfy Equation (7).) This process, when applied repeatedly,
is called the EM algorithm. That it converges to a stationary point of h in situations
like this was first shown by Baum (1972) and later by others (Dempster, Laird, and
Rubin 1977).
With the aid of Equation (5), we can reexpress Equation (10) as
</bodyText>
<equation confidence="0.751003">
t(f le) = A-el E Pr(f, ale) E 6(f , fj)6(e, ea). (11)
</equation>
<bodyText confidence="0.955143333333333">
number of times e connects to f in a
We call the expected number of times that e connects to f in the translation (fle) the
count off given e for (fle) and denote it by c(f le; f, e). By definition,
</bodyText>
<equation confidence="0.983882555555556">
Tit
c(f f, e) = EPr(ale, f) E , fj)6(e, eâ,), (12)
1=1
a1=0 am=0 1=1
ah
ot(f
(9)
f 1 1 m
t(f = (/ +1)m E E E6(f, 4)6(e, ea,) t(fk)eak). (10)
</equation>
<page confidence="0.98977">
271
</page>
<note confidence="0.363437">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.9972205">
where Pr(aje, f) = Pr(f, ale)/ Pr(fle). If we replace A, by A, Pr(fle), then Equation (11)
can be written very compactly as
</bodyText>
<equation confidence="0.921835">
t(f le) = A;lc(f le; f, e). (13)
</equation>
<bodyText confidence="0.856631">
In practice, our training data consists of a set of translations, (f (i)ie (1) ), (f (2)le (2) )
(f(s)ie(s)), so this equation becomes
</bodyText>
<equation confidence="0.985441">
t(f le) = (14)
s=-1
</equation>
<bodyText confidence="0.9711823">
Here, A, serves only as a reminder that the translation probabilities must be normal-
ized.
Usually, it is not feasible to evaluate the expectation in Equation (12) exactly. Even
when we exclude multi-word cepts, there are still (1 + 1)m alignments possible for
(fie). Model 1, however, is special because by recasting Equation (6), we arrive at
an expression that can be evaluated efficiently. The right-hand side of Equation (6)
is a sum of terms each of which is a monomial in the translation probabilities. Each
monomial contains in translation probabilities, one for each of the words in I. Different
monomials correspond to different ways of connecting words in f to cepts in e with
every way appearing exactly once. By direct evaluation, we see that
</bodyText>
<equation confidence="0.99847">
1 1 m m 1
i:Hâ¢ Et(fileni) = 4.61 ei). (15)
a1=0 am,=0 j=1 j-=1 i=0
</equation>
<bodyText confidence="0.9967422">
An example may help to clarify this. Suppose that m = 3 and 1 = 1, and that we write
as a shorthand for t(fii et). Then the left-hand side of Equation (15) is t10 tzo t30
t10 t20 t31 +&amp;quot; +41 t21 t30 tll t21 t31, and the right-hand side is (tip +t11)(t20 Â±t21)(t30 +t31)â¢
It is routine to verify that these are the same. Therefore, we can interchange the sums
in Equation (6) with the product to obtain
</bodyText>
<equation confidence="0.99450125">
ml
(16)
V ei).
Pr(fle)Pr(fle)(/ + 1)rn TT
</equation>
<bodyText confidence="0.884851333333333">
If we use this expression in place of Equation (6) when we write the auxiliary function
in Equation (8), we find that
count of e in e
</bodyText>
<equation confidence="0.598845666666667">
c(f le; f, e) =-- t(f le) E5(f,4) E 6(e, ei) â¢ (17)
Vie()) + â¢ â¢ â¢ + t(f el) j=1
count of f in f
</equation>
<bodyText confidence="0.9987325">
Thus, the number of operations necessary to calculate a count is proportional to 1+ m
rather than to (1 + 1)rn as Equation (12) might suggest.
</bodyText>
<page confidence="0.992807">
272
</page>
<note confidence="0.867268">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.692972">
Using Equations (14) and (17), we can estimate the parameters t(f le) as follows.
</bodyText>
<listItem confidence="0.999929333333334">
1. Choose initial values for t(f le).
2. For each pair of sentences (0), e(s)), 1 &lt;s &lt; S. use Equation (17) to
compute the counts c(f le; es) , en. Notice that these counts will be
different from zero only when f is one of the words in f(s) and e is one
of the words in e(s) . Notice, also, that c(f es), en does not depend on
the order of the words in the sentences, but only on the number of times
that the words appear in their respective sentences.
3. For each e that appears in at least one of the
â¢ Compute A, according to the equation
</listItem>
<equation confidence="0.9662025">
A, ,EEcocle;f(s), (18)
I s=1.
</equation>
<listItem confidence="0.94048775">
â¢ For each f that appears in at least one es), use Equation (14) to
obtain a new value for t(f le).
4. Repeat steps 2 and 3 until the values of t(f e) have converged to the
desired degree.
</listItem>
<bodyText confidence="0.99971">
The details of our initial guesses for t(f le) are unimportant because Pr(fle) has a
unique local maximum for Model 1, as is shown in Appendix B. We start with all of
the t(f le) equal, but any other choice that avoids zeros would lead to the same final
solution.
</bodyText>
<subsectionHeader confidence="0.924228">
4.2 Model 2
</subsectionHeader>
<bodyText confidence="0.975058">
In Model 1, we take no cognizance of where words appear in either string. The first
word in the French string is just as likely to be connected to a word at the end of the
English string as to one at the beginning. In Model 2 we make the same assumptions
as in Model 1 except that we assume that Pr(aj lali-17A-17m7
e) depends on j, al, and
in, as well as on 1. We introduce a set of alignment probabilities,
</bodyText>
<equation confidence="0.971267444444444">
a(ajjj, m, 1) Pr(al ja11-17fii.-17 in, 1),
(19)
which satisfy the constraints
a(ilj, m, 1) = 1 (20)
i=o
for each triple jm/. In place of Equation (6), we have
m
Pr(fle) = c â¢ â¢ . H t(fileada(ailj, m, 1).
air--0 am=0 j=1
</equation>
<bodyText confidence="0.661604">
Therefore, we seek an unconstrained extremum of the auxiliary function
</bodyText>
<equation confidence="0.9954008">
m
h(t, a, A,,u,)E--_â¬Eâ¢â¢ â¢ E flt(filea)a(ailj, m, 1)
a,=0 am=0 j=1
Ae(E t(f le) â 1) â E,Jmi(Ea(iti, m, 1) â 1). (22)
(21)
</equation>
<page confidence="0.991473">
273
</page>
<note confidence="0.363855">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.9994125">
The reader will easily verify that Equations (11), (13), and (14) carry over from
Model 1 to Model 2 unchanged. We need a new count, c(iIj, m, f, e), the expected
number of times that the word in position j of f is connected to the word in position
i of e. Clearly,
</bodyText>
<equation confidence="0.965330166666667">
m, 1; f, e) =-- Pr(ale, f)6(i, aj). (23)
In analogy with Equations (13) and (14), we have, for a single translation,
a(iIj, m, 1) = in, 1; f, e), (24)
and, for a set of translations,
a(iIj, m, 1) =ttJJt (ill m, 1; f(s) , e(s)). (25)
s=1
</equation>
<bodyText confidence="0.9876832">
Notice that if f(s) does not have length m or if e(&apos;) does not have length /, then the
corresponding count is zero. As with the As in earlier equations, the Its here serve
simply to remind us that the alignment probabilities must be normalized.
Model 2 shares with Model 1 the important property that the sums in Equations
(12) and (23) can be obtained efficiently. We can rewrite Equation (21) as
</bodyText>
<equation confidence="0.962823166666667">
Pr(fle) = E H (filei)a(i1j, m, 1). (26)
j=1 1=0
Using this form for POI e), we find that
m
t(i rn, 1) 6(f , 4)6(e, ei)
c.(f I e; f, e) =
t(fleo)a(Olj, m, 1) + â¢ â¢ â¢ + 4.1 a(1Ij , m,1)&apos; (27)
j=1
and
t(filei) a(ilj , in, 1) (28)
c(ilj , m, 1; f, e) =
t(fileo)a(01j, in, 1) + â¢ â¢ + 041 et) a(Ilj, m,1).
</equation>
<bodyText confidence="0.997934833333333">
Equation (27) has a double sum rather than the product of two single sums, as in
Equation (17), because in Equation (27) i and j are tied together through the alignment
probabilities.
Model 1 is the special case of Model 2 in which a(ilj , m, 1) is held fixed at (1+ 1)-1.
Therefore, any set of parameters for Model 1 can be reinterpreted as a set of parameters
for Model 2. Taking as our initial estimates of the parameters for Model 2 the parameter
values that result from training Model 1 is equivalent to computing the probabilities
of all alignments as if we were dealing with Model 1, but then collecting the counts
as if we were dealing with Model 2. The idea of computing the probabilities of the
alignments using one model, but collecting the counts in a way appropriate to a second
model is very general and can always be used to transfer a set of parameters from
one model to another.
</bodyText>
<page confidence="0.996846">
274
</page>
<note confidence="0.923459">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<subsectionHeader confidence="0.900146">
4.3 Intermodel Interlude
</subsectionHeader>
<bodyText confidence="0.962094214285714">
We created Models 1 and 2 by making various assumptions about the conditional
probabilities that appear in Equation (4). As we have mentioned, Equation (4) is an
exact statement, but it is only one of many ways in which the joint likelihood of f
and a can be written as a product of conditional probabilities. Each such product
corresponds in a natural way to a generative process for developing f and a from e.
In the process corresponding to Equation (4), we first choose a length for f. Next, we
decide which position in e is connected to fi and what the identity of fi is. Then, we
decide which position in e is connected to 12, and so on. For Models 3, 4, and 5, we
write the joint likelihood as a product of conditional probabilities in a different way.
Casual inspection of some translations quickly establishes that the is usually trans-
lated into a single word (le, la, or 1), but is sometimes omitted; or that only is often
translated into one word (for example, seulement), but sometimes into two (for exam-
ple, ne . . . que), and sometimes into none. The number of French words to which e
is connected in a randomly selected alignment is a random variable, (13â that we call
the fertility of e. Each choice of the parameters in Model 1 or Model 2 determines a
distribution, Pr(cl)e = 0), for this random variable. But the relationship is remote: just
what change will be wrought in the distribution of 43the if, say, we adjust a(112, 8,9) is
not immediately clear. In Models 3, 4, and 5, we parameterize fertilities directly.
As a prolegomenon to a detailed discussion of Models 3, 4, and 5, we describe
the generative process upon which they are based. Given an English string, e, we first
decide the fertility of each word and a list of French words to connect to it. We call
this list, which may be empty, a tablet. The collection of tablets is a random variable, T,
that we call the tableau of e; the tablet for the ith English word is a random variable, Ti;
and the kth French word in the ith tablet is a random variable, Tjk. After choosing the
tableau, we permute its words to produce f. This permutation is a random variable,
H. The position in f of the kth word in the ith tablet is yet another a random variable,
ilzkâ¢
The joint likelihood for a tableau, T, and a permutation, 7r, is
</bodyText>
<table confidence="0.970330818181818">
Pr(T, 71e) H Pr(Oi I e) Pr(q50 101, e) x (29)
ji
1 tki
HPr ( I Ti 1 01117 e) x
i=0 k=1
1 cki
HH pr(irik 17rak â1 , â1 , , e) x
i=1 k=1
950
IIPr (7rok Iroki-1, 71, T 07 00) e).
k=1
</table>
<bodyText confidence="0.9966772">
In this equation, r1c-1 represents the series of values , 7-,; 7r,ik-1 represents the
series of values 7ri1, ,7rik_i; and 0, is shorthand for
Knowing T and 7r determines a French string and an alignment, but in general
several different pairs r, may lead to the same pair f, a. We denote the set of such
pairs by (f, a). Clearly, then
</bodyText>
<equation confidence="0.9223075">
PO, ale) = Pr(r,7r1e). (30)
7,71-)E (f,a)
</equation>
<page confidence="0.989155">
275
</page>
<figure confidence="0.822054666666667">
Computational Linguistics Volume 19, Number 2
el el
cheap cheap
bon marche marche bon
bon marche bon marche
fi f2 fi f2
</figure>
<figureCaption confidence="0.923641">
Figure 4
</figureCaption>
<bodyText confidence="0.996032111111111">
Two tableaux for one alignment.
The number of elements in (f, a) is 1-11=0 Oi! because for each 7-, there are Oz! arrange-
ments that lead to the pair f, a. Figure 4 shows the two tableaux for (bon marche
cheap(1,2)).
Except for degenerate cases, there is one alignment in .4(e, f) for which Pr(ale, f)
is greatest. We call this the Viterbi alignment for (f le) and denote it by V(f le). We
know of no practical algorithm for finding V(f le) for a general model. Indeed, if
someone were to claim that he had found V(f le), we know of no practical algorithm
for demonstrating that he is correct. But for Model 2 (and, thus, also for Model 1),
finding V(fle) is straightforward. For each j, we simply choose aj so as to make the
product t(fjI ec,i)a(ailj , m, 1) as large as possible. The Viterbi alignment depends on the
model with respect to which it is computed. When we need to distinguish between
the Viterbi alignments for different models, we write V(f le; 1), V(fle; 2), and so on.
We denote by â4,___1(e, f) the set of alignments for which al = i. We say that ij
is pegged in these alignments. By the pegged Viterbi alignment for ij, which we write
Vi.._1(f le), we mean that element of Ai._1(e, f) for which Pr(aie, f) is greatest. Obviously,
we can find Vâ_)(fle; 1) and 17,,_1(f le; 2) quickly with a straightforward modification
of the algorithm described above for finding V(f le; 1) and V(f le; 2).
</bodyText>
<subsectionHeader confidence="0.7095">
4.4 Model 3
</subsectionHeader>
<bodyText confidence="0.992444764705882">
Model 3 is based on Equation (29). Earlier, we were unable to treat each of the con-
ditional probabilities on the right-hand side of Equation (4) as a separate parameter.
With Equation (29) we are no better off and must again make assumptions to reduce
the number of independent parameters. There are many different sets of assumptions
that we might make, each leading to a different model for the translation process.
In Model 3, we assume that, for i between 1 and /, Pr(Oi 1011.-1, e) depends only on
Oi and ei; that, for all i, Pr(rikirit-1, 7-1, 4, e) depends only on rik and ei; and that,
for i between 1 and /, Pr(7rik 14-1, T(1, e) depends only on 7rik, i, m, and /. The
parameters of Model 3 are thus a set of fertility probabilities, n(cbl ei) E Pr(01011.-1, e); a set
of translation probabilities, t(f ei) = Pr(Tik e);
and a set of distortion
probabilities, d(jli, m, 1) a- Pr (111k = jk1 74-1, 7-(1, 10(1), e).
We treat the distortion and fertility probabilities for e0 differently. The empty cept
conventionally occupies position 0, but actually has no position. Its purpose is to
account for those words in the French string that cannot readily be accounted for by
other cepts in the English string. Because we expect these words to be spread uniformly
throughout the French string, and because they are placed only after all of the other
</bodyText>
<page confidence="0.988573">
276
</page>
<bodyText confidence="0.932932833333333">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
words in the string have been placed, we assume that Pr(110k+1 = jlir, 71, TO, e)
equals 0 unless position j is vacant in which case it equals (00 - k)-1. Therefore, the
contribution of the distortion probabilities for all of the words in To is 1/00!.
We expect q50 to depend on the length of the French string because longer strings
should have more extraneous words. Therefore, we assume that
</bodyText>
<equation confidence="0.972012">
Pr(Oolcbi, e) ( (41 4- .95,0. 4- 4)1 ) g1+...+Â°1- (1)Â° PiÂ° (31)
</equation>
<bodyText confidence="0.9980425">
for some pair of auxiliary parameters po and pi. The expression on the left-hand side
of this equation depends on 01 only through the sum 01 + â¢ â¢ â¢ + 0/ and defines a
probability distribution over o whenever po and pi are nonnegative and sum to 1.
We can interpret Pr(00101, e) as follows. We imagine that each of the words from TI
requires an extraneous word with probability pi and that this extraneous word must
be connected to the empty cept. The probability that exactly cbo of the words from TI
will require an extraneous word is just the expression given in Equation (31).
As with Models 1 and 2, an alignment of (fle) is determined by specifying al for
each position in the French string. The fertilities, 00 through 0/, are functions of the
ais: 0, is equal to the number of js for which aj equals i Therefore,
</bodyText>
<equation confidence="0.973837125">
Pr(fle) = E â¢â¢E Pr(f, ale)
a1=0 a m =0
1 1
EE 0.0 )porn 200140. o cbi! n(cbi ei) x
a1=0 am =0 i=1
In
Ilty,leOdUlar 771,0 (32)
j=1
</equation>
<bodyText confidence="0.923948">
with Ef t(f le) = 1/ E1 d(jii m/ 1) = 1, E0 n (01 e) = 1, and po +pi = 1. The assumptions
that we make for Model 3 are such that each of the pairs (T, 7r) in (f, a) makes an
identical contribution to the sum in Equation (30). The factorials in Equation (32)
come from carrying out this sum explicitly. There is no factorial for the empty cept
because it is exactly canceled by the contribution from the distortion probabilities.
By now, the reader will be able to provide his or her own auxiliary function for
seeking a constrained minimum of the likelihood of a translation with Model 3, but
for completeness and to establish notation, we write
h(t,d,n,p, A, tt, v, Pr(fle) - E A, (f. t(f 1 e) - 1) - Eitina(Ed(j1i, m, 1) - 1)
_Eve( n(01 e) - 1) - (po + pi -1). (33)
Following the trail blazed with Models 1 and 2, we define the counts
</bodyText>
<equation confidence="0.912491">
711
c(f le; f , e) = V Pr(ale, E ea,), (34)
j=1
c(j1i, m, /; f,e) = E Pr(ale, f)6(i, ai), (35)
a
</equation>
<page confidence="0.817493">
277
</page>
<note confidence="0.248648">
Computational Linguistics Volume 19, Number 2
</note>
<equation confidence="0.907830571428571">
c(Ole; f, e) Pr(ale, 6(0, 0)6(e, ei), (36)
a i=1
c(0; f, = EPr(ale, f)(rn -2) (37)
a
and
c(1; f, e) = EPr(ale, f)00. (38)
a
</equation>
<bodyText confidence="0.997115666666667">
The counts in these last two equations correspond to the parameters po and p1 that de-
termine the fertility of the empty cept in the English string. The reestimation formulae
for Model 3 are
</bodyText>
<equation confidence="0.92448325">
t(f le) =
d(j1i, m, 1) m,
s=1
n(cble) = iie-1 Ec(oie;f(s), e(s)),
8=1
and
Pk = e-1E c(k;f(s) , e(s)). (42)
s=i
</equation>
<bodyText confidence="0.999954423076923">
Equations (34) and (39) are identical to Equations (12) and (14) and are repeated here
only for convenience. Equations (35) and (40) are similar to Equations (23) and (25),
but a(iIj, m, 1) differs from d(jii, m, 1) in that the former sums to unity over all i for
fixed j while the latter sums to unity over all j for fixed i. Equations (36), (37), (38),
(41), and (42), for the fertility parameters, are new.
The trick that allows us to evaluate the right-hand sides of Equations (12) and (23)
efficiently for Model 2 does not work for Model 3. Because of the fertility parameters,
we cannot exchange the sums over al through am with the product over j in Equation
(32) as we were able to for Equations (6) and (21). We are not, however, entirely bereft
of hope. The alignment is a useful device precisely because some alignments are much
more probable than others. Our strategy is to carry out the sums in Equations (32)
and (34)-(38) only over some of the more probable alignments, ignoring the vast sea
of much less probable ones. Specifically, we begin with the most probable alignment
that we can find and then include all alignments that can be obtained from it by small
changes.
To define unambiguously the subset, S, of the elements of A(fle) over which we
evaluate the sums, we need yet more terminology. We say that two alignments, a and
a&apos;, differ by a move if there is exactly one value of j for which ai 0 . We say that
they differ by a swap if aj = ai&apos; except at two values, Ii and j2, for which (111 = al,&apos; and
= a111. We say that two alignments are neighbors if they are identical or differ by a
move or by a swap. We denote the set of all neighbors of a by .Ai(a).
Let b(a) be that neighbor of a for which the likelihood Pr(b(a)lf, e) is greatest.
Suppose that ij is pegged for a. Among the neighbors of a for which ij is also pegged,
let b,+_1(a) be that for which the likelihood is greatest. The sequence of alignments a,
b(a), b2(a) b(b(a)), . . ., converges in a finite number of steps to an alignment that we
write as bcÂ° (a). Similarly, if ij is pegged for a, the sequence of alignments a,
</bodyText>
<page confidence="0.97351">
278
</page>
<note confidence="0.795258">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<listItem confidence="0.886271">
b?/4--1 (a), â¢ â¢ â¢,
converges in a finite number of steps to an alignment that we write as
b&apos;1 (a) The simple form of the distortion probabilities in Model 3 makes it easy to
vâ
find b(a) and b_ 1(a). If a&apos; is a neighbor of a obtained from it by the move of] from i
to i&apos;, and if neither i nor i&apos; is 0, then
</listItem>
<equation confidence="0.995495">
Pr(ale, f) = Pr(aie, f) (0,, + 1) n(0i, +110 n(cb, â 11ei) V] 1 ei,) d(j1i&apos; , m, 1) . (43)
Ã§tjn(Oplei,) n(0,1ei) 4,61 ei) d(j1i, m, 1)
</equation>
<bodyText confidence="0.992983571428572">
Notice that Op is the fertility of the word in position i&apos; for alignment a. The fertility
of this word in alignment a&apos; is 0,, + 1. Similar equations can be easily derived when
either i or i&apos; is zero, or when a and a&apos; differ by a swap. We leave the details to the
reader.
With these preliminaries, we define S by
S = Ar(r)(V(fl e; 2))) U V (fle; 2))). (44)
In this equation, we use bÂ°Â°(V(f le; 2)) and lfÂ° j(V,-1 (f le; 2)) as handy approximations
to V(f le; 3) and Viâj(f le; 3), neither of which we are able to compute efficiently.
In one iteration of the EM algorithm for Model 3, we compute the counts in
Equations (34)â(38), summing only over elements of S, and then use these counts in
Equations (39)â(42) to obtain a new set of parameters. If the error made by including
only some of the elements of â4(e, f) is not too great, this iteration will lead to values
of the parameters for which the likelihood of the training data is at least as large as
for the first set of parameters.
We make no initial guess of the parameters for Model 3, but instead adapt the
parameters from the final iteration of the EM algorithm for Model 2. That is, we com-
pute the counts in Equations (34)â(38) using Model 2 to evaluate Pr(ai e, f). The simple
form of Model 2 again makes exact calculation feasible. We can readily adapt Equa-
tions (27) and (28) to compute counts for the translation and distortion probabilities;
efficient calculation of the fertility counts is more involved, and we defer a discussion
of it to Appendix B.
</bodyText>
<subsectionHeader confidence="0.451339">
4.5 Deficiency
</subsectionHeader>
<bodyText confidence="0.997680882352941">
The reader will have noticed a problem with our parameterization of the distortion
probabilities in Model 3: whereas we can see by inspection that the sum over all pairs
y, 7 of the expression on the right-hand side of Equation (29) is unity, it is equally clear
that this can no longer be the case if we assume that Pr(llik = e)
depends only on], i, m, and 1 for i &gt; 0. Because the distortion probabilities for assigning
positions to later words do not depend on the positions assigned to earlier words,
Model 3 wastes some of its probability on what we might call generalized strings, i.e.,
strings that have some positions with several words and others with none. When a
model has this property of not concentrating all of its probability on events of interest,
we say that it is deficient. Deficiency is the price that we pay for the simplicity that
allows us to write Equation (43).
Deficiency poses no serious problem here. Although Models 1 and 2 are not tech-
nically deficient, they are surely spiritually deficient. Each assigns the same probability
to the alignments (Je n&apos;ai pas de stylo 1 I(1) do not(2,4) have(3) a(5) pen(6)) and (Je pas ai ne de
stylo 1 I(1) do not(2,4) have(3) a(5) pen(6)), and, therefore, essentially the same probability
to the translations (Je n&apos;ai pas de stylo 1 I do not have a pen) and (Je pas ai ne de stylo 11 do
not have a pen). In each case, not produces two words, ne and pas, and in each case,
</bodyText>
<page confidence="0.966857">
279
</page>
<note confidence="0.334535">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.999824857142857">
one of these words ends up in the second position of the French string and the other
in the fourth position. The first translation should be much more probable than the
second, but this defect is of little concern because while we might have to translate
the first string someday, we will never have to translate the second. We do not use
our translation models to predict French given English but rather as a component of
a system designed to predict English given French. They need only be accurate to
within a constant factor over well-formed strings of French words.
</bodyText>
<subsectionHeader confidence="0.994664">
4.6 Model 4
</subsectionHeader>
<bodyText confidence="0.987591641025641">
Often the words in an English string constitute phrases that are translated as units
into French. Sometimes, a translated phrase may appear at a spot in the French string
different from that at which the corresponding English phrase appears in the English
string. The distortion probabilities of Model 3 do not account well for this tendency of
phrases to move around as units. Movement of a long phrase will be much less likely
than movement of a short phrase because each word must be moved independently. In
Model 4, we modify our treatment of Pr (II,k = 74-1, 0(1) e) so as to alleviate
this problem. Words that are connected to the empty cept do not usually form phrases,
and so we continue to assume that these words are spread uniformly throughout the
French string.
As we have described, an alignment resolves an English string into a ceptual
scheme consisting of a set of possibly overlapping cepts. Each of these cepts then ac-
counts for one or more French words. In Model 3 the ceptual scheme for an alignment
is determined by the fertilities of the words: a word is a cept if its fertility is greater
than zero. The empty cept is a part of the ceptual scheme if 00 is greater than zero.
As before we exclude multi-word cepts. Among the one-word cepts, there is a natural
order corresponding to the order in which they appear in the English string. Let [ii
denote the position in the English string of the ith one-word cept. We define the center
of this cept, 0â to be the ceiling of the average value of the positions in the French
string of the words from its tablet. We define its head to be that word in its tablet for
which the position in the French string is smallest.
In Model 4, we replace rn, 1) by two sets of parameters: one for placing the
head of each cept, and one for placing any remaining words. For [i] &gt; 0, we require
that the head for cept i be r[]i and we assume that
Pr (II[]i = /1741-1,71, Of), e) = - Oi-i IA(e[i-i]), 8(4)). (45)
Here, A and 8 are functions of the English and French words that take on a small
number of different values as their arguments range over their respective vocabularies.
Brown et al. (1990) describe an algorithm for dividing a vocabulary into classes so as to
preserve mutual information between adjacent classes in running text. We construct
A and B as functions with 50 distinct values by dividing the English and French
vocabularies each into 50 classes according to this algorithm. By assuming that the
probability depends on the previous cept and on the identity of the French word
being placed, we can account for such facts as the appearance of adjectives before
nouns in English but after them in French. We call j - 01-1 the displacement for the
head of cept i. It may be either positive or negative. We expect di (-1 IA(e), BM) to
be larger than d1(+ 11A(e),8(f)) when e is an adjective and f is a noun. Indeed,
this is borne out in the trained distortion probabilities for Model 4, where we find
that di (-1 IA(government&apos; s), (developpement)) is 0.7986, while d1(-i- 1 IA(government&apos; s),
B(developpement)) is 0.0168.
</bodyText>
<page confidence="0.929979">
280
</page>
<note confidence="0.760792">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.972242">
Suppose, now, that we wish to place the kth word of cept i for [i] &gt; 0, k&gt; 1. We
assume that
</bodyText>
<equation confidence="0.573853">
Pr (il[i]k AR- [illk &apos;111), 00) e) = d&gt;i(i IN)). (46)
</equation>
<bodyText confidence="0.971901757575758">
We require that &apos;irk&apos;&apos;, be greater than r[]k_i. Some English words tend to produce a
series of French words that belong together, while others tend to produce a series of
words that should be separate. For example, implemented can produce mis en application,
which usually occurs as a unit, but not can produce ne pas, which often occurs with
an intervening verb. We expect d&gt;1(2IB(pas)) to be relatively large compared with
d&gt;i (218( en)). After training, we find that d&gt;i(2I13(pas)) is 0.6847 and d&gt;1(215( en)) is
0.1533.
Whereas we assume that 7-Ni can be placed either before or after any previously
positioned words, we require subsequent words from TN to be placed in order. This
does not mean that they must occupy consecutive positions but only that the second
word from TN must lie to the right of the first, the third to the right of the second, and
so on. Because of this, only one of the Om! arrangements of r[t] is possible.
We leave the routine details of deriving the count and reestimation formulae for
Model 4 to the reader. He may find the general formulae in Appendix B helpful.
Once again, the several counts for a translation are expectations of various quantities
over the possible alignments with the probability of each alignment computed from an
earlier estimate of the parameters. As with Model 3, we know of no trick for evaluating
these expectations and must rely on sampling some small set, S, of alignments. As
described above, the simple form that we assume for the distortion probabilities in
Model 3 makes it possible for us to find Pc&apos; (a) rapidly for any a. The analog of Equation
(43) for Model 4 is complicated by the fact that when we move a French word from cept
to cept we change the centers of two cepts and may affect the contribution of several
words. It is nonetheless possible to evaluate the adjusted likelihood incrementally,
although it is substantially more time-consuming.
Faced with this unpleasant situation, we proceed as follows. Let the neighbors
of a be ranked so that the first is the neighbor for which Pr(ale, f; 3) is greatest, the
second the one for which Pr(ale, f; 3) is next greatest, and so on. We define b(a) to be the
highest-ranking neighbor of a for which Pr(b-(a) le, f; 4) is at least as large as Pr(ale, f; 4).
We define -6â_1(a) analogously. Here, Pr(ale, f; 3) means Pr(ale, f) as computed with
Model 3, and Pr(ale, f;4) means Pr(ale, f) as computed with Model 4. We define S for
Model 4 by
N-(b&amp;quot; ( V(f le; 2))) U (fie; 2))). (47)
This equation is identical to Equation (47) except that b has been replaced by b.
</bodyText>
<subsectionHeader confidence="0.958932">
4.7 Model 5
</subsectionHeader>
<bodyText confidence="0.999972222222222">
Models 3 and 4 are both deficient. In Model 4, not only can several words lie on top
of one another, but words can be placed before the first position or beyond the last
position in the French string. We remove this deficiency in Model 5.
After we have placed the words for 41-1 and r[i]ik-1 there will remain some va-
cant positions in the French string. Obviously, T[i]k should be placed in one of these
vacancies. Models 3 and 4 are deficient precisely because we fail to enforce this con-
straint for the one-word cepts. Let v(j, 41-1, T[]l&amp;quot;) be the number of vacancies up to
and including position j just before we place Ttipc. In the interest of notational brevity,
a noble but elusive goal, we write this simply as v1. We retain two sets of distortion
</bodyText>
<page confidence="0.976563">
281
</page>
<note confidence="0.540304">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.964398857142857">
parameters, as in Model 4, and continue to refer to them as d1 and d&gt;1. We assume
that, for [ii &gt; 0,
= 7-(!,, 0(1), e) = (vilB(.6), voi_i, vin - + 1)(1 - 6(v1, vj-i))â¢ (48)
The number of vacancies up to j is the same as the number of vacancies up to j - 1
only when j is not itself vacant. The last factor, therefore, is 1 when j is vacant and 0
otherwise. In the final parameter of d1, um is the number of vacancies remaining in the
French string. If ON = 1, then rto may be placed in any of these vacancies; if Oki = 2,
7-Ni may be placed in any but the last of these vacancies; in general, r[i]i may be placed
in any but the rightmost ON - 1 of the remaining vacancies. Because rto must occupy
the leftmost place of any of the words from TN, we must take care to leave room at
the end of the string for the remaining words from this tablet. As with Model 4, we
allow d1 to depend on the center of the previous cept and on fj, but we suppress the
dependence on eu_ii since we should otherwise have too many parameters.
For [ii &gt; 0 and k&gt; 1, we assume
</bodyText>
<equation confidence="0.969782666666667">
Pr(rifip, -1 , e)
= d&gt;i(vj - vâNk-i I ( f;)7 - - k)(1 - (vp v1_1)). (49)
8.v.,,
</equation>
<bodyText confidence="0.9998483">
Again, the final factor enforces the constraint that Ttipc land in a vacant position, and,
again, we assume that the probability depends on 4 only through its class. Model 5 is
described in more detail in Appendix B.
As with Model 4, we leave the details of the count and reestimation formulae
to the reader. No incremental evaluation of the likelihood of neighbors is possible
with Model 5 because a move or swap may require wholesale recomputation of the
likelihood of an alignment. Therefore, when we evaluate expectations for Model 5, we
include only the alignments in S as defined in Equation (47). We further trim these
alignments by removing any alignment a, for which Pr(a le, f; 4) is too much smaller
than Pr (b.&apos; ( V(f I e; 2) le, f; 4).
Model 5 is a powerful but unwieldy ally in the battle to align translations. It must
be led to the battlefield by its weaker but more agile brethren Models 2, 3, and 4. In fact,
this is the raison d&apos;Ãªtre of these models. To keep them aware of the lay of the land, we
adjust their parameters as we carry out iterations of the EM algorithm for Model 5. That
is, we collect counts for Models 2, 3, and 4 by summing over alignments as determined
by the abbreviated S described above, using Model 5 to compute Pr(a I e, f). Although
this appears to increase the storage necessary for maintaining counts as we proceed
through the training data, the extra burden is small because the overwhelming majority
of the storage is devoted to counts for t(f I e), and these are the same for Models 2, 3,
4, and 5.
</bodyText>
<sectionHeader confidence="0.999542" genericHeader="method">
5. Results
</sectionHeader>
<bodyText confidence="0.999859714285714">
We have used a large collection of training data to estimate the parameters of the
models described above. Brown, Lai, and Mercer (1991) have described an algorithm
with which one can reliably extract French and English sentences that are translations
of one another from parallel corpora. They used the algorithm to extract a large number
of translations from several years of the proceedings of the Canadian parliament. From
these translations, we have chosen as our training data those for which both the English
sentence and the French sentence are 30 or fewer words in length. This is a collection
</bodyText>
<page confidence="0.989476">
282
</page>
<note confidence="0.981488">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<tableCaption confidence="0.693775">
Table 1
A summary of the training iterations.
</tableCaption>
<table confidence="0.841022538461538">
Iteration In Out Survivors Alignments Perplexity
1 1 -4 2 12, 017, 609 71, 550.56
2 2 -4 2 12, 160, 475 202.99
3 2 -4 2 9, 403, 220 89.41
4 2 -4 2 6, 837, 172 61.59
5 2 -4 2 5, 303, 312 49.77
6 2 -4 2 4, 397, 172 46.36
7 2 -4 3 3, 841, 470 45.15
8 3 5 2, 057, 033 291 124.28
9 5 -4 5 1, 850, 665 95 39.17
10 5 -4 5 1, 763, 665 48 32.91
11 5 5 1, 703, 393 39 31.29
12 5 -4 5 1,658,364 33 30.65
</table>
<bodyText confidence="0.993266285714286">
of 1,778,620 translations. In an effort to eliminate some of the typographical errors that
abound in the text, we have chosen as our English vocabulary all of those words that
appear at least twice in English sentences in our data, and as our French vocabulary
all of those words that appear at least twice in French sentences in our data. All
other words we replace with a special unknown English word or unknown French word
accordingly as they appear in an English sentence or a French sentence. We arrive
in this way at an English vocabulary of 42,005 words and a French vocabulary of
58,016 words. Some typographical errors are quite frequent, for example, momento for
memento, and so our vocabularies are not completely free of them. At the same time,
some words are truly rare, and so we have, in some cases, snubbed legitimate words.
Adding eo to the English vocabulary brings it to 42,006 words.
We have carried out 12 iterations of the EM algorithm for this data. We initialized
the process by setting each of the 2, 437, 020, 096 translation probabilities, t(f I e), to
1/58,016. That is, we assume each of the 58,016 words in the French vocabulary to be
equally likely as a translation for each of the 42,006 words in the English vocabulary.
For t(f le) to be greater than zero at the maximum likelihood solution for one of our
models, f and e must occur together in at least one of the translations in our training
data. This is the case for only 25, 427, 016 pairs, or about one percent of all translation
probabilities. On the average, then, each English word appears with about 605 French
words.
Table 1 summarizes our training computation. At each iteration, we compute the
probabilities of the various alignments of each translation using one model, and collect
counts using a second (possibly different) model. These are referred to in the table as
the In model and the Out model, respectively. After each iteration, we retain individual
values only for those translation probabilities that surpass a threshold; the remainder
we set to a small value (10-12). This value is so small that it does not affect the
normalization conditions, but is large enough that translation probabilities can be
resurrected during later iterations. We see in columns 4 and 5 that even though we
lower the threshold as iterations progress, fewer and fewer probabilities survive. By
the final iteration, only 1, 658, 364 probabilities survive, an average of about 39 French
words for each English word.
Although the entire t array has 2, 437, 020, 096 entries, and we need to store it
twice, once as probabilities and once as counts, it is clear from the preceeding remarks
that we need never deal with more than about 25 million counts or about 12 million
probabilities. We store these two arrays using standard sparse matrix techniques. We
</bodyText>
<page confidence="0.986737">
283
</page>
<note confidence="0.55239">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.99965494117647">
keep counts as pairs of bytes, but allow for overflow into 4 bytes if necessary. In
this way, it is possible to run the training program in less than 100 megabytes of
memory. While this number would have seemed extravagant a few years ago, today
it is available at modest cost in a personal workstation.
As we have described, when the In model is neither Model 1 nor Model 2, we
evaluate the count sums over only some of the possible alignments. Many of these
alignments have a probability much smaller than that of the Viterbi alignment. The
column headed Alignments in Table 1 shows the average number of alignments for
which the probability is within a factor of 25 of the probability of the Viterbi align-
ment in each iteration. As this number drops, the model concentrates more and more
probability onto fewer and fewer alignments so that the Viterbi alignment becomes
ever more dominant.
The last column in the table shows the perplexity of the French text given the
English text for the In model of the iteration. We expect the likelihood of the training
data to increase with each iteration. We can think of this likelihood as arising from a
product of factors, one for each French word in the training data. We have 28,850, 104
French words in our training data, so the 28,850, 104th root of the likelihood is the
average factor by which the likelihood is reduced for each additional French word.
The reciprocal of this root is the perplexity shown in the table. As the likelihood
increases, the perplexity decreases. We see a steady decrease in perplexity as the itera-
tions progress except when we switch from Model 2 as the In model to Model 3. This
sudden jump is not because Model 3 is a poorer model than Model 2, but because
Model 3 is deficient: the great majority of its probability is squandered on objects that
are not strings of French words. As we have argued, deficiency is not a problem. In
our description of Model 1, we left Pr(m I e) unspecified. In quoting perplexities for
Models 1 and 2, we have assumed that the length of the French string is Poisson with
a mean that is a linear function of the length of the English string. Specifically, we
have assumed that Pr(M = m le) = (A Oine-Al I M!, with A equal to 1.09.
It is interesting to see how the Viterbi alignments change as the iterations progress.
In Figure 5, we show for several sentences the Viterbi alignment after iterations 1, 6,
7, and 12. Iteration 1 is the first iteration for Model 2, and iterations 6, 7, and 12 are
the final iterations for Models 2, 3, and 5, respectively. In each example, we show
the French sentence with a subscript affixed to each word to ease the reader&apos;s task
in interpreting the list of numbers after each English word. In the first example, al
me semble faire signe que oui I It seems to me that he is nodding), two interesting changes
evolve over the course of the iterations. In the alignment for Model 1, II is correctly
connected to he, but in all later alignments Il is incorrectly connected to It. Models 2, 3,
and 5 discount a connection of he to Il because it is quite far away. We do not yet have
a model with sufficient linguistic sophistication to make this connection properly. On
the other hand, we see that nodding, which in Models 1, 2, and 3 is connected only to
signe and oui, is correctly connected to the entire phrase faire signe que oui in Model 5.
In the second example, (Voyez les profits que ils ont realises I Look at the profits they have
made), Models 1, 2, and 3 incorrectly connect profits4 to both profits3 and realises7, but
with Model 5, profits4 is correctly connected only to profits3, and made7 is connected to
rea/ises7. Finally, in (De les promesses, de les promesses! I Promises, promises.), Promisesi is
connected to both instances of promesses with Model 1; promises3 is connected to most
of the French sentence with Model 2; the final punctuation of the English sentence is
connected to both the exclamation point and, curiously, to de5 with Model 3; and only
with Model 5 do we have a satisfying alignment of the two sentences. The orthography
for the French sentence in the second example is Voyez les profits qu&apos;ils ont realises and
in the third example is Des promesses, des promesses! We have restored the e to the end
</bodyText>
<page confidence="0.97952">
284
</page>
<note confidence="0.73499">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<equation confidence="0.997226066666667">
III me2 semble3 faire4 signe5 que6 oui7
It seems(3) to(4) me(2) that(6) he(1) is nodding(5,7)
It(1) seems(3) to me(2) that he is nodding(5,7)
It(1) seems(3) to(4) me(2) that(6) he is nodding(5,7)
It(1) seems(3) to me(2) that he is nodding(4,5,6,7)
Voyezi les2 profits3 que4 ils5 ont6 realises7
Look(1) at the(2) profits(3,7) they(5) have(6) made
Look(1) at the(2,4) profits(3,7) they(5) have(6) made
Look(1) at the profits(3,7) they(5) have(6) made
Look(1) at the(2) profits(3) they(5) have(6) made(7)
Del les2 promesses3 ,4 de5 les6 promesses7 !ti
Promises(3,7) ,(4) promises .(8)
Promises ,(4) promises(2,3,6,7) .(8)
Promises(3) ,(4) promises(7) .(5,8)
Promises(2,3) ,(4) promises(6,7) .(8)
</equation>
<bodyText confidence="0.973793888888889">
Figure 5
The progress of alignments with iteration.
of qu&apos; and have twice analyzed des into its constituents, de and les. We commit these
and other petty pseudographic improprieties in the interest of regularizing the French
text. In all cases, orthographic French can be recovered by rule from our corrupted
versions.
Figures 6-15 show the translation probabilities and fertilities after the final iteration
of training for a number of English words. We show all and only those probabilities
that are greater than 0.01. Some words, like nodding, in Figure 6, do not slip gracefully
into French. Thus, we have translations like (II fait signe que oui I He is nodding), (11 fait
un signe de la tete I He is nodding), (II fait un signe de tete affirmatif I He is nodding), or (II
hoche la tete affirmativement I He is nodding). As a result, nodding frequently has a large
fertility and spreads its translation probability over a variety of words. In French, what
is worth saying is worth saying in many different ways. We see another facet of this
with words like should, in Figure 7, which rarely has a fertility greater than one but still
produces many different words, among them devrait, devraient, devrions, doit, doivent,
devons, and devrais. These are (just a fraction of the many) forms of the French verb
devoir. Adjectives fare a little better: national, in Figure 8, almost never produces more
than one word and confines itself to one of nationale, national, nationaux, and nationales,
respectively the feminine, the masculine, the masculine plural, and the feminine plural
of the corresponding French adjective. It is clear that our models would benefit from
some kind of morphological processing to rein in the lexical exuberance of French.
We see from the data for the, in Figure 9, that it produces le, la, les, and l&apos; as we
would expect. Its fertility is usually 1, but in some situations English prefers an article
where French does not and so about 14% of the time its fertility is 0. Sometimes, as
with farmers, in Figure 10, it is French that prefers the article. When this happens, the
English noun trains to produce its translation together with an article. Thus, farmers
</bodyText>
<page confidence="0.985227">
285
</page>
<table confidence="0.988290352941176">
Computational Linguistics Volume 19, Number 2
nodding
f t(f I e) cb n(0 I e)
signe 0.164 4 0.342
la 0.123 3 0.293
tete 0.097 2 0.167
oui 0.086 1 0.163
fait 0.073 0 0.023
que 0.073
hoche 0.054
hocher 0.048
faire 0.030
me 0.024
approuve 0.019
qui 0.019
UR 0.012
faites 0.011
</table>
<figureCaption confidence="0.898714">
Figure 6
</figureCaption>
<bodyText confidence="0.995265066666667">
Translation and fertility probabilities for nodding.
typically has a fertility 2 and usually produces either agriculteurs or les. We include
additional examples in Figures 11 through 15, which show the translation and fertility
probabilities for external, answer, oil, former, and not. Although we show the various
probabilities to three decimal places, one must realize that the specific numbers that
appear are peculiar to the training data that we used in obtaining them. They are not
constants of nature relating the Platonic ideals of eternal English and eternal French.
Had we used different sentences as training data, we might well have arrived at
different numbers. For example, in Figure 9, we see that t(lelthe) = 0.497 while the
corresponding number from Figure 4 of Brown et al. (1990) is 0.610. The difference
arises not from some instability in the training algorithms or some subtle shift in
the languages in recent years, but from the fact that we have used 1,778,620 pairs of
sentences covering virtually the complete vocabulary of the Hansard data for training,
while they used only 40,000 pairs of sentences and restricted their attention to the 9,000
most common words in each of the two vocabularies.
Figures 16, 17, and 18 show automatically derived alignments for three transla-
tions. In the terminology of Section 4.6, each alignment is b&amp;quot;(v(fle; 2)). We stress that
these alignments have been found by an algorithm that involves no explicit knowledge
of either French or English. Every fact adduced to support them has been discovered
algorithmically from the 1, 778, 620 translations that constitute our training data. This
data, in turn, is the product of an algorithm the sole linguistic input of which is a set
of rules explaining how to find sentence boundaries in the two languages. We may
justifiably claim, therefore, that these alignments are inherent in the Canadian Hansard
data itself.
In the alignment shown in Figure 16, all but one of the English words has fertility 1.
The final prepositional phrase has been moved to the front of the French sentence, but
otherwise the translation is almost verbatim. Notice, however, that the new proposal
has been translated into les nouvelles propositions, demonstrating that number is not an
invariant under translation. The empty cept has fertility 5 here. It generates eni, de3,
the comma, de16, and dela.
</bodyText>
<page confidence="0.997432">
286
</page>
<note confidence="0.904529">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<table confidence="0.950465916666667">
should
f t(f I e) 0 n(0 I e)
devrait 0.330 1 0.649
devraient 0.123 0 0.336
devrions 0.109 2 0.014
faudrait 0.073
faut 0.058
doit 0.058
aurait 0.041
doivent 0.024
devons 0.017
devrais 0.013
</table>
<figureCaption confidence="0.946828">
Figure 7
</figureCaption>
<figure confidence="0.4232936">
Translation and fertility probabilities for should.
national
f t(f I e) 0 n(0 I e)
nationale 0.469 1 0.905
national 0.418 0 0.094
nationaux 0.054
nationales 0.029
Figure 8
Translation and fertility probabilities for national.
the
</figure>
<figureCaption confidence="0.916759">
Figure 9
</figureCaption>
<bodyText confidence="0.672844625">
f t(f I e) 0 n(0 I e)
le 0.497 1 0.746
la 0.207 0 0.254
les 0.155
l&apos; 0.086
ce 0.018
cette 0.011
Translation and fertility probabilities for the.
</bodyText>
<subsubsectionHeader confidence="0.407077">
farmers
</subsubsectionHeader>
<figureCaption confidence="0.547625">
Figure 10
</figureCaption>
<bodyText confidence="0.743682666666667">
f t(f l e) 0 n(0 I e)
agriculteurs 0.442 2 0.731
les 0.418 1 0.228
cultivateurs 0.046 0 0.039
producteurs 0.021
Translation and fertility probabilities for farmers.
</bodyText>
<page confidence="0.91525">
287
</page>
<table confidence="0.876733545454545">
Computational Linguistics Volume 19, Number 2
external
f t(f I e) 0 n(0 I e)
exterieures 0.944 1 0.967
exterieur 0.015 0 0.028
externe 0.011
exterieurs 0.010
Figure 11
Translation and fertility probabilities for external.
answer
f qf 1 e) 0 n(0 1 e)
reponse 0.442 1 0.809
repondre 0.233 2 0.115
repondu 0.041 0 0.074
a 0.038
solution 0.027
repondez 0.021
repondrai 0.016
reponde 0.014
Y 0.013
ma 0.010
Figure 12
Translation and fertility probabilities for answer.
oil
f t(f I e) 0 n(0 I e)
petrole 0.558 1 0.760
petrolieres 0.138 0 0.181
petroliere 0.109 2 0.057
le 0.054
petrolier 0.030
petroliers 0.024
huile 0.020
Oil 0.013
</table>
<figureCaption confidence="0.934398">
Figure 13
</figureCaption>
<bodyText confidence="0.924192">
Translation and fertility probabilities for oil.
</bodyText>
<page confidence="0.995781">
288
</page>
<note confidence="0.906619">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<table confidence="0.737768529411765">
former
f t(f I e) 0 n(0 I e)
ancien 0.592 1 0.866
anciens 0.092 0 0.074
ex 0.092 2 0.060
precedent 0.054
l&apos; 0.043
ancienne 0.018
ete 0.013
Figure 14
Translation and fertility probabilities for former.
not
f t(i. l e) 0 n(0 I e)
ne 0.497 2 0.735
pas 0.442 0 0.154
non 0.029 1 0.107
rien 0.011
</table>
<figureCaption confidence="0.880182">
Figure 15
</figureCaption>
<bodyText confidence="0.995286136363636">
Translation and fertility probabilities for not.
In Figure 17, two of the English words have fertility 0, one has fertility 2, and one,
embattled, has fertility 5. Embattled is another word, like nodding, that eludes the French
grasp and comes with a panoply of multi-word translations.
The final example, in Figure 18, has several features that bear comment. The second
word, Speaker, is connected to the sequence l&apos;Orateur. Like farmers above, it has trained
to produce both the word that we naturally think of as its translation and the associated
article. In our data, Speaker always has fertility 2 and produces equally often l&apos;Orateur
and le president. Later in the sentence, starred is connected to the phrase marquees de un
asterisque. From an initial situation in which each French word is equally probable as
a translation of starred, we have arrived, through training, at a situation where it is
possible to connect starred to just the right string of four words. Near the end of the
sentence, give is connected to donnerai, the first person singular future of donner, which
means to give. We should be more comfortable if both will and give were connected
to donnerai, but by limiting cepts to no more than one word, we have precluded this
possibility. Finally, the last 12 words of the English sentence, I now have the answer and
will give it to the House, clearly correspond to the last 7 words of the French sentence,
je donnerai la reponse a la Chambre, but, literally, the French is I will give the answer to
the House. There is nothing about now, have, and, or it, and each of these words has
fertility 0. Translations that are as far as this from the literal are rather more the rule
than the exception in our training data. One might cavil at the connection of la reponse
to the answer rather than to it. We do not.
</bodyText>
<sectionHeader confidence="0.577575" genericHeader="method">
6. Better Translation Models
</sectionHeader>
<bodyText confidence="0.948494">
Models 1-5 provide an effective means for obtaining word-by-word alignments of
translations, but as a means to achieve our real goal, which is translation, there is
</bodyText>
<page confidence="0.990928">
289
</page>
<figure confidence="0.996778380952381">
Computational Linguistics Volume 19, Number 2
What1 Eni
is2 vertu2
the3 de3
anticipated,&apos; les4
cost5 nouvelles5
of6 propositions6
administering7 quels
and8 est9
collecting9 len)
feesio cOutn
undern prevun
then dei3
newn administrationm
proposalm etm
â¢ 15 dem
perceptioni2
dem
les19
droits20
21
</figure>
<figureCaption confidence="0.958134">
Figure 16
</figureCaption>
<bodyText confidence="0.814471">
The best of 1.9 x 1025 alignments.
</bodyText>
<page confidence="0.961597">
290
</page>
<note confidence="0.515961">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<figure confidence="0.998582880952381">
Thei
secretary2
of3
state4
for5
external6
affairs7
comes8
in9
asio
then
Â°nen
supporter13
of14
then
embattled16
ministerr
ofis
yesterdayi9
Lei
secretaire2
de3
Etat4
a5
les6
Affaires7
exterieur8
se9
presenteio
commen
len
seuln
clefenseur14
den
1e16
ministrer
quiis
sei9
est2o
faitn
bousculer22
hier23
</figure>
<figureCaption confidence="0.934931">
Figure 17
</figureCaption>
<bodyText confidence="0.761051">
The best of 8.4 x 1029 alignments.
</bodyText>
<page confidence="0.928893">
291
</page>
<figure confidence="0.990800553191489">
Computational Linguistics Volume 19, Number 2
Mr.i
Speaker2
,3
if
we5
might6
return7
to8
starred9
questionsio
.11
112
nowi3
havem
then
answerm
andr
willn
giVel9
it20
ton
the22
house23
Monsieuri
l&apos;2
Orateur3
.4
si5
nous6
pouvons7
revenir8
a9
lesio
questionsn
marqueesi2
den
uni4
asterisquei5
.16
jer
donneraii8
1a19
reponse20
an
la22
chambre23
</figure>
<figureCaption confidence="0.962728">
Figure 18
</figureCaption>
<bodyText confidence="0.894352">
The best of 5.6 x 1031 alignments.
</bodyText>
<page confidence="0.991759">
292
</page>
<note confidence="0.914828">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.999832">
room for improvement. We have seen that by ignoring the morphological structure
of the two languages we dilute the strength of our statistical model, explaining, for
example, each of the several tens of forms of each French verb independently. We have
seen that by ignoring multi-word cepts, we are forced to give a false, or at least an
unsatisfactory, account of some features in many translations. And finally, we have
seen that our models are deficient, either in fact, as with Models 3 and 4, or in spirit,
as with Models 1, 2, and 5.
</bodyText>
<subsectionHeader confidence="0.999901">
6.1 The Truth about Deficiency
</subsectionHeader>
<bodyText confidence="0.9999633125">
We have argued in Section 2 that neither spiritual nor actual deficiency poses a serious
problem, but this is not entirely true. Let w(e) be the sum of Pr(f I e) over well-formed
French strings and let i(e) be the sum over ill-formed French strings. lit a deficient
model, w(e) + i(e) &lt; 1. We say that the remainder of the probability is concentrated
on the event failure and we write w(e) + i(e) + Pr(failureje) = 1. Clearly, a model is
deficient precisely when Pr(failurele) &gt; 0. If Pr(failurele) 0, but i(e) &gt; 0, then the
model is spiritually deficient. If w(e) were independent of e, neither form of deficiency
would pose a problem, but because our models have no long-term constraints, w(e)
decreases exponentially with 1. When computing alignments, even this creates no
problem because e and f are known. If, however, we are given f and asked to discover
e, then we will find that the product Pr(e) e) is too small for long English strings
as compared with short ones. As a result, we will improperly favor short English
strings. We can counteract this tendency in part by replacing Pr(fle) with c/ POI e)
for some empirically chosen constant c. This is treatment of the symptom rather than
treatment of the disease itself, but it offers some temporary relief. The cure lies in
better modeling.
</bodyText>
<subsectionHeader confidence="0.999899">
6.2 Viterbi Training
</subsectionHeader>
<bodyText confidence="0.999671434782609">
As we progress from Model 1 to Model 5, evaluating the expectations that give us
counts becomes increasingly difficult. For Models 1 and 2, we are able to include the
contribution of each of the (1 + 1)rn possible alignments exactly. For later models,
we include the contributions of fewer and fewer alignments. Because most of the
probability for each translation is concentrated by these models on a small number
of alignments, this suboptimal procedure, mandated by the complexity of the models,
yields acceptable results.
In the limit, we can contemplate evaluating the expectations using only a single,
probable alignment for each translation. When that alignment is the Viterbi alignment,
we call this Viterbi training. It is easy to see that Viterbi training converges: at each
step, we reestimate parameters so as to make the current set of Viterbi alignments as
probable as possible; when we use these parameters to compute a new set of Viterbi
alignments, we find either the old set or a set that is yet more probable. Since the
probability can never be greater than one, this process must converge. In fact, unlike
the EM algorithm in general, it must converge in a finite, though impractically large,
number of steps because each translation has only a finite number of alignments.
In practice, we are never sure that we have found the Viterbi alignment. If we
reinterpret the Viterbi alignment to mean the most probable alignment that we can
find rather than the most probable alignment that exists, then a similarly reinterpreted
Viterbi training algorithm still converges. We have already used this algorithm suc-
cessfully as a part of a system to assign senses to English and French words on the
basis of the context in which they appear (Brown et al. 1991a, 1991b). We expect to
use it in models that we develop beyond Model 5.
</bodyText>
<page confidence="0.996106">
293
</page>
<note confidence="0.661895">
Computational Linguistics Volume 19, Number 2
</note>
<subsectionHeader confidence="0.992163">
6.3 Multi-Word Cepts
</subsectionHeader>
<bodyText confidence="0.9999516">
In Models 1-5, we restrict our attention to alignments with cepts containing no more
than one word each. Except in Models 4 and 5, cepts play little role in our development.
Even in these models, cepts are determined implicitly by the fertilities of the words
in the alignment: words for which the fertility is greater than zero make up one-word
cepts; those for which it is zero do not. We can easily extend the generative process
upon which Models 3, 4, and 5 are based to encompass multi-word cepts. We need
only include a step for selecting the ceptual scheme and ascribe fertilities to cepts
rather than to words, requiring that the fertility of each cept be greater than zero.
Then, in Equation (29), we can replace the products over words in an English string
with products over cepts in the ceptual scheme.
When we venture beyond one-word cepts, however, we must tread lightly. An
English string can contain any of 42,005 one-word cepts, but there are more than
1.7 billion possible two-word cepts, more than 74 trillion three-word cepts, and so
on. Clearly, one must be discriminating in choosing potential multi-word cepts. The
caution that we have displayed thus far in limiting ourselves to cepts with fewer
than two words was motivated primarily by our respect for the featureless desert that
multi-word cepts offer a priori. The Viterbi alignments that we have computed with
Model 5 give us a frame of reference from which to expand our horizons to multi-word
cepts. By inspecting them, we can find translations for a given multi-word sequence.
We need only promote a multi-word sequence to cepthood when these translations
differ substantially from what we might expect on the basis of the individual words
that it contains. In English, either a boat or a person can be left high and dry, but in
French, un bateau is not left haut et sec, nor une personne haute et seche. Rather, a boat is
left echoue and a person en plan. High and dry, therefore, is a promising three-word cept
because its translation is not compositional.
</bodyText>
<subsectionHeader confidence="0.98752">
6.4 Morphology
</subsectionHeader>
<bodyText confidence="0.999445217391304">
We treat each distinct sequence of letters as a distinct word. In English, for example,
we recognize no kinship among the several forms of the verb to eat (eat, ate, eaten,
eats, and eating). In French, irregular verbs have many forms. In Figure 7, we have
already seen 7 forms of devoir. Altogether, it has 41 different forms. And there would
be 42 if the French did not inexplicably drop the circumflex from the masculine plural
past participle (dus), thereby causing it to collide with the first and second person
singular in the passÃ© simple, no doubt a source of endless confusion for the beleaguered
francophone.
The French make do with fewer forms for the multitude of regular verbs that are
the staple diet of everyday speech. Thus, manger (to eat), has only 39 forms (manger,
mange, manges,. . mangeassent). Models 1-5 must learn to connect the 5 forms of to eat
to the 39 forms of manger. In the 28,850, 104 French words that make up our training
data, only 13 of the 39 forms of manger actually appear. Of course, it is only natural
that in the proceedings of a parliament, forms of manger are less numerous than forms
of parler (to speak), but even for parler, only 28 of the 39 forms occur in our data. If we
were to encounter a rare form of one of these words, say, parlass ions or mangeassent, we
would have no inkling of its relationship to speak or eat. A similar predicament besets
nouns and adjectives as well. For example, composition is the among the most common
words in our English vocabulary, but compositions is among the least common words.
We plan to ameliorate these problems with a simple inflectional analysis of verbs,
nouns, adjectives, and adverbs, so that the relatedness of the several forms of the same
word is manifest in our representation of the data. For example, we wish to make
evident the common pedigree of the different conjugations of a verb in French and
</bodyText>
<page confidence="0.995295">
294
</page>
<note confidence="0.947922">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.999397">
in English; of the singular and plural, and singular possessive and plural possessive
forms of a noun in English; of the singular, plural, masculine, and feminine forms of
a noun or adjective in French; and of the positive, comparative, and superlative forms
of an adjective or adverb in English.
Thus, our intention is to transform (je mange la peche I I eat the peach) into, e.g., (je
manger, 13spres la peche I I eat,x3spres the peach). Here, eat is analyzed into a root, eat, and
an ending, x3spres, that indicates the present tense form used except in the third person
singular. Similarly, mange is analyzed into a root, manger, and an ending, 13spres, that
indicates the present tense form used for the first and third persons singular.
These transformations are invertible and should reduce the French vocabulary by
about 50% and the English vocabulary by about 20%. We hope that this will signifi-
cantly improve the statistics in our models.
</bodyText>
<sectionHeader confidence="0.737915" genericHeader="method">
7. Discussion
</sectionHeader>
<bodyText confidence="0.999892472222222">
That interesting bilingual lexical correlations can be extracted automatically from a
large bilingual corpus was pointed out by Brown et al. (1988). The algorithm that
they describe is, roughly speaking, equivalent to carrying out the first iteration of the
EM algorithm for our Model 1 starting from an initial guess in which each French
word is equally probable as a translation for each English word. They were unaware
of a connection to the EM algorithm, but they did realize that their method is not
entirely satisfactory. For example, once it is clearly established that in (La porte est
rouge I The door is red), it is red that produces rouge, one is uncomfortable using this
sentence as support for red producing porte or door producing rouge. They suggest
removing words once a correlation between them has been clearly established and then
reprocessing the resulting impoverished translations hoping to recover less obvious
correlations now revealed by the departure of their more prominent relatives. From
our present perspective, we see that the proper way to proceed is simply to carry out
more iterations of the EM algorithm. The likelihood for Model 1 has a unique local
maximum for any set of training data. As iterations proceed, the count for porte as a
translation of red will dwindle away.
In a later paper, Brown et al. (1990) describe a model that is essentially the same as
our Model 3. They sketch the EM algorithm and show that, once trained, their model
can be used to extract word-by-word alignments for pairs of sentences. They did not
realize that the logarithm of the likelihood for Model 1 is concave and, hence, has a
unique local maximum. They were also unaware of the trick by which we are able to
sum over all alignments when evaluating the counts for Models 1 and 2, and of the
trick by which we are able to sum over all alignments when transferring parameters
from Model 2 to Model 3. As a result, they were unable to handle large vocabularies
and so restricted themselves to vocabularies of only 9,000 words. Nonetheless, they
were able to align phrases in French with the English words that produce them as
illustrated in their Figure 3.
More recently, Gale and Church (1991a) describe an algorithm similar to the one
described in Brown et al. (1988). Like Brown et al., they consider only the simulta-
neous appearance of words in pairs of sentences that are translations of one another.
Although algorithms like these are extremely simple, many of the correlations between
English and French words are so pronounced as to fall prey to almost any effort to
expose them. Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why),
(chambre I house), and many others, simply cannot be missed. They shout from the data,
and any method that is not stone deaf will hear them. But many of the correlations
speak in a softer voice: to hear them clearly, we must model the translation process, as
</bodyText>
<page confidence="0.993266">
295
</page>
<note confidence="0.662722">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.998824379310345">
Brown et al. (1988) suggest and as Brown et al. (1990) and the current paper actually
do. Only in this way can one hope to hear the quiet call of (marquees d&apos;un asterisque
starred) or the whisper of (qui s&apos;est fait bousculer I embattled).
The series of models that we have described constitutes a mathematical embodi-
ment of the powerfully compelling intuitive feeling that a word in one language can
be translated into a word or phrase in another language. In some cases, there may
be several or even several tens of translations depending on the context in which the
word appears, but we should be quite surprised to find a word with hundreds of
mutually exclusive translations. Although we use these models as part of an auto-
matic system for translating French into English, they provide, as a byproduct, very
satisfying accounts of the word-by-word alignment of pairs of French and English
strings.
Our work has been confined to French and English, but we believe that this is
purely adventitious: had the early Canadian trappers been Manchurians later to be
outnumbered by swarms of conquistadores, and had the two cultures clung stubbornly
each to its native tongue, we should now be aligning Spanish and Chinese. We con-
jecture that local alignment of the component parts of any corpus of parallel texts is
inherent in the corpus itself, provided only that it be large enough. Between any pair
of languages where mutual translation is important enough that the rate of accumula-
tion of translated examples sufficiently exceeds the rate of mutation of the languages
involved, there must eventually arise such a corpus.
The linguistic content of our program thus far is scant indeed. It is limited to one
set of rules for analyzing a string of characters into a string of words, and another
set of rules for analyzing a string of words into a string of sentences. Doubtless even
these can be recast in terms of some information theoretic objective function. But it is
not our intention to ignore linguistics, neither to replace it. Rather, we hope to enfold
it in the embrace of a secure probabilistic framework so that the two together may
draw strength from one another and guide us to better natural language processing
systems in general and to better machine translation systems in particular.
</bodyText>
<sectionHeader confidence="0.921762" genericHeader="method">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999947916666667">
We would like to thank many of our
colleagues who read and commented on
early versions of the manuscript, especially
John Lafferty. We would also like to thank
the reviewers, who made a number of
invaluable suggestions about the
organization of the paper and pointed out
many weaknesses in our original
manuscript. If any weaknesses remain, it is
not because of their failure to point them
out, but because of our ineptness at
responding adequately to their criticisms.
</bodyText>
<sectionHeader confidence="0.866706" genericHeader="method">
References
</sectionHeader>
<reference confidence="0.9477385">
Baum, L. E. (1972). &amp;quot;An inequality and
associated maximization technique in
statistical estimation of probabilistic
functions of a Markov process.&amp;quot;
Inequalities, 3, 1-8.
Brown, Peter F.; Cocke, John; Della Pietra,
Stephen A.; Della Pietra, Vincent J.;
Jelinek, Frederick; Lafferty, John D.;
Mercer, Robert L.; and Roossin, Paul S.
(1990). &amp;quot;A statistical approach to machine
translation.&amp;quot; Computational Linguistics,
16(2), 79-85.
Brown, Peter F.; Cocke, John; Della Pietra,
Stephen A.; Della Pietra, Vincent J.;
Jelinek, Frederick; Mercer, Robert L.; and
Roossin, Paul S. (1988). &amp;quot;A statistical
approach to language translation.&amp;quot; In
Proceedings, 12th International Conference on
Computational Linguistics (COLING-88).
Budapest, Hungary, August 1988, 71-76.
Brown, Peter F.; Della Pietra, Stephen A.;
Della Pietra, Vincent J.; and Mercer,
Robert L. (1991a). &amp;quot;A statistical approach
to sense disambiguation in machine
translation.&amp;quot; In Fourth DARPA Workshop on
Speech and Natural Language. Morgan
Kaufmann Publishers, Inc., 146-151.
Brown, Peter F.; Della Pietra, Stephen A.;
Della Pietra, Vincent J.; and Mercer,
Robert L. (1991b). &amp;quot;Word sense
disambiguation using statistical
methods.&amp;quot; In Proceedings, 29th Annual
</reference>
<page confidence="0.998644">
296
</page>
<note confidence="0.992168">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<reference confidence="0.958935763636364">
Meeting of the Association for Computational
Linguistics. Berkeley CA, June 1991,
265-270.
Brown, Peter F.; Della Pietra, Vincent J.;
deSouza, Peter V.; and Mercer, Robert L.
(1990). &amp;quot;Class-based n-gram models of
natural language.&amp;quot; In Proceedings of the IBM
Natural Language ITI. Paris, France, March
1990,283-298. Also in Computational
Linguistics 18(4), 1992,467-479.
Brown, Peter F.; Lai, Jennifer C.; and Mercer,
Robert L. (1991). &amp;quot;Aligning sentences in
parallel corpora.&amp;quot; In Proceedings, 29th
Annual Meeting of the Association for
Computational Linguistics. Berkeley CA,
June 1991,169-176.
Dempster, A. P.; Laird, N. M.; and Rubin,
D. B. (1977). &amp;quot;Maximum likelihood from
incomplete data via the EM algorithm.&amp;quot;
Journal of the Royal Statistical Society, 39(B),
1-38.
Gale, William A.; and Church, Kenneth W.
(1991a). &amp;quot;Identifying word
correspondences in parallel texts.&amp;quot; In
Fourth DARPA Workshop on Speech and
Natural Language. Morgan Kaufmann
Publishers, Inc., 152-157.
Gale, William A.; and Church, Kenneth W.
(1991b). &amp;quot;A program for aligning
sentences in bilingual corpora.&amp;quot; In
Proceedings, 29th Annual Meeting of the
Association for Computational Linguistics.
Berkeley CA, June 1991,177-184.
Ito, Kiyoshi, editor. (1987). Encyclopedic
Dictionary of Mathematics, Second Edition.
MIT Press.
Kay, Martin (1991). &amp;quot;Text-translation
alignment.&amp;quot; In ACH/ALLC &apos;91: &amp;quot;Making
Connections&amp;quot; Conference Handbook. Tempe
AZ, March 1991.
Maltese, G., and Mancini, F. (1992). &amp;quot;An
automatic technique to include
grammatical and morphological
information in a trigram-based statistical
language model.&amp;quot; In Proceedings, IEEE
International Conference on Acoustics, Speech
and Signal Processing. San Francisco CA,
March 1992, I-157-1-160.
Warwick, Susan, and Russell, Graham
(1990). &amp;quot;Bilingual concordancing and
bilingual lexicography.&amp;quot; In EURALEX 4th
International Congress. Malaga, Spain.
Weaver, W. (1955). Translation (1949). In
Machine Translation of Languages. MIT
Press.
</reference>
<subsectionHeader confidence="0.698969">
Appendix A: Table of Notation
</subsectionHeader>
<bodyText confidence="0.999500666666667">
English vocabulary
English word
English string
random English string
length of e
random length of E
position in e, i= 0, 1, ... ,1
word i of e
the empty cept
</bodyText>
<equation confidence="0.784247">
eie2 e,
</equation>
<bodyText confidence="0.957135875">
French vocabulary
French word
French string
random French string
length of f
random length of F
position in f, j= 1, 2, ... ,m
word j of f
</bodyText>
<page confidence="0.433384">
fif2
</page>
<bodyText confidence="0.309122">
alignment
</bodyText>
<page confidence="0.863427">
297
</page>
<figure confidence="0.7958033">
Computational Linguistics Volume 19, Number 2
a position in e connected to position j of f for
alignment a
aia2 aj
number of positions of f connected to position i of e
0102 â¢ â¢ â¢ Oi
tableauâa sequence of tablets, where a tablet is a
sequence of French words
Ti tablet i of T
Tio TOT1 â¢ â¢ â¢ Tt
</figure>
<bodyText confidence="0.912696">
cb length of Ti
position within a tablet, k =1, 2, ... ,
Tik word k of Ti
Ir a permutation of the positions of a tableau
ik position in f for word k of Ti for permutation 7r
</bodyText>
<equation confidence="0.910291">
7ri ir1 lri2.â¢ 7rik
V(f I e) Viterbi alignment for (f I e)
Vi,_i(f I e) Viterbi alignment for (f I e) with ij pegged
</equation>
<bodyText confidence="0.906924294117647">
N-(a) neighboring alignments of a
neighboring alignments of a with ij pegged
b(a) alignment in JV(a) with greatest probability
bÂ°Â° (a) alignment obtained by applying b repeatedly to a
bi_1(a) alignment in .Mi (a) with greatest probability
bi&amp;quot;.Â° i(a) alignment obtained by applying bi-1 repeatedly to a
A(e) class of English word e
B(f) class of French word f
A] displacement of a word in f
vacancies in f
Pt first position in e to the left of i that has non-zero
fertility
C, average position in f of the words connected to
position i of e
[i] position in e of the ith one word cept
C[i]
Po translation model P with parameter values
</bodyText>
<table confidence="0.5288425">
C(f, e) empirical distribution of a sample
IP (Fe) log-likelihood objective function
R(i3o, Po) relative objective function
t(f I e) translation probabilities (all models)
</table>
<page confidence="0.912621">
298
</page>
<note confidence="0.485597">
Peter F. Brown et al.
</note>
<figure confidence="0.989367888888889">
â¬(m I 1)
n(0 I e)
Po, pi
a(i j,l,m)
d(j I i, 1, m)
cli(Aj I A,8)
d&gt;i(Aj I B)
cli(Aj I 8,v)
d&gt;i(Aj I B,v)
</figure>
<subsectionHeader confidence="0.798664">
The Mathematics of Statistical Machine Translation
</subsectionHeader>
<bodyText confidence="0.999482230769231">
string length probabilities (Models 1 and 2)
fertility probabilities (Models 3, 4, and 5)
fertility probabilities for eo (Models 3, 4, and 5)
alignment probabilities (Model 2)
distortion probabilities (Model 3)
distortion probabilities for the first word of a tablet
(Model 4)
distortion probabilities for the other words of a tablet
(Model 4)
distortion probabilities for the first word of a tablet
(Model 5)
distortion probabilities for the other words of a tablet
(Model 5)
</bodyText>
<sectionHeader confidence="0.800428" genericHeader="method">
Appendix B: Summary of Models
</sectionHeader>
<bodyText confidence="0.999814">
We collect here brief descriptions of our various translation models and the formulae
needed for training them.
</bodyText>
<subsectionHeader confidence="0.873256">
B.1 Translation Models
</subsectionHeader>
<bodyText confidence="0.999601666666667">
An English-to-French translation model P with parameters 9 is a formula for calculating
a conditional probability, or likelihood, P0 (f I e), for any string f of French words and
any string e of English words. These probabilities satisfy
</bodyText>
<equation confidence="0.93967">
Po(f I e) 0, Po(failure I e) &gt; 0,
Po(failure I e) + E pe (f I e) 1, (50)
</equation>
<bodyText confidence="0.998048142857143">
where the sum ranges over all French strings f, and failure is a special symbol not in
the French vocabulary. We interpret Po (f e) as the probability that a translator will
produce f when given e, and P0 (failure I e) as the probability that he will produce no
translation when given e. We call a model deficient if P (failure I e) is greater than zero
for some e.
Log-Likelihood Objective Function. The log-likelihood of a sample of translations
(f(s), e(s)), s = 1, 2, ... , S, is
</bodyText>
<equation confidence="0.937579">
0(130) = S-1 E log Pe(f(s) e(s)) = E C(f , e) log Pe(f I e). (51)
s=1 f,e
</equation>
<bodyText confidence="0.9889285">
Here C(f, e) is the empirical distribution of the sample, so that C(f,e) is 1/S times the
number of times (usually 0 or 1) that the pair (f, e) occurs in the sample. We determine
values for the parameters 9 so as to maximize this log-likelihood for a large training
sample of translations.
</bodyText>
<page confidence="0.990914">
299
</page>
<figure confidence="0.634346">
Computational Linguistics Volume 19, Number 2
Hidden Alignment Models. For the models that we present here, we can express
Po (f I e) as a sum of the probabilities of hidden alignments a between e and f:
Po(f I e) Po(f,a I e). (52)
</figure>
<bodyText confidence="0.95358825">
For our models, the only alignments that have positive probability are those for which
each word of f is connected to at most one word of e.
Relative Objective Function. We can compare hidden alignment models Po and Po
using the relative objective function
</bodyText>
<equation confidence="0.7473225">
R(po,pe) EC(f,e) EP-0(a f,e) log Pii:((ff: aa ee)) , (54)
f,e
</equation>
<bodyText confidence="0.9656765">
where P -0(a I f, e) = (a, f I e)/P0(f I e). Note that R(P6, Po) = 0. R is related to by
Jensen&apos;s inequality
</bodyText>
<equation confidence="0.965906625">
75(P9) 0(i56) + R(13o, Pe), (55)
which follows because the logarithm is concave. In fact, for any e and f,
EPoca f, e) log Pe(f&apos; a I e) &lt; lo EPa -( )139(f&apos; a I e)
g f , e (56)
a Pei(f, a I e) a Po(Ca I e)
Po(f I e) , log Pe(f I e) â log Po(f I e).
log
Pii(f e)
</equation>
<bodyText confidence="0.99657">
Summing over e and f and using the Definitions (51) and (54) we arrive at Equa-
tion (55).
</bodyText>
<subsectionHeader confidence="0.800619">
B.2 Iterative Improvement
</subsectionHeader>
<bodyText confidence="0.99988025">
We cannot create a good model or find good parameter values at a stroke. Rather
we employ a process of iterative improvement. For a given model we use current
parameter values to find better ones, and in this way, from initial values we find
locally optimal ones. Then, given good parameter values for one model, we use them
to find initial parameter values for another model. By alternating between these two
steps we proceed through a sequence of gradually more sophisticated models.
Improving Parameter Values. From Jensen&apos;s inequality (55), we see that 0(Po) is
greater than 0(P0) if R(P0-, Po) is positive. With P= P. this suggests the following
</bodyText>
<equation confidence="0.755300666666667">
1 The reader will notice a similarity between R(Po, Po) and the relative entropy
D(p, il) = EP(x)log P(x)
q(x)
</equation>
<bodyText confidence="0.9138755">
between probability distributions p and q. However, whereas the relative entropy is never negative, R
can take any value. The inequality (55) for R is the analog of the inequality D &gt; 0 for D.
</bodyText>
<figure confidence="0.700205">
(57)
(53)
</figure>
<page confidence="0.977125">
300
</page>
<note confidence="0.894142">
Peter E Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.988492">
iterative procedure, known as the EM Algorithm (Baum 1972; Dempster, Laird, and
Rubin 1977), for finding locally optimal parameter values 0 for a model P:
</bodyText>
<listItem confidence="0.96832">
0. Choose some initial values O.
1. Repeat Steps 2-3 until convergence.
2. With 0 fixed, find the values 0 that maximize R(P-O, PO.
3. Replace d by O.
</listItem>
<bodyText confidence="0.9779342">
Note that for any a, R(Po, Po) is non-negative at its maximum in 0, since it is zero for
= O. Thus 0(P0) will not decrease from one iteration to the next.
Going From One Model to Another. Jensen&apos;s inequality also suggests a method for
using parameter values 0 for one model I&apos; to find initial parameter values 0 for another
model P:
</bodyText>
<listItem confidence="0.880303">
4. With 15 and 0 fixed, find the values 0 that maximize
R(Po, Po).
</listItem>
<bodyText confidence="0.997218833333333">
In contrast to the case where f&apos; = P, there may not be any 0 for which R(P0, Po) is
non-negative. Thus, it could be that, even for the best 0, 11)(130) &lt; 0(1)0).
Parameter Reestimation Formulae. In order to apply these algorithms, we need to
solve the maximization problems of Steps 2 and 4. For the models that we consider,
we can do this explicitly. To exhibit the basic form of the solution, we suppose Po is a
model given by
</bodyText>
<equation confidence="0.545477">
Pe (f, a I e) = H e(w)c(-,a&apos;f&apos;e), (58)
wE0
</equation>
<bodyText confidence="0.99347">
where the OM, w E Q, are real-valued parameters satisfying the constraints
</bodyText>
<equation confidence="0.988178">
0(w) 0, E 0(w) =- 1, (59)
wEs2
</equation>
<bodyText confidence="0.999873666666667">
and for each w and (a, f, e), c(w ; a, f, e) is a non-negative integer.&apos; We interpret 0(w) as
the probability of the event w and c(w; a, f, e) as the number of times that this event
occurs in (a, f, e). Note that
</bodyText>
<equation confidence="0.529987">
c(w; a, f, e) = 0(w) a0(w) log Po (f, a I e). (60)
</equation>
<bodyText confidence="0.981799">
The values for 0 that maximize the relative objective function R(I50, Po) subject to
the contraints (59) are determined by the Kuhn-Tucker conditions
</bodyText>
<equation confidence="0.8860925">
a -
w E (61)
</equation>
<bodyText confidence="0.980622">
where A is a Lagrange multiplier, the value of which is determined by the equality
constraint in Equation (59). These conditions are both necessary and sufficient for a
</bodyText>
<footnote confidence="0.689981">
2 More generally, we can allow c(w; a, f, e) to be a non-negative real number.
</footnote>
<page confidence="0.991109">
301
</page>
<note confidence="0.612142">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.882837333333333">
maximum since R(P6, Po) is a concave function of the 0(w). By multiplying Equation
(61) by 0(w) and using Equation (60) and Definition (54) of R, we obtain the parameter
reestimation formulae
</bodyText>
<equation confidence="0.9677964">
0(w) .16(w), A =E E-6(w), (62)
wEc2
Ea(w) E C(f, e)E6(w;f,e), (63)
&apos;e-6-1(W;f,e) E P6(aI f, e)c(w; a, f, e). (64)
a
</equation>
<bodyText confidence="0.999850666666667">
We interpret E o(w ;f , e) as the expected number of times, as computed by the model
PO, that the event w occurs in the translation of e to f. Thus 0(w) is the (normalized)
expected number of times, as computed by model PO, that w occurs in the translations
of the training sample.
We can easily generalize these formulae to allow models of the form (58) for which
the single equality constraint in Equation (59) is replaced by multiple constraints
</bodyText>
<equation confidence="0.998722">
E0(w) =, 1, = 1,2, ... , (65)
</equation>
<bodyText confidence="0.98131">
where the subsets Sti, p --= 1, 2, ... form a partition of Q. We need only modify Equation
</bodyText>
<equation confidence="0.78694">
(62) by allowing a different A. for each p: if w E ft,, then
0(w) = A,-1E6(w), A = (66)
weszp,
</equation>
<subsectionHeader confidence="0.8487765">
8.3 Model 1
Parameters.
</subsectionHeader>
<bodyText confidence="0.460220333333333">
E(m I 1) string length probabilities
t(f I e) translation probabilities
Here f E ,F; e E E or e = eo; 1 =- ...; and m = 1,2, ....
</bodyText>
<subsectionHeader confidence="0.437712">
General Formula.
</subsectionHeader>
<bodyText confidence="0.3559005">
Pe(f, a I e) = Po(m I e)Po(a I m, e)Po(f I a, m, e) (67)
Assumptions.
</bodyText>
<equation confidence="0.942484">
Po(m = E(m Il) (68)
Po(a I m,e) = (/ + 1)&apos; (69)
Pe(f I a,m,e) = Ht(fi I ead (70)
j=1
</equation>
<bodyText confidence="0.516629">
This model is not deficient.
</bodyText>
<page confidence="0.991336">
302
</page>
<note confidence="0.948791">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.793124">
Generation. Equations (67)-(70) describe the following process for producing f from e:
</bodyText>
<listItem confidence="0.9040152">
1. Choose a length m for f according to the probability distribution E(m I 1).
2. For each j = 1,2, ... , m, choose al from 0, I, 2, ... / according to the
uniform distribution.
3. For each j = 1,2, ... , m, choose a French word fl according to the
distribution t(f) Iea,).
</listItem>
<bodyText confidence="0.9817985">
Useful Formulae. Because of the independence assumptions (68)-(70), we can calcu-
late the sum over alignments (52) in closed form:
</bodyText>
<equation confidence="0.99386075">
Pe(f = &gt; Pe(f, a I e) (71)
a
m
= e(m /)(/ + 1)- E Ht(f eat) (72)
a1=0 j=1
m 1
E(m I 1)(1 + 1)-11E t(fi e,). (73)
1=1 i=0
</equation>
<bodyText confidence="0.98479775">
Equation (73) is useful in computations since it involves only 0(/m) arithmetic opera-
tions, whereas the original sum over alignments (72) involves 0(/m) operations.
Concavity. The objective function (51) for this model is a strictly concave function of
the parameters. In fact, from Equations (51) and (73),
</bodyText>
<equation confidence="0.917088">
Ip(Pe) = E C(f, e) E log E iv; + E C(f, e) log E(m I 1) + constant (74)
f,e j=1 i=0 f,e
</equation>
<bodyText confidence="0.9995842">
which is clearly concave in E(m I 1) and t(f I e) since the logarithm of a sum is concave,
and the sum of concave functions is concave.
Because &apos;;/) is concave, it has a unique local maximum. Moreover, we will find this
maximum using the EM algorithm, provided that none of our initial parameter values
is zero.
</bodyText>
<subsectionHeader confidence="0.4092835">
B.4 Model 2
Parameters.
</subsectionHeader>
<bodyText confidence="0.4078512">
E(m I 1) string length probabilities
t(f I e) translation probabilities
a(i I j,l,m) alignment probabilities
Here i= 0, . ,1; and j = 1,. , m.
General Formula.
</bodyText>
<note confidence="0.205459">
Pe (f, a I e) = Pe(m e)Pe(a I m, e)Pgf a, m, e) (75)
</note>
<page confidence="0.99404">
303
</page>
<figure confidence="0.3507395">
Computational Linguistics Volume 19, Number 2
Assumptions.
</figure>
<equation confidence="0.92610575">
Pe(m I e) â¢ E(m l) (76)
Po(a I m, e) - Ha(ai I j,l,m)
(77)
Pe(f I a, ,e) = H ty; I eai) (78)
</equation>
<bodyText confidence="0.891366">
This model is not deficient. Model 1 is the special case of this model in which the
alignment probabilities are uniform: a(i = (I + 1)-1 for all i.
Generation. Equations (75)-(78) describe the following process for producing f from e:
</bodyText>
<listItem confidence="0.917483">
1. Choose a length m for f according to the distribution c(m II).
2. For each] = 1,2, ... , m, choose ai from 0,1,2, ... / according to the
distribution a(al I j,1,m).
3. For each], choose a French word fj according to the distribution t(f; I ea,).
</listItem>
<bodyText confidence="0.920996">
Useful Formulae. Just as for Model 1, the independence assumptions allow us to
calculate the sum over alignments (52) in closed form:
</bodyText>
<equation confidence="0.978563714285714">
Po (f I e) =EP0(f, a I e) (79)
a
m
c(mI 1)E E Htv,I eada(ai I j,l,m) (80)
ai=o a,=0 j=1
E(In I OH t(fi I ei)a(i I j,l,m). (81)
j=1 i=o
</equation>
<bodyText confidence="0.988386">
By assumption (77) the connections of a are independent given the length m of f.
Using Equation (81) we find that they are also independent given f:
</bodyText>
<equation confidence="0.674051">
1319 (a If, e) = Hpe(ai f, e), (82)
</equation>
<bodyText confidence="0.942154">
where
</bodyText>
<equation confidence="0.649593">
190(i I j, f, e) =&amp;quot;-Y(i, j, f, e) with 7(j, e) = t(fi I ei)a(i j,l,m). (83)
f, e)
</equation>
<bodyText confidence="0.8809525">
Viterbi Alignment. For this model, and thus also for Model 1, we can express in
closed form the Viterbi alignment V(f I e) between a pair of strings (f, e):
</bodyText>
<equation confidence="0.597345">
V(f I e)1 = argmax t(fi I ei)a(i I j,l,m). (84)
</equation>
<page confidence="0.996579">
304
</page>
<note confidence="0.943986">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.975161333333333">
Parameter Reestimation Formulae. We can find the parameter values 0 that maximize
the relative objective function R(Po, Po) by applying the considerations of Section B.2.
The counts c(w; a, f, e) of Equation (58) are
</bodyText>
<construct confidence="0.511983">
c(f I e ;a, f, E6(e,eaj)6(f,fi), (85)
c(i j,l,m; a, f, e) = (86)
</construct>
<bodyText confidence="0.927576666666667">
We obtain the parameter reestimation formulae for t(f I e) and a(i I j,l,m) by using
these counts in Equations (62)â(66).
Equation (64) requires a sum over alignments. If PO satisfies
</bodyText>
<equation confidence="0.892254">
iSe(aI f, e) -= 1113-6(ai I j, f, e), (87)
</equation>
<bodyText confidence="0.992848">
as is the case for Models 1 and 2 (see Equation (82)), then this sum can be calculated
explicitly:
</bodyText>
<construct confidence="0.487464">
o(f e; f, e) = m
-ed(i j;f,e) E E Poo j, f, e)S(e, ei)8(f,fi),
iO j=i
e(i I j, f, e).
</construct>
<bodyText confidence="0.6273425">
Equations (85)â(89) involve only 0(/m) arithmetic operations, whereas the sum over
alignments involves 0(/m) operations.
</bodyText>
<subsectionHeader confidence="0.3550385">
B.5 Model 3
Parameters.
</subsectionHeader>
<bodyText confidence="0.953436833333333">
t(f e) translation probabilities
n(cb e) fertility probabilities
Po, pi fertility probabilities for eo
d(jl id,m) distortion probabilities
Here cAâ¢ = 0,1,2, â¢ â¢ .
General Formulae.
</bodyText>
<equation confidence="0.682106166666667">
Peer, 71- = I e)Pe(T I0,06(7r I T, e) (90)
Po(f, a I = E (91)
(r,r)E(f,a)
Here (f, a) is the set of all (or, 7r) consistent with (f, a):
(r, (f, a) if for all i = 0,1,... ,l and k = 1,2,
irrik = Tik and airik iâ¢ (92)
</equation>
<page confidence="0.99367">
305
</page>
<figure confidence="0.5084215">
Computational Linguistics Volume 19, Number 2
Assumptions.
</figure>
<equation confidence="0.9661674">
NI e) no(oo E cb,) H n(0, I ei) (93)
O
1=1 i=1
I 4),
Pe(T I (1),e) = Hllt(r,, e,) (94)
i=0
1 Oi
â1 HIT derik I i,l,m)
Pe(7r e) (95)
Oo! i=1 k=1
</equation>
<bodyText confidence="0.949633">
where
</bodyText>
<figure confidence="0.8997275">
no(Oo I () ne-4&gt;o cbo (96)
00
</figure>
<reference confidence="0.751469">
In Equation (95) the factor of 1/00! accounts for the choices of irok, k = 1, 2, ... , (/)0. This
model is deficient, since
Pe(failure I T, CP, e) 1 - Pe(ir I -r, 4), e) &gt; O. (97)
Generation. Equations (90)-(95) describe the following process for producing f or
failure from e:
1. For each i = 1, 2, ... ,l, choose a length Oi for Ti according to the
distribution n(01 I e1).
</reference>
<listItem confidence="0.780865181818182">
2. Choose a length 00 for To according to the distribution no(cbo I ELI. 0i).
3. Let m = + ELI cb,.
4. For each i = 0, 1, , I and each k = 1,2, ... , 0i, choose a French word Tik
according to the distribution t(Tik I ei).
5. For each i = 1, 2, ... ,l and each k = 1, 2, ... , 0â choose a position 7r,k from
1, , m according to the distribution d(7rik I i, 1, m).
6. If any position has been chosen more than once then return failure.
7. For each k = 1, 2, ... , 00, choose a position 7rok from the cbo - k + 1
remaining vacant positions in 1, 2, ... , m according to the uniform
distribution.
8. Let f be the string with fru, =
</listItem>
<reference confidence="0.508193571428571">
Useful Formulae. From Equations (93)-(95) it follows that if (T, Tr) is consistent with
(f, a) then
Pe(T I e) --= qt.; I ea,),
j=1.
1
Pe (7r 7, = H
cbo!
</reference>
<page confidence="0.879449">
j:aj00
306
</page>
<note confidence="0.829885">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.999165">
In Equation (99), the product runs over all] = 1,2, ... , m except those for which aâ¢ 0.
By summing over all pairs (r, ir) consistent with (f, a) we find
</bodyText>
<equation confidence="0.96367">
(f, a I e) =E Pe(r,r I e) (100)
(7,70E(f,a)
1 )
no (00 Ecbi H n(q5i ei)Oi! t (fi ea) H d(j Iaj,l,m). (101)
i=1 i=1 j=1 j:(710
</equation>
<bodyText confidence="0.993954">
The factors of 0,! in Equation (101) arise because there are ft=o cbi! equally probable
terms in the sum (100).
Parameter Reestimation Formulae. We can find the parameter values U that maximize
the relative objective function R(PO, Po) by applying the considerations of Section B.2.
The counts c(o.); a, f, e) of Equation (58) are
</bodyText>
<equation confidence="0.94284925">
c(f I e; a, f, E S(e,eâi)S(f,fi), (102)
j=1
c(j I i,l,m; a, f, e) = 8(i, aj), (103)
c(0I e ; a, f, e) = E (e , ei)S(0, 0i). (104)
</equation>
<bodyText confidence="0.804798461538461">
We obtain the parameter reestimation formulae for t(f I e), a(j I i,1, m), and t(q5 I e) by
using these counts in Equations (62)â(66).
Equation (64) requires a sum over alignments. If Pti satisfies
ti(a If,e)=14 ( a; I , e), (105)
j=1
as is the case for Models 1 and 2 (see Equation (82)), then this sum can be calculated
explicitly for &apos;et-,(f e;f,e) and Eo(jI i;f,e):
-ea(f I e;f,e) m
E-6(j i;f,e) EEpo(i I], f, e)5(e, ei)6(f Jj),
i=o 1=1
ijo(i
Unfortunately, there is no analogous formula for Eo(0 I e; f, e). Instead we must be
content with
</bodyText>
<equation confidence="0.985946">
1 m
EO(0 I e;f, e) =0
E 6 (e, ei)11(1 â To o(i I ,,e) E H adc(f, ON
i=1 j=1 l&apos;Ero k--.1
(_pk+i 1 m
ctik(f, e) =
k!
&amp;quot;
j=1
N ( f , e ) _ I) o (i I j, f, e)
1 â Po (i I j, f, e) .
</equation>
<page confidence="0.98671">
307
</page>
<note confidence="0.358573">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.938916833333333">
In Equation (108), r denotes the set of all partitions of cb.
Recall that a partition of 0 is a decomposition of 0 as a sum of positive integers.
For example, 0 = 5 has 7 partitions since 1 + 1 + 1 + 1 + 1 = 1 + 1 + 1 + 2 = 1 + 1 + 3 =
1 + 2 + 2 = 1 + 4 = 2 + 3 = 5. For a partition y, we let -yk be the number of times
that k appears in the sum, so that 0 = k-y. If -y is the partition corresponding
to 1 + 1 + 3, then = 2, &apos;y3 = 1, and -yk = 0 for k other than 1 or 3. We adopt the
convention that ro consists of the single element -y with -yk = 0 for all k.
Equation (108) allows us to compute the counts -4(0 I e; f, e) in 0(//n + 0g) op-
erations, where g is the number of partitions of 0. Although g grows with 0 like
(400)-1 exp 7A/20/3 [11], it is manageably small for small 0. For example, 0 = 10
has 42 partitions.
Proof of Formula (108). Introduce the generating functional
</bodyText>
<equation confidence="0.730137666666667">
00
G(x I e,f,e) =E4(cbI e;f,e)x&lt;15,
o=o
</equation>
<bodyText confidence="0.763221">
where x is an indeterminant. Then
</bodyText>
<equation confidence="0.997392785714286">
00 m
G(x e, f, e) = EEâ¢â¢â¢E11,34-,(ajj, f, e) 6(e, e)6(0, 00? (112)
sb=0a1=0 a,,,=0 j=1 i=1
1 I m
E .5(e, ei)E â¢ â¢ â¢ E 11136.(ai j,f,e)?i (113)
i=1 ai=0 a,,,=0 j=1
I / m
E 5(e, e1) â¢ â¢ â¢ E JJ (a I j, f, e)x6(i4li) (114)
i=1 a1=0 am=0 j=1
m /
= E 6(e, e1) JJ EP 6(a I j, f, e)x6(j&apos;a) (115)
i=1 j=1 a=0
= E 6(e, ei) â fio(i j,f,e)+ x/36(i I j, f, e)) (116)
E (e, e) H(1 - po(i j, f, e)) H(1+ /34(f,e)x). (117)
</equation>
<bodyText confidence="0.997101">
To obtain Equation (113), rearrange the order of summation and sum over 0 to elim-
inate the 6-function of 0. To obtain Equation (114), note that 0, = Em1 6(i, a) and so
i=
x4).&apos; flr X6(j&apos;al). To obtain Equation (115), interchange the order of the sums on a]
/-=-1
and the product on j. To obtain Equation (116), note that in the sum on a, the only
term for which the power of x is nonzero is the one for which a = i.
Now note that for any indeterminants x, yl, y2, ,
</bodyText>
<equation confidence="0.937244666666667">
H(1 Â± yjx) = Exo E H zk&amp;quot;ik
j=1 =0 rErd, Ic=1
k+1 m
</equation>
<bodyText confidence="0.914161">
where zk = (-1)
</bodyText>
<footnote confidence="0.37224">
(Y1)k
</footnote>
<page confidence="0.819743">
j=1
308
</page>
<note confidence="0.822205">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
</note>
<bodyText confidence="0.761345">
This follows from the calculation
</bodyText>
<equation confidence="0.970174647058824">
Hm m 00 ( _ 1 )k+i (yjx)k
(1 + yix) = exp E log(1 + yix) = exp EE
j=1 j=1 j=1 k=1 k
Do
&amp;quot; i. ( &amp;quot;
=. exp Ezkxk=Eân, E ZkX1c) n
k=1 n=0 k=1
co ,
ico
En-jEE ( n ) 1-1(4X1c)&apos;Y
7172 â¢ â¢ â¢ k
= .. .
n=0 71 72 k=1
oo oo
-= ZOk
E Xck E H .
-yk!
</equation>
<bodyText confidence="0.987053375">
The reader will notice that the left-hand side of Equation (120) involves only powers
of x up to m, while Equations (121)â(122) involve all powers of x. This is because the
zk are not algebraically independent. In fact, for &gt; m, the coefficient of x0 on the
right-hand side of Equation (122) must be zero. It follows that we can express zâk as a
polynomial in zk, k =- 1,2, â¢ â¢ â¢ , mâ¢
Using Equation (118) we can identify the coefficient of x4&apos; in Equation (117). We
obtain Equation (108) by combining Equations (117), (118), and the definitions (109)â
(111) and (119).
B.6 Model 4 translation probabilities
Parameters. fertility probabilities
qt. e) fertility probabilities for e0
n(0 e) distortion probabilities for the first word of a tablet
Po, P1 distortion probabilities for the other words of a tablet
cli(64 I A,13)
d&gt;i(Aj B)
Here 64 is an integer; A is an English class; and B is a French class.
</bodyText>
<sectionHeader confidence="0.534505" genericHeader="method">
General Formulae.
</sectionHeader>
<equation confidence="0.902658142857143">
Pe(T,7r I e)=-- P9(0 I e)Pe(r I 0, e)Pe(r -r,(/),e)
Pe(f, a I e)
E Po(r,7r I e)
(r,,r)E0,a
Assumptions.
NO I = no (00 ) I Eoi n(c5i I ei)
oi
Pe(r I 4),e) -= H 11 t(rik I ei)
i=0 k=1
1 r-r
Po (71&amp;quot; I T , e) =-- â Huyiwrik)
Oo!
0=0 7Erok =1
i=1 k=1
</equation>
<page confidence="0.996687">
309
</page>
<note confidence="0.383021">
Computational Linguistics Volume 19, Number 2
</note>
<bodyText confidence="0.974744">
where
</bodyText>
<equation confidence="0.953093">
( in&apos; ) m&apos;-4.0 00 (128)
no(Oo I m&apos;) = Oo PÂ° P1 &apos;
{ di(j - A(ep,),Ber,i)) if k = 1
Pik(i) -= (129)
- 7rik-1 I B(Tik)) if k&gt; 1 â¢
</equation>
<bodyText confidence="0.9999495">
In Equation (129), p, is the first position to the left of i for which c/;â¢i &gt; 0, and cp is the
ceiling of the average position of the words of rp:
</bodyText>
<equation confidence="0.854843666666667">
pi = max{i&apos; : &gt; 0}, cp = Op-1 . (130)
i&apos;&lt;1
k=1
This model is deficient, since
PoVailure I T, 4),e) 1 - E P0(7r I T, 4),e) &gt; 0. (131)
â¢71-
</equation>
<bodyText confidence="0.969839545454545">
Note that Equations (125), (126), and (128) are identical to the corresponding formulae
(93), (94), and (96) for Model 3.
Generation. Equations (123)-(127) describe the following process for producing f or
failure from e:
1-4. Choose a tableau T by following Steps 1-4 for Model 3,
5. For each i =- 1,2,... ,l and each k = 1,2,... , Oi choose a position
&amp;quot;ffik as follows.
If k 1 then choose 7r1 according to the distribution
A(e p,), B(m)).
If k&gt; 1 then choose 7rik greater than rk1 according to
the distribution
</bodyText>
<subsubsectionHeader confidence="0.364089">
d&gt;i(rik - B(&apos;rik))â¢
</subsubsectionHeader>
<bodyText confidence="0.877185111111111">
6-8. Finish generating f by following Steps 6-8 for Model 3.
B.7 Model 5 translation probabilities
Parameters. fertility probabilities
t(f I e) fertility probabilities for e0
n(0 e) distortion probabilities for the first word of a tablet
po,pi distortion probabilities for the other words of a tablet
di(64I B v)
d&gt;1(64 I B, v)
Here v = 1,2, â¢ â¢ , m.
</bodyText>
<sectionHeader confidence="0.591612" genericHeader="method">
General Formulae.
</sectionHeader>
<reference confidence="0.621168">
NT, 71- I e) = I e)P0(7- I 4), e)139(7r I T e) (132)
pocf, a E 139(r,7r e) (133)
(1-,10E (Ca)
</reference>
<page confidence="0.990811">
310
</page>
<figure confidence="0.828318636363636">
Peter F. Brown et al. The Mathematics of Statistical Machine Translation
Assumptions.
cbi
Pe(T Icb,e) =
11 H t Tik ei)
95i
Poem I 7107 e) â!TT Pik7rik)
00 i=1 k.1
P0(4)I e) = Ã¼ (o. IEcbi n(0, I e,)
i=1 )
i=1
</figure>
<bodyText confidence="0.49337">
where
</bodyText>
<equation confidence="0.714715285714286">
no(Oo I m&apos;) ( ) Pon!&apos; â4P14)Â°,
Oo
â vi(c) I B(Tii),vii(m) - Ã§5j + k)
if k = 1
Pik(J) = Eik(i) (139)
d&gt;i(vik(i) - vik(7rik-1) I B(Tik), vik(m) - vik(7rik-1) - Ã§5j + k)
if k &gt; 1
</equation>
<bodyText confidence="0.990012529411765">
In Equation (139), p, is the first position to the left of i which has a non-zero fertility;
and cp is the ceiling of the average position of the words of tablet p (see Equation
(130)). Also, eik(j) is 1 if position j is vacant after all the words of tablets i&apos; &lt; i and the
first k - 1 words of tablet i have been placed, and 0 otherwise. vik(j) is the number of
vacancies not to the right of j at this time: vik(j) =-- Ej,&lt;Jcik(r).
This model is not deficient. Note that Equations (134), (135), and (138) are identical
to the corresponding formulae for Model 3.
Generation. Equations (132)-(136) describe the following process for producing f
from e:
1.-4. Choose a tableau r by following Steps 1-4 for Model 3.
5. For each i -= 1,2,... ,l and each k = 1,2,... , 0, choose a position
Ink as follows:
If k = 1 then choose a vacant position Ir1 according to
the distribution
(va (7a) - va (cpi) I B(Tii), vii (m) -Ã§5j + k).
If k&gt; 1 then choose a vacant position 7rik greater than
7rik_1 according to the distribution
</bodyText>
<equation confidence="0.635192">
d&gt;i (vik(7rik) - Vik(Inik-1) I B(T),Vk(M) Vik(7rik-1) k).
</equation>
<bodyText confidence="0.391393">
6.-8. Finish generating f by following Steps 6-8 for Model 3.
</bodyText>
<page confidence="0.99771">
311
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.869985">
<title confidence="0.998983">The Mathematics of Statistical Machine Translation: Parameter Estimation</title>
<author confidence="0.999652">Peter F Brown Stephen A Della Pietra</author>
<affiliation confidence="0.946164">IBM T.J. Watson Research Center IBM T.J. Watson Research Center</affiliation>
<author confidence="0.987713">Vincent J Della Pietra Robert L Mercer</author>
<affiliation confidence="0.99504">IBM T.J. Watson Research Center IBM T.J. Watson Research Center</affiliation>
<abstract confidence="0.994618416666667">We describe a series of five statistical models of the translation process and give algorithms for estimating the parameters of these models given a set of pairs of sentences that are translations of one another. We define a concept of word-by-word alignment between such pairs of sentences. For any given pair of such sentences each of our models assigns a probability to each of the possible word-by-word alignments. We give an algorithm for seeking the most probable of these alignments. Although the algorithm is suboptimal, the alignment thus obtained accounts well for the word-by-word relationships in the pair of sentences. We have a great deal of data in French and English from the proceedings of the Canadian Parliament. Accordingly, we have restricted our work to these two languages; but we feel that because our algorithms have minimal linguistic content they would work well on other pairs of languages. We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>L E Baum</author>
</authors>
<title>An inequality and associated maximization technique in statistical estimation of probabilistic functions of a Markov process.&amp;quot;</title>
<date>1972</date>
<journal>Inequalities,</journal>
<volume>3</volume>
<pages>1--8</pages>
<contexts>
<context position="17950" citStr="Baum 1972" startWordPosition="2989" endWordPosition="2990">n Models In this section, we develop a series of five translation models together with the algorithms necessary to estimate their parameters. Each model gives a prescription for computing the conditional probability Pr(f le), which we call the likelihood of the translation (f, e). This likelihood is a function of a large number of free parameters that we must estimate in a process that we call training. The likelihood of a set of translations is the product of the likelihoods of its members. In broad outline, our plan is to guess values for these parameters and then to apply the EM algorithm (Baum 1972; Dempster, Laird, and Rubin 1977) iteratively so as to approach a local maximum of the likelihood of a particular set of translations that we call the training data. When the likelihood of the training data has more than one local maximum, the one that we approach will depend on our initial guess. In Models 1 and 2, we first choose a length for the French string, assuming all reasonable lengths to be equally likely. Then, for each position in the French string, we decide how to connect it to the English string and what French word to place there. In Model 1 we assume all connections for each </context>
<context position="28514" citStr="Baum (1972)" startWordPosition="4902" endWordPosition="4903">lities appear on both sides of the equal sign. Nonetheless, it suggests an iterative procedure for finding a solution: given an initial guess for the translation probabilities, we can evaluate the right-hand side of Equation (10) and use the result as a new estimate for t(f le). (Here and elsewhere, the Lagrange multipliers simply serve as a reminder that we need to normalize the translation probabilities so that they satisfy Equation (7).) This process, when applied repeatedly, is called the EM algorithm. That it converges to a stationary point of h in situations like this was first shown by Baum (1972) and later by others (Dempster, Laird, and Rubin 1977). With the aid of Equation (5), we can reexpress Equation (10) as t(f le) = A-el E Pr(f, ale) E 6(f , fj)6(e, ea). (11) number of times e connects to f in a We call the expected number of times that e connects to f in the translation (fle) the count off given e for (fle) and denote it by c(f le; f, e). By definition, Tit c(f f, e) = EPr(ale, f) E , fj)6(e, eâ,), (12) 1=1 a1=0 am=0 1=1 ah ot(f (9) f 1 1 m t(f = (/ +1)m E E E6(f, 4)6(e, ea,) t(fk)eak). (10) 271 Computational Linguistics Volume 19, Number 2 where Pr(aje, f) = Pr(f, ale)/ Pr(fl</context>
</contexts>
<marker>Baum, 1972</marker>
<rawString>Baum, L. E. (1972). &amp;quot;An inequality and associated maximization technique in statistical estimation of probabilistic functions of a Markov process.&amp;quot; Inequalities, 3, 1-8.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Peter F Brown</author>
<author>John Cocke</author>
<author>Della Pietra</author>
<author>A Stephen</author>
<author>Della Pietra</author>
<author>J Vincent</author>
<author>Jelinek</author>
</authors>
<location>Frederick; Lafferty, John D.;</location>
<marker>Brown, Cocke, Pietra, Stephen, Pietra, Vincent, Jelinek, </marker>
<rawString>Brown, Peter F.; Cocke, John; Della Pietra, Stephen A.; Della Pietra, Vincent J.; Jelinek, Frederick; Lafferty, John D.;</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert L Mercer</author>
<author>Paul S Roossin</author>
</authors>
<title>A statistical approach to machine translation.&amp;quot;</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<volume>16</volume>
<issue>2</issue>
<pages>79--85</pages>
<marker>Mercer, Roossin, 1990</marker>
<rawString>Mercer, Robert L.; and Roossin, Paul S. (1990). &amp;quot;A statistical approach to machine translation.&amp;quot; Computational Linguistics, 16(2), 79-85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>John Cocke</author>
<author>Della Pietra</author>
<author>A Stephen</author>
<author>Della Pietra</author>
<author>J Vincent</author>
<author>Frederick Jelinek</author>
<author>Robert L Mercer</author>
<author>Paul S Roossin</author>
</authors>
<title>A statistical approach to language translation.&amp;quot;</title>
<date>1988</date>
<booktitle>In Proceedings, 12th International Conference on Computational Linguistics (COLING-88).</booktitle>
<pages>71--76</pages>
<location>Budapest, Hungary,</location>
<contexts>
<context position="2534" citStr="Brown et al. (1988" startWordPosition="393" endWordPosition="396">it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals. Here, we address a natural extension of that work: matching up the words within pairs of aligned sentences. In recent papers, Brown et al. (1988, 1990) propose a statistical approach to machine translation from French to English. In the latter of these papers, they sketch an algorithm for estimating the probability that an English word will be translated into any particular French word and show that such probabilities, once estimated, can be used together with a statistical model of the translation process to align the words in an English sentence with the words in its French translation (see their Figure 3). * IBM T.J. Watson Research Center, Yorktown Heights, NY 10598 C) 1993 Association for Computational Linguistics Computational L</context>
<context position="87669" citStr="Brown et al. (1988)" startWordPosition="15585" endWordPosition="15588">ng, x3spres, that indicates the present tense form used except in the third person singular. Similarly, mange is analyzed into a root, manger, and an ending, 13spres, that indicates the present tense form used for the first and third persons singular. These transformations are invertible and should reduce the French vocabulary by about 50% and the English vocabulary by about 20%. We hope that this will significantly improve the statistics in our models. 7. Discussion That interesting bilingual lexical correlations can be extracted automatically from a large bilingual corpus was pointed out by Brown et al. (1988). The algorithm that they describe is, roughly speaking, equivalent to carrying out the first iteration of the EM algorithm for our Model 1 starting from an initial guess in which each French word is equally probable as a translation for each English word. They were unaware of a connection to the EM algorithm, but they did realize that their method is not entirely satisfactory. For example, once it is clearly established that in (La porte est rouge I The door is red), it is red that produces rouge, one is uncomfortable using this sentence as support for red producing porte or door producing ro</context>
<context position="89811" citStr="Brown et al. (1988)" startWordPosition="15954" endWordPosition="15957">. They were also unaware of the trick by which we are able to sum over all alignments when evaluating the counts for Models 1 and 2, and of the trick by which we are able to sum over all alignments when transferring parameters from Model 2 to Model 3. As a result, they were unable to handle large vocabularies and so restricted themselves to vocabularies of only 9,000 words. Nonetheless, they were able to align phrases in French with the English words that produce them as illustrated in their Figure 3. More recently, Gale and Church (1991a) describe an algorithm similar to the one described in Brown et al. (1988). Like Brown et al., they consider only the simultaneous appearance of words in pairs of sentences that are translations of one another. Although algorithms like these are extremely simple, many of the correlations between English and French words are so pronounced as to fall prey to almost any effort to expose them. Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why), (chambre I house), and many others, simply cannot be missed. They shout from the data, and any method that is not stone deaf will hear them. But many of the correlations speak in a softer voice: to</context>
</contexts>
<marker>Brown, Cocke, Pietra, Stephen, Pietra, Vincent, Jelinek, Mercer, Roossin, 1988</marker>
<rawString>Brown, Peter F.; Cocke, John; Della Pietra, Stephen A.; Della Pietra, Vincent J.; Jelinek, Frederick; Mercer, Robert L.; and Roossin, Paul S. (1988). &amp;quot;A statistical approach to language translation.&amp;quot; In Proceedings, 12th International Conference on Computational Linguistics (COLING-88). Budapest, Hungary, August 1988, 71-76.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Della Pietra</author>
<author>A Stephen</author>
<author>Della Pietra</author>
<author>J Vincent</author>
<author>Robert L Mercer</author>
</authors>
<title>A statistical approach to sense disambiguation in machine translation.&amp;quot;</title>
<date>1991</date>
<booktitle>In Fourth DARPA Workshop on Speech and Natural Language.</booktitle>
<pages>146--151</pages>
<publisher>Morgan Kaufmann Publishers, Inc.,</publisher>
<contexts>
<context position="82380" citStr="Brown et al. 1991" startWordPosition="14676" endWordPosition="14679"> it must converge in a finite, though impractically large, number of steps because each translation has only a finite number of alignments. In practice, we are never sure that we have found the Viterbi alignment. If we reinterpret the Viterbi alignment to mean the most probable alignment that we can find rather than the most probable alignment that exists, then a similarly reinterpreted Viterbi training algorithm still converges. We have already used this algorithm successfully as a part of a system to assign senses to English and French words on the basis of the context in which they appear (Brown et al. 1991a, 1991b). We expect to use it in models that we develop beyond Model 5. 293 Computational Linguistics Volume 19, Number 2 6.3 Multi-Word Cepts In Models 1-5, we restrict our attention to alignments with cepts containing no more than one word each. Except in Models 4 and 5, cepts play little role in our development. Even in these models, cepts are determined implicitly by the fertilities of the words in the alignment: words for which the fertility is greater than zero make up one-word cepts; those for which it is zero do not. We can easily extend the generative process upon which Models 3, 4, </context>
</contexts>
<marker>Brown, Pietra, Stephen, Pietra, Vincent, Mercer, 1991</marker>
<rawString>Brown, Peter F.; Della Pietra, Stephen A.; Della Pietra, Vincent J.; and Mercer, Robert L. (1991a). &amp;quot;A statistical approach to sense disambiguation in machine translation.&amp;quot; In Fourth DARPA Workshop on Speech and Natural Language. Morgan Kaufmann Publishers, Inc., 146-151.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Della Pietra</author>
<author>A Stephen</author>
<author>Della Pietra</author>
<author>J Vincent</author>
<author>Robert L Mercer</author>
</authors>
<title>Word sense disambiguation using statistical methods.&amp;quot;</title>
<date>1991</date>
<booktitle>In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<pages>265--270</pages>
<location>Berkeley CA,</location>
<contexts>
<context position="82380" citStr="Brown et al. 1991" startWordPosition="14676" endWordPosition="14679"> it must converge in a finite, though impractically large, number of steps because each translation has only a finite number of alignments. In practice, we are never sure that we have found the Viterbi alignment. If we reinterpret the Viterbi alignment to mean the most probable alignment that we can find rather than the most probable alignment that exists, then a similarly reinterpreted Viterbi training algorithm still converges. We have already used this algorithm successfully as a part of a system to assign senses to English and French words on the basis of the context in which they appear (Brown et al. 1991a, 1991b). We expect to use it in models that we develop beyond Model 5. 293 Computational Linguistics Volume 19, Number 2 6.3 Multi-Word Cepts In Models 1-5, we restrict our attention to alignments with cepts containing no more than one word each. Except in Models 4 and 5, cepts play little role in our development. Even in these models, cepts are determined implicitly by the fertilities of the words in the alignment: words for which the fertility is greater than zero make up one-word cepts; those for which it is zero do not. We can easily extend the generative process upon which Models 3, 4, </context>
</contexts>
<marker>Brown, Pietra, Stephen, Pietra, Vincent, Mercer, 1991</marker>
<rawString>Brown, Peter F.; Della Pietra, Stephen A.; Della Pietra, Vincent J.; and Mercer, Robert L. (1991b). &amp;quot;Word sense disambiguation using statistical methods.&amp;quot; In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics. Berkeley CA, June 1991, 265-270.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Della Pietra</author>
<author>J Vincent</author>
<author>Peter V deSouza</author>
<author>Robert L Mercer</author>
</authors>
<title>Class-based n-gram models of natural language.&amp;quot;</title>
<date>1990</date>
<journal>Computational Linguistics</journal>
<booktitle>In Proceedings of the IBM Natural Language ITI.</booktitle>
<volume>18</volume>
<issue>4</issue>
<pages>1992--467</pages>
<location>Paris, France,</location>
<note>Also in</note>
<contexts>
<context position="1829" citStr="Brown et al. (1990)" startWordPosition="279" endWordPosition="282">o feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus. 1. Introduction The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts. For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals. Here, we address a natural extension of</context>
<context position="12619" citStr="Brown et al. (1990)" startWordPosition="2059" endWordPosition="2062">ish strings that account well for the French. We cannot achieve this simply by reversing our translation models. 3. Alignments We say that a pair of strings that are translations of one another form a translation, and we show this by enclosing the strings in parentheses and separating them by a vertical bar. Thus, we write the translation (Qu&apos;aurions-nous Pu faire? I What could we have done?) to show that What could we have done? is a translation of Qu&apos;aurions-nous pu faire? When the strings end in sentences, we usually omit the final stop unless it is a question mark or an exclamation point. Brown et al. (1990) introduce the idea of an alignment between a pair of strings as an object indicating for each word in the French string that word in the English string from which it arose. Alignments are shown graphically, as in Figure 1, by drawing lines, which we call connections, from some of the English words to some of the French words. The alignment in Figure 1 has seven connections: (the, Le), (program, programme), and so on. Following the notation of Brown et al., we write this alignment as (Le programme a ete mis en application I And the(1) program(2) has(3) been(4) implemented(5,6,7)). The list of </context>
<context position="52353" citStr="Brown et al. (1990)" startWordPosition="9415" endWordPosition="9418">he French string of the words from its tablet. We define its head to be that word in its tablet for which the position in the French string is smallest. In Model 4, we replace rn, 1) by two sets of parameters: one for placing the head of each cept, and one for placing any remaining words. For [i] &gt; 0, we require that the head for cept i be r[]i and we assume that Pr (II[]i = /1741-1,71, Of), e) = - Oi-i IA(e[i-i]), 8(4)). (45) Here, A and 8 are functions of the English and French words that take on a small number of different values as their arguments range over their respective vocabularies. Brown et al. (1990) describe an algorithm for dividing a vocabulary into classes so as to preserve mutual information between adjacent classes in running text. We construct A and B as functions with 50 distinct values by dividing the English and French vocabularies each into 50 classes according to this algorithm. By assuming that the probability depends on the previous cept and on the identity of the French word being placed, we can account for such facts as the appearance of adjectives before nouns in English but after them in French. We call j - 01-1 the displacement for the head of cept i. It may be either p</context>
<context position="71953" citStr="Brown et al. (1990)" startWordPosition="12908" endWordPosition="12911">ugh 15, which show the translation and fertility probabilities for external, answer, oil, former, and not. Although we show the various probabilities to three decimal places, one must realize that the specific numbers that appear are peculiar to the training data that we used in obtaining them. They are not constants of nature relating the Platonic ideals of eternal English and eternal French. Had we used different sentences as training data, we might well have arrived at different numbers. For example, in Figure 9, we see that t(lelthe) = 0.497 while the corresponding number from Figure 4 of Brown et al. (1990) is 0.610. The difference arises not from some instability in the training algorithms or some subtle shift in the languages in recent years, but from the fact that we have used 1,778,620 pairs of sentences covering virtually the complete vocabulary of the Hansard data for training, while they used only 40,000 pairs of sentences and restricted their attention to the 9,000 most common words in each of the two vocabularies. Figures 16, 17, and 18 show automatically derived alignments for three translations. In the terminology of Section 4.6, each alignment is b&amp;quot;(v(fle; 2)). We stress that these a</context>
<context position="88869" citStr="Brown et al. (1990)" startWordPosition="15787" endWordPosition="15790">r door producing rouge. They suggest removing words once a correlation between them has been clearly established and then reprocessing the resulting impoverished translations hoping to recover less obvious correlations now revealed by the departure of their more prominent relatives. From our present perspective, we see that the proper way to proceed is simply to carry out more iterations of the EM algorithm. The likelihood for Model 1 has a unique local maximum for any set of training data. As iterations proceed, the count for porte as a translation of red will dwindle away. In a later paper, Brown et al. (1990) describe a model that is essentially the same as our Model 3. They sketch the EM algorithm and show that, once trained, their model can be used to extract word-by-word alignments for pairs of sentences. They did not realize that the logarithm of the likelihood for Model 1 is concave and, hence, has a unique local maximum. They were also unaware of the trick by which we are able to sum over all alignments when evaluating the counts for Models 1 and 2, and of the trick by which we are able to sum over all alignments when transferring parameters from Model 2 to Model 3. As a result, they were un</context>
<context position="90577" citStr="Brown et al. (1990)" startWordPosition="16087" endWordPosition="16090">lgorithms like these are extremely simple, many of the correlations between English and French words are so pronounced as to fall prey to almost any effort to expose them. Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why), (chambre I house), and many others, simply cannot be missed. They shout from the data, and any method that is not stone deaf will hear them. But many of the correlations speak in a softer voice: to hear them clearly, we must model the translation process, as 295 Computational Linguistics Volume 19, Number 2 Brown et al. (1988) suggest and as Brown et al. (1990) and the current paper actually do. Only in this way can one hope to hear the quiet call of (marquees d&apos;un asterisque starred) or the whisper of (qui s&apos;est fait bousculer I embattled). The series of models that we have described constitutes a mathematical embodiment of the powerfully compelling intuitive feeling that a word in one language can be translated into a word or phrase in another language. In some cases, there may be several or even several tens of translations depending on the context in which the word appears, but we should be quite surprised to find a word with hundreds of mutuall</context>
</contexts>
<marker>Brown, Pietra, Vincent, deSouza, Mercer, 1990</marker>
<rawString>Brown, Peter F.; Della Pietra, Vincent J.; deSouza, Peter V.; and Mercer, Robert L. (1990). &amp;quot;Class-based n-gram models of natural language.&amp;quot; In Proceedings of the IBM Natural Language ITI. Paris, France, March 1990,283-298. Also in Computational Linguistics 18(4), 1992,467-479.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Jennifer C Lai</author>
<author>Robert L Mercer</author>
</authors>
<title>Aligning sentences in parallel corpora.&amp;quot;</title>
<date>1991</date>
<booktitle>In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<location>Berkeley CA,</location>
<contexts>
<context position="82380" citStr="Brown et al. 1991" startWordPosition="14676" endWordPosition="14679"> it must converge in a finite, though impractically large, number of steps because each translation has only a finite number of alignments. In practice, we are never sure that we have found the Viterbi alignment. If we reinterpret the Viterbi alignment to mean the most probable alignment that we can find rather than the most probable alignment that exists, then a similarly reinterpreted Viterbi training algorithm still converges. We have already used this algorithm successfully as a part of a system to assign senses to English and French words on the basis of the context in which they appear (Brown et al. 1991a, 1991b). We expect to use it in models that we develop beyond Model 5. 293 Computational Linguistics Volume 19, Number 2 6.3 Multi-Word Cepts In Models 1-5, we restrict our attention to alignments with cepts containing no more than one word each. Except in Models 4 and 5, cepts play little role in our development. Even in these models, cepts are determined implicitly by the fertilities of the words in the alignment: words for which the fertility is greater than zero make up one-word cepts; those for which it is zero do not. We can easily extend the generative process upon which Models 3, 4, </context>
</contexts>
<marker>Brown, Lai, Mercer, 1991</marker>
<rawString>Brown, Peter F.; Lai, Jennifer C.; and Mercer, Robert L. (1991). &amp;quot;Aligning sentences in parallel corpora.&amp;quot; In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics. Berkeley CA, June 1991,169-176.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A P Dempster</author>
<author>N M Laird</author>
<author>D B Rubin</author>
</authors>
<title>Maximum likelihood from incomplete data via the EM algorithm.&amp;quot;</title>
<date>1977</date>
<journal>Journal of the Royal Statistical Society,</journal>
<volume>39</volume>
<pages>1--38</pages>
<marker>Dempster, Laird, Rubin, 1977</marker>
<rawString>Dempster, A. P.; Laird, N. M.; and Rubin, D. B. (1977). &amp;quot;Maximum likelihood from incomplete data via the EM algorithm.&amp;quot; Journal of the Royal Statistical Society, 39(B), 1-38.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William A Gale</author>
<author>Kenneth W Church</author>
</authors>
<title>Identifying word correspondences in parallel texts.&amp;quot;</title>
<date>1991</date>
<booktitle>In Fourth DARPA Workshop on Speech and Natural Language.</booktitle>
<pages>152--157</pages>
<publisher>Morgan Kaufmann Publishers, Inc.,</publisher>
<contexts>
<context position="1796" citStr="Gale and Church 1991" startWordPosition="273" endWordPosition="276">n other pairs of languages. We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus. 1. Introduction The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts. For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals. Here, </context>
<context position="89735" citStr="Gale and Church (1991" startWordPosition="15941" endWordPosition="15944">f the likelihood for Model 1 is concave and, hence, has a unique local maximum. They were also unaware of the trick by which we are able to sum over all alignments when evaluating the counts for Models 1 and 2, and of the trick by which we are able to sum over all alignments when transferring parameters from Model 2 to Model 3. As a result, they were unable to handle large vocabularies and so restricted themselves to vocabularies of only 9,000 words. Nonetheless, they were able to align phrases in French with the English words that produce them as illustrated in their Figure 3. More recently, Gale and Church (1991a) describe an algorithm similar to the one described in Brown et al. (1988). Like Brown et al., they consider only the simultaneous appearance of words in pairs of sentences that are translations of one another. Although algorithms like these are extremely simple, many of the correlations between English and French words are so pronounced as to fall prey to almost any effort to expose them. Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why), (chambre I house), and many others, simply cannot be missed. They shout from the data, and any method that is not stone d</context>
</contexts>
<marker>Gale, Church, 1991</marker>
<rawString>Gale, William A.; and Church, Kenneth W. (1991a). &amp;quot;Identifying word correspondences in parallel texts.&amp;quot; In Fourth DARPA Workshop on Speech and Natural Language. Morgan Kaufmann Publishers, Inc., 152-157.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William A Gale</author>
<author>Kenneth W Church</author>
</authors>
<title>A program for aligning sentences in bilingual corpora.&amp;quot;</title>
<date>1991</date>
<booktitle>In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics.</booktitle>
<location>Berkeley CA,</location>
<contexts>
<context position="1796" citStr="Gale and Church 1991" startWordPosition="273" endWordPosition="276">n other pairs of languages. We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus. 1. Introduction The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts. For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals. Here, </context>
<context position="89735" citStr="Gale and Church (1991" startWordPosition="15941" endWordPosition="15944">f the likelihood for Model 1 is concave and, hence, has a unique local maximum. They were also unaware of the trick by which we are able to sum over all alignments when evaluating the counts for Models 1 and 2, and of the trick by which we are able to sum over all alignments when transferring parameters from Model 2 to Model 3. As a result, they were unable to handle large vocabularies and so restricted themselves to vocabularies of only 9,000 words. Nonetheless, they were able to align phrases in French with the English words that produce them as illustrated in their Figure 3. More recently, Gale and Church (1991a) describe an algorithm similar to the one described in Brown et al. (1988). Like Brown et al., they consider only the simultaneous appearance of words in pairs of sentences that are translations of one another. Although algorithms like these are extremely simple, many of the correlations between English and French words are so pronounced as to fall prey to almost any effort to expose them. Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why), (chambre I house), and many others, simply cannot be missed. They shout from the data, and any method that is not stone d</context>
</contexts>
<marker>Gale, Church, 1991</marker>
<rawString>Gale, William A.; and Church, Kenneth W. (1991b). &amp;quot;A program for aligning sentences in bilingual corpora.&amp;quot; In Proceedings, 29th Annual Meeting of the Association for Computational Linguistics. Berkeley CA, June 1991,177-184.</rawString>
</citation>
<citation valid="true">
<date>1987</date>
<booktitle>Encyclopedic Dictionary of Mathematics, Second Edition.</booktitle>
<editor>Ito, Kiyoshi, editor.</editor>
<publisher>MIT Press.</publisher>
<marker>1987</marker>
<rawString>Ito, Kiyoshi, editor. (1987). Encyclopedic Dictionary of Mathematics, Second Edition. MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Martin Kay</author>
</authors>
<title>Text-translation alignment.&amp;quot;</title>
<date>1991</date>
<booktitle>In ACH/ALLC &apos;91: &amp;quot;Making Connections&amp;quot; Conference Handbook. Tempe AZ,</booktitle>
<contexts>
<context position="1808" citStr="Kay 1991" startWordPosition="277" endWordPosition="278">ges. We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus. 1. Introduction The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts. For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals. Here, we address a</context>
</contexts>
<marker>Kay, 1991</marker>
<rawString>Kay, Martin (1991). &amp;quot;Text-translation alignment.&amp;quot; In ACH/ALLC &apos;91: &amp;quot;Making Connections&amp;quot; Conference Handbook. Tempe AZ, March 1991.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Maltese</author>
<author>F Mancini</author>
</authors>
<title>An automatic technique to include grammatical and morphological information in a trigram-based statistical language model.&amp;quot;</title>
<date>1992</date>
<booktitle>In Proceedings, IEEE International Conference on Acoustics, Speech and Signal Processing.</booktitle>
<pages>157--1</pages>
<location>San Francisco CA,</location>
<marker>Maltese, Mancini, 1992</marker>
<rawString>Maltese, G., and Mancini, F. (1992). &amp;quot;An automatic technique to include grammatical and morphological information in a trigram-based statistical language model.&amp;quot; In Proceedings, IEEE International Conference on Acoustics, Speech and Signal Processing. San Francisco CA, March 1992, I-157-1-160.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Susan Warwick</author>
<author>Graham Russell</author>
</authors>
<title>Bilingual concordancing and bilingual lexicography.&amp;quot;</title>
<date>1990</date>
<booktitle>In EURALEX 4th International Congress. Malaga,</booktitle>
<contexts>
<context position="1745" citStr="Warwick and Russell 1990" startWordPosition="264" endWordPosition="267"> have minimal linguistic content they would work well on other pairs of languages. We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus. 1. Introduction The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts. For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991). Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain. Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain. The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in</context>
</contexts>
<marker>Warwick, Russell, 1990</marker>
<rawString>Warwick, Susan, and Russell, Graham (1990). &amp;quot;Bilingual concordancing and bilingual lexicography.&amp;quot; In EURALEX 4th International Congress. Malaga, Spain.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W Weaver</author>
</authors>
<title>Translation</title>
<date>1955</date>
<booktitle>In Machine Translation of Languages.</booktitle>
<publisher>MIT Press.</publisher>
<contexts>
<context position="5166" citStr="Weaver 1955" startWordPosition="812" endWordPosition="813">e of them. In the final section, we discuss the significance of our work and the possibility of extending it to other pairs of languages. Finally, we include two appendices: one to summarize notation and one to collect the formulae for the various models that we describe and to fill an occasional gap in our development. 2. Statistical Translation In 1949, Warren Weaver suggested applying the statistical and cryptanalytic techniques then emerging from the nascent field of communication theory to the problem of using computers to translate text from one natural language to another (published in Weaver 1955). Efforts in this direction were soon abandoned for various philosophical and theoretical reasons, but at a time when the most advanced computers were of a piece with today&apos;s digital watch, any such approach was surely doomed to computational starvation. Today, the fruitful application of statistical methods to the study of machine translation is within the computational grasp of anyone with a well-equipped workstation. A string of English words, e, can be translated into a string of French words in many different ways. Often, knowing the broader context in which e occurs may serve to winnow t</context>
</contexts>
<marker>Weaver, 1955</marker>
<rawString>Weaver, W. (1955). Translation (1949). In Machine Translation of Languages. MIT Press.</rawString>
</citation>
<citation valid="false">
<title>In Equation (95) the factor of 1/00! accounts for the choices of irok,</title>
<journal>k =</journal>
<volume>1</volume>
<marker></marker>
<rawString>In Equation (95) the factor of 1/00! accounts for the choices of irok, k = 1, 2, ... , (/)0. This model is deficient, since Pe(failure I T, CP, e) 1 - Pe(ir I -r, 4), e) &gt; O. (97) Generation. Equations (90)-(95) describe the following process for producing f or failure from e:</rawString>
</citation>
<citation valid="false">
<title>For each i = 1, 2, ... ,l, choose a length Oi for Ti according to the distribution n(01 I e1).</title>
<marker></marker>
<rawString>1. For each i = 1, 2, ... ,l, choose a length Oi for Ti according to the distribution n(01 I e1).</rawString>
</citation>
<citation valid="false">
<authors>
<author>Useful Formulae</author>
</authors>
<title>From Equations (93)-(95) it follows that if (T, Tr) is consistent with (f, a) then Pe(T I e) --= qt.; I ea,), j=1. Pe (7r 7, = H cbo!</title>
<marker>Formulae, </marker>
<rawString>Useful Formulae. From Equations (93)-(95) it follows that if (T, Tr) is consistent with (f, a) then Pe(T I e) --= qt.; I ea,), j=1. Pe (7r 7, = H cbo!</rawString>
</citation>
<citation valid="false">
<authors>
<author>NT</author>
</authors>
<title>I e) = I e)P0(7- I 4), e)139(7r I T e) (132) pocf, a E 139(r,7r e) (133) (1-,10E (Ca)</title>
<marker>NT, </marker>
<rawString>NT, 71- I e) = I e)P0(7- I 4), e)139(7r I T e) (132) pocf, a E 139(r,7r e) (133) (1-,10E (Ca)</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>