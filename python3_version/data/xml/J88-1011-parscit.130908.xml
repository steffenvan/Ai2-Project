<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000011">
<title confidence="0.406385">
ABSTRACTS OF CURRENT LITERATURE
</title>
<figure confidence="0.8910034375">
Single copies can be ordered from:
D. Borchers
University of Saarbruecken
FB 10 Informatik IV
Im Stadtvvald 15
D-6600 Saarbruecken 11
Fed. Rep. of Germany
Telephone: 0681/302-2363
NEW REPORTS AND MEMOS
Report No. 5
Entworf eines aktiven, wissensbasierten
Hilfesystems fuer SINIX.
Kemke, C.
Abridged version in LDV-Forum. No. 2,
December 1985, pp. 43-60.
Report No. 6
</figure>
<note confidence="0.476553833333333">
The Role of Natural Language in
Advanced Knowledge-Based Systems
Wahlster, W.
In Winter, H. (Hrsg.): Artificial
Intelligence and Man-Machine Systems.
Heidelberg: Springer 1986, pp. 62-83.
</note>
<bodyText confidence="0.998796705882353">
The SC (SINIX Consultant) system is a natural language help
facility for the SINIX operating system. SC should answer
natural language questions about concepts and commands of the
SINIX system. Furthermore, it should, as an active help
system, give unsolicited advice to a user during his work with
SINIX. In this paper, a short introduction to intelligent help
systems is given, followed by an overview of the help systems
UC, UCC, and WIZARD, the domain of which are the
operating systems UNIX and VMS, respectively. In the next
sections the basic structure and function of the SC is explained
with special regard to the aspects of planning/problem-solving
and knowledge representation.
Natural language processing is a prerequisite for advanced
knowledge-based systems since the ability to acquire, retrieve,
exploit, and present knowledge critically depends on natural
language comprehension and production. Natural language
concepts guide the interpretation of what we see, hear, read or
experience with other senses. In the first part of the paper, we
illustrate the needed capabilities of cooperative dialog systems
with a detailed example: the interaction between a customer
and a clerk at an information desk in a train station. It is
shown that natural language systems cannot just rely on
knowledge about syntactical and semantical aspects of language
but also have to exploit conceptual and inferential knowledge,
and a user model. In the remainder, we analyze and evaluate
three natural language systems which were introduced to the
commercial market in 1985: Language CraftTM by Carnegie
Group Inc.; NLMenu by Texas Instruments Inc.; and Q &amp;
by Symantec Inc. The detailed examination of these systems
shows their capabilities and limitations. We conclude that the
technology for limited natural-language access systems is
available now, but in foreseeable future the capabilities of such
systems in no way match human performance in face-to-face
communication.
</bodyText>
<page confidence="0.792565">
66 Computational Linguistics, Volume 14, Number 1, Winter 1988
</page>
<table confidence="0.895065375">
Abstracts of Current Literature
Report No. 7
Combining Deictic Gestures and
Natural Language for Referent
Identification
Kobsa, A.; Allgayer, J.; Reddig-Siekmann,
C.; Reithinger, N.; Schmauks, D.;
Harbusch, K.; WahIster, W.
In COLING &apos;86. 11th International
Conference on Computational Linguistics.
Proceedings. Bonn 1986, pp. 356-361.
Report No. 8
Eine Graphikkomponente zur
Integration von Zeigehandlungen in
natuerlichsprachliche KI-Systeme.
Al&apos;gayer, J.
</table>
<bodyText confidence="0.995722105263158">
In GI-16. Jahrestagung. Proceedings, Vol. I.
Berlin 1986, pp. 284-298.
In virtually all current NL dialog systems, users can refer to
objects by linguistic descriptions only. In human face-to-face
conversation, however, participants also frequently use various
sorts of deictic gestures. In this paper, we present the referent
identification component of XTRA, a natural language access
system for expert systems. XTRA allows the user to combine
NL input with pointing gestures on the terminal screen for
referring to objects on the display. Information about the
location and the type of this deictic gesture, as well as about
the linguistic description of the referred object, the case frame
and the dialog memory are utilized for identifying the object.
The system is tolerant in respect to impreciseness of both the
deictic and the natural language input. The user can thereby
refer to objects more easily, avoid referential failures, and
employ vague everyday terms instead of precise technical
notions.
In combining natural language and deictic gestures, a
communicative, more adequate environment is generated, which,
in many areas, allows AI-systems to become more widely
accepted. As part of a natural language interface to expert
systems, the procedure described here supports the construction
of an environment in which language and language-supportive
pointing methods are combined and processed in a
context-sensitive manner. Within the visual field reproduced on
the screen, a pointing gesture that best suits the desired
expression can be chosen out of a particular defined spectrum.
In many cases, it is only the combination of information
obtained from both language and gesture analysis that allows for
the extraction of the object intended by the user. There does
not exist any one-to-one-mapping between the position of the
gestures shown on the screen and the displayed objects.
This paper deals with the definition of a computational
semantics for spatial relations between objects in a scene. In
particular we examine the effects of the observer&apos;s position on
the computation of spatial relations, the use of path
prepositions, and degrees of applicability for spatial relations.
Representational prerequisites and the computational analysis of
spatial relations are investigated in the German dialogue system
CITYTOUR.
Even though pointing gestures represent a field of interest for
many disciplines, they have not as yet been more thoroughly
examined. In theory, their underlying principles pertain to
artificial intelligence as well, since recently, pointing gestures
can be simulated in certain areas of discourse. The following
will deal with pointing gestures and their interaction with
language under various differing circumstances. Chapter 2 lists a
number of prerequisites for the use of pointing gestures. Then,
in chapter 3 (semiotics) and chapter 4 (psychology), pointing
gestures are considered as signs and means of non-verbal
communication. In chapter 5, diverse functions of gestures with
regard to language are differentiated, and syntactic insertion of
obligatory pointing gestures is discussed. Some parameters for
the classification of pointing gestures are found in chapter 6.
Then, in chapter 7, the thesis is proven that combination of
pointing gestures and verbal descriptions is not only efficient
</bodyText>
<table confidence="0.674913756097561">
Report No. 9
Coping with the Intrinsic and Deictic
Uses of Spatial Prepositions
Andre, E.; Herzog, G. and Rist, T.
In Jorrand, Ph. and Sgurev, V., (eds.):
Artificial Intelligence II. Proceedings of
AIMSA-86. Amsterdam: North-Holland
1987, pp. 375-382.
Report No. 10
Form und Funktion von Zeigegesten,
Ein interdisziplinaerer Ueberblick
Schmauks, D.
Computational Linguistics, Volume 14, Number 1, Winter 1988 67
Abstracts of Current Literature
Report No. 11
The SINIX-Consultant—Requirements,
Design and Implementation of an
Intelligent Help System for a UNIX
Derivative
Kemke, C.
To appear in User Interfaces.
Proceedings of the International
Conference of the Gottlieb Duttweiler
Institut. Rueschlikon/Zuerich 1986.
Report No. 12
Processing Descriptions Containing
Words and Gestures
Allgayer, J. and Reddig, C.
In Rollinger, C.-R. and Horn, W. (eds.):
GWAI-86 und 2. Oesterreichische
Artificial-Intelligence-Tagung. Proceedings.
Berlin/Heidelberg: Springer 1986,
pp. 119-130.
Report No. 13
Generating Referring Expressions and
Pointing Gestures
Reithinger, N.
In Kempen, G. (ed.): Natural Language
Generation. Dordrecht: Nijhoff 1987,
pp. 71-81.
Report No. 14
</table>
<bodyText confidence="0.978483500000001">
LEGAS—Inductive Learning of
Grammatical Structures
Jansen-Winkeln, R.M.
but also sometimes necessary. Finally, in the last two chapters,
a few remaining problems and possible solutions are dealt with.
The purpose of this paper is to describe the development of a
project relating to the area of artificial intelligence, namely the
SINIX Consultant SC, an intelligent help system for the SINIX
operating system. SC should, on the one hand, answer natural
language questions about concepts and commands of the SINIX
system. On the other hand, it should, as an active help system,
give unsolicited advice to a user during his work with SINIX,
observing the user and giving hints to more efficient command
sequences. So SC represents a help system which combines a
passive and an active mode in order to aid the user. To fulfill
these tasks, SC has to go beyond typical natural language
system capabilities, by also providing tutoring and dialog
maintenance capabilities, a model of the user&apos;s knowledge, and
a recognition of his actual plans and goals. Besides this, a
detailed model of the SINIX domain is necessary in order to
perform the required problem solving and explanation tasks for
generating adequate advice and answers.
In person-to-person dialog, a lot of pointing gestures are used
in order to facilitate and speed up the interaction. Our aim is
to integrate this combination of natural language and deixis into
man-machine communication. Since the analysis of pointing
gestures is highly interwoven with the analysis of noun phrases,
a system has been developed which accepts pointing gestures—
which are simulated by means of a mouse click on a Lisp
Machine screen—as part of a noun phrase in NL sentences.
The syntactically and morphologically processed input sentence
is represented as a functional-semantic structure by the
intrasentential analysis. Aided by specific translation rules, the
referential-semantic interpretation evaluates this structure with
respect to three types of knowledge: the region currently
pointed at on the screen, the relation to the dialog memory,
and the associated individualized part of the conceptual
knowledge base. This referent-identification process results in
determining the intended referential object.
Among other things, a natural language generator, which is
embedded in a dialog system, should take the user&apos;s input into
account. In this way, the output generated will be better
adapted to the user&apos;s needs. Consequently, the generator and
the other components of the system should share knowledge
bases whenever possible. In this paper, preliminary
considerations pertaining to the generation component of
XTRA—a natural language access system to expert systems—
are presented. The generator is fully integrated into the system
and shares its knowledge bases. The advantage of this structure
is demonstrated for the generation of certain referring
expressions. Apart from linguistic reference, e.g., pro-words,
extralinguistic pointing gestures can be employed both by the
user and the XTRA system as well. Finally, the integration of
pointing gestures in the generation component is demonstrated.
This paper describes the theoretical approach to acquiring
simple grammar rules from examples and its realization in a
program called LEGAS (LEarning GrAmmatical Structures). The
resulting rule set is developed incrementally through gradual
</bodyText>
<page confidence="0.96604">
68 Computational Linguistics, Volume 14, Number 1, Winter 1988
</page>
<table confidence="0.9932965">
Abstracts of Current Literature
Report No. 16
Natural and Simulated Pointing—An
Interdisciplinary Survey
Schmauks, D.
In Proceedings of the 3rd European ACL
Conference. Copenhagen, Denmark 1986,
pp. 179-185.
Report No. 17
From Image Sequences to Natural
Language: Descriptions of Moving
Objects
Zimmerman, G.; Sung, K.; Bosch, G. and
Schirra J.R.J.
Report No. 18
Generierung natuerlichsprachlicher
Aeuberungen zur simultanen
Beschreibung von zeitveraenderlichen
Szenen
Andre, E.; Rist, T. and Herzog, G.
In Monk, K. (ed.): GWAI-87. 11th
German Workshop on Artificial
Intelligence. Proceedings. Berlin/
Heidelberg: Springer 1987, pp. 330-338.
</table>
<bodyText confidence="0.999873240740741">
generalization and specialization. After each learning cycle, the
rule set achieves a status called &amp;quot;complete&amp;quot; and &amp;quot;consistent&amp;quot;
which guides the flow of control.
This paper presents a possible working solution to how a
reason maintenance system is able to maintain the consistency
of a set of premises and rules in a framework with
approximative inferences and multiple deductions. In doing so, a
dependency net which represents all known information about
assertions and their dependencies (justifications) is defined and a
maintenance algorithm which propagates all changes of nodes of
the net to all affected successors is presented. Finally, a
concept of consistency for a dependency net with nodes
provided with an evidence value is defined, and it is pointed
out how inconsistencies within a dependency net can be solved.
Referent identification in human conversation is performed both
by describing the objects in question and by pointing at them.
Up until now, only the linguistic component could be simulated
in dialog systems. But recently, technical innovations have
made it possible to &amp;quot;point&amp;quot; at the objects on a display as well.
The paper has two intentions. First, it investigates natural
pointing in more detail and offers some possibilities to classify
the great variety of pointing actions. Then it tries to clarify the
extent to which pointing by technical means (especially mouse-
clicks) can be regarded as a simulation of natural pointing (or
as a functional equivalent). Furthermore, some steps towards
even more accurate simulation are briefly mentioned.
We present our work concerning the connection of a vision
system to a natural language system. That is, automatic
processing transforms the original sequence of TV images into
natural language descriptions concerning moving objects. It is
the first time that this transformation is achieved totally by
computer. A vision system which has been developed in
Karlsruhe is introduced in section 2. By means of analyzing
displacement vector fields, trajectories of object candidates are
recognized. In section 3, the natural language system
CITYTOUR is briefly presented. The verbalization of spatial
relations between static and moving objects can be studied with
this system. Section 4 deals with the present state of the
connection. The resulting data of the vision system are partially
used and verbalized by CITYTOUR.
Automatic generation of simultaneous descriptions for
time-varying scenes reveals a problem which has not been dealt
with within generation systems up to the present. As a scene is
not described a posteriori, but instead simultaneously as the
scene progresses, the entire scene itself would only then be
known after its completion. For the coordination of perception
and speech production, temporal aspects such as the time
required for text generation and decoding time of the listener or
reader have to be considered. The following paper examines the
consequences arising out of this situation of simultaneous scene
description with respect to the questions of &amp;quot;what to say&amp;quot; and
&amp;quot;how to say&amp;quot;. Interaction between event-recognition and speech
production in our system SOCCER will be illustrated by means
of two example scenes.
</bodyText>
<note confidence="0.7522705">
In Hallam, J. and C. Mellish (eds.):
Advances in Artificial Intelligence.
Proceedings of the AISB Conference.
Chichester: Wiley 1987, pp. 169-181.
</note>
<table confidence="0.960439625">
Report No. 15
RMSAI—Ein Reason Maintenance
System Fuer approximative Inferenzen
Werner, M.
Computational Linguistics, Volume 14, Number 1, Winter 1988 69
Abstracts of Current Literature
Report No. 19
Ereignismodellierung zur
inkrementellen High-level
Bildfolgenanalyse
Rist, T.; Herzog, G. and Andre, E.
In Buchberger, E. and Retti, J. (eds.):
3. Oesterreichisch Artificial-Intelligence-
Tagung. Proceedings. Berlin/Heidelberg:
Springer 1987, pp. 1-11.
Report No. 20
LST-1—Ein wissenbasiertes System zur
Durchfuehrung und Berechnung des
Lohnsteuerjahresausgleichs
Beiche, H.-P.
In Buchberger, E. and Retti, J. (eds.):
3. Oestetreichische Artificial-Intelligence-
Tagung. Proceedings. Berlin/Heidelberg:
Springer 1987, pp. 92-103.
</table>
<bodyText confidence="0.987710491525424">
This paper deals with the problem of incrementally recognizing
events in time-varying scenes. In order to allow for the
application of an incremental recognition strategy, the
prototypical occurrence of an event is described by means of a
course diagram. Starting from a discrete time-model, special
predicates are defined which, within a formal temporal logic,
can be used to represent even events directly taking place. On
the one hand, these predicates can be used within event models
in order to define more complex course diagrams. On the other
hand, the information in propositional form concerning directly
occurring events seems to be an appropriate interface between
event-recognition and other components of a system for natural
language description of time-varying real-world scenes.
LST-1 is a knowledge-based system in the field of German
income tax. Its aim is to support a non-expert user in filling
out an annual withholding tax adjustment form (which is
displayed on the terminal screen). LST-1 checks the consistency
of the data entered and advises the user on possible
deductibles. The user has the possibility of filling out the form
in a random order, or, be prompted by the system itself. As
soon as the necessary data has been entered, partial results can
immediately be computed upon request. LST-1 has been
implemented using the BABYLON expert system shell, featuring
frames, rules, PROLOG, and a restricted form of constraints as
representational mechanisms.
Memo No. 8
MORPHIX—Ein hochportabler
Lemmatisierungsmodul fuer das
Deutsche
Finkter, W. and Neumann, G.
Morphologic analysis constitutes the first step in the processing
of written language, with its relative importance in the parsing
process depending upon the particular language to be analyzed.
Since the German language belongs to a class in which a loose
word order prevails, more grammatical information about a
certain word can be obtained from an analysis of its inflected
form rather than its position in the sentence. In order to reduce
the size of lexica in natural language systems, morphological-
analysis components trace back inflected word-forms to their
canonic structures. Thereby, grammatical information is obtained
about these words (e.g., category, gender, number, case, tense,
mode, etc.) from which their possible grammatical roles can be
determined. In this paper, the portable morphologic analysis
module MORPHIX is introduced which, with respect to the
German language, can be integrated into virtually any
LISP-based natural-language system. After a general discussion
of possible techniques for morphologic analysis in German and
their realization in systems developed to date, the capabilities of
Morphix and the organization of its lexicon are examined.
Should a morphologic-analysis component be used as an
independent module, high efficiency standards must be met. A
detailed discussion is presented as to how the MORPHIX
algorithm fulfills this requirement. Its central data structure is
the GRIN (grammatical information) tree in which the
relationship between suffixes and their respective grammatical
content is efficiently coded. A &amp;quot;clarification dialog&amp;quot; is activated
if a word-form cannot be processed by MORPHIX, and a semi-
automatic augmentation of the lexicon carried out in interaction
with the user.
</bodyText>
<page confidence="0.95069">
70 Computational Linguistics, Volume 14, Number 1, Winter 1988
</page>
<table confidence="0.913359769230769">
Abstracts of Current Literature
Memo No. 9
AIDA—Rekursionsbehandlung,
Konfliktaufloesung und
Regelcompilierung in einem Deduktiven
Datenbanksystem
Portscheller, R.
Memo No. 10
MEGA-ACT--Eine Studie ueber
explizite Kontrollstrukturen und
Pseudoparallelitaet in Aktor-Systemen
mit einer Beispielarchitektur in FRL.
Schirra, J.
</table>
<bodyText confidence="0.930686426229508">
The first chapter of this paper surveys the development from
conventional relational database systems to deductive and expert
database systems respectively. A number of fundamental design
philosophies are outlined, and a precise definition of definite
and indefinite deductive DBS is presented. The second chapter
deals with the relationship between the &amp;quot;logical&amp;quot; programming
language PROLOG and definite deductive DBS, as well as two
realized definite deductive DBS which serve as front-ends to
actual DBS. The AIDA system is presented in chapter 3. In
order to optimize an a priori conflict-index, existentially
quantified inquiries are proposed. Also, important approaches to
the treatment of recursive rules are surveyed. An iterative
fixed-point algorithm is recommended which allows a
propagation of the constants contained within the inquiry and
avoids redundant calculations. Moreover, inquiry-independent
rule compilation is possible in AIDA. An algorithm was
developed which accepts rules in any given order, with only
those rules being compiled again which are actually affected by
the new rules. A solution to the resulting consistency problems
is given as well. The last chapter offers a summary of the
results obtained and a look into the future development of the
system.
MEGA-ACT is a program system which helps to examine the
construction of explicit control structures and declarative
programs built by them within actor systems. The starting point
of our examination is to realize the massively parallel actor
systems on &amp;quot;usual&amp;quot; computers with only one processor. The
inherent reflexivity of the language use basic to actor systems—
the so-called actor metaphor—allows for a sequentialization of
the concurrent activities of actors by means of the actor system
itself. For this purpose, it is necessary to render the
representations of these actions (the programs) declarative, i.e.,
to render their structure accessible to the system—at least in
certain parts. Hence, a complex of five actors, forming a
general framework for explicit control structures, is introduced
and partially described here. This is, in other words, a general
element for constructing declarative programs in actor systems.
Several instances of this so-called &amp;quot;Program-modul&amp;quot;, which
represent different control structures, are presented, and finally,
an example illustrating the employment of parsing using ATNs
is given.
See Report No. 12 (English version of the memo)
Up to the present, no vision system is capable of constructing
a complete geometric scene description for real-world image
sequences. The absence of input data constitutes a serious
problem for the development of natural language systems
describing time-varying scenes. Another point is that the visual
input data has to be converted from its numerical form into an
adequate graphical representation in order to allow the user and
the system designer to judge the performance of the natural
Memo No. 11
Systemkonzeption zur Verarbeitung
kombinierter sprachlicher und
gestischer Referentenbeschreibungen.
Allgayer, J. and Redding, C
Memo No. 12
Ein Werkzeug zur Visualisierung und
Generierung von geometrischen
Bildfolgenbeschreibungen
Herzog, G.
Computational Linguistics, Volume 14, Number 1, Winter 1988 71
</bodyText>
<figure confidence="0.753941833333333">
Abstracts of Current Literature
Memo No. 13
Deictic and Intrinsic Use of Spatial
Prepositions: A Multidisciplinary
Comparison
Retz-Schmidt, G.
</figure>
<figureCaption confidence="0.9909986">
In Kak, A. and Chen, S.-S. (eds.):
Spatial Reasoning and Multisensor
Fusion, Proceedings of the 1987
Workshop. Los Altos, CA: Morgan
Kaufmann, 1987.
</figureCaption>
<bodyText confidence="0.920767576271187">
language system. In order to deal with this, the tool described
in this report has been developed for the SOCCER domain of
the VITRA project in which soccer games will be analyzed. By
means of this program, geometric scene descriptions can be
graphically re-represented and interactively generated or
modified. Full utilization of the programming environment on
the Symbolics Lisp Machine, which includes high resolution
graphics as well as a mouse-aided window and menu system,
enabled the design of a very comfortable user interface.
In this paper, principles involving the deictic and intrinsic use
of spatial prepositions are examined from the viewpoint of
linguistic, psychological, and artificial intelligence approaches.
After a brief introduction to the natural-language dialog system
CITYTOUR, important concepts with respect to the deictic and
intrinsic use of prepositions are defined. In the following
section, those prepositions that permit deictic as well as
intrinsic use are listed, and the way CITYTOUR copes with
them is explained. Then, the identification of the front, back,
left, and right regions of a reference object is looked at in
more detail. Finally, strategies concerning the deictic and
intrinsic use of spatial concepts are pointed out.
Memo No. 14
A First Snapshot of XTRAGRAM, A
Unification Grammar for German
Based on PATR
Harbusch, K.
Memo No. 15
SYCON—Symbolische
Constraint-Propagierung auf
Netzwerken, Entwurf und
Implementierung
Fendler, M. and Wtchlacz, R.
This paper describes XTRAGRAM, an almost purely syntactic
grammar for parsing German sentences. The grammar is written
in the PATR formalism and developed using the D-PATR
workbench on a XEROX 1108 workstation. The discourse
begins with an introduction to the PATR formalism in order to
also allow people unfamiliar with unification to read the
grammar. In the following section, XTRAGRAM is presented.
First, all category and feature names are defined and all
possible feature paths for the morphological categories are
described. Then, the rules commended by their constructible
feature paths, the words, the stems and the templates are
defined. The linguistic coverage of the presented grammar is
demonstrated by a variety of example DAG&apos;s. Finally, the
paper closes with personal impressions received in working with
the D-PATR workbench.
Constraint propagation has prove to be an efficient processing
technique in many branches of artificial intelligence. In this
paper, the shell system SYCON will be presented with which
arbitrary symbolic constraints can be defined and represented.
After a brief introduction, it will be shown how constraints are
defined and combined to form a network and, from there, how
restrictions of variables are propagated upon constraint
networks. Special algorithms for treating cycles as well as
consistency-checks are presented. The main differences of
SYCON as compared with the systems of Steele, Gosling, and
Freuder are discussed. SYCON is implemented in LISP on a
VAX 11/780 system.
</bodyText>
<page confidence="0.969238">
72 Computational Linguistics, Volume 14, Number 1, Winter 1988
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.001186">
<title confidence="0.978449">ABSTRACTS OF CURRENT LITERATURE Single copies can be ordered from:</title>
<author confidence="0.991856">D Borchers</author>
<affiliation confidence="0.989395">University of Saarbruecken</affiliation>
<address confidence="0.472238">FB 10 Informatik IV</address>
<note confidence="0.4611155">Im Stadtvvald 15 D-6600 Saarbruecken 11</note>
<author confidence="0.354053">Rep of Germany</author>
<phone confidence="0.944499">Telephone: 0681/302-2363</phone>
<title confidence="0.715327">NEW REPORTS AND MEMOS</title>
<pubnum confidence="0.666927">Report No. 5</pubnum>
<abstract confidence="0.627144">eines wissensbasierten Hilfesystems fuer SINIX.</abstract>
<keyword confidence="0.550615">Kemke, C.</keyword>
<note confidence="0.7357325">version in No. 2, 1985, 43-60. Report No. 6 The Role of Natural Language in Knowledge-Based Wahlster, W. Winter, H. (Hrsg.): Intelligence and Man-Machine Systems. Heidelberg: Springer 1986, pp. 62-83. The SC (SINIX Consultant) system is a natural language help</note>
<abstract confidence="0.91714775">facility for the SINIX operating system. SC should answer natural language questions about concepts and commands of the SINIX system. Furthermore, it should, as an active help system, give unsolicited advice to a user during his work with</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
</citationList>
</algorithm>
</algorithms>