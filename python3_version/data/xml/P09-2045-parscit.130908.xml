<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.012889">
<title confidence="0.972725">
Mining User Reviews: from Specification to Summarization
</title>
<author confidence="0.968581">
Xinfan Meng
</author>
<affiliation confidence="0.945716">
Key Laboratory of
Computational Linguistics
(Peking University)
Ministry of Education, China
</affiliation>
<email confidence="0.996451">
mxf@pku.edu.cn
</email>
<sectionHeader confidence="0.99386" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999744588235294">
This paper proposes a method to ex-
tract product features from user reviews
and generate a review summary. This
method only relies on product specifica-
tions, which usually are easy to obtain.
Other resources like segmenter, POS tag-
ger or parser are not required. At fea-
ture extraction stage, multiple specifica-
tions are clustered to extend the vocabu-
lary of product features. Hierarchy struc-
ture information and unit of measurement
information are mined from the specifi-
cation to improve the accuracy of feature
extraction. At summary generation stage,
hierarchy information in specifications is
used to provide a natural conceptual view
of product features.
</bodyText>
<sectionHeader confidence="0.998988" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99979365">
Review mining and summarization aims to extract
users’ opinions towards specific products from
reviews and provide an easy-to-understand sum-
mary of those opinions for potential buyers or
manufacture companies. The task of mining re-
views usually comprises two subtasks: product
features extraction and summary generation.
Hu and Liu (2004a) use association mining
methods to find frequent product features and use
opinion words to predict infrequent product fea-
tures. A.M. Popescu and O. Etzioni (2005) pro-
poses OPINE, an unsupervised information ex-
traction system, which is built on top of the Kon-
wItAll Web information-extraction system. In or-
der to reduce the features redundancy and pro-
vide a conceptual view of extracted features, G.
Carenini et al. (2006a) enhances the earlier work
of Hu and Liu (2004a) by mapping the extracted
features into a hierarchy of features which de-
scribes the entity of interest. M. Gamon et al.
</bodyText>
<subsectionHeader confidence="0.82">
Houfeng Wang
</subsectionHeader>
<bodyText confidence="0.604835818181818">
Key Laboratory of
Computational Linguistics
(Peking University)
Ministry of Education, China
wanghf@pku.edu.cn
(2005) clusters sentences in reviews, then label
each cluster with a keyword and finally provide
a tree map visualization for each product model.
Qi Su et al. (2008) describes a system that clus-
ters product features and opinion words simulta-
neously and iteratively.
</bodyText>
<sectionHeader confidence="0.958592" genericHeader="method">
2 Our Approach
</sectionHeader>
<bodyText confidence="0.999919857142857">
To generate an accurate review summary for a
specific product, product features must be iden-
tified accurately. Since product features are of-
ten domain-dependent, it is desirable that the fea-
tures extraction system is as flexible as possible.
Our approach are unsupervised and relies only on
product specifications.
</bodyText>
<subsectionHeader confidence="0.998241">
2.1 Specification Mining
</subsectionHeader>
<bodyText confidence="0.9984545">
Product specifications can usually be fetched from
web sites like Amazon automatically. Those mate-
rials have several characteristics that are very help-
ful to review mining:
</bodyText>
<listItem confidence="0.990774066666667">
1. Nicely structured, provide a natural concep-
tual view of products;
2. Include only relevant information of the
product and contain few noise words;
3. Except for the product feature itself, usually
also provide a unit to measure this feature.
A typical mobile phone specification is partially
given below:
• Physical features
– Form: Mono block with full keyboard
– Dimensions: 4.49 x 2.24 x 0.39 inch
– Weight: 4.47 oz
• Display and 3D
– Size: 2.36 inch
– Resolution: 320 x 240 pixels (QVGA)
</listItem>
<page confidence="0.964613">
177
</page>
<note confidence="0.958662">
Proceedings of the ACL-IJCNLP 2009 Conference Short Papers, pages 177–180,
Suntec, Singapore, 4 August 2009. c�2009 ACL and AFNLP
</note>
<subsectionHeader confidence="0.998504">
2.2 Architecture
</subsectionHeader>
<bodyText confidence="0.999815875">
The architecture of our approach. is depicted in
Figure 1. We first retrieve multiple specifications
from various sources like websites, user manu-
als etc. Then we run clustering algorithms on
the specifications and generate a specification tree.
And then we use this specification tree to extract
features from product reviews. Finally the ex-
tracted features are presented in a tree form.
</bodyText>
<listItem confidence="0.7806555">
• Unit of measurement: Similar features are
usually measured in similar units. Though
</listItem>
<bodyText confidence="0.979684533333333">
different specification might refer the same
feature with different terms, the units of mea-
surement used to describe those terms are
usually the same. For example, “dimension”
and “size” are different terms, but they share
the same unit “mm” or “inch”.
Naturally, a product can be viewed as a tree of
features. The root is the product itself. Each node
in the tree represents a feature in the product. A
complex feature might be conceptually split into
several simple features. In this case, the complex
feature is represented as a parent and the simple
features are represented as its children.
To construct such a product feature tree, we
adopt the following algorithm:
</bodyText>
<listItem confidence="0.9974597">
• Parse specifications: We first build a dic-
tionary for common units of measurement.
Then for every specification, we use regular
expression and unit dictionary to parse it to a
tree of (feature, unit) pairs.
• Cluster specification trees: Given multiple
specification trees, we cluster them into a sin-
gle tree. Similarities between features are a
combination of their lexical similarity, unit
similarity and positions in hierarchy:
</listItem>
<figure confidence="0.998009277777778">
Specifications
Clustering
Appearance
Size
Thickness
Price
���
Size
Price
Thickness
2 Feature
Extraction
Reviews
3 Summary
Generation
Size: small
Thickness: thin
price: low
</figure>
<figureCaption confidence="0.999985">
Figure 1: Architecture Overview
</figureCaption>
<subsectionHeader confidence="0.997541">
2.3 Specification Clustering
</subsectionHeader>
<bodyText confidence="0.999887384615385">
Usually, each product specification describes a
particular product model. Some features are
present in every product specification. But there
are cases that some features are not available in all
specifications. For instance, “WiFi” features are
only available in a few mobile phones specifica-
tions. Also, different specifications might express
the same features with different words or terms.
So it is necessary to combine multiple specifica-
tions to include all possible features. Clustering
algorithm can be used to combine specifications.
We propose an approach that takes following in-
herent information of specifications into account:
</bodyText>
<listItem confidence="0.56746425">
• Hierarchy structure: Positions of features
in hierarchy reflect relationships between fea-
tures. For example, “length”, “width” feature
are often placed under “size” feature.
</listItem>
<equation confidence="0.99716275">
Sim(f1, f2) =Simle,;(f1, f2)
+ Simnnit(f1, f2)
+ α * Simparent(f1, f2)
+ (1 − α) * Sim�jkildren(f1, f2)
</equation>
<bodyText confidence="0.997916285714286">
The parameter α is set to 0.7 empirically. If
Sim(f1, f2) is larger than 5, we merge fea-
tures f1 and f2 together.
After clustering, we can get a specification tree
resembles the one in subsection 2.1. However,
this specification tree contains much more features
than any single specification.
</bodyText>
<subsectionHeader confidence="0.941077">
2.4 Features Extraction
</subsectionHeader>
<bodyText confidence="0.999942714285714">
Features described in reviews can be classified into
two categories: explicit features and implicit fea-
tures (Hu and Liu, 2004a). In the following sec-
tions, we describe methods to extract features in
Chinese product reviews. However, these meth-
ods are designed to be flexible so that they can be
easily adapted to other languages.
</bodyText>
<page confidence="0.99167">
178
</page>
<subsectionHeader confidence="0.645001">
2.4.1 Explicit Feature Extraction
</subsectionHeader>
<bodyText confidence="0.999956166666667">
We generate bi-grams in character level for every
feature in the specification tree, and then match
them to every sentence in the reviews. There might
be cases that some bi-grams would overlap or con-
catenated. In these cases, we join those bi-grams
together to form a longer expression.
</bodyText>
<subsectionHeader confidence="0.918606">
2.4.2 Implicit Feature Extraction
</subsectionHeader>
<bodyText confidence="0.9999779375">
Some features are not mentioned directly but can
be inferred from the text. Qi Su et al. (2008) in-
vestigates the problem of extracting those kinds
of features. There approach utilizes the associa-
tion between features and opinion words to find
implicit features when opinion words are present
in the text. Our methods consider another kind of
association: the association between features and
units of measurement. For example, in the sen-
tence “A mobile phone with 8 mega-pixel, not very
common in the market.” feature name is absent in
the sentence, but the unit of measurement “mega
pixel” indicates that this sentence is describing the
feature “camera resolution”.
We use regular expression and dictionary of unit
to extract those features.
</bodyText>
<subsectionHeader confidence="0.994221">
2.5 Summary Generation
</subsectionHeader>
<bodyText confidence="0.982402181818182">
There are many ways to provide a summary. Hu
and Liu (2004b) count the number of positive and
negative review items towards individual feature
and present these statistics to users. G. Carenini
et al. (2006b) and M. Gamon et al. (2005) both
adopt a tree map visualization to display features
and sentiments associated with features.
We adopt a relatively simple method to generate
a summary. We do not predict the polarities of the
user’s overall attitudes towards product features.
Predicting polarities might entail the construction
of a sentiment dictionary, which is domain depen-
dent. Also, we believe that text descriptions of fea-
tures are more helpful to users. For example, for
feature “size”, descriptions like “small” and “thin”
are more readable than “positive”.
Usually, the words used to describe a product
feature are short. For each product feature, we re-
port several most frequently occurring uni-grams
and bi-grams as the summary of this feature. In
Figure 2, we present a snippet of a sample sum-
mary output.
</bodyText>
<listItem confidence="0.999728">
• mobile phone: not bad, expensive
o appearance: cool
• color: white
• size: small, thin
o camera functionality: so-so, acceptable
• picture quality: good
• picture resolution: not high
o entertainment functionality: powerful
• game: fun, simple
</listItem>
<figureCaption confidence="0.979776">
Figure 2: A Summary Snippet
</figureCaption>
<sectionHeader confidence="0.997487" genericHeader="method">
3 Experiments
</sectionHeader>
<bodyText confidence="0.9995962">
In this paper, we mainly focus on Chinese prod-
uct reviews. The experimental data are retrieved
from ZOL websites (www.zol.com.cn). We
collected user reviews on 2 mobile phones, 1 digi-
tal camera and 2 notebook computers. To evaluate
performance of our algorithm on real-world data,
we do not perform noise word filtering on these
data. Then we have a human tagger to tag features
in the user reviews. Both explicit features and im-
plicit features are tagged.
</bodyText>
<table confidence="0.9971496">
No. of Clustering Mobile Digital Notebook
Specifications Phone Camera Computer
1 153 101 102
5 436 312 211
10 520 508 312
</table>
<tableCaption confidence="0.999905">
Table 1: No. of Features in Specification Trees.
</tableCaption>
<bodyText confidence="0.999753666666667">
The specifications for all 3 kinds of products
are retrieved from ZOL, PConline and IT168 web-
sites. We run the clustering algorithm on the spec-
ifications and generate a specification tree for each
kind of product. Table 1 shows that our clustering
method is effective in collecting product features.
The number of features increases rapidly with the
number of specifications input into clustering al-
gorithm. When we use 10 specifications as input,
the clustering methods can collect several hundred
features.
Then we run our algorithm on the data and eval-
uate the precision and recall. We also run the al-
gorithms described in Hu and Liu (2004a) on the
same data as the baseline.
From Table 2, we can see the precision of base-
line system is much lower than its recall. Examin-
ing the features extracted by baseline system, we
find that many mistakenly recognized features are
high-frequency words. Some of those words ap-
pear many times in text. They are related to prod-
</bodyText>
<page confidence="0.996497">
179
</page>
<table confidence="0.999714375">
Product Model No. of Hu and Liu’s Approach the Proposed Approach
Features
Precision Recall F-measure Precision Recall F-measure
Mobile Phone 1 507 0.58 0.74 0.65 0.69 0.78 0.73
Mobile Phone 2 477 0.59 0.65 0.62 0.71 0.77 0.74
Digital camera 86 0.56 0.68 0.61 0.69 0.78 0.73
Notebook Computer 1 139 0.41 0.63 0.50 0.70 0.74 0.72
Notebook Computer 2 95 0.71 0.88 0.79 0.76 0.88 0.82
</table>
<tableCaption confidence="0.99953">
Table 2: Precision and Recall of Product Extraction.
</tableCaption>
<bodyText confidence="0.999593846153846">
uct but are not considered to be features. Some
examples of these words are “advantages”, “dis-
advantages” and “good points” etc. And many
other high-frequency words are completely irrel-
evant to product reviews. Those words include
“user”, “review” and “comment” etc. In contrast,
our approach recognizes features by matching bi-
grams to the specification tree. Because those
high-frequency words usually are not present in
specifications. They are ignored by our approach.
Thus from Table 2, we can conclude that our ap-
proach could achieve a relatively high precision
while keep a high recall.
</bodyText>
<table confidence="0.999110333333333">
Product Model Precision
Mobile Phone 1 0.78
Mobile Phone 2 0.72
Digital camera 0.81
Notebook Computer 1 0.73
Notebook Computer 2 0.74
</table>
<tableCaption confidence="0.999797">
Table 3: Precision of Summary.
</tableCaption>
<bodyText confidence="0.999964363636364">
After the summary is given, for each word in
summary, we ask one person to decide whether
this word correctly describe the feature. Table 3
gives the summary precision for each product
model. In general, on-line reviews have several
characteristics in common. The sentences are usu-
ally short. Also, words describing features usu-
ally co-occur with features in the same sentence.
Thus, when the features in a sentence are correctly
recognized, Words describing those features are
likely to be identified by our methods.
</bodyText>
<sectionHeader confidence="0.999535" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.9999659">
In this paper, we describe a simple but effective
way to extract product features from user reviews
and provide an easy-to-understand summary. The
proposed approach is based only on product spec-
ifications. The experimental results indicate that
our approach is promising.
In future works, we will try to introduce other
resources and tools into our system. We will also
explore different ways of presenting and visualiz-
ing the summary to improve user experience.
</bodyText>
<sectionHeader confidence="0.998949" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.97958175">
This research is supported by National Natural
Science Foundation of Chinese (No.60675035)
and Beijing Natural Science Foundation
(No.4072012).
</bodyText>
<sectionHeader confidence="0.997456" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.997314633333333">
M. Hu and B. Liu. 2004a. Mining and Summariz-
ing Customer Reviews. In Proceedings of the 2004
ACM SIGKDD international conference on Knowl-
edge discovery and data mining, pages 168-177.
ACM Press New York, NY, USA.
M. Hu and B. Liu. 2004b. Mining Opinion Features
in Customer Reviews. In Proceedings of Nineteenth
National Conference on Artificial Intelligence.
M. Gamon, A. Aue, S. Corston-Oliver, and E. Ringger.
2005. Pulse: Mining Customer Opinions from Free
Text. In Proceedings of the 6th International Sym-
posium on Intelligent Data Analysis.
A.M. Popescu and O. Etzioni. 2005. Extracting Prod-
uct Features and Opinions from reviews. In Pro-
ceedings of the Conference on Empirical Methods
in Natural Language Processing(EMNLP).
Giuseppe Carenini, Raymond T. Ng, and Adam Pauls.
2006a. Multi-Document Summarization of Evalua-
tive Text. In Proceedings of the conference of the
European Chapter of the Association for Computa-
tional Linguistics.
Giuseppe Carenini, Raymond T. Ng, and Adam Pauls.
2006b. Interactive multimedia summaries of evalu-
ative text. In Proceedings of Intelligent User Inter-
faces (IUI), pages 124-131. ACM Press, 2006.
Qi Su, Xinying Xu, Honglei Guo, Zhili Guo, Xian Wu,
Xiaoxun Zhang, Bin Swen. 2008. Hidden Senti-
ment Association In Chinese Web Opinion Mining.
In Proceedings of the 17th International Conference
on the World Wide Web, pages 959-968.
</reference>
<page confidence="0.997644">
180
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.537303">
<title confidence="0.999957">Mining User Reviews: from Specification to Summarization</title>
<author confidence="0.903298">Xinfan Meng</author>
<affiliation confidence="0.87042675">Key Laboratory of Computational Linguistics (Peking University) Ministry of Education, China</affiliation>
<email confidence="0.97298">mxf@pku.edu.cn</email>
<abstract confidence="0.999686388888889">This paper proposes a method to extract product features from user reviews and generate a review summary. This method only relies on product specifications, which usually are easy to obtain. Other resources like segmenter, POS tagger or parser are not required. At feature extraction stage, multiple specifications are clustered to extend the vocabulary of product features. Hierarchy structure information and unit of measurement information are mined from the specification to improve the accuracy of feature extraction. At summary generation stage, hierarchy information in specifications is used to provide a natural conceptual view of product features.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>M Hu</author>
<author>B Liu</author>
</authors>
<title>Mining and Summarizing Customer Reviews.</title>
<date>2004</date>
<booktitle>In Proceedings of the 2004 ACM SIGKDD international conference on Knowledge discovery and data mining,</booktitle>
<pages>168--177</pages>
<publisher>ACM Press</publisher>
<location>New York, NY, USA.</location>
<contexts>
<context position="1196" citStr="Hu and Liu (2004" startWordPosition="172" endWordPosition="175"> information and unit of measurement information are mined from the specification to improve the accuracy of feature extraction. At summary generation stage, hierarchy information in specifications is used to provide a natural conceptual view of product features. 1 Introduction Review mining and summarization aims to extract users’ opinions towards specific products from reviews and provide an easy-to-understand summary of those opinions for potential buyers or manufacture companies. The task of mining reviews usually comprises two subtasks: product features extraction and summary generation. Hu and Liu (2004a) use association mining methods to find frequent product features and use opinion words to predict infrequent product features. A.M. Popescu and O. Etzioni (2005) proposes OPINE, an unsupervised information extraction system, which is built on top of the KonwItAll Web information-extraction system. In order to reduce the features redundancy and provide a conceptual view of extracted features, G. Carenini et al. (2006a) enhances the earlier work of Hu and Liu (2004a) by mapping the extracted features into a hierarchy of features which describes the entity of interest. M. Gamon et al. Houfeng </context>
<context position="6527" citStr="Hu and Liu, 2004" startWordPosition="1006" endWordPosition="1009">le, “length”, “width” feature are often placed under “size” feature. Sim(f1, f2) =Simle,;(f1, f2) + Simnnit(f1, f2) + α * Simparent(f1, f2) + (1 − α) * Sim�jkildren(f1, f2) The parameter α is set to 0.7 empirically. If Sim(f1, f2) is larger than 5, we merge features f1 and f2 together. After clustering, we can get a specification tree resembles the one in subsection 2.1. However, this specification tree contains much more features than any single specification. 2.4 Features Extraction Features described in reviews can be classified into two categories: explicit features and implicit features (Hu and Liu, 2004a). In the following sections, we describe methods to extract features in Chinese product reviews. However, these methods are designed to be flexible so that they can be easily adapted to other languages. 178 2.4.1 Explicit Feature Extraction We generate bi-grams in character level for every feature in the specification tree, and then match them to every sentence in the reviews. There might be cases that some bi-grams would overlap or concatenated. In these cases, we join those bi-grams together to form a longer expression. 2.4.2 Implicit Feature Extraction Some features are not mentioned dire</context>
<context position="7915" citStr="Hu and Liu (2004" startWordPosition="1232" endWordPosition="1235">features and opinion words to find implicit features when opinion words are present in the text. Our methods consider another kind of association: the association between features and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression and dictionary of unit to extract those features. 2.5 Summary Generation There are many ways to provide a summary. Hu and Liu (2004b) count the number of positive and negative review items towards individual feature and present these statistics to users. G. Carenini et al. (2006b) and M. Gamon et al. (2005) both adopt a tree map visualization to display features and sentiments associated with features. We adopt a relatively simple method to generate a summary. We do not predict the polarities of the user’s overall attitudes towards product features. Predicting polarities might entail the construction of a sentiment dictionary, which is domain dependent. Also, we believe that text descriptions of features are more helpful </context>
<context position="10440" citStr="Hu and Liu (2004" startWordPosition="1646" endWordPosition="1649"> 3 kinds of products are retrieved from ZOL, PConline and IT168 websites. We run the clustering algorithm on the specifications and generate a specification tree for each kind of product. Table 1 shows that our clustering method is effective in collecting product features. The number of features increases rapidly with the number of specifications input into clustering algorithm. When we use 10 specifications as input, the clustering methods can collect several hundred features. Then we run our algorithm on the data and evaluate the precision and recall. We also run the algorithms described in Hu and Liu (2004a) on the same data as the baseline. From Table 2, we can see the precision of baseline system is much lower than its recall. Examining the features extracted by baseline system, we find that many mistakenly recognized features are high-frequency words. Some of those words appear many times in text. They are related to prod179 Product Model No. of Hu and Liu’s Approach the Proposed Approach Features Precision Recall F-measure Precision Recall F-measure Mobile Phone 1 507 0.58 0.74 0.65 0.69 0.78 0.73 Mobile Phone 2 477 0.59 0.65 0.62 0.71 0.77 0.74 Digital camera 86 0.56 0.68 0.61 0.69 0.78 0.</context>
</contexts>
<marker>Hu, Liu, 2004</marker>
<rawString>M. Hu and B. Liu. 2004a. Mining and Summarizing Customer Reviews. In Proceedings of the 2004 ACM SIGKDD international conference on Knowledge discovery and data mining, pages 168-177. ACM Press New York, NY, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Hu</author>
<author>B Liu</author>
</authors>
<title>Mining Opinion Features in Customer Reviews.</title>
<date>2004</date>
<booktitle>In Proceedings of Nineteenth National Conference on Artificial Intelligence.</booktitle>
<contexts>
<context position="1196" citStr="Hu and Liu (2004" startWordPosition="172" endWordPosition="175"> information and unit of measurement information are mined from the specification to improve the accuracy of feature extraction. At summary generation stage, hierarchy information in specifications is used to provide a natural conceptual view of product features. 1 Introduction Review mining and summarization aims to extract users’ opinions towards specific products from reviews and provide an easy-to-understand summary of those opinions for potential buyers or manufacture companies. The task of mining reviews usually comprises two subtasks: product features extraction and summary generation. Hu and Liu (2004a) use association mining methods to find frequent product features and use opinion words to predict infrequent product features. A.M. Popescu and O. Etzioni (2005) proposes OPINE, an unsupervised information extraction system, which is built on top of the KonwItAll Web information-extraction system. In order to reduce the features redundancy and provide a conceptual view of extracted features, G. Carenini et al. (2006a) enhances the earlier work of Hu and Liu (2004a) by mapping the extracted features into a hierarchy of features which describes the entity of interest. M. Gamon et al. Houfeng </context>
<context position="6527" citStr="Hu and Liu, 2004" startWordPosition="1006" endWordPosition="1009">le, “length”, “width” feature are often placed under “size” feature. Sim(f1, f2) =Simle,;(f1, f2) + Simnnit(f1, f2) + α * Simparent(f1, f2) + (1 − α) * Sim�jkildren(f1, f2) The parameter α is set to 0.7 empirically. If Sim(f1, f2) is larger than 5, we merge features f1 and f2 together. After clustering, we can get a specification tree resembles the one in subsection 2.1. However, this specification tree contains much more features than any single specification. 2.4 Features Extraction Features described in reviews can be classified into two categories: explicit features and implicit features (Hu and Liu, 2004a). In the following sections, we describe methods to extract features in Chinese product reviews. However, these methods are designed to be flexible so that they can be easily adapted to other languages. 178 2.4.1 Explicit Feature Extraction We generate bi-grams in character level for every feature in the specification tree, and then match them to every sentence in the reviews. There might be cases that some bi-grams would overlap or concatenated. In these cases, we join those bi-grams together to form a longer expression. 2.4.2 Implicit Feature Extraction Some features are not mentioned dire</context>
<context position="7915" citStr="Hu and Liu (2004" startWordPosition="1232" endWordPosition="1235">features and opinion words to find implicit features when opinion words are present in the text. Our methods consider another kind of association: the association between features and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression and dictionary of unit to extract those features. 2.5 Summary Generation There are many ways to provide a summary. Hu and Liu (2004b) count the number of positive and negative review items towards individual feature and present these statistics to users. G. Carenini et al. (2006b) and M. Gamon et al. (2005) both adopt a tree map visualization to display features and sentiments associated with features. We adopt a relatively simple method to generate a summary. We do not predict the polarities of the user’s overall attitudes towards product features. Predicting polarities might entail the construction of a sentiment dictionary, which is domain dependent. Also, we believe that text descriptions of features are more helpful </context>
<context position="10440" citStr="Hu and Liu (2004" startWordPosition="1646" endWordPosition="1649"> 3 kinds of products are retrieved from ZOL, PConline and IT168 websites. We run the clustering algorithm on the specifications and generate a specification tree for each kind of product. Table 1 shows that our clustering method is effective in collecting product features. The number of features increases rapidly with the number of specifications input into clustering algorithm. When we use 10 specifications as input, the clustering methods can collect several hundred features. Then we run our algorithm on the data and evaluate the precision and recall. We also run the algorithms described in Hu and Liu (2004a) on the same data as the baseline. From Table 2, we can see the precision of baseline system is much lower than its recall. Examining the features extracted by baseline system, we find that many mistakenly recognized features are high-frequency words. Some of those words appear many times in text. They are related to prod179 Product Model No. of Hu and Liu’s Approach the Proposed Approach Features Precision Recall F-measure Precision Recall F-measure Mobile Phone 1 507 0.58 0.74 0.65 0.69 0.78 0.73 Mobile Phone 2 477 0.59 0.65 0.62 0.71 0.77 0.74 Digital camera 86 0.56 0.68 0.61 0.69 0.78 0.</context>
</contexts>
<marker>Hu, Liu, 2004</marker>
<rawString>M. Hu and B. Liu. 2004b. Mining Opinion Features in Customer Reviews. In Proceedings of Nineteenth National Conference on Artificial Intelligence.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Gamon</author>
<author>A Aue</author>
<author>S Corston-Oliver</author>
<author>E Ringger</author>
</authors>
<title>Pulse: Mining Customer Opinions from Free Text.</title>
<date>2005</date>
<booktitle>In Proceedings of the 6th International Symposium on Intelligent Data Analysis.</booktitle>
<contexts>
<context position="8092" citStr="Gamon et al. (2005)" startWordPosition="1261" endWordPosition="1264">tures and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression and dictionary of unit to extract those features. 2.5 Summary Generation There are many ways to provide a summary. Hu and Liu (2004b) count the number of positive and negative review items towards individual feature and present these statistics to users. G. Carenini et al. (2006b) and M. Gamon et al. (2005) both adopt a tree map visualization to display features and sentiments associated with features. We adopt a relatively simple method to generate a summary. We do not predict the polarities of the user’s overall attitudes towards product features. Predicting polarities might entail the construction of a sentiment dictionary, which is domain dependent. Also, we believe that text descriptions of features are more helpful to users. For example, for feature “size”, descriptions like “small” and “thin” are more readable than “positive”. Usually, the words used to describe a product feature are shor</context>
</contexts>
<marker>Gamon, Aue, Corston-Oliver, Ringger, 2005</marker>
<rawString>M. Gamon, A. Aue, S. Corston-Oliver, and E. Ringger. 2005. Pulse: Mining Customer Opinions from Free Text. In Proceedings of the 6th International Symposium on Intelligent Data Analysis.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A M Popescu</author>
<author>O Etzioni</author>
</authors>
<title>Extracting Product Features and Opinions from reviews.</title>
<date>2005</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing(EMNLP).</booktitle>
<marker>Popescu, Etzioni, 2005</marker>
<rawString>A.M. Popescu and O. Etzioni. 2005. Extracting Product Features and Opinions from reviews. In Proceedings of the Conference on Empirical Methods in Natural Language Processing(EMNLP).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Giuseppe Carenini</author>
<author>Raymond T Ng</author>
<author>Adam Pauls</author>
</authors>
<title>Multi-Document Summarization of Evaluative Text.</title>
<date>2006</date>
<booktitle>In Proceedings of the conference of the European Chapter of the Association for Computational Linguistics.</booktitle>
<contexts>
<context position="1618" citStr="Carenini et al. (2006" startWordPosition="240" endWordPosition="243">ummary of those opinions for potential buyers or manufacture companies. The task of mining reviews usually comprises two subtasks: product features extraction and summary generation. Hu and Liu (2004a) use association mining methods to find frequent product features and use opinion words to predict infrequent product features. A.M. Popescu and O. Etzioni (2005) proposes OPINE, an unsupervised information extraction system, which is built on top of the KonwItAll Web information-extraction system. In order to reduce the features redundancy and provide a conceptual view of extracted features, G. Carenini et al. (2006a) enhances the earlier work of Hu and Liu (2004a) by mapping the extracted features into a hierarchy of features which describes the entity of interest. M. Gamon et al. Houfeng Wang Key Laboratory of Computational Linguistics (Peking University) Ministry of Education, China wanghf@pku.edu.cn (2005) clusters sentences in reviews, then label each cluster with a keyword and finally provide a tree map visualization for each product model. Qi Su et al. (2008) describes a system that clusters product features and opinion words simultaneously and iteratively. 2 Our Approach To generate an accurate r</context>
<context position="8063" citStr="Carenini et al. (2006" startWordPosition="1255" endWordPosition="1258">on: the association between features and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression and dictionary of unit to extract those features. 2.5 Summary Generation There are many ways to provide a summary. Hu and Liu (2004b) count the number of positive and negative review items towards individual feature and present these statistics to users. G. Carenini et al. (2006b) and M. Gamon et al. (2005) both adopt a tree map visualization to display features and sentiments associated with features. We adopt a relatively simple method to generate a summary. We do not predict the polarities of the user’s overall attitudes towards product features. Predicting polarities might entail the construction of a sentiment dictionary, which is domain dependent. Also, we believe that text descriptions of features are more helpful to users. For example, for feature “size”, descriptions like “small” and “thin” are more readable than “positive”. Usually, the words used to descri</context>
</contexts>
<marker>Carenini, Ng, Pauls, 2006</marker>
<rawString>Giuseppe Carenini, Raymond T. Ng, and Adam Pauls. 2006a. Multi-Document Summarization of Evaluative Text. In Proceedings of the conference of the European Chapter of the Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Giuseppe Carenini</author>
<author>Raymond T Ng</author>
<author>Adam Pauls</author>
</authors>
<title>Interactive multimedia summaries of evaluative text.</title>
<date>2006</date>
<booktitle>In Proceedings of Intelligent User Interfaces (IUI),</booktitle>
<pages>124--131</pages>
<publisher>ACM Press,</publisher>
<contexts>
<context position="1618" citStr="Carenini et al. (2006" startWordPosition="240" endWordPosition="243">ummary of those opinions for potential buyers or manufacture companies. The task of mining reviews usually comprises two subtasks: product features extraction and summary generation. Hu and Liu (2004a) use association mining methods to find frequent product features and use opinion words to predict infrequent product features. A.M. Popescu and O. Etzioni (2005) proposes OPINE, an unsupervised information extraction system, which is built on top of the KonwItAll Web information-extraction system. In order to reduce the features redundancy and provide a conceptual view of extracted features, G. Carenini et al. (2006a) enhances the earlier work of Hu and Liu (2004a) by mapping the extracted features into a hierarchy of features which describes the entity of interest. M. Gamon et al. Houfeng Wang Key Laboratory of Computational Linguistics (Peking University) Ministry of Education, China wanghf@pku.edu.cn (2005) clusters sentences in reviews, then label each cluster with a keyword and finally provide a tree map visualization for each product model. Qi Su et al. (2008) describes a system that clusters product features and opinion words simultaneously and iteratively. 2 Our Approach To generate an accurate r</context>
<context position="8063" citStr="Carenini et al. (2006" startWordPosition="1255" endWordPosition="1258">on: the association between features and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression and dictionary of unit to extract those features. 2.5 Summary Generation There are many ways to provide a summary. Hu and Liu (2004b) count the number of positive and negative review items towards individual feature and present these statistics to users. G. Carenini et al. (2006b) and M. Gamon et al. (2005) both adopt a tree map visualization to display features and sentiments associated with features. We adopt a relatively simple method to generate a summary. We do not predict the polarities of the user’s overall attitudes towards product features. Predicting polarities might entail the construction of a sentiment dictionary, which is domain dependent. Also, we believe that text descriptions of features are more helpful to users. For example, for feature “size”, descriptions like “small” and “thin” are more readable than “positive”. Usually, the words used to descri</context>
</contexts>
<marker>Carenini, Ng, Pauls, 2006</marker>
<rawString>Giuseppe Carenini, Raymond T. Ng, and Adam Pauls. 2006b. Interactive multimedia summaries of evaluative text. In Proceedings of Intelligent User Interfaces (IUI), pages 124-131. ACM Press, 2006.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qi Su</author>
<author>Xinying Xu</author>
<author>Honglei Guo</author>
<author>Zhili Guo</author>
<author>Xian Wu</author>
<author>Xiaoxun Zhang</author>
<author>Bin Swen</author>
</authors>
<title>Hidden Sentiment Association In Chinese Web Opinion Mining.</title>
<date>2008</date>
<booktitle>In Proceedings of the 17th International Conference on the World Wide Web,</booktitle>
<pages>959--968</pages>
<contexts>
<context position="2077" citStr="Su et al. (2008)" startWordPosition="312" endWordPosition="315">l Web information-extraction system. In order to reduce the features redundancy and provide a conceptual view of extracted features, G. Carenini et al. (2006a) enhances the earlier work of Hu and Liu (2004a) by mapping the extracted features into a hierarchy of features which describes the entity of interest. M. Gamon et al. Houfeng Wang Key Laboratory of Computational Linguistics (Peking University) Ministry of Education, China wanghf@pku.edu.cn (2005) clusters sentences in reviews, then label each cluster with a keyword and finally provide a tree map visualization for each product model. Qi Su et al. (2008) describes a system that clusters product features and opinion words simultaneously and iteratively. 2 Our Approach To generate an accurate review summary for a specific product, product features must be identified accurately. Since product features are often domain-dependent, it is desirable that the features extraction system is as flexible as possible. Our approach are unsupervised and relies only on product specifications. 2.1 Specification Mining Product specifications can usually be fetched from web sites like Amazon automatically. Those materials have several characteristics that are ve</context>
<context position="7186" citStr="Su et al. (2008)" startWordPosition="1115" endWordPosition="1118">methods to extract features in Chinese product reviews. However, these methods are designed to be flexible so that they can be easily adapted to other languages. 178 2.4.1 Explicit Feature Extraction We generate bi-grams in character level for every feature in the specification tree, and then match them to every sentence in the reviews. There might be cases that some bi-grams would overlap or concatenated. In these cases, we join those bi-grams together to form a longer expression. 2.4.2 Implicit Feature Extraction Some features are not mentioned directly but can be inferred from the text. Qi Su et al. (2008) investigates the problem of extracting those kinds of features. There approach utilizes the association between features and opinion words to find implicit features when opinion words are present in the text. Our methods consider another kind of association: the association between features and units of measurement. For example, in the sentence “A mobile phone with 8 mega-pixel, not very common in the market.” feature name is absent in the sentence, but the unit of measurement “mega pixel” indicates that this sentence is describing the feature “camera resolution”. We use regular expression an</context>
</contexts>
<marker>Su, Xu, Guo, Guo, Wu, Zhang, Swen, 2008</marker>
<rawString>Qi Su, Xinying Xu, Honglei Guo, Zhili Guo, Xian Wu, Xiaoxun Zhang, Bin Swen. 2008. Hidden Sentiment Association In Chinese Web Opinion Mining. In Proceedings of the 17th International Conference on the World Wide Web, pages 959-968.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>