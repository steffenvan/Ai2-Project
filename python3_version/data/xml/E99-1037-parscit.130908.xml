<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.009713">
<note confidence="0.713083">
Proceedings of EACL &apos;99
</note>
<title confidence="0.997767">
Dialogue Processing in a CALL-System
</title>
<author confidence="0.900847">
Veit Reuer
</author>
<affiliation confidence="0.774953">
Institut fiir deutsche Sprache und Linguistik
</affiliation>
<address confidence="0.67774725">
Humboldt-Universitat zu Berlin
Unter den Linden 6
10099 Berlin
GERMANY
</address>
<email confidence="0.985283">
Veit.Reuer@compling.hu-berlin.de
</email>
<sectionHeader confidence="0.995009" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999954903225806">
In a CALL-environment (Computer-
assisted language learning) programs
should ideally allow the learner to
train his/her communicative competence,
which is one of the main goals of foreign
language teaching nowadays. This can
be reached by allowing learners to use
and train their knowledge of a foreign
language in realistic dialogue-style exer-
cises. All levels of linguistic and com-
municational analysis have to be consid-
ered to realize such a system. In this
paper I will concentrate on the dialogue
component of the concept, which relies
on two main knowledge sources. The
discourse grammar structures the dia-
logue elements (or dialogue acts) as pos-
sible parts of a dialogue and the dialogue
knowledge base provides the possible con-
tents of dialogues. Additionally, a fram-
ing discourse structure has to be built to
provide the specific dialogue-exercise. A
FSA (finite state automaton) based on
the discourse grammar determines the
possible moves which the dialogue might
take. On the one hand this concept is re-
stricted enough to allow for (relatively)
easy maintenance as well as expansion
and on the other hand it is advanced
enough to allow for simulated complex
dialogues.
</bodyText>
<sectionHeader confidence="0.999337" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999980041666667">
Today the main goal in foreign language teaching
is acquiring the so-called communicative compe-
tence instead of only memorizing the structure of
the language. This can be achieved by making
active language production one of the main parts
of the curriculum. Being an efficient part of the
media to enhance the learning process, computers
should present tasks that support the acquisition
of communicative competence. In the present con-
cept, a presentation of situations is suggested, in
which the learner has to produce language, i.e.
produce complete sentences in a simulated dia-
logue. Various program modules analyse the in-
put linguistically, give feedback in case of errors
and present appropriate reactions to continue the
dialogue. This gives language learners a chance
to use their knowledge of the second language in
a meaningful situation apart from the class room
setting.
Three goals are of relevance: 1) the language
learner should be encouraged to enter free-formed
input instead of thinking about the &apos;expectation&apos;
of the program; 2) the program should offer re-
liable feedback to the learner about his/her per-
formance and 3) the program should be (easily)
expandable.
When one uses the program, a situation is pre-
sented to the learner in which s/he is required to
act in order to solve the particular problem at
hand. For example, the learner is asked to buy
tickets for a movie and has to engage in a writ-
ten dialogue with the computer as the seller of the
tickets.
The motivation for the development of the sys-
tern arises from the above mentioned pedagogi-
cal considerations and the insight that traditional
language learning programs do offer only few or
none of the features to reach the above mentioned
goals. The main part of this paper, however, deals
only with the computational aspects of the prob-
lem: a possible way to implement such a dialogue
component. In the next section I will focus on
the dialogue component, which on the one hand
allows the learner to communicate with the com-
puter in various dialogue situations, and on the
other hand is restricted enough to be easily ex-
pandable and maintainable and gives the possibil-
ity for advanced feedback. Finally I will give a
</bodyText>
<page confidence="0.996548">
253
</page>
<bodyText confidence="0.604118">
Proceedings of EACL &apos;99
rough sketch of the complete system.
</bodyText>
<sectionHeader confidence="0.957506" genericHeader="method">
2 Discourse Grammars
</sectionHeader>
<bodyText confidence="0.999691078947368">
One way of realizing such dialogues is to de-
velop discourse grammars which describe the steps
through distinct parts of dialogues. This possibil-
ity is chosen in the present concept, since it en-
ables the learner to lead written, situation-based
dialogues almost as in the class-room situation.
The advantage of a discourse grammar over a com-
pletely plan-based dialogue structure is the sepe-
rate representation of possible moves (&apos;dialogue
acts&apos; in Alexandersson et al. (1994)) and the con-
tent of the discourse. The discourse grammar of
an &apos;information-gathering&apos; dialogue can be used
while reporting an accident as well as while or-
dering a pizza. In the first case the police officer
wants to know all about the accident and possible
casualties and in the latter case the pizza deliv-
ery wants to know the toppings and size of the
pizza. On the other hand guidance is needed for
the learner in the CALL-scenario. Systems like
the one described in Carberry (1990) are much
too open to be used for language learning. The
system would not be able to give any feedback to
the learner in case of erroneous input. Therefore
the system uses only restricted knowledge about
what types of input to expect and how to react
to them since the general intentions of the learner
are known to the system through the situation
presented to the learner. In other NLP-based sys-
tems like &apos;Herr Kommissar&apos; (deSmedt, 1995) and
&apos;LINGO&apos; (Murray, 1995), the dialogue with the
system either allows only single question-answer
exchanges or is strongly embedded into the re-
spective scenario. In the first case the structure
of a complete dialogue does not become clear to
the learner and the initiative is with the learner
who might not know what to do. In the second
case it is difficult to include new scenarios since
not only the content of the new dialogue has to
be coded but also the various dialogue structures.
Moreover the design of a system might not allow
for different types of dialogues.
The dialogue component contains two main
knowledge bases: The first one contains the dis-
course grammars, which structure so-called &apos;goal-
driven dialogues&apos; or &apos;task-oriented dialogues&apos;. 1
The idea of discourse grammars as a means to han-
dle dialogue situations is for instance presented in
Fawcett and Taylor (1989). The second knowledge
base contains knowledge about the content of the
dialogue itself. This data is used to infer a mean-
&apos;For a discussion about discourse grammars in gen-
eral see e.g. Taylor et al. (1989).
ingful reaction to the input sentence. Additionally
this base contains slots in which the information
given by the learner is stored.
The following figure shows a simplified part of a
discourse grammar, which models an information
gathering dialogue such as is necessary in the case
of collecting information about an accident. Ad-
ditional items of discourse grammars are of course
needed, for example, to start and end a telephone
call, etc.
The same type of structures is also used in
the analysis of dialogues, e.g. (Carletta et al.,
1997). Here dialogues are analysed with the help
of a &apos;Dialogue Structure Coding Scheme&apos;, which in
particular contains only a limited number of pos-
sible moves between dialogue partners. A similar
analysis was done in the preparational phase of the
Verbmobil project (Alexandersson et al., 1994). In
a dialogue system where the intentions of the dia-
logue partners are known and the fixed structures
serve to assess the performance of the language
learner, the restrictions will probably not make
the overall behaviour of the system worse than
more flexible dialogue systems.
</bodyText>
<figure confidence="0.788511">
info_gather
THANK_END
</figure>
<figureCaption confidence="0.999909">
Figure 1: Simplified discourse grammar
</figureCaption>
<bodyText confidence="0.99572225">
The dialogue module uses a surrounding dis-
course grammar, which includes the grammar
parts for starting and ending a telephone call etc.
From here the information gathering structure is
called to try to fill the variables in the dialogue
knowledge base (see below) by asking the learner
a question. This process is continued as long as
there are open questions (open questions) or un-
til the learner does not provide interpretable in-
put even after a repeated question (INQUIRE -
THANK_END).
The dialogue knowledge base contains the data
</bodyText>
<figure confidence="0.996140230769231">
7 interpretable
questions / \
open
answer
-,- QUESTION
uninterpretable
answer
CONFIRM.__ interpretable INQUIRE
answer
uninterpretable
answer
no more
questions
</figure>
<page confidence="0.962119">
254
</page>
<bodyText confidence="0.996277483516484">
Proceedings of EACL &apos;99
necessary to lead a dialogue with a certain con-
tent. The data is organized in a hierarchical struc-
ture. In the &apos;police call&apos; example the root-node
consists of a slot with a first reaction of the offi-
cer (greeting) to be presented to the learner. The
daughter nodes (e.g. accident, theft) contain some
slots which are used for the actual presentation of
reactions on the screen or for information storage
and retrieval. Some slots are:
question for pieces of information: This
includes canned text, which is pre-
sented to the learner. For example
the police officer might ask &apos;Are there
any injured people?&apos;.
information about expected answer:
The semantic structure of the
learner&apos;s input is checked against the
content of this slot and in case of
variables it is stored.
keywords to match the learner&apos;s input:
In case the parser was not able to pro-
duce a semantic representation, the
system retreats to keyword matching
in order to provide at least some re-
action.
- text as answer: A sentence is passed to
the learner to acknowledge or confirm
the processing of the input (`So, there
has been an accident .&apos;) .
In case the system chooses to ask a question
based on the discourse grammar, the question
from the appropriate slot in a daughter node (top-
down left-right) is passed to the learner. After
the grammatical processing of the answer, the
content is checked against the expected one. If
they match, a confirmation may be passed to the
learner and the next step in the discourse gram-
mar is taken. If the answer was considered not
appropriate for the question the system tries to
find a response in a hierarchy of steps from world
knowledge checking to simple keyword analysis.
The final output can thus be from the same node,
a subnode or from a more general independent
source of possible reactions. Some mechanism
has to manage the matching-procedure of the sen-
tence. Possible mechanisms thus include:
- the content matches completely: The
system was able to recognize the in-
put sentence as some meaningful re-
action to the previous question or
statement.
- the content fits only partly (too gen-
eral): There are subnodes which in-
dude variables for more specific in-
formation.
- the content fits only partly (only one
aspect): A general keyword-based
mechanism recognizes only parts of
the expected input. If possible the
learner is asked for further clarifica-
tion.
- the content does not fit: A ques-
tion for rephrasal will be displayed to
the learner. Additionally the learner
might consult a helpfile with informa-
tion about how to proceed in the cur-
rent situation.
A difficulty that might arise is the change of
control (or initiative) between the dialogue part-
ners. Allowing the learner to take the initiative
has several consequences, which are difficult to
realize. In contrast to the present concept the
dialogue module should include a language gener-
ation device to generate natural language output
to database-inquiries. From this follows that the
dialogue knowledge base should not contain any
contradictions etc. to allow for easy inference of
possible answers to the input question. Finally
in case the learner keeps on asking questions the
system might fail to continue the dialogue in a
meaningful way. Thus a system designed for the
use by pupils must be rigid enough to deal with
this kind of input.
The seemingly limited flexibility in this system
is not really a disadvantage, because 1) the learner
is supposed to act in a foreseeable way and 2) the
system should give feedback in case of deviating
action. Especially the latter seems only possible if
a discourse grammar structures the moves which
dialogue partners might take.
</bodyText>
<sectionHeader confidence="0.961504" genericHeader="method">
3 System Overview
</sectionHeader>
<bodyText confidence="0.9999654">
The idea behind the system is to extend the types
of training which the student gets in a class room
setting into a computer. One important kind of
training is the practising of dialogues. Therefore
the program realizes small written dialogues for
the learner to train her/his &apos;communicative com-
petence&apos;, as explained above.
The system consists of four main modules. The
dialogue control module mainly functions as an in-
terface. It organizes the flow of the input data be-
tween the user-interface and the various process-
ing modules. Every input sentence is first passed
to the linguistic module, which checks it for ortho-
graphic and syntactic errors. The orthographic
check is done in the spirit of Oflazer (1996). With
</bodyText>
<page confidence="0.994416">
255
</page>
<note confidence="0.382226">
Proceedings of EACL &apos;99
</note>
<bodyText confidence="0.999962225806452">
the help of a finite state recognizer mildly devi-
ating strings are identified and correct versions
are presented to the learner if necessary. The
syntactic check follows a rather traditional path.
The main work is done by a LFG-parser (Bresnan
and Kaplan, 1982), originally implemented by Av-
ery Andrews (Australian National University) and
now modified to suit the needs of error detection
with the help of modified grammar processing in-
cluding error rules (Kruger et al., 1997). As a
next step the analysis of the sentence is checked
against a world knowledge base, from which feed-
back follows to the learner if the sentence does not
match the internal model of the world. In con-
trast to the dialogue knowledge base this model
of the world cannot be altered by the learner be-
cause of its usage for inference and the absence of
a consistency-checking module to prevent contra-
dictions etc. If the student has made an error, the
system provides feedback to support the learner
in typing a syntactically correct or semantically
more plausible sentence. After this step the dia-
logue component tries to find a reaction to con-
tinue the dialogue, as described above.
The main focus in all the analyses is to continue
the dialogue but without ignoring the errors made
by the learner. Only the orthographic check will
actually interrupt the dialogue with a suggestion
of correct words for the misspelled items. In all
other cases the dialogue partner will react to the
erroneous input depending on the type of error.
</bodyText>
<sectionHeader confidence="0.999375" genericHeader="conclusions">
4 Conclusion
</sectionHeader>
<bodyText confidence="0.999959692307692">
The aim of this concept is to provide a foreign lan-
guage learner with exercises that enhance his/her
communicative ability. One important module in
the system is the dialogue component itself which
organizes e.g. the turntaking in a dialogue. At
least two knowledge sources are necessary for li-
mited flexibility and reusability. The structure of
a dialogue can be handled by a discourse gram-
mar whereas the content of a dialogue is stored
into an (expandable) knowledge base. To add new
dialogues, only the dialogue knowledge base and
the surrounding discourse grammar have to be
updated whereas the other specialized discourse
grammars can be reused. The structure of the
dialogue knowledge base could also allow for the
handling of questions and multi-sentence answers
given by the learner. Nodes in the tree do not
only represent variables to be instantiated by the
learner, but might also include knowledge the sys-
tem can provide to the learner.
The kind of dialogue component presented here
allows for 1) easy maintainance and expansion
with new dialogues, 2) advanced feedback to the
learner and 3) flexible and pedagogically sound
exercises which enhance the process of aquiring
&apos;communicative competence&apos;.
</bodyText>
<sectionHeader confidence="0.999119" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.997014720930232">
Jan Alexandersson, Elisabeth Maier, and Nor-
bert Reithinger. 1994. A robust and efficient
three-layered dialog component for a speech-
to-speech translation system. Verbmobil-report
50, DFKI, Saarbriicken.
Joan Bresnan and Ronald M. Kaplan, 1982.
Lexical-Functional Grammar: A Formal Sys-
tem for Grammatical Representation. In Bres-
nan (Bresnan, 1982).
Joan Bresnan, editor. 1982. The mental repre-
sentation of grammatical relations. MIT Press,
Cambridge (MA).
Sandra Carberry. 1990. Plan Recognition in
Natural Language Dialogue. MIT Press, Cam-
bridge, MA.
J. Carletta, A. Isard, S. Isard, J. Kowtko,
G. Doherty-Sneddon, and A. Anderson. 1997.
The reliability of a dialogue structure coding
scheme. Computational Linguistics, 23(1).
William H. deSmedt, 1995. Herr Kommissar: An
ICALL Conversation Simulator for Intermedi-
ate German. In Holland et al. (Holland et al.,
1995).
R.P. Fawcett and M.M. Taylor, 1989. A Genera-
tive Grammar for Local Discourse Structure. In
Taylor et al. (Taylor et at, 1989).
V. Melissa Holland, Jonathan D. Kaplan, and
Michelle R. Sams, editors. 1995. Intelligent
Language Tutors. Erlbaum, Mahwah (NJ).
Anja Kruger, Hendrik Dittman, and Maureen
Murphy. 1997. Grammar based error diagnosis
in CALL. Informatics research reports, Univer-
sity of Ulster.
Janet H. Murray, 1995. Lessons Learned from the
Athena Language Learning Project. In Holland
et al. (Holland et al., 1995).
Kemal Oflazer. 1996. Error-tolerant finite-state
recognition with applications to morphological
analysis and spelling correction. Computational
Linguistics, 22(1).
M.M. Taylor, F. Neel, and D.G. Bouwhuis, edi-
tors. 1989. The structure of Multimodal Dialog.
Elsevier, North-Holland.
</reference>
<page confidence="0.998413">
256
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.558549">
<note confidence="0.754252">Proceedings of EACL &apos;99</note>
<title confidence="0.928834">Dialogue Processing in a CALL-System</title>
<author confidence="0.991993">Veit Reuer</author>
<affiliation confidence="0.9947595">Institut fiir deutsche Sprache und Linguistik Humboldt-Universitat zu Berlin</affiliation>
<address confidence="0.964185333333333">Unter den Linden 6 10099 Berlin GERMANY</address>
<email confidence="0.965084">Veit.Reuer@compling.hu-berlin.de</email>
<abstract confidence="0.9979865">In a CALL-environment (Computerassisted language learning) programs should ideally allow the learner to his/her competence, which is one of the main goals of foreign language teaching nowadays. This can be reached by allowing learners to use and train their knowledge of a foreign in realistic exerlevels of linguistic and communicational analysis have to be considered to realize such a system. In this I will concentrate on the the concept, which relies on two main knowledge sources. The grammar the dialogue elements (or dialogue acts) as posparts of a dialogue and the base the possible contents of dialogues. Additionally, a framing discourse structure has to be built to provide the specific dialogue-exercise. A FSA (finite state automaton) based on the discourse grammar determines the possible moves which the dialogue might take. On the one hand this concept is restricted enough to allow for (relatively) easy maintenance as well as expansion and on the other hand it is advanced enough to allow for simulated complex dialogues.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Jan Alexandersson</author>
<author>Elisabeth Maier</author>
<author>Norbert Reithinger</author>
</authors>
<title>A robust and efficient three-layered dialog component for a speechto-speech translation system. Verbmobil-report 50,</title>
<date>1994</date>
<publisher>DFKI, Saarbriicken.</publisher>
<contexts>
<context position="4184" citStr="Alexandersson et al. (1994)" startWordPosition="673" endWordPosition="676">gives the possibility for advanced feedback. Finally I will give a 253 Proceedings of EACL &apos;99 rough sketch of the complete system. 2 Discourse Grammars One way of realizing such dialogues is to develop discourse grammars which describe the steps through distinct parts of dialogues. This possibility is chosen in the present concept, since it enables the learner to lead written, situation-based dialogues almost as in the class-room situation. The advantage of a discourse grammar over a completely plan-based dialogue structure is the seperate representation of possible moves (&apos;dialogue acts&apos; in Alexandersson et al. (1994)) and the content of the discourse. The discourse grammar of an &apos;information-gathering&apos; dialogue can be used while reporting an accident as well as while ordering a pizza. In the first case the police officer wants to know all about the accident and possible casualties and in the latter case the pizza delivery wants to know the toppings and size of the pizza. On the other hand guidance is needed for the learner in the CALL-scenario. Systems like the one described in Carberry (1990) are much too open to be used for language learning. The system would not be able to give any feedback to the lear</context>
<context position="7031" citStr="Alexandersson et al., 1994" startWordPosition="1153" endWordPosition="1156">which models an information gathering dialogue such as is necessary in the case of collecting information about an accident. Additional items of discourse grammars are of course needed, for example, to start and end a telephone call, etc. The same type of structures is also used in the analysis of dialogues, e.g. (Carletta et al., 1997). Here dialogues are analysed with the help of a &apos;Dialogue Structure Coding Scheme&apos;, which in particular contains only a limited number of possible moves between dialogue partners. A similar analysis was done in the preparational phase of the Verbmobil project (Alexandersson et al., 1994). In a dialogue system where the intentions of the dialogue partners are known and the fixed structures serve to assess the performance of the language learner, the restrictions will probably not make the overall behaviour of the system worse than more flexible dialogue systems. info_gather THANK_END Figure 1: Simplified discourse grammar The dialogue module uses a surrounding discourse grammar, which includes the grammar parts for starting and ending a telephone call etc. From here the information gathering structure is called to try to fill the variables in the dialogue knowledge base (see b</context>
</contexts>
<marker>Alexandersson, Maier, Reithinger, 1994</marker>
<rawString>Jan Alexandersson, Elisabeth Maier, and Norbert Reithinger. 1994. A robust and efficient three-layered dialog component for a speechto-speech translation system. Verbmobil-report 50, DFKI, Saarbriicken.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joan Bresnan</author>
<author>Ronald M Kaplan</author>
</authors>
<title>Lexical-Functional Grammar: A Formal System for Grammatical Representation. In</title>
<date>1982</date>
<location>Bresnan (Bresnan,</location>
<contexts>
<context position="12772" citStr="Bresnan and Kaplan, 1982" startWordPosition="2105" endWordPosition="2108">trol module mainly functions as an interface. It organizes the flow of the input data between the user-interface and the various processing modules. Every input sentence is first passed to the linguistic module, which checks it for orthographic and syntactic errors. The orthographic check is done in the spirit of Oflazer (1996). With 255 Proceedings of EACL &apos;99 the help of a finite state recognizer mildly deviating strings are identified and correct versions are presented to the learner if necessary. The syntactic check follows a rather traditional path. The main work is done by a LFG-parser (Bresnan and Kaplan, 1982), originally implemented by Avery Andrews (Australian National University) and now modified to suit the needs of error detection with the help of modified grammar processing including error rules (Kruger et al., 1997). As a next step the analysis of the sentence is checked against a world knowledge base, from which feedback follows to the learner if the sentence does not match the internal model of the world. In contrast to the dialogue knowledge base this model of the world cannot be altered by the learner because of its usage for inference and the absence of a consistency-checking module to </context>
</contexts>
<marker>Bresnan, Kaplan, 1982</marker>
<rawString>Joan Bresnan and Ronald M. Kaplan, 1982. Lexical-Functional Grammar: A Formal System for Grammatical Representation. In Bresnan (Bresnan, 1982).</rawString>
</citation>
<citation valid="true">
<title>The mental representation of grammatical relations.</title>
<date>1982</date>
<editor>Joan Bresnan, editor.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge (MA).</location>
<marker>1982</marker>
<rawString>Joan Bresnan, editor. 1982. The mental representation of grammatical relations. MIT Press, Cambridge (MA).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sandra Carberry</author>
</authors>
<title>Plan Recognition in Natural Language Dialogue.</title>
<date>1990</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="4670" citStr="Carberry (1990)" startWordPosition="761" endWordPosition="762">ly plan-based dialogue structure is the seperate representation of possible moves (&apos;dialogue acts&apos; in Alexandersson et al. (1994)) and the content of the discourse. The discourse grammar of an &apos;information-gathering&apos; dialogue can be used while reporting an accident as well as while ordering a pizza. In the first case the police officer wants to know all about the accident and possible casualties and in the latter case the pizza delivery wants to know the toppings and size of the pizza. On the other hand guidance is needed for the learner in the CALL-scenario. Systems like the one described in Carberry (1990) are much too open to be used for language learning. The system would not be able to give any feedback to the learner in case of erroneous input. Therefore the system uses only restricted knowledge about what types of input to expect and how to react to them since the general intentions of the learner are known to the system through the situation presented to the learner. In other NLP-based systems like &apos;Herr Kommissar&apos; (deSmedt, 1995) and &apos;LINGO&apos; (Murray, 1995), the dialogue with the system either allows only single question-answer exchanges or is strongly embedded into the respective scenari</context>
</contexts>
<marker>Carberry, 1990</marker>
<rawString>Sandra Carberry. 1990. Plan Recognition in Natural Language Dialogue. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Carletta</author>
<author>A Isard</author>
<author>S Isard</author>
<author>J Kowtko</author>
<author>G Doherty-Sneddon</author>
<author>A Anderson</author>
</authors>
<title>The reliability of a dialogue structure coding scheme.</title>
<date>1997</date>
<journal>Computational Linguistics,</journal>
<volume>23</volume>
<issue>1</issue>
<contexts>
<context position="6742" citStr="Carletta et al., 1997" startWordPosition="1108" endWordPosition="1111"> a discussion about discourse grammars in general see e.g. Taylor et al. (1989). ingful reaction to the input sentence. Additionally this base contains slots in which the information given by the learner is stored. The following figure shows a simplified part of a discourse grammar, which models an information gathering dialogue such as is necessary in the case of collecting information about an accident. Additional items of discourse grammars are of course needed, for example, to start and end a telephone call, etc. The same type of structures is also used in the analysis of dialogues, e.g. (Carletta et al., 1997). Here dialogues are analysed with the help of a &apos;Dialogue Structure Coding Scheme&apos;, which in particular contains only a limited number of possible moves between dialogue partners. A similar analysis was done in the preparational phase of the Verbmobil project (Alexandersson et al., 1994). In a dialogue system where the intentions of the dialogue partners are known and the fixed structures serve to assess the performance of the language learner, the restrictions will probably not make the overall behaviour of the system worse than more flexible dialogue systems. info_gather THANK_END Figure 1:</context>
</contexts>
<marker>Carletta, Isard, Isard, Kowtko, Doherty-Sneddon, Anderson, 1997</marker>
<rawString>J. Carletta, A. Isard, S. Isard, J. Kowtko, G. Doherty-Sneddon, and A. Anderson. 1997. The reliability of a dialogue structure coding scheme. Computational Linguistics, 23(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>William H deSmedt</author>
</authors>
<title>Herr Kommissar: An ICALL Conversation Simulator for Intermediate German. In</title>
<date>1995</date>
<location>Holland</location>
<contexts>
<context position="5109" citStr="deSmedt, 1995" startWordPosition="838" endWordPosition="839"> wants to know the toppings and size of the pizza. On the other hand guidance is needed for the learner in the CALL-scenario. Systems like the one described in Carberry (1990) are much too open to be used for language learning. The system would not be able to give any feedback to the learner in case of erroneous input. Therefore the system uses only restricted knowledge about what types of input to expect and how to react to them since the general intentions of the learner are known to the system through the situation presented to the learner. In other NLP-based systems like &apos;Herr Kommissar&apos; (deSmedt, 1995) and &apos;LINGO&apos; (Murray, 1995), the dialogue with the system either allows only single question-answer exchanges or is strongly embedded into the respective scenario. In the first case the structure of a complete dialogue does not become clear to the learner and the initiative is with the learner who might not know what to do. In the second case it is difficult to include new scenarios since not only the content of the new dialogue has to be coded but also the various dialogue structures. Moreover the design of a system might not allow for different types of dialogues. The dialogue component cont</context>
</contexts>
<marker>deSmedt, 1995</marker>
<rawString>William H. deSmedt, 1995. Herr Kommissar: An ICALL Conversation Simulator for Intermediate German. In Holland et al. (Holland et al., 1995).</rawString>
</citation>
<citation valid="true">
<authors>
<author>R P Fawcett</author>
<author>M M Taylor</author>
</authors>
<title>A Generative Grammar for Local Discourse Structure. In Taylor et al. (Taylor et at,</title>
<date>1989</date>
<contexts>
<context position="5994" citStr="Fawcett and Taylor (1989)" startWordPosition="983" endWordPosition="986">the initiative is with the learner who might not know what to do. In the second case it is difficult to include new scenarios since not only the content of the new dialogue has to be coded but also the various dialogue structures. Moreover the design of a system might not allow for different types of dialogues. The dialogue component contains two main knowledge bases: The first one contains the discourse grammars, which structure so-called &apos;goaldriven dialogues&apos; or &apos;task-oriented dialogues&apos;. 1 The idea of discourse grammars as a means to handle dialogue situations is for instance presented in Fawcett and Taylor (1989). The second knowledge base contains knowledge about the content of the dialogue itself. This data is used to infer a mean&apos;For a discussion about discourse grammars in general see e.g. Taylor et al. (1989). ingful reaction to the input sentence. Additionally this base contains slots in which the information given by the learner is stored. The following figure shows a simplified part of a discourse grammar, which models an information gathering dialogue such as is necessary in the case of collecting information about an accident. Additional items of discourse grammars are of course needed, for </context>
</contexts>
<marker>Fawcett, Taylor, 1989</marker>
<rawString>R.P. Fawcett and M.M. Taylor, 1989. A Generative Grammar for Local Discourse Structure. In Taylor et al. (Taylor et at, 1989).</rawString>
</citation>
<citation valid="true">
<title>Intelligent Language Tutors. Erlbaum,</title>
<date>1995</date>
<editor>V. Melissa Holland, Jonathan D. Kaplan, and Michelle R. Sams, editors.</editor>
<location>Mahwah (NJ).</location>
<marker>1995</marker>
<rawString>V. Melissa Holland, Jonathan D. Kaplan, and Michelle R. Sams, editors. 1995. Intelligent Language Tutors. Erlbaum, Mahwah (NJ).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anja Kruger</author>
<author>Hendrik Dittman</author>
<author>Maureen Murphy</author>
</authors>
<title>Grammar based error diagnosis in CALL. Informatics research reports,</title>
<date>1997</date>
<institution>University of Ulster.</institution>
<contexts>
<context position="12989" citStr="Kruger et al., 1997" startWordPosition="2139" endWordPosition="2142">ks it for orthographic and syntactic errors. The orthographic check is done in the spirit of Oflazer (1996). With 255 Proceedings of EACL &apos;99 the help of a finite state recognizer mildly deviating strings are identified and correct versions are presented to the learner if necessary. The syntactic check follows a rather traditional path. The main work is done by a LFG-parser (Bresnan and Kaplan, 1982), originally implemented by Avery Andrews (Australian National University) and now modified to suit the needs of error detection with the help of modified grammar processing including error rules (Kruger et al., 1997). As a next step the analysis of the sentence is checked against a world knowledge base, from which feedback follows to the learner if the sentence does not match the internal model of the world. In contrast to the dialogue knowledge base this model of the world cannot be altered by the learner because of its usage for inference and the absence of a consistency-checking module to prevent contradictions etc. If the student has made an error, the system provides feedback to support the learner in typing a syntactically correct or semantically more plausible sentence. After this step the dialogue</context>
</contexts>
<marker>Kruger, Dittman, Murphy, 1997</marker>
<rawString>Anja Kruger, Hendrik Dittman, and Maureen Murphy. 1997. Grammar based error diagnosis in CALL. Informatics research reports, University of Ulster.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janet H Murray</author>
</authors>
<title>Lessons Learned from the Athena Language Learning Project.</title>
<date>1995</date>
<booktitle>In Holland et</booktitle>
<contexts>
<context position="5136" citStr="Murray, 1995" startWordPosition="842" endWordPosition="843">and size of the pizza. On the other hand guidance is needed for the learner in the CALL-scenario. Systems like the one described in Carberry (1990) are much too open to be used for language learning. The system would not be able to give any feedback to the learner in case of erroneous input. Therefore the system uses only restricted knowledge about what types of input to expect and how to react to them since the general intentions of the learner are known to the system through the situation presented to the learner. In other NLP-based systems like &apos;Herr Kommissar&apos; (deSmedt, 1995) and &apos;LINGO&apos; (Murray, 1995), the dialogue with the system either allows only single question-answer exchanges or is strongly embedded into the respective scenario. In the first case the structure of a complete dialogue does not become clear to the learner and the initiative is with the learner who might not know what to do. In the second case it is difficult to include new scenarios since not only the content of the new dialogue has to be coded but also the various dialogue structures. Moreover the design of a system might not allow for different types of dialogues. The dialogue component contains two main knowledge bas</context>
</contexts>
<marker>Murray, 1995</marker>
<rawString>Janet H. Murray, 1995. Lessons Learned from the Athena Language Learning Project. In Holland et al. (Holland et al., 1995).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kemal Oflazer</author>
</authors>
<title>Error-tolerant finite-state recognition with applications to morphological analysis and spelling correction.</title>
<date>1996</date>
<journal>Computational Linguistics,</journal>
<volume>22</volume>
<issue>1</issue>
<contexts>
<context position="12476" citStr="Oflazer (1996)" startWordPosition="2058" endWordPosition="2059">om setting into a computer. One important kind of training is the practising of dialogues. Therefore the program realizes small written dialogues for the learner to train her/his &apos;communicative competence&apos;, as explained above. The system consists of four main modules. The dialogue control module mainly functions as an interface. It organizes the flow of the input data between the user-interface and the various processing modules. Every input sentence is first passed to the linguistic module, which checks it for orthographic and syntactic errors. The orthographic check is done in the spirit of Oflazer (1996). With 255 Proceedings of EACL &apos;99 the help of a finite state recognizer mildly deviating strings are identified and correct versions are presented to the learner if necessary. The syntactic check follows a rather traditional path. The main work is done by a LFG-parser (Bresnan and Kaplan, 1982), originally implemented by Avery Andrews (Australian National University) and now modified to suit the needs of error detection with the help of modified grammar processing including error rules (Kruger et al., 1997). As a next step the analysis of the sentence is checked against a world knowledge base</context>
</contexts>
<marker>Oflazer, 1996</marker>
<rawString>Kemal Oflazer. 1996. Error-tolerant finite-state recognition with applications to morphological analysis and spelling correction. Computational Linguistics, 22(1).</rawString>
</citation>
<citation valid="true">
<date>1989</date>
<booktitle>The structure of Multimodal Dialog.</booktitle>
<editor>M.M. Taylor, F. Neel, and D.G. Bouwhuis, editors.</editor>
<publisher>Elsevier, North-Holland.</publisher>
<contexts>
<context position="5994" citStr="(1989)" startWordPosition="986" endWordPosition="986">ith the learner who might not know what to do. In the second case it is difficult to include new scenarios since not only the content of the new dialogue has to be coded but also the various dialogue structures. Moreover the design of a system might not allow for different types of dialogues. The dialogue component contains two main knowledge bases: The first one contains the discourse grammars, which structure so-called &apos;goaldriven dialogues&apos; or &apos;task-oriented dialogues&apos;. 1 The idea of discourse grammars as a means to handle dialogue situations is for instance presented in Fawcett and Taylor (1989). The second knowledge base contains knowledge about the content of the dialogue itself. This data is used to infer a mean&apos;For a discussion about discourse grammars in general see e.g. Taylor et al. (1989). ingful reaction to the input sentence. Additionally this base contains slots in which the information given by the learner is stored. The following figure shows a simplified part of a discourse grammar, which models an information gathering dialogue such as is necessary in the case of collecting information about an accident. Additional items of discourse grammars are of course needed, for </context>
</contexts>
<marker>1989</marker>
<rawString>M.M. Taylor, F. Neel, and D.G. Bouwhuis, editors. 1989. The structure of Multimodal Dialog. Elsevier, North-Holland.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>