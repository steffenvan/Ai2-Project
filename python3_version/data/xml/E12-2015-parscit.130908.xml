<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001362">
<title confidence="0.997445">
NERD: A Framework for Unifying Named Entity Recognition
and Disambiguation Extraction Tools
</title>
<author confidence="0.74951">
Giuseppe Rizzo
</author>
<affiliation confidence="0.43723">
EURECOM / Sophia Antipolis, France
</affiliation>
<address confidence="0.308707">
Politecnico di Torino / Turin, Italy
</address>
<email confidence="0.983708">
giuseppe.rizzo@eurecom.fr
</email>
<note confidence="0.5133605">
Rapha¨el Troncy
EURECOM / Sophia Antipolis, France
</note>
<email confidence="0.990473">
raphael.troncy@eurecom.fr
</email>
<sectionHeader confidence="0.993564" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999229666666667">
Named Entity Extraction is a mature task
in the NLP field that has yielded numerous
services gaining popularity in the Seman-
tic Web community for extracting knowl-
edge from web documents. These services
are generally organized as pipelines, using
dedicated APIs and different taxonomy for
extracting, classifying and disambiguating
named entities. Integrating one of these
services in a particular application requires
to implement an appropriate driver. Fur-
thermore, the results of these services are
not comparable due to different formats.
This prevents the comparison of the perfor-
mance of these services as well as their pos-
sible combination. We address this problem
by proposing NERD, a framework which
unifies 10 popular named entity extractors
available on the web, and the NERD on-
tology which provides a rich set of axioms
aligning the taxonomies of these tools.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999942384615385">
The web hosts millions of unstructured data such
as scientific papers, news articles as well as forum
and archived mailing list threads or (micro-)blog
posts. This information has usually a rich se-
mantic structure which is clear for the human be-
ing but that remains mostly hidden to computing
machinery. Natural Language Processing (NLP)
tools aim to extract such a structure from those
free texts. They provide algorithms for analyz-
ing atomic information elements which occur in a
sentence and identify Named Entity (NE) such as
name of people or organizations, locations, time
references or quantities. They also classify these
entities according to predefined schema increas-
ing discoverability (e.g. through faceted search)
and reusability of information.
Recently, research and commercial communi-
ties have spent efforts to publish NLP services on
the web. Beside the common task of identifying
POS and of reducing this set to NEs, they pro-
vide more and more disambiguation facility with
URIs that describe web resources, leveraging on
the web of real world objects. Moreover, these
services classify such information using common
ontologies (e.g. DBpedia ontology1 or YAGO2)
exploiting the large amount of knowledge avail-
able from the web of data. Tools such as Alche-
myAPI3, DBpedia Spotlight4, Evri5, Extractiv6,
Lupedia7, OpenCalais8, Saplo9, Wikimeta10, Ya-
hoo! Content Extraction11 and Zemanta12 repre-
sent a clear opportunity for the web community to
increase the volume of interconnected data. Al-
though these extractors share the same purpose -
extract NE from text, classify and disambiguate
this information - they make use of different algo-
rithms and provide different outputs.
This paper presents NERD (Named Entity
Recognition and Disambiguation), a framework
that unifies the output of 10 different NLP extrac-
</bodyText>
<footnote confidence="0.999974214285714">
1http://wiki.dbpedia.org/Ontology
2http://www.mpi-inf.mpg.de/yago-naga/
yago
3http://www.alchemyapi.com
4http://dbpedia.org/spotlight
5http://www.evri.com/developer
6http://extractiv.com
7http://lupedia.ontotext.com/
8http://www.opencalais.com
9http://www.saplo.com/
10http://www.wikimeta.com
11http://developer.yahoo.com/search/
content/V2/contentAnalysis.html
12http://www.zemanta.com
</footnote>
<page confidence="0.993512">
73
</page>
<bodyText confidence="0.958387142857143">
Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 73–76,
Avignon, France, April 23 - 27 2012. c�2012 Association for Computational Linguistics
tors publicly available on the web. Our approach
relies on the development of the NERD ontology
which provides a common interface for annotat-
ing elements, and a web REST API which is used
to access the unified output of these tools. We
compare 6 different systems using NERD and we
discuss some quantitative results. The NERD ap-
plication is accessible online at http://nerd.
eurecom.fr. It requires to input a URI of a
web document that will be analyzed and option-
ally an identification of the user for recording and
sharing the analysis.
</bodyText>
<sectionHeader confidence="0.982404" genericHeader="introduction">
2 Framework
</sectionHeader>
<bodyText confidence="0.999821230769231">
NERD is a web application plugged on top of
various NLP tools. Its architecture follows the
REST principles and provides a web HTML ac-
cess for humans and an API for computers to ex-
change content in JSON or XML. Both interfaces
are powered by the NERD REST engine. The Fig-
ure 2 shows the workflow of an interaction among
clients (humans or computers), the NERD REST
engine and various NLP tools which are used by
NERD for extracting NEs, for providing a type
and disambiguation URIs pointing to real world
objects as they could be defined in the Web of
Data.
</bodyText>
<subsectionHeader confidence="0.742758">
2.1 NERD interfaces
</subsectionHeader>
<bodyText confidence="0.9996644">
The web interface13 is developed in HTML/-
Javascript. It accepts any URI of a web document
which is analyzed in order to extract its main tex-
tual content. Starting from the raw text, it drives
one or several tools to extract the list of Named
Entity, their classification and the URIs that dis-
ambiguate these entities. The main purpose of this
interface is to enable a human user to assess the
quality of the extraction results collected by those
tools (Rizzo and Troncy, 2011a). At the end of
the evaluation, the user sends the results, through
asynchronous calls, to the REST API engine in or-
der to store them. This set of evaluations is further
used to compute statistics about precision scores
for each tool, with the goal to highlight strengths
and weaknesses and to compare them (Rizzo and
Troncy, 2011b). The comparison aggregates all
the evaluations performed and, finally, the user
is free to select one or more evaluations to see
the metrics that are computed for each service in
</bodyText>
<footnote confidence="0.480741">
13http://nerd.eurecom.fr
</footnote>
<bodyText confidence="0.9985084375">
real time. Finally, the application contains a help
page that provides guidance and details about the
whole evaluation process.
The API interface14 is developed following the
REST principles and aims to enable program-
matic access to the NERD framework. GET,
POST and PUT methods manage the requests
coming from clients to retrieve the list of NEs,
classification types and URIs for a specific tool or
for the combination of them. They take as inputs
the URI of the document to process and a user
key for authentication. The output sent back to
the client can be serialized in JSON or XML de-
pending on the content type requested. The output
follows the schema described below (in the JSON
serialization):
</bodyText>
<equation confidence="0.6079695">
entities : [{
” e n t i t y ”:” Tim Berners−Lee ” ,
</equation>
<table confidence="0.7158848">
” type ”:” Person ” ,
” u r i ”: ” http : / / dbpedia . org / resource /
Tim berners lee ” ,
” nerdType ”:” http : / / nerd. eurecom . f r /
ontology # Person ” ,
” s t a r t C h a r ”: 30 ,
” endChar ”: 45 ,
” confidence ”: 1 ,
” relevance ”: 0.5
}]
</table>
<subsectionHeader confidence="0.910786">
2.2 NERD REST engine
</subsectionHeader>
<bodyText confidence="0.999922523809524">
The REST engine runs on Jersey15 and Griz-
zly16 technologies. Their extensible framework
allows to develop several components, so NERD
is composed of 7 modules, namely: authenti-
cation, scraping, extraction, ontology mapping,
store, statistics and web. The authentication en-
ables to log in with an OpenID provider and sub-
sequently attaches all analysis and evaluations
performed by a user with his profile. The scrap-
ing module takes as input the URI of an article
and extracts its main textual content. Extraction is
the module designed to invoke the external service
APIs and collect the results. Each service pro-
vides its own taxonomy of named entity types it
can recognize. We therefore designed the NERD
ontology which provides a set of mappings be-
tween these various classifications. The ontol-
ogy mapping is the module in charge to map the
classification type retrieved to the NERD ontol-
ogy. The store module saves all evaluations ac-
cording to the schema model we defined in the
</bodyText>
<footnote confidence="0.997682">
14http://nerd.eurecom.fr/api/
application.wadl
15http://jersey.java.net
16http://grizzly.java.net
</footnote>
<page confidence="0.998418">
74
</page>
<figureCaption confidence="0.951578333333333">
Figure 1: A user interacts with NERD through a REST API. The engine drives the extraction to the NLP extractor.
The NERD REST engine retrieves the output, unifies it and maps the annotations to the NERD ontology. Finally,
the output result is sent back to the client using the format reported in the initial request.
</figureCaption>
<bodyText confidence="0.998672">
NERD database. The statistic module enables
to extract data patterns from the user interactions
stored in the database and to compute statistical
scores such as Fleiss Kappa and precision/recall
analysis. Finally, the web module manages the
client requests, the web cache and generates the
HTML pages.
</bodyText>
<sectionHeader confidence="0.994647" genericHeader="method">
3 NERD ontology
</sectionHeader>
<bodyText confidence="0.99849203030303">
Although these tools share the same goal, they use
different algorithms and their own classification
taxonomies which makes hard their comparison.
To address this problem, we have developed the
NERD ontology which is a set of mappings es-
tablished manually between the schemas of the
Named Entity categories. Concepts included in
the NERD ontology are collected from different
schema types: ontology (for DBpedia Spotlight
and Zemanta), lightweight taxonomy (for Alche-
myAPI, Evri and Wikimeta) or simple flat type
lists (for Extractiv, OpenCalais and Wikimeta). A
concept is included in the NERD ontology as soon
as there are at least two tools that use it. The
NERD ontology becomes a reference ontology
for comparing the classification task of NE tools.
In other words, NERD is a set of axioms useful to
enable comparison of NLP tools. We consider the
DBpedia ontology exhaustive enough to represent
all the concepts involved in a NER task. For all
those concepts that do not appear in the NERD
namespace, there are just sub-classes of parents
that end-up in the NERD ontology. This ontology
is available at http://nerd.eurecom.fr/
ontology.
We provide the following example map-
ping among those tools which defines the
City type: the nerd:City class is consid-
ered as being equivalent to alchemy:City,
dbpedia-owl:City, extractiv:CITY,
opencalais:City, evri:City while
being more specific than wikimeta:LOC and
zemanta:location.
</bodyText>
<figureCaption confidence="0.852692375">
nerd: City a rdfs : Class ;
rdfs:subClassOf wikimeta:LOC ;
rdfs : subClassOf zemanta : location ;
owl: equivalentClass alchemy: City ;
owl: equivalentClass dbpedia−owl : City ;
owl: equivalentClass evri : City ;
owl: equivalentClass extractiv :CITY ;
owl: equivalentClass opencalais :City .
</figureCaption>
<sectionHeader confidence="0.96219" genericHeader="method">
4 Ontology alignment results
</sectionHeader>
<bodyText confidence="0.999602571428571">
We conducted an experiment to assess the align-
ment of the NERD framework according to the
ontology we developed. For this experiment, we
collected 1000 news articles of The New York
Times from 09/10/2011 to 12/10/2011 and we
performed the extraction of named entities with
the tools supported by NERD. The goal is to ex-
plore the NE extraction patterns with this dataset
and to assess commonalities and differences of
the classification schema used. We propose the
alignment of the 6 main types recognized by all
tools using the NERD ontology. To conduct this
experiment, we used the default configuration for
all tools used. We define the following variables:
</bodyText>
<page confidence="0.995751">
75
</page>
<table confidence="0.999247714285714">
AlchemyAPI DBpedia Spotlight Evri Extractiv OpenCalais Zemanta
Person 6,246 14 2,698 5,648 5,615 1,069
Organization 2,479 - 900 81 2,538 180
Country 1,727 2 1,382 2,676 1,707 720
City 2,133 - 845 2,046 1,863 -
Time - - - 123 1 -
Number - - - 3,940 - -
</table>
<tableCaption confidence="0.977394">
Table 1: Number of axioms aligned for all the tools involved in the comparison according to the NERD ontology
for the sources collected from the The New York Times from 09/10/2011 to 12/10/2011.
</tableCaption>
<bodyText confidence="0.99997303030303">
the number nd of evaluated documents, the num-
ber n,,, of words, the total number ne of enti-
ties, the total number n, of categories and n,,
URIs. Moreover, we compute the following met-
rics: word detection rate r(w, d), i.e. the num-
ber of words per document, entity detection rate
r(e, d), i.e. the number of entities per document,
entity detection rate per word, i.e. the ratio be-
tween entities and words r(e, w), category detec-
tion rate, i.e. the number of categories per docu-
ment r(c, d) and URI detection rate, i.e. the num-
ber of URIs per document r(u, d). The evaluation
we performed concerned nd = 1000 documents
that amount ton,, = 620, 567 words. The word
detection rate per document r(w, d) is equal to
620.57 and the total number of recognized enti-
ties ne is 164,12 with the r(e, d) equal to 164.17.
Finally r(e, w) is 0.0264, r(c, d) is 0.763 and
r(u, d) is 46.287.
Table 1 shows the classification comparison re-
sults. DBpedia Spotlight recognizes very few
classes. Zemanta increases significantly classi-
fication performances with respect to DBpedia
obtaining a number of recognized Person which
is two magnitude order more important. Alche-
myAPI has strong ability to recognize Person and
City while obtaining significant scores for Orga-
nization and Country. OpenCalais shows good re-
sults to recognize the class Person and a strong
ability to classify NEs with the label Organiza-
tion. Extractiv holds the best score for classifying
Country and it is the only extractor capable of ex-
tracting the classes Time and Number.
</bodyText>
<sectionHeader confidence="0.999259" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999982047619048">
In this paper, we presented NERD, a framework
developed following REST principles, and the
NERD ontology, a reference ontology to map sev-
eral NER tools publicly accessible on the web.
We propose a preliminary comparison results
where we investigate the importance of a refer-
ence ontology in order to evaluate the strengths
and weaknesses of the NER extractors. We will
investigate whether the combination of extractors
may overcome the performance of a single tool or
not. We will demonstrate more live examples of
what NERD can achieve during the conference.
Finally, with the increasing interest of intercon-
necting data on the web, a lot of research effort is
spent to aggregate the results of NLP tools. The
importance to have a system able to compare them
is under investigation from the NIF17 (NLP Inter-
change Format) project. NERD has recently been
integrated with NIF (Rizzo and Troncy, 2012) and
the NERD ontology is a milestone for creating a
reference ontology for this task.
</bodyText>
<sectionHeader confidence="0.998327" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.93449675">
This paper was supported by the French Min-
istry of Industry (Innovative Web call) under con-
tract 09.2.93.0966, “Collaborative Annotation for
Video Accessibility” (ACAV).
</bodyText>
<sectionHeader confidence="0.995836" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999483">
Rizzo G. and Troncy R. 2011. NERD: A Framework
for Evaluating Named Entity Recognition Tools in
the Web of Data. 101h International Semantic Web
Conference (ISWC’11), Demo Session, Bonn, Ger-
many.
Rizzo G. and Troncy R. 2011. NERD: Evaluat-
ing Named Entity Recognition Tools in the Web of
Data. Workshop on Web Scale Knowledge Extrac-
tion (WEKEX’11), Bonn, Germany.
Rizzo G., Troncy R, Hellmann S and Bruemmer M.
2012. NERD meets NIF: Lifting NLP Extraction
Results to the Linked Data Cloud. 51h International
Workshop on Linked Data on the Web (LDOW’12),
Lyon, France.
</reference>
<footnote confidence="0.814832">
17http://nlp2rdf.org
</footnote>
<page confidence="0.984217">
76
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.406709">
<title confidence="0.945991">NERD: A Framework for Unifying Named Entity and Disambiguation Extraction Tools</title>
<author confidence="0.820495">Giuseppe</author>
<affiliation confidence="0.87616">EURECOM / Sophia Antipolis, Politecnico di Torino / Turin,</affiliation>
<email confidence="0.994809">giuseppe.rizzo@eurecom.fr</email>
<author confidence="0.8226185">Rapha¨el_Troncy EURECOM Sophia Antipolis</author>
<author confidence="0.8226185">France</author>
<email confidence="0.996537">raphael.troncy@eurecom.fr</email>
<abstract confidence="0.999766090909091">Named Entity Extraction is a mature task in the NLP field that has yielded numerous services gaining popularity in the Semantic Web community for extracting knowledge from web documents. These services are generally organized as pipelines, using dedicated APIs and different taxonomy for extracting, classifying and disambiguating named entities. Integrating one of these services in a particular application requires to implement an appropriate driver. Furthermore, the results of these services are not comparable due to different formats. This prevents the comparison of the performance of these services as well as their possible combination. We address this problem by proposing NERD, a framework which unifies 10 popular named entity extractors available on the web, and the NERD ontology which provides a rich set of axioms aligning the taxonomies of these tools.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G Rizzo</author>
<author>R Troncy</author>
</authors>
<title>NERD: A Framework for Evaluating Named Entity Recognition Tools in the Web of Data.</title>
<date>2011</date>
<booktitle>101h International Semantic Web Conference (ISWC’11),</booktitle>
<location>Demo Session, Bonn, Germany.</location>
<contexts>
<context position="5204" citStr="Rizzo and Troncy, 2011" startWordPosition="776" endWordPosition="779">Es, for providing a type and disambiguation URIs pointing to real world objects as they could be defined in the Web of Data. 2.1 NERD interfaces The web interface13 is developed in HTML/- Javascript. It accepts any URI of a web document which is analyzed in order to extract its main textual content. Starting from the raw text, it drives one or several tools to extract the list of Named Entity, their classification and the URIs that disambiguate these entities. The main purpose of this interface is to enable a human user to assess the quality of the extraction results collected by those tools (Rizzo and Troncy, 2011a). At the end of the evaluation, the user sends the results, through asynchronous calls, to the REST API engine in order to store them. This set of evaluations is further used to compute statistics about precision scores for each tool, with the goal to highlight strengths and weaknesses and to compare them (Rizzo and Troncy, 2011b). The comparison aggregates all the evaluations performed and, finally, the user is free to select one or more evaluations to see the metrics that are computed for each service in 13http://nerd.eurecom.fr real time. Finally, the application contains a help page that</context>
</contexts>
<marker>Rizzo, Troncy, 2011</marker>
<rawString>Rizzo G. and Troncy R. 2011. NERD: A Framework for Evaluating Named Entity Recognition Tools in the Web of Data. 101h International Semantic Web Conference (ISWC’11), Demo Session, Bonn, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Rizzo</author>
<author>R Troncy</author>
</authors>
<title>NERD: Evaluating Named Entity Recognition Tools in the Web of Data. Workshop on Web Scale Knowledge Extraction (WEKEX’11),</title>
<date>2011</date>
<location>Bonn, Germany.</location>
<contexts>
<context position="5204" citStr="Rizzo and Troncy, 2011" startWordPosition="776" endWordPosition="779">Es, for providing a type and disambiguation URIs pointing to real world objects as they could be defined in the Web of Data. 2.1 NERD interfaces The web interface13 is developed in HTML/- Javascript. It accepts any URI of a web document which is analyzed in order to extract its main textual content. Starting from the raw text, it drives one or several tools to extract the list of Named Entity, their classification and the URIs that disambiguate these entities. The main purpose of this interface is to enable a human user to assess the quality of the extraction results collected by those tools (Rizzo and Troncy, 2011a). At the end of the evaluation, the user sends the results, through asynchronous calls, to the REST API engine in order to store them. This set of evaluations is further used to compute statistics about precision scores for each tool, with the goal to highlight strengths and weaknesses and to compare them (Rizzo and Troncy, 2011b). The comparison aggregates all the evaluations performed and, finally, the user is free to select one or more evaluations to see the metrics that are computed for each service in 13http://nerd.eurecom.fr real time. Finally, the application contains a help page that</context>
</contexts>
<marker>Rizzo, Troncy, 2011</marker>
<rawString>Rizzo G. and Troncy R. 2011. NERD: Evaluating Named Entity Recognition Tools in the Web of Data. Workshop on Web Scale Knowledge Extraction (WEKEX’11), Bonn, Germany.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Rizzo</author>
<author>R Troncy</author>
<author>S Hellmann</author>
<author>M Bruemmer</author>
</authors>
<title>NERD meets NIF: Lifting NLP Extraction Results to the Linked Data Cloud.</title>
<date>2012</date>
<booktitle>51h International Workshop on Linked Data on the Web (LDOW’12),</booktitle>
<location>Lyon, France.</location>
<marker>Rizzo, Troncy, Hellmann, Bruemmer, 2012</marker>
<rawString>Rizzo G., Troncy R, Hellmann S and Bruemmer M. 2012. NERD meets NIF: Lifting NLP Extraction Results to the Linked Data Cloud. 51h International Workshop on Linked Data on the Web (LDOW’12), Lyon, France.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>