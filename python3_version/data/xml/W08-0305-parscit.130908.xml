<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000310">
<title confidence="0.998151">
Learning Performance of a Machine Translation System: a Statistical and
Computational Analysis
</title>
<author confidence="0.995749">
Marco Turchi Tijl De Bie Nello Cristianini
</author>
<affiliation confidence="0.9960625">
Dept. of Engineering Mathematics
University of Bristol,
</affiliation>
<address confidence="0.994693">
Bristol, BS8 1TR, UK
</address>
<email confidence="0.809284">
{Marco.Turchi, Tijl.DeBie}@bristol.ac.uk
nello@support-vector.net
</email>
<sectionHeader confidence="0.988367" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999855642857143">
We present an extensive experimental study
of a Statistical Machine Translation system,
Moses (Koehn et al., 2007), from the point
of view of its learning capabilities. Very ac-
curate learning curves are obtained, by us-
ing high-performance computing, and extrap-
olations are provided of the projected perfor-
mance of the system under different condi-
tions. We provide a discussion of learning
curves, and we suggest that: 1) the represen-
tation power of the system is not currently a
limitation to its performance, 2) the inference
of its models from finite sets of i.i.d. data
is responsible for current performance limita-
tions, 3) it is unlikely that increasing dataset
sizes will result in significant improvements
(at least in traditional i.i.d. setting), 4) it is un-
likely that novel statistical estimation methods
will result in significant improvements. The
current performance wall is mostly a conse-
quence of Zipf’s law, and this should be taken
into account when designing a statistical ma-
chine translation system. A few possible re-
search directions are discussed as a result of
this investigation, most notably the integra-
tion of linguistic rules into the model inference
phase, and the development of active learning
procedures.
</bodyText>
<sectionHeader confidence="0.987645" genericHeader="categories and subject descriptors">
1 Introduction and Background
</sectionHeader>
<bodyText confidence="0.999825333333333">
The performance of every learning system is the re-
sult of (at least) two combined effects: the repre-
sentation power of the hypothesis class, determin-
ing how well the system can approximate the target
behaviour; and statistical effects, determining how
well the system can approximate the best element of
the hypothesis class, based on finite and noisy train-
ing information. The two effects interact, with richer
classes being better approximators of the target be-
haviour but requiring more training data to reliably
identify the best hypothesis. The resulting trade-
off, equally well known in statistics and in machine
learning, can be expressed in terms of bias variance,
capacity-control, or model selection. Various theo-
ries on learning curves have been proposed to deal
with it, where a learning curve is a plot describing
performance as a function of some parameters, typ-
ically training set size.
In the context of Statistical Machine Translation
(SMT), where large bilingual corpora are used to
train adaptive software to translate text, this task is
further complicated by the peculiar distribution un-
derlying the data, where the probability of encoun-
tering new words or expressions never vanishes. If
we want to understand the potential and limitations
of the current technology, we need to understand the
interplay between these two factors affecting perfor-
mance. In an age where the creation of intelligent
behaviour is increasingly data driven, this is a ques-
tion of great importance to all of Artificial Intelli-
gence.
These observations lead us to an analysis of learn-
ing curves in machine translation, and to a number of
related questions, including an analysis of the flexi-
bility of the representation class used, an analysis of
the stability of the models with respect to perturba-
tions of the parameters, and an analysis of the com-
putational resources needed to train these systems.
Using the open source package Moses (Koehn et
</bodyText>
<page confidence="0.996321">
35
</page>
<note confidence="0.738026">
Proceedings of the Third Workshop on Statistical Machine Translation, pages 35–43,
Columbus, Ohio, USA, June 2008. c�2008 Association for Computational Linguistics
</note>
<bodyText confidence="0.999519405405405">
al., 2007) and the Spanish-English Europarl corpus
(Koehn, 2005) we have performed a complete inves-
tigation of the influence of training set size on the
quality of translations and on the cost of training; the
influence of several design choices; the role of data
sizes in training various components of the system.
We use this data to inform a discussion about learn-
ing curves. An analysis of learning curves has pre-
viously been proposed by (Al-Onaizan et al., 1999).
Recent advances in software, data availability and
computing power have enabled us to undertake the
present study, where very accurate curves are ob-
tained on a large corpus.
Since our goal was to obtain high accuracy learn-
ing curves, that can be trusted both for compar-
ing different system settings, and to extrapolate per-
formance under unseen conditions, we conducted a
large-scale series of tests, to reduce uncertainty in
the estimations and to obtain the strongest possible
signals. This was only possible, to the degree of ac-
curacy needed by our analysis, by the extensive use
of a high performance computer cluster over several
weeks of computation.
One of our key findings is that the current per-
formance is not limited by the representation power
of the hypothesis class, but rather by model estima-
tion from data. And that increasing of the size of
the dataset is not likely to bridge that gap (at least
not for realistic amounts in the i.i.d. setting), nor is
the development of new parameter estimation prin-
ciples. The main limitation seems to be a direct
consequence of Zipf’s law, and the introduction of
constraints from linguistics seems to be an unavoid-
able step, to help the system in the identification of
the optimal models without resorting to massive in-
creases in training data, which would also result in
significantly higher training times, and model sizes.
</bodyText>
<sectionHeader confidence="0.970824" genericHeader="method">
2 Statistical Machine Translation
</sectionHeader>
<bodyText confidence="0.999952520833333">
What is the best function class to map Spanish doc-
uments into English documents? This is a question
of linguistic nature, and has been the subject of a
long debate. The de-facto answer came during the
1990’s from the research community on Statistical
Machine Translation, who made use of statistical
tools based on a noisy channel model originally de-
veloped for speech recognition (Brown et al., 1994;
Och and Weber, 1998; R.Zens et al., 2002; Och and
Ney, 2001; Koehn et al., 2003). A Markovian lan-
guage model, based on phrases rather than words,
coupled with a phrase-to-phrase translation table are
at the heart of most modern systems. Translating a
text amounts to computing the most likely transla-
tion based on the available model parameters. Infer-
ring the parameters of these models from bilingual
corpora is a matter of statistics. By model inference
we mean the task of extracting all tables, parameters
and functions, from the corpus, that will be used to
translate.
How far can this representation take us towards
the target of achieving human-quality translations?
Are the current limitations due to the approximation
error of this representation, or to lack of sufficient
training data? How much space for improvement
is there, given new data or new statistical estima-
tion methods or given different models with differ-
ent complexities?
We investigate both the approximation and the es-
timation components of the error in machine transla-
tion systems. After analysing the two contributions,
we focus on the role of various design choices in
determining the statistical part of the error. We in-
vestigate learning curves, measuring both the role of
the training set and the optimization set size, as well
as the importance of accuracy in the numeric param-
eters.
We also address the trade-off between accuracy
and computational cost. We perform a complete
analysis of Moses as a learning system, assessing the
various contributions to its performance and where
improvements are more likely, and assessing com-
putational and statistical aspects of the system.
A general discussion of learning curves in Moses-
like systems and an extrapolation of performance
are provided, showing that the estimation gap is un-
likely to be closed by adding more data in realistic
amounts.
</bodyText>
<sectionHeader confidence="0.997966" genericHeader="method">
3 Experimental Setup
</sectionHeader>
<bodyText confidence="0.9999758">
We have performed a large number of detailed ex-
periments. In this paper we report just a few, leaving
the complete account of our benchmarking to a full
journal version (Turchi et al., In preparation). Three
experiments allow us to assess the most promis-
</bodyText>
<page confidence="0.996166">
36
</page>
<bodyText confidence="0.871684">
ing directions of research, from a machine learning
point of view.
</bodyText>
<listItem confidence="0.915456095238095">
1. Learning curve showing translation perfor-
mance as a function of training set size, where
translation is performed on unseen sentences.
The curves, describing the statistical part of the
performance, are seen to grow very slowly with
training set size.
2. Learning curve showing translation perfor-
mance as a function of training set size, where
translation is performed on known sentences.
This was done to verify that the hypothesis
class is indeed capable of representing high
quality translations in the idealized case when
all the necessary phrases have been observed
in training phase. By limiting phrase length
to 7 words, and using test sentences mostly
longer than 20 words, we have ensured that this
was a genuine task of decoding. We observed
that translation in these idealized conditions is
worse than human translation, but much better
than machine translation of unseen sentences.
3. Plot of performance of a model when the nu-
</listItem>
<bodyText confidence="0.9544848">
meric parameters are corrupted by an increas-
ing amount of noise. This was done to simu-
late the effect of inaccurate parameter estima-
tion algorithms (due either to imprecise objec-
tive functions, or to lack of sufficient statistics
from the corpus). We were surprised to observe
that accurate estimation of these parameters ac-
counts for at most 10% of the final score. It is
the actual list of phrases that forms the bulk of
the knowledge in the system.
We conclude that the availability of the right mod-
els in the system would allow the system to have a
much higher performance, but these models will not
come from increased datasets or estimation proce-
dures. Instead, they will come from the results of ei-
ther the introduction of linguistic knowledge, or the
introduction of query algorithms, themselves result-
ing necessarily from confidence estimation meth-
ods. Hence these appear to be the two most pressing
questions in this research area.
</bodyText>
<subsectionHeader confidence="0.9977">
3.1 Software
</subsectionHeader>
<bodyText confidence="0.999986695652174">
Moses (Koehn et al., 2007) is a complete translation
toolkit for academic purposes. It provides all the
components needed to create a machine translation
system from one language to another. It contains dif-
ferent modules to preprocess data, train the language
models and the translation models. These mod-
els can be tuned using minimum error rate training
(Och, 2003). Moses uses standard external tools for
some of these tasks, such as GIZA++ (Och and Ney,
2003) for word alignments and SRILM (Stolcke,
2002) for language modeling. Notice that Moses is a
very sophisticated system, capable of learning trans-
lation tables, language models and decoding param-
eters from data. We analyse the contribution of each
component to the overall score.
Given a parallel training corpus, Moses prepro-
cesses it removing long sentences, lowercasing and
tokenizing sentences. These sentences are used to
train the language and translation models. This
phase requires several steps as aligning words, com-
puting the lexical translation, extracting phrases,
scoring the phrases and creating the reordering
model. When the models have been created, the de-
velopment set is used to run the minimum error rate
training algorithm to optimize their weights. We re-
fer to that step as the optimization step in the rest of
the paper. Test set is used to evaluate the quality of
models on the data. The translated sentences are em-
bedded in a sgm format, such that the quality of the
translation can be evaluated using the most common
machine translation scores. Moses provides BLEU
(K.Papineni et al., 2001) and NIST (Doddington,
2002), but Meteor (Banerjee and Lavie, 2005; Lavie
and Agarwal, 2007) and TER (Snover et al., 2006)
can easily be used instead. NIST is used in this paper
as evaluation score after we observed its high corre-
lation to the other scores on the corpus (Turchi et al.,
In preparation).
All experiments have been run using the default
parameter configuration of Moses. It means that
Giza++ has used IBM model 1, 2, 3, and 4 with
number of iterations for model 1 equal to 5, model
2 equal to 0, model 3 and 4 equal to 3; SRILM
has used n-gram order equal to 3 and the Kneser-
Ney smoothing algorithm; Mert has been run fix-
ing to 100 the number of nbest target sentence for
</bodyText>
<page confidence="0.996535">
37
</page>
<bodyText confidence="0.9912299">
each develop sentence, and it stops when none of
the weights changed more than 1e-05 or the nbest
list does not change.
The training, development and test set sentences
are tokenized and lowercased. The maximum num-
ber of tokens for each sentence in the training pair
has been set to 50, whilst no limit is applied to the
development or test set. TMs were limited to a
phrase-length of 7 words and LMs were limited to
3.
</bodyText>
<subsectionHeader confidence="0.998385">
3.2 Data
</subsectionHeader>
<bodyText confidence="0.999908888888889">
The Europarl Release v3 Spanish-English corpus
has been used for the experiments. All the pairs of
sentences are extracted from the proceedings of the
European Parliament.
This dataset is made of three sets of pairs of sen-
tences. Each of them has a different role: training,
development and test set. The training set contains
1,259,914 pairs, while there are 2,000 pairs for de-
velopment and test sets.
This work contains several experiments on differ-
ent types and sizes of data set. To be consistent
and to avoid anomalies due to overfitting or par-
ticular data combinations, each set of pairs of sen-
tences have been randomly sampled. The number of
pairs is fixed and a software selects them randomly
from the whole original training, development or test
set using a uniform distribution (bootstrap). Redun-
dancy of pairs is allowed inside each subset.
</bodyText>
<subsectionHeader confidence="0.996972">
3.3 Hardware
</subsectionHeader>
<bodyText confidence="0.999761538461538">
All the experiments have been run on a cluster ma-
chine, http://www.acrc.bris.ac.uk/acrc/hpc.htm. It
includes 96 nodes each with two dual-core opteron
processors, 8 GB of RAM memory per node (2 GB
per core); 4 thick nodes each with four dual-core
opteron processors, 32 GB of RAM memory per
node (4 GB per core); ClearSpeed accelerator boards
on the thick nodes; SilverStorm Infiniband high-
speed connectivity throughout for parallel code mes-
sage passing; General Parallel File System (GPFS)
providing data access from all the nodes; storage -
11 terabytes. Each experiment has been run using
one core and allocating 4Gb of RAM.
</bodyText>
<sectionHeader confidence="0.997974" genericHeader="method">
4 Experiments
</sectionHeader>
<subsectionHeader confidence="0.5319495">
4.1 Experiment 1: role of training set size on
performance on new sentences
</subsectionHeader>
<bodyText confidence="0.999882264705882">
In this section we analyse how performance is af-
fected by training set size, by creating learning
curves (NIST score vs training set size).
We have created subsets of the complete corpus
by sub-sampling sentences from a uniform distribu-
tion, with replacement. We have created 10 random
subsets for each of the 20 chosen sizes, where each
size represents 5%, 10%, etc of the complete cor-
pus. For each subset a new instance of the SMT
system has been created, for a total of 200 mod-
els. These have been optimized using a fixed size
development set (of 2,000 sentences, not included
in any other phase of the experiment). Two hun-
dred experiments have then been run on an indepen-
dent test set (of 2,000 sentences, also not included in
any other phase of the experiment). This allowed us
to calculate the mean and variance of NIST scores.
This has been done for the models with and without
the optimization step, hence producing the learning
curves with error bars plotted in Figure 1, represent-
ing translation performance versus training set size,
in the two cases.
The growth of the learning curve follows a typi-
cal pattern, growing fast at first, then slowing down
(traditional learning curves are power laws, in theo-
retical models). In this case it appears to be grow-
ing even slower than a power law, which would be
a surprise under traditional statistical learning the-
ory models. In any case, the addition of massive
amounts of data from the same distribution will re-
sult into smaller improvements in the performance.
The small error bars that we have obtained also al-
low us to neatly observe the benefits of the optimiza-
tion phase, which are small but clearly significant.
</bodyText>
<subsectionHeader confidence="0.5010845">
4.2 Experiment 2: role of training set size on
performance on known sentences
</subsectionHeader>
<bodyText confidence="0.999939857142857">
The performance of a learning system depends both
on the statistical estimation issues discussed in the
previous subsection, and on functional approxima-
tion issues: how well can the function class repro-
duce the desired behaviour? In order to measure this
quantity, we have performed an experiment much
like the one described above, with one key differ-
</bodyText>
<page confidence="0.993396">
38
</page>
<figure confidence="0.460927">
Nist Score vs Training Size
</figure>
<figureCaption confidence="0.995946">
Figure 1: ”Not Optimized” has been obtained using a
fixed test set and no optimization phase. ”Optimized”
using a fixed test set and the optimization phase.
</figureCaption>
<bodyText confidence="0.989850324675325">
ence: the test set was selected randomly from the
training set (after cleaning phase). In this way we
are guaranteed that the system has seen all the nec-
essary information in training phase, and we can as-
sess its limitations in these very ideal conditions.
We are aware this condition is extremely idealized
and it will never happen in real life, but we wanted
to have an upper bound on the performance achiev-
able by this architecture if access to ideal data was
not an issue. We also made sure that the perfor-
mance on translating training sentences was not due
to simple memorization of the entire sentence, ver-
ifying that the vast majority of the sentences were
not present in the translation table (where the max-
imal phrase size was 7), not even in reduced form.
Under these favourable conditions, the system ob-
tained a NIST score of around 11, against a score
of about 7.5 on unseen sentences. This suggests
that the phrase-based Markov-chain representation
is sufficiently rich to obtain a high score, if the nec-
essary information is contained in the translation and
language models.
For each model to be tested on known sentences,
we have sampled ten subsets of 2,000 sentences each
from the training set.
The ”Optimized, Test on Training Set” learn-
ing curve, see figure 2, represents a possible upper
bound on the best performance of this SMT sys-
tem, since it has been computed in favourable con-
ditions. It does suggest that this hypothesis class
has the power of approximating the target behaviour
more accurately than we could think based on per-
formance on unseen sentences. If the right informa-
tion has been seen, the system can reconstruct the
sentences rather accurately. The NIST score com-
puted using the reference sentences as target sen-
tences is around 15, we identify the relative curve as
”Human Translation”. At this point, it seems likely
that the process with which we learn the necessary
tables representing the knowledge of the system is
responsible for the performance limitations.
The gap between the ”Optimized, Test on Train-
ing Set” and the ”Optimized” curves is even more in-
teresting if related to the slow growth rate in the pre-
vious learning curve: although the system can repre-
sent internally a good model of translation, it seems
unlikely that this will ever be inferred by increasing
the size of training datasets in realistic amounts.
The training step results in various forms of
knowledge: translation table, language model and
parameters from the optimization. The internal
models learnt by the system are essentially lists
of phrases, with probabilities associated to them.
Which of these components is mostly responsible
for performance limitations?
4.3 Experiment 3: effect on performance of
increasing noise levels in parameters
Much research has focused on devising improved
principles for the statistical estimation of the pa-
rameters in language and translation models. The
introduction of discriminative graphical models has
marked a departure from traditional maximum like-
lihood estimation principles, and various approaches
have been proposed.
The question is: how much information is con-
tained in the fine grain structure of the probabilities
estimated by the model? Is the performance improv-
ing with more data because certain parameters are
estimated better, or just because the lists are grow-
ing? In the second case, it is likely that more sophis-
ticated statistical algorithms to improve the estima-
tion of probabilities will have limited impact.
In order to simulate the effect of inaccurate esti-
mation of the numeric parameters, we have added
increasing amount of noise to them. This can either
represent the effect of insufficient statistics in esti-
mating them, or the use of imperfect parameter esti-
</bodyText>
<figure confidence="0.998878285714286">
0 2 4 6 8 10 12 14
Training Size x 105
Nist Score
6.9
6.8
7.6
7.5
7.4
7.3
7.2
7.1
7
Optimized
Not Optimized
</figure>
<page confidence="0.667659">
39
</page>
<figure confidence="0.654896">
Nist Score vs Training Size
</figure>
<figureCaption confidence="0.87055325">
Figure 2: Four learning curves have been compared. ”Not Optimized” has been obtained using a fixed test set and no
optimization phase. ”Optimized” using a fixed test set and the optimization phase. ”Optimized Test On Training Set”
a test set selected by the training set for each training set size and the optimization phase. ”Human Translation” has
been obtained by computing NIST using the reference English sentence of the test set as target sentences.
</figureCaption>
<figure confidence="0.9821484">
Nist Score
12
11
10
9
8
7
6
Training Size
x 105
16
15
Not Optimized
Optimized
Optimized, Test On Training Set
Human Translation
0 2 4 6 8 10 12 14
14
13
&amp;quot;Perturbed&amp;quot; Nist Score
</figure>
<bodyText confidence="0.986914130434783">
mation biases. We have corrupted the parameters in
the language and translation models, by adding in-
creasing levels of noise to them, and measured the
effect of this on performance.
One model trained with 62,995 pairs of sentences
has been chosen from the experiments in Section
4.1. A percentage of noise has been added to each
probability in the language model, including condi-
tional probability and back off, translation model,
bidirectional translation probabilities and lexical-
ized weighting. Given a probability p and a percent-
age of noise, pn, a value has been randomly selected
from the interval [-x,+x], where x = p * pn, and
added to p. If this quantity is bigger than one it has
been approximated to one. Different values of per-
centage have been used. For each value of pn, five
experiment have been run. The optimization step
has not been run.
We see from Figure 3 that the performance does
not seem to depend crucially on the fine structure of
the parameter vectors, and that even a large addition
of noise (100%) produces a 10% decline in NIST
score. This suggests that it is the list itself, rather
</bodyText>
<figure confidence="0.980541888888889">
&amp;quot;Perturbed&amp;quot; Nist Score vs Percentage of Perturbation
6.85
6.8
6.75
6.7
6.65
6.6
0 10 20 30 40 50 60 70 80 90 100 110
Percentage of Perturbation
</figure>
<figureCaption confidence="0.985113">
Figure 3: Each probability of the language and translation
</figureCaption>
<bodyText confidence="0.9564512">
models has been perturbed adding a percentage of noise.
This learning curve reports the not optimized NIST score
versus the percentage of perturbation applied. These re-
sults have been obtained using a fixed training set size
equal to 62,995 pairs of sentences.
</bodyText>
<page confidence="0.987518">
40
</page>
<figure confidence="0.986236">
CPU Computational Time in minutes vs Training Size
2500
Training Time
Tuning Time
2000
1500
1000
500
0
0 2 4 6 8 10 12 14
Training Size x 105
CPU Computational Time in minutes
</figure>
<bodyText confidence="0.998620777777778">
algorithm and the sentences in the development set.
We can also see in figure 4 that even a small devel-
opment set size can require a large amount of tun-
ing time. Each point of the tuning time curve has a
big variance. The tuning phase involves translating
the development set many times and hence its cost
depends very weakly on the training set size, since a
large training set leads to larger tables and these lead
to slightly longer test times.
</bodyText>
<sectionHeader confidence="0.977321" genericHeader="method">
6 Discussion
</sectionHeader>
<figureCaption confidence="0.9986025">
Figure 4: Training and tuning user time vs training set
size. Time quantities are expressed in minutes.
</figureCaption>
<bodyText confidence="0.9998866">
than the probabilities in it, that controls the perfor-
mance. Different estimation methods can produce
different parameters, but this does not seem to mat-
ter very much. The creation of a more complete list
of words, however, seems to be the key to improve
the score. Combined with the previous findings, this
would mean that neither more data nor better statis-
tics will bridge the performance gap. The solution
might have to be found elsewhere, and in our Dis-
cussion section we outline a few possible avenues.
</bodyText>
<sectionHeader confidence="0.993438" genericHeader="method">
5 Computational Cost
</sectionHeader>
<bodyText confidence="0.999550309090909">
The computational cost of models creation and
development-phase has been measured during the
creation of the learning curves. Despite its efficiency
in terms of data usage, the development phase has a
high cost in computational terms, if compared with
the cost of creating the complete language and trans-
lation models.
For each experiment, the user CPU time is com-
puted as the sum of the user time of the main process
and the user time of the children.
These quantities are collected for training, devel-
opment, testing and evaluation phases. In figure 4,
training and tuning user times are plotted as a func-
tion of the training set size. It is evident that increas-
ing the training size causes an increase in training
time in a roughly linear fashion.
It is hard to find a similar relationship for the tun-
ing time of the development phase. In fact, the tun-
ing time is strictly connected with the optimization
The impressive capability of current machine trans-
lation systems is not only a testament to an incredi-
bly productive and creative research community, but
can also be seen as a paradigm for other Artificial In-
telligence tasks. Data driven approaches to all main
areas of AI currently deliver the state of the art per-
formance, from summarization to speech recogni-
tion to machine vision to information retrieval. And
statistical learning technology is central to all ap-
proaches to data driven AI.
Understanding how sophisticated behaviour can
be learnt from data is hence not just a concern for
machine learning, or to individual applied commu-
nities, such as Statistical Machine Translation, but
rather a general concern for modern Artificial Intelli-
gence. The analysis of learning curves, and the iden-
tification of the various limitations to performance
is a crucial part of the machine learning method,
and one where statistics and algorithmics interact
closely.
In the case of Statistical Machine Translation, the
analysis of Moses suggests that the current bottle-
neck is the lack of sufficient data, not the function
class used for the representation of translation sys-
tems. The clear gap between performance on train-
ing and testing set, together with the rate of the
learning curves, suggests that improvements may be
possible but not by adding more data in i.i.d. way as
done now. The perturbation analysis suggests that
improved statistical principles are unlikely to make
a big difference either.
Since it is unlikely that sufficient data will be
available by simply sampling a distribution, one
needs to address a few possible ways to transfer
large amounts of knowledge into the system. All of
them lead to open problems either in machine learn-
</bodyText>
<page confidence="0.998038">
41
</page>
<bodyText confidence="0.999984084507042">
ing or in machine translation, most of them having
been already identified by their respective communi-
ties as important questions. They are actively being
worked on.
The gap between performances on training and
on test sets is typically affected by model selection
choices, ultimately controlling the trade off between
overfitting and underfitting. In these experiments the
system used phrases of length 7 or less. Changing
this parameter might reflect on the gap and this is
the focus of our current work.
A research programme naturally follows from
our analysis. The first obvious approach is an ef-
fort to identify or produce datasets on demand (ac-
tive learning, where the learning system can request
translations of specific sentences, to satisfy its infor-
mation needs). This is a classical machine learning
question, that however comes with the need for fur-
ther theoretical work, since it breaks the traditional
i.i.d. assumptions on the origin of data. Further-
more, it would also require an effective way to do
confidence estimation on translations, as traditional
active learning approaches are effectively based on
the identification (or generation) of instances where
there is low confidence in the output (Blatz et al.,
2004; Ueffing and Ney, 2004; Ueffing and Ney,
2005b; Ueffing and Ney, 2005a).
The second natural direction involves the intro-
duction of significant domain knowledge in the form
of linguistic rules, so to dramatically reduce the
amount of data needed to essentially reconstruct
them by using statistics. These rules could take the
form of generation of artificial training data, based
on existing training data, or a posteriori expansion of
translation and language tables. Any way to enforce
linguistic constraints will result in a reduced need
for data, and ultimately in more complete models,
given the same amount of data (Koehn and Hoang,
2007).
Obviously, it is always possible that the identifi-
cation of radically different representations of lan-
guage might introduce totally different constraints
on both approximation and estimation error, and this
might be worth considering.
What is not likely to work. It does not seem that
the introduction of more data will change the situ-
ation significantly, as long as the data is sampled
i.i.d. from the same distribution. It also does not
seem that more flexible versions of Markov mod-
els would be likely to change the situation. Finally,
it does not seem that new and different methods to
estimate probabilities would make much of a differ-
ence. Our perturbation studies show that significant
amounts of noise in the parameters result into very
small variations in the performance. Note also that
the current algorithm is not even working on refin-
ing the probability estimates, as the rate of growth of
the tables suggests that new n-grams are constantly
appearing, reducing the proportion of time spent re-
fining probabilities of old n-grams.
It does seem that the control of the performance
relies on the length of the translation and language
tables. Ways are needed to make these tables grow
much faster as a function of training set size; they
can either involve active selection of documents to
translate, or the incorporation of linguistic rules to
expand the tables without using extra data.
It is important to note that many approaches sug-
gested above are avenues currently being actively
pursued, and this analysis might be useful to decide
which one of them should be given priority.
</bodyText>
<sectionHeader confidence="0.999209" genericHeader="conclusions">
7 Conclusions
</sectionHeader>
<bodyText confidence="0.999957714285714">
We have started a series of extensive experimental
evaluations of performance of Moses, using high
performance computing, with the goal of under-
standing the system from a machine learning point
of view, and use this information to identify weak-
nesses of the system that can lead to improvements.
We have performed many more experiments that
cannot be reported in this workshop paper, and will
be published in a longer report (Turchi et al., In
preparation). In general, our goal is to extrapolate
the performance of the system under many condi-
tions, to be able to decide which directions of re-
search are most likely to deliver improvements in
performance.
</bodyText>
<sectionHeader confidence="0.998345" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.96709825">
Marco Turchi is supported by the EU Project
SMART. The authors thank Callum Wright, Bris-
tol HPC Systems Administrator, and Moses mailing
list.
</bodyText>
<page confidence="0.998771">
42
</page>
<sectionHeader confidence="0.987115" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999790088235294">
Y. Al-Onaizan, J. Curin, M. Jahr, K. Knight, J. Lafferty,
D. Melamed, F. J. Och, D. Purdy, N. A. Smith, and
D. Yarowsky. 1999. Statistical machine translation:
Final report. Technical report, Johns Hopkins Univer-
sity 1999 Summer Workshop on Language Engineer-
ing, Center for Speech and Language Processing.
S. Banerjee and A. Lavie. 2005. Meteor: An auto-
matic metric for mt evaluation with improved correla-
tion with human judgments. In ACL ’05: Proceedings
of the 43rd Annual Meeting on Association for Com-
putational Linguistics, Morristown, NJ, USA. Associ-
ation for Computational Linguistics.
J. Blatz, E. Fitzgerald, G. Foster, S. Gandrabur, C. Goutte,
A. Kulesza, A. Sanchis, and N. Ueffing. 2004. Confi-
dence estimation for machine translation. In COLING
’04: Proceedings of the 20th international conference
on Computational Linguistics, page 315, Morristown,
NJ, USA. Association for Computational Linguistics.
P. F. Brown, S. Della Pietra, V.t J. Della Pietra, and R. L.
Mercer. 1994. The mathematic of statistical machine
translation: Parameter estimation. Computational Lin-
guistics, 19(2):263–311.
G. Doddington. 2002. Automatic evaluation of machine
translation quality using n-gram co-occurrence statis-
tics. In Proceedings of the second international con-
ference on Human Language Technology Research,
pages 138–145, San Francisco, CA, USA. Morgan
Kaufmann Publishers Inc.
P. Koehn and H. Hoang. 2007. Factored translation
models. In Proceedings of the 2007 Joint Conference
on Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learning
(EMNLP-CoNLL), pages 868–876.
P. Koehn, F. J. Och, and D. Marcu. 2003. Statistical
phrase-based translation. In NAACL ’03: Proceedings
of the 2003 Conference of the North American Chap-
ter of the Association for Computational Linguistics
on Human Language Technology, pages 48–54, Mor-
ristown, NJ, USA. Association for Computational Lin-
guistics.
P. Koehn, H. Hoang, A. Birch, C. Callison-Burch,
M. Federico, N. Bertoldi, B. Cowan, W. Shen,
C. Moran, R. Zens, C. Dyer, O. Bojar, A. Constantin,
and E. Herbst. 2007. Moses: Open source toolkit for
statistical machine translation. In the Annual Meet-
ing of the Association for Computational Linguistics,
demonstration session.
P. Koehn. 2005. Europarl: A parallel corpus for sta-
tistical machine translation. In Machine Translation
Summit X, pages 79–86.
K.Papineni, S. Roukos, T. Ward, and W. J. Zhu. 2001.
Bleu: a method for automatic evaluation of machine
translation. In Proceedings of ACL ’02, pages 311–
318, Morristown, NJ, USA. Association for Computa-
tional Linguistics.
A. Lavie and A. Agarwal. 2007. Meteor: An automatic
metric for mt evaluation with high levels of correla-
tion with human judgments. In ACL ’07: Proceedings
of 45th Annual Meeting of the Association for Com-
putational Linguistics. Association for Computational
Linguistics.
F. J. Och and H. Ney. 2001. Discriminative training
and maximum entropy models for statistical machine
translation. In Proceedings of ACL ’02, pages 295–
302, Morristown, NJ, USA. Association for Computa-
tional Linguistics.
F. J. Och and H. Ney. 2003. A systematic comparison of
various statistical alignment models. Computational
Linguistics, 29(1):19–51.
F. J. Och and H. Weber. 1998. Improving statistical nat-
ural language translation with categories and rules. In
COLING-ACL, pages 985–989.
F. J. Och. 2003. Minimum error rate training in statis-
tical machine translation. In Proceedings ofACL ’03,
pages 160–167, Morristown, NJ, USA. Association for
Computational Linguistics.
R.Zens, F. J.Och, and H. Ney. 2002. Phrase-based sta-
tistical machine translation. In KI ’02: Proceedings
of the 25th Annual German Conference on AI, pages
18–32, London, UK. Springer-Verlag.
M. Snover, B. Dorr, R. Schwartz, L. Micciulla, and
J. Makhoul. 2006. A study of translation edit rate
with targeted human annotation. In Proceedings of the
7th Conference of the Association for Machine Trans-
lation in the Americas, pages 223–231. Association for
Machine Translation in the Americas.
A. Stolcke. 2002. Srilm – an extensible language mod-
eling toolkit. In Intl. Conf. on Spoken Language Pro-
cessing.
M. Turchi, T. De Bie, and N. Cristianini. In preparation.
Learning analysis of a machine translation system.
N. Ueffing and H. Ney. 2004. Bayes decision rules
and confidence measures for statistical machine trans-
lation. In EsTAL-2004, pages 70–81.
N. Ueffing and H. Ney. 2005a. Application of word-level
confidence measures in interactive statistical machine
translation. In EAMT-2005, pages 262–270.
N. Ueffing and H. Ney. 2005b. Word-level confidence
estimation for machine translation using phrase-based
translation models. In Proceedings ofHLT ’05, pages
763–770, Morristown, NJ, USA. Association for Com-
putational Linguistics.
</reference>
<page confidence="0.999833">
43
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.849590">
<title confidence="0.998725">Learning Performance of a Machine Translation System: a Statistical Computational Analysis</title>
<author confidence="0.999728">Marco Turchi Tijl De_Bie Nello Cristianini</author>
<affiliation confidence="0.99807">Dept. of Engineering University of</affiliation>
<address confidence="0.913701">Bristol, BS8 1TR,</address>
<email confidence="0.976414">nello@support-vector.net</email>
<abstract confidence="0.997828275862069">We present an extensive experimental study of a Statistical Machine Translation system, Moses (Koehn et al., 2007), from the point of view of its learning capabilities. Very accurate learning curves are obtained, by using high-performance computing, and extrapolations are provided of the projected performance of the system under different conditions. We provide a discussion of learning curves, and we suggest that: 1) the representation power of the system is not currently a limitation to its performance, 2) the inference of its models from finite sets of i.i.d. data is responsible for current performance limitations, 3) it is unlikely that increasing dataset sizes will result in significant improvements (at least in traditional i.i.d. setting), 4) it is unlikely that novel statistical estimation methods will result in significant improvements. The current performance wall is mostly a consequence of Zipf’s law, and this should be taken into account when designing a statistical machine translation system. A few possible research directions are discussed as a result of this investigation, most notably the integration of linguistic rules into the model inference phase, and the development of active learning procedures.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Y Al-Onaizan</author>
<author>J Curin</author>
<author>M Jahr</author>
<author>K Knight</author>
<author>J Lafferty</author>
<author>D Melamed</author>
<author>F J Och</author>
<author>D Purdy</author>
<author>N A Smith</author>
<author>D Yarowsky</author>
</authors>
<title>Statistical machine translation: Final report.</title>
<date>1999</date>
<booktitle>Summer Workshop on Language Engineering, Center for Speech and Language Processing.</booktitle>
<tech>Technical report,</tech>
<institution>Johns Hopkins University</institution>
<contexts>
<context position="4132" citStr="Al-Onaizan et al., 1999" startWordPosition="644" endWordPosition="647">ings of the Third Workshop on Statistical Machine Translation, pages 35–43, Columbus, Ohio, USA, June 2008. c�2008 Association for Computational Linguistics al., 2007) and the Spanish-English Europarl corpus (Koehn, 2005) we have performed a complete investigation of the influence of training set size on the quality of translations and on the cost of training; the influence of several design choices; the role of data sizes in training various components of the system. We use this data to inform a discussion about learning curves. An analysis of learning curves has previously been proposed by (Al-Onaizan et al., 1999). Recent advances in software, data availability and computing power have enabled us to undertake the present study, where very accurate curves are obtained on a large corpus. Since our goal was to obtain high accuracy learning curves, that can be trusted both for comparing different system settings, and to extrapolate performance under unseen conditions, we conducted a large-scale series of tests, to reduce uncertainty in the estimations and to obtain the strongest possible signals. This was only possible, to the degree of accuracy needed by our analysis, by the extensive use of a high perfor</context>
</contexts>
<marker>Al-Onaizan, Curin, Jahr, Knight, Lafferty, Melamed, Och, Purdy, Smith, Yarowsky, 1999</marker>
<rawString>Y. Al-Onaizan, J. Curin, M. Jahr, K. Knight, J. Lafferty, D. Melamed, F. J. Och, D. Purdy, N. A. Smith, and D. Yarowsky. 1999. Statistical machine translation: Final report. Technical report, Johns Hopkins University 1999 Summer Workshop on Language Engineering, Center for Speech and Language Processing.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Banerjee</author>
<author>A Lavie</author>
</authors>
<title>Meteor: An automatic metric for mt evaluation with improved correlation with human judgments.</title>
<date>2005</date>
<booktitle>In ACL ’05: Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics,</booktitle>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="11708" citStr="Banerjee and Lavie, 2005" startWordPosition="1886" endWordPosition="1889">xtracting phrases, scoring the phrases and creating the reordering model. When the models have been created, the development set is used to run the minimum error rate training algorithm to optimize their weights. We refer to that step as the optimization step in the rest of the paper. Test set is used to evaluate the quality of models on the data. The translated sentences are embedded in a sgm format, such that the quality of the translation can be evaluated using the most common machine translation scores. Moses provides BLEU (K.Papineni et al., 2001) and NIST (Doddington, 2002), but Meteor (Banerjee and Lavie, 2005; Lavie and Agarwal, 2007) and TER (Snover et al., 2006) can easily be used instead. NIST is used in this paper as evaluation score after we observed its high correlation to the other scores on the corpus (Turchi et al., In preparation). All experiments have been run using the default parameter configuration of Moses. It means that Giza++ has used IBM model 1, 2, 3, and 4 with number of iterations for model 1 equal to 5, model 2 equal to 0, model 3 and 4 equal to 3; SRILM has used n-gram order equal to 3 and the KneserNey smoothing algorithm; Mert has been run fixing to 100 the number of nbest</context>
</contexts>
<marker>Banerjee, Lavie, 2005</marker>
<rawString>S. Banerjee and A. Lavie. 2005. Meteor: An automatic metric for mt evaluation with improved correlation with human judgments. In ACL ’05: Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Blatz</author>
<author>E Fitzgerald</author>
<author>G Foster</author>
<author>S Gandrabur</author>
<author>C Goutte</author>
<author>A Kulesza</author>
<author>A Sanchis</author>
<author>N Ueffing</author>
</authors>
<title>Confidence estimation for machine translation.</title>
<date>2004</date>
<booktitle>In COLING ’04: Proceedings of the 20th international conference on Computational Linguistics,</booktitle>
<pages>315</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="27902" citStr="Blatz et al., 2004" startWordPosition="4632" endWordPosition="4635">y or produce datasets on demand (active learning, where the learning system can request translations of specific sentences, to satisfy its information needs). This is a classical machine learning question, that however comes with the need for further theoretical work, since it breaks the traditional i.i.d. assumptions on the origin of data. Furthermore, it would also require an effective way to do confidence estimation on translations, as traditional active learning approaches are effectively based on the identification (or generation) of instances where there is low confidence in the output (Blatz et al., 2004; Ueffing and Ney, 2004; Ueffing and Ney, 2005b; Ueffing and Ney, 2005a). The second natural direction involves the introduction of significant domain knowledge in the form of linguistic rules, so to dramatically reduce the amount of data needed to essentially reconstruct them by using statistics. These rules could take the form of generation of artificial training data, based on existing training data, or a posteriori expansion of translation and language tables. Any way to enforce linguistic constraints will result in a reduced need for data, and ultimately in more complete models, given the</context>
</contexts>
<marker>Blatz, Fitzgerald, Foster, Gandrabur, Goutte, Kulesza, Sanchis, Ueffing, 2004</marker>
<rawString>J. Blatz, E. Fitzgerald, G. Foster, S. Gandrabur, C. Goutte, A. Kulesza, A. Sanchis, and N. Ueffing. 2004. Confidence estimation for machine translation. In COLING ’04: Proceedings of the 20th international conference on Computational Linguistics, page 315, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P F Brown</author>
<author>S Della Pietra</author>
<author>V t J Della Pietra</author>
<author>R L Mercer</author>
</authors>
<title>The mathematic of statistical machine translation: Parameter estimation.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="5948" citStr="Brown et al., 1994" startWordPosition="946" endWordPosition="949">m in the identification of the optimal models without resorting to massive increases in training data, which would also result in significantly higher training times, and model sizes. 2 Statistical Machine Translation What is the best function class to map Spanish documents into English documents? This is a question of linguistic nature, and has been the subject of a long debate. The de-facto answer came during the 1990’s from the research community on Statistical Machine Translation, who made use of statistical tools based on a noisy channel model originally developed for speech recognition (Brown et al., 1994; Och and Weber, 1998; R.Zens et al., 2002; Och and Ney, 2001; Koehn et al., 2003). A Markovian language model, based on phrases rather than words, coupled with a phrase-to-phrase translation table are at the heart of most modern systems. Translating a text amounts to computing the most likely translation based on the available model parameters. Inferring the parameters of these models from bilingual corpora is a matter of statistics. By model inference we mean the task of extracting all tables, parameters and functions, from the corpus, that will be used to translate. How far can this represe</context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1994</marker>
<rawString>P. F. Brown, S. Della Pietra, V.t J. Della Pietra, and R. L. Mercer. 1994. The mathematic of statistical machine translation: Parameter estimation. Computational Linguistics, 19(2):263–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Doddington</author>
</authors>
<title>Automatic evaluation of machine translation quality using n-gram co-occurrence statistics.</title>
<date>2002</date>
<booktitle>In Proceedings of the second international conference on Human Language Technology Research,</booktitle>
<pages>138--145</pages>
<publisher>Morgan Kaufmann Publishers Inc.</publisher>
<location>San Francisco, CA, USA.</location>
<contexts>
<context position="11670" citStr="Doddington, 2002" startWordPosition="1882" endWordPosition="1883">ting the lexical translation, extracting phrases, scoring the phrases and creating the reordering model. When the models have been created, the development set is used to run the minimum error rate training algorithm to optimize their weights. We refer to that step as the optimization step in the rest of the paper. Test set is used to evaluate the quality of models on the data. The translated sentences are embedded in a sgm format, such that the quality of the translation can be evaluated using the most common machine translation scores. Moses provides BLEU (K.Papineni et al., 2001) and NIST (Doddington, 2002), but Meteor (Banerjee and Lavie, 2005; Lavie and Agarwal, 2007) and TER (Snover et al., 2006) can easily be used instead. NIST is used in this paper as evaluation score after we observed its high correlation to the other scores on the corpus (Turchi et al., In preparation). All experiments have been run using the default parameter configuration of Moses. It means that Giza++ has used IBM model 1, 2, 3, and 4 with number of iterations for model 1 equal to 5, model 2 equal to 0, model 3 and 4 equal to 3; SRILM has used n-gram order equal to 3 and the KneserNey smoothing algorithm; Mert has been</context>
</contexts>
<marker>Doddington, 2002</marker>
<rawString>G. Doddington. 2002. Automatic evaluation of machine translation quality using n-gram co-occurrence statistics. In Proceedings of the second international conference on Human Language Technology Research, pages 138–145, San Francisco, CA, USA. Morgan Kaufmann Publishers Inc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>H Hoang</author>
</authors>
<title>Factored translation models.</title>
<date>2007</date>
<booktitle>In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL),</booktitle>
<pages>868--876</pages>
<contexts>
<context position="28546" citStr="Koehn and Hoang, 2007" startWordPosition="4734" endWordPosition="4737">4; Ueffing and Ney, 2005b; Ueffing and Ney, 2005a). The second natural direction involves the introduction of significant domain knowledge in the form of linguistic rules, so to dramatically reduce the amount of data needed to essentially reconstruct them by using statistics. These rules could take the form of generation of artificial training data, based on existing training data, or a posteriori expansion of translation and language tables. Any way to enforce linguistic constraints will result in a reduced need for data, and ultimately in more complete models, given the same amount of data (Koehn and Hoang, 2007). Obviously, it is always possible that the identification of radically different representations of language might introduce totally different constraints on both approximation and estimation error, and this might be worth considering. What is not likely to work. It does not seem that the introduction of more data will change the situation significantly, as long as the data is sampled i.i.d. from the same distribution. It also does not seem that more flexible versions of Markov models would be likely to change the situation. Finally, it does not seem that new and different methods to estimate</context>
</contexts>
<marker>Koehn, Hoang, 2007</marker>
<rawString>P. Koehn and H. Hoang. 2007. Factored translation models. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 868–876.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>F J Och</author>
<author>D Marcu</author>
</authors>
<title>Statistical phrase-based translation.</title>
<date>2003</date>
<booktitle>In NAACL ’03: Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology,</booktitle>
<pages>48--54</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="6030" citStr="Koehn et al., 2003" startWordPosition="962" endWordPosition="965">ses in training data, which would also result in significantly higher training times, and model sizes. 2 Statistical Machine Translation What is the best function class to map Spanish documents into English documents? This is a question of linguistic nature, and has been the subject of a long debate. The de-facto answer came during the 1990’s from the research community on Statistical Machine Translation, who made use of statistical tools based on a noisy channel model originally developed for speech recognition (Brown et al., 1994; Och and Weber, 1998; R.Zens et al., 2002; Och and Ney, 2001; Koehn et al., 2003). A Markovian language model, based on phrases rather than words, coupled with a phrase-to-phrase translation table are at the heart of most modern systems. Translating a text amounts to computing the most likely translation based on the available model parameters. Inferring the parameters of these models from bilingual corpora is a matter of statistics. By model inference we mean the task of extracting all tables, parameters and functions, from the corpus, that will be used to translate. How far can this representation take us towards the target of achieving human-quality translations? Are th</context>
</contexts>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>P. Koehn, F. J. Och, and D. Marcu. 2003. Statistical phrase-based translation. In NAACL ’03: Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology, pages 48–54, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
<author>H Hoang</author>
<author>A Birch</author>
<author>C Callison-Burch</author>
<author>M Federico</author>
<author>N Bertoldi</author>
<author>B Cowan</author>
<author>W Shen</author>
<author>C Moran</author>
<author>R Zens</author>
<author>C Dyer</author>
<author>O Bojar</author>
<author>A Constantin</author>
<author>E Herbst</author>
</authors>
<title>Moses: Open source toolkit for statistical machine translation. In the Annual Meeting of the Association for Computational Linguistics, demonstration session.</title>
<date>2007</date>
<contexts>
<context position="10090" citStr="Koehn et al., 2007" startWordPosition="1625" endWordPosition="1628">ore. It is the actual list of phrases that forms the bulk of the knowledge in the system. We conclude that the availability of the right models in the system would allow the system to have a much higher performance, but these models will not come from increased datasets or estimation procedures. Instead, they will come from the results of either the introduction of linguistic knowledge, or the introduction of query algorithms, themselves resulting necessarily from confidence estimation methods. Hence these appear to be the two most pressing questions in this research area. 3.1 Software Moses (Koehn et al., 2007) is a complete translation toolkit for academic purposes. It provides all the components needed to create a machine translation system from one language to another. It contains different modules to preprocess data, train the language models and the translation models. These models can be tuned using minimum error rate training (Och, 2003). Moses uses standard external tools for some of these tasks, such as GIZA++ (Och and Ney, 2003) for word alignments and SRILM (Stolcke, 2002) for language modeling. Notice that Moses is a very sophisticated system, capable of learning translation tables, lang</context>
</contexts>
<marker>Koehn, Hoang, Birch, Callison-Burch, Federico, Bertoldi, Cowan, Shen, Moran, Zens, Dyer, Bojar, Constantin, Herbst, 2007</marker>
<rawString>P. Koehn, H. Hoang, A. Birch, C. Callison-Burch, M. Federico, N. Bertoldi, B. Cowan, W. Shen, C. Moran, R. Zens, C. Dyer, O. Bojar, A. Constantin, and E. Herbst. 2007. Moses: Open source toolkit for statistical machine translation. In the Annual Meeting of the Association for Computational Linguistics, demonstration session.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Koehn</author>
</authors>
<title>Europarl: A parallel corpus for statistical machine translation.</title>
<date>2005</date>
<booktitle>In Machine Translation Summit X,</booktitle>
<pages>79--86</pages>
<contexts>
<context position="3729" citStr="Koehn, 2005" startWordPosition="576" endWordPosition="577">analysis of learning curves in machine translation, and to a number of related questions, including an analysis of the flexibility of the representation class used, an analysis of the stability of the models with respect to perturbations of the parameters, and an analysis of the computational resources needed to train these systems. Using the open source package Moses (Koehn et 35 Proceedings of the Third Workshop on Statistical Machine Translation, pages 35–43, Columbus, Ohio, USA, June 2008. c�2008 Association for Computational Linguistics al., 2007) and the Spanish-English Europarl corpus (Koehn, 2005) we have performed a complete investigation of the influence of training set size on the quality of translations and on the cost of training; the influence of several design choices; the role of data sizes in training various components of the system. We use this data to inform a discussion about learning curves. An analysis of learning curves has previously been proposed by (Al-Onaizan et al., 1999). Recent advances in software, data availability and computing power have enabled us to undertake the present study, where very accurate curves are obtained on a large corpus. Since our goal was to</context>
</contexts>
<marker>Koehn, 2005</marker>
<rawString>P. Koehn. 2005. Europarl: A parallel corpus for statistical machine translation. In Machine Translation Summit X, pages 79–86.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Roukos K Papineni</author>
<author>T Ward</author>
<author>W J Zhu</author>
</authors>
<title>Bleu: a method for automatic evaluation of machine translation.</title>
<date>2001</date>
<booktitle>In Proceedings of ACL ’02,</booktitle>
<pages>311--318</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="11642" citStr="Papineni et al., 2001" startWordPosition="1876" endWordPosition="1879">al steps as aligning words, computing the lexical translation, extracting phrases, scoring the phrases and creating the reordering model. When the models have been created, the development set is used to run the minimum error rate training algorithm to optimize their weights. We refer to that step as the optimization step in the rest of the paper. Test set is used to evaluate the quality of models on the data. The translated sentences are embedded in a sgm format, such that the quality of the translation can be evaluated using the most common machine translation scores. Moses provides BLEU (K.Papineni et al., 2001) and NIST (Doddington, 2002), but Meteor (Banerjee and Lavie, 2005; Lavie and Agarwal, 2007) and TER (Snover et al., 2006) can easily be used instead. NIST is used in this paper as evaluation score after we observed its high correlation to the other scores on the corpus (Turchi et al., In preparation). All experiments have been run using the default parameter configuration of Moses. It means that Giza++ has used IBM model 1, 2, 3, and 4 with number of iterations for model 1 equal to 5, model 2 equal to 0, model 3 and 4 equal to 3; SRILM has used n-gram order equal to 3 and the KneserNey smooth</context>
</contexts>
<marker>Papineni, Ward, Zhu, 2001</marker>
<rawString>K.Papineni, S. Roukos, T. Ward, and W. J. Zhu. 2001. Bleu: a method for automatic evaluation of machine translation. In Proceedings of ACL ’02, pages 311– 318, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Lavie</author>
<author>A Agarwal</author>
</authors>
<title>Meteor: An automatic metric for mt evaluation with high levels of correlation with human judgments.</title>
<date>2007</date>
<booktitle>In ACL ’07: Proceedings of 45th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics.</booktitle>
<contexts>
<context position="11734" citStr="Lavie and Agarwal, 2007" startWordPosition="1890" endWordPosition="1893"> the phrases and creating the reordering model. When the models have been created, the development set is used to run the minimum error rate training algorithm to optimize their weights. We refer to that step as the optimization step in the rest of the paper. Test set is used to evaluate the quality of models on the data. The translated sentences are embedded in a sgm format, such that the quality of the translation can be evaluated using the most common machine translation scores. Moses provides BLEU (K.Papineni et al., 2001) and NIST (Doddington, 2002), but Meteor (Banerjee and Lavie, 2005; Lavie and Agarwal, 2007) and TER (Snover et al., 2006) can easily be used instead. NIST is used in this paper as evaluation score after we observed its high correlation to the other scores on the corpus (Turchi et al., In preparation). All experiments have been run using the default parameter configuration of Moses. It means that Giza++ has used IBM model 1, 2, 3, and 4 with number of iterations for model 1 equal to 5, model 2 equal to 0, model 3 and 4 equal to 3; SRILM has used n-gram order equal to 3 and the KneserNey smoothing algorithm; Mert has been run fixing to 100 the number of nbest target sentence for 37 ea</context>
</contexts>
<marker>Lavie, Agarwal, 2007</marker>
<rawString>A. Lavie and A. Agarwal. 2007. Meteor: An automatic metric for mt evaluation with high levels of correlation with human judgments. In ACL ’07: Proceedings of 45th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>Discriminative training and maximum entropy models for statistical machine translation.</title>
<date>2001</date>
<booktitle>In Proceedings of ACL ’02,</booktitle>
<pages>295--302</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="6009" citStr="Och and Ney, 2001" startWordPosition="958" endWordPosition="961">g to massive increases in training data, which would also result in significantly higher training times, and model sizes. 2 Statistical Machine Translation What is the best function class to map Spanish documents into English documents? This is a question of linguistic nature, and has been the subject of a long debate. The de-facto answer came during the 1990’s from the research community on Statistical Machine Translation, who made use of statistical tools based on a noisy channel model originally developed for speech recognition (Brown et al., 1994; Och and Weber, 1998; R.Zens et al., 2002; Och and Ney, 2001; Koehn et al., 2003). A Markovian language model, based on phrases rather than words, coupled with a phrase-to-phrase translation table are at the heart of most modern systems. Translating a text amounts to computing the most likely translation based on the available model parameters. Inferring the parameters of these models from bilingual corpora is a matter of statistics. By model inference we mean the task of extracting all tables, parameters and functions, from the corpus, that will be used to translate. How far can this representation take us towards the target of achieving human-quality</context>
</contexts>
<marker>Och, Ney, 2001</marker>
<rawString>F. J. Och and H. Ney. 2001. Discriminative training and maximum entropy models for statistical machine translation. In Proceedings of ACL ’02, pages 295– 302, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Ney</author>
</authors>
<title>A systematic comparison of various statistical alignment models.</title>
<date>2003</date>
<journal>Computational Linguistics,</journal>
<volume>29</volume>
<issue>1</issue>
<contexts>
<context position="10526" citStr="Och and Ney, 2003" startWordPosition="1696" endWordPosition="1699">lves resulting necessarily from confidence estimation methods. Hence these appear to be the two most pressing questions in this research area. 3.1 Software Moses (Koehn et al., 2007) is a complete translation toolkit for academic purposes. It provides all the components needed to create a machine translation system from one language to another. It contains different modules to preprocess data, train the language models and the translation models. These models can be tuned using minimum error rate training (Och, 2003). Moses uses standard external tools for some of these tasks, such as GIZA++ (Och and Ney, 2003) for word alignments and SRILM (Stolcke, 2002) for language modeling. Notice that Moses is a very sophisticated system, capable of learning translation tables, language models and decoding parameters from data. We analyse the contribution of each component to the overall score. Given a parallel training corpus, Moses preprocesses it removing long sentences, lowercasing and tokenizing sentences. These sentences are used to train the language and translation models. This phase requires several steps as aligning words, computing the lexical translation, extracting phrases, scoring the phrases and</context>
</contexts>
<marker>Och, Ney, 2003</marker>
<rawString>F. J. Och and H. Ney. 2003. A systematic comparison of various statistical alignment models. Computational Linguistics, 29(1):19–51.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
<author>H Weber</author>
</authors>
<title>Improving statistical natural language translation with categories and rules.</title>
<date>1998</date>
<booktitle>In COLING-ACL,</booktitle>
<pages>985--989</pages>
<contexts>
<context position="5969" citStr="Och and Weber, 1998" startWordPosition="950" endWordPosition="953">ion of the optimal models without resorting to massive increases in training data, which would also result in significantly higher training times, and model sizes. 2 Statistical Machine Translation What is the best function class to map Spanish documents into English documents? This is a question of linguistic nature, and has been the subject of a long debate. The de-facto answer came during the 1990’s from the research community on Statistical Machine Translation, who made use of statistical tools based on a noisy channel model originally developed for speech recognition (Brown et al., 1994; Och and Weber, 1998; R.Zens et al., 2002; Och and Ney, 2001; Koehn et al., 2003). A Markovian language model, based on phrases rather than words, coupled with a phrase-to-phrase translation table are at the heart of most modern systems. Translating a text amounts to computing the most likely translation based on the available model parameters. Inferring the parameters of these models from bilingual corpora is a matter of statistics. By model inference we mean the task of extracting all tables, parameters and functions, from the corpus, that will be used to translate. How far can this representation take us towar</context>
</contexts>
<marker>Och, Weber, 1998</marker>
<rawString>F. J. Och and H. Weber. 1998. Improving statistical natural language translation with categories and rules. In COLING-ACL, pages 985–989.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och</author>
</authors>
<title>Minimum error rate training in statistical machine translation.</title>
<date>2003</date>
<booktitle>In Proceedings ofACL ’03,</booktitle>
<pages>160--167</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="10430" citStr="Och, 2003" startWordPosition="1681" endWordPosition="1682">he introduction of linguistic knowledge, or the introduction of query algorithms, themselves resulting necessarily from confidence estimation methods. Hence these appear to be the two most pressing questions in this research area. 3.1 Software Moses (Koehn et al., 2007) is a complete translation toolkit for academic purposes. It provides all the components needed to create a machine translation system from one language to another. It contains different modules to preprocess data, train the language models and the translation models. These models can be tuned using minimum error rate training (Och, 2003). Moses uses standard external tools for some of these tasks, such as GIZA++ (Och and Ney, 2003) for word alignments and SRILM (Stolcke, 2002) for language modeling. Notice that Moses is a very sophisticated system, capable of learning translation tables, language models and decoding parameters from data. We analyse the contribution of each component to the overall score. Given a parallel training corpus, Moses preprocesses it removing long sentences, lowercasing and tokenizing sentences. These sentences are used to train the language and translation models. This phase requires several steps a</context>
</contexts>
<marker>Och, 2003</marker>
<rawString>F. J. Och. 2003. Minimum error rate training in statistical machine translation. In Proceedings ofACL ’03, pages 160–167, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F J Och R Zens</author>
<author>H Ney</author>
</authors>
<title>Phrase-based statistical machine translation.</title>
<date>2002</date>
<booktitle>In KI ’02: Proceedings of the 25th Annual German Conference on AI,</booktitle>
<pages>18--32</pages>
<publisher>Springer-Verlag.</publisher>
<location>London, UK.</location>
<marker>Zens, Ney, 2002</marker>
<rawString>R.Zens, F. J.Och, and H. Ney. 2002. Phrase-based statistical machine translation. In KI ’02: Proceedings of the 25th Annual German Conference on AI, pages 18–32, London, UK. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Snover</author>
<author>B Dorr</author>
<author>R Schwartz</author>
<author>L Micciulla</author>
<author>J Makhoul</author>
</authors>
<title>A study of translation edit rate with targeted human annotation.</title>
<date>2006</date>
<booktitle>In Proceedings of the 7th Conference of the Association for Machine Translation in the Americas,</booktitle>
<pages>223--231</pages>
<contexts>
<context position="11764" citStr="Snover et al., 2006" startWordPosition="1896" endWordPosition="1899">dering model. When the models have been created, the development set is used to run the minimum error rate training algorithm to optimize their weights. We refer to that step as the optimization step in the rest of the paper. Test set is used to evaluate the quality of models on the data. The translated sentences are embedded in a sgm format, such that the quality of the translation can be evaluated using the most common machine translation scores. Moses provides BLEU (K.Papineni et al., 2001) and NIST (Doddington, 2002), but Meteor (Banerjee and Lavie, 2005; Lavie and Agarwal, 2007) and TER (Snover et al., 2006) can easily be used instead. NIST is used in this paper as evaluation score after we observed its high correlation to the other scores on the corpus (Turchi et al., In preparation). All experiments have been run using the default parameter configuration of Moses. It means that Giza++ has used IBM model 1, 2, 3, and 4 with number of iterations for model 1 equal to 5, model 2 equal to 0, model 3 and 4 equal to 3; SRILM has used n-gram order equal to 3 and the KneserNey smoothing algorithm; Mert has been run fixing to 100 the number of nbest target sentence for 37 each develop sentence, and it st</context>
</contexts>
<marker>Snover, Dorr, Schwartz, Micciulla, Makhoul, 2006</marker>
<rawString>M. Snover, B. Dorr, R. Schwartz, L. Micciulla, and J. Makhoul. 2006. A study of translation edit rate with targeted human annotation. In Proceedings of the 7th Conference of the Association for Machine Translation in the Americas, pages 223–231. Association for Machine Translation in the Americas.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Stolcke</author>
</authors>
<title>Srilm – an extensible language modeling toolkit.</title>
<date>2002</date>
<booktitle>In Intl. Conf. on Spoken Language Processing.</booktitle>
<contexts>
<context position="10572" citStr="Stolcke, 2002" startWordPosition="1705" endWordPosition="1706">ion methods. Hence these appear to be the two most pressing questions in this research area. 3.1 Software Moses (Koehn et al., 2007) is a complete translation toolkit for academic purposes. It provides all the components needed to create a machine translation system from one language to another. It contains different modules to preprocess data, train the language models and the translation models. These models can be tuned using minimum error rate training (Och, 2003). Moses uses standard external tools for some of these tasks, such as GIZA++ (Och and Ney, 2003) for word alignments and SRILM (Stolcke, 2002) for language modeling. Notice that Moses is a very sophisticated system, capable of learning translation tables, language models and decoding parameters from data. We analyse the contribution of each component to the overall score. Given a parallel training corpus, Moses preprocesses it removing long sentences, lowercasing and tokenizing sentences. These sentences are used to train the language and translation models. This phase requires several steps as aligning words, computing the lexical translation, extracting phrases, scoring the phrases and creating the reordering model. When the model</context>
</contexts>
<marker>Stolcke, 2002</marker>
<rawString>A. Stolcke. 2002. Srilm – an extensible language modeling toolkit. In Intl. Conf. on Spoken Language Processing.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Turchi</author>
<author>T De Bie</author>
<author>N Cristianini</author>
</authors>
<title>In preparation. Learning analysis of a machine translation system.</title>
<marker>Turchi, De Bie, Cristianini, </marker>
<rawString>M. Turchi, T. De Bie, and N. Cristianini. In preparation. Learning analysis of a machine translation system.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ueffing</author>
<author>H Ney</author>
</authors>
<title>Bayes decision rules and confidence measures for statistical machine translation. In</title>
<date>2004</date>
<booktitle>EsTAL-2004,</booktitle>
<pages>70--81</pages>
<contexts>
<context position="27925" citStr="Ueffing and Ney, 2004" startWordPosition="4636" endWordPosition="4639">s on demand (active learning, where the learning system can request translations of specific sentences, to satisfy its information needs). This is a classical machine learning question, that however comes with the need for further theoretical work, since it breaks the traditional i.i.d. assumptions on the origin of data. Furthermore, it would also require an effective way to do confidence estimation on translations, as traditional active learning approaches are effectively based on the identification (or generation) of instances where there is low confidence in the output (Blatz et al., 2004; Ueffing and Ney, 2004; Ueffing and Ney, 2005b; Ueffing and Ney, 2005a). The second natural direction involves the introduction of significant domain knowledge in the form of linguistic rules, so to dramatically reduce the amount of data needed to essentially reconstruct them by using statistics. These rules could take the form of generation of artificial training data, based on existing training data, or a posteriori expansion of translation and language tables. Any way to enforce linguistic constraints will result in a reduced need for data, and ultimately in more complete models, given the same amount of data (K</context>
</contexts>
<marker>Ueffing, Ney, 2004</marker>
<rawString>N. Ueffing and H. Ney. 2004. Bayes decision rules and confidence measures for statistical machine translation. In EsTAL-2004, pages 70–81.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ueffing</author>
<author>H Ney</author>
</authors>
<title>Application of word-level confidence measures in interactive statistical machine translation.</title>
<date>2005</date>
<booktitle>In EAMT-2005,</booktitle>
<pages>262--270</pages>
<contexts>
<context position="27948" citStr="Ueffing and Ney, 2005" startWordPosition="4640" endWordPosition="4643">rning, where the learning system can request translations of specific sentences, to satisfy its information needs). This is a classical machine learning question, that however comes with the need for further theoretical work, since it breaks the traditional i.i.d. assumptions on the origin of data. Furthermore, it would also require an effective way to do confidence estimation on translations, as traditional active learning approaches are effectively based on the identification (or generation) of instances where there is low confidence in the output (Blatz et al., 2004; Ueffing and Ney, 2004; Ueffing and Ney, 2005b; Ueffing and Ney, 2005a). The second natural direction involves the introduction of significant domain knowledge in the form of linguistic rules, so to dramatically reduce the amount of data needed to essentially reconstruct them by using statistics. These rules could take the form of generation of artificial training data, based on existing training data, or a posteriori expansion of translation and language tables. Any way to enforce linguistic constraints will result in a reduced need for data, and ultimately in more complete models, given the same amount of data (Koehn and Hoang, 2007). </context>
</contexts>
<marker>Ueffing, Ney, 2005</marker>
<rawString>N. Ueffing and H. Ney. 2005a. Application of word-level confidence measures in interactive statistical machine translation. In EAMT-2005, pages 262–270.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Ueffing</author>
<author>H Ney</author>
</authors>
<title>Word-level confidence estimation for machine translation using phrase-based translation models.</title>
<date>2005</date>
<booktitle>In Proceedings ofHLT ’05,</booktitle>
<pages>763--770</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Morristown, NJ, USA.</location>
<contexts>
<context position="27948" citStr="Ueffing and Ney, 2005" startWordPosition="4640" endWordPosition="4643">rning, where the learning system can request translations of specific sentences, to satisfy its information needs). This is a classical machine learning question, that however comes with the need for further theoretical work, since it breaks the traditional i.i.d. assumptions on the origin of data. Furthermore, it would also require an effective way to do confidence estimation on translations, as traditional active learning approaches are effectively based on the identification (or generation) of instances where there is low confidence in the output (Blatz et al., 2004; Ueffing and Ney, 2004; Ueffing and Ney, 2005b; Ueffing and Ney, 2005a). The second natural direction involves the introduction of significant domain knowledge in the form of linguistic rules, so to dramatically reduce the amount of data needed to essentially reconstruct them by using statistics. These rules could take the form of generation of artificial training data, based on existing training data, or a posteriori expansion of translation and language tables. Any way to enforce linguistic constraints will result in a reduced need for data, and ultimately in more complete models, given the same amount of data (Koehn and Hoang, 2007). </context>
</contexts>
<marker>Ueffing, Ney, 2005</marker>
<rawString>N. Ueffing and H. Ney. 2005b. Word-level confidence estimation for machine translation using phrase-based translation models. In Proceedings ofHLT ’05, pages 763–770, Morristown, NJ, USA. Association for Computational Linguistics.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>