<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.580987">
COORDINATION IN UNIFICATION-BASED GRAMMARS
</title>
<author confidence="0.957797">
Richard P. Cooper
</author>
<affiliation confidence="0.9898545">
Department of Psychology
University College London
</affiliation>
<address confidence="0.911492">
London WC1E 6BT, U.K.
</address>
<email confidence="0.995238">
JANET: ucjtrrc@ucl.ac.uk
</email>
<sectionHeader confidence="0.995057" genericHeader="abstract">
ABSTRACT
</sectionHeader>
<bodyText confidence="0.99751928">
Within unification-based grammar formalisms,
providing a treatment of cross-categorial coor-
dination is problematic, and most current solu-
tions either over-generate or under-generate. In
this paper we consider an approach to coordi-
nation involving &amp;quot;composite&amp;quot; feature structures,
which describe coordinate phrases, and present
the augmentation to the logic of feature struc-
tures required to admit such feature structures.
This augmentation involves the addition of two
connectives, composite conjunction and compos-
ite disjunction, which interact to allow cross-
categorial coordination data to be captured ex-
actly. The connectives are initially considered to
function only in the domain of atomic values, be-
fore their domain of application is extended to
cover complex feature structures. Satisfiability
conditions for the connectives in terms of deter-
ministic finite state automata are given, both for
the atomic case and for the more complex case.
Finally, the Prolog implementation of the connec-
tives is discussed, and it is illustrated how, in the
atomic case, and with the use of the freeze/2
predicate of second generation Prologs, the con-
nectives may be implemented.
</bodyText>
<subsectionHeader confidence="0.841917">
The Problem
</subsectionHeader>
<bodyText confidence="0.9984634">
Given a modern unification-based grammar,
such as HPSG, or PATR/FuG-style grammars,
where feature structure descriptions are associ-
ated with the constituents of the grammar, and
unification is used to build the descriptions of
constituents from those of their subconstituents,
providing a treatment of coordination, especially
cross-categorial coordination, is problematic. It
is well known that coordination is not restricted
to like categories (see (1)), so it is too restric-
tive to require that the syntactic category of a
coordinate phrase be just the unification of the
syntactic categories of the conjuncts. Indeed, the
data suggest that the syntactic categories of the
conjuncts need not unify.
</bodyText>
<listItem confidence="0.950103">
(1) a. Tigger became famous and a com-
plete snob.
</listItem>
<bodyText confidence="0.852614714285714">
b. Tigger is a large bouncy kitten and
proud of it.
Furthermore, it is only possible to coordinate
certain phrases within certain syntactic contexts.
Whilst the examples in (1) are grammatical, those
in (2) are not, although the same constituents are
coordinated in each case.
</bodyText>
<listItem confidence="0.54021125">
(2) a. *Famous and a complete snob chased
Fido.
b. *A large bouncy kitten and proud of
it likes Tom.
</listItem>
<bodyText confidence="0.974966438775511">
The difference between the examples in (1) and
(2) is the syntactic context in which the coordi-
nated phrase appears. The relevant generalisa-
tion, made by Sag et al. (1985) with respect to
GPSG, is that constituents may coordinate if and
only if the description of each constituent unifies
with the relevant description in the grammar rule
which licenses the phrase containing the coordi-
nate structure. Example (la) is grammatical be-
cause the phrase structure rule which licenses the
constituent became famous and a complete snob
requires that famous and a complete snob unify
with the partial description of the object sub-
categorised for by became, and the descriptions
of each of the conjuncts, famous and a complete
snob, actually do unify with that partial descrip-
tion: became requires that its object be &amp;quot;either an
NP or an AP&amp;quot;, and each of famous and a com-
plete snob is &amp;quot;either an NP or an AP&amp;quot;. (lb) is
grammatical for analogous reasons, though is is
less fussy about its object, also allowing PPs and
predicative VPs to fill the position. (2a) is un-
grammatical as chased requires that its subject
be a noun phrase. Whilst this is true of a corn-
- 167 -
Generalisation over-generates because in gen-
eralisation conflicting values are ignored. In the
case of became, assuming that we analyse became
as requiring an object whose description unifies
with [CATEGORY NP V AP], generalisation would
license (la), as well as both of the examples in (3).
plete snob, it is not true of famous, so the descrip-
tion of famous does not unify with the descrip-
tion which chase requires of its subject. (2b) is
ungrammatical for similar reasons.
Two Approaches to a Solution
Two approaches to this problem are immediate.
Firstly, we may try to capture the intuition that
each conjunct must unify with the requirements
of the appropriate grammar rule by generalising
all grammar rules to allow for coordinated phrases
in all positions. This general approach follows
that of Shieber (1989), and involves the use of
semi-unification. Note that this does not involve
a grammar rule licensing coordinate constituents
such as a and /3: following this approach a and
)3 can never be a constituent in its own right.
An alternate approach is to preserve the orig-
inal grammar rules, but generalise the notion of
syntactic category to license composite categories
— categories built from other categories — and
introduce a rule licensing coordinate structures
which have such composite syntactic categories.
That is, we introduce a grammar rule such that
if a and /3 are constituents, then a and # is also
a constituent, and the syntactic category of this
constituent is a composite of the syntactic cate-
gories of a and )3.
Within a unification-based approach, this gen-
eralisation of syntactic category requires a gener-
alisation of the logic of feature structures, with
an associated generalisation of unification. This
is the approach which we adopt in this paper.
One of the consequences of this approach is that
for (almost) any constituents a and #, the gram-
mar should also license the string a and # as
a constituent, irrespective of whether there are
any contexts in which this constituent may occur.
Thus our grammar might admit in the garden and
chases Fido as a constituent, though there may
be no contexts which license such a constituent.
Our approach differs from other approaches
to cross-categorial coordination (such as those
employing generalisation, or that of Proudian
&amp; Goddeau (1987)) which have been suggested
in the unification grammar literature in that
it involves a real augmentation of the logic of
feature structures. Other approaches which do
not involve this augmentation tend to ovei-
generate (the approaches employing general
isation) or under-generate (the approach of
Proudian &amp; Goddeau).
(3) a. *Tigger became famous and in the
garden.
b. *Tigger became a complete snob and
in the garden.
This is because the generalisation of the de-
scriptions of the two conjuncts ([CATEGORY AP]
and [CATEGORY PP] in the case of (3a) and [CAT-
EGORY NP] and [CATEGORY PP] in the case of
(3b)) is in each case [CATEGORY 1], which uni-
fies with the [CATEGORY NP V AP] requirement
of became.
It is not clear how the approach of Proudian &amp;
Goddeau could be applied to the became example:
the disjunctive subcategorisation requirements of
became cannot be treated within their approach.
For further details see Cooper (1990).
</bodyText>
<subsectionHeader confidence="0.818088">
Composite Atomic Values
</subsectionHeader>
<bodyText confidence="0.999413576923077">
Following Kasper &amp; Rounds (1990), and ear-
lier work by the same authors (Rounds &amp; Kasper
(1986) and Kasper &amp; Rounds (1986)), we adopt
a logical approach to feature structures via an
equational logic. The domain of well-formed for-
mulae is defined inductively in terms of a set A of
atomic values and a set L of labels or attributes.
These formulae are interpreted as descriptions of
deterministic finite state automata.
In the formulation of Kasper &amp; Rounds, these
automata have atomic values assigned to (some
of) their terminal states. A simplified reading of
the coordination data suggests that these values
need not be atomic, and that there is structure
on this domain of &amp;quot;atomic&amp;quot; values. To model this
structure we introduce an operator &amp;quot;A&amp;quot;, which
we term composite conjunction, such that if a and
)3 are atomic values, then a A # is also an atomic
value. Informally, if a large bouncy kitten is de-
scribed by the pair [CATEGORY NP] and proud of
it is described by the pair [CATEGORY AP], then
any coordination of those constituents, such as
neither a large bouncy kitten nor proud of it will
be described by the pair [CATEGORY NP AAP].
Before discussing satisfiability, we consider
some of the properties of A:
</bodyText>
<listItem confidence="0.955529529411765">
- 168 -
• A is symmetric: a noun phrase coordinated
with an adjectival phrase is of the same cate-
gory as an adjectival phrase coordinated with
a noun phrase. Thus for all atomic values a
and [3, we require
ait0= PiNa
• A is associative: in constructions involv-
ing more than two conjuncts the category of
the coordinate phrase is independent of the
bracketing. Hence for all atomic values a, 13
and 7, we require
(aA[3)A-y = aA([3A7)
• A is idempotent: the conjunction of two (or
more) constituents of category x is still of
category z: Hence for all atomic values a,
we require
</listItem>
<subsectionHeader confidence="0.916146">
otAct = a
</subsectionHeader>
<bodyText confidence="0.987643">
These properties exactly correspond to the prop-
erties required of an operator on finite sets. For
full generality we thus take A to be an operator
on finite subsets of atomic values rather than a
binary operator satisfying the above conditions,
but for simplicity use the usual infix notation for
the binary case.
Given one further requirement, that for any a
A {a} =
(and hence that aAa = A fall the use of an op-
erator on sets directly reflects all of the above
properties:
</bodyText>
<equation confidence="0.981545333333333">
aA/3= A{a,fl} =fiAa
(ctAMAY= A{ad3,7} = aA(PA7)
aAa = Ala}
</equation>
<bodyText confidence="0.9990336">
Given this structure on the domain of atomic
values, we restate the satisfiability require-
ments. We deal in terms of deterministic finite
state automata (DFsAs) specified as six-tuples,
(Q,q0,L,45, A, r), where
</bodyText>
<listItem confidence="0.993467">
• Q is a set of atoms known as states,
• qo is a particular element of Q known as the
start state,
• L is a set of atoms known as labels,
• 6 is a partial function from [Q x L] to Q
known as the transition function,
• A is a set of atoms, and
• w is a function from final states (those states
from which according to 6 there are no tran-
• sitions) to A.
</listItem>
<bodyText confidence="0.9211832">
To incorporate conjunctive composite values
we introduce structure on A, requiring that for
all finite subsets X of A, AX is in A. Sat isfiabil-
ity of formulae involving composite conjunction
is defined as follows:
</bodyText>
<listItem confidence="0.983567">
• AI= A {al, , a„ } iff A= (Q,q0,L,6,A,r)
</listItem>
<bodyText confidence="0.777542">
where b(q0,1) is undefined for each 1 in L and
</bodyText>
<equation confidence="0.988848">
7(4o) = {al • • • an)•1
</equation>
<bodyText confidence="0.8091645">
This is really just the same clause as for all atomic
values:
</bodyText>
<listItem confidence="0.9674765">
• A = a iff A= (Q, q0, L,b, A, r) where 6(q0,1)
is undefined for each 1 in L and r(q0)= a.
</listItem>
<bodyText confidence="0.999976875">
As such nothing has really changed yet, though
note that by an &amp;quot;atomic value&amp;quot; now we mean an
element of the domain A. The structure which
we have introduced on A means that strictly
speaking these values are not atomic. They are,
however, &amp;quot;atomic&amp;quot; in the feature structure sense:
they have no attributes.
The real trick in handling composite conjunc-
tive formulae correctly, however, comes in the
treatment of disjunction. We introduce to the
syntax a further connective V, composite dis-
junction. As the name suggests, this is the ana,
logue of disjunction in the domain of composite
values. Like standard disjunction V exists only
in the syntax, and not in the semantics. For sat-
isfiability we have:
</bodyText>
<listItem confidence="0.9897014">
• A (a V 13) where a, E A if A k a or
A k )3 or A (a Ali).
More generally:
• A k i44, where 40 c A and 4) is finite if
A k A 4&amp;quot; for some subset of 4).
</listItem>
<bodyText confidence="0.972433041666667">
With this connective, disjunctive subcategori-
sation requirements may be replaced with com-
posite disjunctive requirements. The intuition be-
hind this modification stems from the fact that
if a constituent has a disjunctive subcategorisa-
tion requirement, then that requirement can be
met by any of the disjuncts, or the composite
of those disjuncts. To illustrate this reconsider
&apos;For simplicity we ignore connectivity of DEsas. If con-
nectivity is to be included in the definitions, then in this
case Q must be the singleton {q0}.
- 169 -
the example in (la). Originally the subcategori-
sation requirements of became might have been
stated with the disjunctive specification [CATE-
GORY NP V AP]. This could be satisfied by either
an NP or an AP, but not by a conjunctive com-
posite composed of an NP and an AP, i.e., not by
the result of conjoining an NP and an AP. To al-
low this we respecify the requirements on the sub-
categorised for object as [CATEGORY NP V AP].
This requirement may be legitimately met by ei-
ther an NP or an AP or a conjunctive composite
NP 74 AP.
</bodyText>
<subsectionHeader confidence="0.638126">
Composite Feature
Structures
</subsectionHeader>
<bodyText confidence="0.99968455">
This use of an algebra of atomic values allows
composites only to be formed at the atomic level.
That is, whilst we may form a A fl for a, ft atomic,
we may not form a A# where a, /3 are non-atomic
feature structures. However, such composites do
appear to be useful, if not necessary. In par-
ticular, in an 0PsG-like theory, the appropriate
thing to do in the case of coordinate structures
seems to be to form the composite of the HEAD
features of all conjuncts. The above approach
to composite atoms does not immediately gen-
eralise to allow composite feature structures. In
particular, whilst the intuitive behaviour of the
connectives should remain as above, the seman-
tic domain must be revised to allow a satisfactory
rendering of satisfiability.
With regard to syntax we revert back to an
unstructured domain A of atoms but augment
the system of Kasper &amp; Rounds (1990) with two
clauses licensing composite formulae:
</bodyText>
<listItem confidence="0.988602875">
• A 4) is a valid formula if (I) is a finite set, each
element of which is a valid formula;
• v (I) is a valid formula if (I) is a finite set, each
element of which is a valid formula.
The generalisation of satisfiability holds for
composite disjunction:
• A = 1.14) if A = A4)&apos; for some subset of
4).
</listItem>
<bodyText confidence="0.963867076923077">
We must alter the semantic domain, the domain
of deterministic finite state automata, however,
to allow a sensible rendering of satisfaction of
composite conjunctive formulae — we need some-
thing like composite states to replace the compos-
ite atomic values of the preceding section.
In giving a semantics for A we take advantage
of the equivalence of A (a) and a. We begin by
generalising the notion of a deterministic finite
state automaton such that the transition function
maps states to sets of states:
A generalised deterministic finite state automa-
ton (GDFSA) is a tuple (Q, q0, L, 5, A, 7), where
</bodyText>
<listItem confidence="0.952895454545455">
• Q is a set of atoms known as states,
• goEPow(Q) is a distinguished set of states
known as the start state set,
• L is a set of atoms known as labels,
• b is a partial function from [Q x L] to
Pow(Q),
• A is a set of atoms, and
• it- is a partial assignment of atoms to final
states.
Any DFSA A = (Q,q0,L,5,A, 7) has a corre-
sponding GDFSA A&apos; given by (Q, {q0} , L, , A, r)
</listItem>
<bodyText confidence="0.90221425">
where b&apos;(q,1)= {b(q,1)}.
Given a GDFSA A we define satisfiability of
conjunctive, disjunctive and atomic formulae as
usual. There is a slight differences in satisfiabil-
ity of path equations:
• A k 1 : if All is defined and Ai/ k 0,
where if A = (Q, {q}, L, 6, A, n), then All =
(Q , b(q,1), L, b, A, w).
This clause has been altered to enforce the re-
quirement that qo be a singleton, and that b maps
this single element to a set.2
The extensions for V and A are:
</bodyText>
<listItem confidence="0.996094">
• A k V4) if A k Al&apos; for some subset of
4&gt; (as above).
• A k if for each 0 E&apos;1), there exists a
q&apos; E qo such that (Q,{q1},L,b,A,n)
</listItem>
<bodyText confidence="0.99931925">
Note that in the case of (I) a singleton, this last
clause reduces to A k A {0} if A k .
The reason why the satisfiability clauses for
these connectives are so simple resides principally
in the equivalence of A {a) and a. We cannot fol-
low this approach in giving a semantics for stan-
dard set valued attributes because in the case of
sets we want {a} and a to be distinct.
</bodyText>
<footnote confidence="0.844297">
2Again we are ignoring connectivity.
</footnote>
<table confidence="0.565572">
- 170 -
Properties of Composites • an NP such as a complete snob, having de-
scription
</table>
<bodyText confidence="0.761024375">
The properties of composite feature structures
and the interaction of A and V may be briefly
summarised as follows:
• Disjunctive composite feature structures are
a syntactic construction. Like disjunctive
feature structures they exist in the language
but have no direct correlation with objects
in the world being modelled.
</bodyText>
<listItem confidence="0.964025357142857">
• Conjunctive composite feature structures de-
scribe composite objects which do exist in
the world being modelled.
• A disjunctive composite feature structure de-
scribes an object just in case one of the dis-
juncts describes the object, or it describes a
composite object.
• A disjunctive composite feature structure de-
scribes a composite object just in case each
object in the composite is described by one
of the disjuncts.
• A conjunctive composite feature structure
describes an object just in case that object
is a composite object consisting of objects
</listItem>
<bodyText confidence="0.854526">
which are described by each of the descrip-
tions making up the conjunctive composite
feature structure.
The crucial point here is that conjunctive
composite objects exist in the described world
whereas disjunctive composite objects do not.
</bodyText>
<subsectionHeader confidence="0.871811">
An Example
</subsectionHeader>
<bodyText confidence="0.9995104">
To illustrate in detail the operation of composites
we return to the example of (la). In an iesG-like
formalism (see Pollard &amp; Sag (1987)) employing
composites, the object subcategorised for by be-
came would be required to satisfy:
</bodyText>
<sectionHeader confidence="0.992688" genericHeader="categories and subject descriptors">
[SYN ILOC [HEAD
</sectionHeader>
<bodyText confidence="0.6725075">
SUBCAT [mA., Ad21+A., Noun]
)
According to our satisfiability clauses above,
this may be satisfied by:
</bodyText>
<listItem confidence="0.948501">
• an AP such as famous, having description
</listItem>
<bodyText confidence="0.896788">
The subcategorisation requirements may not,
however, by satisfied by, for example, a PP, or any
conjunctive composite containing a PP. Hence the
examples in (3) are not admitted.
</bodyText>
<sectionHeader confidence="0.822792" genericHeader="general terms">
Implementation Issues
</sectionHeader>
<bodyText confidence="0.997222785714285">
The problems of implementing a system involv-
ing composites really stem from their requirement
fc)r a proper implementation of disjunction. Im-
plementation may be approached by adopting a
strict division between the objects of the language
and the objects of the described world. Accord-
ing to this approach, and in Prolog, Prolog terms
are taken to correspond to the objects in the se-
mantic domain, with Prolog clauses being inter-
preted much as in the syntax of an equational
logic, as constraints on those terms. Conjunctive
constraints correspond to unification. The for-
mation of conjunctive composites is also no prob-
lem: such objects exist in the semantic domain, so
structured terms may be constructed whose sub-
terms are the elements of the composite. Thus
if we implement the composite connectives as bi-
nary operators, * for A and + for V, we may
form Prolog terms (A * B) corresponding to con-
junctive composites. Disjunction, and the use of
disjunctive composites, cannot, however, be im-
plemented in the same way. The problem with
disjunction is that we cannot normally be sure
which disjunct is appropriate, and a term of the
form (A + B) will not unify with the term A, as
is required by either form of disjunction. The
freeze/2 predicate of many second generation
Prologs provides some help here. For standard
</bodyText>
<figure confidence="0.584931428571429">
[ a complete snob
PHON [HEADIMAJ Noun
SYNI LOC SU BCAT ( )
• or an AP A NP such as famous and a corn-
plete snob, having description3
[ famous and a complete snob
PHON [ Addit[mss Noun]]
SYN I LOC HEAD [MAJ
SUBCAT ( )
[PHON
SYN I LOC
famous
[HEADIMAJ Adj
SU BCAT )
</figure>
<figureCaption confidence="0.455510833333333">
3We assume that the rule licensing coordinate struc-
tures unifies all corresponding values (such as the values
for each SUBCAT attribute) except for the values of the
HEAD attributes. The value of the HEAD attribute of the
coordinate structure is the composite of the values of the
HEAD attribute of each conjunct.
</figureCaption>
<bodyText confidence="0.86751">
- 171 -
disjunction, we might augment feature structure
unification clauses (using &lt;=&gt; to represent the
unification operator and V to represent standard
disjunction) with special clauses such as:
</bodyText>
<figure confidence="0.964769888888889">
A &lt;=&gt; (Al V A2) :-
freeze(A, ((A &lt;=&gt; Al);
(A &lt;=&gt; 12)))
Similarly for composite disjunction, we might
augment the unification clauses with:
A &lt;=&gt; (Al + A2) :-
freeze(A, ((A &lt;=&gt; Al);
(A &lt;=&gt; A2);
(A &lt;=&gt; (Al * A2))))
</figure>
<bodyText confidence="0.9507169">
The idea is that the freeze/2 predicate de-
lays the evaluation of disjunctive constraints un-
til the relevant structure is sufficiently instanti-
ated. Unfortunately, &amp;quot;sufficiently instantiated&amp;quot;
here means that it is nonvar. Only in the case
of atoms is this normally sufficient. Thus the
above approach is suitable for the implementa-
tion of composites at the level of atoms, but not
suitable in the wider domain of composite feature
structures.
</bodyText>
<subsectionHeader confidence="0.768714">
Concluding Remarks
</subsectionHeader>
<bodyText confidence="0.999890866666666">
In giving a treatment of coordination, and in
particular cross-categorial coordination, within a
unification-based grammar formalism we have in-
troduced composite feature structures which de-
scribe composite objects. A sharp distinction is
drawn between syntax and semantics: in the se-
mantic domain there is only one variety of com-
posite object, but in the syntactic domain there
are two forms of composite description, a con-
junctive composite description and a disjunctive
composite description. Satisfiability conditions
are given for the connectives in terms of a gener-
alised notion of deterministic finite state automa-
ton. Some issues which arise in the Prolog imple-
mentation of the connectives are also discussed.
</bodyText>
<sectionHeader confidence="0.999592" genericHeader="acknowledgments">
ACKNOWLEDGEMENTS
</sectionHeader>
<bodyText confidence="0.913678444444444">
This research was carried out at the Cen-
tre for Cognitive Science, Edinburgh, under
Commonwealth Scholarship and Fellowship Plan
AU0027. I am grateful to Robin Cooper, William
Rounds and Jerry Seligman for discussions con-
cerning this work, as well as to two anonymous
referees for their comments on an earlier version
of this paper. All errors remain, of course, my
own.
</bodyText>
<sectionHeader confidence="0.989983" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.989738103448276">
Cooper, Richard. Classification-Based Phrase
Structure Grammar: an Extended Revised
Version of HPSG. Ph.D. Thesis, University
of Edinburgh. 1990.
Kasper, Robert &amp; William Rounds. A Logical
Semantics for Feature Structures. In Pro-
ceedings of the 241h ACL, 1986, 257-265.
Kasper, Robert &amp; William Rounds. The Logic
of Unification in Grammar. Linguistics and
Philosophy, 13, 1990, 35-58.
Pollard, Carl &amp; Ivan Sag. Information-Based
Syntax and Semantics, Volume I: Funda-
mentals. 1987, CSLI, Stanford.
Proudian, Derek &amp; David Goddeau. Constitu-
ent Coordination in HPSG. CSLI Report
#CSLI-87-97, 1987.
Rounds, William &amp; Robert Kasper. A Complete
Logical Calculus for Record Structures Rep-
resenting Linguistic Information. In Proceed-
ings of the Ist IEEE Symposium on Logic in
Computer Science, 1986, 38-43.
Sag, Ivan, Gerald Gazdar, Thomas Wasow and
Steven Weisler. Coordination and How to
Distinguish Categories. Natural Language
and Linguistic Theory, 3, 1985, 117-171.
Shieber, Stuart. Parsing and Type Inference for
Natural and Computer Languages. Ph.D.
Thesis, Stanford University, 1989.
- 172 -
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000004">
<title confidence="0.999424">COORDINATION IN UNIFICATION-BASED GRAMMARS</title>
<author confidence="0.999998">Richard P Cooper</author>
<affiliation confidence="0.9982005">Department of Psychology University College London</affiliation>
<address confidence="0.865955">London WC1E 6BT, U.K.</address>
<abstract confidence="0.99948180794702">Within unification-based grammar formalisms, providing a treatment of cross-categorial coordination is problematic, and most current solutions either over-generate or under-generate. In this paper we consider an approach to coordination involving &amp;quot;composite&amp;quot; feature structures, which describe coordinate phrases, and present the augmentation to the logic of feature structures required to admit such feature structures. This augmentation involves the addition of two connectives, composite conjunction and composite disjunction, which interact to allow crosscategorial coordination data to be captured exactly. The connectives are initially considered to function only in the domain of atomic values, before their domain of application is extended to cover complex feature structures. Satisfiability conditions for the connectives in terms of deterministic finite state automata are given, both for the atomic case and for the more complex case. Finally, the Prolog implementation of the connectives is discussed, and it is illustrated how, in the case, and with the use of the predicate of second generation Prologs, the connectives may be implemented. The Problem Given a modern unification-based grammar, as where feature structure descriptions are associated with the constituents of the grammar, and unification is used to build the descriptions of constituents from those of their subconstituents, providing a treatment of coordination, especially cross-categorial coordination, is problematic. It is well known that coordination is not restricted to like categories (see (1)), so it is too restrictive to require that the syntactic category of a coordinate phrase be just the unification of the syntactic categories of the conjuncts. Indeed, the data suggest that the syntactic categories of the conjuncts need not unify. (1) a. Tigger became famous and a complete snob. b. Tigger is a large bouncy kitten and proud of it. Furthermore, it is only possible to coordinate certain phrases within certain syntactic contexts. Whilst the examples in (1) are grammatical, those in (2) are not, although the same constituents are coordinated in each case. (2) a. *Famous and a complete snob chased Fido. b. *A large bouncy kitten and proud of it likes Tom. The difference between the examples in (1) and (2) is the syntactic context in which the coordinated phrase appears. The relevant generalisamade by Sag al. with respect to that constituents may coordinate if and only if the description of each constituent unifies with the relevant description in the grammar rule which licenses the phrase containing the coordinate structure. Example (la) is grammatical because the phrase structure rule which licenses the famous and a complete snob that and a complete snob with the partial description of the object subfor by the descriptions each of the conjuncts, a do unify with that partial descripthat its object be &amp;quot;either an or an AP&amp;quot;, and each of a comsnob &amp;quot;either an NP or an AP&amp;quot;. (lb) is for analogous reasons, though less fussy about its object, also allowing PPs and predicative VPs to fill the position. (2a) is unas that its subject a noun phrase. Whilst this is true of corn- - 167 - Generalisation over-generates because in generalisation conflicting values are ignored. In the of that we analyse as requiring an object whose description unifies V AP], generalisation would license (la), as well as both of the examples in (3). snob, is not true of the descripof not unify with the descripwhich of its subject. (2b) is ungrammatical for similar reasons. Two Approaches to a Solution Two approaches to this problem are immediate. Firstly, we may try to capture the intuition that each conjunct must unify with the requirements of the appropriate grammar rule by generalising all grammar rules to allow for coordinated phrases in all positions. This general approach follows that of Shieber (1989), and involves the use of semi-unification. Note that this does not involve a grammar rule licensing coordinate constituents as and /3: this approach a never be a constituent in its own right. An alternate approach is to preserve the original grammar rules, but generalise the notion of syntactic category to license composite categories — categories built from other categories — and introduce a rule licensing coordinate structures which have such composite syntactic categories. That is, we introduce a grammar rule such that a and /3 are constituents, then a # is also a constituent, and the syntactic category of this constituent is a composite of the syntactic cateof a and Within a unification-based approach, this generalisation of syntactic category requires a generalisation of the logic of feature structures, with an associated generalisation of unification. This is the approach which we adopt in this paper. One of the consequences of this approach is that (almost) any constituents a and gramshould also license the string a # as a constituent, irrespective of whether there are any contexts in which this constituent may occur. our grammar might admit the garden and Fido a constituent, though there may be no contexts which license such a constituent. Our approach differs from other approaches to cross-categorial coordination (such as those employing generalisation, or that of Proudian &amp; Goddeau (1987)) which have been suggested in the unification grammar literature in that it involves a real augmentation of the logic of feature structures. Other approaches which do not involve this augmentation tend to oveigenerate (the approaches employing general isation) or under-generate (the approach of Proudian &amp; Goddeau). (3) a. *Tigger became famous and in the garden. b. *Tigger became a complete snob and in the garden. This is because the generalisation of the deof the two conjuncts AP] in the case of (3a) and [CATand PP] the case of is in each case which uniwith the V AP] requirement It is not clear how the approach of Proudian &amp; could be applied to the the disjunctive subcategorisation requirements of be treated within their approach.</abstract>
<note confidence="0.979256">For further details see Cooper (1990).</note>
<title confidence="0.809965">Composite Atomic Values</title>
<author confidence="0.530386">ear-</author>
<abstract confidence="0.985235097058823">lier work by the same authors (Rounds &amp; Kasper (1986) and Kasper &amp; Rounds (1986)), we adopt a logical approach to feature structures via an equational logic. The domain of well-formed foris defined inductively in terms of a set values a L These formulae are interpreted as descriptions of deterministic finite state automata. In the formulation of Kasper &amp; Rounds, these automata have atomic values assigned to (some of) their terminal states. A simplified reading of the coordination data suggests that these values need not be atomic, and that there is structure on this domain of &amp;quot;atomic&amp;quot; values. To model this we an operator we term composite conjunction, such that if a and atomic values, then a is an atomic Informally, if large bouncy kitten is deby the pair and of described by the pair then coordination of those constituents, such a large bouncy kitten nor proud of it described by the pair Before discussing satisfiability, we consider of the properties of - 168 - • A is symmetric: a noun phrase coordinated with an adjectival phrase is of the same category as an adjectival phrase coordinated with a noun phrase. Thus for all atomic values a require ait0= PiNa A associative: in constructions involving more than two conjuncts the category of the coordinate phrase is independent of the Hence for all atomic values a, and 7, we require (aA[3)A-y = aA([3A7) A idempotent: the conjunction of two (or constituents of category is of for all atomic values a, we require a These properties exactly correspond to the properties required of an operator on finite sets. For full generality we thus take A to be an operator on finite subsets of atomic values rather than a binary operator satisfying the above conditions, but for simplicity use the usual infix notation for the binary case. Given one further requirement, that for any a A {a} = (and hence that aAa = A fall the use of an operator on sets directly reflects all of the above properties: aA/3= A{a,fl} =fiAa = aA(PA7) aAa = Ala} Given this structure on the domain of atomic values, we restate the satisfiability requirements. We deal in terms of deterministic finite state automata (DFsAs) specified as six-tuples, r), where Q a set of atoms known as states, • is particular element of as the start state, L a set of atoms known as labels, 6 a partial function from x L] Q known as the transition function, • A is a set of atoms, and • w is a function from final states (those states which according to are no transitions) to To incorporate conjunctive composite values introduce structure on that for finite subsets in isfiability of formulae involving composite conjunction is defined as follows: AI= {al, , a„ } iff (Q,q0,L,6,A,r) undefined for each = {al • • • This is really just the same clause as for all atomic values: A = iff (Q, L,b, A, r) 6(q0,1) undefined for each 1 in As such nothing has really changed yet, though note that by an &amp;quot;atomic value&amp;quot; now we mean an of the domain structure which have introduced on that strictly speaking these values are not atomic. They are, however, &amp;quot;atomic&amp;quot; in the feature structure sense: they have no attributes. The real trick in handling composite conjunctive formulae correctly, however, comes in the treatment of disjunction. We introduce to the syntax a further connective V, composite disjunction. As the name suggests, this is the ana, logue of disjunction in the domain of composite values. Like standard disjunction V exists only in the syntax, and not in the semantics. For satisfiability we have: A V 13) a, if k or k More generally: A i44, 40 c A and 4) is finite if 4&amp;quot; for some subset of 4). With this connective, disjunctive subcategorisation requirements may be replaced with composite disjunctive requirements. The intuition behind this modification stems from the fact that if a constituent has a disjunctive subcategorisation requirement, then that requirement can be met by any of the disjuncts, or the composite of those disjuncts. To illustrate this reconsider simplicity we ignore connectivity of DEsas. If connectivity is to be included in the definitions, then in this be the singleton {q0}. the example in (la). Originally the subcategorirequirements of have been with the disjunctive specification [CATE- V AP]. This could be satisfied by either an NP or an AP, but not by a conjunctive composite composed of an NP and an AP, i.e., not by the result of conjoining an NP and an AP. To allow this we respecify the requirements on the subfor object as V AP]. This requirement may be legitimately met by either an NP or an AP or a conjunctive composite Composite Feature Structures This use of an algebra of atomic values allows composites only to be formed at the atomic level. is, whilst we may form a for a, ft atomic, may not form a a, /3 are non-atomic feature structures. However, such composites do appear to be useful, if not necessary. In particular, in an 0PsG-like theory, the appropriate thing to do in the case of coordinate structures to be to form the composite of the features of all conjuncts. The above approach to composite atoms does not immediately generalise to allow composite feature structures. In particular, whilst the intuitive behaviour of the connectives should remain as above, the semantic domain must be revised to allow a satisfactory rendering of satisfiability. With regard to syntax we revert back to an domain atoms but augment the system of Kasper &amp; Rounds (1990) with two clauses licensing composite formulae: • A 4) is a valid formula if (I) is a finite set, each element of which is a valid formula; • v (I) is a valid formula if (I) is a finite set, each element of which is a valid formula. The generalisation of satisfiability holds for composite disjunction: A = if = for some subset of 4). We must alter the semantic domain, the domain of deterministic finite state automata, however, to allow a sensible rendering of satisfaction of composite conjunctive formulae — we need something like composite states to replace the composite atomic values of the preceding section. giving a semantics for take advantage the equivalence of and a. We begin by generalising the notion of a deterministic finite state automaton such that the transition function maps states to sets of states: deterministic finite state automa- (GDFSA) is tuple L, 5, A, where Q a set of atoms known as states, goEPow(Q) is distinguished set of states known as the start state set, L is set of atoms known as labels, b is partial function from x L] Pow(Q), • A is a set of atoms, and • itis a partial assignment of atoms to final states. = has a correby , L, , A, r) {b(q,1)}. a define satisfiability of conjunctive, disjunctive and atomic formulae as usual. There is a slight differences in satisfiability of path equations: A if defined and if = (Q, {q}, L, 6, A, then = (Q , b(q,1), L, b, A, w). This clause has been altered to enforce the rethat be a singleton, and that single element to a extensions for V and A V4) if Al&apos; for some subset of 4&gt; (as above). A for each 0 E&apos;1), there exists a E such that Note that in the case of (I) a singleton, this last reduces to if . The reason why the satisfiability clauses for these connectives are so simple resides principally the equivalence of a. We cannot follow this approach in giving a semantics for standard set valued attributes because in the case of sets we want {a} and a to be distinct. we are ignoring connectivity. - 170 of Composites • NP such as a snob, description The properties of composite feature structures the interaction of be briefly summarised as follows: • Disjunctive composite feature structures are a syntactic construction. Like disjunctive feature structures they exist in the language but have no direct correlation with objects in the world being modelled. • Conjunctive composite feature structures describe composite objects which do exist in the world being modelled. • A disjunctive composite feature structure describes an object just in case one of the disjuncts describes the object, or it describes a composite object. • A disjunctive composite feature structure describes a composite object just in case each object in the composite is described by one of the disjuncts. • A conjunctive composite feature structure describes an object just in case that object is a composite object consisting of objects which are described by each of the descriptions making up the conjunctive composite feature structure. The crucial point here is that conjunctive composite objects exist in the described world whereas disjunctive composite objects do not. An Example To illustrate in detail the operation of composites we return to the example of (la). In an iesG-like formalism (see Pollard &amp; Sag (1987)) employing the object subcategorised for by bebe required to satisfy: ILOC Ad21+A., Noun] ) According to our satisfiability clauses above, this may be satisfied by: an AP such as description The subcategorisation requirements may not, however, by satisfied by, for example, a PP, or any conjunctive composite containing a PP. Hence the examples in (3) are not admitted. Implementation Issues The problems of implementing a system involving composites really stem from their requirement fc)r a proper implementation of disjunction. Implementation may be approached by adopting a strict division between the objects of the language and the objects of the described world. According to this approach, and in Prolog, Prolog terms are taken to correspond to the objects in the semantic domain, with Prolog clauses being interpreted much as in the syntax of an equational logic, as constraints on those terms. Conjunctive constraints correspond to unification. The formation of conjunctive composites is also no problem: such objects exist in the semantic domain, so structured terms may be constructed whose subterms are the elements of the composite. Thus if we implement the composite connectives as bioperators, * for + for V, we may Prolog terms * B) to conjunctive composites. Disjunction, and the use of disjunctive composites, cannot, however, be implemented in the same way. The problem with disjunction is that we cannot normally be sure which disjunct is appropriate, and a term of the + B) not unify with the term A, as is required by either form of disjunction. The of many second generation Prologs provides some help here. For standard [ a complete snob PHON SYNI LOC SU BCAT ( ) or an AP such as and a cornsnob, [ famous and a [ complete snob Addit[mss Noun]] PHON SYN I LOC HEAD [MAJ SUBCAT ( ) [PHON SYN I LOC famous SU BCAT ) assume that the rule licensing coordinate structures unifies all corresponding values (such as the values each except for the values of the The value of the of the coordinate structure is the composite of the values of the of each conjunct. - 171 disjunction, we might augment feature structure unification clauses (using &lt;=&gt; to represent the unification operator and V to represent standard disjunction) with special clauses such as: A &lt;=&gt; (Al V A2) :freeze(A, ((A &lt;=&gt; Al); (A &lt;=&gt; 12))) Similarly for composite disjunction, we might augment the unification clauses with: A &lt;=&gt; (Al + A2) :freeze(A, ((A &lt;=&gt; Al); (A &lt;=&gt; A2); (A &lt;=&gt; (Al * A2)))) idea is that the delays the evaluation of disjunctive constraints until the relevant structure is sufficiently instantiated. Unfortunately, &amp;quot;sufficiently instantiated&amp;quot; means that it is in the case of atoms is this normally sufficient. Thus the above approach is suitable for the implementation of composites at the level of atoms, but not suitable in the wider domain of composite feature structures. Concluding Remarks In giving a treatment of coordination, and in particular cross-categorial coordination, within a unification-based grammar formalism we have introduced composite feature structures which describe composite objects. A sharp distinction is drawn between syntax and semantics: in the semantic domain there is only one variety of composite object, but in the syntactic domain there are two forms of composite description, a conjunctive composite description and a disjunctive composite description. Satisfiability conditions are given for the connectives in terms of a generalised notion of deterministic finite state automaton. Some issues which arise in the Prolog implementation of the connectives are also discussed. ACKNOWLEDGEMENTS</abstract>
<note confidence="0.936903">This research was carried out at the Centre for Cognitive Science, Edinburgh, under Commonwealth Scholarship and Fellowship Plan AU0027. I am grateful to Robin Cooper, William</note>
<abstract confidence="0.9298962">Rounds and Jerry Seligman for discussions concerning this work, as well as to two anonymous referees for their comments on an earlier version of this paper. All errors remain, of course, my own.</abstract>
<title confidence="0.790279">REFERENCES</title>
<author confidence="0.980314">Phrase</author>
<degree confidence="0.602514125">Extended Revised of HPSG. Thesis, University of Edinburgh. 1990. Kasper, Robert &amp; William Rounds. A Logical for Feature Structures. In Proof the ACL, Kasper, Robert &amp; William Rounds. The Logic Unification in Grammar. and</degree>
<note confidence="0.695781833333333">1990, 35-58. Carl Sag. Syntax and Semantics, Volume I: Funda- CSLI, Stanford. Derek &amp; David Goddeau. Constitu- Coordination in HPSG. Report</note>
<degree confidence="0.7170365">Rounds, William &amp; Robert Kasper. A Complete Logical Calculus for Record Structures Rep- Linguistic Information. In Proceedof the IEEE Symposium on Logic in</degree>
<affiliation confidence="0.618561">Science,</affiliation>
<address confidence="0.562693">Sag, Ivan, Gerald Gazdar, Thomas Wasow and</address>
<note confidence="0.325171">Weisler. and How to Categories. Language Linguistic Theory, 3, 1985,</note>
<author confidence="0.750565">Type Inference for</author>
<affiliation confidence="0.832489">and Computer Languages.</affiliation>
<note confidence="0.567324">Thesis, Stanford University, 1989. - 172 -</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Richard Cooper</author>
</authors>
<title>Classification-Based Phrase Structure Grammar: an Extended Revised Version of HPSG.</title>
<date>1990</date>
<tech>Ph.D. Thesis,</tech>
<institution>University of Edinburgh.</institution>
<contexts>
<context position="6889" citStr="Cooper (1990)" startWordPosition="1110" endWordPosition="1111"> (3) a. *Tigger became famous and in the garden. b. *Tigger became a complete snob and in the garden. This is because the generalisation of the descriptions of the two conjuncts ([CATEGORY AP] and [CATEGORY PP] in the case of (3a) and [CATEGORY NP] and [CATEGORY PP] in the case of (3b)) is in each case [CATEGORY 1], which unifies with the [CATEGORY NP V AP] requirement of became. It is not clear how the approach of Proudian &amp; Goddeau could be applied to the became example: the disjunctive subcategorisation requirements of became cannot be treated within their approach. For further details see Cooper (1990). Composite Atomic Values Following Kasper &amp; Rounds (1990), and earlier work by the same authors (Rounds &amp; Kasper (1986) and Kasper &amp; Rounds (1986)), we adopt a logical approach to feature structures via an equational logic. The domain of well-formed formulae is defined inductively in terms of a set A of atomic values and a set L of labels or attributes. These formulae are interpreted as descriptions of deterministic finite state automata. In the formulation of Kasper &amp; Rounds, these automata have atomic values assigned to (some of) their terminal states. A simplified reading of the coordinati</context>
</contexts>
<marker>Cooper, 1990</marker>
<rawString>Cooper, Richard. Classification-Based Phrase Structure Grammar: an Extended Revised Version of HPSG. Ph.D. Thesis, University of Edinburgh. 1990.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Kasper</author>
<author>William Rounds</author>
</authors>
<title>A Logical Semantics for Feature Structures.</title>
<date>1986</date>
<booktitle>In Proceedings of the 241h ACL,</booktitle>
<pages>257--265</pages>
<contexts>
<context position="7036" citStr="Kasper &amp; Rounds (1986)" startWordPosition="1133" endWordPosition="1136">f the descriptions of the two conjuncts ([CATEGORY AP] and [CATEGORY PP] in the case of (3a) and [CATEGORY NP] and [CATEGORY PP] in the case of (3b)) is in each case [CATEGORY 1], which unifies with the [CATEGORY NP V AP] requirement of became. It is not clear how the approach of Proudian &amp; Goddeau could be applied to the became example: the disjunctive subcategorisation requirements of became cannot be treated within their approach. For further details see Cooper (1990). Composite Atomic Values Following Kasper &amp; Rounds (1990), and earlier work by the same authors (Rounds &amp; Kasper (1986) and Kasper &amp; Rounds (1986)), we adopt a logical approach to feature structures via an equational logic. The domain of well-formed formulae is defined inductively in terms of a set A of atomic values and a set L of labels or attributes. These formulae are interpreted as descriptions of deterministic finite state automata. In the formulation of Kasper &amp; Rounds, these automata have atomic values assigned to (some of) their terminal states. A simplified reading of the coordination data suggests that these values need not be atomic, and that there is structure on this domain of &amp;quot;atomic&amp;quot; values. To model this structure we in</context>
</contexts>
<marker>Kasper, Rounds, 1986</marker>
<rawString>Kasper, Robert &amp; William Rounds. A Logical Semantics for Feature Structures. In Proceedings of the 241h ACL, 1986, 257-265.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Robert Kasper</author>
<author>William Rounds</author>
</authors>
<title>The Logic of Unification</title>
<date>1990</date>
<booktitle>in Grammar. Linguistics and Philosophy,</booktitle>
<volume>13</volume>
<pages>35--58</pages>
<contexts>
<context position="6947" citStr="Kasper &amp; Rounds (1990)" startWordPosition="1116" endWordPosition="1119">b. *Tigger became a complete snob and in the garden. This is because the generalisation of the descriptions of the two conjuncts ([CATEGORY AP] and [CATEGORY PP] in the case of (3a) and [CATEGORY NP] and [CATEGORY PP] in the case of (3b)) is in each case [CATEGORY 1], which unifies with the [CATEGORY NP V AP] requirement of became. It is not clear how the approach of Proudian &amp; Goddeau could be applied to the became example: the disjunctive subcategorisation requirements of became cannot be treated within their approach. For further details see Cooper (1990). Composite Atomic Values Following Kasper &amp; Rounds (1990), and earlier work by the same authors (Rounds &amp; Kasper (1986) and Kasper &amp; Rounds (1986)), we adopt a logical approach to feature structures via an equational logic. The domain of well-formed formulae is defined inductively in terms of a set A of atomic values and a set L of labels or attributes. These formulae are interpreted as descriptions of deterministic finite state automata. In the formulation of Kasper &amp; Rounds, these automata have atomic values assigned to (some of) their terminal states. A simplified reading of the coordination data suggests that these values need not be atomic, and</context>
<context position="13110" citStr="Kasper &amp; Rounds (1990)" startWordPosition="2242" endWordPosition="2245">ear to be useful, if not necessary. In particular, in an 0PsG-like theory, the appropriate thing to do in the case of coordinate structures seems to be to form the composite of the HEAD features of all conjuncts. The above approach to composite atoms does not immediately generalise to allow composite feature structures. In particular, whilst the intuitive behaviour of the connectives should remain as above, the semantic domain must be revised to allow a satisfactory rendering of satisfiability. With regard to syntax we revert back to an unstructured domain A of atoms but augment the system of Kasper &amp; Rounds (1990) with two clauses licensing composite formulae: • A 4) is a valid formula if (I) is a finite set, each element of which is a valid formula; • v (I) is a valid formula if (I) is a finite set, each element of which is a valid formula. The generalisation of satisfiability holds for composite disjunction: • A = 1.14) if A = A4)&apos; for some subset of 4). We must alter the semantic domain, the domain of deterministic finite state automata, however, to allow a sensible rendering of satisfaction of composite conjunctive formulae — we need something like composite states to replace the composite atomic v</context>
</contexts>
<marker>Kasper, Rounds, 1990</marker>
<rawString>Kasper, Robert &amp; William Rounds. The Logic of Unification in Grammar. Linguistics and Philosophy, 13, 1990, 35-58.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carl Pollard</author>
<author>Ivan Sag</author>
</authors>
<title>Information-Based Syntax and Semantics, Volume I: Fundamentals.</title>
<date>1987</date>
<location>CSLI, Stanford.</location>
<contexts>
<context position="16794" citStr="Pollard &amp; Sag (1987)" startWordPosition="2923" endWordPosition="2926"> a composite object just in case each object in the composite is described by one of the disjuncts. • A conjunctive composite feature structure describes an object just in case that object is a composite object consisting of objects which are described by each of the descriptions making up the conjunctive composite feature structure. The crucial point here is that conjunctive composite objects exist in the described world whereas disjunctive composite objects do not. An Example To illustrate in detail the operation of composites we return to the example of (la). In an iesG-like formalism (see Pollard &amp; Sag (1987)) employing composites, the object subcategorised for by became would be required to satisfy: [SYN ILOC [HEAD SUBCAT [mA., Ad21+A., Noun] ) According to our satisfiability clauses above, this may be satisfied by: • an AP such as famous, having description The subcategorisation requirements may not, however, by satisfied by, for example, a PP, or any conjunctive composite containing a PP. Hence the examples in (3) are not admitted. Implementation Issues The problems of implementing a system involving composites really stem from their requirement fc)r a proper implementation of disjunction. Impl</context>
</contexts>
<marker>Pollard, Sag, 1987</marker>
<rawString>Pollard, Carl &amp; Ivan Sag. Information-Based Syntax and Semantics, Volume I: Fundamentals. 1987, CSLI, Stanford.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Derek Proudian</author>
<author>David Goddeau</author>
</authors>
<title>Constituent Coordination in HPSG.</title>
<date>1987</date>
<tech>CSLI Report #CSLI-87-97,</tech>
<contexts>
<context position="5959" citStr="Proudian &amp; Goddeau (1987)" startWordPosition="953" endWordPosition="956">iated generalisation of unification. This is the approach which we adopt in this paper. One of the consequences of this approach is that for (almost) any constituents a and #, the grammar should also license the string a and # as a constituent, irrespective of whether there are any contexts in which this constituent may occur. Thus our grammar might admit in the garden and chases Fido as a constituent, though there may be no contexts which license such a constituent. Our approach differs from other approaches to cross-categorial coordination (such as those employing generalisation, or that of Proudian &amp; Goddeau (1987)) which have been suggested in the unification grammar literature in that it involves a real augmentation of the logic of feature structures. Other approaches which do not involve this augmentation tend to oveigenerate (the approaches employing general isation) or under-generate (the approach of Proudian &amp; Goddeau). (3) a. *Tigger became famous and in the garden. b. *Tigger became a complete snob and in the garden. This is because the generalisation of the descriptions of the two conjuncts ([CATEGORY AP] and [CATEGORY PP] in the case of (3a) and [CATEGORY NP] and [CATEGORY PP] in the case of (</context>
</contexts>
<marker>Proudian, Goddeau, 1987</marker>
<rawString>Proudian, Derek &amp; David Goddeau. Constituent Coordination in HPSG. CSLI Report #CSLI-87-97, 1987.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Rounds</author>
<author>Robert Kasper</author>
</authors>
<title>A Complete Logical Calculus for Record Structures Representing Linguistic Information.</title>
<date>1986</date>
<booktitle>In Proceedings of the Ist IEEE Symposium on Logic in Computer Science,</booktitle>
<pages>38--43</pages>
<contexts>
<context position="7009" citStr="Rounds &amp; Kasper (1986)" startWordPosition="1128" endWordPosition="1131">ecause the generalisation of the descriptions of the two conjuncts ([CATEGORY AP] and [CATEGORY PP] in the case of (3a) and [CATEGORY NP] and [CATEGORY PP] in the case of (3b)) is in each case [CATEGORY 1], which unifies with the [CATEGORY NP V AP] requirement of became. It is not clear how the approach of Proudian &amp; Goddeau could be applied to the became example: the disjunctive subcategorisation requirements of became cannot be treated within their approach. For further details see Cooper (1990). Composite Atomic Values Following Kasper &amp; Rounds (1990), and earlier work by the same authors (Rounds &amp; Kasper (1986) and Kasper &amp; Rounds (1986)), we adopt a logical approach to feature structures via an equational logic. The domain of well-formed formulae is defined inductively in terms of a set A of atomic values and a set L of labels or attributes. These formulae are interpreted as descriptions of deterministic finite state automata. In the formulation of Kasper &amp; Rounds, these automata have atomic values assigned to (some of) their terminal states. A simplified reading of the coordination data suggests that these values need not be atomic, and that there is structure on this domain of &amp;quot;atomic&amp;quot; values. To</context>
</contexts>
<marker>Rounds, Kasper, 1986</marker>
<rawString>Rounds, William &amp; Robert Kasper. A Complete Logical Calculus for Record Structures Representing Linguistic Information. In Proceedings of the Ist IEEE Symposium on Logic in Computer Science, 1986, 38-43.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ivan Sag</author>
<author>Gerald Gazdar</author>
<author>Thomas Wasow</author>
<author>Steven Weisler</author>
</authors>
<title>Coordination and How to Distinguish Categories.</title>
<date>1985</date>
<booktitle>Natural Language and Linguistic Theory,</booktitle>
<volume>3</volume>
<pages>117--171</pages>
<contexts>
<context position="2651" citStr="Sag et al. (1985)" startWordPosition="401" endWordPosition="404">ts need not unify. (1) a. Tigger became famous and a complete snob. b. Tigger is a large bouncy kitten and proud of it. Furthermore, it is only possible to coordinate certain phrases within certain syntactic contexts. Whilst the examples in (1) are grammatical, those in (2) are not, although the same constituents are coordinated in each case. (2) a. *Famous and a complete snob chased Fido. b. *A large bouncy kitten and proud of it likes Tom. The difference between the examples in (1) and (2) is the syntactic context in which the coordinated phrase appears. The relevant generalisation, made by Sag et al. (1985) with respect to GPSG, is that constituents may coordinate if and only if the description of each constituent unifies with the relevant description in the grammar rule which licenses the phrase containing the coordinate structure. Example (la) is grammatical because the phrase structure rule which licenses the constituent became famous and a complete snob requires that famous and a complete snob unify with the partial description of the object subcategorised for by became, and the descriptions of each of the conjuncts, famous and a complete snob, actually do unify with that partial description</context>
</contexts>
<marker>Sag, Gazdar, Wasow, Weisler, 1985</marker>
<rawString>Sag, Ivan, Gerald Gazdar, Thomas Wasow and Steven Weisler. Coordination and How to Distinguish Categories. Natural Language and Linguistic Theory, 3, 1985, 117-171.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stuart Shieber</author>
</authors>
<title>Parsing and Type Inference for Natural and Computer Languages.</title>
<date>1989</date>
<tech>Ph.D. Thesis,</tech>
<institution>Stanford University,</institution>
<contexts>
<context position="4454" citStr="Shieber (1989)" startWordPosition="708" endWordPosition="709">GORY NP V AP], generalisation would license (la), as well as both of the examples in (3). plete snob, it is not true of famous, so the description of famous does not unify with the description which chase requires of its subject. (2b) is ungrammatical for similar reasons. Two Approaches to a Solution Two approaches to this problem are immediate. Firstly, we may try to capture the intuition that each conjunct must unify with the requirements of the appropriate grammar rule by generalising all grammar rules to allow for coordinated phrases in all positions. This general approach follows that of Shieber (1989), and involves the use of semi-unification. Note that this does not involve a grammar rule licensing coordinate constituents such as a and /3: following this approach a and )3 can never be a constituent in its own right. An alternate approach is to preserve the original grammar rules, but generalise the notion of syntactic category to license composite categories — categories built from other categories — and introduce a rule licensing coordinate structures which have such composite syntactic categories. That is, we introduce a grammar rule such that if a and /3 are constituents, then a and # </context>
</contexts>
<marker>Shieber, 1989</marker>
<rawString>Shieber, Stuart. Parsing and Type Inference for Natural and Computer Languages. Ph.D. Thesis, Stanford University, 1989.</rawString>
</citation>
<citation valid="false">
<pages>172</pages>
<marker></marker>
<rawString>- 172 -</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>