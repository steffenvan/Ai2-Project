<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.999162">
Generalized Expectation Criteria for
Bootstrapping Extractors using Record-Text Alignment
</title>
<author confidence="0.987895">
Kedar Bellare
</author>
<affiliation confidence="0.9985685">
Dept. of Computer Science
University of Massachusetts
</affiliation>
<address confidence="0.647404">
Amherst, MA 01003
</address>
<email confidence="0.992392">
kedarb@cs.umass.edu
</email>
<sectionHeader confidence="0.994918" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999944913043478">
Traditionally, machine learning ap-
proaches for information extraction
require human annotated data that can be
costly and time-consuming to produce.
However, in many cases, there already
exists a database (DB) with schema
related to the desired output, and records
related to the expected input text. We
present a conditional random field (CRF)
that aligns tokens of a given DB record
and its realization in text. The CRF model
is trained using only the available DB and
unlabeled text with generalized expecta-
tion criteria. An annotation of the text
induced from inferred alignments is used
to train an information extractor. We eval-
uate our method on a citation extraction
task in which alignments between DBLP
database records and citation texts are
used to train an extractor. Experimental
results demonstrate an error reduction
of 35% over a previous state-of-the-art
method that uses heuristic alignments.
</bodyText>
<sectionHeader confidence="0.99812" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999797928571429">
A substantial portion of information on the Web
consists of unstructured and semi-structured text.
Information extraction (IE) systems segment and
label such text to populate a structured database
that can then be queried and mined efficiently.
In this paper, we mainly deal with information
extraction from text fragments that closely resem-
ble structured records. Examples of such texts
include citation strings in research papers, con-
tact addresses on person homepages and apart-
ment listings in classified ads. Pattern match-
ing and rule-based approaches for IE (Brin, 1998;
Agichtein and Gravano, 2000; Etzioni et al., 2005)
that only use specific patterns, and delimiter and
</bodyText>
<author confidence="0.865008">
Andrew McCallum
</author>
<affiliation confidence="0.9989375">
Dept. of Computer Science
University of Massachusetts
</affiliation>
<address confidence="0.749328">
Amherst, MA 01003
</address>
<email confidence="0.98415">
mccallum@cs.umass.edu
</email>
<bodyText confidence="0.999085195121951">
font-based cues for segmentation are prone to fail-
ure on such data because these cues are gen-
erally not broadly reliable. Statistical machine
learning methods such as hidden Markov models
(HMMs) (Rabiner, 1989; Seymore et al., 1999;
Freitag and McCallum, 1999) and conditional ran-
dom fields (CRFs) (Lafferty et al., 2001; Peng
and McCallum, 2004; Sarawagi and Cohen, 2005)
have become popular approaches to address the
text extraction problem. However, these methods
require labeled training data, such as annotated
text, which is often scarce and expensive to pro-
duce.
In many cases, however, there already exists a
database with schema related to the desired out-
put, and records that are imperfectly rendered in
the available unlabeled text. This database can
serve as a source of significant supervised guid-
ance to machine learning methods. Previous work
on using databases to train information extrac-
tors has taken one of three simpler approaches.
In the first, a separate language model is trained
on each column of the database and these mod-
els are then used to segment and label a given
text sequence (Agichtein and Ganti, 2004; Can-
isius and Sporleder, 2007). However, this ap-
proach does not model context, errors or differ-
ent formats of fields in text, and requires large
number of database entries to learn an accurate
language model. The second approach (Sarawagi
and Cohen, 2004; Michelson and Knoblock, 2005;
Mansuri and Sarawagi, 2006) uses database or
dictionary lookups in combination with similarity
measures to add features to the text sequence. Al-
though these features are very informative, learn-
ing algorithms still require annotated data to make
use of them. The final approach heuristically
labels texts using matching records and learns
extractors from these annotations (Ramakrishnan
and Mukherjee, 2004; Bellare and McCallum,
2007; Michelson and Knoblock, 2008). Heuris-
</bodyText>
<page confidence="0.430637">
131
</page>
<note confidence="0.999118">
Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140,
Singapore, 6-7 August 2009. c�2009 ACL and AFNLP
</note>
<bodyText confidence="0.992849406976745">
tic labeling decisions, however, are made indepen-
dently without regard for the Markov dependen-
cies among labels in text and are sensitive to subtle
changes in text.
Here we propose a method that automatically
induces a labeling of an input text sequence us-
ing a word alignment with a matching database
record. This induced labeling is then used to train
a text extractor. Our approach has several advan-
tages over previous methods. First, we are able
to model field ordering and context around fields
by learning an extractor from annotations of the
text itself. Second, a probabilistic model for word
alignment can exploit dependencies among align-
ments, and is also robust to errors, formatting dif-
ferences, and missing fields in text and the record.
Our word alignment model is a conditional ran-
dom field (CRF) (Lafferty et al., 2001) that gen-
erates alignments between tokens of a text se-
quence and a matching database record. The
structure of the graphical model resembles IBM
Model 1 (Brown et al., 1993) in which each tar-
get (record) word is assigned one or more source
(text) words. The alignment is generated con-
ditioned on both the record and text sequence,
and therefore supports large sets of rich and non-
independent features of the sequence pairs. Our
model is trained without the need for labeled word
alignments by using generalized expectation (GE)
criteria (Mann and McCallum, 2008) that penal-
ize the divergence of specific model expectations
from target expectations. Model parameters are
estimated by minimizing this divergence. To limit
over-fitting we include a L2-regularization term in
the objective. The model expectations in GE cri-
teria are taken with respect to a set of alignment
latent variables that are either specific to each se-
quence pair (local) or summarizing the entire data
set (global). This set is constructed by including
all alignment variables a that satisfy a certain bi-
nary feature (e.g., f(a, x1, y1, x2) = 1, for la-
beled record (x1, y1), and text sequence x2). One
example global criterion is that “an alignment ex-
ists between two orthographically similar1 words
95% of the time.” Here the criterion has a target
expectation of 95% and is defined over alignments
{a = (i, j)  |x1[i] — x2[j], bx1, x2}. Another cri-
terion for extraction can be “the word ‘EMNLP’
is always aligned with the record label booktitle”.
1Two words are orthographically similar if they have low
edit distance.
This criterion has a target of 100% and defined
for {a = (i, j)  |y1[i] = booktitle ∧ x2[j] =
‘EMNLP’, by1, x2}. One-to-one correspondence
between words in the sequence pair can be speci-
fied as collection of local expectation constraints.
Since we directly encode prior knowledge of how
alignments behave in our criteria, we obtain suffi-
ciently accurate alignments with little supervision.
We apply our method to the task of citation
extraction. The input to our training algorithm
is a set of matching DBLP2-record/citation-text
pairs and global GE criteria3 of the following two
types: (1) alignment criteria that consider fea-
tures of mapping between record and text words,
and, (2) extraction criteria that consider features
of the schema label assigned to a text word. In
our experiments, the parallel record-text pairs are
collected manually but this process can be auto-
mated using systems that match text sequences
to records in the DB (Michelson and Knoblock,
2005; Michelson and Knoblock, 2008). Such sys-
tems achieve very high accuracy close to 90% F1
on semi-structured domains similar to ours.4 Our
trained alignment model can be used to directly
align new record-text pairs to create a labeling of
the texts. Empirical results demonstrate a 20.6%
error reduction in token labeling accuracy com-
pared to a strong baseline method that employs a
set of high-precision alignments. Furthermore, we
provide a 63.8% error reduction compared to IBM
Model 4 (Brown et al., 1993). Alignments learned
by our model are used to train a linear-chain CRF
extractor. We obtain an error reduction of 35.1%
over a previous state-of-the-art extraction method
that uses heuristically generated alignments.
</bodyText>
<sectionHeader confidence="0.992997" genericHeader="method">
2 Record-Text Alignment
</sectionHeader>
<bodyText confidence="0.999934625">
Here we provide a brief description of the record-
text alignment task. For the sake of clarity and
space, we describe our approach on a fictional
restaurant address data set. The input to our sys-
tem is a database (DB) consisting of records (pos-
sibly containing errors) and corresponding texts
that are realizations of these DB records. An ex-
ample of a matching record-text pair is shown in
</bodyText>
<footnote confidence="0.667984714285714">
2http://www.informatik.uni-trier.de/∼ley/db/
3Expectation criteria used in our experiments are listed at
http://www.cs.umass.edu/∼kedarb/dbie expts.txt.
4To obtain more accurate record-text pairs, matching
methods can be tuned for high precision at the expense
of recall. Alternatively, humans can cheaply provide
match/mismatch labels on automatically matched pairs.
</footnote>
<page confidence="0.334278">
132
</page>
<figure confidence="0.7391348">
Record
name address city state phone
restaurant katsu n. hillhurst avenue los angeles 665-1891
Text
katzu, 1972 hillhurst ave., los feliz, california
</figure>
<tableCaption confidence="0.9704205">
Table 1: An example of a matching record-text pair for restaurant addresses.
Table 1. This example displays the differences
</tableCaption>
<bodyText confidence="0.976045">
between the record and text: (1) spelling errors:
katsu —* katzu, (2) word insertions (restaurant),
deletions (1972), substitutions (angeles —* feliz),
(3) abbreviations (avenue —* ave.), (4) missing
fields in text (phone=665-1891), and (5) extra
fields in text (state=california). These discrep-
ancies plus the unknown ordering of fields within
text can be addressed through word alignment.
</bodyText>
<equation confidence="0.835375769230769">
restaurant [name] � � � � � � �
katsu [name] ■ � � � � � �
*null* [name] � � � � � � �
n. [address]
hillhurst [address]
avenue [address]
*null* [address]
los [city]
angeles [city]
*null* [city]
*null* [state]
665-1891 [phone]
*null* [phone]
</equation>
<bodyText confidence="0.977783736842105">
Table 2: Example of a word alignment. ■ repre-
sents aligned tokens. Vertical text at the bottom
are the text tokens. Horizontal text on the left are
tokens from the DB record with labels shown in
braces.
An example word alignment between the record
and text is shown in Table 2. Tokenization of
record/text string is based on whitespace charac-
ters. We add a special *null* token at the field
boundaries for each label in the schema to model
word insertions. The record sequence is obtained
by concatenating individual fields according to the
DB schema order. As in statistical word align-
ment, we assume the DB record to be our source
and the text to be our target. The induced labeling
of the text is given by (name, address, address,
address, city, city, state) which can be used to
train an information extractor. In the next section,
we present our approach to address this task.
</bodyText>
<sectionHeader confidence="0.994197" genericHeader="method">
3 Approach
</sectionHeader>
<bodyText confidence="0.999711909090909">
We first define notation that will be used
throughout this section. Let (x1, y1) be a
database record with token sequence x1 =
(x1[1], x1[2], ... , x1[m]) and label sequence y1 =
(y1[1], y1[2], ... , y1[m]) with y1[*] E Y where
Y is the database schema. Let x2 =
(x2[1], x2[2], ... , x2[n]) be the text sequence. Let
a = (a1, a2, ... , an) be an alignment sequence
of same length as the target text sequence. The
alignment ai = j assigns the DB token-label pair
(x1[j], y1[j]) to the text token x2[i].
</bodyText>
<subsectionHeader confidence="0.999246">
3.1 Conditional Random Field for Alignment
</subsectionHeader>
<bodyText confidence="0.9997445">
Our conditional random field (CRF) for alignment
has a graphical model structure that resembles that
of IBM Model 1 (Brown et al., 1993). The CRF
is an undirected graphical model that defines a
probability distribution over alignment sequences
a conditioned on the inputs (x1, y1, x2) as:
</bodyText>
<equation confidence="0.999949333333333">
pO(a|x1, y1, x2) =
exp(En t=1 OT ~f(at,x1,y1,x2,t))
Z®(x1,y1,x2) , (1)
</equation>
<bodyText confidence="0.9984846">
where f(at, x1, y1, x2, t) are feature functions
defined over the alignments and inputs, Θ are
the model parameters and ZO(x1, y1, x2) =
Ea, exp(Ent=1 ΘT�f(a�t, x1, y1, x2, t)) is the par-
tition function.
�f(at, x1, y1, x2, t) is the
The feature vector
concatenation of two types of feature functions:
(1) alignment features falign(at, x1, x2, t) defined
on source-target tokens, and, (2) extraction fea-
tures fextr(at, y1, x2, t) defined on source labels
and target text. To obtain the probability of an
alignment in a particular position t we marginal-
ize out the alignments over the rest of the positions
{1, ... , n}\{t},
</bodyText>
<equation confidence="0.958254117647059">
�pO(at|x1, y1,x2) = pO(a|x1, y1, x2)
{a[1...n]}\{at}
� � � � � � �
� �■ � � � �
� � � ■ � � �
�■ � � � � �
� � � � ■ � �
� � � � �■ �
� � � � � � �
� � � � � � ■
� � � � � � �
� � � � � � �
katzu, 1972 hillhurst ave., los feliz,
california
133
exp(ΘT ~f(at, x1, y1, x2, t))
exp(Ea, ΘT~f(al, x1, y1, x2, t))
</equation>
<bodyText confidence="0.999844">
Furthermore, the marginal over label yt assigned
to the text token x2[t] at time step t during align-
ment is given by
</bodyText>
<equation confidence="0.819415666666667">
pΘ(yt|x2) = pΘ(at|x1, y1, x2),
{atJY1[at]=yt}
(3)
</equation>
<bodyText confidence="0.9993306">
where {at  |y1[at] = yt} is the set of alignments
that result in a labeling yt for token x2[t]. Hence-
forth, we abbreviate pΘ(at|x1, y1, x2) to pΘ(at).
The gradient of pΘ(at) with respect to parameters
Θ is given by
</bodyText>
<equation confidence="0.99880225">
∂pΘ (at) = pΘ (at) [~f(at, x1, y1, x2, t)
∂Θ
� �]
−EpΘ(a) ~f(a, x1, y1, x2, t) ,(4)
</equation>
<bodyText confidence="0.9999082">
where the expectation term in the above equation
sums over all alignments a at position t. We use
the Baum-Welch and Viterbi algorithms to com-
pute marginal probabilities and best alignment se-
quences respectively.
</bodyText>
<subsectionHeader confidence="0.7207745">
3.2 Expectation Criteria and Parameter
Estimation
</subsectionHeader>
<equation confidence="0.976180142857143">
Let D = h(x(1)
1 ,y(1)
1 , x(1)
2 ), ... , (x(K)
1 , y(K)
1 , x(K)
2 )i
</equation>
<bodyText confidence="0.9863334">
be a data set of K record-text pairs gathered man-
ually or automatically through matching (Michel-
son and Knoblock, 2005; Michelson and
Knoblock, 2008). A global expectation criterion
is defined on the set of alignment latent variables
</bodyText>
<equation confidence="0.935162">
Af = {a|f(a, x(i)
1 , y(i)
1 , x(i)
</equation>
<bodyText confidence="0.9324568">
2 ) = 1, ∀i = 1... K}
on the entire data set that satisfy a given bi-
nary feature f(a, x1, y1, x2). Similarly a local
expectation criterion is defined only for a
specific instance (x(i)
</bodyText>
<equation confidence="0.997114833333333">
1 , y(i)
1 , x(i)
2 ) with the set
Af = {a|f(a, x(i)
1 , y(i)
1 , x(i)
</equation>
<bodyText confidence="0.725982538461539">
2 ) = 1}. For a feature
function f, a target expectation p, and, a weight
w, our criterion minimizes the squared divergence
− 2
Δ(f, p, w, Θ) = w EpΘ (Af ) ( |Af |p) , (5)
where EpΘ(Af) = EaEAf pΘ(a) is the sum of
marginal probabilities given by Equation (2) and
|Af |is the size of the variable set. The weight
w influences the importance of satisfying a given
expectation criterion. Equation (5) is an instance
of generalized expectation criteria (Mann and Mc-
Callum, 2008) that penalizes the divergence of
a specific model expectation from a given target
value. The gradient of the divergence with respect
to Θ is given by,
�
where the gradient
is given by Eq. (4).
Given expectation criteria C =
P,
with
a set of binary feature functions F =
... ,
target expectations P =
... ,
an
</bodyText>
<equation confidence="0.764616047619048">
∂pΘ(a)∂Θ
hF,
Wi
hf1,
fli,
hp1,
pli
d weights
W = hw1, ... , wli, we maximize the objective
l
(f
, pi,
−Δ
i
wi,Θ)−||Θ||2,
(7)
where ||Θ||2/2 is the regularization term added to
limit over-fitting. Hence the gradient of the objec-
tive is
∂Δ(fi, pi, wi, Θ) − Θ.
∂Θ
</equation>
<bodyText confidence="0.883851">
Also, non-convexity may lead to
a local instead of a global maximum. Our experi-
ments show that local maxima do not adversely af-
fect performance since our accuracy is within 4%
of a model trained with gold-stan
objective.5
dard labels.
</bodyText>
<subsectionHeader confidence="0.981872">
3.3 Linear-chain CRF for Extraction
</subsectionHeader>
<bodyText confidence="0.9757615">
induced labels for evaluation as an
extractor.
The extraction CRF (ExtrCRF) employs a
fully-connected state machine with a unique state
</bodyText>
<equation confidence="0.9992515">
∂pΘ (a) (6)
i=1
</equation>
<bodyText confidence="0.9868213125">
We maximize our objective (Equation 7) using the
L-BFGS algorithm. It is sometimes necessary to
restart maximization after resetting the Hessian
calculation in L-BFGS due to non-convexity of
our
The alignment CRF (AlignCRF) model described
in Section 3.1 is able to predict labels for a text
sequence given a matching DB record. However,
without corresponding records for texts the model
does not perform well as an extractor because it
has learned to rely on the DB record and alignment
features (Sutton et al., 2006). Hence, we train
a separate linear-chain CRF on the alignment-
L-BFGS optimization procedure checks whether the
approximate Hessian computed from cached gradient vectors
is positive semi-definite. The optimization is re
</bodyText>
<equation confidence="0.943694944444445">
5Our
started if this
check fails.
1
|Af |aEA ∂Θ
�
× �
= 2w Ep® (Af) p
( IAf|
−
∂Θ
∂Δ(f,p, w, Θ)
(2)
O(θ; D, C) = max
Θ
∂O(θ; D, C) l
∂Θ i=1
134
</equation>
<bodyText confidence="0.970969">
per label y ∈ Y in the database schema. The CRF
induces a conditional probability distribution over
label sequences y = hy1, ... , yni and input text
sequences x = hx1, ... , xni as
</bodyText>
<equation confidence="0.9368465">
exp (Ent=1 AT~g(yt−1, yt, x, t))
pΛ(y|x) =
</equation>
<bodyText confidence="0.9290799">
(8)
In comparison to our earlier zero-order AlignCRF
model, our ExtrCRF is a first-order model. All
the feature functions in this model g(yt−1, yt, x, t)
are a conjunction of the label pair (yt−1, yt) and
input observational features. ZΛ(x) in the equa-
tion above is the partition function. Inference in
the model is performed using the Viterbi algo-
rithm.
Given expectation criteria C and data set
</bodyText>
<equation confidence="0.997441">
D = h(x(1)
1 , y(1)
1 , x(1)
2 ), ... , (x(K)
1 , y(K)
1 , x(K)
2 )i,
</equation>
<bodyText confidence="0.998622555555556">
we first estimate the parameters O of AlignCRF
model as described in Section 3.2. Next, for all
text sequences x(i)
2 ,i = 1... K we compute the
marginal probabilities of the labels pΘ(yt|x(i)
2 ), ∀t
using Equation (3). To estimate parameters A we
minimize the KL-divergence between pΘ(y|x) =
Hnt=1 pΘ(yt|x) and pΛ(y|x) for all sequences x,
</bodyText>
<equation confidence="0.9994305">
� pΘ(y|x) log(pΘ(y|x) )
KL(pΘkpΛ) = pΛ(y|x)
y = H(pΘ(y|x))
�− Ep®(yt−1,yt)[AT~g(yt−1, yt, x, t)]
t,yt−1,yt
+log(ZΛ(x)). (9)
</equation>
<bodyText confidence="0.9986785">
The gradient of the above equation is given by
Both the expectations can be computed using the
Baum-Welch algorithm. The parameters A are es-
timated for a given data set D and learned param-
eters O by optimizing the objective
The objective is minimized using L-BFGS. Since
the objective is convex we are guaranteed to obtain
a global minima.
</bodyText>
<sectionHeader confidence="0.999671" genericHeader="method">
4 Experiments
</sectionHeader>
<bodyText confidence="0.998832195652174">
In this section, we present details about the appli-
cation of our method to citation extraction task.
Data set. We collected a set of 260 random
records from the DBLP bibliographic database.
The schema of DBLP has the following labels
{author, editor, address, title, booktitle, pages,
year, journal, volume, number, month, url, ee,
cdrom, school, publisher, note, isbn, chapter, se-
ries}. The complexity of our alignment model de-
pends on the number of schema labels and number
of tokens in the DB record. We reduced the num-
ber of schema labels by: (1) mapping the labels
address, booktitle, journal and school to venue, (2)
mapping month and year to date, and (3) dropping
the fields url, ee, cdrom, note, isbn and chapter,
since they never appeared in citation texts. We
also added the other label O for fields in text that
are not represented in the database. Therefore, our
final DB schema is {author, title, date, venue, vol-
ume, number, pages, editor, publisher, series, O}.
For each DBLP record we searched on the web
for matching citation texts using the first author’s
last name and words in the title. Each citation text
found is manually labeled for evaluation purposes.
An example of a matching DBLP record-citation
text pair is shown in Table 3. Our data set6 con-
tains 522 record-text pairs for 260 DBLP entries.
Features and Constraints. We use a variety of
rich, non-independent features in our models to
optimize system performance. The input features
in our models are of the following two types:
(a) Extraction features in the AlignCRF
model (f(at, y1, x2, t)) and ExtrCRF model
(g(yt−1, yt, x, t)) are conjunctions of assigned la-
bels and observational tests on text sequence at
time step t. The following observational tests
are used: (1) regular expressions to detect to-
kens containing all characters (ALLCHAR), all dig-
its (ALLDIGITS) or both digits and characters (AL-
PHADIGITS), (2) number of characters or digits
in the token (NUMCHAR=3, NUMDIGITS=1), (3)
domain-specific patterns for date and pages, (4)
token identity, suffixes, prefixes and character n-
grams, (5) presence of a token in lexicons such as
“last names,” “publisher names,” “cities,” (6) lex-
icon features within a window of 10, (7) regular
</bodyText>
<footnote confidence="0.954554">
6The data set can be found at
http://www.cs.umass.edu/∼kedarb/dbie cite data.sgml.
</footnote>
<equation confidence="0.9688205">
.
ZΛ(x)
∂KL E= EpA(yt−1,yt|x)[~g(yt−1, yt, x, t)]
∂A t,yt−1,yt
−Ep®(yt−1,yt|x)[~g(yt−1, yt, x, t)]. (10)
O(A; D, O) = min K KL(pΘ(y|x(i)
</equation>
<table confidence="0.87896925">
Λ i=1 2 )kpΛ(y|x(i)
2 )
+kAk2/2.
135
DBLP record Citation text
[Chengzhi Li]author [Edward W. Knightly]author [Coordinated Net- [C. Li]author [and]O [E. Knightly.]author [Coordinated network schedul-
work Scheduling: A Framework for End-to-End Services.]t;tle [69-]pages ing: A framework for end-to-end services.]t;tle [In Proceedings of IEEE
[2000]date [ICNP]venue ICNP]venue [’00,]date [Osaka, Japan,]venue [November 2000.]date
</table>
<tableCaption confidence="0.999872">
Table 3: Example of matching record-text pair found on the web.
</tableCaption>
<bodyText confidence="0.998386307692308">
expression features within a window of 10, and (8)
token identity features within a window of 3.
(b) Alignment features in the AlignCRF model
(f(at, x1, x2, t)) that operate on the aligned
source token x1[at] and target token x2[t]. Again
the observational tests used for alignment are: (1)
exact token match tests whether the source-target
tokens are string identical, (2) approximate token
match produces a binary feature after binning the
Jaro-Winkler edit distance (Cohen et al., 2003) be-
tween the tokens, (3) substring token match tests
whether one token is a substring of the other,
(4) prefix token match returns true if the pre-
fixes match for lengths 11, 2, 3, 41, (5) suffix to-
ken match returns true if the prefixes match for
lengths 11, 2, 3, 41, and (6) exact and approximate
token matches at offsets 1−1, −11 and 1+1, +11
around the alignment.
Thus, a conditional model lets us use these ar-
bitrary helpful features that cannot be exploited
tractably in a generative model.
As is common practice (Haghighi and Klein,
2006; Mann and McCallum, 2008), we simulate
user-specified expectation criteria through statis-
tics on manually labeled citation texts. For ex-
traction criteria, we select for each label, the top
N extraction features ordered by mutual informa-
tion (MI) with that label. Also, we aggregate the
alignment features of record tokens whose align-
ment with a target text token results in a correct
label assignment. The top N alignment features
that have maximum MI with this correct label-
ing are selected as alignment criteria. We bin tar-
get expectations of these criteria into 11 bins as
[0.05, 0.1, 0.2, 0.3, ... , 0.9, 0.95].7 In our exper-
iments, we set N = 10 and use a fixed weight
w = 10.0 for all expectation criteria (no tuning
of parameters was performed). Table 4 shows a
sample of GE criteria used in our experiments.8
</bodyText>
<footnote confidence="0.43051575">
7Mann and McCallum (2008) note that GE criteria are ro-
bust to deviation of specified targets from actual expectations.
8A complete list of expectation criteria is available at
http://www.cs.umass.edu/∼kedarb/dbie expts.txt.
</footnote>
<table confidence="0.999759769230769">
Label Feature Prior
alignment PREFIX MATCH4 0.95
author LEXICON LASTNAME 0.6
title WINDOW WORD=Maintenance 0.95
venue WINDOW WORD=Conference 0.95
date YEAR PATTERN 0.95
volume NUMDIGITS=2 0.6
number NUMDIGITS=1 0.6
pages PAGES PATTERN 0.95
editor WORD PREFIX[2]=ed 0.95
publisher WORD=Press 0.95
series WORD=Notes 0.95
O WORD=and 0.7
</table>
<tableCaption confidence="0.944218">
Table 4: Sample of expectation criteria used by
our model.
</tableCaption>
<bodyText confidence="0.999881933333333">
Experimental Setup. Our experiments use a 3:1
split of the data for training and testing. We re-
peat the experiment 20 times with different ran-
dom splits of the data. We train the AlignCRF
model using the training data and the automati-
cally created expectation criteria (Section 3.2). We
evaluate our alignment model indirectly in terms
of token labeling accuracy (i.e., percentage of cor-
rectly labeled tokens in test citation data) since we
do not have annotated alignments. The alignment
model is then used to train a ExtrCRF model as
described in Section 3.3. Again, we use token la-
beling accuracy for evaluation. We also measure
F1 performance as the harmonic mean of precision
and recall for each label.
</bodyText>
<subsectionHeader confidence="0.997432">
4.1 Alternate approaches
</subsectionHeader>
<bodyText confidence="0.999965545454546">
We compare our method against alternate ap-
proaches that either learn alignment or extraction
models from training data.
Alignment approaches. We use GIZA++ (Och
and Ney, 2003) to train generative directed align-
ment models: HMM and IBM Model4 (Brown et
al., 1993) from training record-text pairs. These
models are currently being used in state-of-the-art
machine translation systems. Alignments between
matching DB records and text sequences are then
used for labeling at test time.
</bodyText>
<page confidence="0.854904">
136
</page>
<bodyText confidence="0.99998825">
Extraction approaches. The first alternative
(DB-CRF) trains a linear-chain CRF for extrac-
tion on fields of the database entries only. Each
field of the record is treated as a separate labeled
text sequence. Given an unlabeled text sequence,
it is segmented and labeled using the Viterbi algo-
rithm. This method is an enhanced representative
for (Agichtein and Ganti, 2004) in which a lan-
guage model is trained for each column of the DB.
Another alternative technique constructs par-
tially annotated text data using the matching
records and a labeling function. The labeling func-
tion employs high-precision alignment rules to as-
sign labels to text tokens using labeled record to-
kens. We use exact and approximate token match-
ing rules to create a partially labeled sequence,
skipping tokens that cannot be unambiguously la-
beled. In our experiments, we achieve a pre-
cision of 97% and a recall of 70% using these
rules. Given a partially annotated citation text,
we train a linear-chain CRF by maximizing the
marginal likelihood of the observed labels. This
marginal CRF training method (Bellare and Mc-
Callum, 2007) (M-CRF) was the previous state-
of-the-art on this data set. Additionally, if a match-
ing record is available for a test citation text,
we can partially label tokens and use constrained
Viterbi decoding with labeled positions fixed at
their observed values (M+R-CRF approach).
Our third approach is similar to (Mann and Mc-
Callum, 2008). We create extraction expectation
criteria from labeled text sequences in the training
data and uses these criteria to learn a linear-chain
CRF for extraction (MM08). The performance
achieved by this approach is an upper bound on
methods that: (1) use labeled training records to
create extraction criteria, and, (2) only use extrac-
tion criteria without any alignment criteria.
Finally, we train a supervised linear-chain CRF
(GS-CRF) using the labeled text sequences from
the training set. This represents an upper bound on
the performance that can be achieved on our task.
All the extraction methods have access to the same
features as the ExtrCRF model.
</bodyText>
<subsectionHeader confidence="0.697435">
4.2 Results
</subsectionHeader>
<bodyText confidence="0.999437">
Table 5 shows the results of various alignment
algorithms applied to the record-text data set.
Alignment methods use the matching record to
perform labeling of a test citation text. The Align-
CRF model outperforms the best generative align-
</bodyText>
<table confidence="0.999616692307692">
HMM Model4 AlignCRF
accuracy 78.5% 79.8% 92.7%
author 92.7 94.9 99.0
title 93.3 95.1 97.3
date 69.5 66.3 81.9
venue 73.3 73.1 91.2
volume 50.0 49.2 78.5
number 53.5 66.3 68.0
pages 38.2 44.1 88.2
editor 22.8 21.5 78.1
publisher 29.7 31.0 72.6
series 77.4 77.3 74.6
O 49.6 58.8 85.7
</table>
<tableCaption confidence="0.984093">
Table 5: Token-labeling accuracy and per-label F1
</tableCaption>
<bodyText confidence="0.997456903225806">
for different alignment methods. These methods
all use matching DB records at test time. Bold-
faced numbers indicate the best performing model.
HMM, Model4: generative alignment models
from GIZA++, AlignCRF: alignment model from
this paper.
ment model Model4 (IBM Model 4) with an er-
ror reduction of 63.8%. Our conjecture is that
Model4 is getting stuck in sub-optimal local max-
ima during EM training since our training set only
contains hundreds of parallel record-text pairs.
This problem may be alleviated by training on a
large parallel corpus. Additionally, our alignment
model is superior to Model4 since it leverages rich
non-independent features of input sequence pairs.
Table 6 shows the performance of various ex-
traction methods. Except M+R-CRF, all extrac-
tion approaches, do not use any record information
at test time. In comparison to the previous state-
of-the-art M-CRF, the ExtrCRF method provides
an error reduction of 35.1%. ExtrCRF also pro-
duces an error reduction of 21.7% compared to
M+R-CRF without the use of matching records.
These reductions are significant at level p = 0.005
using the two-tailed t-test. Training only on DB
records is not helpful for extraction as we do not
learn the transition structure9 and additional con-
text information10 in text. This explains the low
accuracy of the DB-CRF method. Furthermore,
the MM08 approach (Mann and McCallum, 2008)
achieves low accuracy since it does not use any
</bodyText>
<footnote confidence="0.3909998">
9In general, the editor field follows the title field while the
author field precedes it.
10The token “Vol.” generally precedes the volume field in
text. Similarly, tokens “pp” and “pages” occur before the
pages field.
</footnote>
<table confidence="0.983351642857143">
137
DB-CRF M-CRF M+R-CRF† MM08 ExtrCRF GS-CRF
accuracy 70.4% 88.9% 90.8% 73.5% 92.8% 96.5%
author 72.4 93.7 94.1 85.4 98.5 99.0
title 79.4 96.7 98.4 83.1 94.6 98.1
date 60.1 74.5 76.2 57.8 81.7 93.5
venue 67.3 89.4 91.5 73.2 89.8 95.9
volume 20.3 69.4 74.2 27.7 78.9 90.5
number 30.1 72.8 80.8 47.8 75.1 91.4
pages 41.4 80.9 84.5 49.6 92.1 94.1
editor 7.1 71.1 79.3 75.3 73.3 93.7
publisher 62.1 67.5 77.2 40.2 58.5 82.2
series 65.2 74.9 76.3 65.9 73.8 85.8
O 54.1 7.0 8.3 57.7 91.9 94.5
</table>
<tableCaption confidence="0.682767">
Table 6: Token-labeling accuracy and per-label F1 for different extraction methods. Except M+R-CRF†,
all other approaches do not use any records at test time. Bold-faced numbers indicate the best performing
model. DB-CRF: CRF trained on DB fields. M+R-CRF, M-CRF: CRFs trained from heuristic align-
ments. ExtrCRF: Extraction model presented in this paper. GS-CRF: CRF trained on human annotated
citation texts.
</tableCaption>
<bodyText confidence="0.997898260869565">
alignment criteria during training. Hence, align-
ment information is crucial for obtaining high ac-
curacy.
Note that we do not observe a decrease in per-
formance of ExtrCRF over AlignCRF although
we are not using the test records during decoding.
This is because: (1) a first-order model in Extr-
CRF improves performance compared to a zero-
order model in AlignCRF and (2) the use of noisy
DB records in the test set for alignment often in-
creases extraction error.
Both our models have a high F1 value for the
other label O because we provide our algorithm
with constraints for the label O. In contrast, since
there is no realization of the O field in the DB
records, both M-CRF and M+R-CRF methods
fail to label such tokens correctly. Our alignment
model trained using expectation criteria achieves
a performance of 92.7% close to gold-standard
training (GS-CRF) (96.5%). Furthermore, Ex-
trCRF obtains an accuracy of 92.8% similar to
AlignCRF without access to DB records due to
better modeling of transition structure and context.
</bodyText>
<sectionHeader confidence="0.999963" genericHeader="evaluation">
5 Related Work
</sectionHeader>
<bodyText confidence="0.999978351351351">
Recent research in information extraction (IE) has
focused on reducing the labeling effort needed
to train supervised IE systems. For instance,
Grenager et al. (2005) perform unsupervised
HMM learning for field segmentation, and bias
the model to prefer self-transitions and transi-
tions on boundary tokens. Unfortunately, such
unsupervised IE approaches do not attain perfor-
mance close to state-of-the-art supervised meth-
ods. Semi-supervised approaches that learn a
model with only a few constraints specifying
prior knowledge have generated much interest.
Haghighi and Klein (2006) assign each label in
the model certain prototypical features and train a
Markov random field for sequence tagging from
these labeled features. In contrast, our method
uses GE criteria (Mann and McCallum, 2008) –
allowing soft-labeling of features with target ex-
pectation values – to train conditional models with
complex and non-independent input features. Ad-
ditionally, in comparison to previous methods, an
information extractor trained from our record-text
alignments achieves accuracy of 93% making it
useful for real-world applications. Chang et al.
(2007) use beam search for decoding unlabeled
text with soft and hard constraints, and train a
model with top-K decoded label sequences. How-
ever, this model requires large number of labeled
examples (e.g., 300 annotated citations) to boot-
strap itself. Active learning is another popular ap-
proach for reducing annotation effort. Settles and
Craven (2008) provide a comparison of various ac-
tive learning strategies for sequence labeling tasks.
We have shown, however, that in domains where a
database can provide significant supervision, one
can bootstrap accurate extractors with very little
human effort.
</bodyText>
<page confidence="0.786452">
138
</page>
<bodyText confidence="0.99996752238806">
Another area of research, related to the task
described in our paper, is learning extractors
from database records. These records are also
known as field books and reference sets in liter-
ature (Canisius and Sporleder, 2007; Michelson
and Knoblock, 2008). Both Agichtein and Ganti
(2004) and Canisius and Sporleder (2007) train a
language model for each database column. The
language modeling approach is sensitive to word
re-orderings in text and other variability present
in real-world text (e.g., abbreviation). We allow
for word and field re-orderings through alignments
and model complex transformations through fea-
ture functions. Michelson and Knoblock (2008)
extract information from unstructured texts using a
rule-based approach to align segments of text with
fields in a DB record. Our probabilistic alignment
approach is more robust and uses rich features of
the alignment to obtain high performance.
Recently, Snyder and Barzilay (2007) and Liang
et al. (2009) have explored record-text matching in
domains with unstructured texts. Unlike a semi-
structured text sequence obtained by noisily con-
catenating fields from a single record, an unstruc-
tured sequence may contain fields from multiple
records embedded in large amounts of extraneous
text. Hence, the problems of record-text matching
and word alignment are significantly harder in un-
structured domains. Snyder and Barzilay (2007)
achieve a state-of-the-art performance of 80% F1
on matching multiple NFL database records to
sentences in the news summary of a football game.
Their algorithm is trained using supervised ma-
chine learning and learns alignments at the level of
sentences and DB records. In contrast, this paper
presents a semi-supervised learning algorithm for
learning token-level alignments between records
and texts. Liang et al. (2009) describe a model that
simultaneously performs record-text matching and
word alignment in unstructured domains. Their
model is trained in an unsupervised fashion using
EM. It may be possible to further improve their
model performance by incorporating prior knowl-
edge in the form of expectation criteria.
Traditionally, generative word alignment mod-
els have been trained on massive parallel cor-
pora (Brown et al., 1993). Recently, discrim-
inative alignment methods trained using anno-
tated alignments on small parallel corpora have
achieved superior performance. Taskar et al.
(2005) train a discriminative alignment model
from annotated alignments using a large-margin
method. Labeled alignments are also used by
Blunsom and Cohn (2006) to train a CRF word
alignment model. Our method is trained using a
small number of easily specified expectation cri-
teria thus avoiding tedious and expensive human
labeling of alignments. An alternate method of
learning alignment models is proposed by McCal-
lum et al. (2005) in which the training set consists
of sequence pairs classified as match or mismatch.
Alignments are learned to identify the class of a
given sequence pair. However, this method relies
on carefully selected negative examples to pro-
duce high-accuracy alignments. Our method pro-
duces good alignments as we directly encode prior
knowledge about alignments.
</bodyText>
<sectionHeader confidence="0.995631" genericHeader="conclusions">
6 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.999952333333333">
Information extraction is an important first step in
data mining applications. Earlier approaches for
learning reliable extractors have relied on manu-
ally annotated text corpora. This paper presents a
novel approach for training extractors using align-
ments between texts and existing database records.
Our approach achieves performance close to su-
pervised training with very little supervision.
In the future, we plan to surpass supervised ac-
curacy by applying our method to millions of par-
allel record-text pairs collected automatically us-
ing matching. We also want to explore the addi-
tion of Markov dependencies into our alignment
model and other constraints such as monotonicity
and one-to-one correspondence.
</bodyText>
<sectionHeader confidence="0.998644" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999947">
This work was supported in part by the Center
for Intelligent Information Retrieval and in part by
The Central Intelligence Agency, the National Se-
curity Agency and National Science Foundation
under NSF grant #IIS-0326249. Any opinions,
findings and conclusions or recommendations ex-
pressed in this material are the authors’ and do not
necessarily reflect those of the sponsor.
</bodyText>
<sectionHeader confidence="0.998376" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.9945985">
Eugene Agichtein and Venkatesh Ganti. 2004. Mining
reference tables for automatic text segmentation. In
KDD.
Eugene Agichtein and Luis Gravano. 2000. Snow-
ball: Extracting relations from large plain-text col-
lections. In ICDL.
</reference>
<page confidence="0.651524">
139
</page>
<reference confidence="0.999732344086021">
Kedar Bellare and Andrew McCallum. 2007. Learn-
ing extractors from unlabeled text using relevant
databases. In IIWeb workshop at AAAI 2007.
Phil Blunsom and Trevor Cohn. 2006. Discriminative
word alignment with conditional random fields. In
ACL.
Sergey Brin. 1998. Extracting patterns and relations
from the world wide web. In EDBT Workshop,
pages 172–183.
Peter Brown, Vincent J. Della Pietra, Stephen A. Della
Pietra, and Robert Mercer. 1993. The mathematics
of statistical machine translation: parameter estima-
tion. Computational Linguistics, 19:263–311.
Sander Canisius and Caroline Sporleder. 2007. Boot-
strapping information extraction from field books.
In EMNLP-CoNLL.
M. Chang, L. Ratinov, and D. Roth. 2007. Guiding
semi-supervision with constraint-driven learning. In
ACL, pages 280–287.
William Cohen, Pradeep Ravikumar, and Stephen Fien-
berg. 2003. A comparison of string distance metrics
for name-matching tasks. In IJCAI.
O. Etzioni, M. Cafarella, D. Downey, A.-M. Popescu,
T. Shaked, S. Soderland, D. S. Weld, and A. Yates.
2005. Unsupervised named-entity extraction from
the Web: An experimental study. Artificial Intelli-
gence, 165.
D. Freitag and A. McCallum. 1999. Information ex-
traction with HMM and shrinkage. In AAAI.
T. Grenager, D. Klein, and C. D. Manning. 2005. Un-
supervised learning of field segmentation models for
information extraction. In ACL.
Aria Haghighi and Dan Klein. 2006. Prototype-driven
learning for sequence models. In HLT-NAACL.
John Lafferty, Andrew McCallum, and Fernando C N
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In ICML, page 282.
P. Liang, M. I. Jordan, and D. Klein. 2009. Learning
semantic correspondences with less supervision. In
Association for Computational Linguistics (ACL).
Gideon S. Mann and Andrew McCallum. 2008.
Generalized expectation criteria for semi-supervised
learning of conditional random fields. In Proceed-
ings of ACL’08, pages 870–878.
I. R. Mansuri and S. Sarawagi. 2006. Integrating un-
structured data into relational databases. In ICDE.
Andrew McCallum, Kedar Bellare, and Fernando
Pereira. 2005. A conditional random field for
discriminatively-trained finite-state string edit dis-
tance. In UAI.
Matthew Michelson and Craig A. Knoblock. 2005. Se-
mantic annotation of unstructured and ungrammati-
cal text. In IJCAI, pages 1091–1098.
Matthew Michelson and Craig A. Knoblock. 2008.
Creating relational data from unstructured and un-
grammatical data sources. JAIR, 31:543–590.
Franz Josef Och and Hermann Ney. 2003. A sys-
tematic comparison of various statistical alignment
models. Computational Linguistics, 29.
Fuchun Peng and A. McCallum. 2004. Accurate infor-
mation extraction from research papers using condi-
tional random fields. In HLT-NAACL.
Lawrence R. Rabiner. 1989. A tutorial on hidden
markov models and selected applications in speech
processing. IEEE, 17:257–286.
Sridhar Ramakrishnan and Sarit Mukherjee. 2004.
Taming the unstructured: Creating structured con-
tent from partially labeled schematic text sequences.
In CoopIS/DOA/ODBASE, volume 2, page 909.
Sunita Sarawagi and William W. Cohen. 2004. Ex-
ploiting dictionaries in named entity extraction:
combining semi-markov extraction processes and
data integration methods. In KDD, page 89.
Sunita Sarawagi and William W. Cohen. 2005. Semi-
Markov conditional random fields for information
extraction. In NIPS.
Burr Settles and Mark Craven. 2008. An analysis
of active learning strategies for sequence labeling
tasks. In EMNLP, pages 1070–1079.
K. Seymore, A. McCallum, and R. Rosenfeld. 1999.
Learning hidden markov model structure for infor-
mation extraction. In Proceedings of the AAAI
Workshop on ML for IE.
Benjamin Snyder and Regina Barzilay. 2007.
Database-text alignment via structured multi-label
classification. In IJCAI.
Charles Sutton, Michael Sindelar, and Andrew McCal-
lum. 2006. Reducing weight undertraining in struc-
tured discriminative learning. In HLT-NAACL.
Ben Taskar, Simon Lacoste-Julien, and Dan Klein.
2005. A discriminative matching approach to word
alignment. In HLT-EMNLP, pages 73–80.
</reference>
<page confidence="0.897793">
140
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.918822">
<title confidence="0.9969975">Generalized Expectation Criteria Bootstrapping Extractors using Record-Text Alignment</title>
<author confidence="0.951956">Kedar Bellare</author>
<affiliation confidence="0.999758">Dept. of Computer University of</affiliation>
<address confidence="0.976924">Amherst, MA</address>
<email confidence="0.999582">kedarb@cs.umass.edu</email>
<abstract confidence="0.999702375">Traditionally, machine learning approaches for information extraction require human annotated data that can be costly and time-consuming to produce. However, in many cases, there already exists a database (DB) with schema related to the desired output, and records related to the expected input text. We present a conditional random field (CRF) that aligns tokens of a given DB record and its realization in text. The CRF model is trained using only the available DB and unlabeled text with generalized expectation criteria. An annotation of the text induced from inferred alignments is used to train an information extractor. We evaluate our method on a citation extraction task in which alignments between DBLP database records and citation texts are used to train an extractor. Experimental results demonstrate an error reduction of 35% over a previous state-of-the-art method that uses heuristic alignments.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Eugene Agichtein</author>
<author>Venkatesh Ganti</author>
</authors>
<title>Mining reference tables for automatic text segmentation.</title>
<date>2004</date>
<booktitle>In KDD.</booktitle>
<contexts>
<context position="3054" citStr="Agichtein and Ganti, 2004" startWordPosition="463" endWordPosition="466">otated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007). However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using mat</context>
<context position="24689" citStr="Agichtein and Ganti, 2004" startWordPosition="4125" endWordPosition="4128">BM Model4 (Brown et al., 1993) from training record-text pairs. These models are currently being used in state-of-the-art machine translation systems. Alignments between matching DB records and text sequences are then used for labeling at test time. 136 Extraction approaches. The first alternative (DB-CRF) trains a linear-chain CRF for extraction on fields of the database entries only. Each field of the record is treated as a separate labeled text sequence. Given an unlabeled text sequence, it is segmented and labeled using the Viterbi algorithm. This method is an enhanced representative for (Agichtein and Ganti, 2004) in which a language model is trained for each column of the DB. Another alternative technique constructs partially annotated text data using the matching records and a labeling function. The labeling function employs high-precision alignment rules to assign labels to text tokens using labeled record tokens. We use exact and approximate token matching rules to create a partially labeled sequence, skipping tokens that cannot be unambiguously labeled. In our experiments, we achieve a precision of 97% and a recall of 70% using these rules. Given a partially annotated citation text, we train a lin</context>
<context position="32626" citStr="Agichtein and Ganti (2004)" startWordPosition="5396" endWordPosition="5399">s another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. 138 Another area of research, related to the task described in our paper, is learning extractors from database records. These records are also known as field books and reference sets in literature (Canisius and Sporleder, 2007; Michelson and Knoblock, 2008). Both Agichtein and Ganti (2004) and Canisius and Sporleder (2007) train a language model for each database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment approach is more robust and uses rich features of the alignment to </context>
</contexts>
<marker>Agichtein, Ganti, 2004</marker>
<rawString>Eugene Agichtein and Venkatesh Ganti. 2004. Mining reference tables for automatic text segmentation. In KDD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eugene Agichtein</author>
<author>Luis Gravano</author>
</authors>
<title>Snowball: Extracting relations from large plain-text collections.</title>
<date>2000</date>
<booktitle>In ICDL.</booktitle>
<contexts>
<context position="1735" citStr="Agichtein and Gravano, 2000" startWordPosition="254" endWordPosition="257">gnments. 1 Introduction A substantial portion of information on the Web consists of unstructured and semi-structured text. Information extraction (IE) systems segment and label such text to populate a structured database that can then be queried and mined efficiently. In this paper, we mainly deal with information extraction from text fragments that closely resemble structured records. Examples of such texts include citation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address </context>
</contexts>
<marker>Agichtein, Gravano, 2000</marker>
<rawString>Eugene Agichtein and Luis Gravano. 2000. Snowball: Extracting relations from large plain-text collections. In ICDL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kedar Bellare</author>
<author>Andrew McCallum</author>
</authors>
<title>Learning extractors from unlabeled text using relevant databases.</title>
<date>2007</date>
<booktitle>In IIWeb workshop at AAAI</booktitle>
<contexts>
<context position="3774" citStr="Bellare and McCallum, 2007" startWordPosition="572" endWordPosition="575">erent formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP tic labeling decisions, however, are made independently without regard for the Markov dependencies among labels in text and are sensitive to subtle changes in text. Here we propose a method that automatically induces a labeling of an input text sequence using a word alignment with a matching database record. This induced labeling is then used to train a text extractor. Our approach has several advantag</context>
<context position="25427" citStr="Bellare and McCallum, 2007" startWordPosition="4246" endWordPosition="4250">ally annotated text data using the matching records and a labeling function. The labeling function employs high-precision alignment rules to assign labels to text tokens using labeled record tokens. We use exact and approximate token matching rules to create a partially labeled sequence, skipping tokens that cannot be unambiguously labeled. In our experiments, we achieve a precision of 97% and a recall of 70% using these rules. Given a partially annotated citation text, we train a linear-chain CRF by maximizing the marginal likelihood of the observed labels. This marginal CRF training method (Bellare and McCallum, 2007) (M-CRF) was the previous stateof-the-art on this data set. Additionally, if a matching record is available for a test citation text, we can partially label tokens and use constrained Viterbi decoding with labeled positions fixed at their observed values (M+R-CRF approach). Our third approach is similar to (Mann and McCallum, 2008). We create extraction expectation criteria from labeled text sequences in the training data and uses these criteria to learn a linear-chain CRF for extraction (MM08). The performance achieved by this approach is an upper bound on methods that: (1) use labeled traini</context>
</contexts>
<marker>Bellare, McCallum, 2007</marker>
<rawString>Kedar Bellare and Andrew McCallum. 2007. Learning extractors from unlabeled text using relevant databases. In IIWeb workshop at AAAI 2007.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Phil Blunsom</author>
<author>Trevor Cohn</author>
</authors>
<title>Discriminative word alignment with conditional random fields.</title>
<date>2006</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="34891" citStr="Blunsom and Cohn (2006)" startWordPosition="5731" endWordPosition="5734"> Their model is trained in an unsupervised fashion using EM. It may be possible to further improve their model performance by incorporating prior knowledge in the form of expectation criteria. Traditionally, generative word alignment models have been trained on massive parallel corpora (Brown et al., 1993). Recently, discriminative alignment methods trained using annotated alignments on small parallel corpora have achieved superior performance. Taskar et al. (2005) train a discriminative alignment model from annotated alignments using a large-margin method. Labeled alignments are also used by Blunsom and Cohn (2006) to train a CRF word alignment model. Our method is trained using a small number of easily specified expectation criteria thus avoiding tedious and expensive human labeling of alignments. An alternate method of learning alignment models is proposed by McCallum et al. (2005) in which the training set consists of sequence pairs classified as match or mismatch. Alignments are learned to identify the class of a given sequence pair. However, this method relies on carefully selected negative examples to produce high-accuracy alignments. Our method produces good alignments as we directly encode prior</context>
</contexts>
<marker>Blunsom, Cohn, 2006</marker>
<rawString>Phil Blunsom and Trevor Cohn. 2006. Discriminative word alignment with conditional random fields. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sergey Brin</author>
</authors>
<title>Extracting patterns and relations from the world wide web.</title>
<date>1998</date>
<booktitle>In EDBT Workshop,</booktitle>
<pages>172--183</pages>
<contexts>
<context position="1706" citStr="Brin, 1998" startWordPosition="252" endWordPosition="253">euristic alignments. 1 Introduction A substantial portion of information on the Web consists of unstructured and semi-structured text. Information extraction (IE) systems segment and label such text to populate a structured database that can then be queried and mined efficiently. In this paper, we mainly deal with information extraction from text fragments that closely resemble structured records. Examples of such texts include citation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become p</context>
</contexts>
<marker>Brin, 1998</marker>
<rawString>Sergey Brin. 1998. Extracting patterns and relations from the world wide web. In EDBT Workshop, pages 172–183.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter Brown</author>
<author>Vincent J Della Pietra</author>
<author>Stephen A Della Pietra</author>
<author>Robert Mercer</author>
</authors>
<title>The mathematics of statistical machine translation: parameter estimation. Computational Linguistics,</title>
<date>1993</date>
<contexts>
<context position="4976" citStr="Brown et al., 1993" startWordPosition="769" endWordPosition="772"> several advantages over previous methods. First, we are able to model field ordering and context around fields by learning an extractor from annotations of the text itself. Second, a probabilistic model for word alignment can exploit dependencies among alignments, and is also robust to errors, formatting differences, and missing fields in text and the record. Our word alignment model is a conditional random field (CRF) (Lafferty et al., 2001) that generates alignments between tokens of a text sequence and a matching database record. The structure of the graphical model resembles IBM Model 1 (Brown et al., 1993) in which each target (record) word is assigned one or more source (text) words. The alignment is generated conditioned on both the record and text sequence, and therefore supports large sets of rich and nonindependent features of the sequence pairs. Our model is trained without the need for labeled word alignments by using generalized expectation (GE) criteria (Mann and McCallum, 2008) that penalize the divergence of specific model expectations from target expectations. Model parameters are estimated by minimizing this divergence. To limit over-fitting we include a L2-regularization term in t</context>
<context position="7872" citStr="Brown et al., 1993" startWordPosition="1243" endWordPosition="1246">ess can be automated using systems that match text sequences to records in the DB (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008). Such systems achieve very high accuracy close to 90% F1 on semi-structured domains similar to ours.4 Our trained alignment model can be used to directly align new record-text pairs to create a labeling of the texts. Empirical results demonstrate a 20.6% error reduction in token labeling accuracy compared to a strong baseline method that employs a set of high-precision alignments. Furthermore, we provide a 63.8% error reduction compared to IBM Model 4 (Brown et al., 1993). Alignments learned by our model are used to train a linear-chain CRF extractor. We obtain an error reduction of 35.1% over a previous state-of-the-art extraction method that uses heuristically generated alignments. 2 Record-Text Alignment Here we provide a brief description of the recordtext alignment task. For the sake of clarity and space, we describe our approach on a fictional restaurant address data set. The input to our system is a database (DB) consisting of records (possibly containing errors) and corresponding texts that are realizations of these DB records. An example of a matching</context>
<context position="11354" citStr="Brown et al., 1993" startWordPosition="1815" endWordPosition="1818">tion. Let (x1, y1) be a database record with token sequence x1 = (x1[1], x1[2], ... , x1[m]) and label sequence y1 = (y1[1], y1[2], ... , y1[m]) with y1[*] E Y where Y is the database schema. Let x2 = (x2[1], x2[2], ... , x2[n]) be the text sequence. Let a = (a1, a2, ... , an) be an alignment sequence of same length as the target text sequence. The alignment ai = j assigns the DB token-label pair (x1[j], y1[j]) to the text token x2[i]. 3.1 Conditional Random Field for Alignment Our conditional random field (CRF) for alignment has a graphical model structure that resembles that of IBM Model 1 (Brown et al., 1993). The CRF is an undirected graphical model that defines a probability distribution over alignment sequences a conditioned on the inputs (x1, y1, x2) as: pO(a|x1, y1, x2) = exp(En t=1 OT ~f(at,x1,y1,x2,t)) Z®(x1,y1,x2) , (1) where f(at, x1, y1, x2, t) are feature functions defined over the alignments and inputs, Θ are the model parameters and ZO(x1, y1, x2) = Ea, exp(Ent=1 ΘT�f(a�t, x1, y1, x2, t)) is the partition function. �f(at, x1, y1, x2, t) is the The feature vector concatenation of two types of feature functions: (1) alignment features falign(at, x1, x2, t) defined on source-target token</context>
<context position="24093" citStr="Brown et al., 1993" startWordPosition="4034" endWordPosition="4037">tage of correctly labeled tokens in test citation data) since we do not have annotated alignments. The alignment model is then used to train a ExtrCRF model as described in Section 3.3. Again, we use token labeling accuracy for evaluation. We also measure F1 performance as the harmonic mean of precision and recall for each label. 4.1 Alternate approaches We compare our method against alternate approaches that either learn alignment or extraction models from training data. Alignment approaches. We use GIZA++ (Och and Ney, 2003) to train generative directed alignment models: HMM and IBM Model4 (Brown et al., 1993) from training record-text pairs. These models are currently being used in state-of-the-art machine translation systems. Alignments between matching DB records and text sequences are then used for labeling at test time. 136 Extraction approaches. The first alternative (DB-CRF) trains a linear-chain CRF for extraction on fields of the database entries only. Each field of the record is treated as a separate labeled text sequence. Given an unlabeled text sequence, it is segmented and labeled using the Viterbi algorithm. This method is an enhanced representative for (Agichtein and Ganti, 2004) in </context>
<context position="34575" citStr="Brown et al., 1993" startWordPosition="5687" endWordPosition="5690">nments at the level of sentences and DB records. In contrast, this paper presents a semi-supervised learning algorithm for learning token-level alignments between records and texts. Liang et al. (2009) describe a model that simultaneously performs record-text matching and word alignment in unstructured domains. Their model is trained in an unsupervised fashion using EM. It may be possible to further improve their model performance by incorporating prior knowledge in the form of expectation criteria. Traditionally, generative word alignment models have been trained on massive parallel corpora (Brown et al., 1993). Recently, discriminative alignment methods trained using annotated alignments on small parallel corpora have achieved superior performance. Taskar et al. (2005) train a discriminative alignment model from annotated alignments using a large-margin method. Labeled alignments are also used by Blunsom and Cohn (2006) to train a CRF word alignment model. Our method is trained using a small number of easily specified expectation criteria thus avoiding tedious and expensive human labeling of alignments. An alternate method of learning alignment models is proposed by McCallum et al. (2005) in which </context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>Peter Brown, Vincent J. Della Pietra, Stephen A. Della Pietra, and Robert Mercer. 1993. The mathematics of statistical machine translation: parameter estimation. Computational Linguistics, 19:263–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sander Canisius</author>
<author>Caroline Sporleder</author>
</authors>
<title>Bootstrapping information extraction from field books.</title>
<date>2007</date>
<booktitle>In EMNLP-CoNLL.</booktitle>
<contexts>
<context position="3085" citStr="Canisius and Sporleder, 2007" startWordPosition="467" endWordPosition="471"> scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007). However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extrac</context>
<context position="32562" citStr="Canisius and Sporleder, 2007" startWordPosition="5387" endWordPosition="5390">., 300 annotated citations) to bootstrap itself. Active learning is another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. 138 Another area of research, related to the task described in our paper, is learning extractors from database records. These records are also known as field books and reference sets in literature (Canisius and Sporleder, 2007; Michelson and Knoblock, 2008). Both Agichtein and Ganti (2004) and Canisius and Sporleder (2007) train a language model for each database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment app</context>
</contexts>
<marker>Canisius, Sporleder, 2007</marker>
<rawString>Sander Canisius and Caroline Sporleder. 2007. Bootstrapping information extraction from field books. In EMNLP-CoNLL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Chang</author>
<author>L Ratinov</author>
<author>D Roth</author>
</authors>
<title>Guiding semi-supervision with constraint-driven learning.</title>
<date>2007</date>
<booktitle>In ACL,</booktitle>
<pages>280--287</pages>
<contexts>
<context position="31737" citStr="Chang et al. (2007)" startWordPosition="5259" endWordPosition="5262">e have generated much interest. Haghighi and Klein (2006) assign each label in the model certain prototypical features and train a Markov random field for sequence tagging from these labeled features. In contrast, our method uses GE criteria (Mann and McCallum, 2008) – allowing soft-labeling of features with target expectation values – to train conditional models with complex and non-independent input features. Additionally, in comparison to previous methods, an information extractor trained from our record-text alignments achieves accuracy of 93% making it useful for real-world applications. Chang et al. (2007) use beam search for decoding unlabeled text with soft and hard constraints, and train a model with top-K decoded label sequences. However, this model requires large number of labeled examples (e.g., 300 annotated citations) to bootstrap itself. Active learning is another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. 1</context>
</contexts>
<marker>Chang, Ratinov, Roth, 2007</marker>
<rawString>M. Chang, L. Ratinov, and D. Roth. 2007. Guiding semi-supervision with constraint-driven learning. In ACL, pages 280–287.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Cohen</author>
<author>Pradeep Ravikumar</author>
<author>Stephen Fienberg</author>
</authors>
<title>A comparison of string distance metrics for name-matching tasks.</title>
<date>2003</date>
<booktitle>In IJCAI.</booktitle>
<contexts>
<context position="21120" citStr="Cohen et al., 2003" startWordPosition="3545" endWordPosition="3548">e ICNP]venue [’00,]date [Osaka, Japan,]venue [November 2000.]date Table 3: Example of matching record-text pair found on the web. expression features within a window of 10, and (8) token identity features within a window of 3. (b) Alignment features in the AlignCRF model (f(at, x1, x2, t)) that operate on the aligned source token x1[at] and target token x2[t]. Again the observational tests used for alignment are: (1) exact token match tests whether the source-target tokens are string identical, (2) approximate token match produces a binary feature after binning the Jaro-Winkler edit distance (Cohen et al., 2003) between the tokens, (3) substring token match tests whether one token is a substring of the other, (4) prefix token match returns true if the prefixes match for lengths 11, 2, 3, 41, (5) suffix token match returns true if the prefixes match for lengths 11, 2, 3, 41, and (6) exact and approximate token matches at offsets 1−1, −11 and 1+1, +11 around the alignment. Thus, a conditional model lets us use these arbitrary helpful features that cannot be exploited tractably in a generative model. As is common practice (Haghighi and Klein, 2006; Mann and McCallum, 2008), we simulate user-specified ex</context>
</contexts>
<marker>Cohen, Ravikumar, Fienberg, 2003</marker>
<rawString>William Cohen, Pradeep Ravikumar, and Stephen Fienberg. 2003. A comparison of string distance metrics for name-matching tasks. In IJCAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>O Etzioni</author>
<author>M Cafarella</author>
<author>D Downey</author>
<author>A-M Popescu</author>
<author>T Shaked</author>
<author>S Soderland</author>
<author>D S Weld</author>
<author>A Yates</author>
</authors>
<title>Unsupervised named-entity extraction from the Web: An experimental study.</title>
<date>2005</date>
<journal>Artificial Intelligence,</journal>
<volume>165</volume>
<contexts>
<context position="1758" citStr="Etzioni et al., 2005" startWordPosition="258" endWordPosition="261">stantial portion of information on the Web consists of unstructured and semi-structured text. Information extraction (IE) systems segment and label such text to populate a structured database that can then be queried and mined efficiently. In this paper, we mainly deal with information extraction from text fragments that closely resemble structured records. Examples of such texts include citation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction pro</context>
</contexts>
<marker>Etzioni, Cafarella, Downey, Popescu, Shaked, Soderland, Weld, Yates, 2005</marker>
<rawString>O. Etzioni, M. Cafarella, D. Downey, A.-M. Popescu, T. Shaked, S. Soderland, D. S. Weld, and A. Yates. 2005. Unsupervised named-entity extraction from the Web: An experimental study. Artificial Intelligence, 165.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Freitag</author>
<author>A McCallum</author>
</authors>
<title>Information extraction with HMM and shrinkage.</title>
<date>1999</date>
<booktitle>In AAAI.</booktitle>
<contexts>
<context position="2180" citStr="Freitag and McCallum, 1999" startWordPosition="320" endWordPosition="323">rch papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on</context>
</contexts>
<marker>Freitag, McCallum, 1999</marker>
<rawString>D. Freitag and A. McCallum. 1999. Information extraction with HMM and shrinkage. In AAAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Grenager</author>
<author>D Klein</author>
<author>C D Manning</author>
</authors>
<title>Unsupervised learning of field segmentation models for information extraction.</title>
<date>2005</date>
<booktitle>In ACL.</booktitle>
<contexts>
<context position="30759" citStr="Grenager et al. (2005)" startWordPosition="5118" endWordPosition="5121">In contrast, since there is no realization of the O field in the DB records, both M-CRF and M+R-CRF methods fail to label such tokens correctly. Our alignment model trained using expectation criteria achieves a performance of 92.7% close to gold-standard training (GS-CRF) (96.5%). Furthermore, ExtrCRF obtains an accuracy of 92.8% similar to AlignCRF without access to DB records due to better modeling of transition structure and context. 5 Related Work Recent research in information extraction (IE) has focused on reducing the labeling effort needed to train supervised IE systems. For instance, Grenager et al. (2005) perform unsupervised HMM learning for field segmentation, and bias the model to prefer self-transitions and transitions on boundary tokens. Unfortunately, such unsupervised IE approaches do not attain performance close to state-of-the-art supervised methods. Semi-supervised approaches that learn a model with only a few constraints specifying prior knowledge have generated much interest. Haghighi and Klein (2006) assign each label in the model certain prototypical features and train a Markov random field for sequence tagging from these labeled features. In contrast, our method uses GE criteria</context>
</contexts>
<marker>Grenager, Klein, Manning, 2005</marker>
<rawString>T. Grenager, D. Klein, and C. D. Manning. 2005. Unsupervised learning of field segmentation models for information extraction. In ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aria Haghighi</author>
<author>Dan Klein</author>
</authors>
<title>Prototype-driven learning for sequence models.</title>
<date>2006</date>
<booktitle>In HLT-NAACL.</booktitle>
<contexts>
<context position="21663" citStr="Haghighi and Klein, 2006" startWordPosition="3643" endWordPosition="3646"> binary feature after binning the Jaro-Winkler edit distance (Cohen et al., 2003) between the tokens, (3) substring token match tests whether one token is a substring of the other, (4) prefix token match returns true if the prefixes match for lengths 11, 2, 3, 41, (5) suffix token match returns true if the prefixes match for lengths 11, 2, 3, 41, and (6) exact and approximate token matches at offsets 1−1, −11 and 1+1, +11 around the alignment. Thus, a conditional model lets us use these arbitrary helpful features that cannot be exploited tractably in a generative model. As is common practice (Haghighi and Klein, 2006; Mann and McCallum, 2008), we simulate user-specified expectation criteria through statistics on manually labeled citation texts. For extraction criteria, we select for each label, the top N extraction features ordered by mutual information (MI) with that label. Also, we aggregate the alignment features of record tokens whose alignment with a target text token results in a correct label assignment. The top N alignment features that have maximum MI with this correct labeling are selected as alignment criteria. We bin target expectations of these criteria into 11 bins as [0.05, 0.1, 0.2, 0.3, .</context>
<context position="31175" citStr="Haghighi and Klein (2006)" startWordPosition="5176" endWordPosition="5179">tion structure and context. 5 Related Work Recent research in information extraction (IE) has focused on reducing the labeling effort needed to train supervised IE systems. For instance, Grenager et al. (2005) perform unsupervised HMM learning for field segmentation, and bias the model to prefer self-transitions and transitions on boundary tokens. Unfortunately, such unsupervised IE approaches do not attain performance close to state-of-the-art supervised methods. Semi-supervised approaches that learn a model with only a few constraints specifying prior knowledge have generated much interest. Haghighi and Klein (2006) assign each label in the model certain prototypical features and train a Markov random field for sequence tagging from these labeled features. In contrast, our method uses GE criteria (Mann and McCallum, 2008) – allowing soft-labeling of features with target expectation values – to train conditional models with complex and non-independent input features. Additionally, in comparison to previous methods, an information extractor trained from our record-text alignments achieves accuracy of 93% making it useful for real-world applications. Chang et al. (2007) use beam search for decoding unlabele</context>
</contexts>
<marker>Haghighi, Klein, 2006</marker>
<rawString>Aria Haghighi and Dan Klein. 2006. Prototype-driven learning for sequence models. In HLT-NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>John Lafferty</author>
<author>Andrew McCallum</author>
<author>Fernando C N Pereira</author>
</authors>
<title>Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In ICML,</title>
<date>2001</date>
<pages>282</pages>
<contexts>
<context position="2240" citStr="Lafferty et al., 2001" startWordPosition="330" endWordPosition="333">stings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken o</context>
<context position="4804" citStr="Lafferty et al., 2001" startWordPosition="739" endWordPosition="742">ces a labeling of an input text sequence using a word alignment with a matching database record. This induced labeling is then used to train a text extractor. Our approach has several advantages over previous methods. First, we are able to model field ordering and context around fields by learning an extractor from annotations of the text itself. Second, a probabilistic model for word alignment can exploit dependencies among alignments, and is also robust to errors, formatting differences, and missing fields in text and the record. Our word alignment model is a conditional random field (CRF) (Lafferty et al., 2001) that generates alignments between tokens of a text sequence and a matching database record. The structure of the graphical model resembles IBM Model 1 (Brown et al., 1993) in which each target (record) word is assigned one or more source (text) words. The alignment is generated conditioned on both the record and text sequence, and therefore supports large sets of rich and nonindependent features of the sequence pairs. Our model is trained without the need for labeled word alignments by using generalized expectation (GE) criteria (Mann and McCallum, 2008) that penalize the divergence of specif</context>
</contexts>
<marker>Lafferty, McCallum, Pereira, 2001</marker>
<rawString>John Lafferty, Andrew McCallum, and Fernando C N Pereira. 2001. Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In ICML, page 282.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Liang</author>
<author>M I Jordan</author>
<author>D Klein</author>
</authors>
<title>Learning semantic correspondences with less supervision.</title>
<date>2009</date>
<booktitle>In Association for Computational Linguistics (ACL).</booktitle>
<contexts>
<context position="33311" citStr="Liang et al. (2009)" startWordPosition="5498" endWordPosition="5501"> database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment approach is more robust and uses rich features of the alignment to obtain high performance. Recently, Snyder and Barzilay (2007) and Liang et al. (2009) have explored record-text matching in domains with unstructured texts. Unlike a semistructured text sequence obtained by noisily concatenating fields from a single record, an unstructured sequence may contain fields from multiple records embedded in large amounts of extraneous text. Hence, the problems of record-text matching and word alignment are significantly harder in unstructured domains. Snyder and Barzilay (2007) achieve a state-of-the-art performance of 80% F1 on matching multiple NFL database records to sentences in the news summary of a football game. Their algorithm is trained usin</context>
</contexts>
<marker>Liang, Jordan, Klein, 2009</marker>
<rawString>P. Liang, M. I. Jordan, and D. Klein. 2009. Learning semantic correspondences with less supervision. In Association for Computational Linguistics (ACL).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gideon S Mann</author>
<author>Andrew McCallum</author>
</authors>
<title>Generalized expectation criteria for semi-supervised learning of conditional random fields.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL’08,</booktitle>
<pages>870--878</pages>
<contexts>
<context position="5365" citStr="Mann and McCallum, 2008" startWordPosition="833" endWordPosition="836">del is a conditional random field (CRF) (Lafferty et al., 2001) that generates alignments between tokens of a text sequence and a matching database record. The structure of the graphical model resembles IBM Model 1 (Brown et al., 1993) in which each target (record) word is assigned one or more source (text) words. The alignment is generated conditioned on both the record and text sequence, and therefore supports large sets of rich and nonindependent features of the sequence pairs. Our model is trained without the need for labeled word alignments by using generalized expectation (GE) criteria (Mann and McCallum, 2008) that penalize the divergence of specific model expectations from target expectations. Model parameters are estimated by minimizing this divergence. To limit over-fitting we include a L2-regularization term in the objective. The model expectations in GE criteria are taken with respect to a set of alignment latent variables that are either specific to each sequence pair (local) or summarizing the entire data set (global). This set is constructed by including all alignment variables a that satisfy a certain binary feature (e.g., f(a, x1, y1, x2) = 1, for labeled record (x1, y1), and text sequenc</context>
<context position="14308" citStr="Mann and McCallum, 2008" startWordPosition="2397" endWordPosition="2401">ly a local expectation criterion is defined only for a specific instance (x(i) 1 , y(i) 1 , x(i) 2 ) with the set Af = {a|f(a, x(i) 1 , y(i) 1 , x(i) 2 ) = 1}. For a feature function f, a target expectation p, and, a weight w, our criterion minimizes the squared divergence − 2 Δ(f, p, w, Θ) = w EpΘ (Af ) ( |Af |p) , (5) where EpΘ(Af) = EaEAf pΘ(a) is the sum of marginal probabilities given by Equation (2) and |Af |is the size of the variable set. The weight w influences the importance of satisfying a given expectation criterion. Equation (5) is an instance of generalized expectation criteria (Mann and McCallum, 2008) that penalizes the divergence of a specific model expectation from a given target value. The gradient of the divergence with respect to Θ is given by, � where the gradient is given by Eq. (4). Given expectation criteria C = P, with a set of binary feature functions F = ... , target expectations P = ... , an ∂pΘ(a)∂Θ hF, Wi hf1, fli, hp1, pli d weights W = hw1, ... , wli, we maximize the objective l (f , pi, −Δ i wi,Θ)−||Θ||2, (7) where ||Θ||2/2 is the regularization term added to limit over-fitting. Hence the gradient of the objective is ∂Δ(fi, pi, wi, Θ) − Θ. ∂Θ Also, non-convexity may lead </context>
<context position="21689" citStr="Mann and McCallum, 2008" startWordPosition="3647" endWordPosition="3650">ing the Jaro-Winkler edit distance (Cohen et al., 2003) between the tokens, (3) substring token match tests whether one token is a substring of the other, (4) prefix token match returns true if the prefixes match for lengths 11, 2, 3, 41, (5) suffix token match returns true if the prefixes match for lengths 11, 2, 3, 41, and (6) exact and approximate token matches at offsets 1−1, −11 and 1+1, +11 around the alignment. Thus, a conditional model lets us use these arbitrary helpful features that cannot be exploited tractably in a generative model. As is common practice (Haghighi and Klein, 2006; Mann and McCallum, 2008), we simulate user-specified expectation criteria through statistics on manually labeled citation texts. For extraction criteria, we select for each label, the top N extraction features ordered by mutual information (MI) with that label. Also, we aggregate the alignment features of record tokens whose alignment with a target text token results in a correct label assignment. The top N alignment features that have maximum MI with this correct labeling are selected as alignment criteria. We bin target expectations of these criteria into 11 bins as [0.05, 0.1, 0.2, 0.3, ... , 0.9, 0.95].7 In our e</context>
<context position="25760" citStr="Mann and McCallum, 2008" startWordPosition="4300" endWordPosition="4304">beled. In our experiments, we achieve a precision of 97% and a recall of 70% using these rules. Given a partially annotated citation text, we train a linear-chain CRF by maximizing the marginal likelihood of the observed labels. This marginal CRF training method (Bellare and McCallum, 2007) (M-CRF) was the previous stateof-the-art on this data set. Additionally, if a matching record is available for a test citation text, we can partially label tokens and use constrained Viterbi decoding with labeled positions fixed at their observed values (M+R-CRF approach). Our third approach is similar to (Mann and McCallum, 2008). We create extraction expectation criteria from labeled text sequences in the training data and uses these criteria to learn a linear-chain CRF for extraction (MM08). The performance achieved by this approach is an upper bound on methods that: (1) use labeled training records to create extraction criteria, and, (2) only use extraction criteria without any alignment criteria. Finally, we train a supervised linear-chain CRF (GS-CRF) using the labeled text sequences from the training set. This represents an upper bound on the performance that can be achieved on our task. All the extraction metho</context>
<context position="28386" citStr="Mann and McCallum, 2008" startWordPosition="4723" endWordPosition="4726">raction approaches, do not use any record information at test time. In comparison to the previous stateof-the-art M-CRF, the ExtrCRF method provides an error reduction of 35.1%. ExtrCRF also produces an error reduction of 21.7% compared to M+R-CRF without the use of matching records. These reductions are significant at level p = 0.005 using the two-tailed t-test. Training only on DB records is not helpful for extraction as we do not learn the transition structure9 and additional context information10 in text. This explains the low accuracy of the DB-CRF method. Furthermore, the MM08 approach (Mann and McCallum, 2008) achieves low accuracy since it does not use any 9In general, the editor field follows the title field while the author field precedes it. 10The token “Vol.” generally precedes the volume field in text. Similarly, tokens “pp” and “pages” occur before the pages field. 137 DB-CRF M-CRF M+R-CRF† MM08 ExtrCRF GS-CRF accuracy 70.4% 88.9% 90.8% 73.5% 92.8% 96.5% author 72.4 93.7 94.1 85.4 98.5 99.0 title 79.4 96.7 98.4 83.1 94.6 98.1 date 60.1 74.5 76.2 57.8 81.7 93.5 venue 67.3 89.4 91.5 73.2 89.8 95.9 volume 20.3 69.4 74.2 27.7 78.9 90.5 number 30.1 72.8 80.8 47.8 75.1 91.4 pages 41.4 80.9 84.5 49</context>
<context position="31385" citStr="Mann and McCallum, 2008" startWordPosition="5209" endWordPosition="5212">erform unsupervised HMM learning for field segmentation, and bias the model to prefer self-transitions and transitions on boundary tokens. Unfortunately, such unsupervised IE approaches do not attain performance close to state-of-the-art supervised methods. Semi-supervised approaches that learn a model with only a few constraints specifying prior knowledge have generated much interest. Haghighi and Klein (2006) assign each label in the model certain prototypical features and train a Markov random field for sequence tagging from these labeled features. In contrast, our method uses GE criteria (Mann and McCallum, 2008) – allowing soft-labeling of features with target expectation values – to train conditional models with complex and non-independent input features. Additionally, in comparison to previous methods, an information extractor trained from our record-text alignments achieves accuracy of 93% making it useful for real-world applications. Chang et al. (2007) use beam search for decoding unlabeled text with soft and hard constraints, and train a model with top-K decoded label sequences. However, this model requires large number of labeled examples (e.g., 300 annotated citations) to bootstrap itself. Ac</context>
</contexts>
<marker>Mann, McCallum, 2008</marker>
<rawString>Gideon S. Mann and Andrew McCallum. 2008. Generalized expectation criteria for semi-supervised learning of conditional random fields. In Proceedings of ACL’08, pages 870–878.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I R Mansuri</author>
<author>S Sarawagi</author>
</authors>
<title>Integrating unstructured data into relational databases.</title>
<date>2006</date>
<booktitle>In ICDE.</booktitle>
<contexts>
<context position="3368" citStr="Mansuri and Sarawagi, 2006" startWordPosition="513" endWordPosition="516">hine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007). However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP</context>
</contexts>
<marker>Mansuri, Sarawagi, 2006</marker>
<rawString>I. R. Mansuri and S. Sarawagi. 2006. Integrating unstructured data into relational databases. In ICDE.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrew McCallum</author>
<author>Kedar Bellare</author>
<author>Fernando Pereira</author>
</authors>
<title>A conditional random field for discriminatively-trained finite-state string edit distance.</title>
<date>2005</date>
<booktitle>In UAI.</booktitle>
<contexts>
<context position="35165" citStr="McCallum et al. (2005)" startWordPosition="5775" endWordPosition="5779">lel corpora (Brown et al., 1993). Recently, discriminative alignment methods trained using annotated alignments on small parallel corpora have achieved superior performance. Taskar et al. (2005) train a discriminative alignment model from annotated alignments using a large-margin method. Labeled alignments are also used by Blunsom and Cohn (2006) to train a CRF word alignment model. Our method is trained using a small number of easily specified expectation criteria thus avoiding tedious and expensive human labeling of alignments. An alternate method of learning alignment models is proposed by McCallum et al. (2005) in which the training set consists of sequence pairs classified as match or mismatch. Alignments are learned to identify the class of a given sequence pair. However, this method relies on carefully selected negative examples to produce high-accuracy alignments. Our method produces good alignments as we directly encode prior knowledge about alignments. 6 Conclusion and Future Work Information extraction is an important first step in data mining applications. Earlier approaches for learning reliable extractors have relied on manually annotated text corpora. This paper presents a novel approach </context>
</contexts>
<marker>McCallum, Bellare, Pereira, 2005</marker>
<rawString>Andrew McCallum, Kedar Bellare, and Fernando Pereira. 2005. A conditional random field for discriminatively-trained finite-state string edit distance. In UAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Michelson</author>
<author>Craig A Knoblock</author>
</authors>
<title>Semantic annotation of unstructured and ungrammatical text.</title>
<date>2005</date>
<booktitle>In IJCAI,</booktitle>
<pages>1091--1098</pages>
<contexts>
<context position="3339" citStr="Michelson and Knoblock, 2005" startWordPosition="509" endWordPosition="512">ant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007). However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140, Singapore, 6-7 Augu</context>
<context position="7364" citStr="Michelson and Knoblock, 2005" startWordPosition="1161" endWordPosition="1164">y accurate alignments with little supervision. We apply our method to the task of citation extraction. The input to our training algorithm is a set of matching DBLP2-record/citation-text pairs and global GE criteria3 of the following two types: (1) alignment criteria that consider features of mapping between record and text words, and, (2) extraction criteria that consider features of the schema label assigned to a text word. In our experiments, the parallel record-text pairs are collected manually but this process can be automated using systems that match text sequences to records in the DB (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008). Such systems achieve very high accuracy close to 90% F1 on semi-structured domains similar to ours.4 Our trained alignment model can be used to directly align new record-text pairs to create a labeling of the texts. Empirical results demonstrate a 20.6% error reduction in token labeling accuracy compared to a strong baseline method that employs a set of high-precision alignments. Furthermore, we provide a 63.8% error reduction compared to IBM Model 4 (Brown et al., 1993). Alignments learned by our model are used to train a linear-chain CRF extractor. We obtain </context>
<context position="13426" citStr="Michelson and Knoblock, 2005" startWordPosition="2223" endWordPosition="2227">(at|x1, y1, x2) to pΘ(at). The gradient of pΘ(at) with respect to parameters Θ is given by ∂pΘ (at) = pΘ (at) [~f(at, x1, y1, x2, t) ∂Θ � �] −EpΘ(a) ~f(a, x1, y1, x2, t) ,(4) where the expectation term in the above equation sums over all alignments a at position t. We use the Baum-Welch and Viterbi algorithms to compute marginal probabilities and best alignment sequences respectively. 3.2 Expectation Criteria and Parameter Estimation Let D = h(x(1) 1 ,y(1) 1 , x(1) 2 ), ... , (x(K) 1 , y(K) 1 , x(K) 2 )i be a data set of K record-text pairs gathered manually or automatically through matching (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008). A global expectation criterion is defined on the set of alignment latent variables Af = {a|f(a, x(i) 1 , y(i) 1 , x(i) 2 ) = 1, ∀i = 1... K} on the entire data set that satisfy a given binary feature f(a, x1, y1, x2). Similarly a local expectation criterion is defined only for a specific instance (x(i) 1 , y(i) 1 , x(i) 2 ) with the set Af = {a|f(a, x(i) 1 , y(i) 1 , x(i) 2 ) = 1}. For a feature function f, a target expectation p, and, a weight w, our criterion minimizes the squared divergence − 2 Δ(f, p, w, Θ) = w EpΘ (Af ) ( |Af |p) , (5) where EpΘ(Af) = EaEA</context>
</contexts>
<marker>Michelson, Knoblock, 2005</marker>
<rawString>Matthew Michelson and Craig A. Knoblock. 2005. Semantic annotation of unstructured and ungrammatical text. In IJCAI, pages 1091–1098.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matthew Michelson</author>
<author>Craig A Knoblock</author>
</authors>
<title>Creating relational data from unstructured and ungrammatical data sources.</title>
<date>2008</date>
<journal>JAIR,</journal>
<pages>31--543</pages>
<contexts>
<context position="3805" citStr="Michelson and Knoblock, 2008" startWordPosition="576" endWordPosition="579">ext, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP tic labeling decisions, however, are made independently without regard for the Markov dependencies among labels in text and are sensitive to subtle changes in text. Here we propose a method that automatically induces a labeling of an input text sequence using a word alignment with a matching database record. This induced labeling is then used to train a text extractor. Our approach has several advantages over previous methods. First</context>
<context position="7395" citStr="Michelson and Knoblock, 2008" startWordPosition="1165" endWordPosition="1168">tle supervision. We apply our method to the task of citation extraction. The input to our training algorithm is a set of matching DBLP2-record/citation-text pairs and global GE criteria3 of the following two types: (1) alignment criteria that consider features of mapping between record and text words, and, (2) extraction criteria that consider features of the schema label assigned to a text word. In our experiments, the parallel record-text pairs are collected manually but this process can be automated using systems that match text sequences to records in the DB (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008). Such systems achieve very high accuracy close to 90% F1 on semi-structured domains similar to ours.4 Our trained alignment model can be used to directly align new record-text pairs to create a labeling of the texts. Empirical results demonstrate a 20.6% error reduction in token labeling accuracy compared to a strong baseline method that employs a set of high-precision alignments. Furthermore, we provide a 63.8% error reduction compared to IBM Model 4 (Brown et al., 1993). Alignments learned by our model are used to train a linear-chain CRF extractor. We obtain an error reduction of 35.1% ove</context>
<context position="13457" citStr="Michelson and Knoblock, 2008" startWordPosition="2228" endWordPosition="2231"> gradient of pΘ(at) with respect to parameters Θ is given by ∂pΘ (at) = pΘ (at) [~f(at, x1, y1, x2, t) ∂Θ � �] −EpΘ(a) ~f(a, x1, y1, x2, t) ,(4) where the expectation term in the above equation sums over all alignments a at position t. We use the Baum-Welch and Viterbi algorithms to compute marginal probabilities and best alignment sequences respectively. 3.2 Expectation Criteria and Parameter Estimation Let D = h(x(1) 1 ,y(1) 1 , x(1) 2 ), ... , (x(K) 1 , y(K) 1 , x(K) 2 )i be a data set of K record-text pairs gathered manually or automatically through matching (Michelson and Knoblock, 2005; Michelson and Knoblock, 2008). A global expectation criterion is defined on the set of alignment latent variables Af = {a|f(a, x(i) 1 , y(i) 1 , x(i) 2 ) = 1, ∀i = 1... K} on the entire data set that satisfy a given binary feature f(a, x1, y1, x2). Similarly a local expectation criterion is defined only for a specific instance (x(i) 1 , y(i) 1 , x(i) 2 ) with the set Af = {a|f(a, x(i) 1 , y(i) 1 , x(i) 2 ) = 1}. For a feature function f, a target expectation p, and, a weight w, our criterion minimizes the squared divergence − 2 Δ(f, p, w, Θ) = w EpΘ (Af ) ( |Af |p) , (5) where EpΘ(Af) = EaEAf pΘ(a) is the sum of marginal </context>
<context position="32593" citStr="Michelson and Knoblock, 2008" startWordPosition="5391" endWordPosition="5394"> bootstrap itself. Active learning is another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. 138 Another area of research, related to the task described in our paper, is learning extractors from database records. These records are also known as field books and reference sets in literature (Canisius and Sporleder, 2007; Michelson and Knoblock, 2008). Both Agichtein and Ganti (2004) and Canisius and Sporleder (2007) train a language model for each database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment approach is more robust and uses r</context>
</contexts>
<marker>Michelson, Knoblock, 2008</marker>
<rawString>Matthew Michelson and Craig A. Knoblock. 2008. Creating relational data from unstructured and ungrammatical data sources. JAIR, 31:543–590.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Franz Josef Och</author>
<author>Hermann Ney</author>
</authors>
<title>A systematic comparison of various statistical alignment models.</title>
<date>2003</date>
<journal>Computational Linguistics,</journal>
<volume>29</volume>
<contexts>
<context position="24006" citStr="Och and Ney, 2003" startWordPosition="4019" endWordPosition="4022">luate our alignment model indirectly in terms of token labeling accuracy (i.e., percentage of correctly labeled tokens in test citation data) since we do not have annotated alignments. The alignment model is then used to train a ExtrCRF model as described in Section 3.3. Again, we use token labeling accuracy for evaluation. We also measure F1 performance as the harmonic mean of precision and recall for each label. 4.1 Alternate approaches We compare our method against alternate approaches that either learn alignment or extraction models from training data. Alignment approaches. We use GIZA++ (Och and Ney, 2003) to train generative directed alignment models: HMM and IBM Model4 (Brown et al., 1993) from training record-text pairs. These models are currently being used in state-of-the-art machine translation systems. Alignments between matching DB records and text sequences are then used for labeling at test time. 136 Extraction approaches. The first alternative (DB-CRF) trains a linear-chain CRF for extraction on fields of the database entries only. Each field of the record is treated as a separate labeled text sequence. Given an unlabeled text sequence, it is segmented and labeled using the Viterbi a</context>
</contexts>
<marker>Och, Ney, 2003</marker>
<rawString>Franz Josef Och and Hermann Ney. 2003. A systematic comparison of various statistical alignment models. Computational Linguistics, 29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fuchun Peng</author>
<author>A McCallum</author>
</authors>
<title>Accurate information extraction from research papers using conditional random fields.</title>
<date>2004</date>
<booktitle>In HLT-NAACL.</booktitle>
<contexts>
<context position="2265" citStr="Peng and McCallum, 2004" startWordPosition="334" endWordPosition="337">s. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler appro</context>
</contexts>
<marker>Peng, McCallum, 2004</marker>
<rawString>Fuchun Peng and A. McCallum. 2004. Accurate information extraction from research papers using conditional random fields. In HLT-NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lawrence R Rabiner</author>
</authors>
<title>A tutorial on hidden markov models and selected applications in speech processing.</title>
<date>1989</date>
<pages>17--257</pages>
<publisher>IEEE,</publisher>
<contexts>
<context position="2129" citStr="Rabiner, 1989" startWordPosition="314" endWordPosition="315">xts include citation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised gui</context>
</contexts>
<marker>Rabiner, 1989</marker>
<rawString>Lawrence R. Rabiner. 1989. A tutorial on hidden markov models and selected applications in speech processing. IEEE, 17:257–286.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sridhar Ramakrishnan</author>
<author>Sarit Mukherjee</author>
</authors>
<title>Taming the unstructured: Creating structured content from partially labeled schematic text sequences.</title>
<date>2004</date>
<booktitle>In CoopIS/DOA/ODBASE,</booktitle>
<volume>2</volume>
<pages>909</pages>
<contexts>
<context position="3746" citStr="Ramakrishnan and Mukherjee, 2004" startWordPosition="568" endWordPosition="571"> not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, pages 131–140, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP tic labeling decisions, however, are made independently without regard for the Markov dependencies among labels in text and are sensitive to subtle changes in text. Here we propose a method that automatically induces a labeling of an input text sequence using a word alignment with a matching database record. This induced labeling is then used to train a text extractor. Our a</context>
</contexts>
<marker>Ramakrishnan, Mukherjee, 2004</marker>
<rawString>Sridhar Ramakrishnan and Sarit Mukherjee. 2004. Taming the unstructured: Creating structured content from partially labeled schematic text sequences. In CoopIS/DOA/ODBASE, volume 2, page 909.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sunita Sarawagi</author>
<author>William W Cohen</author>
</authors>
<title>Exploiting dictionaries in named entity extraction: combining semi-markov extraction processes and data integration methods.</title>
<date>2004</date>
<booktitle>In KDD,</booktitle>
<pages>89</pages>
<contexts>
<context position="3309" citStr="Sarawagi and Cohen, 2004" startWordPosition="505" endWordPosition="508">ve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a separate language model is trained on each column of the database and these models are then used to segment and label a given text sequence (Agichtein and Ganti, 2004; Canisius and Sporleder, 2007). However, this approach does not model context, errors or different formats of fields in text, and requires large number of database entries to learn an accurate language model. The second approach (Sarawagi and Cohen, 2004; Michelson and Knoblock, 2005; Mansuri and Sarawagi, 2006) uses database or dictionary lookups in combination with similarity measures to add features to the text sequence. Although these features are very informative, learning algorithms still require annotated data to make use of them. The final approach heuristically labels texts using matching records and learns extractors from these annotations (Ramakrishnan and Mukherjee, 2004; Bellare and McCallum, 2007; Michelson and Knoblock, 2008). Heuris131 Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, page</context>
</contexts>
<marker>Sarawagi, Cohen, 2004</marker>
<rawString>Sunita Sarawagi and William W. Cohen. 2004. Exploiting dictionaries in named entity extraction: combining semi-markov extraction processes and data integration methods. In KDD, page 89.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sunita Sarawagi</author>
<author>William W Cohen</author>
</authors>
<title>SemiMarkov conditional random fields for information extraction.</title>
<date>2005</date>
<booktitle>In NIPS.</booktitle>
<contexts>
<context position="2292" citStr="Sarawagi and Cohen, 2005" startWordPosition="338" endWordPosition="341">ule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learning methods. Previous work on using databases to train information extractors has taken one of three simpler approaches. In the first, a sepa</context>
</contexts>
<marker>Sarawagi, Cohen, 2005</marker>
<rawString>Sunita Sarawagi and William W. Cohen. 2005. SemiMarkov conditional random fields for information extraction. In NIPS.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Burr Settles</author>
<author>Mark Craven</author>
</authors>
<title>An analysis of active learning strategies for sequence labeling tasks.</title>
<date>2008</date>
<booktitle>In EMNLP,</booktitle>
<pages>1070--1079</pages>
<contexts>
<context position="32084" citStr="Settles and Craven (2008)" startWordPosition="5313" endWordPosition="5316">train conditional models with complex and non-independent input features. Additionally, in comparison to previous methods, an information extractor trained from our record-text alignments achieves accuracy of 93% making it useful for real-world applications. Chang et al. (2007) use beam search for decoding unlabeled text with soft and hard constraints, and train a model with top-K decoded label sequences. However, this model requires large number of labeled examples (e.g., 300 annotated citations) to bootstrap itself. Active learning is another popular approach for reducing annotation effort. Settles and Craven (2008) provide a comparison of various active learning strategies for sequence labeling tasks. We have shown, however, that in domains where a database can provide significant supervision, one can bootstrap accurate extractors with very little human effort. 138 Another area of research, related to the task described in our paper, is learning extractors from database records. These records are also known as field books and reference sets in literature (Canisius and Sporleder, 2007; Michelson and Knoblock, 2008). Both Agichtein and Ganti (2004) and Canisius and Sporleder (2007) train a language model </context>
</contexts>
<marker>Settles, Craven, 2008</marker>
<rawString>Burr Settles and Mark Craven. 2008. An analysis of active learning strategies for sequence labeling tasks. In EMNLP, pages 1070–1079.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Seymore</author>
<author>A McCallum</author>
<author>R Rosenfeld</author>
</authors>
<title>Learning hidden markov model structure for information extraction.</title>
<date>1999</date>
<booktitle>In Proceedings of the AAAI Workshop on ML for IE.</booktitle>
<contexts>
<context position="2151" citStr="Seymore et al., 1999" startWordPosition="316" endWordPosition="319">ation strings in research papers, contact addresses on person homepages and apartment listings in classified ads. Pattern matching and rule-based approaches for IE (Brin, 1998; Agichtein and Gravano, 2000; Etzioni et al., 2005) that only use specific patterns, and delimiter and Andrew McCallum Dept. of Computer Science University of Massachusetts Amherst, MA 01003 mccallum@cs.umass.edu font-based cues for segmentation are prone to failure on such data because these cues are generally not broadly reliable. Statistical machine learning methods such as hidden Markov models (HMMs) (Rabiner, 1989; Seymore et al., 1999; Freitag and McCallum, 1999) and conditional random fields (CRFs) (Lafferty et al., 2001; Peng and McCallum, 2004; Sarawagi and Cohen, 2005) have become popular approaches to address the text extraction problem. However, these methods require labeled training data, such as annotated text, which is often scarce and expensive to produce. In many cases, however, there already exists a database with schema related to the desired output, and records that are imperfectly rendered in the available unlabeled text. This database can serve as a source of significant supervised guidance to machine learn</context>
</contexts>
<marker>Seymore, McCallum, Rosenfeld, 1999</marker>
<rawString>K. Seymore, A. McCallum, and R. Rosenfeld. 1999. Learning hidden markov model structure for information extraction. In Proceedings of the AAAI Workshop on ML for IE.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Benjamin Snyder</author>
<author>Regina Barzilay</author>
</authors>
<title>Database-text alignment via structured multi-label classification.</title>
<date>2007</date>
<booktitle>In IJCAI.</booktitle>
<contexts>
<context position="33287" citStr="Snyder and Barzilay (2007)" startWordPosition="5493" endWordPosition="5496">train a language model for each database column. The language modeling approach is sensitive to word re-orderings in text and other variability present in real-world text (e.g., abbreviation). We allow for word and field re-orderings through alignments and model complex transformations through feature functions. Michelson and Knoblock (2008) extract information from unstructured texts using a rule-based approach to align segments of text with fields in a DB record. Our probabilistic alignment approach is more robust and uses rich features of the alignment to obtain high performance. Recently, Snyder and Barzilay (2007) and Liang et al. (2009) have explored record-text matching in domains with unstructured texts. Unlike a semistructured text sequence obtained by noisily concatenating fields from a single record, an unstructured sequence may contain fields from multiple records embedded in large amounts of extraneous text. Hence, the problems of record-text matching and word alignment are significantly harder in unstructured domains. Snyder and Barzilay (2007) achieve a state-of-the-art performance of 80% F1 on matching multiple NFL database records to sentences in the news summary of a football game. Their a</context>
</contexts>
<marker>Snyder, Barzilay, 2007</marker>
<rawString>Benjamin Snyder and Regina Barzilay. 2007. Database-text alignment via structured multi-label classification. In IJCAI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Charles Sutton</author>
<author>Michael Sindelar</author>
<author>Andrew McCallum</author>
</authors>
<title>Reducing weight undertraining in structured discriminative learning.</title>
<date>2006</date>
<booktitle>In HLT-NAACL.</booktitle>
<contexts>
<context position="15820" citStr="Sutton et al., 2006" startWordPosition="2662" endWordPosition="2665"> extraction CRF (ExtrCRF) employs a fully-connected state machine with a unique state ∂pΘ (a) (6) i=1 We maximize our objective (Equation 7) using the L-BFGS algorithm. It is sometimes necessary to restart maximization after resetting the Hessian calculation in L-BFGS due to non-convexity of our The alignment CRF (AlignCRF) model described in Section 3.1 is able to predict labels for a text sequence given a matching DB record. However, without corresponding records for texts the model does not perform well as an extractor because it has learned to rely on the DB record and alignment features (Sutton et al., 2006). Hence, we train a separate linear-chain CRF on the alignmentL-BFGS optimization procedure checks whether the approximate Hessian computed from cached gradient vectors is positive semi-definite. The optimization is re 5Our started if this check fails. 1 |Af |aEA ∂Θ � × � = 2w Ep® (Af) p ( IAf| − ∂Θ ∂Δ(f,p, w, Θ) (2) O(θ; D, C) = max Θ ∂O(θ; D, C) l ∂Θ i=1 134 per label y ∈ Y in the database schema. The CRF induces a conditional probability distribution over label sequences y = hy1, ... , yni and input text sequences x = hx1, ... , xni as exp (Ent=1 AT~g(yt−1, yt, x, t)) pΛ(y|x) = (8) In compa</context>
</contexts>
<marker>Sutton, Sindelar, McCallum, 2006</marker>
<rawString>Charles Sutton, Michael Sindelar, and Andrew McCallum. 2006. Reducing weight undertraining in structured discriminative learning. In HLT-NAACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ben Taskar</author>
<author>Simon Lacoste-Julien</author>
<author>Dan Klein</author>
</authors>
<title>A discriminative matching approach to word alignment.</title>
<date>2005</date>
<booktitle>In HLT-EMNLP,</booktitle>
<pages>73--80</pages>
<contexts>
<context position="34737" citStr="Taskar et al. (2005)" startWordPosition="5709" endWordPosition="5712">n records and texts. Liang et al. (2009) describe a model that simultaneously performs record-text matching and word alignment in unstructured domains. Their model is trained in an unsupervised fashion using EM. It may be possible to further improve their model performance by incorporating prior knowledge in the form of expectation criteria. Traditionally, generative word alignment models have been trained on massive parallel corpora (Brown et al., 1993). Recently, discriminative alignment methods trained using annotated alignments on small parallel corpora have achieved superior performance. Taskar et al. (2005) train a discriminative alignment model from annotated alignments using a large-margin method. Labeled alignments are also used by Blunsom and Cohn (2006) to train a CRF word alignment model. Our method is trained using a small number of easily specified expectation criteria thus avoiding tedious and expensive human labeling of alignments. An alternate method of learning alignment models is proposed by McCallum et al. (2005) in which the training set consists of sequence pairs classified as match or mismatch. Alignments are learned to identify the class of a given sequence pair. However, this </context>
</contexts>
<marker>Taskar, Lacoste-Julien, Klein, 2005</marker>
<rawString>Ben Taskar, Simon Lacoste-Julien, and Dan Klein. 2005. A discriminative matching approach to word alignment. In HLT-EMNLP, pages 73–80.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>