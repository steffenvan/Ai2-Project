<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000703">
<note confidence="0.738633">
Proceedings of EACL &apos;99
</note>
<title confidence="0.767146">
Repair Strategies for Lexicalized Tree Grammars
</title>
<author confidence="0.862581">
Patrice Lopez
</author>
<affiliation confidence="0.633997">
LORIA,
</affiliation>
<address confidence="0.789445">
BP239, 54500 Vandceuvre,
FRANCE
</address>
<email confidence="0.846651">
lopez©loriair
</email>
<sectionHeader confidence="0.992681" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999758538461539">
This paper presents a framework for the
definition of monotonic repair rules on
chart items and Lexicalized Tree Gram-
mars. We exploit island representations
and a new level of granularity for the
linearization of a tree called connected
routes. It allows to take into account the
topology of the tree in order to trigger
additional rules. These local rules cover
ellipsis and common extra-grammatical
phenomena such as self-repairs. First re-
sults with a spoken language corpora are
presented.
</bodyText>
<sectionHeader confidence="0.975672" genericHeader="introduction">
Introduction
</sectionHeader>
<bodyText confidence="0.9999849375">
In the context of spoken task-oriented man-
machine and question-answering dialogues, one of
the most important problem is to deal with spon-
taneous and unexpected syntactical phenomena.
Utterances can be very incomplete and difficult
to predict which questions the principle of gram-
maticality. Moreover large covering grammars are
generally dedicated to written text parsing and
it is not easy to exploit such a grammar for the
analysis of spoken language even if complex syn-
tax does not occur.
For such sentences, robust parsing techniques
are necessary to extract a maximum of informa-
tion from the utterance even if a complete parsing
fails (at least all possible constituents). Consid-
ering parsing of word-graphs and the large search
space of parsing algorithms in order to compute all
possible ambiguities, the number of partial parses
can be very important. A robust semantic pro-
cessing on these partial derivations would result in
a prohibitive number of hypotheses. We argue in
this paper that appropriate syntactical constraints
expressed in a Lexicalized Tree Grammar (LTG)
can trigger efficient repair rules for specific oral
phenomena.
First results of a classical grammatical parsing
are presented, they show that robust parsing need
to cope with oral phenomena. We argue then that
extended domain of locality and lexicalization of
LTG can be exploited in order to express repair
local rules for these specific spoken phenomena.
First results of this approach are presented.
</bodyText>
<sectionHeader confidence="0.9271675" genericHeader="method">
1 LTG parsing and repairing
strategy
</sectionHeader>
<subsectionHeader confidence="0.999228">
1.1 Experimental results
</subsectionHeader>
<bodyText confidence="0.9999585">
Table 1 presents parsing test results of the Go-
cad corpora. This corpora contains 861 utterances
in French of transcribed spontaneous spoken lan-
guage collected with a Wizard of Oz experiment
(Chapelier et al., 1995). We used a bottom-up
parser (Lopez, 1998b) for LTAG. The size of the
grammar was limited compared with (Candito,
1999) and corresponds to the sublanguage used in
the Gocad application. However designing princi-
ples of the grammar was close to the large covering
French LTAG grammar just including additional
elementary trees (for example for unexpected ad-
verbs which can modify predicative nouns) and a
notation enrichment for the possible ellipsis occur-
rences (Lopez, 1998a). The LTAG grammar for
the sublanguage corresponds to a syntactical lex-
icon of 529 entries and a set of 80 non-instancied
elementary trees.
A taxonomy of parsing errors occurring in oral
dialogue shows that the majority of failures are
linked to orality: hesitations, repetitions, self re-
pairs and some head ellipsis. The table 2 gives the
occurrence of these oral phenomena in the Gocad
corpora. Of course more than one phenomenon
can occur in the same utterance.
Prediction of these spoken phenomena would re-
sult in a very high parsing cost. However if we
can detect these oral phenomena with additional
techniques combining partial results, the number
of hypotheses at the semantic level will decrease.
</bodyText>
<page confidence="0.996752">
249
</page>
<table confidence="0.93791025">
Proceedings of EACL &apos;99
Corpus % complete Average no Average no of
parses of parses/utter. partial results/utter.
Gocad 78.3 2.0 7.1
</table>
<tableCaption confidence="0.983184">
Table 1: Global results for the parsing of the Gocad corpora utterances
</tableCaption>
<table confidence="0.864851666666667">
ill-formed with with with agrammatical
utterances hesitations repetitions self-repairs ellipsis
Occurrences 123 28 22 15
</table>
<tableCaption confidence="0.99608">
Table 2: Occurrences of error oral phenomena in the Gocad corpora
</tableCaption>
<subsectionHeader confidence="0.9734295">
1.2 Exploiting Lexicalized Tree
Grammars
</subsectionHeader>
<bodyText confidence="0.956543451612903">
The choice of a LTG (Lexicalized Tree Grammar),
more specifically a LTAG (Lexicalized Tree Adjo-
ing Grammar), can be justified by the two main
following reasons: first the lexicalization and the
extended domain of locality allow to express easily
lexical constraints in partial parsing trees (elemen-
tary trees), secondly robust bottom-up parsing al-
gorithms, stochastic models and efficient precom-
pilation of the grammar (Evans and Weir, 1998)
exist for LTG.
When the parsing of an utterance fails, a ro-
bust bottom-up algorithm gives partial derived
and derivation trees. With a classical chart pars-
ing, items are obtained from other items and cor-
respond to a well-recognized chunk of the utter-
ance. The chart is an acyclic graph representing
all the derivations. A partial result corresponds
to the maximal expansion of an island, so to an
item which is not the origin of any other item.
The main difference between a Context Free
Grammar and a Lexicalized Tree Grammar is that
a tree directly encodes for a specific anchor a par-
tial parsing tree. This representation is richer
than a set of Context Free rules. We argue that
we can exploit this feature by triggering rules not
only according to the category of the node N cor-
responding to an item but considering some nodes
near N.
2 Island representation and
connected routes in repair local
rules
</bodyText>
<subsectionHeader confidence="0.985173">
2.1 Finite States Automata
</subsectionHeader>
<bodyText confidence="0.9751762">
representation of an elementary tree
The linearization of a tree can be represented
with a Finite State Automaton (FSA) as in figure
2. Every tree traversal (left-to-right, bidirectional
from an anchor, ...) can be performed on this au-
tomaton. Doted trees used for example in (Sch-
abes, 1994) are equivalent to the states of these
automata. It is then possible to share all the FSA
of a lexicalized grammar in a single one with tech-
niques presented in (Evans and Weir, 1998).
</bodyText>
<figure confidence="0.784982">
S N 0 V S
0-0-0-0-0-0-0
</figure>
<figureCaption confidence="0.7808565">
Figure 2: Simple FSA representing an elementary
tree for the normal form of French intransive verb.
</figureCaption>
<bodyText confidence="0.9883155">
We consider the following definitions and nota-
tions :
</bodyText>
<listItem confidence="0.957064636363636">
• Each automaton transition is annotated with
a category of node. Each non-leaf node ap-
pears twice in the list of transition fram-
ing the nodes which it dominates. In order
to simplify our explanation the transition is
shown by the annotated category.
• Transitions can be bidirectional in order to
be able to start a bidirectional tree walk of a
tree starting from any state.
• Considering a direction of transition (left-to-
right, right-to-left) the FSA becomes acyclic.
</listItem>
<subsectionHeader confidence="0.9702325">
2.2 Parsing invariant and island
representation
</subsectionHeader>
<bodyText confidence="0.9998505">
A set of FSA corresponds to a global represen-
tation of the grammar, for the parsing we use
a local representation called item. An item is
defined as a 7-tuple of the following form:
</bodyText>
<page confidence="0.985452">
250
</page>
<figureCaption confidence="0.8271775">
Proceedings of EACL &apos;99
Figure 1: Example of repair rules
</figureCaption>
<figure confidence="0.983777444444445">
(a) Rule for hesitations: (head(q) = tail(PR) = H)
01, aR) (j, k, frit, criR) (k, 1, rig?)
(i, k, az, erre) (k,l, ail?)
(b) Rule for head ellipsis on the left :
aR) k, criR) (tail(r R) = X* A ((head(q) = X 4. V
k, 01,0) head(11) = X*) A tai/(r&apos;R) = X I))
(c) Rule for argument ellipsis on the right :
crL, next(rR)) (tail(rR) = X 4.)
(d) Rule 1 for self repair :
</figure>
<equation confidence="0.918984">
(i,j,c1L,0-R) (j, k, aiR)
(i, k, ojR)
(3i = (v, w, E i (i, aR) A
(3X E F A head(11) = X *)V
(tail(r1?) = X 4. A head(q) = X t))
item: ( left index, right index,
</equation>
<bodyText confidence="0.993162409090909">
left state, right state,
foot left index,
foot right index, star state)
The two first indices are the limits on the in-
put string of the island (an anchor or consecutive
anchors) corresponding to the item. During the
initialization, we build an item for each anchor
present in the input string. An item also stores
two states of the same FSA corresponding to the
maximal extension of the island on the left and
on the right, and only if necessary we represent
two additional indices for the position of the foot
node of a wrapping auxiliary tree and the state
star corresponding to the node where the current
wrapping adjunction have been predicted.
This representation maintains the following in-
variant: an item of the form (p, q, L, a R) specifies
the fact that the linearized tree represented by a
FSA A is completely parsed between the states
cf.L. and CI R of A and between the indices p and q.
No other attachment on the tree can happen on
the nodes located between the anchors p and q-1.
</bodyText>
<subsectionHeader confidence="0.9987">
2.3 Connected routes
</subsectionHeader>
<bodyText confidence="0.981802333333333">
Considering an automaton representing the lin-
earization of an elementary tree, we can define a
connected route as a part of this automaton corre-
sponding to the list of nodes crossed successively
until reaching a substitution, a foot node or a root
node (included transition) or an anchor (excluded
transition). Connected route is an intermediate
level of granularity when representing a linearized
tree: each elementary (or a derived tree) can be
represented as a list of connected routes. Consid-
ering connected routes during the parsing permits
to take into account the topology of the elemen-
tary trees and to locate significative nodes for an
attachment (Lopez, 1998b). We use the following
additional simplified notations:
</bodyText>
<listItem confidence="0.992846727272727">
• The connected route passing through the
state ad is noted rd.
• next(r) (resp. previous(r)) gives the first
state of the connected route after (resp. be-
fore) r according to a left-to-right automaton
walk.
• next(N) (resp. previous (N)) gives the state
after (resp. before) the transition N.
• head(r) (resp. tai/(r)) gives the first right
(resp. left) transition of the leftmost (resp.
rightmost) state of the connected route r.
</listItem>
<subsectionHeader confidence="0.99616">
2.4 Inference rules system
</subsectionHeader>
<bodyText confidence="0.973821125">
The derivation process can be viewed as infer-
ence rules which use and introduce items. The
inference rules (Schabes, 1994) have the following
meaning, if q items (itemi)0&lt;z&lt;q are present in the
chart and if the requirements are fulfilled then add
the r items (itemi)o&lt;3&lt;, in the chart if necessary:
(iternz)o&lt;&lt;q
add (itemj)0&lt;3&lt;r)
We note =.* the reflexive transitive closure
of the derivation relation between two items: if
=.* i2 then the item identified with i2 can be ob-
tained from i1 after applying to it a set of deriva-
tions. We note a root node with T.
Figure 1 presents examples of repair rules. This
additional system deals with the following phe-
nomena:
</bodyText>
<equation confidence="0.449716">
( conditions )
</equation>
<page confidence="0.977359">
251
</page>
<table confidence="0.989518">
Proceedings of EACL &apos;99
ill-formed with with with unexpected
utterances hesitations repetitions self-repairs ellipsis
% Correctly 79.6 78.5 63.6 46.7
recovered
</table>
<tableCaption confidence="0.998518">
Table 3: Repair results for the Gocad corpora
</tableCaption>
<listItem confidence="0.9558263">
• Hesitations : Rule (a) for hesitations absorbs
adjacent initial trees whose head is a H node.
Such a tree can correspond to different kind
of hesitation.
• Ellipsis: two rules and their symmetrical con-
figurations try to detect and recover respec-
tively an empty head (b) and an empty argu-
ment (c).
• Self-repair: The (Cori et al., 1997) definition
of self repairs stipulates that the right side of
</listItem>
<bodyText confidence="0.939577666666667">
the interrupted structure (the partial derived
tree on the left of the interruption point) and
the reparandum (the adjacent syntactic is-
land) must match. Instead of modifing the
parsing algorithm as (Cori et al., 1997) do, we
consider a more expressive connected route
matching condition. Rule (d) deals with self-
repair where the repaired structure has been
connected on the target node.
</bodyText>
<sectionHeader confidence="0.992181" genericHeader="method">
3 First results
</sectionHeader>
<bodyText confidence="0.999982352941177">
The rules has been implemented in Java and are
integrated in a grammatical environment system
dedicated to design and test the parsing of spo-
ken dialogue system sublangages. We use a two
stage strategy (Rosé and Lavie, 1997) correspond-
ing to two sets of rules: the first one is the set
for a bottom-up parsing of LTAG using FSA and
connected routes (Lopez, 1998b), the second one
gathers the repair rules presented in this paper.
This strategy separates parsing of grammatical
utterances (resulting from substitution and ad-
junction) from the parsing of admitted utterances
(performed by the additional set). This kind of
strategy permits to keep a normal parsing com-
plexity when the utterance is grammatical. We
present in table 3 statistics for the parsing repairs
of the Gocad copora.
</bodyText>
<sectionHeader confidence="0.996286" genericHeader="discussions">
Discussion
</sectionHeader>
<bodyText confidence="0.9996776875">
Connected routes give robustness capacities in a
Lexicalized Tree Framework. Note that the re-
sults has been obtained for transcribed spoken
language. Considering parsing of word-graphs re-
sulting from a state-of-the-art HMM speech recog-
nizer, non-regular phenomena encountered in spo-
ken language might cause a recognition error on
a neighbouring word and so could not always be
detected.
To prevent overgeneration during the second
stage, both semantic additional well-formed crite-
ria and a restrictive scoring method can be used.
Future works will focus on a mecanism which al-
lows a syntactic and semantic control in the case
of robust parsing based on a LTAG and a syn-
chronous Semantic Tree Grammar.
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99979571875">
Marie-Hélène Candito. 1999. Structuration d&apos;une
grammaire LTAG : application au fran ais et a
l&apos;italien. Ph.D. thesis, University of Paris 7.
Laurent Chapelier, Christine Fay-Varnier, and
Azim Roussanaly. 1995. Modelling an Intel-
ligent Help System from a Wizard of Oz Exper-
iment. In ESCA Workshop on Spoken Dialogue
Systems, Vigso, Danemark.
Marcel Cori, Michel de Fornel, and Jean-Marie
Marandin. 1997. Parsing Repairs. In Rus-
lan Mitkov and Nicolas Nicolov, editors, Recent
advances in natural language processing. John
Benj amins.
Roger Evans and David Weir. 1998. A structure-
sharing parser for lexicalized grammars. In
COLING-ALC, Montréal, Canada.
Patrice Lopez. 1998a. A LTAG grammar for
parsing incomplete and oral utterances. In
European Conference on Artificial Intelligence
(ECAI), Brighton, UK.
Patrice Lopez. 1998b. Connection driven pars-
ing of Lexicalized TAG. In Workshop on Text,
Speech and Dialog (TSD), Brno, Czech Repub-
lic.
C.P. Rosé and A. Lavie. 1997. An efficient dis-
tribution of Labor in Two Stage Robust In-
terpretation Process. In Proceeding of Empir-
ical Methods in Natural Language Processing,
EMNL P &apos;97, Rhode Island, USA.
Yves Schabes. 1994. Left to Right Parsing of
Lexicalized Tree Adjoining Grammars. Com-
putational Intelligence, 10:506-524.
</reference>
<page confidence="0.997426">
252
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.579678">
<note confidence="0.658071">Proceedings of EACL &apos;99</note>
<title confidence="0.993456">Repair Strategies for Lexicalized Tree Grammars</title>
<author confidence="0.99942">Patrice Lopez</author>
<affiliation confidence="0.992747">LORIA,</affiliation>
<address confidence="0.975769">BP239, 54500 Vandceuvre, FRANCE</address>
<email confidence="0.998236">lopez©loriair</email>
<abstract confidence="0.995546785714286">This paper presents a framework for the definition of monotonic repair rules on chart items and Lexicalized Tree Grammars. We exploit island representations and a new level of granularity for the linearization of a tree called connected routes. It allows to take into account the topology of the tree in order to trigger additional rules. These local rules cover ellipsis and common extra-grammatical phenomena such as self-repairs. First results with a spoken language corpora are presented.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Marie-Hélène Candito</author>
</authors>
<title>Structuration d&apos;une grammaire LTAG : application au fran ais et a l&apos;italien.</title>
<date>1999</date>
<tech>Ph.D. thesis,</tech>
<institution>University of Paris</institution>
<contexts>
<context position="2535" citStr="Candito, 1999" startWordPosition="392" endWordPosition="393">mena. We argue then that extended domain of locality and lexicalization of LTG can be exploited in order to express repair local rules for these specific spoken phenomena. First results of this approach are presented. 1 LTG parsing and repairing strategy 1.1 Experimental results Table 1 presents parsing test results of the Gocad corpora. This corpora contains 861 utterances in French of transcribed spontaneous spoken language collected with a Wizard of Oz experiment (Chapelier et al., 1995). We used a bottom-up parser (Lopez, 1998b) for LTAG. The size of the grammar was limited compared with (Candito, 1999) and corresponds to the sublanguage used in the Gocad application. However designing principles of the grammar was close to the large covering French LTAG grammar just including additional elementary trees (for example for unexpected adverbs which can modify predicative nouns) and a notation enrichment for the possible ellipsis occurrences (Lopez, 1998a). The LTAG grammar for the sublanguage corresponds to a syntactical lexicon of 529 entries and a set of 80 non-instancied elementary trees. A taxonomy of parsing errors occurring in oral dialogue shows that the majority of failures are linked t</context>
</contexts>
<marker>Candito, 1999</marker>
<rawString>Marie-Hélène Candito. 1999. Structuration d&apos;une grammaire LTAG : application au fran ais et a l&apos;italien. Ph.D. thesis, University of Paris 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Laurent Chapelier</author>
<author>Christine Fay-Varnier</author>
<author>Azim Roussanaly</author>
</authors>
<title>Modelling an Intelligent Help System from a Wizard of Oz Experiment.</title>
<date>1995</date>
<booktitle>In ESCA Workshop on Spoken Dialogue Systems,</booktitle>
<location>Vigso, Danemark.</location>
<contexts>
<context position="2416" citStr="Chapelier et al., 1995" startWordPosition="370" endWordPosition="373">mena. First results of a classical grammatical parsing are presented, they show that robust parsing need to cope with oral phenomena. We argue then that extended domain of locality and lexicalization of LTG can be exploited in order to express repair local rules for these specific spoken phenomena. First results of this approach are presented. 1 LTG parsing and repairing strategy 1.1 Experimental results Table 1 presents parsing test results of the Gocad corpora. This corpora contains 861 utterances in French of transcribed spontaneous spoken language collected with a Wizard of Oz experiment (Chapelier et al., 1995). We used a bottom-up parser (Lopez, 1998b) for LTAG. The size of the grammar was limited compared with (Candito, 1999) and corresponds to the sublanguage used in the Gocad application. However designing principles of the grammar was close to the large covering French LTAG grammar just including additional elementary trees (for example for unexpected adverbs which can modify predicative nouns) and a notation enrichment for the possible ellipsis occurrences (Lopez, 1998a). The LTAG grammar for the sublanguage corresponds to a syntactical lexicon of 529 entries and a set of 80 non-instancied ele</context>
</contexts>
<marker>Chapelier, Fay-Varnier, Roussanaly, 1995</marker>
<rawString>Laurent Chapelier, Christine Fay-Varnier, and Azim Roussanaly. 1995. Modelling an Intelligent Help System from a Wizard of Oz Experiment. In ESCA Workshop on Spoken Dialogue Systems, Vigso, Danemark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marcel Cori</author>
<author>Michel de Fornel</author>
<author>Jean-Marie Marandin</author>
</authors>
<title>Parsing Repairs.</title>
<date>1997</date>
<booktitle>In Ruslan Mitkov and Nicolas Nicolov, editors, Recent advances in natural language processing. John Benj amins.</booktitle>
<marker>Cori, de Fornel, Marandin, 1997</marker>
<rawString>Marcel Cori, Michel de Fornel, and Jean-Marie Marandin. 1997. Parsing Repairs. In Ruslan Mitkov and Nicolas Nicolov, editors, Recent advances in natural language processing. John Benj amins.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Roger Evans</author>
<author>David Weir</author>
</authors>
<title>A structuresharing parser for lexicalized grammars. In COLING-ALC,</title>
<date>1998</date>
<location>Montréal, Canada.</location>
<contexts>
<context position="4475" citStr="Evans and Weir, 1998" startWordPosition="691" endWordPosition="694">s hesitations repetitions self-repairs ellipsis Occurrences 123 28 22 15 Table 2: Occurrences of error oral phenomena in the Gocad corpora 1.2 Exploiting Lexicalized Tree Grammars The choice of a LTG (Lexicalized Tree Grammar), more specifically a LTAG (Lexicalized Tree Adjoing Grammar), can be justified by the two main following reasons: first the lexicalization and the extended domain of locality allow to express easily lexical constraints in partial parsing trees (elementary trees), secondly robust bottom-up parsing algorithms, stochastic models and efficient precompilation of the grammar (Evans and Weir, 1998) exist for LTG. When the parsing of an utterance fails, a robust bottom-up algorithm gives partial derived and derivation trees. With a classical chart parsing, items are obtained from other items and correspond to a well-recognized chunk of the utterance. The chart is an acyclic graph representing all the derivations. A partial result corresponds to the maximal expansion of an island, so to an item which is not the origin of any other item. The main difference between a Context Free Grammar and a Lexicalized Tree Grammar is that a tree directly encodes for a specific anchor a partial parsing </context>
<context position="5883" citStr="Evans and Weir, 1998" startWordPosition="936" endWordPosition="939">ponding to an item but considering some nodes near N. 2 Island representation and connected routes in repair local rules 2.1 Finite States Automata representation of an elementary tree The linearization of a tree can be represented with a Finite State Automaton (FSA) as in figure 2. Every tree traversal (left-to-right, bidirectional from an anchor, ...) can be performed on this automaton. Doted trees used for example in (Schabes, 1994) are equivalent to the states of these automata. It is then possible to share all the FSA of a lexicalized grammar in a single one with techniques presented in (Evans and Weir, 1998). S N 0 V S 0-0-0-0-0-0-0 Figure 2: Simple FSA representing an elementary tree for the normal form of French intransive verb. We consider the following definitions and notations : • Each automaton transition is annotated with a category of node. Each non-leaf node appears twice in the list of transition framing the nodes which it dominates. In order to simplify our explanation the transition is shown by the annotated category. • Transitions can be bidirectional in order to be able to start a bidirectional tree walk of a tree starting from any state. • Considering a direction of transition (lef</context>
</contexts>
<marker>Evans, Weir, 1998</marker>
<rawString>Roger Evans and David Weir. 1998. A structuresharing parser for lexicalized grammars. In COLING-ALC, Montréal, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patrice Lopez</author>
</authors>
<title>A LTAG grammar for parsing incomplete and oral utterances.</title>
<date>1998</date>
<booktitle>In European Conference on Artificial Intelligence (ECAI),</booktitle>
<location>Brighton, UK.</location>
<contexts>
<context position="2457" citStr="Lopez, 1998" startWordPosition="379" endWordPosition="380">g are presented, they show that robust parsing need to cope with oral phenomena. We argue then that extended domain of locality and lexicalization of LTG can be exploited in order to express repair local rules for these specific spoken phenomena. First results of this approach are presented. 1 LTG parsing and repairing strategy 1.1 Experimental results Table 1 presents parsing test results of the Gocad corpora. This corpora contains 861 utterances in French of transcribed spontaneous spoken language collected with a Wizard of Oz experiment (Chapelier et al., 1995). We used a bottom-up parser (Lopez, 1998b) for LTAG. The size of the grammar was limited compared with (Candito, 1999) and corresponds to the sublanguage used in the Gocad application. However designing principles of the grammar was close to the large covering French LTAG grammar just including additional elementary trees (for example for unexpected adverbs which can modify predicative nouns) and a notation enrichment for the possible ellipsis occurrences (Lopez, 1998a). The LTAG grammar for the sublanguage corresponds to a syntactical lexicon of 529 entries and a set of 80 non-instancied elementary trees. A taxonomy of parsing erro</context>
<context position="9033" citStr="Lopez, 1998" startWordPosition="1505" endWordPosition="1506">f an elementary tree, we can define a connected route as a part of this automaton corresponding to the list of nodes crossed successively until reaching a substitution, a foot node or a root node (included transition) or an anchor (excluded transition). Connected route is an intermediate level of granularity when representing a linearized tree: each elementary (or a derived tree) can be represented as a list of connected routes. Considering connected routes during the parsing permits to take into account the topology of the elementary trees and to locate significative nodes for an attachment (Lopez, 1998b). We use the following additional simplified notations: • The connected route passing through the state ad is noted rd. • next(r) (resp. previous(r)) gives the first state of the connected route after (resp. before) r according to a left-to-right automaton walk. • next(N) (resp. previous (N)) gives the state after (resp. before) the transition N. • head(r) (resp. tai/(r)) gives the first right (resp. left) transition of the leftmost (resp. rightmost) state of the connected route r. 2.4 Inference rules system The derivation process can be viewed as inference rules which use and introduce item</context>
<context position="11600" citStr="Lopez, 1998" startWordPosition="1933" endWordPosition="1934">Instead of modifing the parsing algorithm as (Cori et al., 1997) do, we consider a more expressive connected route matching condition. Rule (d) deals with selfrepair where the repaired structure has been connected on the target node. 3 First results The rules has been implemented in Java and are integrated in a grammatical environment system dedicated to design and test the parsing of spoken dialogue system sublangages. We use a two stage strategy (Rosé and Lavie, 1997) corresponding to two sets of rules: the first one is the set for a bottom-up parsing of LTAG using FSA and connected routes (Lopez, 1998b), the second one gathers the repair rules presented in this paper. This strategy separates parsing of grammatical utterances (resulting from substitution and adjunction) from the parsing of admitted utterances (performed by the additional set). This kind of strategy permits to keep a normal parsing complexity when the utterance is grammatical. We present in table 3 statistics for the parsing repairs of the Gocad copora. Discussion Connected routes give robustness capacities in a Lexicalized Tree Framework. Note that the results has been obtained for transcribed spoken language. Considering p</context>
</contexts>
<marker>Lopez, 1998</marker>
<rawString>Patrice Lopez. 1998a. A LTAG grammar for parsing incomplete and oral utterances. In European Conference on Artificial Intelligence (ECAI), Brighton, UK.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patrice Lopez</author>
</authors>
<title>Connection driven parsing of Lexicalized TAG.</title>
<date>1998</date>
<booktitle>In Workshop on Text, Speech and Dialog (TSD),</booktitle>
<location>Brno, Czech Republic.</location>
<contexts>
<context position="2457" citStr="Lopez, 1998" startWordPosition="379" endWordPosition="380">g are presented, they show that robust parsing need to cope with oral phenomena. We argue then that extended domain of locality and lexicalization of LTG can be exploited in order to express repair local rules for these specific spoken phenomena. First results of this approach are presented. 1 LTG parsing and repairing strategy 1.1 Experimental results Table 1 presents parsing test results of the Gocad corpora. This corpora contains 861 utterances in French of transcribed spontaneous spoken language collected with a Wizard of Oz experiment (Chapelier et al., 1995). We used a bottom-up parser (Lopez, 1998b) for LTAG. The size of the grammar was limited compared with (Candito, 1999) and corresponds to the sublanguage used in the Gocad application. However designing principles of the grammar was close to the large covering French LTAG grammar just including additional elementary trees (for example for unexpected adverbs which can modify predicative nouns) and a notation enrichment for the possible ellipsis occurrences (Lopez, 1998a). The LTAG grammar for the sublanguage corresponds to a syntactical lexicon of 529 entries and a set of 80 non-instancied elementary trees. A taxonomy of parsing erro</context>
<context position="9033" citStr="Lopez, 1998" startWordPosition="1505" endWordPosition="1506">f an elementary tree, we can define a connected route as a part of this automaton corresponding to the list of nodes crossed successively until reaching a substitution, a foot node or a root node (included transition) or an anchor (excluded transition). Connected route is an intermediate level of granularity when representing a linearized tree: each elementary (or a derived tree) can be represented as a list of connected routes. Considering connected routes during the parsing permits to take into account the topology of the elementary trees and to locate significative nodes for an attachment (Lopez, 1998b). We use the following additional simplified notations: • The connected route passing through the state ad is noted rd. • next(r) (resp. previous(r)) gives the first state of the connected route after (resp. before) r according to a left-to-right automaton walk. • next(N) (resp. previous (N)) gives the state after (resp. before) the transition N. • head(r) (resp. tai/(r)) gives the first right (resp. left) transition of the leftmost (resp. rightmost) state of the connected route r. 2.4 Inference rules system The derivation process can be viewed as inference rules which use and introduce item</context>
<context position="11600" citStr="Lopez, 1998" startWordPosition="1933" endWordPosition="1934">Instead of modifing the parsing algorithm as (Cori et al., 1997) do, we consider a more expressive connected route matching condition. Rule (d) deals with selfrepair where the repaired structure has been connected on the target node. 3 First results The rules has been implemented in Java and are integrated in a grammatical environment system dedicated to design and test the parsing of spoken dialogue system sublangages. We use a two stage strategy (Rosé and Lavie, 1997) corresponding to two sets of rules: the first one is the set for a bottom-up parsing of LTAG using FSA and connected routes (Lopez, 1998b), the second one gathers the repair rules presented in this paper. This strategy separates parsing of grammatical utterances (resulting from substitution and adjunction) from the parsing of admitted utterances (performed by the additional set). This kind of strategy permits to keep a normal parsing complexity when the utterance is grammatical. We present in table 3 statistics for the parsing repairs of the Gocad copora. Discussion Connected routes give robustness capacities in a Lexicalized Tree Framework. Note that the results has been obtained for transcribed spoken language. Considering p</context>
</contexts>
<marker>Lopez, 1998</marker>
<rawString>Patrice Lopez. 1998b. Connection driven parsing of Lexicalized TAG. In Workshop on Text, Speech and Dialog (TSD), Brno, Czech Republic.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C P Rosé</author>
<author>A Lavie</author>
</authors>
<title>An efficient distribution of Labor in Two Stage Robust Interpretation Process.</title>
<date>1997</date>
<booktitle>In Proceeding of Empirical Methods in Natural Language Processing, EMNL P &apos;97,</booktitle>
<location>Rhode Island, USA.</location>
<contexts>
<context position="11463" citStr="Rosé and Lavie, 1997" startWordPosition="1905" endWordPosition="1908">errupted structure (the partial derived tree on the left of the interruption point) and the reparandum (the adjacent syntactic island) must match. Instead of modifing the parsing algorithm as (Cori et al., 1997) do, we consider a more expressive connected route matching condition. Rule (d) deals with selfrepair where the repaired structure has been connected on the target node. 3 First results The rules has been implemented in Java and are integrated in a grammatical environment system dedicated to design and test the parsing of spoken dialogue system sublangages. We use a two stage strategy (Rosé and Lavie, 1997) corresponding to two sets of rules: the first one is the set for a bottom-up parsing of LTAG using FSA and connected routes (Lopez, 1998b), the second one gathers the repair rules presented in this paper. This strategy separates parsing of grammatical utterances (resulting from substitution and adjunction) from the parsing of admitted utterances (performed by the additional set). This kind of strategy permits to keep a normal parsing complexity when the utterance is grammatical. We present in table 3 statistics for the parsing repairs of the Gocad copora. Discussion Connected routes give robu</context>
</contexts>
<marker>Rosé, Lavie, 1997</marker>
<rawString>C.P. Rosé and A. Lavie. 1997. An efficient distribution of Labor in Two Stage Robust Interpretation Process. In Proceeding of Empirical Methods in Natural Language Processing, EMNL P &apos;97, Rhode Island, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yves Schabes</author>
</authors>
<title>Left to Right Parsing of Lexicalized Tree Adjoining Grammars.</title>
<date>1994</date>
<journal>Computational Intelligence,</journal>
<pages>10--506</pages>
<contexts>
<context position="5701" citStr="Schabes, 1994" startWordPosition="903" endWordPosition="905">epresentation is richer than a set of Context Free rules. We argue that we can exploit this feature by triggering rules not only according to the category of the node N corresponding to an item but considering some nodes near N. 2 Island representation and connected routes in repair local rules 2.1 Finite States Automata representation of an elementary tree The linearization of a tree can be represented with a Finite State Automaton (FSA) as in figure 2. Every tree traversal (left-to-right, bidirectional from an anchor, ...) can be performed on this automaton. Doted trees used for example in (Schabes, 1994) are equivalent to the states of these automata. It is then possible to share all the FSA of a lexicalized grammar in a single one with techniques presented in (Evans and Weir, 1998). S N 0 V S 0-0-0-0-0-0-0 Figure 2: Simple FSA representing an elementary tree for the normal form of French intransive verb. We consider the following definitions and notations : • Each automaton transition is annotated with a category of node. Each non-leaf node appears twice in the list of transition framing the nodes which it dominates. In order to simplify our explanation the transition is shown by the annotat</context>
<context position="9671" citStr="Schabes, 1994" startWordPosition="1607" endWordPosition="1608"> additional simplified notations: • The connected route passing through the state ad is noted rd. • next(r) (resp. previous(r)) gives the first state of the connected route after (resp. before) r according to a left-to-right automaton walk. • next(N) (resp. previous (N)) gives the state after (resp. before) the transition N. • head(r) (resp. tai/(r)) gives the first right (resp. left) transition of the leftmost (resp. rightmost) state of the connected route r. 2.4 Inference rules system The derivation process can be viewed as inference rules which use and introduce items. The inference rules (Schabes, 1994) have the following meaning, if q items (itemi)0&lt;z&lt;q are present in the chart and if the requirements are fulfilled then add the r items (itemi)o&lt;3&lt;, in the chart if necessary: (iternz)o&lt;&lt;q add (itemj)0&lt;3&lt;r) We note =.* the reflexive transitive closure of the derivation relation between two items: if =.* i2 then the item identified with i2 can be obtained from i1 after applying to it a set of derivations. We note a root node with T. Figure 1 presents examples of repair rules. This additional system deals with the following phenomena: ( conditions ) 251 Proceedings of EACL &apos;99 ill-formed with w</context>
</contexts>
<marker>Schabes, 1994</marker>
<rawString>Yves Schabes. 1994. Left to Right Parsing of Lexicalized Tree Adjoining Grammars. Computational Intelligence, 10:506-524.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>