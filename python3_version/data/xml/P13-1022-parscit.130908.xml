<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000378">
<title confidence="0.996501">
Adapting Discriminative Reranking to Grounded Language Learning
</title>
<author confidence="0.998273">
Joohyun Kim
</author>
<affiliation confidence="0.997382">
Department of Computer Science
The University of Texas at Austin
</affiliation>
<address confidence="0.543132">
Austin, TX 78701, USA
</address>
<email confidence="0.998242">
scimitar@cs.utexas.edu
</email>
<author confidence="0.948522">
Raymond J. Mooney
</author>
<affiliation confidence="0.9960465">
Department of Computer Science
The University of Texas at Austin
</affiliation>
<address confidence="0.542915">
Austin, TX 78701, USA
</address>
<email confidence="0.998772">
mooney@cs.utexas.edu
</email>
<sectionHeader confidence="0.993892" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999971785714286">
We adapt discriminative reranking to im-
prove the performance of grounded lan-
guage acquisition, specifically the task of
learning to follow navigation instructions
from observation. Unlike conventional
reranking used in syntactic and semantic
parsing, gold-standard reference trees are
not naturally available in a grounded set-
ting. Instead, we show how the weak su-
pervision of response feedback (e.g. suc-
cessful task completion) can be used as
an alternative, experimentally demonstrat-
ing that its performance is comparable to
training on gold-standard parse trees.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99998528125">
Grounded language acquisition involves learn-
ing to comprehend and/or generate language by
simply observing its use in a naturally occur-
ring context in which the meaning of a sentence
is grounded in perception and/or action (Roy,
2002; Yu and Ballard, 2004; Gold and Scassel-
lati, 2007; Chen et al., 2010). B¨orschinger et
al. (2011) introduced an approach that reduces
grounded language learning to unsupervised prob-
abilistic context-free grammar (PCFG) induction
and demonstrated its effectiveness on the task of
sportscasting simulated robot soccer games. Sub-
sequently, Kim and Mooney (2012) extended their
approach to make it tractable for the more complex
problem of learning to follow natural-language
navigation instructions from observations of hu-
mans following such instructions in a virtual envi-
ronment (Chen and Mooney, 2011). The observed
sequence of actions provides very weak, ambigu-
ous supervision for learning instructional language
since there are many possible ways to describe the
same execution path. Although their approach im-
proved accuracy on the navigation task compared
to the original work of Chen and Mooney (2011),
it was still far from human performance.
Since their system employs a generative model,
discriminative reranking (Collins, 2000) could po-
tentially improve its performance. By training a
discriminative classifier that uses global features
of complete parses to identify correct interpreta-
tions, a reranker can significantly improve the ac-
curacy of a generative model. Reranking has been
successfully employed to improve syntactic pars-
ing (Collins, 2002b), semantic parsing (Lu et al.,
2008; Ge and Mooney, 2006), semantic role la-
beling (Toutanova et al., 2005), and named entity
recognition (Collins, 2002c). Standard reranking
requires gold-standard interpretations (e.g. parse
trees) to train the discriminative classifier. How-
ever, grounded language learning does not provide
gold-standard interpretations for the training ex-
amples. Only the ambiguous perceptual context
of the utterance is provided as supervision. For
the navigation task, this supervision consists of
the observed sequence of actions taken by a hu-
man when following an instruction. Therefore, it
is impossible to directly apply conventional dis-
criminative reranking to such problems. We show
how to adapt reranking to work with such weak
supervision. Instead of using gold-standard an-
notations to determine the correct interpretations,
we simply prefer interpretations of navigation in-
structions that, when executed in the world, actu-
ally reach the intended destination. Additionally,
we extensively revise the features typically used in
parse reranking to work with the PCFG approach
to grounded language learning.
The rest of the paper is organized as fol-
lows: Section 2 reviews the navigation task and
the PCFG approach to grounded language learn-
ing. Section 3 presents our modified approach to
reranking and Section 4 describes the novel fea-
tures used to evaluate parses. Section 5 experi-
mentally evaluates the approach comparing to sev-
</bodyText>
<page confidence="0.966617">
218
</page>
<note confidence="0.950745">
Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics, pages 218–227,
Sofia, Bulgaria, August 4-9 2013. c�2013 Association for Computational Linguistics
</note>
<figureCaption confidence="0.84947525">
(a) Sample virtual world of hallways with varying tiles,
wallpapers, and landmark objects indicated by letters
(e.g. “H” for hat-rack) and illustrating a sample path
taken by a human follower.
(b) A sample natural language instruction and its formal land-
marks plan for the path illustrated above. The subset corre-
sponding to the correct formal plan is shown in bold.
Figure 1: Sample virtual world and instruction.
</figureCaption>
<bodyText confidence="0.667249">
eral baselines. Finally, Section 6 describes related
work, Section 7 discusses future work, and Sec-
tion 8 concludes.
</bodyText>
<sectionHeader confidence="0.995245" genericHeader="introduction">
2 Background
</sectionHeader>
<subsectionHeader confidence="0.999269">
2.1 Navigation Task
</subsectionHeader>
<bodyText confidence="0.999989515151515">
We address the navigation learning task intro-
duced by Chen and Mooney (2011). The goal is
to interpret natural-language (NL) instructions in a
virtual environment, thereby allowing a simulated
robot to navigate to a specified location. Figure 1a
shows a sample path executed by a human follow-
ing the instruction in Figure 1b. Given no prior lin-
guistic knowledge, the task is to learn to interpret
such instructions by simply observing humans fol-
low sample directions. Formally speaking, given
training examples of the form (ei, ai, wi), where
ei is an NL instruction, ai is an executed action
sequence for the instruction, and wi is the initial
world state, we want to learn to produce an appro-
priate action sequence aj given a novel (ej, wj).
More specifically, one must learn a seman-
tic parser that produces a plan pj using a for-
mal meaning representation (MR) language intro-
duced by Chen and Mooney (2011). This plan is
then executed by a simulated robot in a virtual en-
vironment. The MARCO system, introduced by
MacMahon et al. (2006), executes the formal plan,
flexibly adapting to situations encountered dur-
ing execution and producing the action sequence
aj. During learning, Chen and Mooney construct
a landmarks plan ci for each training example,
which includes the complete context observed in
the world-state resulting from each observed ac-
tion. The correct plan, pi, (which is latent and
must be inferred) is assumed to be composed from
a subset of the components in the corresponding
landmarks plan. The landmarks and correct plans
for a sample instruction are shown in Figure 1b.
</bodyText>
<subsectionHeader confidence="0.994478">
2.2 PCFG Induction for Grounded Language
Learning
</subsectionHeader>
<bodyText confidence="0.999986821428571">
The baseline generative model we use for rerank-
ing employs the unsupervised PCFG induction ap-
proach introduced by Kim and Mooney (2012).
This model is, in turn, based on the earlier model
of B¨orschinger et al. (2011), which transforms
the grounded language learning into unsupervised
PCFG induction. The general approach uses
grammar-formulation rules which construct CFG
productions that form a grammar that effectively
maps NL sentences to formal meaning represen-
tations (MRs) encoded in its nonterminals. After
using Expectation-Maximization (EM) to estimate
the parameters for these productions using the am-
biguous supervision provided by the grounded-
learning setting, it produces a PCFG whose most
probable parse for a sentence encodes its correct
semantic interpretation. Unfortunately, the initial
approach of B¨orschinger et al. (2011) produces ex-
plosively large grammars when applied to more
complex problems, such as our navigation task.
Therefore, Kim and Mooney enhanced their ap-
proach to use a previously learned semantic lexi-
con to reduce the induced grammar to a tractable
size. They also altered the processes for construct-
ing productions and mapping parse trees to MRs in
order to make the construction of semantic inter-
pretations more compositional and allow the ef-
ficient construction of more complex representa-
</bodyText>
<page confidence="0.999413">
219
</page>
<figureCaption confidence="0.988692">
Figure 2: Simplified parse for the sentence “Turn
</figureCaption>
<bodyText confidence="0.98394625">
left and find the sofa then turn around the corner”
for Kim and Mooney’s model. Nonterminals show
the MR graph, where additional nonterminals for
generating NL words are omitted.
tions.
The resulting PCFG can be used to produce
a set of most-probable interpretations of instruc-
tional sentences for the navigation task. Our pro-
posed reranking model is used to discriminatively
reorder the top parses produced by this generative
model. A simplified version of a sample parse tree
for Kim and Mooney’s model is shown in Figure 2.
</bodyText>
<sectionHeader confidence="0.957088" genericHeader="method">
3 Modified Reranking Algorithm
</sectionHeader>
<bodyText confidence="0.998968272727273">
In reranking, a baseline generative model is first
trained and generates a set of candidate outputs
for each training example. Next, a second con-
ditional model is trained which uses global fea-
tures to rescore the candidates. Reranking using
an averaged perceptron (Collins, 2002a) has been
successfully applied to a variety of NLP tasks.
Therefore, we modify it to rerank the parse trees
generated by Kim and Mooney (2012)’s model.
The approach requires three subcomponents: 1)
a GEN function that returns the list of top n can-
didate parse trees for each NL sentence produced
by the generative model, 2) a feature function 41)
that maps a NL sentence, e, and a parse tree, y,
into a real-valued feature vector 41)(e, y) ∈ Rd, and
3) a reference parse tree that is compared to the
highest-scoring parse tree during training.
However, grounded language learning tasks,
such as our navigation task, do not provide ref-
erence parse trees for training examples. Instead,
our modified model replaces the gold-standard ref-
erence parse with the “pseudo-gold” parse tree
</bodyText>
<construct confidence="0.3916565">
Algorithm 1 AVERAGED PERCEPTRON TRAIN-
ING WITH RESPONSE-BASED UPDATE
</construct>
<bodyText confidence="0.9987318">
Input: A set of training examples (ei, y∗i ),
where ei is a NL sentence and y∗i =
arg maxy∈GEN(ei) EXEC(y)
Output: The parameter vector W, averaged
over all iterations 1...T
</bodyText>
<listItem confidence="0.996682555555556">
1: procedure PERCEPTRON
2: Initialize W¯ = 0
3: fort = 1...T, i = 1...n do
4: yi = arg maxy∈GEN(ei) 41)(ei,y) · W¯
5: if yi =� y∗i then
6: W¯ = W¯ + 41)(ei, y∗i ) − 41)(ei, yi)
7: end if
8: end for
9: end procedure
</listItem>
<bodyText confidence="0.99651785">
whose derived MR plan is most successful at get-
ting to the desired goal location. Thus, the third
component in our reranking model becomes an
evaluation function EXEC that maps a parse tree
y into a real number representing the success rate
(w.r.t. successfully reaching the intended destina-
tion) of the derived MR plan m composed from
y.
Additionally, we improve the perceptron train-
ing algorithm by using multiple reference parses
to update the weight vector W¯. Although
we determine the pseudo-gold reference tree to
be the candidate parse y∗ such that y∗ =
arg maxy∈GEN(e) EXEC(y), it may not actually be
the correct parse for the sentence. Other parses
may contain useful information for learning, and
therefore we devise a way to update weights us-
ing all candidate parses whose successful execu-
tion rate is greater than the parse preferred by the
currently learned model.
</bodyText>
<subsectionHeader confidence="0.999166">
3.1 Response-Based Weight Updates
</subsectionHeader>
<bodyText confidence="0.999989583333333">
To circumvent the need for gold-standard refer-
ence parses, we select a pseudo-gold parse from
the candidates produced by the GEN function. In a
similar vein, when reranking semantic parses, Ge
and Mooney (2006) chose as a reference parse the
one which was most similar to the gold-standard
semantic annotation. However, in the navigation
task, the ultimate goal is to generate a plan that,
when actually executed in the virtual environment,
leads to the desired destination. Therefore, the
pseudo-gold reference is chosen as the candidate
parse that produces the MR plan with the great-
</bodyText>
<page confidence="0.966825">
220
</page>
<bodyText confidence="0.999989638888889">
est execution success. This requires an external
module that evaluates the execution accuracy of
the candidate parses. For the navigation task, we
use the MARCO (MacMahon et al., 2006) ex-
ecution module, which is also used to evaluate
how well the overall system learns to follow direc-
tions (Chen and Mooney, 2011). Since MARCO
is nondeterministic when executing underspecified
plans, we execute each candidate plan 10 times,
and its execution rate is the percentage of trials
in which it reaches the correct destination. When
there are multiple candidate parses tied for the
highest execution rate, the one assigned the largest
probability by the baseline model is selected. Our
modified averaged perceptron procedure with such
a response-based update is shown in Algorithm 1.
One additional issue must be addressed when
computing the output of the GEN function. The fi-
nal plan MRs are produced from parse trees using
compositional semantics (see Kim and Mooney
(2012) for details). Consequently, the n-best parse
trees for the baseline model do not necessarily pro-
duce the n-best distinct plans, since many parses
can produce the same plan. Therefore, we adapt
the GEN function to produce the n best distinct
plans rather than the n best parses. This may
require examining many more than the n best
parses, because many parses have insignificant
differences that do not affect the final plan. The
score assigned to a plan is the probability of the
most probable parse that generates that plan. In
order to efficiently compute the n best plans, we
modify the exact n-best parsing algorithm devel-
oped by Huang and Chiang (2005). The modified
algorithm ensures that each plan in the computed
n best list produces a new distinct plan.
</bodyText>
<subsectionHeader confidence="0.999546">
3.2 Weight Updates Using Multiple Parses
</subsectionHeader>
<bodyText confidence="0.999707535714286">
Typically, when used for reranking, the averaged
perceptron updates its weights using the feature-
vector difference between the current best pre-
dicted candidate and the gold-standard reference
(line 6 in Algorithm 1). In our initial modified
version, we replaced the gold-standard reference
parse with the pseudo-gold reference, which has
the highest execution rate amongst all candidate
parses. However, this ignores all other candidate
parses during perceptron training. However, it is
not ideal to regard other candidate parses as “use-
less.” There may be multiple candidate parses with
the same maximum execution rate, and even can-
didates with lower execution rates could represent
the correct plan for the instruction given the weak,
indirect supervision provided by the observed se-
quence of human actions.
Therefore, we also consider a further mod-
ification of the averaged perceptron algorithm
which updates its weights using multiple candi-
date parses. Instead of only updating the weights
with the single difference between the predicted
and pseudo-gold parses, the weight vector W¯ is
updated with the sum of feature-vector differences
between the current predicted candidate and all
other candidates that have a higher execution rate.
Formally, in this version, we replace lines 5–6 of
Algorithm 1 with:
</bodyText>
<listItem confidence="0.9195372">
1: for all y E GEN(ei) where y =� yi and
EXEC(y) &gt; EXEC(yi) do
2: W¯ = W¯ + (EXEC(y) − EXEC(yi))
X(Φ(ei, y) − Φ(ei, yi))
3: end for
</listItem>
<bodyText confidence="0.999985066666667">
where EXEC(y) is the execution rate of the MR
plan m derived from parse tree y.
In the experiments below, we demonstrate that,
by exploiting multiple reference parses, this new
update rule increases the execution accuracy of
the final system. Intuitively, this approach gathers
additional information from all candidate parses
with higher execution accuracy when learning the
discriminative reranker. In addition, as shown in
line 2 of the algorithm above, it uses the differ-
ence in execution rates between a candidate and
the currently preferred parse to weight the update
to the parameters for that candidate. This allows
more effective plans to have a larger impact on the
learned model in each iteration.
</bodyText>
<sectionHeader confidence="0.98888" genericHeader="method">
4 Reranking Features
</sectionHeader>
<bodyText confidence="0.999959333333333">
This section describes the features Φ extracted
from parses produced by the generative model and
used to rerank the candidates.
</bodyText>
<subsectionHeader confidence="0.998393">
4.1 Base Features
</subsectionHeader>
<bodyText confidence="0.9999765">
The base features adapt those used in previous
reranking methods, specifically those of Collins
(2002a), Lu et al. (2008), and Ge and Mooney
(2006), which are directly extracted from parse
trees. In addition, we also include the log prob-
ability of the parse tree as an additional feature.
Figure 3 shows a sample full parse tree from our
baseline model, which is used when explaining the
</bodyText>
<page confidence="0.958627">
221
</page>
<table confidence="0.4033308">
Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL),
Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT)
Le: Turn()
P
hra
</table>
<page confidence="0.988248">
222
</page>
<bodyText confidence="0.991646137931035">
the reranking model to over-fit the training data
and prevent it from generalizing properly.
Therefore, we also tried constructing more gen-
eral features that are less sparse. First, we con-
struct generalized versions of the base features
in which nonterminal symbols use only predicate
names and omit their arguments. In the navigation
task, action arguments frequently contain redun-
dant, rarely used information. In particular, the
interleaving verification steps frequently include
many details that are never actually mentioned in
the NL instructions. For instance, a nonterminal
for the MR
Turn(LEFT),
Verify(at:SOFA,front:EASEL),
Travel(steps:3)
is transformed into the predicate-only form
Turn(), Verify(), Travel()
, and then used to construct more general versions
of the base features described in the previous sec-
tion. Second, another version of the base features
are constructed in which nonterminal symbols in-
clude action arguments but omit all interleaving
verification steps. This is a somewhat more con-
servative simplification of the nonterminal sym-
bols. Although verification steps sometimes help
interpret the actions and their surrounding context,
they frequently cause the nonterminal symbols to
become unnecessarily complex and specific.
</bodyText>
<subsectionHeader confidence="0.986985">
4.3 Descended Action Features
</subsectionHeader>
<bodyText confidence="0.987753833333333">
Finally, another feature group which we utilize
captures whether a particular atomic action in a
nonterminal “descends” into one of its child non-
terminals or not. An atomic action consists of a
predicate and its arguments, e.g. Turn(LEFT),
Travel(steps:2), or Verify(at:SOFA).
When an atomic action descends into lower non-
terminals in a parse tree, it indicates that it is men-
tioned in the NL instruction and is therefore im-
portant. Below are several feature types related to
descended actions that are used in our reranking
model:
</bodyText>
<listItem confidence="0.972414705882353">
a) Descended Action. Indicates whether a given
atomic action in a nonterminal descends to the
next level. In Figure 3, f(Turn(LEFT)) = 1
since it descends into L2 and L4.
b) Descended Action Unigram. Same as De-
scended Action, but also includes the current
nonterminal: f(Turn(LEFT)|L1) = 1.
c) Grandparent Descended Action Unigram.
Same as Descended Action Unigram,
but additionally includes the parent
nonterminal as well as the current one:
f(Turn(LEFT)|L2, L1) = 1.
d) Long-range Descended Action Unigram. Indi-
cates whether a given atomic action in a non-
terminal descends to a child nonterminal and
this child generates a given NL word below it:
f(Turn(LEFT) ❀ left) = 1
</listItem>
<sectionHeader confidence="0.984636" genericHeader="method">
5 Experimental Evaluation
</sectionHeader>
<subsectionHeader confidence="0.929896">
5.1 Data and Methodology
</subsectionHeader>
<bodyText confidence="0.99998028125">
The navigation data was collected by MacMahon
et al. (2006), and includes English instructions
and human follower data.1 The data contains 706
route instructions for three virtual worlds. The in-
structions were produced by six instructors for 126
unique starting and ending location pairs over the
three maps. Each instruction is annotated with 1
to 15 human follower traces with an average of
10.4 actions per instruction. Each instruction con-
tains an average of 5.0 sentences each with an av-
erage of 7.8 words. Chen and Mooney (2011)
constructed a version of the data in which each
sentence is annotated with the actions taken by
the majority of followers when responding to this
sentence. This single-sentence version is used for
training. Manually annotated “gold standard” for-
mal plans for each sentence are used for evaluation
purposes only.
We followed the same experimental methodol-
ogy as Kim and Mooney (2012) and Chen and
Mooney (2011). We performed “leave one en-
vironment out” cross-validation, i.e. 3 trials of
training on two environments and testing on the
third. The baseline model is first trained on data
for two environments and then used to generate
the n = 50 best plans for both training and test-
ing instructions. As mentioned in Section 3.1, we
need to generate many more top parse trees to get
50 distinct formal MR plans. We limit the num-
ber of best parse trees to 1,000,000, and even with
this high limit, some training examples were left
with less than 50 distinct plans.2 Each candidate
</bodyText>
<footnote confidence="0.694748833333333">
1Data is available at http://www.cs.utexas.
edu/users/ml/clamp/navigation/
29.6% of the examples (310 out of total 3237) produced
less than 50 distinct MR plans in the evaluation. This was
mostly due to exceeding the parse-tree limit and partly be-
cause the baseline model failed to parse some NL sentences.
</footnote>
<page confidence="0.996324">
223
</page>
<table confidence="0.9988995">
n 1 2 5 10 25 50
Parse Accuracy F1 74.81 79.08 82.78 85.32 87.52 88.62
Plan Execution Single-sentence 57.22 63.86 70.93 76.41 83.59 87.02
Paragraph 20.17 28.08 35.34 40.64 48.69 53.66
</table>
<tableCaption confidence="0.997855">
Table 1: Oracle parse and execution accuracy for single sentence and complete paragraph instructions
</tableCaption>
<bodyText confidence="0.987117">
for the n best parses.
plan is then executed using MARCO and its rate
of successfully reaching the goal is recorded. Our
reranking model is then trained on the training
data using the n-best candidate parses. We only
retain reranking features that appear (i.e. have a
value of 1) at least twice in the training data.
Finally, we measure both parse and execution
accuracy on the test data. Parse accuracy evalu-
ates how well a system maps novel NL sentences
for new environments into correct MR plans (Chen
and Mooney, 2011). It is calculated by compar-
ing the system’s MR output to the gold-standard
MR. Accuracy is measured using F1, the harmonic
mean of precision and recall for individual MR
constituents, thereby giving partial credit to ap-
proximately correct MRs. We then execute the re-
sulting MR plans in the test environment to see
whether they successfully reach the desired des-
tinations. Execution is evaluated both for sin-
gle sentence and complete paragraph instructions.
Successful execution rates are calculated by aver-
aging 10 nondeterministic MARCO executions.
</bodyText>
<subsectionHeader confidence="0.986382">
5.2 Reranking Results
Oracle results
</subsectionHeader>
<bodyText confidence="0.99665106779661">
As typical in reranking experiments, we first
present results for an “oracle” that always returns
the best result amongst the top-n candidates pro-
duced by the baseline system, thereby providing
an upper bound on the improvements possible
with reranking. Table 1 shows oracle accuracy for
both semantic parsing and plan execution for sin-
gle sentence and complete paragraph instructions
for various values of n. For oracle parse accuracy,
for each sentence, we pick the parse that gives
the highest F1 score. For oracle single-sentence
execution accuracy, we pick the parse that gives
the highest execution success rate. These single-
sentence plans are then concatenated to produce a
complete plan for each paragraph instruction in or-
der to measure overall execution accuracy. Since
making an error in any of the sentences in an in-
struction can easily lead to the wrong final destina-
tion, paragraph-level accuracies are always much
lower than sentence-level ones. In order to bal-
ance oracle accuracy and the computational ef-
fort required to produce n distinct plans, we chose
n = 50 for the final experiments since oracle per-
formance begins to asymptote at this point.
Response-based vs. gold-standard reference
weight updates
Table 2 presents reranking results for our proposed
response-based weight update (Single) for the
averaged perceptron (cf. Section 3.1) compared
to the typical weight update method using gold-
standard parses (Gold). Since the gold-standard
annotation gives the correct MR rather than a parse
tree for each sentence, Gold selects as a single
reference parse the candidate in the top 50 whose
resulting MR is most similar to the gold-standard
MR as determined by its parse accuracy. Ge and
Mooney (2006) employ a similar approach when
reranking semantic parses.
The results show that our response-based ap-
proach (Single) has better execution accuracy
than both the baseline and the standard approach
using gold-standard parses (Gold). However,
Gold does perform best on parse accuracy since
it explicitly focuses on maximizing the accuracy
of the resulting MR. In contrast, by focusing dis-
criminative training on optimizing performance
of the ultimate end task, our response-based ap-
proach actually outperforms the traditional ap-
proach on the final task. In addition, it only uti-
lizes feedback that is naturally available for the
task, rather than requiring an expert to laboriously
annotate each sentence with a gold-standard MR.
Even though Gold captures more elements of the
gold-standard MRs, it may miss some critical MR
components that are crucial to the final naviga-
tion task. The overall result is very promising be-
cause it demonstrates how reranking can be ap-
plied to grounded language learning tasks where
gold-standard parses are not readily available.
</bodyText>
<page confidence="0.99546">
224
</page>
<table confidence="0.999581166666667">
Parse Acc Plan Execution
F1 Single Para
Baseline 74.81 57.22 20.17
Gold 78.26 52.57 19.33
Single 73.32 59.65 22.62
Multi 73.43 62.81 26.57
</table>
<tableCaption confidence="0.858999666666667">
Table 2: Reranking results comparing our
response-based methods using single (Single)
or multiple (Multi) pseudo-gold parses to the
</tableCaption>
<bodyText confidence="0.99533234375">
standard approach using a single gold-standard
parse (Gold). Baseline refers to Kim and
Mooney (2012)’s system. Reranking results use
all features described in Section 4. “Single“ means
the single-sentence version and “Para” means the
full paragraph version of the corpus.
Weight update with single vs. multiple
reference parses
Table 2 also shows performance when using mul-
tiple reference parse trees to update weights (cf.
Section 3.2). Using multiple parses (Multi)
clearly performs better for all evaluation met-
rics, particularly execution. As explained in Sec-
tion 3.2, the single-best pseudo-gold parse pro-
vides weak, ambiguous feedback since it only pro-
vides a rough estimate of the response feedback
from the execution module. Using a variety of
preferable parses to update weights provides a
greater amount and variety of weak feedback and
therefore leads to a more accurate model.3
Comparison of different feature groups
Table 3 compares reranking results using the dif-
ferent feature groups described in Section 4. Com-
pared to the baseline model (Kim and Mooney,
2012), each of the feature groups Base (base
features), Pred (predicate-only and verification-
removed features), and Desc (descended action
features) helps improve the performance of plan
execution for both single sentence and complete
paragraph navigation instructions. Among them,
Desc is the most effective group of features.
Combinations of the feature groups helps fur-
</bodyText>
<footnote confidence="0.98766475">
3We also tried extending Gold to use multiple reference
parses in the same manner, but this actually degraded its per-
formance for all metrics. This indicates that, unlike Multi,
parses other than the best one do not have useful information
in terms of optimizing normal parse accuracy. Instead, ad-
ditional parses seem to add noise to the training process in
this case. Therefore, updating with multiple parses does not
appear to be useful in standard reranking.
</footnote>
<table confidence="0.9957751">
Features Parse Acc Plan Execution
F1 Single Para
Baseline 74.81 57.22 20.17
Base 71.50 60.09 23.20
Pred 71.61 60.87 24.13
Desc 73.90 61.33 25.00
Base+Pred 69.52 61.49 26.24
Base+Desc 73.66 61.72 25.58
Pred+Desc 72.56 62.36 26.04
All 73.43 62.81 26.57
</table>
<tableCaption confidence="0.998567">
Table 3: Reranking results comparing different
</tableCaption>
<bodyText confidence="0.943037466666667">
sets of features. Base refers to base features (cf.
Section 4.1), Pred refers to predicate-only fea-
tures and also includes features based on remov-
ing interleaving verification steps (cf. Section 4.2),
Desc refers to descended action features (cf. Sec-
tion 4.3). All refers to all the features including
Base, Pred, and Desc. All results use weight
update with multiple reference parses (cf. Sec-
tion 3.2).
ther improve the plan execution performance, and
reranking using all of the feature groups (All)
performs the best, as expected. However, since
our model is optimizing plan execution during
training, the results for parse accuracy are always
worse than the baseline model.
</bodyText>
<sectionHeader confidence="0.9999" genericHeader="method">
6 Related Work
</sectionHeader>
<bodyText confidence="0.99971725">
Discriminative reranking is a common machine
learning technique to improve the output of gen-
erative models. It has been shown to be effective
for various natural language processing tasks in-
cluding syntactic parsing (Collins, 2000; Collins,
2002b; Collins and Koo, 2005; Charniak and
Johnson, 2005; Huang, 2008), semantic parsing
(Lu et al., 2008; Ge and Mooney, 2006), part-
of-speech tagging (Collins, 2002a), semantic role
labeling (Toutanova et al., 2005), named entity
recognition (Collins, 2002c). machine translation
(Shen et al., 2004; Fraser and Marcu, 2006) and
surface realization in generation (White and Ra-
jkumar, 2009; Konstas and Lapata, 2012). How-
ever, to our knowledge, there has been no pre-
vious attempt to apply discriminative reranking
to grounded language acquisition, where gold-
standard reference parses are not typically avail-
able for training reranking models.
Our use of response-based training is similar
</bodyText>
<page confidence="0.99425">
225
</page>
<bodyText confidence="0.999963428571429">
to work on learning semantic parsers from execu-
tion output such as the answers to database queries
(Clarke et al., 2010; Liang et al., 2011). Although
the demands of grounded language tasks, such as
following navigation instructions, are different, it
would be interesting to try adapting these alterna-
tive approaches to such problems.
</bodyText>
<sectionHeader confidence="0.995491" genericHeader="method">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.999843">
We thank anonymous reviewers for their helpful
comments to improve this paper. This work was
funded by the NSF grant IIS-0712907 and IIS-
1016312. Experiments were performed on the
Mastodon Cluster, provided by NSF Grant EIA-
0303609.
</bodyText>
<sectionHeader confidence="0.999519" genericHeader="method">
7 Future Work
</sectionHeader>
<bodyText confidence="0.999938947368421">
In the future, we would like to explore the con-
struction of better, more-general reranking fea-
tures that are less prone to over-fitting. Since
typical reranking features rely on the combina-
tion and/or modification of nonterminals appear-
ing in parse trees, for the large PCFG’s produced
for grounded language learning, such features are
very sparse and rare. Although the current features
provide a significant increase in performance, or-
acle results imply that an even larger benefit may
be achievable.
In addition, employing other reranking method-
ologies, such as kernel methods (Collins, 2002b),
and forest reranking exploiting a packed forest of
exponentially many parse trees (Huang, 2008), is
another area of future work. We also would like
to apply our approach to other reranking algo-
rithms such as SVMs (Joachims, 2002) and Max-
Ent methods (Charniak and Johnson, 2005).
</bodyText>
<sectionHeader confidence="0.999107" genericHeader="conclusions">
8 Conclusions
</sectionHeader>
<bodyText confidence="0.999928833333333">
In this paper, we have shown how to adapt dis-
criminative reranking to grounded language learn-
ing. Since typical grounded language learning
problems, such as navigation instruction follow-
ing, do not provide the gold-standard reference
parses required by standard reranking models, we
have devised a novel method for using the weaker
supervision provided by response feedback (e.g.
the execution of inferred navigation plans) when
training a perceptron-based reranker. This ap-
proach was shown to be very effective compared
to the traditional method of using gold-standard
parses. In addition, since this response-based su-
pervision is weak and ambiguous, we have also
presented a method for using multiple reference
parses to perform perceptron weight updates and
shown a clear further improvement in end-task
performance with this approach.
</bodyText>
<sectionHeader confidence="0.998528" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998793977777778">
Benjamin B¨orschinger, Bevan K. Jones, and Mark
Johnson. 2011. Reducing grounded learning tasks
to grammatical inference. In Proceedings of the
Conference on Empirical Methods in Natural Lan-
guage Processing, EMNLP ’11, pages 1416–1425,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.
Eugene Charniak and Mark Johnson. 2005. Coarse-
to-fine n-best parsing and maxent discriminative
reranking. In Proceedings of the 43nd Annual Meet-
ing of the Association for Computational Linguistics
(ACL-05), pages 173–180, Ann Arbor, MI, June.
David L. Chen and Raymond J. Mooney. 2011. Learn-
ing to interpret natural language navigation instruc-
tions from observations. In Proceedings of the 25th
AAAI Conference on Artificial Intelligence (AAAI-
2011), San Francisco, CA, USA, August.
David L. Chen, Joohyun Kim, and Raymond J.
Mooney. 2010. Training a multilingual sportscaster:
Using perceptual context to learn language. Journal
ofArtificial Intelligence Research, 37:397–435.
James Clarke, Dan Goldwasser, Ming-Wei Chang, and
Dan Roth. 2010. Driving semantic parsing from
the world’s response. In Proceedings of the Four-
teenth Conference on Computational Natural Lan-
guage Learning (CoNLL-2010), pages 18–27, Upp-
sala, Sweden, July. Association for Computational
Linguistics.
Michael Collins and Terry Koo. 2005. Discriminative
reranking for natural language parsing. Computa-
tional Linguistics, 31(1):25–69.
Michael Collins. 2000. Discriminative reranking for
natural language parsing. In Proceedings of the
Seventeenth International Conference on Machine
Learning (ICML-2000), pages 175–182, Stanford,
CA, June.
Michael Collins. 2002a. Discriminative training meth-
ods for hidden Markov models: Theory and ex-
periments with perceptron algorithms. In Proceed-
ings of the 2002 Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP-02),
Philadelphia, PA, July.
Michael Collins. 2002b. New ranking algorithms for
parsing and tagging: Kernels over discrete struc-
tures, and the voted perceptron. In Proceedings of
</reference>
<page confidence="0.981314">
226
</page>
<reference confidence="0.999649979166667">
the 40th Annual Meeting of the Association for Com-
putational Linguistics (ACL-2002), pages 263–270,
Philadelphia, PA, July.
Michael Collins. 2002c. Ranking algorithms for
named-entity extraction: Boosting and the voted
perceptron. In Proceedings of the 40th Annual
Meeting of the Association for Computational Lin-
guistics (ACL-2002), pages 489–496, Philadelphia,
PA.
Alexander Fraser and Daniel Marcu. 2006. Semi-
supervised training for statistical word alignment.
In Proceedings of the 21st International Conference
on Computational Linguistics and the 44th annual
meeting of the Association for Computational Lin-
guistics (ACL-06), pages 769–776, Stroudsburg, PA,
USA. Association for Computational Linguistics.
R. Ge and R. J. Mooney. 2006. Discriminative
reranking for semantic parsing. In Proceedings of
the 21st International Conference on Computational
Linguistics and 44th Annual Meeting of the Associa-
tion for Computational Linguistics (COLING/ACL-
06), Sydney, Australia, July.
Kevin Gold and Brian Scassellati. 2007. A robot that
uses existing vocabulary to infer non-visual word
meanings from observation. In Proceedings of the
22nd national conference on Artificial intelligence -
Volume 1, AAAI’07, pages 883–888. AAAI Press.
Liang Huang and David Chiang. 2005. Better k-
best parsing. In Proceedings of the Ninth Inter-
national Workshop on Parsing Technology, Parsing
’05, pages 53–64, Stroudsburg, PA, USA. Associa-
tion for Computational Linguistics.
Liang Huang. 2008. Forest reranking: Discrimina-
tive parsing with non-local features. In Proceedings
of ACL-08: HLT, pages 586–594, Columbus, Ohio,
June. Association for Computational Linguistics.
Thorsten Joachims. 2002. Optimizing search en-
gines using clickthrough data. In Proceedings of
the Eighth ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining (KDD-
2002), Edmonton, Canada.
Joohyun Kim and Raymond J. Mooney. 2012. Un-
supervised PCFG induction for grounded language
learning with highly ambiguous supervision. In Pro-
ceedings of the Conference on Empirical Methods
in Natural Language Processing and Natural Lan-
guage Learning, EMNLP-CoNLL ’12.
Ioannis Konstas and Mirella Lapata. 2012. Concept-
to-text generation via discriminative reranking. In
Proceedings of the 50th Annual Meeting of the Asso-
ciation for Computational Linguistics: Long Papers
- Volume 1, ACL ’12, pages 369–378, Stroudsburg,
PA, USA. Association for Computational Linguis-
tics.
Percy Liang, Michael I. Jordan, and Dan Klein. 2011.
Learning dependency-based compositional seman-
tics. In Proceedings ofACL, Portland, Oregon, June.
Association for Computational Linguistics.
Wei Lu, Hwee Tou Ng, Wee Sun Lee, and Luke S.
Zettlemoyer. 2008. A generative model for pars-
ing natural language to meaning representations. In
Proceedings of the 2008 Conference on Empirical
Methods in Natural Language Processing (EMNLP-
08), Honolulu, HI, October.
Matt MacMahon, Brian Stankiewicz, and Benjamin
Kuipers. 2006. Walk the talk: connecting language,
knowledge, and action in route instructions. In pro-
ceedings of the 21st national conference on Artifi-
cial intelligence - Volume 2, AAAI’06, pages 1475–
1482. AAAI Press.
Deb Roy. 2002. Learning visually grounded words
and syntax for a scene description task. Computer
Speech and Language, 16(3):353–385.
Libin Shen, Anoop Sarkar, and Franz Josef Och. 2004.
Discriminative reranking for machine translation. In
Daniel Marcu Susan Dumais and Salim Roukos, ed-
itors, HLT-NAACL 2004: Main Proceedings, pages
177–184, Boston, Massachusetts, USA, May 2 -
May 7. Association for Computational Linguistics.
Kristina Toutanova, Aria Haghighi, and Christopher D.
Manning. 2005. Joint learning improves semantic
role labeling. In Proceedings of the 43nd Annual
Meeting of the Association for Computational Lin-
guistics (ACL-05), pages 589–596, Ann Arbor, MI,
June.
Michael White and Rajakrishnan Rajkumar. 2009.
Perceptron reranking for CCG realization. In Pro-
ceedings of the 2009 Conference on Empirical Meth-
ods in Natural Language Processing: Volume 1 -
Volume 1, EMNLP ’09, pages 410–419, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
Chen Yu and Dana H. Ballard. 2004. On the integra-
tion of grounding language and learning objects. In
Proceedings of the Nineteenth National Conference
on Artificial Intelligence (AAAI-04), pages 488–493.
</reference>
<page confidence="0.997859">
227
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.578190">
<title confidence="0.999956">Adapting Discriminative Reranking to Grounded Language Learning</title>
<author confidence="0.999737">Joohyun Kim</author>
<affiliation confidence="0.88289">Department of Computer The University of Texas at Austin, TX 78701,</affiliation>
<email confidence="0.999159">scimitar@cs.utexas.edu</email>
<author confidence="0.999864">J Raymond</author>
<affiliation confidence="0.964001333333333">Department of Computer The University of Texas at Austin, TX 78701,</affiliation>
<email confidence="0.999696">mooney@cs.utexas.edu</email>
<abstract confidence="0.999643733333333">We adapt discriminative reranking to improve the performance of grounded language acquisition, specifically the task of learning to follow navigation instructions from observation. Unlike conventional reranking used in syntactic and semantic parsing, gold-standard reference trees are not naturally available in a grounded setting. Instead, we show how the weak supervision of response feedback (e.g. successful task completion) can be used as an alternative, experimentally demonstrating that its performance is comparable to training on gold-standard parse trees.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Benjamin B¨orschinger</author>
<author>Bevan K Jones</author>
<author>Mark Johnson</author>
</authors>
<title>Reducing grounded learning tasks to grammatical inference.</title>
<date>2011</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing, EMNLP ’11,</booktitle>
<pages>1416--1425</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<marker>B¨orschinger, Jones, Johnson, 2011</marker>
<rawString>Benjamin B¨orschinger, Bevan K. Jones, and Mark Johnson. 2011. Reducing grounded learning tasks to grammatical inference. In Proceedings of the Conference on Empirical Methods in Natural Language Processing, EMNLP ’11, pages 1416–1425, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eugene Charniak</author>
<author>Mark Johnson</author>
</authors>
<title>Coarseto-fine n-best parsing and maxent discriminative reranking.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43nd Annual Meeting of the Association for Computational Linguistics (ACL-05),</booktitle>
<pages>173--180</pages>
<location>Ann Arbor, MI,</location>
<contexts>
<context position="27938" citStr="Charniak and Johnson, 2005" startWordPosition="4416" endWordPosition="4419">iple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of res</context>
<context position="30046" citStr="Charniak and Johnson, 2005" startWordPosition="4743" endWordPosition="4746"> trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel method for using the weaker supervision provided by response feedback (e.g. the execution of inferred navigation plans) when training a perceptron-based reranker. This approach was shown to be very effective compared to the traditional method of using gold-standard parses. In add</context>
</contexts>
<marker>Charniak, Johnson, 2005</marker>
<rawString>Eugene Charniak and Mark Johnson. 2005. Coarseto-fine n-best parsing and maxent discriminative reranking. In Proceedings of the 43nd Annual Meeting of the Association for Computational Linguistics (ACL-05), pages 173–180, Ann Arbor, MI, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David L Chen</author>
<author>Raymond J Mooney</author>
</authors>
<title>Learning to interpret natural language navigation instructions from observations.</title>
<date>2011</date>
<booktitle>In Proceedings of the 25th AAAI Conference on Artificial Intelligence (AAAI2011),</booktitle>
<location>San Francisco, CA, USA,</location>
<contexts>
<context position="1736" citStr="Chen and Mooney, 2011" startWordPosition="248" endWordPosition="251">/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequence of actions provides very weak, ambiguous supervision for learning instructional language since there are many possible ways to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations,</context>
<context position="4786" citStr="Chen and Mooney (2011)" startWordPosition="707" endWordPosition="710">world of hallways with varying tiles, wallpapers, and landmark objects indicated by letters (e.g. “H” for hat-rack) and illustrating a sample path taken by a human follower. (b) A sample natural language instruction and its formal landmarks plan for the path illustrated above. The subset corresponding to the correct formal plan is shown in bold. Figure 1: Sample virtual world and instruction. eral baselines. Finally, Section 6 describes related work, Section 7 discusses future work, and Section 8 concludes. 2 Background 2.1 Navigation Task We address the navigation learning task introduced by Chen and Mooney (2011). The goal is to interpret natural-language (NL) instructions in a virtual environment, thereby allowing a simulated robot to navigate to a specified location. Figure 1a shows a sample path executed by a human following the instruction in Figure 1b. Given no prior linguistic knowledge, the task is to learn to interpret such instructions by simply observing humans follow sample directions. Formally speaking, given training examples of the form (ei, ai, wi), where ei is an NL instruction, ai is an executed action sequence for the instruction, and wi is the initial world state, we want to learn t</context>
<context position="11629" citStr="Chen and Mooney, 2011" startWordPosition="1830" endWordPosition="1833">-standard semantic annotation. However, in the navigation task, the ultimate goal is to generate a plan that, when actually executed in the virtual environment, leads to the desired destination. Therefore, the pseudo-gold reference is chosen as the candidate parse that produces the MR plan with the great220 est execution success. This requires an external module that evaluates the execution accuracy of the candidate parses. For the navigation task, we use the MARCO (MacMahon et al., 2006) execution module, which is also used to evaluate how well the overall system learns to follow directions (Chen and Mooney, 2011). Since MARCO is nondeterministic when executing underspecified plans, we execute each candidate plan 10 times, and its execution rate is the percentage of trials in which it reaches the correct destination. When there are multiple candidate parses tied for the highest execution rate, the one assigned the largest probability by the baseline model is selected. Our modified averaged perceptron procedure with such a response-based update is shown in Algorithm 1. One additional issue must be addressed when computing the output of the GEN function. The final plan MRs are produced from parse trees u</context>
<context position="19000" citStr="Chen and Mooney (2011)" startWordPosition="2997" endWordPosition="3000">d below it: f(Turn(LEFT) ❀ left) = 1 5 Experimental Evaluation 5.1 Data and Methodology The navigation data was collected by MacMahon et al. (2006), and includes English instructions and human follower data.1 The data contains 706 route instructions for three virtual worlds. The instructions were produced by six instructors for 126 unique starting and ending location pairs over the three maps. Each instruction is annotated with 1 to 15 human follower traces with an average of 10.4 actions per instruction. Each instruction contains an average of 5.0 sentences each with an average of 7.8 words. Chen and Mooney (2011) constructed a version of the data in which each sentence is annotated with the actions taken by the majority of followers when responding to this sentence. This single-sentence version is used for training. Manually annotated “gold standard” formal plans for each sentence are used for evaluation purposes only. We followed the same experimental methodology as Kim and Mooney (2012) and Chen and Mooney (2011). We performed “leave one environment out” cross-validation, i.e. 3 trials of training on two environments and testing on the third. The baseline model is first trained on data for two envir</context>
<context position="21097" citStr="Chen and Mooney, 2011" startWordPosition="3349" endWordPosition="3352">able 1: Oracle parse and execution accuracy for single sentence and complete paragraph instructions for the n best parses. plan is then executed using MARCO and its rate of successfully reaching the goal is recorded. Our reranking model is then trained on the training data using the n-best candidate parses. We only retain reranking features that appear (i.e. have a value of 1) at least twice in the training data. Finally, we measure both parse and execution accuracy on the test data. Parse accuracy evaluates how well a system maps novel NL sentences for new environments into correct MR plans (Chen and Mooney, 2011). It is calculated by comparing the system’s MR output to the gold-standard MR. Accuracy is measured using F1, the harmonic mean of precision and recall for individual MR constituents, thereby giving partial credit to approximately correct MRs. We then execute the resulting MR plans in the test environment to see whether they successfully reach the desired destinations. Execution is evaluated both for single sentence and complete paragraph instructions. Successful execution rates are calculated by averaging 10 nondeterministic MARCO executions. 5.2 Reranking Results Oracle results As typical i</context>
</contexts>
<marker>Chen, Mooney, 2011</marker>
<rawString>David L. Chen and Raymond J. Mooney. 2011. Learning to interpret natural language navigation instructions from observations. In Proceedings of the 25th AAAI Conference on Artificial Intelligence (AAAI2011), San Francisco, CA, USA, August.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David L Chen</author>
<author>Joohyun Kim</author>
<author>Raymond J Mooney</author>
</authors>
<title>Training a multilingual sportscaster: Using perceptual context to learn language.</title>
<date>2010</date>
<journal>Journal ofArtificial Intelligence Research,</journal>
<pages>37--397</pages>
<contexts>
<context position="1205" citStr="Chen et al., 2010" startWordPosition="173" endWordPosition="176">eference trees are not naturally available in a grounded setting. Instead, we show how the weak supervision of response feedback (e.g. successful task completion) can be used as an alternative, experimentally demonstrating that its performance is comparable to training on gold-standard parse trees. 1 Introduction Grounded language acquisition involves learning to comprehend and/or generate language by simply observing its use in a naturally occurring context in which the meaning of a sentence is grounded in perception and/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequence of actions provides very weak, ambiguous supe</context>
</contexts>
<marker>Chen, Kim, Mooney, 2010</marker>
<rawString>David L. Chen, Joohyun Kim, and Raymond J. Mooney. 2010. Training a multilingual sportscaster: Using perceptual context to learn language. Journal ofArtificial Intelligence Research, 37:397–435.</rawString>
</citation>
<citation valid="true">
<authors>
<author>James Clarke</author>
<author>Dan Goldwasser</author>
<author>Ming-Wei Chang</author>
<author>Dan Roth</author>
</authors>
<title>Driving semantic parsing from the world’s response.</title>
<date>2010</date>
<booktitle>In Proceedings of the Fourteenth Conference on Computational Natural Language Learning (CoNLL-2010),</booktitle>
<pages>18--27</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Uppsala, Sweden,</location>
<contexts>
<context position="28693" citStr="Clarke et al., 2010" startWordPosition="4532" endWordPosition="4535">(Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as following navigation instructions, are different, it would be interesting to try adapting these alternative approaches to such problems. Acknowledgments We thank anonymous reviewers for their helpful comments to improve this paper. This work was funded by the NSF grant IIS-0712907 and IIS1016312. Experiments were performed on the Mastodon Cluster, provided by NSF Grant EIA0303609. 7 Future Work In the future, we would like to explore the construction of better, more-general reranking features that are less prone to</context>
</contexts>
<marker>Clarke, Goldwasser, Chang, Roth, 2010</marker>
<rawString>James Clarke, Dan Goldwasser, Ming-Wei Chang, and Dan Roth. 2010. Driving semantic parsing from the world’s response. In Proceedings of the Fourteenth Conference on Computational Natural Language Learning (CoNLL-2010), pages 18–27, Uppsala, Sweden, July. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
<author>Terry Koo</author>
</authors>
<title>Discriminative reranking for natural language parsing.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>1</issue>
<contexts>
<context position="27910" citStr="Collins and Koo, 2005" startWordPosition="4412" endWordPosition="4415">weight update with multiple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training rera</context>
</contexts>
<marker>Collins, Koo, 2005</marker>
<rawString>Michael Collins and Terry Koo. 2005. Discriminative reranking for natural language parsing. Computational Linguistics, 31(1):25–69.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>Discriminative reranking for natural language parsing.</title>
<date>2000</date>
<booktitle>In Proceedings of the Seventeenth International Conference on Machine Learning (ICML-2000),</booktitle>
<pages>175--182</pages>
<location>Stanford, CA,</location>
<contexts>
<context position="2171" citStr="Collins, 2000" startWordPosition="315" endWordPosition="316">lex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequence of actions provides very weak, ambiguous supervision for learning instructional language since there are many possible ways to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. How</context>
<context position="27871" citStr="Collins, 2000" startWordPosition="4408" endWordPosition="4409">red, and Desc. All results use weight update with multiple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are no</context>
</contexts>
<marker>Collins, 2000</marker>
<rawString>Michael Collins. 2000. Discriminative reranking for natural language parsing. In Proceedings of the Seventeenth International Conference on Machine Learning (ICML-2000), pages 175–182, Stanford, CA, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>Discriminative training methods for hidden Markov models: Theory and experiments with perceptron algorithms.</title>
<date>2002</date>
<booktitle>In Proceedings of the 2002 Conference on Empirical Methods in Natural Language Processing (EMNLP-02),</booktitle>
<location>Philadelphia, PA,</location>
<contexts>
<context position="2494" citStr="Collins, 2002" startWordPosition="362" endWordPosition="363">ys to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction</context>
<context position="8574" citStr="Collins, 2002" startWordPosition="1314" endWordPosition="1315">duce a set of most-probable interpretations of instructional sentences for the navigation task. Our proposed reranking model is used to discriminatively reorder the top parses produced by this generative model. A simplified version of a sample parse tree for Kim and Mooney’s model is shown in Figure 2. 3 Modified Reranking Algorithm In reranking, a baseline generative model is first trained and generates a set of candidate outputs for each training example. Next, a second conditional model is trained which uses global features to rescore the candidates. Reranking using an averaged perceptron (Collins, 2002a) has been successfully applied to a variety of NLP tasks. Therefore, we modify it to rerank the parse trees generated by Kim and Mooney (2012)’s model. The approach requires three subcomponents: 1) a GEN function that returns the list of top n candidate parse trees for each NL sentence produced by the generative model, 2) a feature function 41) that maps a NL sentence, e, and a parse tree, y, into a real-valued feature vector 41)(e, y) ∈ Rd, and 3) a reference parse tree that is compared to the highest-scoring parse tree during training. However, grounded language learning tasks, such as our</context>
<context position="15509" citStr="Collins (2002" startWordPosition="2454" endWordPosition="2455">earning the discriminative reranker. In addition, as shown in line 2 of the algorithm above, it uses the difference in execution rates between a candidate and the currently preferred parse to weight the update to the parameters for that candidate. This allows more effective plans to have a larger impact on the learned model in each iteration. 4 Reranking Features This section describes the features Φ extracted from parses produced by the generative model and used to rerank the candidates. 4.1 Base Features The base features adapt those used in previous reranking methods, specifically those of Collins (2002a), Lu et al. (2008), and Ge and Mooney (2006), which are directly extracted from parse trees. In addition, we also include the log probability of the parse tree as an additional feature. Figure 3 shows a sample full parse tree from our baseline model, which is used when explaining the 221 Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL), Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT) Le: Turn() P hra 222 the reranking model to over-fit the training data and prevent it from generalizing properly. Therefore, we also tried constructing more general features that are less sparse. First, we co</context>
<context position="27886" citStr="Collins, 2002" startWordPosition="4410" endWordPosition="4411">All results use weight update with multiple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically ava</context>
<context position="29765" citStr="Collins, 2002" startWordPosition="4699" endWordPosition="4700">609. 7 Future Work In the future, we would like to explore the construction of better, more-general reranking features that are less prone to over-fitting. Since typical reranking features rely on the combination and/or modification of nonterminals appearing in parse trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel</context>
</contexts>
<marker>Collins, 2002</marker>
<rawString>Michael Collins. 2002a. Discriminative training methods for hidden Markov models: Theory and experiments with perceptron algorithms. In Proceedings of the 2002 Conference on Empirical Methods in Natural Language Processing (EMNLP-02), Philadelphia, PA, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>New ranking algorithms for parsing and tagging: Kernels over discrete structures, and the voted perceptron.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL-2002),</booktitle>
<pages>263--270</pages>
<location>Philadelphia, PA,</location>
<contexts>
<context position="2494" citStr="Collins, 2002" startWordPosition="362" endWordPosition="363">ys to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction</context>
<context position="8574" citStr="Collins, 2002" startWordPosition="1314" endWordPosition="1315">duce a set of most-probable interpretations of instructional sentences for the navigation task. Our proposed reranking model is used to discriminatively reorder the top parses produced by this generative model. A simplified version of a sample parse tree for Kim and Mooney’s model is shown in Figure 2. 3 Modified Reranking Algorithm In reranking, a baseline generative model is first trained and generates a set of candidate outputs for each training example. Next, a second conditional model is trained which uses global features to rescore the candidates. Reranking using an averaged perceptron (Collins, 2002a) has been successfully applied to a variety of NLP tasks. Therefore, we modify it to rerank the parse trees generated by Kim and Mooney (2012)’s model. The approach requires three subcomponents: 1) a GEN function that returns the list of top n candidate parse trees for each NL sentence produced by the generative model, 2) a feature function 41) that maps a NL sentence, e, and a parse tree, y, into a real-valued feature vector 41)(e, y) ∈ Rd, and 3) a reference parse tree that is compared to the highest-scoring parse tree during training. However, grounded language learning tasks, such as our</context>
<context position="15509" citStr="Collins (2002" startWordPosition="2454" endWordPosition="2455">earning the discriminative reranker. In addition, as shown in line 2 of the algorithm above, it uses the difference in execution rates between a candidate and the currently preferred parse to weight the update to the parameters for that candidate. This allows more effective plans to have a larger impact on the learned model in each iteration. 4 Reranking Features This section describes the features Φ extracted from parses produced by the generative model and used to rerank the candidates. 4.1 Base Features The base features adapt those used in previous reranking methods, specifically those of Collins (2002a), Lu et al. (2008), and Ge and Mooney (2006), which are directly extracted from parse trees. In addition, we also include the log probability of the parse tree as an additional feature. Figure 3 shows a sample full parse tree from our baseline model, which is used when explaining the 221 Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL), Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT) Le: Turn() P hra 222 the reranking model to over-fit the training data and prevent it from generalizing properly. Therefore, we also tried constructing more general features that are less sparse. First, we co</context>
<context position="27886" citStr="Collins, 2002" startWordPosition="4410" endWordPosition="4411">All results use weight update with multiple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically ava</context>
<context position="29765" citStr="Collins, 2002" startWordPosition="4699" endWordPosition="4700">609. 7 Future Work In the future, we would like to explore the construction of better, more-general reranking features that are less prone to over-fitting. Since typical reranking features rely on the combination and/or modification of nonterminals appearing in parse trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel</context>
</contexts>
<marker>Collins, 2002</marker>
<rawString>Michael Collins. 2002b. New ranking algorithms for parsing and tagging: Kernels over discrete structures, and the voted perceptron. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL-2002), pages 263–270, Philadelphia, PA, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>Ranking algorithms for named-entity extraction: Boosting and the voted perceptron.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL-2002),</booktitle>
<pages>489--496</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="2494" citStr="Collins, 2002" startWordPosition="362" endWordPosition="363">ys to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction</context>
<context position="8574" citStr="Collins, 2002" startWordPosition="1314" endWordPosition="1315">duce a set of most-probable interpretations of instructional sentences for the navigation task. Our proposed reranking model is used to discriminatively reorder the top parses produced by this generative model. A simplified version of a sample parse tree for Kim and Mooney’s model is shown in Figure 2. 3 Modified Reranking Algorithm In reranking, a baseline generative model is first trained and generates a set of candidate outputs for each training example. Next, a second conditional model is trained which uses global features to rescore the candidates. Reranking using an averaged perceptron (Collins, 2002a) has been successfully applied to a variety of NLP tasks. Therefore, we modify it to rerank the parse trees generated by Kim and Mooney (2012)’s model. The approach requires three subcomponents: 1) a GEN function that returns the list of top n candidate parse trees for each NL sentence produced by the generative model, 2) a feature function 41) that maps a NL sentence, e, and a parse tree, y, into a real-valued feature vector 41)(e, y) ∈ Rd, and 3) a reference parse tree that is compared to the highest-scoring parse tree during training. However, grounded language learning tasks, such as our</context>
<context position="15509" citStr="Collins (2002" startWordPosition="2454" endWordPosition="2455">earning the discriminative reranker. In addition, as shown in line 2 of the algorithm above, it uses the difference in execution rates between a candidate and the currently preferred parse to weight the update to the parameters for that candidate. This allows more effective plans to have a larger impact on the learned model in each iteration. 4 Reranking Features This section describes the features Φ extracted from parses produced by the generative model and used to rerank the candidates. 4.1 Base Features The base features adapt those used in previous reranking methods, specifically those of Collins (2002a), Lu et al. (2008), and Ge and Mooney (2006), which are directly extracted from parse trees. In addition, we also include the log probability of the parse tree as an additional feature. Figure 3 shows a sample full parse tree from our baseline model, which is used when explaining the 221 Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL), Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT) Le: Turn() P hra 222 the reranking model to over-fit the training data and prevent it from generalizing properly. Therefore, we also tried constructing more general features that are less sparse. First, we co</context>
<context position="27886" citStr="Collins, 2002" startWordPosition="4410" endWordPosition="4411">All results use weight update with multiple reference parses (cf. Section 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically ava</context>
<context position="29765" citStr="Collins, 2002" startWordPosition="4699" endWordPosition="4700">609. 7 Future Work In the future, we would like to explore the construction of better, more-general reranking features that are less prone to over-fitting. Since typical reranking features rely on the combination and/or modification of nonterminals appearing in parse trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel</context>
</contexts>
<marker>Collins, 2002</marker>
<rawString>Michael Collins. 2002c. Ranking algorithms for named-entity extraction: Boosting and the voted perceptron. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL-2002), pages 489–496, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander Fraser</author>
<author>Daniel Marcu</author>
</authors>
<title>Semisupervised training for statistical word alignment.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics (ACL-06),</booktitle>
<pages>769--776</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<contexts>
<context position="28206" citStr="Fraser and Marcu, 2006" startWordPosition="4455" endWordPosition="4458"> are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as following navigation instructions</context>
</contexts>
<marker>Fraser, Marcu, 2006</marker>
<rawString>Alexander Fraser and Daniel Marcu. 2006. Semisupervised training for statistical word alignment. In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics (ACL-06), pages 769–776, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Ge</author>
<author>R J Mooney</author>
</authors>
<title>Discriminative reranking for semantic parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics (COLING/ACL06),</booktitle>
<location>Sydney, Australia,</location>
<contexts>
<context position="2553" citStr="Ge and Mooney, 2006" startWordPosition="370" endWordPosition="373">ir approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction. Therefore, it is impossible to directly apply conventiona</context>
<context position="10937" citStr="Ge and Mooney (2006)" startWordPosition="1717" endWordPosition="1720">reference tree to be the candidate parse y∗ such that y∗ = arg maxy∈GEN(e) EXEC(y), it may not actually be the correct parse for the sentence. Other parses may contain useful information for learning, and therefore we devise a way to update weights using all candidate parses whose successful execution rate is greater than the parse preferred by the currently learned model. 3.1 Response-Based Weight Updates To circumvent the need for gold-standard reference parses, we select a pseudo-gold parse from the candidates produced by the GEN function. In a similar vein, when reranking semantic parses, Ge and Mooney (2006) chose as a reference parse the one which was most similar to the gold-standard semantic annotation. However, in the navigation task, the ultimate goal is to generate a plan that, when actually executed in the virtual environment, leads to the desired destination. Therefore, the pseudo-gold reference is chosen as the candidate parse that produces the MR plan with the great220 est execution success. This requires an external module that evaluates the execution accuracy of the candidate parses. For the navigation task, we use the MARCO (MacMahon et al., 2006) execution module, which is also used</context>
<context position="15555" citStr="Ge and Mooney (2006)" startWordPosition="2461" endWordPosition="2464"> addition, as shown in line 2 of the algorithm above, it uses the difference in execution rates between a candidate and the currently preferred parse to weight the update to the parameters for that candidate. This allows more effective plans to have a larger impact on the learned model in each iteration. 4 Reranking Features This section describes the features Φ extracted from parses produced by the generative model and used to rerank the candidates. 4.1 Base Features The base features adapt those used in previous reranking methods, specifically those of Collins (2002a), Lu et al. (2008), and Ge and Mooney (2006), which are directly extracted from parse trees. In addition, we also include the log probability of the parse tree as an additional feature. Figure 3 shows a sample full parse tree from our baseline model, which is used when explaining the 221 Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL), Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT) Le: Turn() P hra 222 the reranking model to over-fit the training data and prevent it from generalizing properly. Therefore, we also tried constructing more general features that are less sparse. First, we construct generalized versions of the base featu</context>
<context position="23409" citStr="Ge and Mooney (2006)" startWordPosition="3714" endWordPosition="3717">s since oracle performance begins to asymptote at this point. Response-based vs. gold-standard reference weight updates Table 2 presents reranking results for our proposed response-based weight update (Single) for the averaged perceptron (cf. Section 3.1) compared to the typical weight update method using goldstandard parses (Gold). Since the gold-standard annotation gives the correct MR rather than a parse tree for each sentence, Gold selects as a single reference parse the candidate in the top 50 whose resulting MR is most similar to the gold-standard MR as determined by its parse accuracy. Ge and Mooney (2006) employ a similar approach when reranking semantic parses. The results show that our response-based approach (Single) has better execution accuracy than both the baseline and the standard approach using gold-standard parses (Gold). However, Gold does perform best on parse accuracy since it explicitly focuses on maximizing the accuracy of the resulting MR. In contrast, by focusing discriminative training on optimizing performance of the ultimate end task, our response-based approach actually outperforms the traditional approach on the final task. In addition, it only utilizes feedback that is n</context>
<context position="28009" citStr="Ge and Mooney, 2006" startWordPosition="4428" endWordPosition="4431">ormance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parser</context>
</contexts>
<marker>Ge, Mooney, 2006</marker>
<rawString>R. Ge and R. J. Mooney. 2006. Discriminative reranking for semantic parsing. In Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Association for Computational Linguistics (COLING/ACL06), Sydney, Australia, July.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin Gold</author>
<author>Brian Scassellati</author>
</authors>
<title>A robot that uses existing vocabulary to infer non-visual word meanings from observation.</title>
<date>2007</date>
<booktitle>In Proceedings of the 22nd national conference on Artificial intelligence -Volume 1, AAAI’07,</booktitle>
<pages>883--888</pages>
<publisher>AAAI Press.</publisher>
<contexts>
<context position="1185" citStr="Gold and Scassellati, 2007" startWordPosition="168" endWordPosition="172">tic parsing, gold-standard reference trees are not naturally available in a grounded setting. Instead, we show how the weak supervision of response feedback (e.g. successful task completion) can be used as an alternative, experimentally demonstrating that its performance is comparable to training on gold-standard parse trees. 1 Introduction Grounded language acquisition involves learning to comprehend and/or generate language by simply observing its use in a naturally occurring context in which the meaning of a sentence is grounded in perception and/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequence of actions provides very </context>
</contexts>
<marker>Gold, Scassellati, 2007</marker>
<rawString>Kevin Gold and Brian Scassellati. 2007. A robot that uses existing vocabulary to infer non-visual word meanings from observation. In Proceedings of the 22nd national conference on Artificial intelligence -Volume 1, AAAI’07, pages 883–888. AAAI Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Liang Huang</author>
<author>David Chiang</author>
</authors>
<title>Better kbest parsing.</title>
<date>2005</date>
<booktitle>In Proceedings of the Ninth International Workshop on Parsing Technology, Parsing ’05,</booktitle>
<pages>53--64</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<contexts>
<context position="12942" citStr="Huang and Chiang (2005)" startWordPosition="2044" endWordPosition="2047">best parse trees for the baseline model do not necessarily produce the n-best distinct plans, since many parses can produce the same plan. Therefore, we adapt the GEN function to produce the n best distinct plans rather than the n best parses. This may require examining many more than the n best parses, because many parses have insignificant differences that do not affect the final plan. The score assigned to a plan is the probability of the most probable parse that generates that plan. In order to efficiently compute the n best plans, we modify the exact n-best parsing algorithm developed by Huang and Chiang (2005). The modified algorithm ensures that each plan in the computed n best list produces a new distinct plan. 3.2 Weight Updates Using Multiple Parses Typically, when used for reranking, the averaged perceptron updates its weights using the featurevector difference between the current best predicted candidate and the gold-standard reference (line 6 in Algorithm 1). In our initial modified version, we replaced the gold-standard reference parse with the pseudo-gold reference, which has the highest execution rate amongst all candidate parses. However, this ignores all other candidate parses during pe</context>
</contexts>
<marker>Huang, Chiang, 2005</marker>
<rawString>Liang Huang and David Chiang. 2005. Better kbest parsing. In Proceedings of the Ninth International Workshop on Parsing Technology, Parsing ’05, pages 53–64, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Liang Huang</author>
</authors>
<title>Forest reranking: Discriminative parsing with non-local features.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL-08: HLT,</booktitle>
<pages>586--594</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Columbus, Ohio,</location>
<contexts>
<context position="27952" citStr="Huang, 2008" startWordPosition="4420" endWordPosition="4421">ection 3.2). ther improve the plan execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based tr</context>
<context position="29864" citStr="Huang, 2008" startWordPosition="4713" endWordPosition="4714">reranking features that are less prone to over-fitting. Since typical reranking features rely on the combination and/or modification of nonterminals appearing in parse trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel method for using the weaker supervision provided by response feedback (e.g. the execution of infer</context>
</contexts>
<marker>Huang, 2008</marker>
<rawString>Liang Huang. 2008. Forest reranking: Discriminative parsing with non-local features. In Proceedings of ACL-08: HLT, pages 586–594, Columbus, Ohio, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Joachims</author>
</authors>
<title>Optimizing search engines using clickthrough data.</title>
<date>2002</date>
<booktitle>In Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD2002),</booktitle>
<location>Edmonton, Canada.</location>
<contexts>
<context position="29998" citStr="Joachims, 2002" startWordPosition="4737" endWordPosition="4738">n of nonterminals appearing in parse trees, for the large PCFG’s produced for grounded language learning, such features are very sparse and rare. Although the current features provide a significant increase in performance, oracle results imply that an even larger benefit may be achievable. In addition, employing other reranking methodologies, such as kernel methods (Collins, 2002b), and forest reranking exploiting a packed forest of exponentially many parse trees (Huang, 2008), is another area of future work. We also would like to apply our approach to other reranking algorithms such as SVMs (Joachims, 2002) and MaxEnt methods (Charniak and Johnson, 2005). 8 Conclusions In this paper, we have shown how to adapt discriminative reranking to grounded language learning. Since typical grounded language learning problems, such as navigation instruction following, do not provide the gold-standard reference parses required by standard reranking models, we have devised a novel method for using the weaker supervision provided by response feedback (e.g. the execution of inferred navigation plans) when training a perceptron-based reranker. This approach was shown to be very effective compared to the traditio</context>
</contexts>
<marker>Joachims, 2002</marker>
<rawString>Thorsten Joachims. 2002. Optimizing search engines using clickthrough data. In Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD2002), Edmonton, Canada.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joohyun Kim</author>
<author>Raymond J Mooney</author>
</authors>
<title>Unsupervised PCFG induction for grounded language learning with highly ambiguous supervision.</title>
<date>2012</date>
<booktitle>In Proceedings of the Conference on Empirical Methods in Natural Language Processing and Natural Language Learning, EMNLP-CoNLL</booktitle>
<pages>12</pages>
<contexts>
<context position="1494" citStr="Kim and Mooney (2012)" startWordPosition="212" endWordPosition="215"> parse trees. 1 Introduction Grounded language acquisition involves learning to comprehend and/or generate language by simply observing its use in a naturally occurring context in which the meaning of a sentence is grounded in perception and/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequence of actions provides very weak, ambiguous supervision for learning instructional language since there are many possible ways to describe the same execution path. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since thei</context>
<context position="6488" citStr="Kim and Mooney (2012)" startWordPosition="989" endWordPosition="992">nce aj. During learning, Chen and Mooney construct a landmarks plan ci for each training example, which includes the complete context observed in the world-state resulting from each observed action. The correct plan, pi, (which is latent and must be inferred) is assumed to be composed from a subset of the components in the corresponding landmarks plan. The landmarks and correct plans for a sample instruction are shown in Figure 1b. 2.2 PCFG Induction for Grounded Language Learning The baseline generative model we use for reranking employs the unsupervised PCFG induction approach introduced by Kim and Mooney (2012). This model is, in turn, based on the earlier model of B¨orschinger et al. (2011), which transforms the grounded language learning into unsupervised PCFG induction. The general approach uses grammar-formulation rules which construct CFG productions that form a grammar that effectively maps NL sentences to formal meaning representations (MRs) encoded in its nonterminals. After using Expectation-Maximization (EM) to estimate the parameters for these productions using the ambiguous supervision provided by the groundedlearning setting, it produces a PCFG whose most probable parse for a sentence e</context>
<context position="8718" citStr="Kim and Mooney (2012)" startWordPosition="1337" endWordPosition="1340">discriminatively reorder the top parses produced by this generative model. A simplified version of a sample parse tree for Kim and Mooney’s model is shown in Figure 2. 3 Modified Reranking Algorithm In reranking, a baseline generative model is first trained and generates a set of candidate outputs for each training example. Next, a second conditional model is trained which uses global features to rescore the candidates. Reranking using an averaged perceptron (Collins, 2002a) has been successfully applied to a variety of NLP tasks. Therefore, we modify it to rerank the parse trees generated by Kim and Mooney (2012)’s model. The approach requires three subcomponents: 1) a GEN function that returns the list of top n candidate parse trees for each NL sentence produced by the generative model, 2) a feature function 41) that maps a NL sentence, e, and a parse tree, y, into a real-valued feature vector 41)(e, y) ∈ Rd, and 3) a reference parse tree that is compared to the highest-scoring parse tree during training. However, grounded language learning tasks, such as our navigation task, do not provide reference parse trees for training examples. Instead, our modified model replaces the gold-standard reference p</context>
<context position="12284" citStr="Kim and Mooney (2012)" startWordPosition="1932" endWordPosition="1935">when executing underspecified plans, we execute each candidate plan 10 times, and its execution rate is the percentage of trials in which it reaches the correct destination. When there are multiple candidate parses tied for the highest execution rate, the one assigned the largest probability by the baseline model is selected. Our modified averaged perceptron procedure with such a response-based update is shown in Algorithm 1. One additional issue must be addressed when computing the output of the GEN function. The final plan MRs are produced from parse trees using compositional semantics (see Kim and Mooney (2012) for details). Consequently, the n-best parse trees for the baseline model do not necessarily produce the n-best distinct plans, since many parses can produce the same plan. Therefore, we adapt the GEN function to produce the n best distinct plans rather than the n best parses. This may require examining many more than the n best parses, because many parses have insignificant differences that do not affect the final plan. The score assigned to a plan is the probability of the most probable parse that generates that plan. In order to efficiently compute the n best plans, we modify the exact n-b</context>
<context position="19383" citStr="Kim and Mooney (2012)" startWordPosition="3058" endWordPosition="3061"> three maps. Each instruction is annotated with 1 to 15 human follower traces with an average of 10.4 actions per instruction. Each instruction contains an average of 5.0 sentences each with an average of 7.8 words. Chen and Mooney (2011) constructed a version of the data in which each sentence is annotated with the actions taken by the majority of followers when responding to this sentence. This single-sentence version is used for training. Manually annotated “gold standard” formal plans for each sentence are used for evaluation purposes only. We followed the same experimental methodology as Kim and Mooney (2012) and Chen and Mooney (2011). We performed “leave one environment out” cross-validation, i.e. 3 trials of training on two environments and testing on the third. The baseline model is first trained on data for two environments and then used to generate the n = 50 best plans for both training and testing instructions. As mentioned in Section 3.1, we need to generate many more top parse trees to get 50 distinct formal MR plans. We limit the number of best parse trees to 1,000,000, and even with this high limit, some training examples were left with less than 50 distinct plans.2 Each candidate 1Dat</context>
<context position="24846" citStr="Kim and Mooney (2012)" startWordPosition="3935" endWordPosition="3938">cal MR components that are crucial to the final navigation task. The overall result is very promising because it demonstrates how reranking can be applied to grounded language learning tasks where gold-standard parses are not readily available. 224 Parse Acc Plan Execution F1 Single Para Baseline 74.81 57.22 20.17 Gold 78.26 52.57 19.33 Single 73.32 59.65 22.62 Multi 73.43 62.81 26.57 Table 2: Reranking results comparing our response-based methods using single (Single) or multiple (Multi) pseudo-gold parses to the standard approach using a single gold-standard parse (Gold). Baseline refers to Kim and Mooney (2012)’s system. Reranking results use all features described in Section 4. “Single“ means the single-sentence version and “Para” means the full paragraph version of the corpus. Weight update with single vs. multiple reference parses Table 2 also shows performance when using multiple reference parse trees to update weights (cf. Section 3.2). Using multiple parses (Multi) clearly performs better for all evaluation metrics, particularly execution. As explained in Section 3.2, the single-best pseudo-gold parse provides weak, ambiguous feedback since it only provides a rough estimate of the response fee</context>
</contexts>
<marker>Kim, Mooney, 2012</marker>
<rawString>Joohyun Kim and Raymond J. Mooney. 2012. Unsupervised PCFG induction for grounded language learning with highly ambiguous supervision. In Proceedings of the Conference on Empirical Methods in Natural Language Processing and Natural Language Learning, EMNLP-CoNLL ’12.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ioannis Konstas</author>
<author>Mirella Lapata</author>
</authors>
<title>Conceptto-text generation via discriminative reranking.</title>
<date>2012</date>
<booktitle>In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics: Long Papers - Volume 1, ACL ’12,</booktitle>
<pages>369--378</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<contexts>
<context position="28297" citStr="Konstas and Lapata, 2012" startWordPosition="4469" endWordPosition="4472">ommon machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as following navigation instructions, are different, it would be interesting to try adapting these alternative approaches to su</context>
</contexts>
<marker>Konstas, Lapata, 2012</marker>
<rawString>Ioannis Konstas and Mirella Lapata. 2012. Conceptto-text generation via discriminative reranking. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics: Long Papers - Volume 1, ACL ’12, pages 369–378, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Percy Liang</author>
<author>Michael I Jordan</author>
<author>Dan Klein</author>
</authors>
<title>Learning dependency-based compositional semantics.</title>
<date>2011</date>
<booktitle>In Proceedings ofACL,</booktitle>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Portland, Oregon,</location>
<contexts>
<context position="28714" citStr="Liang et al., 2011" startWordPosition="4536" endWordPosition="4539">05), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as following navigation instructions, are different, it would be interesting to try adapting these alternative approaches to such problems. Acknowledgments We thank anonymous reviewers for their helpful comments to improve this paper. This work was funded by the NSF grant IIS-0712907 and IIS1016312. Experiments were performed on the Mastodon Cluster, provided by NSF Grant EIA0303609. 7 Future Work In the future, we would like to explore the construction of better, more-general reranking features that are less prone to over-fitting. Since </context>
</contexts>
<marker>Liang, Jordan, Klein, 2011</marker>
<rawString>Percy Liang, Michael I. Jordan, and Dan Klein. 2011. Learning dependency-based compositional semantics. In Proceedings ofACL, Portland, Oregon, June. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wei Lu</author>
<author>Hwee Tou Ng</author>
<author>Wee Sun Lee</author>
<author>Luke S Zettlemoyer</author>
</authors>
<title>A generative model for parsing natural language to meaning representations.</title>
<date>2008</date>
<booktitle>In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing (EMNLP08),</booktitle>
<location>Honolulu, HI,</location>
<contexts>
<context position="2531" citStr="Lu et al., 2008" startWordPosition="366" endWordPosition="369">ath. Although their approach improved accuracy on the navigation task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction. Therefore, it is impossible to dire</context>
<context position="15529" citStr="Lu et al. (2008)" startWordPosition="2456" endWordPosition="2459">iminative reranker. In addition, as shown in line 2 of the algorithm above, it uses the difference in execution rates between a candidate and the currently preferred parse to weight the update to the parameters for that candidate. This allows more effective plans to have a larger impact on the learned model in each iteration. 4 Reranking Features This section describes the features Φ extracted from parses produced by the generative model and used to rerank the candidates. 4.1 Base Features The base features adapt those used in previous reranking methods, specifically those of Collins (2002a), Lu et al. (2008), and Ge and Mooney (2006), which are directly extracted from parse trees. In addition, we also include the log probability of the parse tree as an additional feature. Figure 3 shows a sample full parse tree from our baseline model, which is used when explaining the 221 Ll: Turn(LEFT), Verify(front : SOFA, back: EASEL), Travel(steps : 2), Verify(at : SOFA), Turn(RIGHT) Le: Turn() P hra 222 the reranking model to over-fit the training data and prevent it from generalizing properly. Therefore, we also tried constructing more general features that are less sparse. First, we construct generalized </context>
<context position="27987" citStr="Lu et al., 2008" startWordPosition="4424" endWordPosition="4427">an execution performance, and reranking using all of the feature groups (All) performs the best, as expected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on le</context>
</contexts>
<marker>Lu, Ng, Lee, Zettlemoyer, 2008</marker>
<rawString>Wei Lu, Hwee Tou Ng, Wee Sun Lee, and Luke S. Zettlemoyer. 2008. A generative model for parsing natural language to meaning representations. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing (EMNLP08), Honolulu, HI, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Matt MacMahon</author>
<author>Brian Stankiewicz</author>
<author>Benjamin Kuipers</author>
</authors>
<title>Walk the talk: connecting language, knowledge, and action in route instructions.</title>
<date>2006</date>
<booktitle>In proceedings of the 21st national conference on Artificial intelligence - Volume 2, AAAI’06,</booktitle>
<pages>1475--1482</pages>
<publisher>AAAI Press.</publisher>
<contexts>
<context position="5748" citStr="MacMahon et al. (2006)" startWordPosition="872" endWordPosition="875">y simply observing humans follow sample directions. Formally speaking, given training examples of the form (ei, ai, wi), where ei is an NL instruction, ai is an executed action sequence for the instruction, and wi is the initial world state, we want to learn to produce an appropriate action sequence aj given a novel (ej, wj). More specifically, one must learn a semantic parser that produces a plan pj using a formal meaning representation (MR) language introduced by Chen and Mooney (2011). This plan is then executed by a simulated robot in a virtual environment. The MARCO system, introduced by MacMahon et al. (2006), executes the formal plan, flexibly adapting to situations encountered during execution and producing the action sequence aj. During learning, Chen and Mooney construct a landmarks plan ci for each training example, which includes the complete context observed in the world-state resulting from each observed action. The correct plan, pi, (which is latent and must be inferred) is assumed to be composed from a subset of the components in the corresponding landmarks plan. The landmarks and correct plans for a sample instruction are shown in Figure 1b. 2.2 PCFG Induction for Grounded Language Lear</context>
<context position="11500" citStr="MacMahon et al., 2006" startWordPosition="1807" endWordPosition="1810"> vein, when reranking semantic parses, Ge and Mooney (2006) chose as a reference parse the one which was most similar to the gold-standard semantic annotation. However, in the navigation task, the ultimate goal is to generate a plan that, when actually executed in the virtual environment, leads to the desired destination. Therefore, the pseudo-gold reference is chosen as the candidate parse that produces the MR plan with the great220 est execution success. This requires an external module that evaluates the execution accuracy of the candidate parses. For the navigation task, we use the MARCO (MacMahon et al., 2006) execution module, which is also used to evaluate how well the overall system learns to follow directions (Chen and Mooney, 2011). Since MARCO is nondeterministic when executing underspecified plans, we execute each candidate plan 10 times, and its execution rate is the percentage of trials in which it reaches the correct destination. When there are multiple candidate parses tied for the highest execution rate, the one assigned the largest probability by the baseline model is selected. Our modified averaged perceptron procedure with such a response-based update is shown in Algorithm 1. One add</context>
<context position="18525" citStr="MacMahon et al. (2006)" startWordPosition="2919" endWordPosition="2922"> and L4. b) Descended Action Unigram. Same as Descended Action, but also includes the current nonterminal: f(Turn(LEFT)|L1) = 1. c) Grandparent Descended Action Unigram. Same as Descended Action Unigram, but additionally includes the parent nonterminal as well as the current one: f(Turn(LEFT)|L2, L1) = 1. d) Long-range Descended Action Unigram. Indicates whether a given atomic action in a nonterminal descends to a child nonterminal and this child generates a given NL word below it: f(Turn(LEFT) ❀ left) = 1 5 Experimental Evaluation 5.1 Data and Methodology The navigation data was collected by MacMahon et al. (2006), and includes English instructions and human follower data.1 The data contains 706 route instructions for three virtual worlds. The instructions were produced by six instructors for 126 unique starting and ending location pairs over the three maps. Each instruction is annotated with 1 to 15 human follower traces with an average of 10.4 actions per instruction. Each instruction contains an average of 5.0 sentences each with an average of 7.8 words. Chen and Mooney (2011) constructed a version of the data in which each sentence is annotated with the actions taken by the majority of followers wh</context>
</contexts>
<marker>MacMahon, Stankiewicz, Kuipers, 2006</marker>
<rawString>Matt MacMahon, Brian Stankiewicz, and Benjamin Kuipers. 2006. Walk the talk: connecting language, knowledge, and action in route instructions. In proceedings of the 21st national conference on Artificial intelligence - Volume 2, AAAI’06, pages 1475– 1482. AAAI Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Deb Roy</author>
</authors>
<title>Learning visually grounded words and syntax for a scene description task.</title>
<date>2002</date>
<journal>Computer Speech and Language,</journal>
<volume>16</volume>
<issue>3</issue>
<contexts>
<context position="1135" citStr="Roy, 2002" startWordPosition="162" endWordPosition="163">nking used in syntactic and semantic parsing, gold-standard reference trees are not naturally available in a grounded setting. Instead, we show how the weak supervision of response feedback (e.g. successful task completion) can be used as an alternative, experimentally demonstrating that its performance is comparable to training on gold-standard parse trees. 1 Introduction Grounded language acquisition involves learning to comprehend and/or generate language by simply observing its use in a naturally occurring context in which the meaning of a sentence is grounded in perception and/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011</context>
</contexts>
<marker>Roy, 2002</marker>
<rawString>Deb Roy. 2002. Learning visually grounded words and syntax for a scene description task. Computer Speech and Language, 16(3):353–385.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Libin Shen</author>
<author>Anoop Sarkar</author>
<author>Franz Josef Och</author>
</authors>
<title>Discriminative reranking for machine translation.</title>
<date>2004</date>
<booktitle>In Daniel Marcu Susan Dumais and Salim Roukos, editors, HLT-NAACL 2004: Main Proceedings,</booktitle>
<volume>2</volume>
<pages>177--184</pages>
<location>Boston, Massachusetts, USA,</location>
<contexts>
<context position="28181" citStr="Shen et al., 2004" startWordPosition="4451" endWordPosition="4454"> for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as followin</context>
</contexts>
<marker>Shen, Sarkar, Och, 2004</marker>
<rawString>Libin Shen, Anoop Sarkar, and Franz Josef Och. 2004. Discriminative reranking for machine translation. In Daniel Marcu Susan Dumais and Salim Roukos, editors, HLT-NAACL 2004: Main Proceedings, pages 177–184, Boston, Massachusetts, USA, May 2 -May 7. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kristina Toutanova</author>
<author>Aria Haghighi</author>
<author>Christopher D Manning</author>
</authors>
<title>Joint learning improves semantic role labeling.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43nd Annual Meeting of the Association for Computational Linguistics (ACL-05),</booktitle>
<pages>589--596</pages>
<location>Ann Arbor, MI,</location>
<contexts>
<context position="2602" citStr="Toutanova et al., 2005" startWordPosition="378" endWordPosition="381">n task compared to the original work of Chen and Mooney (2011), it was still far from human performance. Since their system employs a generative model, discriminative reranking (Collins, 2000) could potentially improve its performance. By training a discriminative classifier that uses global features of complete parses to identify correct interpretations, a reranker can significantly improve the accuracy of a generative model. Reranking has been successfully employed to improve syntactic parsing (Collins, 2002b), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), semantic role labeling (Toutanova et al., 2005), and named entity recognition (Collins, 2002c). Standard reranking requires gold-standard interpretations (e.g. parse trees) to train the discriminative classifier. However, grounded language learning does not provide gold-standard interpretations for the training examples. Only the ambiguous perceptual context of the utterance is provided as supervision. For the navigation task, this supervision consists of the observed sequence of actions taken by a human when following an instruction. Therefore, it is impossible to directly apply conventional discriminative reranking to such problems. We s</context>
<context position="28098" citStr="Toutanova et al., 2005" startWordPosition="4440" endWordPosition="4443">ected. However, since our model is optimizing plan execution during training, the results for parse accuracy are always worse than the baseline model. 6 Related Work Discriminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Lia</context>
</contexts>
<marker>Toutanova, Haghighi, Manning, 2005</marker>
<rawString>Kristina Toutanova, Aria Haghighi, and Christopher D. Manning. 2005. Joint learning improves semantic role labeling. In Proceedings of the 43nd Annual Meeting of the Association for Computational Linguistics (ACL-05), pages 589–596, Ann Arbor, MI, June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael White</author>
<author>Rajakrishnan Rajkumar</author>
</authors>
<title>Perceptron reranking for CCG realization.</title>
<date>2009</date>
<booktitle>In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume</booktitle>
<volume>1</volume>
<pages>410--419</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Stroudsburg, PA, USA.</location>
<contexts>
<context position="28270" citStr="White and Rajkumar, 2009" startWordPosition="4464" endWordPosition="4468">iminative reranking is a common machine learning technique to improve the output of generative models. It has been shown to be effective for various natural language processing tasks including syntactic parsing (Collins, 2000; Collins, 2002b; Collins and Koo, 2005; Charniak and Johnson, 2005; Huang, 2008), semantic parsing (Lu et al., 2008; Ge and Mooney, 2006), partof-speech tagging (Collins, 2002a), semantic role labeling (Toutanova et al., 2005), named entity recognition (Collins, 2002c). machine translation (Shen et al., 2004; Fraser and Marcu, 2006) and surface realization in generation (White and Rajkumar, 2009; Konstas and Lapata, 2012). However, to our knowledge, there has been no previous attempt to apply discriminative reranking to grounded language acquisition, where goldstandard reference parses are not typically available for training reranking models. Our use of response-based training is similar 225 to work on learning semantic parsers from execution output such as the answers to database queries (Clarke et al., 2010; Liang et al., 2011). Although the demands of grounded language tasks, such as following navigation instructions, are different, it would be interesting to try adapting these a</context>
</contexts>
<marker>White, Rajkumar, 2009</marker>
<rawString>Michael White and Rajakrishnan Rajkumar. 2009. Perceptron reranking for CCG realization. In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 1 -Volume 1, EMNLP ’09, pages 410–419, Stroudsburg, PA, USA. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chen Yu</author>
<author>Dana H Ballard</author>
</authors>
<title>On the integration of grounding language and learning objects.</title>
<date>2004</date>
<booktitle>In Proceedings of the Nineteenth National Conference on Artificial Intelligence (AAAI-04),</booktitle>
<pages>488--493</pages>
<contexts>
<context position="1157" citStr="Yu and Ballard, 2004" startWordPosition="164" endWordPosition="167">in syntactic and semantic parsing, gold-standard reference trees are not naturally available in a grounded setting. Instead, we show how the weak supervision of response feedback (e.g. successful task completion) can be used as an alternative, experimentally demonstrating that its performance is comparable to training on gold-standard parse trees. 1 Introduction Grounded language acquisition involves learning to comprehend and/or generate language by simply observing its use in a naturally occurring context in which the meaning of a sentence is grounded in perception and/or action (Roy, 2002; Yu and Ballard, 2004; Gold and Scassellati, 2007; Chen et al., 2010). B¨orschinger et al. (2011) introduced an approach that reduces grounded language learning to unsupervised probabilistic context-free grammar (PCFG) induction and demonstrated its effectiveness on the task of sportscasting simulated robot soccer games. Subsequently, Kim and Mooney (2012) extended their approach to make it tractable for the more complex problem of learning to follow natural-language navigation instructions from observations of humans following such instructions in a virtual environment (Chen and Mooney, 2011). The observed sequen</context>
</contexts>
<marker>Yu, Ballard, 2004</marker>
<rawString>Chen Yu and Dana H. Ballard. 2004. On the integration of grounding language and learning objects. In Proceedings of the Nineteenth National Conference on Artificial Intelligence (AAAI-04), pages 488–493.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>