<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<title confidence="0.9987315">
Dependency Parsing of Japanese Spoken Monologue
Based on Clause Boundaries
</title>
<author confidence="0.908727">
Tomohiro Ohnota) Shigeki Matsubara$ Hideki Kashioka§
Takehiko Maruyamaa and Yasuyoshi Inagaki�
</author>
<affiliation confidence="0.9878282">
tGraduate School of Information Science, Nagoya University, Japan
$Information Technology Center, Nagoya University, Japan
§ATR Spoken Language Communication Research Laboratories, Japan
OThe National Institute for Japanese Language, Japan
Waculty of Information Science and Technology, Aichi Prefectural University, Japan
</affiliation>
<email confidence="0.997959">
a)ohno@el.itc.nagoya-u.ac.jp
</email>
<sectionHeader confidence="0.993888" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999425">
Spoken monologues feature greater sen-
tence length and structural complexity
than do spoken dialogues. To achieve high
parsing performance for spoken mono-
logues, it could prove effective to sim-
plify the structure by dividing a sentence
into suitable language units. This paper
proposes a method for dependency pars-
ing of Japanese monologues based on sen-
tence segmentation. In this method, the
dependency parsing is executed in two
stages: at the clause level and the sen-
tence level. First, the dependencies within
a clause are identified by dividing a sen-
tence into clauses and executing stochastic
dependency parsing for each clause. Next,
the dependencies over clause boundaries
are identified stochastically, and the de-
pendency structure of the entire sentence
is thus completed. An experiment using
a spoken monologue corpus shows this
method to be effective for efficient depen-
dency parsing of Japanese monologue sen-
tences.
</bodyText>
<sectionHeader confidence="0.999134" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999958595238095">
Recently, monologue data such as a lecture and
commentary by a professional have been consid-
ered as human valuable intellectual property and
have gathered attention. In applications, such as
automatic summarization, machine translation and
so on, for using these monologue data as intel-
lectual property effectively and efficiently, it is
necessary not only just to accumulate but also to
structure the monologue data. However, few at-
tempts have been made to parse spoken mono-
logues. Spontaneously spoken monologues in-
clude a lot of grammatically ill-formed linguistic
phenomena such as fillers, hesitations and self-
repairs. In order to robustly deal with their extra-
grammaticality, some techniques for parsing of di-
alogue sentences have been proposed (Core and
Schubert, 1999; Delmonte, 2003; Ohno et al.,
2005b). On the other hand, monologues also have
the characteristic feature that a sentence is gen-
erally longer and structurally more complicated
than a sentence in dialogues which have been dealt
with by the previous researches. Therefore, for
a monologue sentence the parsing time would in-
crease and the parsing accuracy would decrease. It
is thought that more effective, high-performance
spoken monologue parsing could be achieved by
dividing a sentence into suitable language units for
simplicity.
This paper proposes a method for dependency
parsing of monologue sentences based on sen-
tence segmentation. The method executes depen-
dency parsing in two stages: at the clause level
and at the sentence level. First, a dependency rela-
tion from one bunsetsu1 to another within a clause
is identified by dividing a sentence into clauses
based on clause boundary detection and then ex-
ecuting stochastic dependency parsing for each
clause. Next, the dependency structure of the en-
tire sentence is completed by identifying the de-
pendencies over clause boundaries stochastically.
An experiment on monologue dependency pars-
ing showed that the parsing time can be drasti-
</bodyText>
<footnote confidence="0.968961142857143">
1A bunsetsu is the linguistic unit in Japanese that roughly
corresponds to a basic phrase in English. A bunsetsu con-
sists of one independent word and more than zero ancillary
words. A dependency is a modification relation in which a
dependent bunsetsu depends on a head bunsetsu. That is, the
dependent bunsetsu and the head bunsetsu work as modifier
and modifyee, respectively.
</footnote>
<page confidence="0.943418">
169
</page>
<note confidence="0.970977">
Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 169–176,
Sydney, July 2006. c�2006 Association for Computational Linguistics
</note>
<figureCaption confidence="0.987684">
Figure 1: Relation between clause boundary and
dependency structure
</figureCaption>
<bodyText confidence="0.984724777777778">
cally shortened and the parsing accuracy can be
increased.
This paper is organized as follows: The next
section describes a parsing unit of Japanese mono-
logue. Section 3 presents dependency parsing
based on clause boundaries. The parsing experi-
ment and the discussion are reported in Sections
4 and 5, respectively. The related works are de-
scribed in Section 6.
</bodyText>
<sectionHeader confidence="0.911251" genericHeader="introduction">
2 Parsing Unit of Japanese Monologues
</sectionHeader>
<bodyText confidence="0.999981">
Our method achieves an efficient parsing by adopt-
ing a shorter unit than a sentence as a parsing unit.
Since the search range of a dependency relation
can be narrowed by dividing a long monologue
sentence into small units, we can expect the pars-
ing time to be shortened.
</bodyText>
<subsectionHeader confidence="0.986365">
2.1 Clauses and Dependencies
</subsectionHeader>
<bodyText confidence="0.989780631578947">
In Japanese, a clause basically contains one verb
phrase. Therefore, a complex sentence or a com-
pound sentence contains one or more clauses.
Moreover, since a clause constitutes a syntacti-
cally sufficient and semantically meaningful lan-
guage unit, it can be used as an alternative parsing
unit to a sentence.
Our proposed method assumes that a sentence
is a sequence of one or more clauses, and every
bunsetsu in a clause, except the final bunsetsu,
depends on another bunsetsu in the same clause.
As an example, the dependency structure of the
Japanese sentence:
先日総理府が発表いたしました世論調査によ
りますと死刑を支持するという人が八十パーセ
ント近くになっております(The public opinion
poll that the Prime Minister’s Office announced
the other day indicates that the ratio of people
advocating capital punishment is nearly 80%)
</bodyText>
<listItem confidence="0.931081818181818">
is presented in Fig. 1. This sentence consists of
four clauses:
• 先日総理府が発表いたしました (that the
Prime Minister’s Office announced the other
day)
• 世論調査によりますと (The public opinion
poll indicates that)
• 死刑を支持するという (advocating capital
punishment)
• 人が八十パーセント近くになっております
(the ratio of people is nearly 80%)
</listItem>
<bodyText confidence="0.97132225">
Each clause forms a dependency structure (solid
arrows in Fig. 1), and a dependency relation from
the final bunsetsu links the clause with another
clause (dotted arrows in Fig. 1).
</bodyText>
<subsectionHeader confidence="0.999083">
2.2 Clause Boundary Unit
</subsectionHeader>
<bodyText confidence="0.999983357142857">
In adopting a clause as an alternative parsing unit,
it is necessary to divide a monologue sentence
into clauses as the preprocessing for the follow-
ing dependency parsing. However, since some
kinds of clauses are embedded in main clauses,
it is fundamentally difficult to divide a mono-
logue into clauses in one dimension (Kashioka and
Maruyama, 2004).
Therefore, by using a clause boundary anno-
tation program (Maruyama et al., 2004), we ap-
proximately achieve the clause segmentation of
a monologue sentence. This program can iden-
tify units corresponding to clauses by detecting
the end boundaries of clauses. Furthermore, the
program can specify the positions and types of
clause boundaries simply from a local morpho-
logical analysis. That is, for a sentence mor-
phologically analyzed by ChaSen (Matsumoto et
al., 1999), the positions of clause boundaries are
identified and clause boundary labels are inserted
there. There exist 147 labels such as “compound
clause” and “adnominal clause.” 2
In our research, we adopt the unit sandwiched
between two clause boundaries detected by clause
boundary analysis, were called the clause bound-
ary unit, as an alternative parsing unit. Here, we
regard the label name provided for the end bound-
ary of a clause boundary unit as that unit’s type.
</bodyText>
<footnote confidence="0.96518225">
2The labels include a few other constituents that do not
strictly represent clause boundaries but can be regarded as be-
ing syntactically independent elements, such as “topicalized
element,” “conjunctives,” “interjections,” and so on.
</footnote>
<page confidence="0.998305">
170
</page>
<tableCaption confidence="0.999658">
Table 1: 200 sentences in “Asu-Wo-Yomu”
</tableCaption>
<subsectionHeader confidence="0.9983575">
2.3 Relation between Clause Boundary Units
and Dependency Structures
</subsectionHeader>
<bodyText confidence="0.999984">
To clarify the relation between clause boundary
units and dependency structures, we investigated
the monologue corpus “Asu-Wo-Yomu 3.” In the
investigation, we used 200 sentences for which
morphological analysis, bunsetsu segmentation,
clause boundary analysis, and dependency pars-
ing were automatically performed and then modi-
fied by hand. Here, the specification of the parts-
of-speech is in accordance with that of the IPA
parts-of-speech used in the ChaSen morphologi-
cal analyzer (Matsumoto et al., 1999), the rules
of the bunsetsu segmentation with those of CSJ
(Maekawa et al., 2000), the rules of the clause
boundary analysis with those of Maruyama et
al. (Maruyama et al., 2004), and the dependency
grammar with that of the Kyoto Corpus (Kuro-
hashi and Nagao, 1997).
Table 1 shows the results of analyzing the 200
sentences. Among the 1,479 bunsetsus in the dif-
ference set between all bunsetsus (2,430) and the
final bunsetsus (951) of clause boundary units,
only 94 bunsetsus depend on a bunsetsu located
outside the clause boundary unit. This result
means that 93.6% (1,385/1,479) of all dependency
relations are within a clause boundary unit. There-
fore, the results confirmed that the assumption
made by our research is valid to some extent.
</bodyText>
<sectionHeader confidence="0.9271295" genericHeader="method">
3 Dependency Parsing Based on Clause
Boundaries
</sectionHeader>
<bodyText confidence="0.998189">
In accordance with the assumption described in
Section 2, in our method, the transcribed sentence
on which morphological analysis, clause bound-
ary detection, and bunsetsu segmentation are per-
formed is considered the input 4. The dependency
3Asu-Wo-Yomu is a collection of transcriptions of a TV
commentary program of the Japan Broadcasting Corporation
(NHK). The commentator speaks on some current social is-
sue for 10 minutes.
</bodyText>
<footnote confidence="0.80317">
4It is difficult to preliminarily divide a monologue into
sentences because there are no clear sentence breaks in mono-
logues. However, since some methods for detecting sentence
boundaries have already been proposed (Huang and Zweig,
2002; Shitaoka et al., 2004), we assume that they can be de-
tected automatically before dependency parsing.
</footnote>
<bodyText confidence="0.5626845">
parsing is executed based on the following proce-
dures:
</bodyText>
<listItem confidence="0.9091074">
1. Clause-level parsing: The internal depen-
dency relations of clause boundary units are
identified for every clause boundary unit in
one sentence.
2. Sentence-level parsing: The dependency
relations in which the dependent unit is the fi-
nal bunsetsu of the clause boundary units are
identified.
In this paper, we describe a sequence of clause
boundary units in a sentence as C1 · · · Cm, a se-
quence of bunsetsus in a clause boundary unit Ci
as bi1 · · · bini, a dependency relation in which the
dependent bunsetsu is a bunsetsu bik as dep(bik),
and a dependency structure of a sentence as
{dep(bi), · · · , dep(bmnm−1)}.
</listItem>
<bodyText confidence="0.843847636363636">
First, our method parses the dependency struc-
ture {dep(bi1), · · · , dep(bini−1)} within the clause
boundary unit whenever a clause boundary unit
Ci is inputted. Then, it parses the dependency
structure {dep(b1n1), · · · , dep(bm−1
nm�1)}, which is a
set of dependency relations whose dependent bun-
setsu is the final bunsetsu of each clause boundary
unit in the input sentence. In addition, in both of
the above procedures, our method assumes the fol-
lowing three syntactic constraints:
</bodyText>
<listItem confidence="0.9493495">
1. No dependency is directed from right to left.
2. Dependencies don’t cross each other.
3. Each bunsetsu, except the final one in a sen-
tence, depends on only one bunsetsu.
</listItem>
<bodyText confidence="0.8740335">
These constraints are usually used for Japanese de-
pendency parsing.
</bodyText>
<subsectionHeader confidence="0.99977">
3.1 Clause-level Dependency Parsing
</subsectionHeader>
<bodyText confidence="0.986421636363637">
Dependency parsing within a clause boundary
unit, when the sequence of bunsetsus in an input
clause boundary unit Ci is described as Bi (=
bi1 · · · bini), identifies the dependency structure
Si (= {dep(bi1), · · · , dep(bini−1)}), which max-
imizes the conditional probability P(Si|Bi). At
this level, the head bunsetsu of the final bunsetsu
bini of a clause boundary unit is not identified.
Assuming that each dependency is independent
of the others, P(Si|Bi) can be calculated as fol-
lows:
</bodyText>
<equation confidence="0.707056">
P (Si|Bi) = ni−1H P(bk _ bi |BZ), (1)
k=1
</equation>
<figure confidence="0.9424574">
sentences 200
clause boundary units 951
bunsetsus 2,430
morphemes 6,017
dependencies over clause boundaries 94
</figure>
<page confidence="0.988563">
171
</page>
<bodyText confidence="0.9999787">
where P(bk * bil  |Bi) is the probability that a bun-
setsu bik depends on a bunsetsu bil when the se-
quence of bunsetsus Bi is provided. Unlike the
conventional stochastic sentence-by-sentence de-
pendency parsing method, in our method, Bi is
the sequence of bunsetsus that constitutes not a
sentence but a clause. The structure Si, which
maximizes the conditional probability P(Si|Bi),
is regarded as the dependency structure of Bi and
calculated by dynamic programming (DP).
</bodyText>
<equation confidence="0.436641">
rel
Next, we explain the calculation of P(bi +
k
</equation>
<bodyText confidence="0.999939333333333">
bil|Bi). First, the basic form of independent words
in a dependent bunsetsu is represented by hik, its
parts-of-speech tik, and type of dependency rik,
while the basic form of the independent word in
a head bunsetsu is represented by hil, and its parts-
of-speech til. Furthermore, the distance between
bunsetsus is described as diikl. Here, if a dependent
bunsetsu has one or more ancillary words, the type
of dependency is the lexicon, part-of-speech and
conjugated form of the rightmost ancillary word,
and if not so, it is the part-of-speech and conju-
gated form of the rightmost morpheme. The type
of dependency rik is the same attribute used in
our stochastic method proposed for robust depen-
dency parsing of spoken language dialogue (Ohno
et al., 2005b). Then diikl takes 1 or more than 1,
that is, a binary value. Incidentally, the above
attributes are the same as those used by the con-
ventional stochastic dependency parsing methods
(Collins, 1996; Ratnaparkhi, 1997; Fujio and Mat-
sumoto, 1998; Uchimoto et al., 1999; Charniak,
2000; Kudo and Matsumoto, 2002).
Additionally, we prepared the attribute eil to in-
dicate whether bil is the final bunsetsu of a clause
boundary unit. Since we can consider a clause
boundary unit as a unit corresponding to a sim-
ple sentence, we can treat the final bunsetsu of a
clause boundary unit as a sentence-end bunsetsu.
The attribute that indicates whether a head bun-
setsu is a sentence-end bunsetsu has often been
used in conventional sentence-by-sentence parsing
methods (e.g. Uchimoto et al., 1999).
By using the above attributes, the conditional
</bodyText>
<equation confidence="0.965620153846154">
rel
probability P(bk bil  |Bi) is calculated as fol-
lows:
rel
P(bi + bi l|Bi) (2)
k
rel
�=P(bi � bi l|hi k,hi l,ti k,ti l,ri k,dii kl,ei l)
k
rel
F(bi � bi l, hi k, hi l,ti k, ti l, ri k, dii kl, ei l)
k
F (hik, hil, tik, til, rik, diikl, eil) .
</equation>
<bodyText confidence="0.9963145">
Note that F is a co-occurrence frequency function.
In order to resolve the sparse data problems
</bodyText>
<equation confidence="0.917721666666667">
rel
caused by estimating P(bi � bi l|Bi) with formula
k
</equation>
<bodyText confidence="0.9580828">
(2), we adopted the smoothing method described
by Fujio and Matsumoto (Fujio and Matsumoto,
1998): if F(hik, hil, tik, til, rik, dii kl, eil) in formula (2)
is 0, we estimate P(bk 1 bil  |Bi) by using formula
(3).
</bodyText>
<equation confidence="0.9968315">
P(bk _ bi |BZ) (3)
rel
�= P(bi + bi l|ti k, ti l, ri k, dii kl, ei l)
k
rel
F (bi � bi l,ti k,ti l,ri k,dii kl, ei l)
k
F (tik, til, rik, diikl, eil)
</equation>
<subsectionHeader confidence="0.99891">
3.2 Sentence-level Dependency Parsing
</subsectionHeader>
<bodyText confidence="0.999101333333333">
Here, the head bunsetsu of the final bunsetsu
of a clause boundary unit is identified. Let
B (= B1 · · · Bn) be the sequence of bunset-
sus of one sentence and Sfin be a set of de-
pendency relations whose dependent bunsetsu is
the final bunsetsu of a clause boundary unit,
</bodyText>
<equation confidence="0.616842">
{dep(b1nl), · · · , dep(bm−1
</equation>
<bodyText confidence="0.987558333333333">
n���)�; then Sfin, which
makes P(Sfin|B) the maximum, is calculated by
DP. The P(Sfin|B) can be calculated as follows:
</bodyText>
<equation confidence="0.783894666666667">
P(bnzrel
+ bjl  |B), (4)
rel
</equation>
<bodyText confidence="0.983680272727273">
where P(bi � bj l |B) is the probability that a
nz
bunsetsu binz depends on a bunsetsu bjl when the
sequence of the sentence’s bunsetsus, B, is pro-
vided. Our method parses by giving consideration
to the dependency structures in each clause bound-
ary unit, which were previously parsed. That is,
the method does not consider all bunsetsus lo-
cated on the right-hand side as candidates for a
head bunsetsu but calculates only dependency re-
lations within each clause boundary unit that do
not cross any other relation in previously parsed
dependency structures. In the case of Fig. 1,
the method calculates by assuming that only three
bunsetsus “,U (the ratio of people),” or “4�-D
Z�39�t (is)” can be the head bunsetsu of the
bunsetsu “Mf,traLL *15 (advocating).”
In addition, P(bnz -* bjl |B) is calculated as in
Eq. (5). Equation (5) uses all of the attributes used
in Eq. (2), in addition to the attribute sjl , which
indicates whether the head bunsetsu of bjl is the
final bunsetsu of a sentence. Here, we take into
</bodyText>
<equation confidence="0.9984095">
P(Sfin|B) = m−1�
i=1
</equation>
<page confidence="0.99525">
172
</page>
<tableCaption confidence="0.87206">
Table 2: Size of experimental data set (Asu-Wo-
</tableCaption>
<table confidence="0.8095435">
Yomu)
test data learning data
programs 8 95
sentences 500 5,532
clause boundary units 2,237 26,318
bunsetsus 5,298 65,821
morphemes 13,342 165,129
Note that the commentator of each program is different.
</table>
<tableCaption confidence="0.805522">
Table 3: Experimental results on parsing time
</tableCaption>
<figure confidence="0.991490777777778">
Parsng time [msec]
400
250
200
350
300
150
100
50
0
our method
conv. method
average time (msec)
our method
10.9
conv. method
0 5 10 15 20 25 30
51.9 Length of sentence [number of bunsetsu]
</figure>
<figureCaption confidence="0.9196625">
programming language: LISP
computer used: Pentium4 2.4 GHz, Linux
</figureCaption>
<bodyText confidence="0.99605325">
account the analysis result that about 70% of the
final bunsetsus of clause boundary units depend on
the final bunsetsu of other clause boundary units 5
and also use the attribute ejl at this phase.
</bodyText>
<equation confidence="0.9524299">
rel
P(bi → bj l |B) (5)
ni
rel
∼=P (bi →bj l |hi ni, hj l , ti ni, tj l , ri ni, dij nil, ej l , sj l )
ni
rel
F(bi →bj l ,hi ni,hj l ,ti ni,tj l ,ri ni,dij nil,ej l , sj l )
ni
F(hini, hjl , tini, tjl , rini, dijnil, ejl , sj l)
</equation>
<sectionHeader confidence="0.982173" genericHeader="method">
4 Parsing Experiment
</sectionHeader>
<bodyText confidence="0.999855">
To evaluate the effectiveness of our method for
Japanese spoken monologue, we conducted an ex-
periment on dependency parsing.
</bodyText>
<subsectionHeader confidence="0.948014">
4.1 Outline of Experiment
</subsectionHeader>
<bodyText confidence="0.999980533333333">
We used the spoken monologue corpus “ Asu-
Wo-Yomu, ”annotated with information on mor-
phological analysis, clause boundary detection,
bunsetsu segmentation, and dependency analy-
sis6. Table 2 shows the data used for the ex-
periment. We used 500 sentences as the test
data. Although our method assumes that a depen-
dency relation does not cross clause boundaries,
there were 152 dependency relations that contra-
dicted this assumption. This means that the depen-
dency accuracy of our method is not over 96.8%
(4,646/4,798). On the other hand, we used 5,532
sentences as the learning data.
To carry out comparative evaluation of our
method’s effectiveness, we executed parsing for
</bodyText>
<footnote confidence="0.9953775">
5We analyzed the 200 sentences described in Section 2.3
and confirmed 70.6% (522/751) of the final bunsetsus of
clause boundary units depended on the final bunsetsu of other
clause boundary units.
6Here, the specifications of these annotations are in accor-
dance with those described in Section 2.3.
</footnote>
<figureCaption confidence="0.970212">
Figure 2: Relation between sentence length and
parsing time
</figureCaption>
<bodyText confidence="0.996487666666667">
the above-mentioned data by the following two
methods and obtained, respectively, the parsing
time and parsing accuracy.
</bodyText>
<listItem confidence="0.930549416666667">
• Our method: First, our method provides
clause boundaries for a sequence of bunset-
sus of an input sentence and identifies all
clause boundary units in a sentence by per-
forming clause boundary analysis (CBAP)
(Maruyama et al., 2004). After that, our
method executes the dependency parsing de-
scribed in Section 3.
• Conventional method: This method parses
a sentence at one time without dividing it into
clause boundary units. Here, the probability
that a bunsetsu depends on another bunsetsu,
</listItem>
<bodyText confidence="0.846386166666667">
when the sequence of bunsetsus of a sentence
is provided, is calculated as in Eq. (5), where
the attribute e was eliminated. This conven-
tional method has been implemented by us
based on the previous research (Fujio and
Matsumoto, 1998).
</bodyText>
<subsectionHeader confidence="0.983906">
4.2 Experimental Results
</subsectionHeader>
<bodyText confidence="0.994125214285714">
The parsing times of both methods are shown in
Table 3. The parsing speed of our method im-
proves by about 5 times on average in comparison
with the conventional method. Here, the parsing
time of our method includes the time taken not
only for the dependency parsing but also for the
clause boundary analysis. The average time taken
for clause boundary analysis was about 1.2 mil-
lisecond per sentence. Therefore, the time cost of
performing clause boundary analysis as a prepro-
cessing of dependency parsing can be considered
small enough to disregard. Figure 2 shows the re-
lation between sentence length and parsing time
=
</bodyText>
<page confidence="0.999618">
173
</page>
<tableCaption confidence="0.997886">
Table 4: Experimental results on parsing accuracy
</tableCaption>
<bodyText confidence="0.802188">
our method conv. method
bunsetsu within a clause boundary unit (except final bunsetsu) 88.2% (2,701/3,061) 84.7% (2,592/3,061)
final bunsetsu of a clause boundary unit 65.6% (1,140/1,737) 63.3% (1,100/1,737)
total 80.1% (3,841/4,798) 76.9% (3,692/4,798)
</bodyText>
<tableCaption confidence="0.9706105">
Table 5: Experimental results on clause boundary
analysis (CBAP)
</tableCaption>
<table confidence="0.823624">
recall 95.7% (2,140/2,237)
precision 96.9% (2,140/2,209)
</table>
<bodyText confidence="0.998310517241379">
for both methods, and it is clear from this figure
that the parsing time of the conventional method
begins to rapidly increase when the length of a
sentence becomes 12 or more bunsetsus. In con-
trast, our method changes little in relation to pars-
ing time. Here, since the sentences used in the
experiment are composed of 11.8 bunsetsus on av-
erage, this result shows that our method is suitable
for improving the parsing time of a monologue
sentence whose length is longer than the average.
Table 4 shows the parsing accuracy of both
methods. The first line of Table 4 shows the
parsing accuracy for all bunsetsus within clause
boundary units except the final bunsetsus of the
clause boundary units. The second line shows
the parsing accuracy for the final bunsetsus of
all clause boundary units except the sentence-end
bunsetsus. We confirmed that our method could
analyze with a higher accuracy than the conven-
tional method. Here, Table 5 shows the accu-
racy of the clause boundary analysis executed by
CBAP. Since the precision and recall is high, we
can assume that the clause boundary analysis ex-
erts almost no harmful influence on the following
dependency parsing.
As mentioned above, it is clear that our method
is more effective than the conventional method in
shortening parsing time and increasing parsing ac-
curacy.
</bodyText>
<sectionHeader confidence="0.994085" genericHeader="method">
5 Discussions
</sectionHeader>
<bodyText confidence="0.84616247826087">
Our method assumes that dependency relations
within a clause boundary unit do not cross clause
boundaries. Due to this assumption, the method
cannot correctly parse the dependency relations
over clause boundaries. However, the experi-
mental results indicated that the accuracy of our
method was higher than that of the conventional
method.
In this section, we first discuss the effect of our
method on parsing accuracy, separately for bun-
Table 6: Comparison of parsing accuracy between
conventional method and our method (for bunsetsu
within a clause boundary unit except final bun-
setsu)
conv. metho our method correct incorrect total
correct 2,499 93 2,592
incorrect 202 267 469
total 2,701 360 3,061
setsus within clause boundary units (except the fi-
nal bunsetsus) and the final bunsetsus of clause
boundary units. Next, we discuss the problem of
our method’s inability to parse dependency rela-
tions over clause boundaries.
</bodyText>
<subsectionHeader confidence="0.998162">
5.1 Parsing Accuracy for Bunsetsu within a
</subsectionHeader>
<bodyText confidence="0.994749409090909">
Clause Boundary Unit (except final
bunsetsu)
Table 6 compares parsing accuracies for bunsetsus
within clause boundary units (except the final bun-
setsus) between the conventional method and our
method. There are 3,061 bunsetsus within clause
boundary units except the final bunsetsu, among
which 2,499 were correctly parsed by both meth-
ods. There were 202 dependency relations cor-
rectly parsed by our method but incorrectly parsed
by the conventional method. This means that our
method can narrow down the candidates for a head
bunsetsu.
In contrast, 93 dependency relations were cor-
rectly parsed solely by the conventional method.
Among these, 46 were dependency relations over
clause boundaries, which cannot in principle be
parsed by our method. This means that our method
can correctly parse almost all of the dependency
relations that the conventional method can cor-
rectly parse except for dependency relations over
clause boundaries.
</bodyText>
<subsectionHeader confidence="0.9993495">
5.2 Parsing Accuracy for Final Bunsetsu of a
Clause Boundary Unit
</subsectionHeader>
<bodyText confidence="0.999935">
We can see from Table 4 that the parsing accuracy
for the final bunsetsus of clause boundary units by
both methods is much worse than that for bunset-
sus within the clause boundary units (except the
final bunsetsus). This means that it is difficult
</bodyText>
<page confidence="0.999173">
174
</page>
<tableCaption confidence="0.962983">
Table 7: Comparison of parsing accuracy between
conventional method and our method (for final
bunsetsu of a clause boundary unit)
</tableCaption>
<table confidence="0.994070166666667">
our method correct incorrect total
����������
conv. method
correct 1037 63 1,100
incorrect 103 534 637
total 1,140 597 1,737
</table>
<tableCaption confidence="0.9586595">
Table 8: Parsing accuracy for dependency rela-
tions over clause boundaries
</tableCaption>
<table confidence="0.960592333333333">
our method conv. method
recall 1.3% (2/152) 30.3% (46/152)
precision 11.8% (2/ 17) 25.3% (46/182)
</table>
<bodyText confidence="0.996888470588235">
to identify dependency relations whose dependent
bunsetsu is the final one of a clause boundary unit.
Table 7 compares how the two methods parse
the dependency relations when the dependent bun-
setsu is the final bunsetsu of a clause bound-
ary unit. There are 1,737 dependency relations
whose dependent bunsetsu is the final bunsetsu of
a clause boundary unit, among which 1,037 were
correctly parsed by both methods. The number
of dependency relations correctly parsed only by
our method was 103. This number is higher than
that of dependency relations correctly parsed by
only the conventional method. This result might
be attributed to our method’s effect; that is, our
method narrows down the candidates internally for
a head bunsetsu based on the first-parsed depen-
dency structure for clause boundary units.
</bodyText>
<subsectionHeader confidence="0.8018755">
5.3 Dependency Relations over Clause
Boundaries
</subsectionHeader>
<bodyText confidence="0.999958222222223">
Table 8 shows the accuracy of both methods for
parsing dependency relations over clause bound-
aries. Since our method parses based on the as-
sumption that those dependency relations do not
exist, it cannot correctly parse anything. Al-
though, from the experimental results, our method
could identify two dependency relations over
clause boundaries, these were identified only be-
cause dependency parsing for some sentences was
performed based on wrong clause boundaries that
were provided by clause boundary analysis. On
the other hand, the conventional method correctly
parsed 46 dependency relations among 152 that
crossed a clause boundary in the test data. Since
the conventional method could correctly parse
only 30.3% of those dependency relations, we can
see that it is in principle difficult to identify the
dependency relations.
</bodyText>
<sectionHeader confidence="0.999806" genericHeader="method">
6 Related Works
</sectionHeader>
<bodyText confidence="0.999963972972973">
Since monologue sentences tend to be long and
have complex structures, it is important to con-
sider the features. Although there have been
very few studies on parsing monologue sentences,
some studies on parsing written language have
dealt with long-sentence parsing. To resolve the
syntactic ambiguity of a long sentence, some of
them have focused attention on the “clause.”
First, there are the studies that focused atten-
tion on compound clauses (Agarwal and Boggess,
1992; Kurohashi and Nagao, 1994). These tried
to improve the parsing accuracy of long sentences
by identifying the boundaries of coordinate struc-
tures. Next, other research efforts utilized the three
categories into which various types of subordinate
clauses are hierarchically classified based on the
“scope-embedding preference” of Japanese subor-
dinate clauses (Shirai et al., 1995; Utsuro et al.,
2000). Furthermore, Kim et al. (Kim and Lee,
2004) divided a sentence into “S(ubject)-clauses,”
which were defined as a group of words containing
several predicates and their common subject. The
above studies have attempted to reduce the pars-
ing ambiguity between specific types of clauses in
order to improve the parsing accuracy of an entire
sentence.
On the other hand, our method utilizes all types
of clauses without limiting them to specific types
of clauses. To improve the accuracy of long-
sentence parsing, we thought that it would be more
effective to cyclopaedically divide a sentence into
all types of clauses and then parse the local de-
pendency structure of each clause. Moreover,
since our method can perform dependency pars-
ing clause-by-clause, we can reasonably expect
our method to be applicable to incremental pars-
ing (Ohno et al., 2005a).
</bodyText>
<sectionHeader confidence="0.999133" genericHeader="conclusions">
7 Conclusions
</sectionHeader>
<bodyText confidence="0.999879636363636">
In this paper, we proposed a technique for de-
pendency parsing of monologue sentences based
on clause-boundary detection. The method can
achieve more effective, high-performance spoken
monologue parsing by dividing a sentence into
clauses, which are considered as suitable language
units for simplicity. To evaluate the effectiveness
of our method for Japanese spoken monologue, we
conducted an experiment on dependency parsing
of the spoken monologue sentences recorded in
the “Asu-Wo-Yomu.” From the experimental re-
</bodyText>
<page confidence="0.995936">
175
</page>
<bodyText confidence="0.999976666666667">
sults, we confirmed that our method shortened the
parsing time and increased the parsing accuracy
compared with the conventional method, which
parses a sentence without dividing it into clauses.
Future research will include making a thorough
investigation into the relation between dependency
type and the type of clause boundary unit. After
that, we plan to investigate techniques for identi-
fying the dependency relations over clause bound-
aries. Furthermore, as the experiment described in
this paper has shown the effectiveness of our tech-
nique for dependency parsing of long sentences
in spoken monologues, so our technique can be
expected to be effective in written language also.
Therefore, we want to examine the effectiveness
by conducting the parsing experiment of long sen-
tences in written language such as newspaper arti-
cles.
</bodyText>
<sectionHeader confidence="0.999028" genericHeader="acknowledgments">
8 Acknowledgements
</sectionHeader>
<bodyText confidence="0.996396428571429">
This research was supported in part by a contract
with the Strategic Information and Communica-
tions R&amp;D Promotion Programme, Ministry of In-
ternal Affairs and Communications and the Grand-
in-Aid for Young Scientists of JSPS. The first au-
thor is partially supported by JSPS Research Fel-
lowships for Young Scientists.
</bodyText>
<sectionHeader confidence="0.998939" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999672410256411">
R. Agarwal and L. Boggess. 1992. A simple but use-
ful approach to conjunct indentification. In Proc. of
30th ACL, pages 15–21.
E. Charniak. 2000. A maximum-entropy-inspired
parser. In Proc. of 1st NAACL, pages 132–139.
M. Collins. 1996. A new statistical parser based on
bigram lexical dependencies. In Proc. of 34th ACL,
pages 184–191.
Mark G. Core and Lenhart K. Schubert. 1999. A syn-
tactic framework for speech repairs and other dis-
ruptions. In Proc. of 37th ACL, pages 413–420.
R. Delmonte. 2003. Parsing spontaneous speech. In
Proc. of 8th EUROSPEECH, pages 1999–2004.
M. Fujio and Y. Matsumoto. 1998. Japanese depen-
dency structure analysis based on lexicalized statis-
tics. In Proc. of 3rd EMNLP, pages 87–96.
J. Huang and G. Zweig. 2002. Maximum entropy
model for punctuation annotation from speech. In
Proc. of 7th ICSLP, pages 917–920.
H. Kashioka and T. Maruyama. 2004. Segmentation
of semantic unit in Japanese monologue. In Proc. of
ICSLT-O-COCOSDA 2004, pages 87–92.
M. Kim and J. Lee. 2004. Syntactic analysis of long
sentences based on s-clauses. In Proc. of 1st IJC-
NLP, pages 420–427.
T. Kudo and Y. Matsumoto. 2002. Japanese depen-
dency analyisis using cascaded chunking. In Proc.
of 6th CoNLL, pages 63–69.
S. Kurohashi and M. Nagao. 1994. A syntactic analy-
sis method of long Japanese sentences based on the
detection of conjunctive structures. Computational
Linguistics, 20(4):507–534.
S. Kurohashi and M. Nagao. 1997. Building a
Japanese parsed corpus while improving the parsing
system. In Proc. of 4th NLPRS, pages 451–456.
K. Maekawa, H. Koiso, S. Furui, and H. Isahara. 2000.
Spontaneous speech corpus of Japanese. In Proc. of
2nd LREC, pages 947–952.
T. Maruyama, H. Kashioka, T. Kumano, and
H. Tanaka. 2004. Development and evaluation
of Japanese clause boundaries annotation program.
Journal ofNatural Language Processing, 11(3):39–
68. (In Japanese).
Y. Matsumoto, A. Kitauchi, T. Yamashita, and Y. Hi-
rano, 1999. Japanese Morphological Analysis Sys-
tem ChaSen version 2.0 Manual. NAIST Technical
Report, NAIST-IS-TR99009.
T. Ohno, S. Matsubara, H. Kashioka, N. Kato, and
Y. Inagaki. 2005a. Incremental dependency pars-
ing of Japanese spoken monologue based on clause
boundaries. In Proc. of 9th EUROSPEECH, pages
3449–3452.
T. Ohno, S. Matsubara, N. Kawaguchi, and Y. Inagaki.
2005b. Robust dependency parsing of spontaneous
Japanese spoken language. IEICE Transactions on
Information and Systems, E88-D(3):545–552.
A. Ratnaparkhi. 1997. A liner observed time statistical
parser based on maximum entropy models. In Proc.
of 2nd EMNLP, pages 1–10.
S. Shirai, S. Ikehara, A. Yokoo, and J. Kimura. 1995.
A new dependency analysis method based on se-
mantically embedded sentence structures and its per-
formance on Japanese subordinate clause. Jour-
nal of Information Processing Society of Japan,
36(10):2353–2361. (In Japanese).
K. Shitaoka, K. Uchimoto, T. Kawahara, and H. Isa-
hara. 2004. Dependency structure analysis and sen-
tence boundary detection in spontaneous Japanese.
In Proc. of 20th COLING, pages 1107–1113.
K. Uchimoto, S. Sekine, and K. Isahara. 1999.
Japanese dependency structure analysis based on
maximum entropy models. In Proc. of 9th EACL,
pages 196–203.
T. Utsuro, S. Nishiokayama, M. Fujio, and Y. Mat-
sumoto. 2000. Analyzing dependencies of Japanese
subordinate clauses based on statistics of scope em-
bedding preference. In Proc. of 6th ANLP, pages
110–117.
</reference>
<page confidence="0.998746">
176
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.543373">
<title confidence="0.945242">Dependency Parsing of Japanese Spoken Monologue Based on Clause Boundaries</title>
<affiliation confidence="0.8997028">School of Information Science, Nagoya University, Japan Technology Center, Nagoya University, Japan Spoken Language Communication Research Laboratories, Japan National Institute for Japanese Language, Japan of Information Science and Technology, Aichi Prefectural University, Japan</affiliation>
<abstract confidence="0.99477708">Spoken monologues feature greater sentence length and structural complexity than do spoken dialogues. To achieve high parsing performance for spoken monologues, it could prove effective to simplify the structure by dividing a sentence into suitable language units. This paper proposes a method for dependency parsing of Japanese monologues based on sentence segmentation. In this method, the dependency parsing is executed in two stages: at the clause level and the sentence level. First, the dependencies within a clause are identified by dividing a sentence into clauses and executing stochastic dependency parsing for each clause. Next, the dependencies over clause boundaries are identified stochastically, and the dependency structure of the entire sentence is thus completed. An experiment using a spoken monologue corpus shows this method to be effective for efficient dependency parsing of Japanese monologue sentences.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R Agarwal</author>
<author>L Boggess</author>
</authors>
<title>A simple but useful approach to conjunct indentification.</title>
<date>1992</date>
<booktitle>In Proc. of 30th ACL,</booktitle>
<pages>15--21</pages>
<contexts>
<context position="26531" citStr="Agarwal and Boggess, 1992" startWordPosition="4303" endWordPosition="4306">ctly parse only 30.3% of those dependency relations, we can see that it is in principle difficult to identify the dependency relations. 6 Related Works Since monologue sentences tend to be long and have complex structures, it is important to consider the features. Although there have been very few studies on parsing monologue sentences, some studies on parsing written language have dealt with long-sentence parsing. To resolve the syntactic ambiguity of a long sentence, some of them have focused attention on the “clause.” First, there are the studies that focused attention on compound clauses (Agarwal and Boggess, 1992; Kurohashi and Nagao, 1994). These tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the “scope-embedding preference” of Japanese subordinate clauses (Shirai et al., 1995; Utsuro et al., 2000). Furthermore, Kim et al. (Kim and Lee, 2004) divided a sentence into “S(ubject)-clauses,” which were defined as a group of words containing several predicates and their common subject. The above stu</context>
</contexts>
<marker>Agarwal, Boggess, 1992</marker>
<rawString>R. Agarwal and L. Boggess. 1992. A simple but useful approach to conjunct indentification. In Proc. of 30th ACL, pages 15–21.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
</authors>
<title>A maximum-entropy-inspired parser.</title>
<date>2000</date>
<booktitle>In Proc. of 1st NAACL,</booktitle>
<pages>132--139</pages>
<contexts>
<context position="13414" citStr="Charniak, 2000" startWordPosition="2111" endWordPosition="2112">he lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using the above attributes, the conditional rel probability P(bk bil |Bi) is calculated as </context>
</contexts>
<marker>Charniak, 2000</marker>
<rawString>E. Charniak. 2000. A maximum-entropy-inspired parser. In Proc. of 1st NAACL, pages 132–139.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Collins</author>
</authors>
<title>A new statistical parser based on bigram lexical dependencies.</title>
<date>1996</date>
<booktitle>In Proc. of 34th ACL,</booktitle>
<pages>184--191</pages>
<contexts>
<context position="13329" citStr="Collins, 1996" startWordPosition="2098" endWordPosition="2099">if a dependent bunsetsu has one or more ancillary words, the type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using </context>
</contexts>
<marker>Collins, 1996</marker>
<rawString>M. Collins. 1996. A new statistical parser based on bigram lexical dependencies. In Proc. of 34th ACL, pages 184–191.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark G Core</author>
<author>Lenhart K Schubert</author>
</authors>
<title>A syntactic framework for speech repairs and other disruptions.</title>
<date>1999</date>
<booktitle>In Proc. of 37th ACL,</booktitle>
<pages>413--420</pages>
<contexts>
<context position="2249" citStr="Core and Schubert, 1999" startWordPosition="321" endWordPosition="324">ed attention. In applications, such as automatic summarization, machine translation and so on, for using these monologue data as intellectual property effectively and efficiently, it is necessary not only just to accumulate but also to structure the monologue data. However, few attempts have been made to parse spoken monologues. Spontaneously spoken monologues include a lot of grammatically ill-formed linguistic phenomena such as fillers, hesitations and selfrepairs. In order to robustly deal with their extragrammaticality, some techniques for parsing of dialogue sentences have been proposed (Core and Schubert, 1999; Delmonte, 2003; Ohno et al., 2005b). On the other hand, monologues also have the characteristic feature that a sentence is generally longer and structurally more complicated than a sentence in dialogues which have been dealt with by the previous researches. Therefore, for a monologue sentence the parsing time would increase and the parsing accuracy would decrease. It is thought that more effective, high-performance spoken monologue parsing could be achieved by dividing a sentence into suitable language units for simplicity. This paper proposes a method for dependency parsing of monologue sen</context>
</contexts>
<marker>Core, Schubert, 1999</marker>
<rawString>Mark G. Core and Lenhart K. Schubert. 1999. A syntactic framework for speech repairs and other disruptions. In Proc. of 37th ACL, pages 413–420.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Delmonte</author>
</authors>
<title>Parsing spontaneous speech.</title>
<date>2003</date>
<booktitle>In Proc. of 8th EUROSPEECH,</booktitle>
<pages>1999--2004</pages>
<contexts>
<context position="2265" citStr="Delmonte, 2003" startWordPosition="325" endWordPosition="326">ions, such as automatic summarization, machine translation and so on, for using these monologue data as intellectual property effectively and efficiently, it is necessary not only just to accumulate but also to structure the monologue data. However, few attempts have been made to parse spoken monologues. Spontaneously spoken monologues include a lot of grammatically ill-formed linguistic phenomena such as fillers, hesitations and selfrepairs. In order to robustly deal with their extragrammaticality, some techniques for parsing of dialogue sentences have been proposed (Core and Schubert, 1999; Delmonte, 2003; Ohno et al., 2005b). On the other hand, monologues also have the characteristic feature that a sentence is generally longer and structurally more complicated than a sentence in dialogues which have been dealt with by the previous researches. Therefore, for a monologue sentence the parsing time would increase and the parsing accuracy would decrease. It is thought that more effective, high-performance spoken monologue parsing could be achieved by dividing a sentence into suitable language units for simplicity. This paper proposes a method for dependency parsing of monologue sentences based on </context>
</contexts>
<marker>Delmonte, 2003</marker>
<rawString>R. Delmonte. 2003. Parsing spontaneous speech. In Proc. of 8th EUROSPEECH, pages 1999–2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Fujio</author>
<author>Y Matsumoto</author>
</authors>
<title>Japanese dependency structure analysis based on lexicalized statistics.</title>
<date>1998</date>
<booktitle>In Proc. of 3rd EMNLP,</booktitle>
<pages>87--96</pages>
<contexts>
<context position="13375" citStr="Fujio and Matsumoto, 1998" startWordPosition="2102" endWordPosition="2106"> more ancillary words, the type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using the above attributes, the conditional rel prob</context>
<context position="19282" citStr="Fujio and Matsumoto, 1998" startWordPosition="3153" endWordPosition="3156">tence and identifies all clause boundary units in a sentence by performing clause boundary analysis (CBAP) (Maruyama et al., 2004). After that, our method executes the dependency parsing described in Section 3. • Conventional method: This method parses a sentence at one time without dividing it into clause boundary units. Here, the probability that a bunsetsu depends on another bunsetsu, when the sequence of bunsetsus of a sentence is provided, is calculated as in Eq. (5), where the attribute e was eliminated. This conventional method has been implemented by us based on the previous research (Fujio and Matsumoto, 1998). 4.2 Experimental Results The parsing times of both methods are shown in Table 3. The parsing speed of our method improves by about 5 times on average in comparison with the conventional method. Here, the parsing time of our method includes the time taken not only for the dependency parsing but also for the clause boundary analysis. The average time taken for clause boundary analysis was about 1.2 millisecond per sentence. Therefore, the time cost of performing clause boundary analysis as a preprocessing of dependency parsing can be considered small enough to disregard. Figure 2 shows the rel</context>
</contexts>
<marker>Fujio, Matsumoto, 1998</marker>
<rawString>M. Fujio and Y. Matsumoto. 1998. Japanese dependency structure analysis based on lexicalized statistics. In Proc. of 3rd EMNLP, pages 87–96.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Huang</author>
<author>G Zweig</author>
</authors>
<title>Maximum entropy model for punctuation annotation from speech.</title>
<date>2002</date>
<booktitle>In Proc. of 7th ICSLP,</booktitle>
<pages>917--920</pages>
<contexts>
<context position="9667" citStr="Huang and Zweig, 2002" startWordPosition="1482" endWordPosition="1485"> in Section 2, in our method, the transcribed sentence on which morphological analysis, clause boundary detection, and bunsetsu segmentation are performed is considered the input 4. The dependency 3Asu-Wo-Yomu is a collection of transcriptions of a TV commentary program of the Japan Broadcasting Corporation (NHK). The commentator speaks on some current social issue for 10 minutes. 4It is difficult to preliminarily divide a monologue into sentences because there are no clear sentence breaks in monologues. However, since some methods for detecting sentence boundaries have already been proposed (Huang and Zweig, 2002; Shitaoka et al., 2004), we assume that they can be detected automatically before dependency parsing. parsing is executed based on the following procedures: 1. Clause-level parsing: The internal dependency relations of clause boundary units are identified for every clause boundary unit in one sentence. 2. Sentence-level parsing: The dependency relations in which the dependent unit is the final bunsetsu of the clause boundary units are identified. In this paper, we describe a sequence of clause boundary units in a sentence as C1 · · · Cm, a sequence of bunsetsus in a clause boundary unit Ci as</context>
</contexts>
<marker>Huang, Zweig, 2002</marker>
<rawString>J. Huang and G. Zweig. 2002. Maximum entropy model for punctuation annotation from speech. In Proc. of 7th ICSLP, pages 917–920.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Kashioka</author>
<author>T Maruyama</author>
</authors>
<title>Segmentation of semantic unit in Japanese monologue.</title>
<date>2004</date>
<booktitle>In Proc. of ICSLT-O-COCOSDA</booktitle>
<pages>87--92</pages>
<contexts>
<context position="6423" citStr="Kashioka and Maruyama, 2004" startWordPosition="978" endWordPosition="981">l punishment) • 人が八十パーセント近くになっております (the ratio of people is nearly 80%) Each clause forms a dependency structure (solid arrows in Fig. 1), and a dependency relation from the final bunsetsu links the clause with another clause (dotted arrows in Fig. 1). 2.2 Clause Boundary Unit In adopting a clause as an alternative parsing unit, it is necessary to divide a monologue sentence into clauses as the preprocessing for the following dependency parsing. However, since some kinds of clauses are embedded in main clauses, it is fundamentally difficult to divide a monologue into clauses in one dimension (Kashioka and Maruyama, 2004). Therefore, by using a clause boundary annotation program (Maruyama et al., 2004), we approximately achieve the clause segmentation of a monologue sentence. This program can identify units corresponding to clauses by detecting the end boundaries of clauses. Furthermore, the program can specify the positions and types of clause boundaries simply from a local morphological analysis. That is, for a sentence morphologically analyzed by ChaSen (Matsumoto et al., 1999), the positions of clause boundaries are identified and clause boundary labels are inserted there. There exist 147 labels such as “c</context>
</contexts>
<marker>Kashioka, Maruyama, 2004</marker>
<rawString>H. Kashioka and T. Maruyama. 2004. Segmentation of semantic unit in Japanese monologue. In Proc. of ICSLT-O-COCOSDA 2004, pages 87–92.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Kim</author>
<author>J Lee</author>
</authors>
<title>Syntactic analysis of long sentences based on s-clauses.</title>
<date>2004</date>
<booktitle>In Proc. of 1st IJCNLP,</booktitle>
<pages>420--427</pages>
<contexts>
<context position="26977" citStr="Kim and Lee, 2004" startWordPosition="4369" endWordPosition="4372"> of a long sentence, some of them have focused attention on the “clause.” First, there are the studies that focused attention on compound clauses (Agarwal and Boggess, 1992; Kurohashi and Nagao, 1994). These tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the “scope-embedding preference” of Japanese subordinate clauses (Shirai et al., 1995; Utsuro et al., 2000). Furthermore, Kim et al. (Kim and Lee, 2004) divided a sentence into “S(ubject)-clauses,” which were defined as a group of words containing several predicates and their common subject. The above studies have attempted to reduce the parsing ambiguity between specific types of clauses in order to improve the parsing accuracy of an entire sentence. On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of longsentence parsing, we thought that it would be more effective to cyclopaedically divide a sentence into all types of clauses and then parse the local depe</context>
</contexts>
<marker>Kim, Lee, 2004</marker>
<rawString>M. Kim and J. Lee. 2004. Syntactic analysis of long sentences based on s-clauses. In Proc. of 1st IJCNLP, pages 420–427.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Kudo</author>
<author>Y Matsumoto</author>
</authors>
<title>Japanese dependency analyisis using cascaded chunking.</title>
<date>2002</date>
<booktitle>In Proc. of 6th CoNLL,</booktitle>
<pages>63--69</pages>
<contexts>
<context position="13441" citStr="Kudo and Matsumoto, 2002" startWordPosition="2113" endWordPosition="2116">-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using the above attributes, the conditional rel probability P(bk bil |Bi) is calculated as follows: rel P(bi + bi l|Bi</context>
</contexts>
<marker>Kudo, Matsumoto, 2002</marker>
<rawString>T. Kudo and Y. Matsumoto. 2002. Japanese dependency analyisis using cascaded chunking. In Proc. of 6th CoNLL, pages 63–69.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Kurohashi</author>
<author>M Nagao</author>
</authors>
<title>A syntactic analysis method of long Japanese sentences based on the detection of conjunctive structures.</title>
<date>1994</date>
<journal>Computational Linguistics,</journal>
<volume>20</volume>
<issue>4</issue>
<contexts>
<context position="26559" citStr="Kurohashi and Nagao, 1994" startWordPosition="4307" endWordPosition="4310">ose dependency relations, we can see that it is in principle difficult to identify the dependency relations. 6 Related Works Since monologue sentences tend to be long and have complex structures, it is important to consider the features. Although there have been very few studies on parsing monologue sentences, some studies on parsing written language have dealt with long-sentence parsing. To resolve the syntactic ambiguity of a long sentence, some of them have focused attention on the “clause.” First, there are the studies that focused attention on compound clauses (Agarwal and Boggess, 1992; Kurohashi and Nagao, 1994). These tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the “scope-embedding preference” of Japanese subordinate clauses (Shirai et al., 1995; Utsuro et al., 2000). Furthermore, Kim et al. (Kim and Lee, 2004) divided a sentence into “S(ubject)-clauses,” which were defined as a group of words containing several predicates and their common subject. The above studies have attempted to reduc</context>
</contexts>
<marker>Kurohashi, Nagao, 1994</marker>
<rawString>S. Kurohashi and M. Nagao. 1994. A syntactic analysis method of long Japanese sentences based on the detection of conjunctive structures. Computational Linguistics, 20(4):507–534.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Kurohashi</author>
<author>M Nagao</author>
</authors>
<title>Building a Japanese parsed corpus while improving the parsing system.</title>
<date>1997</date>
<booktitle>In Proc. of 4th NLPRS,</booktitle>
<pages>451--456</pages>
<contexts>
<context position="8475" citStr="Kurohashi and Nagao, 1997" startWordPosition="1295" endWordPosition="1299">estigation, we used 200 sentences for which morphological analysis, bunsetsu segmentation, clause boundary analysis, and dependency parsing were automatically performed and then modified by hand. Here, the specification of the partsof-speech is in accordance with that of the IPA parts-of-speech used in the ChaSen morphological analyzer (Matsumoto et al., 1999), the rules of the bunsetsu segmentation with those of CSJ (Maekawa et al., 2000), the rules of the clause boundary analysis with those of Maruyama et al. (Maruyama et al., 2004), and the dependency grammar with that of the Kyoto Corpus (Kurohashi and Nagao, 1997). Table 1 shows the results of analyzing the 200 sentences. Among the 1,479 bunsetsus in the difference set between all bunsetsus (2,430) and the final bunsetsus (951) of clause boundary units, only 94 bunsetsus depend on a bunsetsu located outside the clause boundary unit. This result means that 93.6% (1,385/1,479) of all dependency relations are within a clause boundary unit. Therefore, the results confirmed that the assumption made by our research is valid to some extent. 3 Dependency Parsing Based on Clause Boundaries In accordance with the assumption described in Section 2, in our method,</context>
</contexts>
<marker>Kurohashi, Nagao, 1997</marker>
<rawString>S. Kurohashi and M. Nagao. 1997. Building a Japanese parsed corpus while improving the parsing system. In Proc. of 4th NLPRS, pages 451–456.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Maekawa</author>
<author>H Koiso</author>
<author>S Furui</author>
<author>H Isahara</author>
</authors>
<title>Spontaneous speech corpus of Japanese.</title>
<date>2000</date>
<booktitle>In Proc. of 2nd LREC,</booktitle>
<pages>947--952</pages>
<contexts>
<context position="8292" citStr="Maekawa et al., 2000" startWordPosition="1264" endWordPosition="1267"> Units and Dependency Structures To clarify the relation between clause boundary units and dependency structures, we investigated the monologue corpus “Asu-Wo-Yomu 3.” In the investigation, we used 200 sentences for which morphological analysis, bunsetsu segmentation, clause boundary analysis, and dependency parsing were automatically performed and then modified by hand. Here, the specification of the partsof-speech is in accordance with that of the IPA parts-of-speech used in the ChaSen morphological analyzer (Matsumoto et al., 1999), the rules of the bunsetsu segmentation with those of CSJ (Maekawa et al., 2000), the rules of the clause boundary analysis with those of Maruyama et al. (Maruyama et al., 2004), and the dependency grammar with that of the Kyoto Corpus (Kurohashi and Nagao, 1997). Table 1 shows the results of analyzing the 200 sentences. Among the 1,479 bunsetsus in the difference set between all bunsetsus (2,430) and the final bunsetsus (951) of clause boundary units, only 94 bunsetsus depend on a bunsetsu located outside the clause boundary unit. This result means that 93.6% (1,385/1,479) of all dependency relations are within a clause boundary unit. Therefore, the results confirmed tha</context>
</contexts>
<marker>Maekawa, Koiso, Furui, Isahara, 2000</marker>
<rawString>K. Maekawa, H. Koiso, S. Furui, and H. Isahara. 2000. Spontaneous speech corpus of Japanese. In Proc. of 2nd LREC, pages 947–952.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Maruyama</author>
<author>H Kashioka</author>
<author>T Kumano</author>
<author>H Tanaka</author>
</authors>
<title>Development and evaluation of Japanese clause boundaries annotation program.</title>
<date>2004</date>
<journal>Journal ofNatural Language Processing,</journal>
<volume>11</volume>
<issue>3</issue>
<pages>68</pages>
<note>(In Japanese).</note>
<contexts>
<context position="6505" citStr="Maruyama et al., 2004" startWordPosition="991" endWordPosition="994">s a dependency structure (solid arrows in Fig. 1), and a dependency relation from the final bunsetsu links the clause with another clause (dotted arrows in Fig. 1). 2.2 Clause Boundary Unit In adopting a clause as an alternative parsing unit, it is necessary to divide a monologue sentence into clauses as the preprocessing for the following dependency parsing. However, since some kinds of clauses are embedded in main clauses, it is fundamentally difficult to divide a monologue into clauses in one dimension (Kashioka and Maruyama, 2004). Therefore, by using a clause boundary annotation program (Maruyama et al., 2004), we approximately achieve the clause segmentation of a monologue sentence. This program can identify units corresponding to clauses by detecting the end boundaries of clauses. Furthermore, the program can specify the positions and types of clause boundaries simply from a local morphological analysis. That is, for a sentence morphologically analyzed by ChaSen (Matsumoto et al., 1999), the positions of clause boundaries are identified and clause boundary labels are inserted there. There exist 147 labels such as “compound clause” and “adnominal clause.” 2 In our research, we adopt the unit sandw</context>
<context position="8389" citStr="Maruyama et al., 2004" startWordPosition="1281" endWordPosition="1284">dency structures, we investigated the monologue corpus “Asu-Wo-Yomu 3.” In the investigation, we used 200 sentences for which morphological analysis, bunsetsu segmentation, clause boundary analysis, and dependency parsing were automatically performed and then modified by hand. Here, the specification of the partsof-speech is in accordance with that of the IPA parts-of-speech used in the ChaSen morphological analyzer (Matsumoto et al., 1999), the rules of the bunsetsu segmentation with those of CSJ (Maekawa et al., 2000), the rules of the clause boundary analysis with those of Maruyama et al. (Maruyama et al., 2004), and the dependency grammar with that of the Kyoto Corpus (Kurohashi and Nagao, 1997). Table 1 shows the results of analyzing the 200 sentences. Among the 1,479 bunsetsus in the difference set between all bunsetsus (2,430) and the final bunsetsus (951) of clause boundary units, only 94 bunsetsus depend on a bunsetsu located outside the clause boundary unit. This result means that 93.6% (1,385/1,479) of all dependency relations are within a clause boundary unit. Therefore, the results confirmed that the assumption made by our research is valid to some extent. 3 Dependency Parsing Based on Clau</context>
<context position="18786" citStr="Maruyama et al., 2004" startWordPosition="3072" endWordPosition="3075">he final bunsetsus of clause boundary units depended on the final bunsetsu of other clause boundary units. 6Here, the specifications of these annotations are in accordance with those described in Section 2.3. Figure 2: Relation between sentence length and parsing time the above-mentioned data by the following two methods and obtained, respectively, the parsing time and parsing accuracy. • Our method: First, our method provides clause boundaries for a sequence of bunsetsus of an input sentence and identifies all clause boundary units in a sentence by performing clause boundary analysis (CBAP) (Maruyama et al., 2004). After that, our method executes the dependency parsing described in Section 3. • Conventional method: This method parses a sentence at one time without dividing it into clause boundary units. Here, the probability that a bunsetsu depends on another bunsetsu, when the sequence of bunsetsus of a sentence is provided, is calculated as in Eq. (5), where the attribute e was eliminated. This conventional method has been implemented by us based on the previous research (Fujio and Matsumoto, 1998). 4.2 Experimental Results The parsing times of both methods are shown in Table 3. The parsing speed of </context>
</contexts>
<marker>Maruyama, Kashioka, Kumano, Tanaka, 2004</marker>
<rawString>T. Maruyama, H. Kashioka, T. Kumano, and H. Tanaka. 2004. Development and evaluation of Japanese clause boundaries annotation program. Journal ofNatural Language Processing, 11(3):39– 68. (In Japanese).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Matsumoto</author>
<author>A Kitauchi</author>
<author>T Yamashita</author>
<author>Y Hirano</author>
</authors>
<title>Japanese Morphological Analysis System ChaSen version 2.0 Manual.</title>
<date>1999</date>
<tech>NAIST Technical Report, NAIST-IS-TR99009.</tech>
<contexts>
<context position="6891" citStr="Matsumoto et al., 1999" startWordPosition="1051" endWordPosition="1054">ds of clauses are embedded in main clauses, it is fundamentally difficult to divide a monologue into clauses in one dimension (Kashioka and Maruyama, 2004). Therefore, by using a clause boundary annotation program (Maruyama et al., 2004), we approximately achieve the clause segmentation of a monologue sentence. This program can identify units corresponding to clauses by detecting the end boundaries of clauses. Furthermore, the program can specify the positions and types of clause boundaries simply from a local morphological analysis. That is, for a sentence morphologically analyzed by ChaSen (Matsumoto et al., 1999), the positions of clause boundaries are identified and clause boundary labels are inserted there. There exist 147 labels such as “compound clause” and “adnominal clause.” 2 In our research, we adopt the unit sandwiched between two clause boundaries detected by clause boundary analysis, were called the clause boundary unit, as an alternative parsing unit. Here, we regard the label name provided for the end boundary of a clause boundary unit as that unit’s type. 2The labels include a few other constituents that do not strictly represent clause boundaries but can be regarded as being syntactical</context>
<context position="8211" citStr="Matsumoto et al., 1999" startWordPosition="1250" endWordPosition="1253">n. 170 Table 1: 200 sentences in “Asu-Wo-Yomu” 2.3 Relation between Clause Boundary Units and Dependency Structures To clarify the relation between clause boundary units and dependency structures, we investigated the monologue corpus “Asu-Wo-Yomu 3.” In the investigation, we used 200 sentences for which morphological analysis, bunsetsu segmentation, clause boundary analysis, and dependency parsing were automatically performed and then modified by hand. Here, the specification of the partsof-speech is in accordance with that of the IPA parts-of-speech used in the ChaSen morphological analyzer (Matsumoto et al., 1999), the rules of the bunsetsu segmentation with those of CSJ (Maekawa et al., 2000), the rules of the clause boundary analysis with those of Maruyama et al. (Maruyama et al., 2004), and the dependency grammar with that of the Kyoto Corpus (Kurohashi and Nagao, 1997). Table 1 shows the results of analyzing the 200 sentences. Among the 1,479 bunsetsus in the difference set between all bunsetsus (2,430) and the final bunsetsus (951) of clause boundary units, only 94 bunsetsus depend on a bunsetsu located outside the clause boundary unit. This result means that 93.6% (1,385/1,479) of all dependency </context>
</contexts>
<marker>Matsumoto, Kitauchi, Yamashita, Hirano, 1999</marker>
<rawString>Y. Matsumoto, A. Kitauchi, T. Yamashita, and Y. Hirano, 1999. Japanese Morphological Analysis System ChaSen version 2.0 Manual. NAIST Technical Report, NAIST-IS-TR99009.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Ohno</author>
<author>S Matsubara</author>
<author>H Kashioka</author>
<author>N Kato</author>
<author>Y Inagaki</author>
</authors>
<title>Incremental dependency parsing of Japanese spoken monologue based on clause boundaries.</title>
<date>2005</date>
<booktitle>In Proc. of 9th EUROSPEECH,</booktitle>
<pages>3449--3452</pages>
<contexts>
<context position="2284" citStr="Ohno et al., 2005" startWordPosition="327" endWordPosition="330">tomatic summarization, machine translation and so on, for using these monologue data as intellectual property effectively and efficiently, it is necessary not only just to accumulate but also to structure the monologue data. However, few attempts have been made to parse spoken monologues. Spontaneously spoken monologues include a lot of grammatically ill-formed linguistic phenomena such as fillers, hesitations and selfrepairs. In order to robustly deal with their extragrammaticality, some techniques for parsing of dialogue sentences have been proposed (Core and Schubert, 1999; Delmonte, 2003; Ohno et al., 2005b). On the other hand, monologues also have the characteristic feature that a sentence is generally longer and structurally more complicated than a sentence in dialogues which have been dealt with by the previous researches. Therefore, for a monologue sentence the parsing time would increase and the parsing accuracy would decrease. It is thought that more effective, high-performance spoken monologue parsing could be achieved by dividing a sentence into suitable language units for simplicity. This paper proposes a method for dependency parsing of monologue sentences based on sentence segmentati</context>
<context position="13131" citStr="Ohno et al., 2005" startWordPosition="2063" endWordPosition="2066">pendency rik, while the basic form of the independent word in a head bunsetsu is represented by hil, and its partsof-speech til. Furthermore, the distance between bunsetsus is described as diikl. Here, if a dependent bunsetsu has one or more ancillary words, the type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end buns</context>
<context position="27780" citStr="Ohno et al., 2005" startWordPosition="4499" endWordPosition="4502">e parsing ambiguity between specific types of clauses in order to improve the parsing accuracy of an entire sentence. On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of longsentence parsing, we thought that it would be more effective to cyclopaedically divide a sentence into all types of clauses and then parse the local dependency structure of each clause. Moreover, since our method can perform dependency parsing clause-by-clause, we can reasonably expect our method to be applicable to incremental parsing (Ohno et al., 2005a). 7 Conclusions In this paper, we proposed a technique for dependency parsing of monologue sentences based on clause-boundary detection. The method can achieve more effective, high-performance spoken monologue parsing by dividing a sentence into clauses, which are considered as suitable language units for simplicity. To evaluate the effectiveness of our method for Japanese spoken monologue, we conducted an experiment on dependency parsing of the spoken monologue sentences recorded in the “Asu-Wo-Yomu.” From the experimental re175 sults, we confirmed that our method shortened the parsing time</context>
</contexts>
<marker>Ohno, Matsubara, Kashioka, Kato, Inagaki, 2005</marker>
<rawString>T. Ohno, S. Matsubara, H. Kashioka, N. Kato, and Y. Inagaki. 2005a. Incremental dependency parsing of Japanese spoken monologue based on clause boundaries. In Proc. of 9th EUROSPEECH, pages 3449–3452.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Ohno</author>
<author>S Matsubara</author>
<author>N Kawaguchi</author>
<author>Y Inagaki</author>
</authors>
<title>Robust dependency parsing of spontaneous Japanese spoken language.</title>
<date>2005</date>
<journal>IEICE Transactions on Information and Systems,</journal>
<pages>88--3</pages>
<contexts>
<context position="2284" citStr="Ohno et al., 2005" startWordPosition="327" endWordPosition="330">tomatic summarization, machine translation and so on, for using these monologue data as intellectual property effectively and efficiently, it is necessary not only just to accumulate but also to structure the monologue data. However, few attempts have been made to parse spoken monologues. Spontaneously spoken monologues include a lot of grammatically ill-formed linguistic phenomena such as fillers, hesitations and selfrepairs. In order to robustly deal with their extragrammaticality, some techniques for parsing of dialogue sentences have been proposed (Core and Schubert, 1999; Delmonte, 2003; Ohno et al., 2005b). On the other hand, monologues also have the characteristic feature that a sentence is generally longer and structurally more complicated than a sentence in dialogues which have been dealt with by the previous researches. Therefore, for a monologue sentence the parsing time would increase and the parsing accuracy would decrease. It is thought that more effective, high-performance spoken monologue parsing could be achieved by dividing a sentence into suitable language units for simplicity. This paper proposes a method for dependency parsing of monologue sentences based on sentence segmentati</context>
<context position="13131" citStr="Ohno et al., 2005" startWordPosition="2063" endWordPosition="2066">pendency rik, while the basic form of the independent word in a head bunsetsu is represented by hil, and its partsof-speech til. Furthermore, the distance between bunsetsus is described as diikl. Here, if a dependent bunsetsu has one or more ancillary words, the type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end buns</context>
<context position="27780" citStr="Ohno et al., 2005" startWordPosition="4499" endWordPosition="4502">e parsing ambiguity between specific types of clauses in order to improve the parsing accuracy of an entire sentence. On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of longsentence parsing, we thought that it would be more effective to cyclopaedically divide a sentence into all types of clauses and then parse the local dependency structure of each clause. Moreover, since our method can perform dependency parsing clause-by-clause, we can reasonably expect our method to be applicable to incremental parsing (Ohno et al., 2005a). 7 Conclusions In this paper, we proposed a technique for dependency parsing of monologue sentences based on clause-boundary detection. The method can achieve more effective, high-performance spoken monologue parsing by dividing a sentence into clauses, which are considered as suitable language units for simplicity. To evaluate the effectiveness of our method for Japanese spoken monologue, we conducted an experiment on dependency parsing of the spoken monologue sentences recorded in the “Asu-Wo-Yomu.” From the experimental re175 sults, we confirmed that our method shortened the parsing time</context>
</contexts>
<marker>Ohno, Matsubara, Kawaguchi, Inagaki, 2005</marker>
<rawString>T. Ohno, S. Matsubara, N. Kawaguchi, and Y. Inagaki. 2005b. Robust dependency parsing of spontaneous Japanese spoken language. IEICE Transactions on Information and Systems, E88-D(3):545–552.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Ratnaparkhi</author>
</authors>
<title>A liner observed time statistical parser based on maximum entropy models.</title>
<date>1997</date>
<booktitle>In Proc. of 2nd EMNLP,</booktitle>
<pages>1--10</pages>
<contexts>
<context position="13348" citStr="Ratnaparkhi, 1997" startWordPosition="2100" endWordPosition="2101">bunsetsu has one or more ancillary words, the type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using the above attribute</context>
</contexts>
<marker>Ratnaparkhi, 1997</marker>
<rawString>A. Ratnaparkhi. 1997. A liner observed time statistical parser based on maximum entropy models. In Proc. of 2nd EMNLP, pages 1–10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Shirai</author>
<author>S Ikehara</author>
<author>A Yokoo</author>
<author>J Kimura</author>
</authors>
<title>A new dependency analysis method based on semantically embedded sentence structures and its performance on Japanese subordinate clause.</title>
<date>1995</date>
<journal>Journal of Information Processing Society of Japan,</journal>
<volume>36</volume>
<issue>10</issue>
<note>(In Japanese).</note>
<contexts>
<context position="26910" citStr="Shirai et al., 1995" startWordPosition="4357" endWordPosition="4360">dealt with long-sentence parsing. To resolve the syntactic ambiguity of a long sentence, some of them have focused attention on the “clause.” First, there are the studies that focused attention on compound clauses (Agarwal and Boggess, 1992; Kurohashi and Nagao, 1994). These tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the “scope-embedding preference” of Japanese subordinate clauses (Shirai et al., 1995; Utsuro et al., 2000). Furthermore, Kim et al. (Kim and Lee, 2004) divided a sentence into “S(ubject)-clauses,” which were defined as a group of words containing several predicates and their common subject. The above studies have attempted to reduce the parsing ambiguity between specific types of clauses in order to improve the parsing accuracy of an entire sentence. On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of longsentence parsing, we thought that it would be more effective to cyclopaedically divide</context>
</contexts>
<marker>Shirai, Ikehara, Yokoo, Kimura, 1995</marker>
<rawString>S. Shirai, S. Ikehara, A. Yokoo, and J. Kimura. 1995. A new dependency analysis method based on semantically embedded sentence structures and its performance on Japanese subordinate clause. Journal of Information Processing Society of Japan, 36(10):2353–2361. (In Japanese).</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Shitaoka</author>
<author>K Uchimoto</author>
<author>T Kawahara</author>
<author>H Isahara</author>
</authors>
<title>Dependency structure analysis and sentence boundary detection in spontaneous Japanese.</title>
<date>2004</date>
<booktitle>In Proc. of 20th COLING,</booktitle>
<pages>1107--1113</pages>
<contexts>
<context position="9691" citStr="Shitaoka et al., 2004" startWordPosition="1486" endWordPosition="1489">ethod, the transcribed sentence on which morphological analysis, clause boundary detection, and bunsetsu segmentation are performed is considered the input 4. The dependency 3Asu-Wo-Yomu is a collection of transcriptions of a TV commentary program of the Japan Broadcasting Corporation (NHK). The commentator speaks on some current social issue for 10 minutes. 4It is difficult to preliminarily divide a monologue into sentences because there are no clear sentence breaks in monologues. However, since some methods for detecting sentence boundaries have already been proposed (Huang and Zweig, 2002; Shitaoka et al., 2004), we assume that they can be detected automatically before dependency parsing. parsing is executed based on the following procedures: 1. Clause-level parsing: The internal dependency relations of clause boundary units are identified for every clause boundary unit in one sentence. 2. Sentence-level parsing: The dependency relations in which the dependent unit is the final bunsetsu of the clause boundary units are identified. In this paper, we describe a sequence of clause boundary units in a sentence as C1 · · · Cm, a sequence of bunsetsus in a clause boundary unit Ci as bi1 · · · bini, a depen</context>
</contexts>
<marker>Shitaoka, Uchimoto, Kawahara, Isahara, 2004</marker>
<rawString>K. Shitaoka, K. Uchimoto, T. Kawahara, and H. Isahara. 2004. Dependency structure analysis and sentence boundary detection in spontaneous Japanese. In Proc. of 20th COLING, pages 1107–1113.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Uchimoto</author>
<author>S Sekine</author>
<author>K Isahara</author>
</authors>
<title>Japanese dependency structure analysis based on maximum entropy models.</title>
<date>1999</date>
<booktitle>In Proc. of 9th EACL,</booktitle>
<pages>196--203</pages>
<contexts>
<context position="13398" citStr="Uchimoto et al., 1999" startWordPosition="2107" endWordPosition="2110">type of dependency is the lexicon, part-of-speech and conjugated form of the rightmost ancillary word, and if not so, it is the part-of-speech and conjugated form of the rightmost morpheme. The type of dependency rik is the same attribute used in our stochastic method proposed for robust dependency parsing of spoken language dialogue (Ohno et al., 2005b). Then diikl takes 1 or more than 1, that is, a binary value. Incidentally, the above attributes are the same as those used by the conventional stochastic dependency parsing methods (Collins, 1996; Ratnaparkhi, 1997; Fujio and Matsumoto, 1998; Uchimoto et al., 1999; Charniak, 2000; Kudo and Matsumoto, 2002). Additionally, we prepared the attribute eil to indicate whether bil is the final bunsetsu of a clause boundary unit. Since we can consider a clause boundary unit as a unit corresponding to a simple sentence, we can treat the final bunsetsu of a clause boundary unit as a sentence-end bunsetsu. The attribute that indicates whether a head bunsetsu is a sentence-end bunsetsu has often been used in conventional sentence-by-sentence parsing methods (e.g. Uchimoto et al., 1999). By using the above attributes, the conditional rel probability P(bk bil |Bi) i</context>
</contexts>
<marker>Uchimoto, Sekine, Isahara, 1999</marker>
<rawString>K. Uchimoto, S. Sekine, and K. Isahara. 1999. Japanese dependency structure analysis based on maximum entropy models. In Proc. of 9th EACL, pages 196–203.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Utsuro</author>
<author>S Nishiokayama</author>
<author>M Fujio</author>
<author>Y Matsumoto</author>
</authors>
<title>Analyzing dependencies of Japanese subordinate clauses based on statistics of scope embedding preference.</title>
<date>2000</date>
<booktitle>In Proc. of 6th ANLP,</booktitle>
<pages>110--117</pages>
<contexts>
<context position="26932" citStr="Utsuro et al., 2000" startWordPosition="4361" endWordPosition="4364">nce parsing. To resolve the syntactic ambiguity of a long sentence, some of them have focused attention on the “clause.” First, there are the studies that focused attention on compound clauses (Agarwal and Boggess, 1992; Kurohashi and Nagao, 1994). These tried to improve the parsing accuracy of long sentences by identifying the boundaries of coordinate structures. Next, other research efforts utilized the three categories into which various types of subordinate clauses are hierarchically classified based on the “scope-embedding preference” of Japanese subordinate clauses (Shirai et al., 1995; Utsuro et al., 2000). Furthermore, Kim et al. (Kim and Lee, 2004) divided a sentence into “S(ubject)-clauses,” which were defined as a group of words containing several predicates and their common subject. The above studies have attempted to reduce the parsing ambiguity between specific types of clauses in order to improve the parsing accuracy of an entire sentence. On the other hand, our method utilizes all types of clauses without limiting them to specific types of clauses. To improve the accuracy of longsentence parsing, we thought that it would be more effective to cyclopaedically divide a sentence into all t</context>
</contexts>
<marker>Utsuro, Nishiokayama, Fujio, Matsumoto, 2000</marker>
<rawString>T. Utsuro, S. Nishiokayama, M. Fujio, and Y. Matsumoto. 2000. Analyzing dependencies of Japanese subordinate clauses based on statistics of scope embedding preference. In Proc. of 6th ANLP, pages 110–117.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>