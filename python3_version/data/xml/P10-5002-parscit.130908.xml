<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.273183">
<title confidence="0.967237">
Tree-based and Forest-based Translation
</title>
<author confidence="0.999506">
Yang Liu
</author>
<affiliation confidence="0.9850535">
Institute of Computing Technology
Chinese Academy of Sciences
</affiliation>
<email confidence="0.98838">
yliu@ict.ac.cn
</email>
<sectionHeader confidence="0.999542" genericHeader="abstract">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99985875">
The past several years have witnessed rapid ad-
vances in syntax-based machine translation, which
exploits natural language syntax to guide transla-
tion. Depending on the type of input, most of these
efforts can be divided into two broad categories:
(a) string-based systems whose input is a string,
which is simultaneously parsed and translated by a
synchronous grammar (Wu, 1997; Chiang, 2005;
Galley et al., 2006), and (b) tree-based systems
whose input is already a parse tree to be directly
converted into a target tree or string (Lin, 2004;
Ding and Palmer, 2005; Quirk et al., 2005; Liu et
al., 2006; Huang et al., 2006).
Compared with their string-based counterparts,
tree-based systems offer many attractive features:
they are much faster in decoding (linear time vs.
cubic time), do not require sophisticated bina-
rization (Zhang et al., 2006), and can use sepa-
rate grammars for parsing and translation (e.g. a
context-free grammar for the former and a tree
substitution grammar for the latter).
However, despite these advantages, most tree-
based systems suffer from a major drawback: they
only use 1-best parse trees to direct translation,
which potentially introduces translation mistakes
due to parsing errors (Quirk and Corston-Oliver,
2006). This situation becomes worse for resource-
poor source languages without enough Treebank
data to train a high-accuracy parser.
This problem can be alleviated elegantly by us-
ing packed forests (Huang, 2008), which encodes
exponentially many parse trees in a polynomial
space. Forest-based systems (Mi et al., 2008; Mi
and Huang, 2008) thus take a packed forest instead
of a parse tree as an input. In addition, packed
forests could also be used for translation rule ex-
traction, which helps alleviate the propagation of
parsing errors into rule set. Forest-based transla-
tion can be regarded as a compromise between the
string-based and tree-based methods, while com-
</bodyText>
<author confidence="0.589899">
Liang Huang
</author>
<affiliation confidence="0.6980205">
Information Sciences Institute
University of Southern California
</affiliation>
<email confidence="0.676803">
lhuang@isi.edu
</email>
<bodyText confidence="0.999955833333333">
bining the advantages of both: decoding is still
fast, yet does not commit to a single parse. Sur-
prisingly, translating a forest of millions of trees
is even faster than translating 30 individual trees,
and offers significantly better translation quality.
This approach has since become a popular topic.
</bodyText>
<sectionHeader confidence="0.908569" genericHeader="categories and subject descriptors">
2 Content Overview
</sectionHeader>
<bodyText confidence="0.999895166666667">
This tutorial surveys tree-based and forest-based
translation methods. For each approach, we will
discuss the two fundamental tasks: decoding,
which performs the actual translation, and rule ex-
traction, which learns translation rules from real-
world data automatically. Finally, we will in-
troduce some more recent developments to tree-
based and forest-based translation, such as tree
sequence based models, tree-to-tree models, joint
parsing and translation, and faster decoding algo-
rithms. We will conclude our talk by pointing out
some directions for future work.
</bodyText>
<sectionHeader confidence="0.995388" genericHeader="general terms">
3 Tutorial Overview
</sectionHeader>
<listItem confidence="0.9926183125">
1. Tree-based Translation
• Motivations and Overview
• Tree-to-String Model and Decoding
• Tree-to-String Rule Extraction
• Language Model-Integrated Decoding:
Cube Pruning
2. Forest-based Translation
• Packed Forest
• Forest-based Decoding
• Forest-based Rule Extraction
3. Extensions
• Tree-Sequence-to-String Models
• Tree-to-Tree Models
• Joint Parsing and Translation
• Faster Decoding Methods
4. Conclusion and Open Problems
</listItem>
<page confidence="0.794806">
2
</page>
<reference confidence="0.84282">
Tutorial Abstracts of ACL 2010, page 2,
Uppsala, Sweden, 11 July 2010. c�2010 Association for Computational Linguistics
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.800617">
<title confidence="0.999752">Tree-based and Forest-based Translation</title>
<author confidence="0.997392">Yang Liu</author>
<affiliation confidence="0.9706745">Institute of Computing Technology Chinese Academy of Sciences</affiliation>
<intro confidence="0.851179">yliu@ict.ac.cn</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<booktitle>Tutorial Abstracts of ACL 2010,</booktitle>
<pages>2</pages>
<marker></marker>
<rawString>Tutorial Abstracts of ACL 2010, page 2,</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sweden Uppsala</author>
</authors>
<date>2010</date>
<booktitle>c�2010 Association for Computational Linguistics</booktitle>
<volume>11</volume>
<marker>Uppsala, 2010</marker>
<rawString>Uppsala, Sweden, 11 July 2010. c�2010 Association for Computational Linguistics</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>