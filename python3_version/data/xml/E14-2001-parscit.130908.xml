<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.016486">
<title confidence="0.965312">
ITU Turkish NLP Web Service
</title>
<author confidence="0.996004">
G¨uls¸en Eryi˘git
</author>
<affiliation confidence="0.9969535">
Department of Computer Engineering
Istanbul Technical University
</affiliation>
<address confidence="0.520425">
Istanbul, 34469, Turkey
</address>
<email confidence="0.997691">
gulsen.cebiroglu@itu.edu.tr
</email>
<sectionHeader confidence="0.993863" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9999813125">
We present a natural language processing
(NLP) platform, namely the “ITU Turk-
ish NLP Web Service” by the natural lan-
guage processing group of Istanbul Tech-
nical University. The platform (available
at tools.nlp.itu.edu.tr) operates
as a SaaS (Software as a Service) and pro-
vides the researchers and the students the
state of the art NLP tools in many lay-
ers: preprocessing, morphology, syntax
and entity recognition. The users may
communicate with the platform via three
channels: 1. via a user friendly web inter-
face, 2. by file uploads and 3. by using the
provided Web APIs within their own codes
for constructing higher level applications.
</bodyText>
<sectionHeader confidence="0.9988" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999925928571429">
ITU NLP research group is devoted to produce
Turkish NLP tools for more than 10 years. The
group offers many NLP courses in graduate level
and core NLP research components to different re-
search groups both in NLP field and other disci-
plines: e.g. linguistics, data mining, web mining
and information retrieval. The motivation of the
presented platform in this paper comes from the
real word problems of sharing the produced NLP
resources by different people from varying level of
computer background (starting from undergradu-
ates to PhD students or researchers, people from
other fields (e.g.linguistics)). These may be cate-
gorized under the following main problems:
</bodyText>
<listItem confidence="0.996839083333333">
1. Need to provide assistance for the installa-
tion and the usage of different tools, all pos-
ing different technological requirements in
the users’ computers.
2. Difficulty to share the updates and the new
modules introduced into the pipeline.
3. Difficulty of using the tools for educational
purposes within the classrooms and term
projects.
4. licensing issues of the underlying technolo-
gies (such as FST and machine learning soft-
wares)
</listItem>
<bodyText confidence="0.999279235294118">
The difficulty in the ease-of-use of Turkish NLP
tools and their inconsistencies with each others
were also causing the replication of the same effort
in different places and preventing the community
from working on less-studied higher level areas for
the Turkish language. A good example to this may
be the efforts for creating Turkish morphological
analyzers: some outstanding ones among many
others are (Oflazer, 1994; Eryi˘git and Adalı, 2004;
Akın and Akın, 2007; Sak et al., 2008; C¸ ¨oltekin,
2010; S¸ahin et al., 2013))
In this paper, we present our new web ser-
vice which provides both a whole Turkish NLP
pipeline (from raw data to syntax, example given
in Figure1 priorly defined in (Eryi˘git, 2012)) and
its atomic NLP components for stand-alone usage,
namely:
</bodyText>
<listItem confidence="0.99994">
• Tokenizer
• Deasciifier
• Vowelizer
• Spelling Corrector
• Normalizer
• isTurkish
• Morphological Analyzer
• Morphological Disambiguator
• Named Entity Recognizer
• Dependency Parser
</listItem>
<sectionHeader confidence="0.943526" genericHeader="introduction">
2 Provided Components
</sectionHeader>
<bodyText confidence="0.99994875">
The provided components via our web service
may be grouped under 4 layers: preprocessing,
morphological processing, multiword expression
handling and syntactic processing.
</bodyText>
<subsectionHeader confidence="0.985379">
2.1 Preprocessing
</subsectionHeader>
<bodyText confidence="0.999918">
The preprocessing layer consists of many sub
components specifically developed for unformat-
</bodyText>
<page confidence="0.74692">
1
</page>
<note confidence="0.927277">
Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 1–4,
Gothenburg, Sweden, April 26-30 2014. c�2014 Association for Computational Linguistics
</note>
<table confidence="0.90291075">
SENTENCE
Oulput MWE SLIVECT
Rahat et Paiifik_Kenter
1 rahat rahat Adj Adj _ 2 MWE
2 et et Verb Verb PoslImplA2sg 4 SENTENCE
3 M4fik_Kenter M4fik Kenter Noun Prop A3sgIPnon &apos;Nom 2 SUBJECT
4:C :( Purc Punc _ 0 ROOT
Syntactic Parser
</table>
<figure confidence="0.990833425">
Rahat et Mii5fik_Renter Osmiley[:(0
• rahat+Adj • et+Verb+Pos • MOgfik_Kenter+ Noun+ Prop • sm iley[: CC]
+Imp+A2sg +A3sg+Pnon+Nom
(Adj.peaceful) (Verb.Do) (PersonName..Mii4fik_Kenter)
CRNam ed Entity
ecognize-
Rahat et Müfik Kenter asmiley[:((]
• rahat+Adj • et+Verb+Pos • mWik+ Noun+ Prop • Kenter+Noun+Prop • @ism iley[: (C]
+Imp+A2sg +A3sg+Pnon+Nom +A3sg+ Pnon+ Nom
(Adj.peaceful) (Verb. Do) (ProperN.Mil5fik) (ProperALKenter)
et
• et+ Noun+A3sg
+ Pnon+ Nom
(No tin. meat)
• et+ Verb+Pos
+Imp+A2sg
(Verb. Do)
CDiMorph° ogical
sambiguator
-----!Rahat
.Z7 a. rahat+ N au n+ A3sg
+ Pnon+ Nom
(Noun. comfort)
• rahat+Adj
(Adj.peacefui)
Muflk Kenter asmiley[:((]
• mi-jgfik+Adj • Kenter+Noun+Prop • ©smiley[:((]
+A3sg+Pnon+Nom
(Adj. kind) (ProperN.Kenter)
• m fijfik+Noun+ Prop
+A3sg+Pnon+ NOM
(ProperN.Milfik)
Morph° ogical
Analyzer
Rahat et MiiVik Renter ©5miley[:(0
(Rest in peace MEtqhk Kenter
CNorm alizer
Z\
Raw Dal,
raliat CM 14 USFIK KEKTER :((
</figure>
<figureCaption confidence="0.999813">
Figure 1: ITU Turkish NLP Pipeline
</figureCaption>
<page confidence="0.964127">
2
</page>
<bodyText confidence="0.999847111111111">
ted social media data in focus. These are a tok-
enizer, a diacritic restorer, a vowelizer, a spelling
corrector and a normalizer. The diacritic restorer 1
is the component where the ASCII characters are
transformed into their proper Turkish forms. The
deasciifier (Adalı and Eryi˘git, 2014) chooses the
most probable candidate within the current context
by using conditional random fields (CRFs). The
vocalizer (Adalı and Eryi˘git, 2014) restores the
omitted vowels (generally within the social media
messages for shortening purpose): e.g. “svyrm”
will be converted to “seviyorum” (I love you).
The spelling corrector2 is kind of an adaptation
of Wang et al.(2011) into agglutinative languages.
The normalizer (Torunoˇglu and Eryi˘git, 2014) is
constructed of the previous three components and
many other modules and provides a state of the art
text normalizer for Turkish.
</bodyText>
<subsectionHeader confidence="0.991962">
2.2 Morphological Processing
</subsectionHeader>
<bodyText confidence="0.999978142857143">
This layer consists of a rule based morpholog-
ical analyzer (S¸ahin et al., 2013; S¸ahin, 2014)
which uses HFST-Helsinki Finite State Transducer
(Lind´en et al., 2009) and a hybrid morphological
disambiguator3. This layer also provides the is-
Turkish component which validates a word by us-
ing the morphological analyzer.
</bodyText>
<subsectionHeader confidence="0.996262">
2.3 Multi Word Expressions
</subsectionHeader>
<bodyText confidence="0.999898375">
As shown in Eryigit et al. (2011), the detection
and unification of the named entities has the high-
est impact for the syntactic layer. That is why the
following Turkish named entity recognizer (S¸eker
and Eryi˘git, 2012) is included within the pipeline
and the remaining multiword expressions are de-
tected in the syntactic layer as shown in Figure 1
(dependency label MWE).
</bodyText>
<subsectionHeader confidence="0.995392">
2.4 Syntactic Parsing
</subsectionHeader>
<bodyText confidence="0.99991">
For the syntactic layer we are providing the state
of the art dependency parser for Turkish presented
in (Eryi˘git et al., 2008; Nivre et al., 2007) which
produces the ouputs in Conll format (Buchholz
and Marsi, 2006).
</bodyText>
<sectionHeader confidence="0.995176" genericHeader="conclusions">
3 Conclusion and Future Work
</sectionHeader>
<bodyText confidence="0.999903">
We introduced our ITU Turkish NLP Web Plat-
form which provides us easier administration, au-
tomatic updates and patch management, com-
</bodyText>
<footnote confidence="0.99899275">
1named as “deasciifier” since the term is already adopted
by the Turkish community
2Publication in preparation.
3Publication in preparation.
</footnote>
<bodyText confidence="0.999948125">
patibility, easier usage, easier collaboration4 and
global accessibility by being designed as a SaaS.
Any body from any discipline with any level of un-
derlying computer background may easily use our
web interface either for only analyzing language
data or for constructing more complicated NLP
systems. The platform already attracted many
users from different universities in Turkey and it is
now started to get used in many research projects
and graduate theses. We believe as being the pi-
oneer serving almost all of the available and top
performing NLP tools for Turkish, ITU Turkish
NLP Web Service will fed light to new research
topics for this language.
For now, the pipeline is constructed by convert-
ing the input output formats of each individual
tools. But our current effort is to transform the
platform into a UIMA(Ferrucci and Lally, 2004)
compliant architecture so that it can also integrate
with other such platforms universally. We also
plan to service the new version of ITU Data Anno-
tation Tool (Eryi˘git, 2007) from the same address
where the users will also be able to see their data
visually (e.g. dependency trees)
</bodyText>
<sectionHeader confidence="0.98563" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.998382">
I want to thank my students without whose it
would be impossible to produce the ITU Turkish
NLP pipeline: Thomas Joole, Dilara Toruno˘glu,
Umut Sulubacak and Hasan Kaya. This work is
part of a research project supported by TUBITAK
1001(Grant number: 112E276) as an ICT cost ac-
tion (IC1207) project.
</bodyText>
<sectionHeader confidence="0.953081" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.454598842105263">
K¨ubra Adalı and G¨uls¸en Eryi˘git. 2014. Vowel and
diacritic restoration for social media texts. In 5th
Workshop on Language Analysis for Social Media
(LASM) at EACL, Gothenburg, Sweden, April. As-
sociation for Computational Linguistics.
Ahmet Afsin Akın and Mehmet D¨undar Akın. 2007.
Zemberek, an open source nlp framework for turkic
languages. Structure.
Sabine Buchholz and Erwin Marsi. 2006. Conll-X
shared task on multilingual dependency parsing. In
Proceedings of the 10th Conference on Computa-
tional Natural Language Learning, pages 149–164,
New York, NY. Association for Computational Lin-
guistics.
C¸a˘grı C¸ ¨oltekin. 2010. A freely available morpho-
logical analyzer for Turkish. In Proceedings of
the 7th International conference on Language Re-
sources and Evaluation (LREC2010), pages 820–
827.
</reference>
<footnote confidence="0.9798475">
4The mailing list notifications are sent to registered users
with each new broadcast.
</footnote>
<page confidence="0.995589">
3
</page>
<figureCaption confidence="0.990979">
Figure 2: ITU Turkish NLP Web Interface
</figureCaption>
<reference confidence="0.987519328571429">
G¨uls en Eryi˘git and Es ref Adalı. 2004. An affix strip-
ping morphological analyzer for Turkish. In Pro-
ceedings of the International Conference on Artifi-
cial Intelligence and Applications, pages 299–304,
Innsbruck, 16-18 February.
Gulsen Eryigit, Tugay Ilbay, and Ozan Arkan Can.
2011. Multiword expressions in statistical depen-
dency parsing. In Proceedings of the Second Work-
shop on Statistical Parsing of Morphologically Rich
Languages (IWPT), pages 45–55, Dublin, Ireland,
October. Association for Computational Linguistics.
G¨uls en Eryi˘git. 2007. Itu treebank annotation tool.
In Proceedings of the ACL workshop on Linguistic
Annotation (LAW 2007), Prague, 24-30 June.
G¨uls en Eryi˘git. 2012. The impact of automatic mor-
phological analysis &amp; disambiguation on depen-
dency parsing of turkish. In Proceedings of the
Eighth International Conference on Language Re-
sources and Evaluation (LREC), Istanbul, Turkey,
23-25 May.
G¨uls en Eryi˘git, Joakim Nivre, and Kemal Oflazer.
2008. Dependency parsing of Turkish. Computa-
tional Linguistics, 34(3):357–389.
David Ferrucci and Adam Lally. 2004. UIMA: an
architectural approach to unstructured information
processing in the corporate research environment.
Natural Language Engineering, 10(3-4):327–348.
Krister Lind´en, Miikka Silfverberg, and Tommi Piri-
nen. 2009. Hfst tools for morphology–an efficient
open-source package for construction of morpholog-
ical analyzers. In State of the Art in Computational
Morphology, pages 28–47. Springer.
Joakim Nivre, Johan Hall, Jens Nilsson, Atanas
Chanev, G¨uls en Eryi˘git, Sandra K¨ubler, Stetoslav
Marinov, and Erwin Marsi. 2007. Maltparser:
A language-independent system for data-driven de-
pendency parsing. Natural Language Engineering
Journal, 13(2):99–135.
Kemal Oflazer. 1994. Two-level description of Turk-
ish morphology. Literary and Linguistic Comput-
ing, 9(2):137–148.
Muhammet S ahin, Umut Sulubacak, and G¨uls en
Eryi˘git. 2013. Redefinition of Turkish morphol-
ogy using flag diacritics. In Proceedings of The
Tenth Symposium on Natural Language Processing
(SNLP-2013), Phuket, Thailand, October.
Muhammet S ahin. 2014. ITUMorph, a more accurate
and faster wide coverage morphological analyzer for
Turkish. Master’s thesis, Istanbul Technical Univer-
sity.
Has im Sak, Tunga G¨ung¨or, and Murat Sarac lar. 2008.
Turkish language resources: Morphological parser,
morphological disambiguator and web corpus. In
GoTAL 2008, volume 5221 of LNCS, pages 417–
427. Springer.
G¨okhan Akın S eker and G¨uls en Eryi˘git. 2012. Initial
explorations on using CRFs for Turkish named en-
tity recognition. In Proceedings of COLING 2012,
Mumbai, India, 8-15 December.
Dilara Torunoˇglu and G¨uls en Eryi˘git. 2014. A cas-
caded approach for social media text normalization
of Turkish. In 5th Workshop on Language Analy-
sis for Social Media (LASM) at EACL, Gothenburg,
Sweden, April. Association for Computational Lin-
guistics.
Ziqi Wang, Gu Xu, Hang Li, and Ming Zhang. 2011.
A fast and accurate method for approximate string
search. In Proceedings of the 49th Annual Meet-
ing of the Association for Computational Linguis-
tics: Human Language Technologies, pages 52–61.
</reference>
<page confidence="0.996668">
4
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.780553">
<author confidence="0.852649">ITU Turkish NLP Web Service</author>
<affiliation confidence="0.984046">Department of Computer Istanbul Technical</affiliation>
<address confidence="0.999612">Istanbul, 34469,</address>
<email confidence="0.993203">gulsen.cebiroglu@itu.edu.tr</email>
<abstract confidence="0.995897764705882">We present a natural language processing (NLP) platform, namely the “ITU Turkish NLP Web Service” by the natural language processing group of Istanbul Technical University. The platform (available operates as a SaaS (Software as a Service) and provides the researchers and the students the state of the art NLP tools in many layers: preprocessing, morphology, syntax and entity recognition. The users may communicate with the platform via three channels: 1. via a user friendly web interface, 2. by file uploads and 3. by using the provided Web APIs within their own codes for constructing higher level applications.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>K¨ubra Adalı</author>
<author>G¨uls¸en Eryi˘git</author>
</authors>
<title>Vowel and diacritic restoration for social media texts.</title>
<date>2014</date>
<booktitle>In 5th Workshop on Language Analysis for Social Media (LASM) at EACL,</booktitle>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Gothenburg, Sweden,</location>
<marker>Adalı, Eryi˘git, 2014</marker>
<rawString>K¨ubra Adalı and G¨uls¸en Eryi˘git. 2014. Vowel and diacritic restoration for social media texts. In 5th Workshop on Language Analysis for Social Media (LASM) at EACL, Gothenburg, Sweden, April. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<title>Ahmet Afsin Akın and Mehmet D¨undar Akın.</title>
<date>2007</date>
<journal>Structure.</journal>
<marker>2007</marker>
<rawString>Ahmet Afsin Akın and Mehmet D¨undar Akın. 2007. Zemberek, an open source nlp framework for turkic languages. Structure.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sabine Buchholz</author>
<author>Erwin Marsi</author>
</authors>
<title>Conll-X shared task on multilingual dependency parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the 10th Conference on Computational Natural Language Learning,</booktitle>
<pages>149--164</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>New York, NY.</location>
<contexts>
<context position="6503" citStr="Buchholz and Marsi, 2006" startWordPosition="992" endWordPosition="995">Expressions As shown in Eryigit et al. (2011), the detection and unification of the named entities has the highest impact for the syntactic layer. That is why the following Turkish named entity recognizer (S¸eker and Eryi˘git, 2012) is included within the pipeline and the remaining multiword expressions are detected in the syntactic layer as shown in Figure 1 (dependency label MWE). 2.4 Syntactic Parsing For the syntactic layer we are providing the state of the art dependency parser for Turkish presented in (Eryi˘git et al., 2008; Nivre et al., 2007) which produces the ouputs in Conll format (Buchholz and Marsi, 2006). 3 Conclusion and Future Work We introduced our ITU Turkish NLP Web Platform which provides us easier administration, automatic updates and patch management, com1named as “deasciifier” since the term is already adopted by the Turkish community 2Publication in preparation. 3Publication in preparation. patibility, easier usage, easier collaboration4 and global accessibility by being designed as a SaaS. Any body from any discipline with any level of underlying computer background may easily use our web interface either for only analyzing language data or for constructing more complicated NLP sys</context>
</contexts>
<marker>Buchholz, Marsi, 2006</marker>
<rawString>Sabine Buchholz and Erwin Marsi. 2006. Conll-X shared task on multilingual dependency parsing. In Proceedings of the 10th Conference on Computational Natural Language Learning, pages 149–164, New York, NY. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C¸a˘grı C¸ ¨oltekin</author>
</authors>
<title>A freely available morphological analyzer for Turkish.</title>
<date>2010</date>
<booktitle>In Proceedings of the 7th International conference on Language Resources and Evaluation (LREC2010),</booktitle>
<pages>820--827</pages>
<marker>¨oltekin, 2010</marker>
<rawString>C¸a˘grı C¸ ¨oltekin. 2010. A freely available morphological analyzer for Turkish. In Proceedings of the 7th International conference on Language Resources and Evaluation (LREC2010), pages 820– 827.</rawString>
</citation>
<citation valid="true">
<title>G¨uls en Eryi˘git and Es ref Adalı.</title>
<date>2004</date>
<booktitle>In Proceedings of the International Conference on Artificial Intelligence and Applications,</booktitle>
<pages>299--304</pages>
<location>Innsbruck,</location>
<marker>2004</marker>
<rawString>G¨uls en Eryi˘git and Es ref Adalı. 2004. An affix stripping morphological analyzer for Turkish. In Proceedings of the International Conference on Artificial Intelligence and Applications, pages 299–304, Innsbruck, 16-18 February.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gulsen Eryigit</author>
<author>Tugay Ilbay</author>
<author>Ozan Arkan Can</author>
</authors>
<title>Multiword expressions in statistical dependency parsing.</title>
<date>2011</date>
<booktitle>In Proceedings of the Second Workshop on Statistical Parsing of Morphologically Rich Languages (IWPT),</booktitle>
<pages>45--55</pages>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Dublin, Ireland,</location>
<contexts>
<context position="5923" citStr="Eryigit et al. (2011)" startWordPosition="897" endWordPosition="900">11) into agglutinative languages. The normalizer (Torunoˇglu and Eryi˘git, 2014) is constructed of the previous three components and many other modules and provides a state of the art text normalizer for Turkish. 2.2 Morphological Processing This layer consists of a rule based morphological analyzer (S¸ahin et al., 2013; S¸ahin, 2014) which uses HFST-Helsinki Finite State Transducer (Lind´en et al., 2009) and a hybrid morphological disambiguator3. This layer also provides the isTurkish component which validates a word by using the morphological analyzer. 2.3 Multi Word Expressions As shown in Eryigit et al. (2011), the detection and unification of the named entities has the highest impact for the syntactic layer. That is why the following Turkish named entity recognizer (S¸eker and Eryi˘git, 2012) is included within the pipeline and the remaining multiword expressions are detected in the syntactic layer as shown in Figure 1 (dependency label MWE). 2.4 Syntactic Parsing For the syntactic layer we are providing the state of the art dependency parser for Turkish presented in (Eryi˘git et al., 2008; Nivre et al., 2007) which produces the ouputs in Conll format (Buchholz and Marsi, 2006). 3 Conclusion and F</context>
</contexts>
<marker>Eryigit, Ilbay, Can, 2011</marker>
<rawString>Gulsen Eryigit, Tugay Ilbay, and Ozan Arkan Can. 2011. Multiword expressions in statistical dependency parsing. In Proceedings of the Second Workshop on Statistical Parsing of Morphologically Rich Languages (IWPT), pages 45–55, Dublin, Ireland, October. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G¨uls en Eryi˘git</author>
</authors>
<title>Itu treebank annotation tool.</title>
<date>2007</date>
<booktitle>In Proceedings of the ACL workshop on Linguistic Annotation (LAW 2007),</booktitle>
<location>Prague,</location>
<marker>Eryi˘git, 2007</marker>
<rawString>G¨uls en Eryi˘git. 2007. Itu treebank annotation tool. In Proceedings of the ACL workshop on Linguistic Annotation (LAW 2007), Prague, 24-30 June.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G¨uls en Eryi˘git</author>
</authors>
<title>The impact of automatic morphological analysis &amp; disambiguation on dependency parsing of turkish.</title>
<date>2012</date>
<booktitle>In Proceedings of the Eighth International Conference on Language Resources and Evaluation (LREC),</booktitle>
<location>Istanbul,</location>
<marker>Eryi˘git, 2012</marker>
<rawString>G¨uls en Eryi˘git. 2012. The impact of automatic morphological analysis &amp; disambiguation on dependency parsing of turkish. In Proceedings of the Eighth International Conference on Language Resources and Evaluation (LREC), Istanbul, Turkey, 23-25 May.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G¨uls en Eryi˘git</author>
<author>Joakim Nivre</author>
<author>Kemal Oflazer</author>
</authors>
<title>Dependency parsing of Turkish.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<volume>34</volume>
<issue>3</issue>
<marker>Eryi˘git, Nivre, Oflazer, 2008</marker>
<rawString>G¨uls en Eryi˘git, Joakim Nivre, and Kemal Oflazer. 2008. Dependency parsing of Turkish. Computational Linguistics, 34(3):357–389.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Ferrucci</author>
<author>Adam Lally</author>
</authors>
<title>UIMA: an architectural approach to unstructured information processing in the corporate research environment.</title>
<date>2004</date>
<journal>Natural Language Engineering,</journal>
<pages>10--3</pages>
<contexts>
<context position="7656" citStr="Ferrucci and Lally, 2004" startWordPosition="1176" endWordPosition="1179">nly analyzing language data or for constructing more complicated NLP systems. The platform already attracted many users from different universities in Turkey and it is now started to get used in many research projects and graduate theses. We believe as being the pioneer serving almost all of the available and top performing NLP tools for Turkish, ITU Turkish NLP Web Service will fed light to new research topics for this language. For now, the pipeline is constructed by converting the input output formats of each individual tools. But our current effort is to transform the platform into a UIMA(Ferrucci and Lally, 2004) compliant architecture so that it can also integrate with other such platforms universally. We also plan to service the new version of ITU Data Annotation Tool (Eryi˘git, 2007) from the same address where the users will also be able to see their data visually (e.g. dependency trees) Acknowledgments I want to thank my students without whose it would be impossible to produce the ITU Turkish NLP pipeline: Thomas Joole, Dilara Toruno˘glu, Umut Sulubacak and Hasan Kaya. This work is part of a research project supported by TUBITAK 1001(Grant number: 112E276) as an ICT cost action (IC1207) project. </context>
</contexts>
<marker>Ferrucci, Lally, 2004</marker>
<rawString>David Ferrucci and Adam Lally. 2004. UIMA: an architectural approach to unstructured information processing in the corporate research environment. Natural Language Engineering, 10(3-4):327–348.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Krister Lind´en</author>
<author>Miikka Silfverberg</author>
<author>Tommi Pirinen</author>
</authors>
<title>Hfst tools for morphology–an efficient open-source package for construction of morphological analyzers.</title>
<date>2009</date>
<booktitle>In State of the Art in Computational Morphology,</booktitle>
<pages>28--47</pages>
<publisher>Springer.</publisher>
<marker>Lind´en, Silfverberg, Pirinen, 2009</marker>
<rawString>Krister Lind´en, Miikka Silfverberg, and Tommi Pirinen. 2009. Hfst tools for morphology–an efficient open-source package for construction of morphological analyzers. In State of the Art in Computational Morphology, pages 28–47. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joakim Nivre</author>
<author>Johan Hall</author>
<author>Jens Nilsson</author>
</authors>
<title>Atanas Chanev, G¨uls en Eryi˘git, Sandra K¨ubler, Stetoslav Marinov, and Erwin Marsi.</title>
<date>2007</date>
<journal>Natural Language Engineering Journal,</journal>
<volume>13</volume>
<issue>2</issue>
<contexts>
<context position="6434" citStr="Nivre et al., 2007" startWordPosition="981" endWordPosition="984">tes a word by using the morphological analyzer. 2.3 Multi Word Expressions As shown in Eryigit et al. (2011), the detection and unification of the named entities has the highest impact for the syntactic layer. That is why the following Turkish named entity recognizer (S¸eker and Eryi˘git, 2012) is included within the pipeline and the remaining multiword expressions are detected in the syntactic layer as shown in Figure 1 (dependency label MWE). 2.4 Syntactic Parsing For the syntactic layer we are providing the state of the art dependency parser for Turkish presented in (Eryi˘git et al., 2008; Nivre et al., 2007) which produces the ouputs in Conll format (Buchholz and Marsi, 2006). 3 Conclusion and Future Work We introduced our ITU Turkish NLP Web Platform which provides us easier administration, automatic updates and patch management, com1named as “deasciifier” since the term is already adopted by the Turkish community 2Publication in preparation. 3Publication in preparation. patibility, easier usage, easier collaboration4 and global accessibility by being designed as a SaaS. Any body from any discipline with any level of underlying computer background may easily use our web interface either for only</context>
</contexts>
<marker>Nivre, Hall, Nilsson, 2007</marker>
<rawString>Joakim Nivre, Johan Hall, Jens Nilsson, Atanas Chanev, G¨uls en Eryi˘git, Sandra K¨ubler, Stetoslav Marinov, and Erwin Marsi. 2007. Maltparser: A language-independent system for data-driven dependency parsing. Natural Language Engineering Journal, 13(2):99–135.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kemal Oflazer</author>
</authors>
<title>Two-level description of Turkish morphology.</title>
<date>1994</date>
<journal>Literary and Linguistic Computing,</journal>
<volume>9</volume>
<issue>2</issue>
<contexts>
<context position="2354" citStr="Oflazer, 1994" startWordPosition="365" endWordPosition="366"> Difficulty of using the tools for educational purposes within the classrooms and term projects. 4. licensing issues of the underlying technologies (such as FST and machine learning softwares) The difficulty in the ease-of-use of Turkish NLP tools and their inconsistencies with each others were also causing the replication of the same effort in different places and preventing the community from working on less-studied higher level areas for the Turkish language. A good example to this may be the efforts for creating Turkish morphological analyzers: some outstanding ones among many others are (Oflazer, 1994; Eryi˘git and Adalı, 2004; Akın and Akın, 2007; Sak et al., 2008; C¸ ¨oltekin, 2010; S¸ahin et al., 2013)) In this paper, we present our new web service which provides both a whole Turkish NLP pipeline (from raw data to syntax, example given in Figure1 priorly defined in (Eryi˘git, 2012)) and its atomic NLP components for stand-alone usage, namely: • Tokenizer • Deasciifier • Vowelizer • Spelling Corrector • Normalizer • isTurkish • Morphological Analyzer • Morphological Disambiguator • Named Entity Recognizer • Dependency Parser 2 Provided Components The provided components via our web servi</context>
</contexts>
<marker>Oflazer, 1994</marker>
<rawString>Kemal Oflazer. 1994. Two-level description of Turkish morphology. Literary and Linguistic Computing, 9(2):137–148.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Muhammet S ahin</author>
</authors>
<title>Umut Sulubacak, and G¨uls en Eryi˘git.</title>
<date>2013</date>
<booktitle>In Proceedings of The Tenth Symposium on Natural Language Processing (SNLP-2013),</booktitle>
<location>Phuket, Thailand,</location>
<marker>ahin, 2013</marker>
<rawString>Muhammet S ahin, Umut Sulubacak, and G¨uls en Eryi˘git. 2013. Redefinition of Turkish morphology using flag diacritics. In Proceedings of The Tenth Symposium on Natural Language Processing (SNLP-2013), Phuket, Thailand, October.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Muhammet S ahin</author>
</authors>
<title>ITUMorph, a more accurate and faster wide coverage morphological analyzer for Turkish. Master’s thesis,</title>
<date>2014</date>
<institution>Istanbul Technical University.</institution>
<contexts>
<context position="5638" citStr="ahin, 2014" startWordPosition="855" endWordPosition="856">ds (CRFs). The vocalizer (Adalı and Eryi˘git, 2014) restores the omitted vowels (generally within the social media messages for shortening purpose): e.g. “svyrm” will be converted to “seviyorum” (I love you). The spelling corrector2 is kind of an adaptation of Wang et al.(2011) into agglutinative languages. The normalizer (Torunoˇglu and Eryi˘git, 2014) is constructed of the previous three components and many other modules and provides a state of the art text normalizer for Turkish. 2.2 Morphological Processing This layer consists of a rule based morphological analyzer (S¸ahin et al., 2013; S¸ahin, 2014) which uses HFST-Helsinki Finite State Transducer (Lind´en et al., 2009) and a hybrid morphological disambiguator3. This layer also provides the isTurkish component which validates a word by using the morphological analyzer. 2.3 Multi Word Expressions As shown in Eryigit et al. (2011), the detection and unification of the named entities has the highest impact for the syntactic layer. That is why the following Turkish named entity recognizer (S¸eker and Eryi˘git, 2012) is included within the pipeline and the remaining multiword expressions are detected in the syntactic layer as shown in Figure </context>
</contexts>
<marker>ahin, 2014</marker>
<rawString>Muhammet S ahin. 2014. ITUMorph, a more accurate and faster wide coverage morphological analyzer for Turkish. Master’s thesis, Istanbul Technical University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Has im Sak</author>
<author>Tunga G¨ung¨or</author>
<author>Murat Sarac lar</author>
</authors>
<title>Turkish language resources: Morphological parser, morphological disambiguator and web corpus.</title>
<date>2008</date>
<booktitle>In GoTAL</booktitle>
<volume>5221</volume>
<pages>417--427</pages>
<publisher>Springer.</publisher>
<marker>Sak, G¨ung¨or, lar, 2008</marker>
<rawString>Has im Sak, Tunga G¨ung¨or, and Murat Sarac lar. 2008. Turkish language resources: Morphological parser, morphological disambiguator and web corpus. In GoTAL 2008, volume 5221 of LNCS, pages 417– 427. Springer.</rawString>
</citation>
<citation valid="true">
<title>G¨okhan Akın S eker and G¨uls en Eryi˘git.</title>
<date>2012</date>
<booktitle>In Proceedings of COLING 2012,</booktitle>
<location>Mumbai,</location>
<marker>2012</marker>
<rawString>G¨okhan Akın S eker and G¨uls en Eryi˘git. 2012. Initial explorations on using CRFs for Turkish named entity recognition. In Proceedings of COLING 2012, Mumbai, India, 8-15 December.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dilara Torunoˇglu</author>
<author>G¨uls en Eryi˘git</author>
</authors>
<title>A cascaded approach for social media text normalization of Turkish.</title>
<date>2014</date>
<booktitle>In 5th Workshop on Language Analysis for Social Media (LASM) at EACL,</booktitle>
<publisher>Association</publisher>
<institution>for Computational Linguistics.</institution>
<location>Gothenburg, Sweden,</location>
<marker>Torunoˇglu, Eryi˘git, 2014</marker>
<rawString>Dilara Torunoˇglu and G¨uls en Eryi˘git. 2014. A cascaded approach for social media text normalization of Turkish. In 5th Workshop on Language Analysis for Social Media (LASM) at EACL, Gothenburg, Sweden, April. Association for Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ziqi Wang</author>
<author>Gu Xu</author>
<author>Hang Li</author>
<author>Ming Zhang</author>
</authors>
<title>A fast and accurate method for approximate string search.</title>
<date>2011</date>
<booktitle>In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies,</booktitle>
<pages>52--61</pages>
<marker>Wang, Xu, Li, Zhang, 2011</marker>
<rawString>Ziqi Wang, Gu Xu, Hang Li, and Ming Zhang. 2011. A fast and accurate method for approximate string search. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 52–61.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>