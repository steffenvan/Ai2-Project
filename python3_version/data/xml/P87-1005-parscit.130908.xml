<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000013">
<note confidence="0.9392078">
AN ENVIRONMENT FOR ACQUIRING SEMANTIC INFORMATION
Damaris M. Ayuso, Varda Shaked, and Ralph M. Weischedel
BBN Laboratories Inc.
10 Moulton St.
Cambridge, MA 02238
</note>
<sectionHeader confidence="0.974687" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9997525">
An improved version of IRACQ (for Interpretation
Rule ACQuisition) is presented.1 Our approach to
semantic knowledge acquisition: 1) is in the context of
a general purpose NL interface rather than one that
accesses only databases, 2) employs a knowledge
representation formalism with limited inferencing
capabilities, 3) assumes a trained person but not an
Al expert, and 4) provides a complete environment for
not only acquiring semantic knowledge, but also main-
taining and editing it in a consistent knowledge base.
IRACQ is currently in use at the Naval Ocean Sys-
tems Center.
</bodyText>
<sectionHeader confidence="0.998981" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999469725806452">
The existence of commercial natural language in-
terfaces (NLI&apos;s), such as INTELLECT from Artificial
Intelligence Corporation and Q&amp;A from Symantec,
shows that NLI technology provides utility as an inter-
face to computer systems. The success of all NLI
technology is predicated upon the availability of sub-
stantial knowledge bases containing information about
the syntax and semantics of words, phrases, and
idioms, as well as knowledge of the domain and of
discourse context. A number of systems demonstrate
a high degree of transportability, in the sense that
software modules do not have to be changed when
moving the technology to a new domain area; only the
declarative, domain specific knowledge need be
changed. However, creating the knowledge bases
requires substantial effort, and therefore substantial
cost. It is this assessment of the state of the art that
causes us to conclude that knowledge acquisition is
one of the most fundamental problems to widespread
applicability of NLI technology.
This paper describes our contribution to the ac-
quisition of semantic knowledge as evidenced in
IRACQ (for Interpretation Rule ACQuisition), within
the context of our overall approach to representation
of domain knowledge and its use in the IRUS natural
language system [5, 6, 27]. An initial version of
IRACQ was reported in [19]. Using IRACQ, mappings
&apos;The work presented here was supported under DARPA contract
#N00014-85-C-0016. The views and conclusions contained in this
document are those of the authors and should not be interpreted as
necessarily representing the official policies, either expressed or
implied, of the Defense Advanced Research Projects Agency or of
the United States Government
between valid English constructs and predicates of
the domain may be defined by entering sample
phrases. The mappings, or interpretation rules
(IRules), may be defined for nouns, verbs, adjectives,
and prepositions. [Rules are used by the semantic
interpreter in enforcing selectional restrictions and
producing a logical form as the meaning represen-
tation of the input sentence.
IRACQ makes extensive use of information
present in a model of the domain, which is
represented using NIKL [18, 21], the terminological
reasoning component of KL-TWO [26]. Information
from the domain model is used in guiding the
IRACO/user interaction, assuring that acquisition and
editing yield IRules consistent with the model. Further
support exists for the !Rule developer through a
flexible editing and debugging environment. IRACQ
has been in use by non-Al experts at the Naval Ocean
Systems Center for the expansion of the database of
semantic rules in use by IRUS.
This paper first surveys the kinds of domain
specific knowledge necessary for an NLI as well as
approaches to their acquisition (section 2). Section 3
discusses dimensions in the design of a semantic ac-
quisition facility, describing our approach. In section 4
we describe IRules and how they are used. An ex-
ample of a clause IRule definition using IRACQ is
presented. Section 5 describes initial work on an
!Rule paraphraser. Conclusions are in section 6.
</bodyText>
<sectionHeader confidence="0.78624" genericHeader="introduction">
2 Kinds of Knowledge
</sectionHeader>
<bodyText confidence="0.996571736842105">
One kind of knowledge that must be acquired is
lexical information. This includes morphological infor-
mation, syntactic categories, complement structure (if
any), and pointers to semantic information associated
with individual words. Acquiring lexical information
may proceed by prompting a user, as in TEAM [13],
IRUS [7], and JANUS [9]. Alternatively, efforts are un-
derway to acquire the information directly from on-line
dictionaries [3, 16].
Semantic knowledge includes at least two kinds of
information: selectional restrictions or case frame con-
straints which can serve as a filter on what makes
sense semantically, and rules for translating the word
senses present in an input into an underlying seman-
tic representation. Acquiring such selectional restric-
tion information has been studied in TEAM, the Lin-
guistic String Parser [12], and our system. Acquiring
the meaning of the word senses has been studied by
several individuals, including [11, 17]. This paper
</bodyText>
<page confidence="0.998135">
32
</page>
<bodyText confidence="0.991502272727273">
focuses on acquiring such semantic knowledge using
IRACO.
Basic facts about the domain must be acquired as
well. This includes at least taxonomic information
about the semantic categories in the domain and bi-
nary relationships holding between semantic
categories. For instance, in the domain of Navy
decision-making at a US Fleet Command Center,
such basic domain facts include:
All submarines are vessels.
All vessels are units.
All units are organizational entities.
All vessels have a major weapon system.
All units have an overall combat readiness rating.
Such information, though not linguistic in nature, is
clearly necessary to understand natural language,
since, for instance, &amp;quot;Enterprise&apos;s overall rating&amp;quot;
presumes that there is such a readiness rating, which
can be verified in the axioms mentioned above about
the domain. However, this is clearly not a class of
knowledge peculiar to language comprehension or
generation, but is in fact essential in any intelligent
system. General tools for acquiring such knowledge
are emerging; we are employing KREME [1] for ac-
quiring and maintaining the domain knowledge.
Knowledge that relates the predicates in the
domain to their representation and access in the un-
derlying systems is certainly necessary. For instance,
we may have the unary predicates vessel and
harpoon.capable; nevertheless, the concept (i.e.,
unary predicate) corresponding to the logical expres-
sion ( X x) [vessel(x) &amp; harpoon.capable(x)] may cor-
respond to the existence of a &amp;quot;y&amp;quot; in the &amp;quot;harp&amp;quot; field of
the &amp;quot;uchar&amp;quot; relation of a data base. TEAM allows for
acquisition of this mapping by building predicates
&amp;quot;bottom-up&amp;quot; starting from database fields. We know
of no general acquisition approach that will work with
different kinds of underlying systems (not just
databases). However, maintaining a distinction be-
tween the concepts of the domain, as the user would
think of those concepts, separate from the organiza-
tion of the database structure or of some other under-
lying system, is a key characteristic of the design and
transportability of IRUS.
Finally, a fifth kind of knowledge is a set of domain
plans. Though no extensive set of such plans has
been developed yet, there is growing agreement that
such a library of plans is critical for understanding
narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and
ill-formed input [28], as well as for following the struc-
ture of discourse [14, 15]. Tools for acquiring a large
collection of domain plans from a domain expert,
rather than an Al expert, have not yet appeared.
However, inferring plans from textual examples is un-
der way [17].
</bodyText>
<sectionHeader confidence="0.929158" genericHeader="method">
3 Dimensions of Acquiring Semantic
Knowledge
</sectionHeader>
<bodyText confidence="0.999767">
We discuss in this section several dimensions
available in designing a tool for acquiring semantic
knowledge within the overall context of an NLI. In
presenting a partial description of the space of pos-
sible semantic acquisition tools, we describe where
our work and the work of several other significant,
recently reported systems fall in that space of pos-
sibilities.
</bodyText>
<subsectionHeader confidence="0.99997">
3.1 Class of underlying systems.
</subsectionHeader>
<bodyText confidence="0.999981871794872">
One could design tools for a specific subclass of
underlying systems, such as database management
systems, as in TEAM [13] and TELI [4]. The special
nature of the class of underlying systems may allow
for a more tailored acquisition environment, by having
special-purpose, stereotypical sequences of questions
for the user, and more powerful special-purpose in-
ferences. For example, in order to acquire the variety
of lexical items that can refer to a symbolic field in a
database (such as one stating whether a mountain is
a volcano), TEAM asks a series of questions, such as
&amp;quot;Adjectives referencing the positive value?&amp;quot;
(e.g., volcanic), and &amp;quot;Abstract nouns referencing the
positive value?&amp;quot; (e.g., volcano). The fact that the field
is binary allows for few and specific questions to be
asked.
The design of IRACO is intended to be general
purpose so that any underlying system, whether a
data base, an expert system, a planning system, etc.,
is a possibility for the NLI. This is achieved by having
a level of representation for the concepts, actions, and
capabilities of the domain, the domain model,
separate from the model of the entities in the under-
lying system. The meaning representation for an in-
put, a logical form, is given in terms of predicates
which correspond to domain model concepts and
roles (and are hence referred to as domain model
predicates). !Rules define the mappings from English
to these domain model predicates. In our NLI, a
separate component then translates from the meaning
representation to the specific representation of the un-
derlying system [24, 25]. IRACO has been used to
acquire semantic knowledge for access to both a rela-
tional database management system and an ad hoc
application system for drawing maps, providing cal-
culations, and preparing summaries; both systems
may be accessed from the NLI without the user being
particularly aware that there are two systems rather
than one underneath the NLI.
</bodyText>
<subsectionHeader confidence="0.99996">
3.2 Meaning representation.
</subsectionHeader>
<bodyText confidence="0.9998912">
Another dimension in the design of a semantic
knowledge acquisition tool is the style of the under-
lying semantic representation for natural language in-
put. One could postulate a unique predicate for al-
most every word sense of the language. TEAM
</bodyText>
<page confidence="0.998457">
33
</page>
<bodyText confidence="0.9999535">
seems to represent this approach. At some later level
of processing than the initial semantic acquisition, a
level of inference or question/answering must be
provided so that the commonalities of very similar
word senses are captured and appropriate inferences
made. A second approach seems to be represented
in TELI, where the meaning of a word sense is trans-
lated into a boolean composition of more primitive
predicates. SACO represents a related approach,
but we allow a many-to-one mapping between word
senses and predicates of the domain, and use a more
constraining representation for the meaning of word
senses. Following the analysis of Davidson [10] we
represent the meaning of events (and also of states of
affairs) as a conjunction of a single unary predicate
and arbitrarily many binary predicates. Objects are
represented by unary predicates and are related
through binary relations. Using such a representation
limits the kind and numbers of questions that have to
be asked of the user by the semantic acquisition com-
ponent. The representation dovetails well with using
NIKL (18, 21], a taxonomic knowledge representation
system with a formal semantics, for stating axioms
about the domain.
</bodyText>
<subsectionHeader confidence="0.999952">
3.3 Model of the domain
</subsectionHeader>
<bodyText confidence="0.999990666666667">
One may choose to have an explicit, separate
representation for concepts of the domain, along with
axioms relating them. Both IRUS and TEAM have
explicit models. Such a representation may be useful
to several components of a system needing to do
some reasoning about the domain. The availability of
such information is a dimension in the design of
semantic acquisition systems, since domain
knowledge can streamline the acquisition process.
For example, knowing what relations are allowable
between concepts in the domain, aids in determing
what predicates can hold between concepts men-
tioned in an English expression, and therefore, what
are valid semantic mappings (IRules, in our case).
Our NIKL representation of the domain
knowledge, the domain model, forms the semantic
backbone of our system. Meaning is represented in
terms of domain model predicates; its hierarchy is
used for enforcing selectional restrictions and for
!Rule inheritance; and some limited inferencing is
done based on the model. After semantic interpreta-
tion is complete, the NIKL classification algorithm is
used in simplifying and transforming high level mean-
ing expressions to obtain the underlying systems&apos;
commands [25]. Due to its importance, the domain
model is developed carefully in consultation with
domain experts, using tools to assure its correctness.
This approach of developing a domain model in-
dependently of linguistic considerations or of the type
of underlying system is to be distinguished from other
approaches where the domain knowledge is shaped
mostly as a side effect of other processes such as
lexical acquisition or database field specification.
</bodyText>
<subsectionHeader confidence="0.9860285">
3.4 Assumptions about the user of the
acquisition tool.
</subsectionHeader>
<bodyText confidence="0.999908916666667">
If one assumes a human in the semantic acquisi-
tion process, as opposed to an automatic approach,
then expectations regarding the training and back-
ground of that user are yet another dimension in the
space of possible designs. The acquisition com-
ponent of TELI is designed for users with minimal
training. In TEAM, database administrators or those
capable of designing and structuring their own
database use the acquisition tools. Our approach has
been to assume that the user of the acquisition tool is
sophisticated enough to be a member of the support
staff of the underlying system(s) involved, and is
familiar with the way the domain is conceived by the
end users of the NLI. More particularly, we assume
that the individual can become comfortable with logic
so that he/she may recognize the correctness of logi-
cal expressions output by the semantic interpreter, but
need not be trained in Al techniques. A total environ-
ment is provided for that class of user so that the
necessary knowledge may be acquired, maintained,
and updated over the life cycle of the NLI. We have
trained such a class of users at the Naval Ocean
Systems Center (NOSC) who have been using the
acquisition tools for approximately a year and a half.
</bodyText>
<subsectionHeader confidence="0.999322">
3.5 Scope of utilities provided.
</subsectionHeader>
<bodyText confidence="0.999997954545455">
It would appear that most acquisition systems
have focused on the inference problem of acquiring
knowledge initially and have paid relatively little atten-
tion to explaining to the user what knowledge has
been acquired, providing sophisticated editing
facilities above the level of the internal data structures
themselves, or providing consistency checks on the
database of knowledge acquired. Providing such a
complete facility is a goal of our effort; feedback from
non-Al staff using the tool has already yielded sig-
nificant direction along those lines. The tool currently
has a very sophisticated, flexible debugging environ-
ment for testing the semantic knowledge acquired in-
dependently of the other components of the NLI, can
present the knowledge acquired in tables, and uses
the set of domain facts as a way of checking the
consistency of what the user has proposed and sug-
gesting alternatives that are consistent with what the
system already knows. Work is also underway on an
intelligent editing tool guaranteeing consistency with
the model when editing, and on an English
paraphraser to express the content of a semantic rule.
</bodyText>
<sectionHeader confidence="0.999834" genericHeader="method">
4 IRACQ
</sectionHeader>
<bodyText confidence="0.999834375">
The original version of IRACO was conceived by
R. Bobrow and developed by M. Moser [19]. From
sample noun phrases or clauses supplied by the user,
it inferred possible selectional restrictions and let the
user choose the correct one. The user then had to
supply the predicates that should be used in the inter-
pretation of the sample phrase, for inclusion in the
[Rule.
</bodyText>
<page confidence="0.995034">
34
</page>
<bodyText confidence="0.999970095238095">
From that original foundation, as IRUS evolved to
use NIKL. IRACQ was modified to take advantage of
the NIKL knowledge representation language and the
form we have adopted for representing events and
states of affairs. For example, now RAC() is able to
suggest to the user the predicates to be used in the
interpretation, assuring consistency with the model.
Following a more compositional approach, Rules can
now be defined for prepositional phrases and adjec-
tives that have a meaning of their own, as opposed to
just appearing in noun &apos;Rules as modifiers of the head
noun. Thus possible modifiers of a head noun (or
nominal semantic class) include its complements (if
any), and only prepositional phrases or other
modifiers that do not have an independent meaning
(as in the case of idioms). Analogously, modifiers of a
head verb (or event class) include its complements.
Adjective and prepositional phrase IRules specify the
semantic class of the nouns they can modify.
Also, maintenance facilities were added, as dis-
cussed in sections 4.3, 4.4, and 5.
</bodyText>
<subsectionHeader confidence="0.834265">
4.1 IRules
</subsectionHeader>
<bodyText confidence="0.999986022222222">
An !Rule defines, for a particular word or
(semantic) class of words, the semantically accept-
able English phrases that can occur having that word
as head of the phrase, and in addition defines the
semantic interpretation of an accepted phrase. Since
semantic processing is integrated with syntactic
processing in IRUS, the IRules serve to block a
semantically anomalous phrase as soon as it is
proposed by the parser. Thus, selectional restrictions
(or case frame constraints) are continuously applied.
However, the semantic representation of a phrase is
constructed only when the phrase is believed com-
plete.
There are !Rules for four kinds of heads: verbs,
nouns, adjectives, and prepositions. The left hand
side of the. IRule states the selectional restrictions on
the modifiers of the head. The right hand side
specifies the predicates that should be used in con-
structing a logical form corresponding to the phrase
which fired the IRule.
When a head word of a phrase is proposed by the
parser to the semantic interpreter, all &apos;Rules that can
apply to the head word for the given phrase type are
gathered as follows: for each semantic property that is
associated with the word, the !Rules associated with
the given domain model term are retrieved, along with
any inherited Rules. A word can also have Rules
fired directly by it, without involving the model. Since
the IRules corresponding to the different word senses
may give rise to separate interpretations, they are
carried along in parallel as the processing continues.
If no !Rules are retrieved, the interpreter rejects the
word.
One use of the domain model is that of Rule in-
heritance. When an Rule is defined, the user decides
whether the new !Rule (the base !Rule) should inherit
from &apos;Rules attached to higher domain model terms
(the inherited IRules), or possibly inherit from other
!Rules specified by the user. When a modifier of a
head word gets transmitted and no pattern for it exists
in a base &apos;Rule for the head word, higher !Rules are
searched for the pattern. If a pattern does exist for
the modifier in a given IRule, no higher ones are tried
even if it does not pass the semantic test. That is.
inheritance does not relax semantic constraints.
</bodyText>
<subsectionHeader confidence="0.99034">
4.2 An IRACQ session
</subsectionHeader>
<bodyText confidence="0.987640146341464">
In this section we step through the definition of a
clause IRule for the word &amp;quot;send&amp;quot;, and assume that
lexical information about &amp;quot;send&amp;quot; hat already been en-
tered. The sense of &amp;quot;sending&amp;quot; we will define, when
used as the main verb of a clause, specifies an event
type whose representation is as follows:
x) fdeployment(x) &amp; agent(x, a) &amp; object(x, o) &amp;
destination(x, d)j,
where the agent a must be a commanding officer, the
object o must be a unit and the destination d must be
a region.
From the example clauses presented by the user
IRACQ must learn which unary and binary predicat. ,
are to be used to obtain the representation above
Furthermore, IRACQ must acquire the most gene&apos;.-&apos;
semantic class to which the variables a, o, and d
belong.
Output from the system is shown in bold face
input from the user in regular face, and comments ar,
inserted in italics.
Word that should trigger this !Rule: send
Domain model term to connect !Rule to
(select-K to view the network): deployment
&lt;A: At this point the user may wish to
view the domain model network using our
graphical displaying and editing facility
KREME M to decide the correct concept
that should be associated with this word
(KREME may in fact be invoked at any
time). The user may even add a new con-
cept, which will be tagged with the user&apos;s
name and date for later verification by the
domain model builder, who has full
knowledge of the implications that adding a
concept may have on the rest of the sys-
tem.
Alternatively, the user may omit the
answer for now; in that case, IRACQ can
proceed as before, and at B will present a
menu of the concepts it already knows to be
consistent with the example phrases the
</bodyText>
<page confidence="0.992131">
35
</page>
<figure confidence="0.4355815">
user provides. Figure 1 shows a picture of
the network around DEPLOYMENT.&gt;
</figure>
<figureCaption confidence="0.946645">
Figure 1: Network centered on
</figureCaption>
<sectionHeader confidence="0.680586" genericHeader="method">
DEPLOYMENT
</sectionHeader>
<bodyText confidence="0.928171923076923">
Enter an example sentence using &amp;quot;send&amp;quot;:
An admiral sent Enterprise to the Indian Ocean.
&lt;IRACO uses the full power of the IRUS
parser and interpreter to interpret this sen-
tence. A temporary !Rule for &amp;quot;send&amp;quot; is used
which accepts any modifier (it is assumed
that the other words in the sentence can
already be understood by the system.)
IRACO recognizes that an admiral is of the
type COMMANDING.OFFICER, and dis-
plays a menu of the ancestors of
COMMANDING.OFFICER in the N1KL
taxonomy (figure 2).&gt;
</bodyText>
<sectionHeader confidence="0.9518075" genericHeader="method">
Choose a generalization for
COMMANDING.OFFICER
COMMANDING.OFFICER
PERSON
CONSCIOUS.BEING
ACTIVE.ENTITY
OBJECT
THING
</sectionHeader>
<figureCaption confidence="0.824182">
Figure 2: Generalizations of
COMMANDING.OFFICER
</figureCaption>
<bodyText confidence="0.950590875">
&lt;The user&apos;s selection specifies the case
frame constraint on the logical subject of
&amp;quot;send&amp;quot;. The user picks
COMMANDING.OFFICER. IRACO will per-
form similar inferences and present a menu
for the other cases in the example phrase
as well, asking each time whether the
modifier is required or optional. Assume
that the user selects UNIT as the logical
object and REGION as the object of the
preposition &amp;quot;to&amp;quot;.&gt;
&lt;13: If the user did not specify the concept
DEPLOYMENT (or some other concept) at
point A above as the central concept in this
sense of &amp;quot;sending&amp;quot;, then IRACO would
compute those unary concepts c such that
there are binary predicates relating c to
each case&apos;s constraint, e.g., to
COMMANDING.OFFICER, REGION, and
UNIT. The user would be presented with a
menu of such concepts c. IRACO would
now proceed in the same way for A or B.&gt;
&lt;IRACO then looks in the N1KL domain
model for binary predicates relating the
event class (e.g., DEPLOYMENT) to one of
the cases&apos; semantic class (e.g. REGION),
and presents the user with a menu of those
binary predicates (figure 3). Mouse options
allow the user to retrieve an explanation of
how a predicate was found, or to look at the
network around it. The user picks
DESTINATION.OF.&gt;
</bodyText>
<figure confidence="0.6575725">
Which of the following predicates should relate
DEPLOYMENT to REGION in the MRL?:
LOCATION.OF
DESTINATION.OF
</figure>
<figureCaption confidence="0.956995">
Figure 3: Relations between DEPLOYMENT
and REGION
</figureCaption>
<bodyText confidence="0.847826111111111">
&lt;IRACO presents a menu of binary predi-
cates relating DEPLOYMENT and
COMMANDING.OFFICER, and one relating
DEPLOYMENT and UNIT. The user picks
AGENT and OBJECT, respectively.&gt;
Enter examples using &amp;quot;send&amp;quot; or &lt;CR&gt; if done:
&lt;The user may provide more examples.
Redundant information would be recognized
automatically.&gt;
</bodyText>
<subsectionHeader confidence="0.799627">
Should this IRule inherit from higher &apos;Rules? yes
</subsectionHeader>
<bodyText confidence="0.9985205">
&lt;A popup window allowing the user to
enter comments appears. The default com-
ment has the creation date and the user&apos;s
name.&gt;
</bodyText>
<subsectionHeader confidence="0.435578">
This is the Rule you just defined:
</subsectionHeader>
<figure confidence="0.9918264">
(IRule DEPLOYMENT.4
(clause subject (is-a COMMANDING.OFFICER)
head object (is-a UNIT)
pp ((pp head to pobj (is-a REGION))))
=2.
(bind ((commanding.officer.1 (optional subject))
(unit.1 object)
(region.1 (optional (pp 1 pobj))))
(predicate &apos;(destination.of v region.1))
(predicate &apos;(object.of unit.1))
New Hole
Edit Role
New Concept
Edit Concept
Reportni.position I
I Movement-report J-•
Employment-schedule I
Chanae.messape I
Chen eanseechness
Setparameter
</figure>
<page confidence="0.986793">
36
</page>
<bodyText confidence="0.98127375">
(predicate &apos;(agent *v* commanding.officer.1))
(class &apos;DEPLOYMENT)))
Do you wish to edit the !Rule? no
&lt;The person may, for example, want to
insert something in the action part of the
!Rule that was not covered by the MAC()
questions.&gt;
This concludes our sample RAC() session.
</bodyText>
<subsectionHeader confidence="0.999646">
4.3 Debugging environment
</subsectionHeader>
<bodyText confidence="0.999927545454546">
The facility for creating and extending !Rules is
integrated with the IRUS NLI itself, so that debugging
can commence as soon as an addition is made using
IRACO. The debugging facility allows one to request
IRUS to process any input sentence in one of several
modes: asking the underlying system to fulfill the user
request, generating code for the underlying system,
generating the semantic representation only, or pars-
ing without the use of semantics (on the chance that a
grammatical or lexical bug prevents the input from
being parsed). Intermediate stages of the translation
are automatically stored for later inspection, editing, or
reuse.
IRACO is also integrated with the other acquisition
facilities available. As the example session above
illustrates, IRACO is integrated with KREME, a
knowledge representation editing environment. Ad-
ditionally, the IRACO user can access a dictionary
package for acquiring and maintaining both lexical
and morphological information.
Such a thoroughly integrated set of tools has
proven not only pleasant but also highly productive.
</bodyText>
<subsectionHeader confidence="0.999775">
4.4 Editing an Rule
</subsectionHeader>
<bodyText confidence="0.9996225">
If the user later wants to make changes to an
&apos;Rule, he/she may directly edit it. This procedure,
however, is error-prone. The syntax rules of the IRule
can easily be violated, which may lead to cryptic er-
rors when the !Rule is used. More importantly, the
user may change the semantic information of the
IRule so that it no longer is consistent with the domain
model.
We are currently adding two new capabilities to
the &apos;Rule editing environment:
</bodyText>
<listItem confidence="0.802869">
1. A tool that uses some of the same
IRACO software to let the user expand
the coverage of an !Rule by entering
more example sentences.
2. In the case that the user wants to
bypass IRACO and modify an IRule, the
</listItem>
<bodyText confidence="0.916247">
user will be placed into a restrictive
editor that assures the syntactic integrity
of the IRule, and verifies the semantic
information with the domain model.
</bodyText>
<sectionHeader confidence="0.855915" genericHeader="method">
5 An IRule Paraphraser
</sectionHeader>
<bodyText confidence="0.999751214285714">
An !Rule paraphraser is being implemented as a
comprehensive means by which an IRACO user can
observe the capabilities introduced by a particular
!Rule. Since paraphrases are expressed in English,
the IRule developer is spared the details of the IRule
internal structure and the meaning representation.
The !Rule paraphraser is useful for three main pur-
poses: expressing !Rule inheritance so that the user
does not redundantly add already inherited infor-
mation, identifying omissions from the IRule&apos;s linguis-
tic pattern, and verifying !Rule consistency and com-
pleteness. This facility will aid in specifying and main-
taining correct !Rules, thereby blocking anomalous in-
terpretation of input.
</bodyText>
<subsectionHeader confidence="0.993686">
5.1 Major design features
</subsectionHeader>
<bodyText confidence="0.999965853658537">
The IRule paraphraser makes central use of the
IRUS paraphraser (under development), which
paraphrases user input, particularly in order to detect
ambiguities. The IRUS paraphraser shares in large
part the same knowledge bases used by the under-
standing process, and is completely driven by the
IRUS meaning representation language (MRL) used
to represent the meaning of user queries. Given an
MRL expression for an input, the IRUS paraphraser
first transforms it into a syntactic generation tree in
which each MRL constituent is assigned a syntactic
role to play in an English paraphrase. The syntactic
roles of the MRL predicates are derived from the
IRules that could generate the MRL.
In the second phase of the IRUS paraphraser, the
syntactic generation tree is transformed into an
English sentence. This process uses an ATN gram-
mar and ATN interpreter that describes how to com-
bine the various syntactic slots in the generation tree
into an English sentence. Morphological processing is
performed where necessary to inflect verbs and ad-
jectives, pluralize nouns, etc.
The !Rule paraphraser expresses the knowledge
in a given IRule by first composing a stereotypical
phrase from the !Rule linguistic pattern (i.e., the left
hand side of the !Rule). For the &amp;quot;send&amp;quot; !Rule of the
previous section, such a phrase is &amp;quot;A commanding
officer sent a unit to a region&amp;quot;. For inherited IRules,
the &apos;Rule paraphraser composes representative
phrases that match the combined linguistic patterns of
both the local and the inherited Rules. Then, the
IRUS parser/interpreter interprets that phrase using
the given IRule, thus creating an MRL expression.
Finally, the IRUS paraphraser expresses that MRL in
English.
Providing an English paraphrase from just the lin-
guistic pattern of an !Rule would be simple and unin-
teresting. The purpose of obtaining MRLs for repre-
sentative phrases and using the IRUS paraphraser to
go back to the English is to force the use of the right
hand side of the IRule which specifies the semantic
</bodyText>
<page confidence="0.998606">
37
</page>
<bodyText confidence="0.991814">
interpretation. In this way anomalies introduced by,
for example, manually changing variable names in the
right hand side of the &apos;Rule (which point to linguistic
constituents of the left hand side), can be detected.
</bodyText>
<subsectionHeader confidence="0.998779">
5.2 Role within IRACQ
</subsectionHeader>
<bodyText confidence="0.998226727272727">
IRACQ will invoke the !Rule Paraphraser at two
interaction points: (1) at the start of an IRACQ session
when the user has selected a concept to which to
attach the new !Rule (paraphrasing IRules already as-
sociated with that concept shows the user what is
already handled--a new !Rule might not even be
needed), and (2) at the end of an IRACQ session,
assisting the user in detecting anomalies.
The planned use of the !Rule Paraphraser is il-
lustrated below with a shortened version of an IRACQ
session.
</bodyText>
<table confidence="0.7221255">
Word that should trigger this !Rule: change
Domain model term to connect IRule to:
change.in.readiness
Paraphrases for existing &apos;Rules (inherited
phrases are capitalized):
Local IRule: change.in.readiness.1
&amp;quot;A unit changed from a readiness rating
to a readiness rating&amp;quot;
Inherited !Rule: event.be.predicate.1
&amp;quot;A unit changed from a readiness rating
to a readiness rating&amp;quot;
(IN, AT) A LOCATION
</table>
<construct confidence="0.886556181818182">
&lt;Observing these paraphrases will assist
the IRACO user in making the following
decisions:
• A new CHANGE.IN.READINESS.2
Irule needs to be defined to capture
sentences like the readiness of
Frederick changed from Cl to C2&amp;quot;.
• Location information should not be
repeated in the new
CHANGE.1N.READINESS.2 &apos;rule
since it will be inherited.
</construct>
<bodyText confidence="0.754548">
The IRACO session proceeds as described
in the previous example session.&gt;
</bodyText>
<sectionHeader confidence="0.990456" genericHeader="conclusions">
6 Concluding Remarks
</sectionHeader>
<bodyText confidence="0.999726769230769">
Our approach to semantic knowledge acquisition:
1) is in the context of a general purpose NL interface
rather than one that accesses only databases, 2)
employs a knowledge representation formalism with
limited inferencing capabilities, 3) assumes a trained
person but not an Al expert, and 4) provides a corn-
plete environment for not only acquiring semantic
knowledge, but also maintaining and editing it in a
consistent knowledge base. This section comments
on what we have learned thus far about the point of
view espoused above.
First, we have transferred the IRUS natural lan-
guage interface, which includes IRACQ, to the staff of
the Naval Ocean Systems Center. The person in
charge of the effort at NOSC has a master&apos;s degree in
linguistics and had some familiarity with natural lan-
guage processing before the effort started. She
received three weeks of hands-on experience with
IRUS at BBN in 1985, before returning to NOSC
where she trained a few part-time employees who are
computer science undergraduates. Development of
the dictionary and &apos;Rules for the Fleet Command Cen-
ter Battle Management Program (FCCBMP), a large
Navy application [23], has been performed exclusively
by NOSC since August, 1986. Currently, about 5000
words and 150 Rules have been defined.
There are two strong positive facts regarding
IRACQ&apos;s generality. First, IRUS accesses both a
large relational data base and an applications pack-
age in the FCCBMP. Only one set of Rules is used,
with no cleavage in that set between IRules for the
two applications. Second, the same software has
been useful for two different versions of IRUS. One
employs MRL [29], a procedural first order logic, as
the semantic representation of inputs; the second
employs IL, a higher-order intensional logic. Since
the !Rules define selectional restrictions, and since
the Davidson-like representation (see section 3) is
used in both cases, IRACQ did not have to be
changed; only the general procedures for generating
quantifiers, scoping decisions, treatment of tense, etc.
had to be revised in IRUS. Therefore, a noteworthy
degree of generality has been achieved.
. Our key knowledge representation decisions were
the treatment of events and states of affairs, and the
use of NIKL to store and reason about axioms con-
cerning the predicates of our logic. This strongly in-
fluenced the style and questions of our semantic ac-
quisition process. For example, IRACQ is able to
propose a set of predicates that is consistent with the
domain model to use for the interpretation of an input
phrase. We believe representation decisions must
dictate much of an acquisition scenario no matter
what the decisions are. In addition, the limited
knowledge representation and inference techniques of
NIKL deeply affected other parts of our NLI, par-
ticularly in the translation from conceptually-oriented
domain predicates to predicates of the underlying sys-
tems.
The system does provide an initial version of a
complete environment for creating and maintaining
semantic knowledge. The result has been very
desirable compared to earlier versions of IRACO and
IRUS that did not have such debugging aids nor in-
tegration with tools for acquiring and maintaining the
</bodyText>
<page confidence="0.996996">
38
</page>
<bodyText confidence="0.996917666666667">
domain model. We intend to integrate the various
acquisition, consistency, editing, and maintenance
aids for the various knowledge bases even further.
</bodyText>
<sectionHeader confidence="0.990217" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999983376237624">
1. Abrett, G., and Burstein, M. H. The BBN
Laboratories Knowledge Acquisition Project: KREME
Knowledge Editing Environment. BBN Report No.
6231, Bolt Beranek and Newman Inc., 1986.
2. Allen, J.F. and Litman, D.J. &amp;quot;Plans, Goals, and
Language&amp;quot;. Proceedings of the IEEE 74, 7 (July
1986), 939-947.
3. Amsler, R.A. A Taxonomy for English Nouns and
Verbs. Proceedings of the 19th Annual Meeting of the
Association for Computational Linguistics, 1981.
4. Ballard, Bruce and Stumberger, Douglas. Seman-
tic Acquisition in TELI: A Transportable, User-
Customized Natural Language Processor. Proceed-
ings of The 24th Annual Meeting of the ACL, ACL,
June, 1986, pp. 20-29.
5. Bates, M. and Bobrow, R.J. A Transportable
Natural Language Interface for Information Retrieval.
Proceedings of the 6th Annual International ACM
SIGIR Conference, ACM Special Interest Group on
Information Retrieval and American Society for Infor-
mation Science, Washington, D.C., June, 1983.
6. Bates, Madeleine. Accessing a Database with a
Transportable Natural Language Interface. Proceed-
ings of The First Conference on Artificial Intelligence
Applications, IEEE Computer Society, December,
1984, pp. 9-12.
7. Bates, M., and Ingria, R. Dictionary Package
Documentation. Unpublished Internal Document,
BBN Laboratories.
8. Carberry, M.S. A Pragmatics-Based Approach to
Understanding Intersentential Ellipsis. Proceedings of
the 23rd Annual Meeting of the Association for Com-
putational Linguistics, Association for Computational
Linguistics, Chicago, IL, July, 1985, pp. 188-197.
9. Cumming, S. and Albano, R. A Guide to Lexical
Acquisition in the JANUS System. Information
Sciences Institute/RR-85-162, USC/Information
Sciences Institute, 1986.
10. Davidson, D. The Logical Form of Action Sen-
tences. In The Logic of Grammar,
Dickenson Publishing Co., Inc., 1975, pp. 235-245.
11. Granger, R.H. -The NOMAD System:
Expectation-Based Detection and Correction of Errors
during Understanding of Syntactically and Seman-
tically III-Formed Text&amp;quot;. American Journal of Com-
putational Linguistics 9, 3-4 (1983), 188-198.
12. Grishman, R. Hirschman, L., and Nhan, N.T.
&amp;quot;Discovery Procedures for Sublanguage Selectional
Patterns: Initial Experiments&amp;quot;. Computational Lin-
guistics 12, 3 (July-September 1986), 205-215.
13. Grosz, B., Appelt, D. E., Martin, P., and Pereira,
F. TEAM: An Experiment in the Design of Trans-
portable Natural Language Interfaces. 356, SRI Inter-
national, 1985. To appear in Artificial Intelligence.
14. Grosz, B.J. and Sidner, C.L. Discourse Structure
and the Proper Treatment of Interruptions. Proceed-
ings of IJCAI85, International Joint Conferences on
Artificial Intelligence, Inc., Los Angeles, CA, August,
1985, pp. 832-839.
15. Litman, D.J. Linguistic Coherence: A Plan-Based
Alternative. Proceedings of the 24th Annual Meeting
of the Association for Computational Linguistics, ACL,
New York, 1986, pp. 215-223.
16. Markowitz, J., Ahlswede, T., and Evens, M.
Semantically Significant Patterns in Dictionary Defini-
tions. Proceedings of the 24th Annual Meeting of the
Association for Computational Linguistics, June, 1986.
17. Mooney, R. and DeJong, G. Learning Schemata
for Natural Lanugage Processing. Proceedings of the
Ninth International Joint Conference on Artificial Intel-
ligence, IJCAI, 1985, pp. 681-687.
18. Moser, M.G. An Overview of NIKL, the New Im-
plementation of KL-ONE. In Research in Knowledge
Representation for Natural Language Understanding -
Annual Report, 1 September 1982 - 31 August 1983,
Sidner, C. L., et al., Eds., BBN Laboratories Report
No. 5421, 1983, pp. 7-26.
19. Moser, M. G. Domain Dependent Semantic Ac-
quisition. Proceedings of The First Conference on
Artificial Intelligence Applications, IEEE Computer
Society, December, 1984, pp. 13-18.
20. Schenk, R., and Abelson, R. Scripts, Plans,
Goals, and Understanding. LawrenceErlbaumAs-
sociates, 1977.
21. Schmolze, J. G., and Israel, D. J. KL-ONE:
Semantics and Classification. In Research in
Knowledge Representation for Natural Language Un-
derstanding - Annual Report, 1 September 1982 - 31
August 1983, Sidner, CI., et al., Eds., BBN
Laboratories Report No. 5421, 1983, pp. 27-39.
22. Sidner, C.L. &amp;quot;Plan Parsing for Intended
Response Recognition in Discourse&amp;quot;. Computational
Intelligence 1, 1 (February 1985), 1-10.
23. Simpson, R.L. &amp;quot;Al in C3, A Case in Point: Ap-
plications of Al Capability&amp;quot;. SIGNAL, Journal of the
Armed Forces Communications and Electronics As-
sociation 40, 12 (1986), 79-86.
24. Stallard, D. Data Modelling for Natural Language
Access. The First Conference on Artificial Intelligence
Applications, IEEE Computer Society, December,
1984, pp. 19-24.
</reference>
<page confidence="0.988157">
39
</page>
<reference confidence="0.999984136363636">
25. Stallard, David G. A Terminological Simplification
Transformation for Natural Language Question-
Answering Systems. Proceedings of The 24th Annual
Meeting of the ACL, ACL, June, 1986, pp. 241-246.
26. Vilain, M. The Restricted Language Architecture
of a Hybrid Representation System. Proceedings of
IJCAI85, International Joint Conferences on Artificial
Intelligence, Inc., Los Angeles, CA, August, 1985, pp.
547-551.
27. Walker, E., Weischedel, R.M., and Ramshaw, L.
&amp;quot;IRUS/Janus Natural Language Interface Technology
in the Strategic Computing Program&amp;quot;. Signal 40, 12
(August 1986), 86-90.
28. Weischedel, R.M. and Ramshaw, L.A. Reflec-
tions on the Knowledge Needed to Process III-Formed
Language. In Machine Translation: Theoretical and
Methodological issues, S. Nirenburg, Ed., Cambridge
University Press, Cambridge, England, to appear.
29. Woods, W.A. Semantics and Quantification in
Natural Language Question Answering. In Advances
in Computers, M. Yovits, Ed., Academic Press, 1978,
Pp. 1-87.
</reference>
<page confidence="0.998639">
40
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.358494">
<title confidence="0.998003">AN ENVIRONMENT FOR ACQUIRING SEMANTIC INFORMATION</title>
<author confidence="0.999992">Damaris M Ayuso</author>
<author confidence="0.999992">Varda Shaked</author>
<author confidence="0.999992">Ralph M Weischedel</author>
<affiliation confidence="0.999056">BBN Laboratories Inc.</affiliation>
<address confidence="0.9979905">10 Moulton St. Cambridge, MA 02238</address>
<abstract confidence="0.932137384615385">An improved version of IRACQ (for Interpretation ACQuisition) is Our approach to semantic knowledge acquisition: 1) is in the context of a general purpose NL interface rather than one that accesses only databases, 2) employs a knowledge representation formalism with limited inferencing capabilities, 3) assumes a trained person but not an Al expert, and 4) provides a complete environment for not only acquiring semantic knowledge, but also maintaining and editing it in a consistent knowledge base. IRACQ is currently in use at the Naval Ocean Systems Center.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>G Abrett</author>
<author>M H Burstein</author>
</authors>
<title>The BBN Laboratories Knowledge Acquisition Project: KREME Knowledge Editing Environment.</title>
<date>1986</date>
<tech>BBN Report No. 6231,</tech>
<institution>Bolt Beranek and Newman Inc.,</institution>
<contexts>
<context position="5942" citStr="[1]" startWordPosition="916" endWordPosition="916">es. All vessels have a major weapon system. All units have an overall combat readiness rating. Such information, though not linguistic in nature, is clearly necessary to understand natural language, since, for instance, &amp;quot;Enterprise&apos;s overall rating&amp;quot; presumes that there is such a readiness rating, which can be verified in the axioms mentioned above about the domain. However, this is clearly not a class of knowledge peculiar to language comprehension or generation, but is in fact essential in any intelligent system. General tools for acquiring such knowledge are emerging; we are employing KREME [1] for acquiring and maintaining the domain knowledge. Knowledge that relates the predicates in the domain to their representation and access in the underlying systems is certainly necessary. For instance, we may have the unary predicates vessel and harpoon.capable; nevertheless, the concept (i.e., unary predicate) corresponding to the logical expression ( X x) [vessel(x) &amp; harpoon.capable(x)] may correspond to the existence of a &amp;quot;y&amp;quot; in the &amp;quot;harp&amp;quot; field of the &amp;quot;uchar&amp;quot; relation of a data base. TEAM allows for acquisition of this mapping by building predicates &amp;quot;bottom-up&amp;quot; starting from database fi</context>
</contexts>
<marker>1.</marker>
<rawString>Abrett, G., and Burstein, M. H. The BBN Laboratories Knowledge Acquisition Project: KREME Knowledge Editing Environment. BBN Report No. 6231, Bolt Beranek and Newman Inc., 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J F Allen</author>
<author>D J Litman</author>
</authors>
<title>Plans, Goals, and Language&amp;quot;.</title>
<date>1986</date>
<journal>Proceedings of the IEEE</journal>
<volume>74</volume>
<pages>939--947</pages>
<contexts>
<context position="7207" citStr="[8, 2]" startWordPosition="1120" endWordPosition="1121">work with different kinds of underlying systems (not just databases). However, maintaining a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the w</context>
</contexts>
<marker>2.</marker>
<rawString>Allen, J.F. and Litman, D.J. &amp;quot;Plans, Goals, and Language&amp;quot;. Proceedings of the IEEE 74, 7 (July 1986), 939-947.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R A Amsler</author>
</authors>
<title>A Taxonomy for English Nouns and Verbs.</title>
<date>1981</date>
<booktitle>Proceedings of the 19th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<contexts>
<context position="4346" citStr="[3, 16]" startWordPosition="669" endWordPosition="670">of a clause IRule definition using IRACQ is presented. Section 5 describes initial work on an !Rule paraphraser. Conclusions are in section 6. 2 Kinds of Knowledge One kind of knowledge that must be acquired is lexical information. This includes morphological information, syntactic categories, complement structure (if any), and pointers to semantic information associated with individual words. Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals, including [11, 17]. This paper 32 focuses on acquiring such semantic knowledge using IRACO. Basic facts ab</context>
</contexts>
<marker>3.</marker>
<rawString>Amsler, R.A. A Taxonomy for English Nouns and Verbs. Proceedings of the 19th Annual Meeting of the Association for Computational Linguistics, 1981.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bruce Ballard</author>
<author>Douglas Stumberger</author>
</authors>
<title>Semantic Acquisition in TELI: A Transportable, UserCustomized Natural Language Processor.</title>
<date>1986</date>
<booktitle>Proceedings of The 24th Annual Meeting of the ACL, ACL,</booktitle>
<pages>pp.</pages>
<contexts>
<context position="8072" citStr="[4]" startWordPosition="1263" endWordPosition="1263">s is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other significant, recently reported systems fall in that space of possibilities. 3.1 Class of underlying systems. One could design tools for a specific subclass of underlying systems, such as database management systems, as in TEAM [13] and TELI [4]. The special nature of the class of underlying systems may allow for a more tailored acquisition environment, by having special-purpose, stereotypical sequences of questions for the user, and more powerful special-purpose inferences. For example, in order to acquire the variety of lexical items that can refer to a symbolic field in a database (such as one stating whether a mountain is a volcano), TEAM asks a series of questions, such as &amp;quot;Adjectives referencing the positive value?&amp;quot; (e.g., volcanic), and &amp;quot;Abstract nouns referencing the positive value?&amp;quot; (e.g., volcano). The fact that the field i</context>
</contexts>
<marker>4.</marker>
<rawString>Ballard, Bruce and Stumberger, Douglas. Semantic Acquisition in TELI: A Transportable, UserCustomized Natural Language Processor. Proceedings of The 24th Annual Meeting of the ACL, ACL, June, 1986, pp. 20-29.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Bates</author>
<author>R J Bobrow</author>
</authors>
<title>A Transportable Natural Language Interface for Information Retrieval.</title>
<date>1983</date>
<booktitle>Proceedings of the 6th Annual International ACM SIGIR Conference, ACM Special Interest Group on Information Retrieval and American Society for Information Science,</booktitle>
<location>Washington, D.C.,</location>
<contexts>
<context position="2047" citStr="[5, 6, 27]" startWordPosition="314" endWordPosition="316">, domain specific knowledge need be changed. However, creating the knowledge bases requires substantial effort, and therefore substantial cost. It is this assessment of the state of the art that causes us to conclude that knowledge acquisition is one of the most fundamental problems to widespread applicability of NLI technology. This paper describes our contribution to the acquisition of semantic knowledge as evidenced in IRACQ (for Interpretation Rule ACQuisition), within the context of our overall approach to representation of domain knowledge and its use in the IRUS natural language system [5, 6, 27]. An initial version of IRACQ was reported in [19]. Using IRACQ, mappings &apos;The work presented here was supported under DARPA contract #N00014-85-C-0016. The views and conclusions contained in this document are those of the authors and should not be interpreted as necessarily representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nou</context>
</contexts>
<marker>5.</marker>
<rawString>Bates, M. and Bobrow, R.J. A Transportable Natural Language Interface for Information Retrieval. Proceedings of the 6th Annual International ACM SIGIR Conference, ACM Special Interest Group on Information Retrieval and American Society for Information Science, Washington, D.C., June, 1983.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Madeleine Bates</author>
</authors>
<title>Accessing a Database with a Transportable Natural Language Interface.</title>
<date>1984</date>
<booktitle>Proceedings of The First Conference on Artificial Intelligence Applications, IEEE Computer Society,</booktitle>
<pages>9--12</pages>
<contexts>
<context position="2047" citStr="[5, 6, 27]" startWordPosition="314" endWordPosition="316">, domain specific knowledge need be changed. However, creating the knowledge bases requires substantial effort, and therefore substantial cost. It is this assessment of the state of the art that causes us to conclude that knowledge acquisition is one of the most fundamental problems to widespread applicability of NLI technology. This paper describes our contribution to the acquisition of semantic knowledge as evidenced in IRACQ (for Interpretation Rule ACQuisition), within the context of our overall approach to representation of domain knowledge and its use in the IRUS natural language system [5, 6, 27]. An initial version of IRACQ was reported in [19]. Using IRACQ, mappings &apos;The work presented here was supported under DARPA contract #N00014-85-C-0016. The views and conclusions contained in this document are those of the authors and should not be interpreted as necessarily representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nou</context>
</contexts>
<marker>6.</marker>
<rawString>Bates, Madeleine. Accessing a Database with a Transportable Natural Language Interface. Proceedings of The First Conference on Artificial Intelligence Applications, IEEE Computer Society, December, 1984, pp. 9-12.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Bates</author>
<author>R Ingria</author>
</authors>
<title>Dictionary Package Documentation. Unpublished Internal Document,</title>
<journal>BBN Laboratories.</journal>
<contexts>
<context position="4224" citStr="[7]" startWordPosition="652" endWordPosition="652">ntic acquisition facility, describing our approach. In section 4 we describe IRules and how they are used. An example of a clause IRule definition using IRACQ is presented. Section 5 describes initial work on an !Rule paraphraser. Conclusions are in section 6. 2 Kinds of Knowledge One kind of knowledge that must be acquired is lexical information. This includes morphological information, syntactic categories, complement structure (if any), and pointers to semantic information associated with individual words. Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by sever</context>
</contexts>
<marker>7.</marker>
<rawString>Bates, M., and Ingria, R. Dictionary Package Documentation. Unpublished Internal Document, BBN Laboratories.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M S Carberry</author>
</authors>
<title>A Pragmatics-Based Approach to Understanding Intersentential Ellipsis.</title>
<date>1985</date>
<booktitle>Proceedings of the 23rd Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics,</booktitle>
<pages>188--197</pages>
<location>Chicago, IL,</location>
<contexts>
<context position="7207" citStr="[8, 2]" startWordPosition="1120" endWordPosition="1121">work with different kinds of underlying systems (not just databases). However, maintaining a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the w</context>
</contexts>
<marker>8.</marker>
<rawString>Carberry, M.S. A Pragmatics-Based Approach to Understanding Intersentential Ellipsis. Proceedings of the 23rd Annual Meeting of the Association for Computational Linguistics, Association for Computational Linguistics, Chicago, IL, July, 1985, pp. 188-197.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Cumming</author>
<author>R Albano</author>
</authors>
<title>A Guide to Lexical Acquisition in the JANUS System. Information Sciences Institute/RR-85-162, USC/Information Sciences Institute,</title>
<date>1986</date>
<contexts>
<context position="4239" citStr="[9]" startWordPosition="655" endWordPosition="655">n facility, describing our approach. In section 4 we describe IRules and how they are used. An example of a clause IRule definition using IRACQ is presented. Section 5 describes initial work on an !Rule paraphraser. Conclusions are in section 6. 2 Kinds of Knowledge One kind of knowledge that must be acquired is lexical information. This includes morphological information, syntactic categories, complement structure (if any), and pointers to semantic information associated with individual words. Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals,</context>
</contexts>
<marker>9.</marker>
<rawString>Cumming, S. and Albano, R. A Guide to Lexical Acquisition in the JANUS System. Information Sciences Institute/RR-85-162, USC/Information Sciences Institute, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Davidson</author>
</authors>
<title>The Logical Form of Action Sentences.</title>
<date>1975</date>
<booktitle>In The Logic of Grammar,</booktitle>
<pages>235--245</pages>
<publisher>Dickenson Publishing Co., Inc.,</publisher>
<contexts>
<context position="10815" citStr="[10]" startWordPosition="1706" endWordPosition="1706">of processing than the initial semantic acquisition, a level of inference or question/answering must be provided so that the commonalities of very similar word senses are captured and appropriate inferences made. A second approach seems to be represented in TELI, where the meaning of a word sense is translated into a boolean composition of more primitive predicates. SACO represents a related approach, but we allow a many-to-one mapping between word senses and predicates of the domain, and use a more constraining representation for the meaning of word senses. Following the analysis of Davidson [10] we represent the meaning of events (and also of states of affairs) as a conjunction of a single unary predicate and arbitrarily many binary predicates. Objects are represented by unary predicates and are related through binary relations. Using such a representation limits the kind and numbers of questions that have to be asked of the user by the semantic acquisition component. The representation dovetails well with using NIKL (18, 21], a taxonomic knowledge representation system with a formal semantics, for stating axioms about the domain. 3.3 Model of the domain One may choose to have an exp</context>
</contexts>
<marker>10.</marker>
<rawString>Davidson, D. The Logical Form of Action Sentences. In The Logic of Grammar, Dickenson Publishing Co., Inc., 1975, pp. 235-245.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R H Granger</author>
</authors>
<title>The NOMAD System: Expectation-Based Detection and Correction of Errors during Understanding of Syntactically and Semantically III-Formed Text&amp;quot;.</title>
<date>1983</date>
<journal>American Journal of Computational Linguistics</journal>
<volume>9</volume>
<pages>3--4</pages>
<contexts>
<context position="4858" citStr="[11, 17]" startWordPosition="749" endWordPosition="750">vely, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals, including [11, 17]. This paper 32 focuses on acquiring such semantic knowledge using IRACO. Basic facts about the domain must be acquired as well. This includes at least taxonomic information about the semantic categories in the domain and binary relationships holding between semantic categories. For instance, in the domain of Navy decision-making at a US Fleet Command Center, such basic domain facts include: All submarines are vessels. All vessels are units. All units are organizational entities. All vessels have a major weapon system. All units have an overall combat readiness rating. Such information, though</context>
</contexts>
<marker>11.</marker>
<rawString>Granger, R.H. -The NOMAD System: Expectation-Based Detection and Correction of Errors during Understanding of Syntactically and Semantically III-Formed Text&amp;quot;. American Journal of Computational Linguistics 9, 3-4 (1983), 188-198.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Hirschman Grishman</author>
<author>L</author>
<author>N T Nhan</author>
</authors>
<title>Discovery Procedures for Sublanguage Selectional Patterns: Initial Experiments&amp;quot;.</title>
<date>1986</date>
<journal>Computational Linguistics</journal>
<volume>12</volume>
<pages>205--215</pages>
<contexts>
<context position="4740" citStr="[12]" startWordPosition="731" endWordPosition="731">Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals, including [11, 17]. This paper 32 focuses on acquiring such semantic knowledge using IRACO. Basic facts about the domain must be acquired as well. This includes at least taxonomic information about the semantic categories in the domain and binary relationships holding between semantic categories. For instance, in the domain of Navy decision-making at a US Fleet Command Center, such basic domain facts include: All submarines are vessels. All vessels are units. All units are organizational entitie</context>
</contexts>
<marker>12.</marker>
<rawString>Grishman, R. Hirschman, L., and Nhan, N.T. &amp;quot;Discovery Procedures for Sublanguage Selectional Patterns: Initial Experiments&amp;quot;. Computational Linguistics 12, 3 (July-September 1986), 205-215.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Grosz</author>
<author>D E Appelt</author>
<author>P Martin</author>
<author>F Pereira</author>
</authors>
<title>TEAM: An Experiment</title>
<date>1985</date>
<booktitle>in the Design of Transportable Natural Language Interfaces. 356, SRI International,</booktitle>
<note>To appear in Artificial Intelligence.</note>
<contexts>
<context position="4214" citStr="[13]" startWordPosition="650" endWordPosition="650">n of a semantic acquisition facility, describing our approach. In section 4 we describe IRules and how they are used. An example of a clause IRule definition using IRACQ is presented. Section 5 describes initial work on an !Rule paraphraser. Conclusions are in section 6. 2 Kinds of Knowledge One kind of knowledge that must be acquired is lexical information. This includes morphological information, syntactic categories, complement structure (if any), and pointers to semantic information associated with individual words. Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studie</context>
<context position="8059" citStr="[13]" startWordPosition="1260" endWordPosition="1260">extual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other significant, recently reported systems fall in that space of possibilities. 3.1 Class of underlying systems. One could design tools for a specific subclass of underlying systems, such as database management systems, as in TEAM [13] and TELI [4]. The special nature of the class of underlying systems may allow for a more tailored acquisition environment, by having special-purpose, stereotypical sequences of questions for the user, and more powerful special-purpose inferences. For example, in order to acquire the variety of lexical items that can refer to a symbolic field in a database (such as one stating whether a mountain is a volcano), TEAM asks a series of questions, such as &amp;quot;Adjectives referencing the positive value?&amp;quot; (e.g., volcanic), and &amp;quot;Abstract nouns referencing the positive value?&amp;quot; (e.g., volcano). The fact tha</context>
</contexts>
<marker>13.</marker>
<rawString>Grosz, B., Appelt, D. E., Martin, P., and Pereira, F. TEAM: An Experiment in the Design of Transportable Natural Language Interfaces. 356, SRI International, 1985. To appear in Artificial Intelligence.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B J Grosz</author>
<author>C L Sidner</author>
</authors>
<title>Discourse Structure and the Proper Treatment of Interruptions.</title>
<date>1985</date>
<booktitle>Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc.,</booktitle>
<pages>832--839</pages>
<location>Los Angeles, CA,</location>
<contexts>
<context position="7296" citStr="[14, 15]" startWordPosition="1136" endWordPosition="1137">ing a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other significant, recently reported systems fall in that space of possibi</context>
</contexts>
<marker>14.</marker>
<rawString>Grosz, B.J. and Sidner, C.L. Discourse Structure and the Proper Treatment of Interruptions. Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc., Los Angeles, CA, August, 1985, pp. 832-839.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D J Litman</author>
</authors>
<title>Linguistic Coherence: A Plan-Based Alternative.</title>
<date>1986</date>
<booktitle>Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics, ACL,</booktitle>
<pages>215--223</pages>
<location>New York,</location>
<contexts>
<context position="7296" citStr="[14, 15]" startWordPosition="1136" endWordPosition="1137">ing a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other significant, recently reported systems fall in that space of possibi</context>
</contexts>
<marker>15.</marker>
<rawString>Litman, D.J. Linguistic Coherence: A Plan-Based Alternative. Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics, ACL, New York, 1986, pp. 215-223.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Markowitz</author>
<author>T Ahlswede</author>
<author>M Evens</author>
</authors>
<title>Semantically Significant Patterns in Dictionary Definitions.</title>
<date>1986</date>
<booktitle>Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<contexts>
<context position="4346" citStr="[3, 16]" startWordPosition="669" endWordPosition="670">of a clause IRule definition using IRACQ is presented. Section 5 describes initial work on an !Rule paraphraser. Conclusions are in section 6. 2 Kinds of Knowledge One kind of knowledge that must be acquired is lexical information. This includes morphological information, syntactic categories, complement structure (if any), and pointers to semantic information associated with individual words. Acquiring lexical information may proceed by prompting a user, as in TEAM [13], IRUS [7], and JANUS [9]. Alternatively, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals, including [11, 17]. This paper 32 focuses on acquiring such semantic knowledge using IRACO. Basic facts ab</context>
</contexts>
<marker>16.</marker>
<rawString>Markowitz, J., Ahlswede, T., and Evens, M. Semantically Significant Patterns in Dictionary Definitions. Proceedings of the 24th Annual Meeting of the Association for Computational Linguistics, June, 1986.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mooney</author>
<author>G DeJong</author>
</authors>
<title>Learning Schemata for Natural Lanugage Processing.</title>
<date>1985</date>
<booktitle>Proceedings of the Ninth International Joint Conference on Artificial Intelligence, IJCAI,</booktitle>
<pages>681--687</pages>
<contexts>
<context position="4858" citStr="[11, 17]" startWordPosition="749" endWordPosition="750">vely, efforts are underway to acquire the information directly from on-line dictionaries [3, 16]. Semantic knowledge includes at least two kinds of information: selectional restrictions or case frame constraints which can serve as a filter on what makes sense semantically, and rules for translating the word senses present in an input into an underlying semantic representation. Acquiring such selectional restriction information has been studied in TEAM, the Linguistic String Parser [12], and our system. Acquiring the meaning of the word senses has been studied by several individuals, including [11, 17]. This paper 32 focuses on acquiring such semantic knowledge using IRACO. Basic facts about the domain must be acquired as well. This includes at least taxonomic information about the semantic categories in the domain and binary relationships holding between semantic categories. For instance, in the domain of Navy decision-making at a US Fleet Command Center, such basic domain facts include: All submarines are vessels. All vessels are units. All units are organizational entities. All vessels have a major weapon system. All units have an overall combat readiness rating. Such information, though</context>
<context position="7488" citStr="[17]" startWordPosition="1170" endWordPosition="1170">ey characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other significant, recently reported systems fall in that space of possibilities. 3.1 Class of underlying systems. One could design tools for a specific subclass of underlying systems, such as database management systems, as in TEAM [13] and TELI [4]. The special na</context>
</contexts>
<marker>17.</marker>
<rawString>Mooney, R. and DeJong, G. Learning Schemata for Natural Lanugage Processing. Proceedings of the Ninth International Joint Conference on Artificial Intelligence, IJCAI, 1985, pp. 681-687.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M G Moser</author>
</authors>
<title>An Overview of NIKL, the New Implementation of KL-ONE. In Research in Knowledge Representation for Natural Language Understanding -Annual Report,</title>
<date>1982</date>
<journal>Sidner, C. L., et al., Eds., BBN Laboratories Report</journal>
<volume>1</volume>
<pages>31</pages>
<contexts>
<context position="2967" citStr="[18, 21]" startWordPosition="454" endWordPosition="455">either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nouns, verbs, adjectives, and prepositions. [Rules are used by the semantic interpreter in enforcing selectional restrictions and producing a logical form as the meaning representation of the input sentence. IRACQ makes extensive use of information present in a model of the domain, which is represented using NIKL [18, 21], the terminological reasoning component of KL-TWO [26]. Information from the domain model is used in guiding the IRACO/user interaction, assuring that acquisition and editing yield IRules consistent with the model. Further support exists for the !Rule developer through a flexible editing and debugging environment. IRACQ has been in use by non-Al experts at the Naval Ocean Systems Center for the expansion of the database of semantic rules in use by IRUS. This paper first surveys the kinds of domain specific knowledge necessary for an NLI as well as approaches to their acquisition (section 2). </context>
</contexts>
<marker>18.</marker>
<rawString>Moser, M.G. An Overview of NIKL, the New Implementation of KL-ONE. In Research in Knowledge Representation for Natural Language Understanding -Annual Report, 1 September 1982 - 31 August 1983, Sidner, C. L., et al., Eds., BBN Laboratories Report No. 5421, 1983, pp. 7-26.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M G Moser</author>
</authors>
<title>Domain Dependent Semantic Acquisition.</title>
<date>1984</date>
<booktitle>Proceedings of The First Conference on Artificial Intelligence Applications, IEEE Computer Society,</booktitle>
<pages>13--18</pages>
<contexts>
<context position="2097" citStr="[19]" startWordPosition="325" endWordPosition="325">eating the knowledge bases requires substantial effort, and therefore substantial cost. It is this assessment of the state of the art that causes us to conclude that knowledge acquisition is one of the most fundamental problems to widespread applicability of NLI technology. This paper describes our contribution to the acquisition of semantic knowledge as evidenced in IRACQ (for Interpretation Rule ACQuisition), within the context of our overall approach to representation of domain knowledge and its use in the IRUS natural language system [5, 6, 27]. An initial version of IRACQ was reported in [19]. Using IRACQ, mappings &apos;The work presented here was supported under DARPA contract #N00014-85-C-0016. The views and conclusions contained in this document are those of the authors and should not be interpreted as necessarily representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nouns, verbs, adjectives, and prepositions. [Rules ar</context>
<context position="15582" citStr="[19]" startWordPosition="2469" endWordPosition="2469">ment for testing the semantic knowledge acquired independently of the other components of the NLI, can present the knowledge acquired in tables, and uses the set of domain facts as a way of checking the consistency of what the user has proposed and suggesting alternatives that are consistent with what the system already knows. Work is also underway on an intelligent editing tool guaranteeing consistency with the model when editing, and on an English paraphraser to express the content of a semantic rule. 4 IRACQ The original version of IRACO was conceived by R. Bobrow and developed by M. Moser [19]. From sample noun phrases or clauses supplied by the user, it inferred possible selectional restrictions and let the user choose the correct one. The user then had to supply the predicates that should be used in the interpretation of the sample phrase, for inclusion in the [Rule. 34 From that original foundation, as IRUS evolved to use NIKL. IRACQ was modified to take advantage of the NIKL knowledge representation language and the form we have adopted for representing events and states of affairs. For example, now RAC() is able to suggest to the user the predicates to be used in the interpret</context>
</contexts>
<marker>19.</marker>
<rawString>Moser, M. G. Domain Dependent Semantic Acquisition. Proceedings of The First Conference on Artificial Intelligence Applications, IEEE Computer Society, December, 1984, pp. 13-18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>LawrenceErlbaumAssociates</author>
</authors>
<date>1977</date>
<contexts>
<context position="7169" citStr="[20]" startWordPosition="1114" endWordPosition="1114">eral acquisition approach that will work with different kinds of underlying systems (not just databases). However, maintaining a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools</context>
</contexts>
<marker>20.</marker>
<rawString>Schenk, R., and Abelson, R. Scripts, Plans, Goals, and Understanding. LawrenceErlbaumAssociates, 1977.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J G Schmolze</author>
<author>D J KL-ONE Israel</author>
</authors>
<title>Semantics and Classification. In Research in Knowledge Representation for Natural Language Understanding -</title>
<date>1982</date>
<journal>Annual Report,</journal>
<volume>1</volume>
<pages>31</pages>
<contexts>
<context position="2967" citStr="[18, 21]" startWordPosition="454" endWordPosition="455">either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nouns, verbs, adjectives, and prepositions. [Rules are used by the semantic interpreter in enforcing selectional restrictions and producing a logical form as the meaning representation of the input sentence. IRACQ makes extensive use of information present in a model of the domain, which is represented using NIKL [18, 21], the terminological reasoning component of KL-TWO [26]. Information from the domain model is used in guiding the IRACO/user interaction, assuring that acquisition and editing yield IRules consistent with the model. Further support exists for the !Rule developer through a flexible editing and debugging environment. IRACQ has been in use by non-Al experts at the Naval Ocean Systems Center for the expansion of the database of semantic rules in use by IRUS. This paper first surveys the kinds of domain specific knowledge necessary for an NLI as well as approaches to their acquisition (section 2). </context>
</contexts>
<marker>21.</marker>
<rawString>Schmolze, J. G., and Israel, D. J. KL-ONE: Semantics and Classification. In Research in Knowledge Representation for Natural Language Understanding - Annual Report, 1 September 1982 - 31 August 1983, Sidner, CI., et al., Eds., BBN Laboratories Report No. 5421, 1983, pp. 27-39.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C L Sidner</author>
</authors>
<title>Plan Parsing for Intended Response Recognition in Discourse&amp;quot;.</title>
<date>1985</date>
<journal>Computational Intelligence</journal>
<volume>1</volume>
<pages>1--10</pages>
<contexts>
<context position="7190" citStr="[22]" startWordPosition="1118" endWordPosition="1118">oach that will work with different kinds of underlying systems (not just databases). However, maintaining a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where o</context>
</contexts>
<marker>22.</marker>
<rawString>Sidner, C.L. &amp;quot;Plan Parsing for Intended Response Recognition in Discourse&amp;quot;. Computational Intelligence 1, 1 (February 1985), 1-10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R L Simpson</author>
</authors>
<title>Al in C3, A Case in Point: Applications of Al Capability&amp;quot;.</title>
<date>1986</date>
<journal>SIGNAL, Journal of the Armed Forces Communications and Electronics Association</journal>
<volume>40</volume>
<pages>79--86</pages>
<contexts>
<context position="31681" citStr="[23]" startWordPosition="5092" endWordPosition="5092"> transferred the IRUS natural language interface, which includes IRACQ, to the staff of the Naval Ocean Systems Center. The person in charge of the effort at NOSC has a master&apos;s degree in linguistics and had some familiarity with natural language processing before the effort started. She received three weeks of hands-on experience with IRUS at BBN in 1985, before returning to NOSC where she trained a few part-time employees who are computer science undergraduates. Development of the dictionary and &apos;Rules for the Fleet Command Center Battle Management Program (FCCBMP), a large Navy application [23], has been performed exclusively by NOSC since August, 1986. Currently, about 5000 words and 150 Rules have been defined. There are two strong positive facts regarding IRACQ&apos;s generality. First, IRUS accesses both a large relational data base and an applications package in the FCCBMP. Only one set of Rules is used, with no cleavage in that set between IRules for the two applications. Second, the same software has been useful for two different versions of IRUS. One employs MRL [29], a procedural first order logic, as the semantic representation of inputs; the second employs IL, a higher-order i</context>
</contexts>
<marker>23.</marker>
<rawString>Simpson, R.L. &amp;quot;Al in C3, A Case in Point: Applications of Al Capability&amp;quot;. SIGNAL, Journal of the Armed Forces Communications and Electronics Association 40, 12 (1986), 79-86.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Stallard</author>
</authors>
<title>Data Modelling for Natural Language Access.</title>
<date>1984</date>
<booktitle>The First Conference on Artificial Intelligence Applications, IEEE Computer Society,</booktitle>
<pages>pp.</pages>
<contexts>
<context position="9523" citStr="[24, 25]" startWordPosition="1498" endWordPosition="1499"> is achieved by having a level of representation for the concepts, actions, and capabilities of the domain, the domain model, separate from the model of the entities in the underlying system. The meaning representation for an input, a logical form, is given in terms of predicates which correspond to domain model concepts and roles (and are hence referred to as domain model predicates). !Rules define the mappings from English to these domain model predicates. In our NLI, a separate component then translates from the meaning representation to the specific representation of the underlying system [24, 25]. IRACO has been used to acquire semantic knowledge for access to both a relational database management system and an ad hoc application system for drawing maps, providing calculations, and preparing summaries; both systems may be accessed from the NLI without the user being particularly aware that there are two systems rather than one underneath the NLI. 3.2 Meaning representation. Another dimension in the design of a semantic knowledge acquisition tool is the style of the underlying semantic representation for natural language input. One could postulate a unique predicate for almost every wo</context>
</contexts>
<marker>24.</marker>
<rawString>Stallard, D. Data Modelling for Natural Language Access. The First Conference on Artificial Intelligence Applications, IEEE Computer Society, December, 1984, pp. 19-24.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David G Stallard</author>
</authors>
<title>A Terminological Simplification Transformation for Natural Language QuestionAnswering Systems.</title>
<date>1986</date>
<booktitle>Proceedings of The 24th Annual Meeting of the ACL, ACL,</booktitle>
<pages>241--246</pages>
<contexts>
<context position="9523" citStr="[24, 25]" startWordPosition="1498" endWordPosition="1499"> is achieved by having a level of representation for the concepts, actions, and capabilities of the domain, the domain model, separate from the model of the entities in the underlying system. The meaning representation for an input, a logical form, is given in terms of predicates which correspond to domain model concepts and roles (and are hence referred to as domain model predicates). !Rules define the mappings from English to these domain model predicates. In our NLI, a separate component then translates from the meaning representation to the specific representation of the underlying system [24, 25]. IRACO has been used to acquire semantic knowledge for access to both a relational database management system and an ad hoc application system for drawing maps, providing calculations, and preparing summaries; both systems may be accessed from the NLI without the user being particularly aware that there are two systems rather than one underneath the NLI. 3.2 Meaning representation. Another dimension in the design of a semantic knowledge acquisition tool is the style of the underlying semantic representation for natural language input. One could postulate a unique predicate for almost every wo</context>
<context position="12586" citStr="[25]" startWordPosition="1980" endWordPosition="1980">an English expression, and therefore, what are valid semantic mappings (IRules, in our case). Our NIKL representation of the domain knowledge, the domain model, forms the semantic backbone of our system. Meaning is represented in terms of domain model predicates; its hierarchy is used for enforcing selectional restrictions and for !Rule inheritance; and some limited inferencing is done based on the model. After semantic interpretation is complete, the NIKL classification algorithm is used in simplifying and transforming high level meaning expressions to obtain the underlying systems&apos; commands [25]. Due to its importance, the domain model is developed carefully in consultation with domain experts, using tools to assure its correctness. This approach of developing a domain model independently of linguistic considerations or of the type of underlying system is to be distinguished from other approaches where the domain knowledge is shaped mostly as a side effect of other processes such as lexical acquisition or database field specification. 3.4 Assumptions about the user of the acquisition tool. If one assumes a human in the semantic acquisition process, as opposed to an automatic approach</context>
</contexts>
<marker>25.</marker>
<rawString>Stallard, David G. A Terminological Simplification Transformation for Natural Language QuestionAnswering Systems. Proceedings of The 24th Annual Meeting of the ACL, ACL, June, 1986, pp. 241-246.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Vilain</author>
</authors>
<title>The Restricted Language Architecture of a Hybrid Representation System.</title>
<date>1985</date>
<booktitle>Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc.,</booktitle>
<pages>547--551</pages>
<location>Los Angeles, CA,</location>
<contexts>
<context position="3022" citStr="[26]" startWordPosition="462" endWordPosition="462">ch Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nouns, verbs, adjectives, and prepositions. [Rules are used by the semantic interpreter in enforcing selectional restrictions and producing a logical form as the meaning representation of the input sentence. IRACQ makes extensive use of information present in a model of the domain, which is represented using NIKL [18, 21], the terminological reasoning component of KL-TWO [26]. Information from the domain model is used in guiding the IRACO/user interaction, assuring that acquisition and editing yield IRules consistent with the model. Further support exists for the !Rule developer through a flexible editing and debugging environment. IRACQ has been in use by non-Al experts at the Naval Ocean Systems Center for the expansion of the database of semantic rules in use by IRUS. This paper first surveys the kinds of domain specific knowledge necessary for an NLI as well as approaches to their acquisition (section 2). Section 3 discusses dimensions in the design of a seman</context>
</contexts>
<marker>26.</marker>
<rawString>Vilain, M. The Restricted Language Architecture of a Hybrid Representation System. Proceedings of IJCAI85, International Joint Conferences on Artificial Intelligence, Inc., Los Angeles, CA, August, 1985, pp. 547-551.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Walker</author>
<author>R M Weischedel</author>
<author>L Ramshaw</author>
</authors>
<title>IRUS/Janus Natural Language Interface Technology in the Strategic Computing Program&amp;quot;.</title>
<date>1986</date>
<journal>Signal</journal>
<volume>40</volume>
<pages>86--90</pages>
<contexts>
<context position="2047" citStr="[5, 6, 27]" startWordPosition="314" endWordPosition="316">, domain specific knowledge need be changed. However, creating the knowledge bases requires substantial effort, and therefore substantial cost. It is this assessment of the state of the art that causes us to conclude that knowledge acquisition is one of the most fundamental problems to widespread applicability of NLI technology. This paper describes our contribution to the acquisition of semantic knowledge as evidenced in IRACQ (for Interpretation Rule ACQuisition), within the context of our overall approach to representation of domain knowledge and its use in the IRUS natural language system [5, 6, 27]. An initial version of IRACQ was reported in [19]. Using IRACQ, mappings &apos;The work presented here was supported under DARPA contract #N00014-85-C-0016. The views and conclusions contained in this document are those of the authors and should not be interpreted as necessarily representing the official policies, either expressed or implied, of the Defense Advanced Research Projects Agency or of the United States Government between valid English constructs and predicates of the domain may be defined by entering sample phrases. The mappings, or interpretation rules (IRules), may be defined for nou</context>
</contexts>
<marker>27.</marker>
<rawString>Walker, E., Weischedel, R.M., and Ramshaw, L. &amp;quot;IRUS/Janus Natural Language Interface Technology in the Strategic Computing Program&amp;quot;. Signal 40, 12 (August 1986), 86-90.</rawString>
</citation>
<citation valid="false">
<authors>
<author>R M Weischedel</author>
<author>L A Ramshaw</author>
</authors>
<title>Reflections on the Knowledge Needed to Process III-Formed Language.</title>
<booktitle>In Machine Translation: Theoretical and Methodological issues, S. Nirenburg, Ed.,</booktitle>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge, England,</location>
<note>to appear.</note>
<contexts>
<context position="7234" citStr="[28]" startWordPosition="1125" endWordPosition="1125">underlying systems (not just databases). However, maintaining a distinction between the concepts of the domain, as the user would think of those concepts, separate from the organization of the database structure or of some other underlying system, is a key characteristic of the design and transportability of IRUS. Finally, a fifth kind of knowledge is a set of domain plans. Though no extensive set of such plans has been developed yet, there is growing agreement that such a library of plans is critical for understanding narrative [20], a user&apos;s needs [22], ellipsis [8, 2], and ill-formed input [28], as well as for following the structure of discourse [14, 15]. Tools for acquiring a large collection of domain plans from a domain expert, rather than an Al expert, have not yet appeared. However, inferring plans from textual examples is under way [17]. 3 Dimensions of Acquiring Semantic Knowledge We discuss in this section several dimensions available in designing a tool for acquiring semantic knowledge within the overall context of an NLI. In presenting a partial description of the space of possible semantic acquisition tools, we describe where our work and the work of several other signif</context>
</contexts>
<marker>28.</marker>
<rawString>Weischedel, R.M. and Ramshaw, L.A. Reflections on the Knowledge Needed to Process III-Formed Language. In Machine Translation: Theoretical and Methodological issues, S. Nirenburg, Ed., Cambridge University Press, Cambridge, England, to appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>W A Woods</author>
</authors>
<title>Semantics and Quantification in Natural Language Question Answering.</title>
<date>1978</date>
<booktitle>In Advances in Computers, M.</booktitle>
<pages>1--87</pages>
<publisher>Yovits, Ed., Academic Press,</publisher>
<contexts>
<context position="32166" citStr="[29]" startWordPosition="5173" endWordPosition="5173">he dictionary and &apos;Rules for the Fleet Command Center Battle Management Program (FCCBMP), a large Navy application [23], has been performed exclusively by NOSC since August, 1986. Currently, about 5000 words and 150 Rules have been defined. There are two strong positive facts regarding IRACQ&apos;s generality. First, IRUS accesses both a large relational data base and an applications package in the FCCBMP. Only one set of Rules is used, with no cleavage in that set between IRules for the two applications. Second, the same software has been useful for two different versions of IRUS. One employs MRL [29], a procedural first order logic, as the semantic representation of inputs; the second employs IL, a higher-order intensional logic. Since the !Rules define selectional restrictions, and since the Davidson-like representation (see section 3) is used in both cases, IRACQ did not have to be changed; only the general procedures for generating quantifiers, scoping decisions, treatment of tense, etc. had to be revised in IRUS. Therefore, a noteworthy degree of generality has been achieved. . Our key knowledge representation decisions were the treatment of events and states of affairs, and the use o</context>
</contexts>
<marker>29.</marker>
<rawString>Woods, W.A. Semantics and Quantification in Natural Language Question Answering. In Advances in Computers, M. Yovits, Ed., Academic Press, 1978, Pp. 1-87.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>