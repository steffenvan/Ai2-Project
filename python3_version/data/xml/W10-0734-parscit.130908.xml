<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.006273">
<title confidence="0.997835">
Creating a Bi-lingual Entailment Corpus through Translations with
Mechanical Turk: $100 for a 10-day Rush
</title>
<author confidence="0.994628">
Matteo Negri&apos; and Yashar Mehdad&apos;,2
</author>
<affiliation confidence="0.998023">
FBK-Irst&apos;, University of Trento2
</affiliation>
<address confidence="0.601742">
Trento, Italy
</address>
<email confidence="0.999214">
{negri,mehdad}@fbk.eu
</email>
<sectionHeader confidence="0.998601" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999647611111111">
This paper reports on experiments in the cre-
ation of a bi-lingual Textual Entailment cor-
pus, using non-experts’ workforce under strict
cost and time limitations ($100, 10 days). To
this aim workers have been hired for transla-
tion and validation tasks, through the Crowd-
Flower channel to Amazon Mechanical Turk.
As a result, an accurate and reliable corpus of
426 English/Spanish entailment pairs has been
produced in a more cost-effective way com-
pared to other methods for the acquisition of
translations based on crowdsourcing. Focus-
ing on two orthogonal dimensions (i.e. relia-
bility of annotations made by non experts, and
overall corpus creation costs), we summarize
the methodology we adopted, the achieved re-
sults, the main problems encountered, and the
lessons learned.
</bodyText>
<sectionHeader confidence="0.99947" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999742795454545">
Textual Entailment (TE) (Dagan and Glickman,
2004) has been proposed as a generic framework for
modelling language variability. Given a text T and
an hypothesis H, the task consists in deciding if the
meaning of H can be inferred from the meaning of
T. At the monolingual level, the great potential of
integrating TE recognition (RTE) components into
NLP architectures has been demonstrated in several
areas, including question answering, information re-
trieval, information extraction, and document sum-
marization. In contrast, mainly due to the absence of
cross-lingual TE (CLTE) recognition components,
similar improvements have not been achieved yet
in any cross-lingual application. Along such di-
rection, focusing on feasibility and architectural is-
sues, (Mehdad et al., 2010) recently proposed base-
line results demonstrating the potential of a simple
approach that integrates Machine Translation and
monolingual TE components.
As a complementary research problem, this paper
addresses the data collection issue, focusing on the
definition of a fast, cheap, and reliable methodology
to create CLTE corpora. The main motivation is that,
as in many other NLP areas, the availability of large
quantities of annotated data represents a critical bot-
tleneck in the systems’ development/evaluation cy-
cle. Our first step in this direction takes advantage
of an already available monolingual corpus, casting
the problem as a translation one. The challenge con-
sists in taking a publicly available RTE dataset of
English T-H pairs (i.e. the PASCAL-RTE3 dataset1),
and create its English-Spanish CLTE equivalent by
translating the hypotheses into Spanish. To this
aim non-expert workers have been hired through
the CrowdFlower2 channel to Amazon Mechanical
Turk3 (MTurk), a crowdsourcing marketplace re-
cently used with success for a variety of NLP tasks
(Snow et al., 2008; Callison-Burch, 2009; Mihalcea
and Strapparava, 2009; Marge et al., 2010; Ambati
et al., 2010).
The following sections overview our experiments,
carried out under strict time (10 days) and cost
($100) limitations. In particular, Section 2 describes
our data acquisition process; Section 3 summarizes
</bodyText>
<footnote confidence="0.999840666666667">
1Available at: http://www.nist.gov/tac/data/RTE/index.html
2http://crowdflower.com/
3https://www.mturk.com/mturk/
</footnote>
<page confidence="0.930364">
212
</page>
<note confidence="0.755845">
Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon’s Mechanical Turk, pages 212–216,
Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics
</note>
<bodyText confidence="0.999747">
the successive approximations that led to the defini-
tion of our methodology, and the lessons learned at
each step; Section 4 concludes the paper and pro-
vides directions for future work.
</bodyText>
<sectionHeader confidence="0.806402" genericHeader="method">
2 Corpus creation cycles
</sectionHeader>
<bodyText confidence="0.993026136363636">
Starting from the RTE3 Development set (800 En-
glish T-H pairs), our corpus creation process has
been organized in sentence translation-validation
cycles, defined as separate “jobs” routed to Crowd-
Fower’s workforce. At the first stage of each cycle,
the original English hypotheses are used to create a
translation job for collecting their Spanish equiva-
lents. At the second stage, the collected translations
are used to create a validation job, where multiple
judges are asked to check the correctness of each
translation, given the English source. Translated hy-
potheses that are positively evaluated by the major-
ity of trustful validators (i.e. those judged correct
with a confidence above 0.8) are retained, and di-
rectly stored in our CLTE corpus together with the
corresponding English texts. The remaining ones
are used to create a new translation job. The proce-
dure is iterated until substantial agreement for each
translated hypothesis is reached.
As regards the first phase of the cycle, we defined
our translation HIT as follows:
In this task you are asked to:
</bodyText>
<listItem confidence="0.965451636363636">
• First, judge if the Spanish sentence is a correct
translation of the English sentence. If the En-
glish sentence and its Spanish translation are blank
(marked as -), you can skip this step.
• Then, translate the English sentence above the text
box into Spanish.
Please make sure that your translation is:
1. Faithful to the original phrase in both meaning and
style.
2. Grammatically correct.
3. Free of spelling errors and typos.
</listItem>
<bodyText confidence="0.914976666666667">
Don’t use any automatic (machine) translation tool! You
can have a look at any on-line dictionary or reference
for the meaning of a word.
This HIT asks workers to first check the qual-
ity of an English-Spanish translation (used as a gold
unit), and then write the Spanish translation of a
new English sentence. The quality check allows
to collect accurate translations, by filtering out
judgments made by workers missing more than
20% of the gold units.
As regards the second phase of the cycle, our
validation HIT has been defined as follows:
Su tarea es verificar si la traducci´on dada de una
frase del Ingl´es al espaol es correcta o no. La traducci´on
es correcta si:
</bodyText>
<listItem confidence="0.784117666666667">
1. El estilo y sentido de la frase son fieles a los de la
original.
2. Es gramaticalmente correcta.
3. Carece de errores ortogr´aficos y tipogr´aficos.
Nota: el uso de herramientas de traducci´on autom´atica
(m´aquina) no est´a permitido!
</listItem>
<bodyText confidence="0.979688321428571">
This HIT asks workers to take binary decisions
(Yes/No) for a set of English-Spanish translations
including gold units. The title and the description
are written in Spanish in order to weed out untrusted
workers (i.e. those speaking only English), and
attract the attention of Spanish speakers.
In our experiments, both the translation and vali-
dation jobs have been defined in several ways, trying
to explore different strategies to quickly collect reli-
able data in a cost effective way. Such cost reduction
effort led to the following differences between our
work and similar related approaches documented in
literature (Callison-Burch, 2009; Snow et al., 2008):
• Previous works built on redundancy of the col-
lected translations (up to 5 for each source
sentence), thus resulting in more costly jobs.
For instance, adopting a redundancy-based ap-
proach to collect 5 translations per sentence at
the cost of $0.01 each, and 5 validations per
translation at the cost of $0.002 each, would re-
sult in $80 for 800 sentences.
Assuming that the translation process is com-
plex and expensive, our cycle-based technique
builds on simple and cheap validation mech-
anisms that drastically reduce the amount of
translations required. In our case, 1 translation
per sentence at the cost of $0.01, and 5 valida-
tions per translation at the cost of $0.002 each,
</bodyText>
<page confidence="0.995833">
213
</page>
<bodyText confidence="0.9974416">
would result in $32 for 800 sentences, making
a conservative assumption of up to 8 iterations
with 50% wrong translations at each cycle (i.e.
800 sentences in the first cycle, 400 in the sec-
ond, 200 in the third, etc.).
</bodyText>
<listItem confidence="0.924581928571429">
• Previous works involving validation of the col-
lected data are based on ranking/voting mecha-
nisms, where workers are asked to order a num-
ber of translations, or select the best one given
the source. Our approach to validation is based
on asking workers to take binary decisions over
source-target pairs. This results in an easier,
faster, and eventually cheaper task.
• Previous works did not use any specific method
to qualify the workers’ knowledge, apart from
post-hoc agreement computation. Our ap-
proach systematically includes gold units to fil-
ter out untrusted workers during the process.
As a result we pay only for qualified judgments.
</listItem>
<sectionHeader confidence="0.989714" genericHeader="evaluation">
3 Experiments and lessons learned
</sectionHeader>
<bodyText confidence="0.998284014084507">
The overall methodology, and the definition of the
HITs described in Section 2, are the result of suc-
cessive approximations that took into account two
correlated aspects: the quality of the collected trans-
lations, and the current limitations of the Crowd-
Flower service. On one side, simpler, cheaper, and
faster jobs launched in the beginning of our experi-
ments had to be refined to improve the quality of the
retained translations. On the other side, ad-hoc solu-
tions had to be found to cope with the limited quality
control functionalities provided by CrowdFlower. In
particular, the lack of regional qualifications of the
workers, and of any qualification tests mechanism
(useful features of MTurk) raised the need of defin-
ing more controlled, but also more expensive jobs.
Table 1 and the rest of this section summarize the
progress of our work in defining the methodology
adopted, the main improvements experimented at
each step, the overall costs, and the lessons learned.
Step 1: a naive approach. Initially, transla-
tion/validation jobs were defined without using qual-
ification mechanisms, giving permission to any
worker to complete our HITs. In this phase, our goal
was to estimate the trade-off between the required
development time, the overall costs, and the qual-
ity of translations collected in the most naive condi-
tions.
As expected, the job accomplishment time was
negligible, and the overall cost very low. More
specifically, it took about 1 hour for translating the
800 hypotheses at the cost of $12, and less than 6
hours to obtain 5 validations per each translation at
the same cost of $12.
Nevertheless, as revealed by further experiments
with the introduction of gold units, the quality of the
collected translations was poor. In particular, 61% of
them should have been rejected, often due to gross
mistakes. As an example, among the collected mate-
rial several translations in languages other than En-
glish revealed a massive and defective use of on-line
translation tools by untrusted workers, as also ob-
served by (Callison-Burch, 2009).
Step 2: reducing validation errors. A first im-
provement addressed the validation phase, where
we introduced gold units as a mechanism to qual-
ify the workers, and consequently prune the un-
trusted ones. To this aim, we launched the valida-
tion HIT described in Section 2, adding around 50
English-Spanish control pairs. The pairs (equally
distributed into positive and negative samples) have
been extracted from the collected data, and manually
checked by a Spanish native speaker.
The positive effect of using gold units has been
verified in two ways. First, we checked the quality
of the translations collected in the first naive transla-
tion job, by counting the number of rejections (61%)
after running the improved validation job. Then, we
manually checked the quality of the translations re-
tained with the new job. A manual check on 20% of
the retained translations was carried out by a Span-
ish native speaker, resulting in 97% Accuracy. The
3% errors encountered are equally divided into mi-
nor translation errors, and controversial (but sub-
stantially acceptable) cases due to regional Spanish
variations.
The considerable quality improvement observed
has been obtained with a small increase of 25% in
the cost (less than $3). However, as regards the ac-
complishment time, adding the gold units to qualify
workers led to a considerable increase in duration
(about 4 days for the first iteration). This is mainly
</bodyText>
<page confidence="0.996802">
214
</page>
<bodyText confidence="0.997403543478261">
due to the high number of automatically rejected
judgments, obtained from untrusted workers miss-
ing the gold units. Because of the discrepancy be-
tween trusted and untrusted judgments, we faced an-
other limitation of the CrowdFlower service, which
further delayed our experiments. Often, in fact, the
rapid growth of untrusted judgments activates auto-
matic pausing mechanisms, based on the assumption
that gold units are not accurate. This, however, is a
strong assumption which does not take into account
the huge amount of non-qualified workers accepting
(or even just playing with) the HITs. For instance,
in our case the vast majority of errors came from
workers located in specific regions where the native
language is not Spanish nor English.
Step 3: reducing translation errors. The ob-
served improvement obtained by introducing gold
units in the validation phase, led us to the definition
of a new translation task, also involving a similar
qualification mechanism. To this aim, due to lan-
guage variability, it was clearly impossible to use
reference translations as gold units. Taking into ac-
count the limitations of the CrowdFlower interface,
which does not allow to set qualification tests or
split the jobs into sequential subtasks (other effec-
tive and widely used features of MTurk), we solved
the problem by defining the translation HITs as de-
scribed in Section 2. This solution combines a va-
lidity check and a translation task, and proved to be
effective with a decrease in the translations eventu-
ally rejected (45%).
Step 4: reducing time. Considering the extra time
required by using gold units, we decided to spend
more money on each HIT to boost the speed of our
jobs. In addition, to overcome the delays caused by
the automatic pausing mechanism, we obtained from
CrowdFlower the possibility to pose regional quali-
fication, as commonly used in MTurk.
As expected, both solutions proved to be effective,
and contributed to the final definition of our method-
ology. On one side, doubling the payment for each
task (from $0.01 to $0.02 for each translation and
from from $0.002 to $0.005 for each validation), we
halved the required time to finish each job. On the
other side, by imposing the regional qualification,
we eventually avoided unexpected automatic pauses.
</bodyText>
<sectionHeader confidence="0.989146" genericHeader="conclusions">
4 Conclusion and future work
</sectionHeader>
<bodyText confidence="0.999550456521739">
We presented a set of experiments targeting the cre-
ation of bi-lingual Textual Entailment corpora by
means of non experts’ workforce (i.e. the Crowd-
Flower channel to Amazon Mechanical Turk).
As a first step in this direction, we took advantage
of an already existing monolingual English RTE cor-
pus, casting the problem as a translation task where
Spanish translations of the hypotheses are collected
and validated by the workers. Strict time and cost
limitations on one side, and the current limitations
of the CrowdFlower service on the other side, led
us to the definition of an effective corpus creation
methodology. As a result, less than $100 were spent
in 10 days to define such methodology, leading to
collect 426 pairs as a by-product. However, it’s
worth remarking that applying this technique to cre-
ate the full corpus would cost about $30.
The limited costs, together with the short time re-
quired to acquire reliable results, demonstrate the
effectiveness of crowdsourcing services for simple
sentence translation tasks. However, while MTurk is
already a well tested, stable, and rich of functional-
ities platform, some limitations emerged during our
experience with the more recent CrowdFlower ser-
vice (currently the only one accessible to non-US
citizens). Some of these limitations, such as the
regional qualification mechanism, have been over-
come right after the end of our experimentation with
the introduction of new functionalities provided as
”Advanced Options”. Others (such as the lack of
other qualification mechanisms, and the automatic
pausing of the HITs in case of high workers’ error
rates on the gold units) at the moment still represent
a possible complication, and have to be carefully
considered when designing experiments and inter-
preting the results4.
In light of this positive experience, next steps
in our research will further explore crowdsourcing-
based data acquisition methods to address the com-
plementary problem of collecting new entailment
pairs from scratch. This will allow to drastically re-
duce data collection bottlenecks, and boost research
both on cross-lingual and mono-lingual Textual En-
4However, when asked through the provided support ser-
vice, the CrowdFlower team proved to be quite reactive in pro-
viding ad-hoc solutions to specific problems.
</bodyText>
<page confidence="0.981372">
215
</page>
<table confidence="0.663294222222222">
Elapsed time Running cost Focus Lessons learned
1 day $24 Approaching CrowdFlower, Need of qualification mechanism,
defining a naive methodology task definition in Spanish.
7 days $58 Improving validation Qualification mechanisms (gold units
and regional) are effective, need of
payment increase to boost speed.
9 days $99.75 Improving translation Combined HIT for qualification, pay-
ment increase worked!
10 days $99.75 Obtaining bi-lingual RTE corpus Fast, cheap, and reliable method.
</table>
<tableCaption confidence="0.996385">
Table 1: $100 for a 10-day rush (summary and lessons learned)
</tableCaption>
<bodyText confidence="0.629284">
tailment.
</bodyText>
<sectionHeader confidence="0.999447" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.99967175">
We would like to thank MTurk and CrowdFlower
for providing the $100 credit used for the experi-
ments, and our colleague Silvana Bernaola Biggio,
who kindly accepted to validate our results.
The research leading to these results has re-
ceived funding from the European Community’s
Seventh Framework Programme (FP7/2007-2013)
under Grant Agreement n. 248531.
</bodyText>
<sectionHeader confidence="0.999528" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999668807692308">
V. Ambati, S. Vogel and J. Carbonell 2010. Active
Learning and Crowd-Sourcing for Machine Transla-
tion. To appear in Proceedings of LREC 2010.
C. Callison-Burch 2009. Fast, Cheap, and Creative:
Evaluating Translation Quality Using Amazon’s Me-
chanical Turk. In Proceedings of EMNLP 2009.
I. Dagan and O. Glickman 2004. Probabilistic Textual
Entailment: Generic Applied Modeling of Language
Variability. In Proceedings of the PASCAL Workshop
of Learning Methods for Text Understanding and Min-
ing.
M. Marge, S. Banerjee and A. Rudnicky 2010. Using the
Amazon Mechanical Turk for Transcription of Spoken
Language. In Proceedings of the 2010 IEEE Interna-
tional Conference on Acoustics, Speech and Spoken
Language (ICASSP 2010).
Y. Mehdad, M. Negri, and M. Federico 2010. Towards
Cross-Lingual Textual Entailment. To appear in Pro-
ceedings of NAACL HLT 2010.
R. Mihalcea and C. Strapparava 2009. The Lie Detector:
Explorations in the Automatic Recognition of Decep-
tive Language. In Proceedings of ACL 2009.
R. Snow, B. O’Connor, D. Jurafsky, and A. Y. Ng 2008.
Cheap and Fast - but is it Good? Evaluating Non-
expert Annotations for Natural Language Tasks. In
Proceedings of EMNLP 2008.
</reference>
<page confidence="0.999145">
216
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.475622">
<title confidence="0.99941">Creating a Bi-lingual Entailment Corpus through Translations</title>
<author confidence="0.959032">Mechanical Turk for a -day Rush</author>
<affiliation confidence="0.999195">University of</affiliation>
<address confidence="0.512675">Trento,</address>
<abstract confidence="0.995648210526316">This paper reports on experiments in the creation of a bi-lingual Textual Entailment corpus, using non-experts’ workforce under strict cost and time limitations ($100, 10 days). To this aim workers have been hired for translation and validation tasks, through the Crowd- Flower channel to Amazon Mechanical Turk. As a result, an accurate and reliable corpus of 426 English/Spanish entailment pairs has been produced in a more cost-effective way compared to other methods for the acquisition of translations based on crowdsourcing. Focuson two orthogonal dimensions reliaannotations made by non experts, and corpus creation we summarize the methodology we adopted, the achieved results, the main problems encountered, and the lessons learned.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>V Ambati</author>
<author>S Vogel</author>
<author>J Carbonell</author>
</authors>
<title>Active Learning and Crowd-Sourcing for Machine Translation. To appear in</title>
<date>2010</date>
<booktitle>Proceedings of LREC</booktitle>
<contexts>
<context position="2969" citStr="Ambati et al., 2010" startWordPosition="443" endWordPosition="446"> advantage of an already available monolingual corpus, casting the problem as a translation one. The challenge consists in taking a publicly available RTE dataset of English T-H pairs (i.e. the PASCAL-RTE3 dataset1), and create its English-Spanish CLTE equivalent by translating the hypotheses into Spanish. To this aim non-expert workers have been hired through the CrowdFlower2 channel to Amazon Mechanical Turk3 (MTurk), a crowdsourcing marketplace recently used with success for a variety of NLP tasks (Snow et al., 2008; Callison-Burch, 2009; Mihalcea and Strapparava, 2009; Marge et al., 2010; Ambati et al., 2010). The following sections overview our experiments, carried out under strict time (10 days) and cost ($100) limitations. In particular, Section 2 describes our data acquisition process; Section 3 summarizes 1Available at: http://www.nist.gov/tac/data/RTE/index.html 2http://crowdflower.com/ 3https://www.mturk.com/mturk/ 212 Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon’s Mechanical Turk, pages 212–216, Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics the successive approximations that led to the definition of our m</context>
</contexts>
<marker>Ambati, Vogel, Carbonell, 2010</marker>
<rawString>V. Ambati, S. Vogel and J. Carbonell 2010. Active Learning and Crowd-Sourcing for Machine Translation. To appear in Proceedings of LREC 2010.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Callison-Burch</author>
</authors>
<title>Fast, Cheap, and Creative: Evaluating Translation Quality Using Amazon’s Mechanical Turk.</title>
<date>2009</date>
<booktitle>In Proceedings of EMNLP</booktitle>
<contexts>
<context position="2895" citStr="Callison-Burch, 2009" startWordPosition="433" endWordPosition="434">tems’ development/evaluation cycle. Our first step in this direction takes advantage of an already available monolingual corpus, casting the problem as a translation one. The challenge consists in taking a publicly available RTE dataset of English T-H pairs (i.e. the PASCAL-RTE3 dataset1), and create its English-Spanish CLTE equivalent by translating the hypotheses into Spanish. To this aim non-expert workers have been hired through the CrowdFlower2 channel to Amazon Mechanical Turk3 (MTurk), a crowdsourcing marketplace recently used with success for a variety of NLP tasks (Snow et al., 2008; Callison-Burch, 2009; Mihalcea and Strapparava, 2009; Marge et al., 2010; Ambati et al., 2010). The following sections overview our experiments, carried out under strict time (10 days) and cost ($100) limitations. In particular, Section 2 describes our data acquisition process; Section 3 summarizes 1Available at: http://www.nist.gov/tac/data/RTE/index.html 2http://crowdflower.com/ 3https://www.mturk.com/mturk/ 212 Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon’s Mechanical Turk, pages 212–216, Los Angeles, California, June 2010. c�2010 Association for Computational Lin</context>
<context position="6768" citStr="Callison-Burch, 2009" startWordPosition="1043" endWordPosition="1044">to take binary decisions (Yes/No) for a set of English-Spanish translations including gold units. The title and the description are written in Spanish in order to weed out untrusted workers (i.e. those speaking only English), and attract the attention of Spanish speakers. In our experiments, both the translation and validation jobs have been defined in several ways, trying to explore different strategies to quickly collect reliable data in a cost effective way. Such cost reduction effort led to the following differences between our work and similar related approaches documented in literature (Callison-Burch, 2009; Snow et al., 2008): • Previous works built on redundancy of the collected translations (up to 5 for each source sentence), thus resulting in more costly jobs. For instance, adopting a redundancy-based approach to collect 5 translations per sentence at the cost of $0.01 each, and 5 validations per translation at the cost of $0.002 each, would result in $80 for 800 sentences. Assuming that the translation process is complex and expensive, our cycle-based technique builds on simple and cheap validation mechanisms that drastically reduce the amount of translations required. In our case, 1 transl</context>
<context position="10432" citStr="Callison-Burch, 2009" startWordPosition="1647" endWordPosition="1648">lly, it took about 1 hour for translating the 800 hypotheses at the cost of $12, and less than 6 hours to obtain 5 validations per each translation at the same cost of $12. Nevertheless, as revealed by further experiments with the introduction of gold units, the quality of the collected translations was poor. In particular, 61% of them should have been rejected, often due to gross mistakes. As an example, among the collected material several translations in languages other than English revealed a massive and defective use of on-line translation tools by untrusted workers, as also observed by (Callison-Burch, 2009). Step 2: reducing validation errors. A first improvement addressed the validation phase, where we introduced gold units as a mechanism to qualify the workers, and consequently prune the untrusted ones. To this aim, we launched the validation HIT described in Section 2, adding around 50 English-Spanish control pairs. The pairs (equally distributed into positive and negative samples) have been extracted from the collected data, and manually checked by a Spanish native speaker. The positive effect of using gold units has been verified in two ways. First, we checked the quality of the translation</context>
</contexts>
<marker>Callison-Burch, 2009</marker>
<rawString>C. Callison-Burch 2009. Fast, Cheap, and Creative: Evaluating Translation Quality Using Amazon’s Mechanical Turk. In Proceedings of EMNLP 2009.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dagan</author>
<author>O Glickman</author>
</authors>
<title>Probabilistic Textual Entailment: Generic Applied Modeling of Language Variability.</title>
<date>2004</date>
<booktitle>In Proceedings of the PASCAL Workshop of Learning Methods for Text Understanding and Mining.</booktitle>
<contexts>
<context position="1060" citStr="Dagan and Glickman, 2004" startWordPosition="155" endWordPosition="158">r translation and validation tasks, through the CrowdFlower channel to Amazon Mechanical Turk. As a result, an accurate and reliable corpus of 426 English/Spanish entailment pairs has been produced in a more cost-effective way compared to other methods for the acquisition of translations based on crowdsourcing. Focusing on two orthogonal dimensions (i.e. reliability of annotations made by non experts, and overall corpus creation costs), we summarize the methodology we adopted, the achieved results, the main problems encountered, and the lessons learned. 1 Introduction Textual Entailment (TE) (Dagan and Glickman, 2004) has been proposed as a generic framework for modelling language variability. Given a text T and an hypothesis H, the task consists in deciding if the meaning of H can be inferred from the meaning of T. At the monolingual level, the great potential of integrating TE recognition (RTE) components into NLP architectures has been demonstrated in several areas, including question answering, information retrieval, information extraction, and document summarization. In contrast, mainly due to the absence of cross-lingual TE (CLTE) recognition components, similar improvements have not been achieved ye</context>
</contexts>
<marker>Dagan, Glickman, 2004</marker>
<rawString>I. Dagan and O. Glickman 2004. Probabilistic Textual Entailment: Generic Applied Modeling of Language Variability. In Proceedings of the PASCAL Workshop of Learning Methods for Text Understanding and Mining.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Marge</author>
<author>S Banerjee</author>
<author>A Rudnicky</author>
</authors>
<title>Using the Amazon Mechanical Turk for Transcription of Spoken Language.</title>
<date>2010</date>
<booktitle>In Proceedings of the 2010 IEEE International Conference on Acoustics, Speech and Spoken Language (ICASSP</booktitle>
<contexts>
<context position="2947" citStr="Marge et al., 2010" startWordPosition="439" endWordPosition="442">this direction takes advantage of an already available monolingual corpus, casting the problem as a translation one. The challenge consists in taking a publicly available RTE dataset of English T-H pairs (i.e. the PASCAL-RTE3 dataset1), and create its English-Spanish CLTE equivalent by translating the hypotheses into Spanish. To this aim non-expert workers have been hired through the CrowdFlower2 channel to Amazon Mechanical Turk3 (MTurk), a crowdsourcing marketplace recently used with success for a variety of NLP tasks (Snow et al., 2008; Callison-Burch, 2009; Mihalcea and Strapparava, 2009; Marge et al., 2010; Ambati et al., 2010). The following sections overview our experiments, carried out under strict time (10 days) and cost ($100) limitations. In particular, Section 2 describes our data acquisition process; Section 3 summarizes 1Available at: http://www.nist.gov/tac/data/RTE/index.html 2http://crowdflower.com/ 3https://www.mturk.com/mturk/ 212 Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon’s Mechanical Turk, pages 212–216, Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics the successive approximations that led to t</context>
</contexts>
<marker>Marge, Banerjee, Rudnicky, 2010</marker>
<rawString>M. Marge, S. Banerjee and A. Rudnicky 2010. Using the Amazon Mechanical Turk for Transcription of Spoken Language. In Proceedings of the 2010 IEEE International Conference on Acoustics, Speech and Spoken Language (ICASSP 2010).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Mehdad</author>
<author>M Negri</author>
<author>M Federico</author>
</authors>
<title>Towards Cross-Lingual Textual Entailment. To appear in</title>
<date>2010</date>
<booktitle>Proceedings of NAACL HLT</booktitle>
<contexts>
<context position="1789" citStr="Mehdad et al., 2010" startWordPosition="265" endWordPosition="268">s H, the task consists in deciding if the meaning of H can be inferred from the meaning of T. At the monolingual level, the great potential of integrating TE recognition (RTE) components into NLP architectures has been demonstrated in several areas, including question answering, information retrieval, information extraction, and document summarization. In contrast, mainly due to the absence of cross-lingual TE (CLTE) recognition components, similar improvements have not been achieved yet in any cross-lingual application. Along such direction, focusing on feasibility and architectural issues, (Mehdad et al., 2010) recently proposed baseline results demonstrating the potential of a simple approach that integrates Machine Translation and monolingual TE components. As a complementary research problem, this paper addresses the data collection issue, focusing on the definition of a fast, cheap, and reliable methodology to create CLTE corpora. The main motivation is that, as in many other NLP areas, the availability of large quantities of annotated data represents a critical bottleneck in the systems’ development/evaluation cycle. Our first step in this direction takes advantage of an already available monol</context>
</contexts>
<marker>Mehdad, Negri, Federico, 2010</marker>
<rawString>Y. Mehdad, M. Negri, and M. Federico 2010. Towards Cross-Lingual Textual Entailment. To appear in Proceedings of NAACL HLT 2010.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mihalcea</author>
<author>C Strapparava</author>
</authors>
<title>The Lie Detector: Explorations in the Automatic Recognition of Deceptive Language.</title>
<date>2009</date>
<booktitle>In Proceedings of ACL</booktitle>
<contexts>
<context position="2927" citStr="Mihalcea and Strapparava, 2009" startWordPosition="435" endWordPosition="438">uation cycle. Our first step in this direction takes advantage of an already available monolingual corpus, casting the problem as a translation one. The challenge consists in taking a publicly available RTE dataset of English T-H pairs (i.e. the PASCAL-RTE3 dataset1), and create its English-Spanish CLTE equivalent by translating the hypotheses into Spanish. To this aim non-expert workers have been hired through the CrowdFlower2 channel to Amazon Mechanical Turk3 (MTurk), a crowdsourcing marketplace recently used with success for a variety of NLP tasks (Snow et al., 2008; Callison-Burch, 2009; Mihalcea and Strapparava, 2009; Marge et al., 2010; Ambati et al., 2010). The following sections overview our experiments, carried out under strict time (10 days) and cost ($100) limitations. In particular, Section 2 describes our data acquisition process; Section 3 summarizes 1Available at: http://www.nist.gov/tac/data/RTE/index.html 2http://crowdflower.com/ 3https://www.mturk.com/mturk/ 212 Proceedings of the NAACL HLT 2010 Workshop on Creating Speech and Language Data with Amazon’s Mechanical Turk, pages 212–216, Los Angeles, California, June 2010. c�2010 Association for Computational Linguistics the successive approxim</context>
</contexts>
<marker>Mihalcea, Strapparava, 2009</marker>
<rawString>R. Mihalcea and C. Strapparava 2009. The Lie Detector: Explorations in the Automatic Recognition of Deceptive Language. In Proceedings of ACL 2009.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Snow</author>
<author>B O’Connor</author>
<author>D Jurafsky</author>
<author>A Y Ng</author>
</authors>
<title>Cheap and Fast - but is it Good? Evaluating Nonexpert Annotations for Natural Language Tasks.</title>
<date>2008</date>
<booktitle>In Proceedings of EMNLP</booktitle>
<marker>Snow, O’Connor, Jurafsky, Ng, 2008</marker>
<rawString>R. Snow, B. O’Connor, D. Jurafsky, and A. Y. Ng 2008. Cheap and Fast - but is it Good? Evaluating Nonexpert Annotations for Natural Language Tasks. In Proceedings of EMNLP 2008.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>