<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000084">
<title confidence="0.941981">
Development of a Persian Syntactic Dependency Treebank
</title>
<author confidence="0.83122">
Mohammad Sadegh Rasooli Manouchehr Kouhestani Amirsaeid Moloodi
</author>
<affiliation confidence="0.9943545">
Department of Computer Science Department of Linguistics Department of Linguistics
Columbia University Tarbiat Modares University University of Tehran
</affiliation>
<address confidence="0.952748">
New York, NY Tehran, Iran Tehran, Iran
</address>
<email confidence="0.997442">
rasooli@cs.columbia.edu m.kouhestani@modares.ac.ir a.moloodi@ut.ac.ir
</email>
<sectionHeader confidence="0.995604" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9998985625">
This paper describes the annotation process
and linguistic properties of the Persian syn-
tactic dependency treebank. The treebank
consists of approximately 30,000 sentences
annotated with syntactic roles in addition to
morpho-syntactic features. One of the unique
features of this treebank is that there are al-
most 4800 distinct verb lemmas in its sen-
tences making it a valuable resource for ed-
ucational goals. The treebank is constructed
with a bootstrapping approach by means of
available tagging and parsing tools and man-
ually correcting the annotations. The data is
splitted into standard train, development and
test set in the CoNLL dependency format and
is freely available to researchers.
</bodyText>
<sectionHeader confidence="0.807756" genericHeader="keywords">
1 Introduction1
</sectionHeader>
<bodyText confidence="0.999921818181818">
The process of manually annotating linguistic data
from a huge amount of naturally occuring texts is a
very expensive and time consuming task. Due to the
recent success of machine learning methods and the
rapid growth of available electronic texts, language
processing tasks have been facilitated greatly. Con-
sidering the value of annotated data, a great deal of
budget has been allotted to creating such data.
Among all linguistic datasets, treebanks play an
important role in the natural language processing
tasks especially in parsing because of its applica-
</bodyText>
<footnote confidence="0.958374">
1This research is done while working in Dadegan Research
Group, Supreme Council of Information and Communications
Technology (SCICT), Tehran, Iran. The project is fully funded
by SCICT.
</footnote>
<page confidence="0.993672">
306
</page>
<bodyText confidence="0.999918529411765">
tions in tasks such as machine translation. Depen-
dency treebanks are collections of sentences with
their corresponding dependency trees. In the last
decade, many dependency treebanks have been de-
veloped for a large number of languages. There are
at least 29 languages for which at least one depen-
dency treebank is available (Zeman et al., 2012).
Dependency trees are much more similar to the hu-
man understanding of language and can easily rep-
resent the free word-order nature of syntactic roles
in sentences (K¨ubler et al., 2009).
Persian is a language with about 110 million
speakers all over the world (Windfuhr, 2009), yet in
terms of the availability of teaching materials and
annotated data for text processing, it is undoubt-
edly a low-resourced language. The need for more
language teaching materials together with an ever-
increasing need for Persian-language data process-
ing has been the incentive for the inception of our
project which has defined the development of the
syntactic treebank of Persian as its ultimate aim. In
this paper, we review the process of creating the Per-
sian syntactic treebank based on dependency gram-
mar. In this treebank, approximately 30,000 sen-
tences from contemporary Persian-language texts
are manually tokenized and annotated at morpholog-
ical and syntactic levels. One valuable aspect of the
treebank is its containment of near 5000 distinct verb
lemmas in its sentences making it a good resource
for educational goals. The dataset is developed af-
ter the creation of the syntactic valency lexicon of
Persian verbs (Rasooli et al., 2011c). This treebank
is developed with a bootstrapping approach by au-
tomatically building dependency trees based on the
</bodyText>
<note confidence="0.543434">
Proceedings of NAACL-HLT 2013, pages 306–314,
Atlanta, Georgia, 9–14 June 2013. c�2013 Association for Computational Linguistics
</note>
<figure confidence="0.983570354838709">
Iƒ@�à
�
@ QK. ú æ:J.Ó áK
@ root
Raw Sentence
Insert
Encoding and
Spell Correction
POSDEP
�
MOS
root
SBJ
AJPP
?æst ?an bær mobtæni ?in
is that on based it
V PR PP ADJ PR
Tokenization and
POS Tagging
(a) A simple projective dependency
tree for a Persian sentence: “It is based
on that”’.
Verb Analysis
à �@ QK. ~Iƒ@ ú �æ�JJ.Ó áK
@root
?an bær ?æst mobtæni ?in
that on is based it
PR PP V ADJ PR
(b) A simple non-projective depen-
dency tree for a Persian sentence: “It
is based on that”.
</figure>
<figureCaption confidence="0.996319666666667">
Figure 1: Examples of Persian sentences with the
dependency-based syntactic trees. 1(a) and 1(b) are ex-
amples of a projective and a non-projective dependency
tree, respectively. The first lines show the original words
in Persian. The pronunciation and their meanings are
shown in the second line and the third line respectively. In
the fourth line, the part of speech (POS) tags of the words
are presented. Note that the words are written from right
to left (the direction of Perso-Arabic script). The depen-
dency relations are described in Table 2. The relation is
shown with an arc pointing from the head to the depen-
dent.
</figureCaption>
<bodyText confidence="0.987836333333333">
previous annotated trees. In the next step, automatic
annotation is corrected manually.
The remainder of this paper is as follows. In Sec-
tion 2, we briefly review the challenges in Persian
language processing. In Sections 3 and 4, the de-
tails about the annotation process, linguistic and sta-
tistical information about the data and the annotator
agreement are reported. In Section 5, the conclusion
and suggestions for future research are presented.
</bodyText>
<sectionHeader confidence="0.812017" genericHeader="introduction">
2 Persian Language Processing Challenges
</sectionHeader>
<footnote confidence="0.6186066">
Persian is an Indo-European language that is writ-
ten in Arabic script. There are lots of problems
in its orthography such as encoding problems, hid-
den diacritics and writing standards (Kashefi et al.,
2010). A number of challenges such as the free or-
</footnote>
<figureCaption confidence="0.9891685">
Figure 2: Diagram of bootstrapping approach in the de-
velopment of the dependency treebank.
</figureCaption>
<bodyText confidence="0.999492916666667">
der of words, the existence of colloquial texts, the
pro-drop nature of the Persian language and its com-
plex inflections (Shamsfard, 2011) in addition to the
lack of efficient annotated linguistic data have made
the processing of Persian texts very difficult; e.g.
there are more than 100 conjugates and 2800 de-
clensions for some word forms in Persian (Rasooli
et al., 2011b), some words in the Persian language
do not have a clear word category (i.e. the lexical
category “mismatch”) (Karimi-Doostan, 2011a) and
many compound verbs (complex predicates) can be
separable (i.e. the non-verbal element may be sepa-
rated from the verbal element by one or more other
words) (Karimi-Doostan, 2011b).
After the development of the Bijankhan corpus
(Bijankhan, 2004) with the annotation of word cat-
egories, other kinds of datasets have been created
to address the need for Persian language process-
ing. Among them, a Persian parser based on link
grammar (Dehdari and Lonsdale, 2008), a compu-
tational grammar based on GPSG (Bahrani et al.,
2011), syntactic treebank based on HPSG (Ghay-
oomi, 2012) and Uppsala dependency treebank (Ser-
aji et al., 2012) are the efforts to satisfy the need for
</bodyText>
<figure confidence="0.99856325">
AJPP
root
SBJ
POSDEP
MOS
~
Dependency
Parsing
Manual Error
Correction
(Treebank
Annotation)
Parsing Model
Update Model
Retrain the
Parser
Yes
Add to the Treebank
Dependency
Treebank
Need to
Update the
Parsing
Model?
</figure>
<page confidence="0.984556">
307
</page>
<equation confidence="0.898263">
syntactic processing in the Persian language.
root
ÐXQ» ñ; AK. øXAK..P� øAë �IJ.m�• root
kærdæm to bA zijAdi sohbæthAje
did (1st, sing) you with a lot speaking(s)
V PR PP ADJ N
</equation>
<bodyText confidence="0.952001166666667">
(a) A simple dependency tree with compound verb
for a Persian sentence: “I spoke with you a lot”.
The NVE is a relation between a light verb and its
nonverbal element. As shown in the tree, not only
the nonverbal element is not near the light verb, but
also it is inflected for plurality (i.e. speakings).
</bodyText>
<equation confidence="0.9127522">
root
ÐðPú× é;Ag &amp;K�@ j@ ÐP@X root
mirævæm xAne ?in ?æz dAræm
go (pres.cont., 1st sing.) house this from have (pres., 1st sing.)
V N PREM PP V
</equation>
<bodyText confidence="0.907727583333333">
(b) A simple dependency tree for a Persian sentence with a pro-
gressive auxiliary: “I am going from this house”. The PROG is a
relation between a verb and its progressive auxiliary.
root
(c) A simple dependency tree for a Persian sen-
tence with a an inflected form of a prefixed verb
“I will not return to this house.”. The word QK. is
the prefix, the word Ñë@ñ m~ is the auxiliary for the
future and the word I�:Ãis the main verb. Notice
that the prefix is attached to the auxiliary without
any space and the remaining part of the verb is sep-
arated by a space.
</bodyText>
<figureCaption confidence="0.975242">
Figure 3: Examples of Persian sentences with the
dependency-based syntactic trees. The format of the rep-
resentation is the same as Figure 1.
</figureCaption>
<sectionHeader confidence="0.868631" genericHeader="method">
3 Persian Dependency Treebank
</sectionHeader>
<subsectionHeader confidence="0.998225">
3.1 Motivation
</subsectionHeader>
<bodyText confidence="0.999989266666667">
With the creation of the Virastyar spell checker soft-
ware (Kashefi et al., 2010), many open-source li-
braries were released for Persian word processing
such as POS tagging, encoding refinement, tok-
enization, etc. Regarding the need for syntactic anal-
ysis of Persian texts, we decided to prepare a valu-
able linguistic data infrastructure for Persian syn-
tax. In the first step, there was a need for choosing
from the existing theories of grammar that best suits
Persian. Among grammatical theories, we decided
to choose the dependency grammar. In dependency
grammar, syntactic relations are shown with depen-
dencies between the words. In computational de-
pendency grammar, each word has one head and the
head of the sentence is the dependent of an artificial
root word (K¨ubler et al., 2009). A sample depen-
dency tree is shown in Figure 1(a) for a Persian sen-
tence. Note that Persian sentences are written from
right to left.
There are several reasons for the preference of
dependency grammar to grammars such as phrase-
based structure grammars. Although in both of the
representations, one can show the syntactic analy-
sis of a sentence, dependency representation has the
power to account for the free word order of many
languages such as Turkish (Oflazer et al., 2003) and
Czech (Hajic, 1998) and also Persian. As an exam-
ple, a sample non-projective dependency tree for the
Persian language is shown in Figure 1(b). The re-
cent advances in very fast dependency parsing mod-
els (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)),
has made the syntactic processing task very popular
in the recent decade.
In the Persian language, in addition to the abun-
dance of crossings of the arcs, another problem oc-
curs with compound verbs and verbs in the progres-
sive aspect: compound and progressive verbs are
multi-word expressions that may be separated de-
pending on the context. Persian compound verbs
consist of a light verb and a non-verbal element and
the non-verbal element can be a noun, an adjective
(in rare cases) or a sequence of a preposition and
a noun (Dabir-Moghaddam, 1997). In addition, the
nonverbal elements can also be inflected. The dis-
tance between the nonverbal element and the light
</bodyText>
<figure confidence="0.90578275">
NVE
NPP
NPOSTMOD
POSDEP
PROG
VPP
POSDEP
NPREMOD
VPP
POSDEP
NPREMOD
I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K
@ éK. root
barnæxAhæm gæft xAne ?in be
return (future, neg., 1st sing.) house this to
V N PREM PP
</figure>
<page confidence="0.989931">
308
</page>
<bodyText confidence="0.99998952631579">
verb on the one hand and the possibility of the non-
verbal element being inflected on the other hand
have made the task of compound verb identification
very difficult. For example, in Bijankhan (Peykare)
corpus (Bijankhan et al., 2011), approximately 9%
of nonverbal elements of compound verbs are placed
away from the light verb for the compound verbs
with the light verb OXQ» /kærdæn/ (to do) (Rasooli
et al., 2011a). A group of Persian progressive verbs
are composed of two words, the first being the sim-
ple past or the simple present form derived from
the infinitive �IUƒ@X /daStæn/ (to have) and the sec-
ond being the past continuous or the present contin-
uous form of the main verb. The first verb (an auxil-
iary) agrees with the second in number and person.
The problem is that the progressive auxiliary can be
away from the main verb. The sample trees with
compound verbs and progressive auxiliary verbs are
shown in Figures 3(a) and 3(b) respectively.
</bodyText>
<subsectionHeader confidence="0.996744">
3.2 Representation and Dependency Relation
</subsectionHeader>
<bodyText confidence="0.97812912">
In this treebank, we followed the format of the
CoNLL tab-separated format for dependency pars-
ing (Buchholz and Marsi, 2006). In addition to
the lemma, we annotated part of speech tags (both
coarse and fine grained) and person, number and
tense-mood-aspect (only for verbs) of words in sen-
tences. The details of the part of speech tags and
other morphosyntactic features and dependency re-
lations are shown in Tables 1 and 2, respectively.
The part of speech tag set in this treebank is not
the same as that of Bijankhan (Peykare) corpus (Bi-
jankhan et al., 2011) and it is essential to convert the
tagset in Peykare corpus to the tagset in this tree-
bank, in order to use both datasets2. We also tried
to use the writing standard of the Academy of Per-
sian Language and Literature except for the cases
where for a word there were several standards all of
�
which were used in Persian written texts (e.g. ém��� @
and ék4 ~
à @ /PantSe/ (whatever)).
We also prepared two representations for objects
accompanied by the accusative case marker. In the
first representation (done manually), we assume the
accusative case marker @P /ra/ as the head of the two-
</bodyText>
<footnote confidence="0.952798333333333">
2It is important to note that the conversion between the
coarse-grained POS tags is straightforward and does not need
any special effort.
</footnote>
<figure confidence="0.953583357142857">
root
OBJ
NCL
POSDEP
ÐY;@ñk úæ~®Ã é» @P
�úGA�J» root
.
xandæm gofti
(a) “I read the book that you mentioned.”.
root
xandæm gofti ke ra ketabi
read (past, 1st, sing.) said (2nd, sing.) that acc. the book
V V SUBR POSTP N
(b) “I read the book that you mentioned.”
</figure>
<figureCaption confidence="0.98946375">
Figure 4: A sample sentence with two kinds of repre-
sentations of object-verb relation. The first one is done
manually and the second automatically by converting the
dependencies in the first representation.
</figureCaption>
<bodyText confidence="0.999263904761905">
word sequence object plus ra. The second represen-
tation, that is the automatic conversion of the first,
is the reverse order of the first one in which the ac-
cusative case marker is the dependent of the direct
object and the direct object is considered as the head
of the aforementioned sequence. In the first rep-
resentation, objects are much easier to find by the
parser (because of the uniqueness of the accusative
case marker in Persian and less distance of it from
the verb as its head) but it may increase the num-
ber of non-projective arcs to the syntactic tree. We
prepared both of the representations in two separate
data packs. A sample comparison between the two
structures is shown in Figure 4.
In the treebank, all words are single word forms
(without spaces). There is only one exception for
simple verb inflections where even multi-word to-
kens of simple verbs are shown as only one unit. The
reason is that for many cases such as the case of in-
flections for prefixed verbs it is more straightforward
to analyze the whole part instead of analyzing each
</bodyText>
<figure confidence="0.902131272727273">
OBJ
NCL
POSDEP
ACC-CASE
ÐY;@ñk úæ~®Ã é» @P
�úGA�J» root
.
PREDEP
ke ra ketabi
read (past, 1st, sing.) said (2nd, sing.) that acc. the book
V V SUBR POSTP N
</figure>
<page confidence="0.901896">
309
</page>
<table confidence="0.997566705882353">
Morphosyntactic features in the Persian dependency treebank
CPOS FPOS Person Number TMA
ADJ (adjective) AJP (positive)
AJCM (comparitive)
AJSUP (superlative)
ADR (address term) PRADR (pre-noun)
POSADR (post-noun)
ADV (adverb) SADV (genuine)
CONJ (coordinating conjunction) CONJ (conjunction)
IDEN (title) IDEN (title)
N (noun) ANM (animate) SING (singular)
IANM (inanimate) PLUR (plural)
PART (particle) PART (particle)
POSNUM (post-noun modifier) POSNUM (post-noun modifier)
POSTP (postposition) POSTP (postposition)
PR (pronoun) SEPER (separate personal) 1 SING (singular)
JOPER (enclitic personal) 2 PLUR (plural)
DEMON (demonstrative) 3
INTG (interogative)
CREFX (common reflexive)
UCREFX (noncommon reflexive)
RECPR (reciprocal)
PREM (pre-modifier) EXAJ (exclamatory)
QUAJ (interrogative)
DEMAJ (demonstrative)
AMBAJ (ambiguous)
PRENUM (pre-noun numeral) PRENUM (pre-noun numeral)
PREP (preposition) PREP (preposition)
PSUS (pseudo-sentence) PSUS (pseudo-sentence)
PUNC (punctuation) PUNC (punctuation)
V (verb) ACT (active) 1 SING (singular) See Table 3
PAS (passive) 2 PLUR (plural)
MOD (modal) 3
SUBR (subordinating clause) SUBR (subordinating clause)
</table>
<tableCaption confidence="0.996233">
Table 1: Morphosyntactic features in the Persian dependency treebank. Empty cells indicate that the mentioned
</tableCaption>
<bodyText confidence="0.853395916666667">
feature is not present for the POS. TMA stands for Tense/Mood/Aspect, CPOS for Coarse grained POS and FPOS for
Fine grained POS. There is also another feature for representing the typographical connectedness of words that are
separated into two or more tokens with the values ISO (isolated word), NXT (attached to the next token) and PRV
(attached to the previous token).
part separately3. In Table 3, possible types of the
Persian verb inflections are shown. As seen in Table
3, 6 forms of 14 inflection types of Persian verbs are
multi-word tokens and for passive verbs they may
be composed of more words than their active coun-
terparts (since for passive verbs an auxiliary form
derived from the infinitive v)_U. /Sodæn/ is used). In
Figure 3(c), a sample tree with a multi-token pre-
</bodyText>
<footnote confidence="0.918467">
3In (Seraji et al., 2012), multi-token verbs are considered as
separate words.
</footnote>
<bodyText confidence="0.8212352">
fixed verb is shown. As shown in the case of col-
ored tokens, it seems more beneficial to put all mor-
phemes of the word together before parsing. Fur-
thermore, with the available Persian verb analyzer it
is very easy to first preprocess the verbs4.
</bodyText>
<footnote confidence="0.625702666666667">
4If it is needed to respect the exact format of CoNLL, spaces
between the verb tokes should be replaced by a character such as
underscore. Regarding the special fine-grained morphological
tags for the verb such as tense-mood-aspect, it is also straight-
forward to separate all of the multi-word verbs and add new
dependency relations between their words.
</footnote>
<page confidence="0.992938">
310
</page>
<table confidence="0.999931">
Abbreviation Description Abbreviation Description
ACL Complement Clause of Adjective ADV Adverb
ADVC Adverbial Complement of Verb AJCONJ Conjunction of Adjective
AJPP Prepositional Complement of Adjective AJUCL Adjunct Clause
APOSTMOD Adjective Post-Modifer APP Apposition
APREMOD Adjective Pre-Modifier AVCONJ Conjunction of Adverb
COMPPP Comparative Preposition ENC Enclitic Non-Verbal Element
LVP Light Verb Particle MESU Measure
MOS Mosnad MOZ Ezafe Dependent
NADV Adverb of Noun NCL Clause of Noun
NCONJ Conjunction of Noun NE Non-Verbal Element of Infinitive
NEZ Ezafe Complement of Adjective NPOSTMOD Post-Modifer of Noun
NPP Preposition of Noun NPREMOD Pre-Modifier of Noun
NPRT Particle of Infinitive NVE Non-Verbal Element
OBJ Object OBJ2 Second Object
PARCL Participle Clause PART Interrogative Particle
PCONJ Conjunction of Preposition POSDEP Post-Dependent
PRD Predicate PREDEP Pre-Dependent
PROG Progressive Auxiliary PUNC Punctuation Mark
ROOT Sentence Root SBJ Subject
TAM Tamiz VCL Complement Clause of Verb
VCONJ Conjunction of Verb VPP Prepositional Complement of Verb
VPRT Verb Particle ACC-CASE Accusative Case Marker (2nd. Rep.)
</table>
<tableCaption confidence="0.847029">
Table 2: Dependency relations in the Persian dependency treebank
</tableCaption>
<table confidence="0.999789263157895">
Tense/Aspect/Mood Abbreviation Examples �XPñk� xordæn: to eat, 1st, sing.
Imperative HA Pñm� �. /boxor/
Indicative Future AY �
XPñ kÑë@ñk� /xAhæm xord/
Indicative Imperfective Perfect GNES Ð@èXPñ �kú× /mixordePæm/
Indicative Imperfective Pluperfect GBES ÐXñK. èXPñ kú× /mixorde budæm/
Indicative Imperfective Preterite GES ÐXPñ kú× /mixordæm/
Indicative Perfect GN Ð@èXPñk� /xordePæm/
Indicative Pluperfect GB ÐXñK. èXPñk� /xorde budæm/
Indicative Present H ÐPñ kú× /mixoræm /
Indicative Preterite GS ÐXPñk� /xordæm/
Subjunctive Imperfective Pluperfect GBESE Õæ;AK. èXñK. èXPñ �kú× /mixorde bude bASæm/
Subjunctive Imperfective Preterite GESEL �
Õæ...AK. èXPñ �kú× /mixorde bASæm/
Subjunctive Pluperfect GBEL �
Õæ...AK. èXñK. èXPñk� /xorde bude bASæm/
Subjunctive Present HEL ÐPñm� �. /boxoræm/
Subjunctive Preterite GEL �
Õæ...AK. èXPñk� /xorde bASæm/
</table>
<tableCaption confidence="0.999628">
Table 3: Tense/Mood/Aspect Types in Persian verbs
</tableCaption>
<subsectionHeader confidence="0.99243">
3.3 Annotation Process
</subsectionHeader>
<bodyText confidence="0.99999">
The annotation process consists of several consecu-
tive steps. In Figure 2, a summary of the bootstrap-
ping approach in the annotation process is shown.
At first, a collection of independent sentences have
been collected randomly from the web. For the first
5000 sentences, we crawled Persian news texts and
randomly sampled the sentences. For the remain-
ing sentences, we first listed the absent verb lem-
mas in the 5000 sentences based on the verb list ex-
</bodyText>
<page confidence="0.997477">
311
</page>
<bodyText confidence="0.99993767948718">
tracted from the valency lexicon of Persian verbs
(Rasooli et al., 2011c) and collected random sen-
tences that included the absent verb lemmas in their
words. We listed all possible inflections and per each
verb lemma, sampled at most 8 sentences from the
web. These sentences had to contain at least one
present tense, one past tense, one passive voice and
one future tense inflection unless we could not find
them and were obliged to reduce the number. The
sentences were not shortened and were kept with
their original length and words. Finally, we manu-
ally removed sentences containing colloquial words.
However, we did not remove loan words or cases of
code-switching between latin-script words and Per-
sian words in the sentences. The raw sentences were
fed to the encoding and spell checking module. Af-
ter spell correction, all sentences were tokenized and
tagged with part of speech tags. All of the word
processing steps were done using Virastyar library
(Kashefi et al., 2010). After tokenization and POS
tagging, the tokenized sentences were fed to the Per-
sian verb analyzing tool (Rasooli et al., 2011a). In
the next step, the preprocessed sentences were given
to the dependency parser. We used MST parser (Mc-
Donald et al., 2005) for parsing the sentences.
In the final step, annotators corrected the errors
of tokenization, POS tagging and parsing. In about
every one to two weeks, the parser model was up-
dated by training on the new version of the treebank.
This process lasted 9 months and the number of an-
notators increased by time to speed up the process.
In the first 6 months, we used 8 annotators and for
the next 5 months, we hired 6 more annotators to
speed up the process. The annotators and linguistic
experts consisted of 1 PhD graduate (linguistics), 4
PhD candidates (linguistics), and 9 MA graduates or
graduate students (7 linguistics, 1 Persian language
and literature and 1 computational linguistics). All
of the annotators were native Persian speakers.
After finalizing the annotation of all raw sen-
tences, we applied a rule-based potential error finder
to find the potentially erroneous sentences. The rules
were gradually collected in the process of the an-
notation by the annotators. All the potentially er-
roneous sentences were given to the annotators to
be checked for potential errors. In Section 4.1, the
statistics about the changes after the correction is
reported. One of the main reasons for the double
checking phase in the process is that based on our
manual investigations of the annotations, we found
some inevitable mistakes by annotators that could be
solved by manual rules. Mistakes such as scrolling
the drop-down list unintentionally and changing the
part of speech tag or dependency relation and mis-
takes caused by tiredness and lack of concentration
in addition to some of the changes of the linguistic
conventions in the annotation. Since all cases of de-
pendency relations in this treebank may be usually
either a left-branching relation or a right-branching
one and most of the relations are restricted to cer-
tain types of parts of speech, it is easy to capture
the potential errors in the annotations based on the
rules mentioned and to keep track of the changes
in the linguistic conventions by searching the cues
for those conventions (most of the changed conven-
tions were made to very rare relations in the syntac-
tic structure).
In (Dligach and Palmer, 2011), it is concluded
that although doubly annotated corpora are more re-
liable, annotating more sentences only once is more
beneficial; i.e. annotating each sentence only once
is less time-consuming and more cost-effective. We
annotated all the sentences only once (with an ad-
ditional checking phase) except for the 5% of the
sentences in order to estimate the quality of our lin-
guistic conventions and agreement among the anno-
tators. The statistics about the annotators agreement
is reported in Section 4.1.
</bodyText>
<sectionHeader confidence="0.671843" genericHeader="method">
4 Statistics of the TYeebank
</sectionHeader>
<bodyText confidence="0.997021733333333">
Finally, 29,982 sentences were manually annotated.
The details about the statistics is shown in Ta-
ble 4. It is worth mentioning that 39.24% of the
words in the treebank are tagged as noun, 12.62%
as verb, 11.64% as preposition and 7.39% as adjec-
tive. The most frequent dependency relations are
post-dependent (15.08%) and Ezafeh construction
(10.17%). As shown in Table 5, the number of non-
projective arcs in the second representation is a little
bit less than the first. As mentioned earlier, the main
reason is the dependencies between the direct object
and words after the accusative case marker such as
the example in Figure 4. The change percentage af-
ter the correction of the potential errors is shown in
Table 6. It seems that the rules for finding the poten-
</bodyText>
<page confidence="0.993316">
312
</page>
<table confidence="0.9992395">
Number of Sentences 29,982
Number of Words 498,081
Average Sentence Length 16.61
Number of Distinct Words 37,618
Number of Distinct Lemmas 22,064
Number of Verbs 60,579
Number of Verb Lemmas 4,782
Average Frequency of Verb Lemmas 12.67
</table>
<tableCaption confidence="0.9500375">
Table 4: Statistics about the frequency of words in the
Persian dependency treebank.
</tableCaption>
<table confidence="0.9998908">
# Non-Projective 1st Rep. 2nd Rep.
Number of Arcs 9639 9091
Percent of Arcs 0.019 0.018
Number of Sentences 5540 5095
Percent of Sentences 1.85 1.70
</table>
<tableCaption confidence="0.919462666666667">
Table 5: Statistics about non-projective relations in the
Persian dependency treebank for both of the representa-
tions.
</tableCaption>
<bodyText confidence="0.872124">
tial errors were useful for correcting the errors.
</bodyText>
<subsectionHeader confidence="0.984653">
4.1 Annotators Agreement
</subsectionHeader>
<bodyText confidence="0.999982133333333">
The statistics about the agreement among the an-
notators is shown in Table 7. We can also use the
Kappa (Cohen, 1960) to measure the quality of the
annotation based on the agreement among the anno-
tators (pr(a) in Eq. 1) and the expected agreement or
probability of chance (pr(e) in Eq. 1). If we consider
the accuracy of the parser on the raw text without
gold POS tags (approximately 75% labeled and 80%
unlabeled accuracy based on our experience during
the bootstrapping) and the POS tagger that we used
during the annotation process (approximately 94%)
as the probability of chance, we see that for all of
the tasks in Table 7, the quality of the annotaion is
more than 0.81 and is considered as almost perfect
according to (Landis and Koch, 1977).
</bodyText>
<equation confidence="0.99660225">
k = pr (a)
− pr (e)
(1)
1 − pr(e)
</equation>
<sectionHeader confidence="0.999036" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999901666666667">
As mentioned earlier, Persian is a language with
its own challenges. We tried to overcome some
of those challenges by preparing valuable linguistic
</bodyText>
<note confidence="0.877213">
Changes to Unlabeled Relations 4.91%
Changes to Labeled Relations 6.29%
Changes to POS Tags 4.23%
</note>
<tableCaption confidence="0.9977895">
Table 6: Statistics about changes in the treebank after the
manual correction of the potential errors.
</tableCaption>
<table confidence="0.999731333333333">
Unlabeled Relations 97.06%
Labeled Relations 95.32%
POS Tags 98.93%
</table>
<tableCaption confidence="0.99144">
Table 7: Statistics about agreements among the annota-
tors.
</tableCaption>
<bodyText confidence="0.999628636363636">
datasets5. In addition to the preparation of the tree-
bank, we prepared some useful desktop and web-
based tools for searching in the dataset, obtaining
statistics and viewing syntactic structures graphi-
cally. We hope to report more details about the lin-
guistic aspects and the findings of the project in ad-
dition to our detailed experiments on the parsing task
in future publications. We believe that this treebank
is just the very first step to satisfy the need for Per-
sian language processing. Our future aim is to add a
semantic level to the annotation.
</bodyText>
<sectionHeader confidence="0.997475" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.9998317">
The project is funded by Iran Supreme Coun-
cil of Information and Communication Technology
(SCICT). We really appreciate the linguists who
helped us in annotating: Farzaneh Bakhtiary, Pari-
naz Dadras, Maryam Faal-Hamedanchi, Saeedeh
Ghadrdoost-Nakhchi, Mostafa Mahdavi, Azadeh
Mirzaei, Sahar Oulapoor, Neda Poormorteza-
Khameneh, Morteza Rezaei-Sharifabadi, Sude Re-
salatpoo, Akram Shafie, and Salimeh Zamani;
and the programmers who helped us in the pro-
cess of the development of the treebank: Seyed
Mahdi Hoseini, Alireza Noorian, Yasser Souri, and
Mohsen Hossein-Alizadeh; and also our colleagues
who helped us find linguistic sources from the
web: Azadeh Abbasi Abyaneh, Shima Zamanpoor,
Narmin Ghaderi, Houra Nouri and Seyedeh Maneli
Hashemian; and other colleagues especially Mahdi
Behniafar. We thank Nizar Habash for his support
of this paper and Weiwei Guo and three anonymous
reviewers for their useful comments on the paper.
</bodyText>
<footnote confidence="0.9936895">
5A comprehensive description of the syntactic relations and
morphosyntactic features is reported in the treebank official re-
port (Dadegan Research Group, 2012) in the treebank package
both in Persian and English.
</footnote>
<page confidence="0.998832">
313
</page>
<sectionHeader confidence="0.990001" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999885855769231">
Mohammad Bahrani, Hossein Sameti, and Mehdi Hafezi
Manshadi. 2011. A computational grammar for Per-
sian based on GPSG. Language Resources and Eval-
uation, 45(4):387–408.
Mahmood Bijankhan, Javad Sheykhzadegan, Moham-
mad Bahrani, and Masood Ghayoomi. 2011. Lessons
from building a persian written corpus: Peykare. Lan-
guage resources and evaluation, 45(2):143–164.
Mahmood Bijankhan. 2004. The role of the corpus in
writing a grammar: An introduction to a software. Ira-
nian Journal of Linguistics, 19(2).
Bernd Bohnet and Joakim Nivre. 2012. A transition-
based system for joint part-of-speech tagging and la-
beled non-projective dependency parsing. In EMNLP-
CoNLL, pages 1455–1465.
Sabine Buchholz and Erwin Marsi. 2006. CoNLL-X
shared task on multilingual dependency parsing. In
Proceeding of the Tenth Conforence on Computational
Natural Language Learning (CoNLL).
Jacob Cohen. 1960. A coefficient of agreement for nom-
inal scales. Educational and psychological measure-
ment, 20(1):37–46.
Mohammad Dabir-Moghaddam. 1997. Compound
verbs in Persian. Studies in the Linguistic Sciences,
27(2):25–59.
Dadegan Research Group. 2012. Persian Depen-
dency Treebank, Annotation manual and user guide.
Supreme Council of Information and Communication
Technology (SCICT), Tehran, Iran.
Jon Dehdari and Deryle Lonsdale. 2008. A link grammar
parser for Persian. Aspects of Iranian Linguistics, 1.
Dmitriy Dligach and Martha Palmer. 2011. Reducing the
need for double annotation. In Proceedings of the 5th
Linguistic Annotation Workshop, pages 65–69.
Masood Ghayoomi. 2012. Bootstrapping the develop-
ment of an HPSG-based treebank for Persian. Lin-
guistic Issues in Language Technology, 7(1).
Jan Hajic. 1998. Building a syntactically annotated cor-
pus: The Prague dependency treebank. Issues of va-
lency and meaning, pages 106–132.
Gholamhossein Karimi-Doostan. 2011a. Lexical cate-
gories in Persian. Lingua, 121(2):207–220.
Gholamhossein Karimi-Doostan. 2011b. Separability of
light verb constructions in Persian. Studia Linguistica,
65(1):70–95.
Omid Kashefi, Mitra Nasri, and Kamyar Kanani.
2010. Automatic Spell Checking in Persian Language.
Supreme Council of Information and Communication
Technology (SCICT), Tehran, Iran.
Sandra K¨ubler, Ryan McDonald, and Joakim Nivre.
2009. Dependency Parsing. Synthesis Lectures on
Human Language Technologies. Morgan &amp; Claypool
Publishers.
J. Richard Landis and Gary G. Koch. 1977. The mea-
surement of observer agreement for categorical data.
Biometrics, pages 159–174.
Ryan McDonald, Koby Crammer, and Fernando Pereira.
2005. Online large-margin training of dependency
parsers. In Proceedings of the 43rd Annual Meeting
on Association for Computational Linguistics (ACL),
pages 91–98, Sydney, Australia.
Joakim Nivre. 2009. Non-projective dependency parsing
in expected linear time. In Proceedings of the Joint
Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Natural
Language Processing, pages 351–359.
Kemal Oflazer, Bilge Say, Dilek Zeynep Hakkani-T¨ur,
and G¨okhan T¨ur. 2003. Building a Turkish treebank.
Treebanks, pages 261–277.
Mohammad Sadegh Rasooli, Heshaam Faili, and
Behrouz Minaei-Bidgoli. 2011a. Unsupervised iden-
tification of Persian compound verbs. In Proceedings
of the Mexican international conference on artificial
intelligence (MICAI), pages 394–406, Puebla, Mexico.
Mohammad Sadegh Rasooli, Omid Kashefi, and Behrouz
Minaei-Bidgoli. 2011b. Effect of adaptive spell
checking in Persian. In 7th International Confer-
ence on Natural Language Processing and Knowledge
Engineering (NLP-KE), pages 161–164, Tokushima,
Japan.
Mohammad Sadegh Rasooli, Amirsaeid Moloodi,
Manouchehr Kouhestani, and Behrouz Minaei-
Bidgoli. 2011c. A syntactic valency lexicon for
Persian verbs: The first steps towards Persian de-
pendency treebank. In 5th Language &amp; Technology
Conference (LTC): Human Language Technologies as
a Challenge for Computer Science and Linguistics,
pages 227–231, Pozna´n, Poland.
Mojgan Seraji, Be´ata Magyesi, and Joakim Nivre. 2012.
Bootstrapping a Persian dependency treebank. Lin-
guistic Issues in Language Technology, 7(1).
Mehrnoosh Shamsfard. 2011. Challenges and open
problems in Persian text processing. In 5th Language
&amp; Technology Conference (LTC): Human Language
Technologies as a Challenge for Computer Science
and Linguistics, pages 65–69, Pozna´n, Poland.
Gernot Windfuhr. 2009. The Iranian Languages. Rout-
ledge.
Daniel Zeman, David Mareˇcek, Martin Popel, Lo-
ganathan Ramasamy, Jan ˇStˇep´anek, Zedn´eck
ˇZabokrtsk`y, and Jan Hajiˇc. 2012. Hamledt: To
parse or not to parse. In Proceedings of the Eighth
Conference on International Language Resources and
Evaluation (LREC’12), Istanbul, Turkey.
</reference>
<page confidence="0.999133">
314
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.997626">Development of a Persian Syntactic Dependency Treebank</title>
<author confidence="0.997623">Mohammad Sadegh Rasooli Manouchehr Kouhestani Amirsaeid Moloodi</author>
<affiliation confidence="0.9991075">Department of Computer Science Department of Linguistics Department of Linguistics Columbia University Tarbiat Modares University University of Tehran</affiliation>
<address confidence="0.936588">New York, NY Tehran, Iran Tehran, Iran</address>
<email confidence="0.960536">rasooli@cs.columbia.edum.kouhestani@modares.ac.ira.moloodi@ut.ac.ir</email>
<abstract confidence="0.966701859154929">This paper describes the annotation process and linguistic properties of the Persian syntactic dependency treebank. The treebank consists of approximately 30,000 sentences annotated with syntactic roles in addition to morpho-syntactic features. One of the unique features of this treebank is that there are almost 4800 distinct verb lemmas in its sentences making it a valuable resource for educational goals. The treebank is constructed with a bootstrapping approach by means of available tagging and parsing tools and manually correcting the annotations. The data is splitted into standard train, development and test set in the CoNLL dependency format and is freely available to researchers. The process of manually annotating linguistic data from a huge amount of naturally occuring texts is a very expensive and time consuming task. Due to the recent success of machine learning methods and the rapid growth of available electronic texts, language processing tasks have been facilitated greatly. Considering the value of annotated data, a great deal of budget has been allotted to creating such data. Among all linguistic datasets, treebanks play an important role in the natural language processing especially in parsing because of its applicaresearch is done while working in Dadegan Research Group, Supreme Council of Information and Communications Technology (SCICT), Tehran, Iran. The project is fully funded by SCICT. 306 tions in tasks such as machine translation. Dependency treebanks are collections of sentences with their corresponding dependency trees. In the last decade, many dependency treebanks have been developed for a large number of languages. There are at least 29 languages for which at least one dependency treebank is available (Zeman et al., 2012). Dependency trees are much more similar to the human understanding of language and can easily represent the free word-order nature of syntactic roles in sentences (K¨ubler et al., 2009). Persian is a language with about 110 million speakers all over the world (Windfuhr, 2009), yet in terms of the availability of teaching materials and annotated data for text processing, it is undoubtedly a low-resourced language. The need for more language teaching materials together with an everincreasing need for Persian-language data processing has been the incentive for the inception of our project which has defined the development of the syntactic treebank of Persian as its ultimate aim. In this paper, we review the process of creating the Persian syntactic treebank based on dependency grammar. In this treebank, approximately 30,000 sentences from contemporary Persian-language texts are manually tokenized and annotated at morphological and syntactic levels. One valuable aspect of the treebank is its containment of near 5000 distinct verb lemmas in its sentences making it a good resource for educational goals. The dataset is developed after the creation of the syntactic valency lexicon of Persian verbs (Rasooli et al., 2011c). This treebank is developed with a bootstrapping approach by automatically building dependency trees based on the of NAACL-HLT pages 306–314, Georgia, 9–14 June 2013. Association for Computational Linguistics � @ú</abstract>
<title confidence="0.7317058">Raw Sentence Insert Encoding Spell Correction POSDEP</title>
<abstract confidence="0.9846735">MOS root SBJ AJPP ?æst ?an bær mobtæni ?in is that on based it V PR PP ADJ PR Tokenization and POS Tagging (a) A simple projective dependency tree for a Persian sentence: “It is based on that”’. Verb Analysis �@ú ?an bær ?æst mobtæni ?in that on is based PR PP V ADJ PR (b) A simple non-projective dependency tree for a Persian sentence: “It is based on that”. Figure 1: Examples of Persian sentences with the dependency-based syntactic trees. 1(a) and 1(b) are examples of a projective and a non-projective dependency tree, respectively. The first lines show the original words in Persian. The pronunciation and their meanings are shown in the second line and the third line respectively. In the fourth line, the part of speech (POS) tags of the words are presented. Note that the words are written from right to left (the direction of Perso-Arabic script). The dependency relations are described in Table 2. The relation is shown with an arc pointing from the head to the dependent. previous annotated trees. In the next step, automatic annotation is corrected manually. The remainder of this paper is as follows. In Section 2, we briefly review the challenges in Persian language processing. In Sections 3 and 4, the details about the annotation process, linguistic and statistical information about the data and the annotator agreement are reported. In Section 5, the conclusion and suggestions for future research are presented. 2 Persian Language Processing Challenges Persian is an Indo-European language that is written in Arabic script. There are lots of problems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., A number of challenges such as the free or- Figure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ</abstract>
<title confidence="0.74428052631579">POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain Parser Yes Add to the Treebank Dependency Treebank Need Update</title>
<abstract confidence="0.98777081707317">Model? 307 syntactic processing in the Persian language. root ÐXQ»øAë root kærdæm to bA zijAdi sohbæthAje sing) with a lot speaking(s) V PR PP ADJ N (a) A simple dependency tree with compound verb for a Persian sentence: “I spoke with you a lot”. a relation between a light verb and its nonverbal element. As shown in the tree, not only the nonverbal element is not near the light verb, but also it is inflected for plurality (i.e. speakings). root é;Ag &amp;K�@ j@root mirævæm xAne ?in ?æz 1st sing.) this from have 1st sing.) V N PREM PP V (b) A simple dependency tree for a Persian sentence with a proauxiliary: “I am going from this house”. The a relation between a verb and its progressive auxiliary. root (c) A simple dependency tree for a Persian sentence with a an inflected form of a prefixed verb will not return to this house.”. The word is prefix, the word m~ the auxiliary for the and the word the main verb. Notice that the prefix is attached to the auxiliary without any space and the remaining part of the verb is separated by a space. Figure 3: Examples of Persian sentences with the dependency-based syntactic trees. The format of the representation is the same as Figure 1. 3 Persian Dependency Treebank 3.1 Motivation With the creation of the Virastyar spell checker software (Kashefi et al., 2010), many open-source libraries were released for Persian word processing such as POS tagging, encoding refinement, tokenization, etc. Regarding the need for syntactic analysis of Persian texts, we decided to prepare a valuable linguistic data infrastructure for Persian syntax. In the first step, there was a need for choosing from the existing theories of grammar that best suits Persian. Among grammatical theories, we decided to choose the dependency grammar. In dependency grammar, syntactic relations are shown with dependencies between the words. In computational dependency grammar, each word has one head and the head of the sentence is the dependent of an artificial root word (K¨ubler et al., 2009). A sample dependency tree is shown in Figure 1(a) for a Persian sentence. Note that Persian sentences are written from right to left. There are several reasons for the preference of dependency grammar to grammars such as phrasebased structure grammars. Although in both of the representations, one can show the syntactic analysis of a sentence, dependency representation has the power to account for the free word order of many languages such as Turkish (Oflazer et al., 2003) and Czech (Hajic, 1998) and also Persian. As an example, a sample non-projective dependency tree for the Persian language is shown in Figure 1(b). The recent advances in very fast dependency parsing models (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)), has made the syntactic processing task very popular in the recent decade. In the Persian language, in addition to the abundance of crossings of the arcs, another problem occurs with compound verbs and verbs in the progressive aspect: compound and progressive verbs are multi-word expressions that may be separated depending on the context. Persian compound verbs consist of a light verb and a non-verbal element and the non-verbal element can be a noun, an adjective (in rare cases) or a sequence of a preposition and a noun (Dabir-Moghaddam, 1997). In addition, the nonverbal elements can also be inflected. The distance between the nonverbal element and the light NVE</abstract>
<title confidence="0.8548709">NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD</title>
<abstract confidence="0.974814219512195">root barnæxAhæmgæftxAne ?in be neg., 1st sing.) this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound verbs are placed away from the light verb for the compound verbs the light verb (to do) (Rasooli et al., 2011a). A group of Persian progressive verbs are composed of two words, the first being the simple past or the simple present form derived from infinitive (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main verb. The sample trees with compound verbs and progressive auxiliary verbs are shown in Figures 3(a) and 3(b) respectively. 3.2 Representation and Dependency Relation In this treebank, we followed the format of the CoNLL tab-separated format for dependency parsing (Buchholz and Marsi, 2006). In addition to the lemma, we annotated part of speech tags (both coarse and fine grained) and person, number and tense-mood-aspect (only for verbs) of words in sentences. The details of the part of speech tags and other morphosyntactic features and dependency relations are shown in Tables 1 and 2, respectively. The part of speech tag set in this treebank is not the same as that of Bijankhan (Peykare) corpus (Bijankhan et al., 2011) and it is essential to convert the tagset in Peykare corpus to the tagset in this treein order to use both We also tried to use the writing standard of the Academy of Persian Language and Literature except for the cases where for a word there were several standards all of � were used in Persian written texts (e.g. @ ~ à @ (whatever)). We also prepared two representations for objects accompanied by the accusative case marker. In the first representation (done manually), we assume the case marker as the head of the twois important to note that the conversion between the coarse-grained POS tags is straightforward and does not need any special effort. root OBJ NCL POSDEP é» root . xandæm gofti (a) “I read the book that you mentioned.”. root xandæm gofti ke ra ketabi 1st, sing.) sing.) acc. the book V V SUBR POSTP N (b) “I read the book that you mentioned.” Figure 4: A sample sentence with two kinds of representations of object-verb relation. The first one is done manually and the second automatically by converting the dependencies in the first representation. sequence object plus The second representation, that is the automatic conversion of the first, is the reverse order of the first one in which the accusative case marker is the dependent of the direct object and the direct object is considered as the head of the aforementioned sequence. In the first representation, objects are much easier to find by the parser (because of the uniqueness of the accusative case marker in Persian and less distance of it from the verb as its head) but it may increase the number of non-projective arcs to the syntactic tree. We prepared both of the representations in two separate data packs. A sample comparison between the two structures is shown in Figure 4. In the treebank, all words are single word forms (without spaces). There is only one exception for simple verb inflections where even multi-word tokens of simple verbs are shown as only one unit. The reason is that for many cases such as the case of inflections for prefixed verbs it is more straightforward to analyze the whole part instead of analyzing each OBJ NCL POSDEP ACC-CASE é» root . PREDEP ke ra ketabi 1st, sing.) sing.) acc. the book V V SUBR POSTP N 309 Morphosyntactic features in the Persian dependency treebank CPOS FPOS Person Number TMA ADJ (adjective) AJP AJCM AJSUP (superlative) ADR (address term) PRADR POSADR (post-noun) ADV (adverb) SADV (genuine) CONJ (coordinating conjunction) CONJ (conjunction) IDEN (title) IDEN (title) N (noun) ANM SING (singular) PLUR (plural) IANM (inanimate) PART (particle) PART (particle) POSNUM (post-noun modifier) POSNUM (post-noun modifier) POSTP (postposition) POSTP (postposition) PR (pronoun) SEPER (separate 1 SING (singular) PLUR (plural) JOPER (enclitic 2 DEMON 3 INTG CREFX (common UCREFX (noncommon RECPR (reciprocal) PREM (pre-modifier) EXAJ QUAJ DEMAJ AMBAJ (ambiguous) PRENUM (pre-noun numeral) PRENUM (pre-noun numeral) PREP (preposition) PREP (preposition) PSUS (pseudo-sentence) PSUS (pseudo-sentence) PUNC (punctuation) PUNC (punctuation) V (verb) ACT 1 SING (singular) PLUR (plural) See Table 3 PAS 2 MOD (modal) 3 SUBR (subordinating clause) SUBR (subordinating clause) Table 1: Morphosyntactic features in the Persian dependency treebank. Empty cells indicate that the mentioned is not present for the POS. for grained POS grained There is also another feature for representing the typographical connectedness of words that are separated into two or more tokens with the values ISO (isolated word), NXT (attached to the next token) and PRV (attached to the previous token). In Table 3, possible types of the Persian verb inflections are shown. As seen in Table 3, 6 forms of 14 inflection types of Persian verbs are multi-word tokens and for passive verbs they may be composed of more words than their active counterparts (since for passive verbs an auxiliary form from the infinitive is used). In 3(c), a sample tree with a multi-token pre- (Seraji et al., 2012), multi-token verbs are considered as separate words. fixed verb is shown. As shown in the case of colored tokens, it seems more beneficial to put all morphemes of the word together before parsing. Furthermore, with the available Persian verb analyzer it very easy to first preprocess the it is needed to respect the exact format of CoNLL, spaces between the verb tokes should be replaced by a character such as underscore. Regarding the special fine-grained morphological tags for the verb such as tense-mood-aspect, it is also straightforward to separate all of the multi-word verbs and add new dependency relations between their words.</abstract>
<note confidence="0.478614">310</note>
<title confidence="0.884840545454545">Abbreviation Description Abbreviation Description ACL Complement Clause of Adjective ADV Adverb ADVC Adverbial Complement of Verb AJCONJ Conjunction of Adjective AJPP Prepositional Complement of Adjective AJUCL Adjunct Clause APOSTMOD Adjective Post-Modifer APP Apposition APREMOD Adjective Pre-Modifier AVCONJ Conjunction of Adverb COMPPP Comparative Preposition ENC Enclitic Non-Verbal Element LVP Light Verb Particle MESU Measure MOS Mosnad MOZ Ezafe Dependent NADV Adverb of Noun NCL Clause of Noun NCONJ Conjunction of Noun NE Non-Verbal Element of Infinitive NEZ Ezafe Complement of Adjective NPOSTMOD Post-Modifer of Noun NPP Preposition of Noun NPREMOD Pre-Modifier of Noun NPRT Particle of Infinitive NVE Non-Verbal Element OBJ Object OBJ2 Second Object PARCL Participle Clause PART Interrogative Particle PCONJ Conjunction of Preposition POSDEP Post-Dependent PRD Predicate PREDEP Pre-Dependent PROG Progressive Auxiliary PUNC Punctuation Mark ROOT Sentence Root SBJ Subject TAM Tamiz VCL Complement Clause of Verb VCONJ Conjunction of Verb VPP Prepositional Complement of Verb</title>
<note confidence="0.389186666666667">VPRT Verb Particle ACC-CASE Accusative Case Marker (2nd. Rep.) Table 2: Dependency relations in the Persian dependency treebank Tense/Aspect/Mood Abbreviation to eat, 1st, sing.</note>
<title confidence="0.882942272727273">Imperative HA �. Indicative Future AY � Indicative Imperfective Perfect GNES Indicative Imperfective Pluperfect GBES Indicative Imperfective Preterite GES Indicative Perfect GN Indicative Pluperfect GB Indicative Present H ÐPñ Indicative Preterite GS Subjunctive Imperfective Pluperfect GBESE bude Subjunctive Imperfective Preterite GESEL �</title>
<abstract confidence="0.992308454545454">Subjunctive Pluperfect GBEL � bude Subjunctive Present HEL �. Subjunctive Preterite GEL � Table 3: Tense/Mood/Aspect Types in Persian verbs 3.3 Annotation Process The annotation process consists of several consecutive steps. In Figure 2, a summary of the bootstrapping approach in the annotation process is shown. At first, a collection of independent sentences have been collected randomly from the web. For the first 5000 sentences, we crawled Persian news texts and randomly sampled the sentences. For the remaining sentences, we first listed the absent verb lemin the 5000 sentences based on the verb list ex- 311 tracted from the valency lexicon of Persian verbs (Rasooli et al., 2011c) and collected random sentences that included the absent verb lemmas in their words. We listed all possible inflections and per each verb lemma, sampled at most 8 sentences from the web. These sentences had to contain at least one present tense, one past tense, one passive voice and one future tense inflection unless we could not find them and were obliged to reduce the number. The sentences were not shortened and were kept with their original length and words. Finally, we manually removed sentences containing colloquial words. However, we did not remove loan words or cases of code-switching between latin-script words and Persian words in the sentences. The raw sentences were fed to the encoding and spell checking module. After spell correction, all sentences were tokenized and tagged with part of speech tags. All of the word processing steps were done using Virastyar library (Kashefi et al., 2010). After tokenization and POS tagging, the tokenized sentences were fed to the Persian verb analyzing tool (Rasooli et al., 2011a). In the next step, the preprocessed sentences were given to the dependency parser. We used MST parser (Mc- Donald et al., 2005) for parsing the sentences. In the final step, annotators corrected the errors of tokenization, POS tagging and parsing. In about every one to two weeks, the parser model was updated by training on the new version of the treebank. This process lasted 9 months and the number of annotators increased by time to speed up the process. In the first 6 months, we used 8 annotators and for the next 5 months, we hired 6 more annotators to speed up the process. The annotators and linguistic experts consisted of 1 PhD graduate (linguistics), 4 PhD candidates (linguistics), and 9 MA graduates or graduate students (7 linguistics, 1 Persian language and literature and 1 computational linguistics). All of the annotators were native Persian speakers. After finalizing the annotation of all raw sentences, we applied a rule-based potential error finder to find the potentially erroneous sentences. The rules were gradually collected in the process of the annotation by the annotators. All the potentially erroneous sentences were given to the annotators to be checked for potential errors. In Section 4.1, the statistics about the changes after the correction is reported. One of the main reasons for the double checking phase in the process is that based on our manual investigations of the annotations, we found some inevitable mistakes by annotators that could be solved by manual rules. Mistakes such as scrolling the drop-down list unintentionally and changing the part of speech tag or dependency relation and mistakes caused by tiredness and lack of concentration in addition to some of the changes of the linguistic conventions in the annotation. Since all cases of dependency relations in this treebank may be usually either a left-branching relation or a right-branching one and most of the relations are restricted to certain types of parts of speech, it is easy to capture the potential errors in the annotations based on the rules mentioned and to keep track of the changes in the linguistic conventions by searching the cues for those conventions (most of the changed conventions were made to very rare relations in the syntactic structure). In (Dligach and Palmer, 2011), it is concluded that although doubly annotated corpora are more reliable, annotating more sentences only once is more beneficial; i.e. annotating each sentence only once is less time-consuming and more cost-effective. We annotated all the sentences only once (with an additional checking phase) except for the 5% of the sentences in order to estimate the quality of our linguistic conventions and agreement among the annotators. The statistics about the annotators agreement is reported in Section 4.1. 4 Statistics of the TYeebank Finally, 29,982 sentences were manually annotated. The details about the statistics is shown in Table 4. It is worth mentioning that 39.24% of the words in the treebank are tagged as noun, 12.62% as verb, 11.64% as preposition and 7.39% as adjective. The most frequent dependency relations are post-dependent (15.08%) and Ezafeh construction (10.17%). As shown in Table 5, the number of nonprojective arcs in the second representation is a little bit less than the first. As mentioned earlier, the main reason is the dependencies between the direct object and words after the accusative case marker such as the example in Figure 4. The change percentage after the correction of the potential errors is shown in 6. It seems that the rules for finding the poten-</abstract>
<note confidence="0.91779125">312 Number of Sentences 29,982 Number of Words 498,081 Average Sentence Length 16.61 Number of Distinct Words 37,618 Number of Distinct Lemmas 22,064 Number of Verbs 60,579 Number of Verb Lemmas 4,782 Average Frequency of Verb Lemmas 12.67 Table 4: Statistics about the frequency of words in the Persian dependency treebank. Number of Arcs 9639 9091 Percent of Arcs 0.019 0.018 Number of Sentences 5540 5095 Percent of Sentences 1.85 1.70 Table 5: Statistics about non-projective relations in the</note>
<abstract confidence="0.987401958333333">Persian dependency treebank for both of the representations. tial errors were useful for correcting the errors. 4.1 Annotators Agreement The statistics about the agreement among the annotators is shown in Table 7. We can also use the Kappa (Cohen, 1960) to measure the quality of the annotation based on the agreement among the annotators (pr(a) in Eq. 1) and the expected agreement or probability of chance (pr(e) in Eq. 1). If we consider the accuracy of the parser on the raw text without gold POS tags (approximately 75% labeled and 80% unlabeled accuracy based on our experience during the bootstrapping) and the POS tagger that we used during the annotation process (approximately 94%) as the probability of chance, we see that for all of the tasks in Table 7, the quality of the annotaion is more than 0.81 and is considered as almost perfect according to (Landis and Koch, 1977). (1) 5 Conclusion As mentioned earlier, Persian is a language with its own challenges. We tried to overcome some of those challenges by preparing valuable linguistic</abstract>
<note confidence="0.943835666666667">Changes to Unlabeled Relations 4.91% Changes to Labeled Relations 6.29% Changes to POS Tags 4.23% Table 6: Statistics about changes in the treebank after the manual correction of the potential errors. Unlabeled Relations 97.06% Labeled Relations 95.32% POS Tags 98.93% Table 7: Statistics about agreements among the annota-</note>
<abstract confidence="0.912828176470588">tors. In addition to the preparation of the treebank, we prepared some useful desktop and webbased tools for searching in the dataset, obtaining statistics and viewing syntactic structures graphically. We hope to report more details about the linguistic aspects and the findings of the project in addition to our detailed experiments on the parsing task in future publications. We believe that this treebank is just the very first step to satisfy the need for Persian language processing. Our future aim is to add a semantic level to the annotation. Acknowledgments The project is funded by Iran Supreme Council of Information and Communication Technology (SCICT). We really appreciate the linguists who helped us in annotating: Farzaneh Bakhtiary, Pari-</abstract>
<keyword confidence="0.76342675">naz Dadras, Maryam Faal-Hamedanchi, Saeedeh Ghadrdoost-Nakhchi, Mostafa Mahdavi, Azadeh Mirzaei, Sahar Oulapoor, Neda Poormorteza- Khameneh, Morteza Rezaei-Sharifabadi, Sude Re-</keyword>
<abstract confidence="0.9396331875">salatpoo, Akram Shafie, and Salimeh Zamani; and the programmers who helped us in the process of the development of the treebank: Seyed Mahdi Hoseini, Alireza Noorian, Yasser Souri, and Mohsen Hossein-Alizadeh; and also our colleagues who helped us find linguistic sources from the web: Azadeh Abbasi Abyaneh, Shima Zamanpoor, Narmin Ghaderi, Houra Nouri and Seyedeh Maneli Hashemian; and other colleagues especially Mahdi Behniafar. We thank Nizar Habash for his support of this paper and Weiwei Guo and three anonymous reviewers for their useful comments on the paper. comprehensive description of the syntactic relations and morphosyntactic features is reported in the treebank official report (Dadegan Research Group, 2012) in the treebank package both in Persian and English.</abstract>
<pubnum confidence="0.380377">313</pubnum>
<title confidence="0.730084">References</title>
<author confidence="0.685832">Mohammad Bahrani</author>
<author confidence="0.685832">Hossein Sameti</author>
<author confidence="0.685832">Mehdi Hafezi</author>
<abstract confidence="0.529548">Manshadi. 2011. A computational grammar for Perbased on GPSG. Resources and Eval- 45(4):387–408. Mahmood Bijankhan, Javad Sheykhzadegan, Mohammad Bahrani, and Masood Ghayoomi. 2011. Lessons building a persian written corpus: Peykare. Lanresources and 45(2):143–164.</abstract>
<intro confidence="0.890614">Mahmood Bijankhan. 2004. The role of the corpus in</intro>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Mohammad Bahrani</author>
<author>Hossein Sameti</author>
<author>Mehdi Hafezi Manshadi</author>
</authors>
<title>A computational grammar for Persian based on GPSG.</title>
<date>2011</date>
<journal>Language Resources and Evaluation,</journal>
<volume>45</volume>
<issue>4</issue>
<contexts>
<context position="6643" citStr="Bahrani et al., 2011" startWordPosition="1053" endWordPosition="1056">o not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain the Parser Yes Add to the Treebank Dependency Treebank Need to Update the Parsing Model? 307 syntactic processing in the Persian language. root ÐXQ» ñ; AK. øXAK..P� øAë �IJ.m�• root kærdæm to bA zijAdi sohbæthAje did (1st, sing) you with a lot speaking(s) V PR PP ADJ N (a) A simple dependency tree with compound verb for a Per</context>
</contexts>
<marker>Bahrani, Sameti, Manshadi, 2011</marker>
<rawString>Mohammad Bahrani, Hossein Sameti, and Mehdi Hafezi Manshadi. 2011. A computational grammar for Persian based on GPSG. Language Resources and Evaluation, 45(4):387–408.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mahmood Bijankhan</author>
<author>Javad Sheykhzadegan</author>
<author>Mohammad Bahrani</author>
<author>Masood Ghayoomi</author>
</authors>
<title>Lessons from building a persian written corpus: Peykare. Language resources and evaluation,</title>
<date>2011</date>
<pages>45--2</pages>
<contexts>
<context position="10992" citStr="Bijankhan et al., 2011" startWordPosition="1803" endWordPosition="1806">re cases) or a sequence of a preposition and a noun (Dabir-Moghaddam, 1997). In addition, the nonverbal elements can also be inflected. The distance between the nonverbal element and the light NVE NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K @ éK. root barnæxAhæm gæft xAne ?in be return (future, neg., 1st sing.) house this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound verbs are placed away from the light verb for the compound verbs with the light verb OXQ» /kærdæn/ (to do) (Rasooli et al., 2011a). A group of Persian progressive verbs are composed of two words, the first being the simple past or the simple present form derived from the infinitive �IUƒ@X /daStæn/ (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main v</context>
<context position="12319" citStr="Bijankhan et al., 2011" startWordPosition="2030" endWordPosition="2034">3(b) respectively. 3.2 Representation and Dependency Relation In this treebank, we followed the format of the CoNLL tab-separated format for dependency parsing (Buchholz and Marsi, 2006). In addition to the lemma, we annotated part of speech tags (both coarse and fine grained) and person, number and tense-mood-aspect (only for verbs) of words in sentences. The details of the part of speech tags and other morphosyntactic features and dependency relations are shown in Tables 1 and 2, respectively. The part of speech tag set in this treebank is not the same as that of Bijankhan (Peykare) corpus (Bijankhan et al., 2011) and it is essential to convert the tagset in Peykare corpus to the tagset in this treebank, in order to use both datasets2. We also tried to use the writing standard of the Academy of Persian Language and Literature except for the cases where for a word there were several standards all of � which were used in Persian written texts (e.g. ém��� @ and ék4 ~ à @ /PantSe/ (whatever)). We also prepared two representations for objects accompanied by the accusative case marker. In the first representation (done manually), we assume the accusative case marker @P /ra/ as the head of the two2It is impor</context>
</contexts>
<marker>Bijankhan, Sheykhzadegan, Bahrani, Ghayoomi, 2011</marker>
<rawString>Mahmood Bijankhan, Javad Sheykhzadegan, Mohammad Bahrani, and Masood Ghayoomi. 2011. Lessons from building a persian written corpus: Peykare. Language resources and evaluation, 45(2):143–164.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mahmood Bijankhan</author>
</authors>
<title>The role of the corpus in writing a grammar: An introduction to a software.</title>
<date>2004</date>
<journal>Iranian Journal of Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="6366" citStr="Bijankhan, 2004" startWordPosition="1008" endWordPosition="1009"> addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain the Parser Yes Add to the Treebank Dependency Tree</context>
</contexts>
<marker>Bijankhan, 2004</marker>
<rawString>Mahmood Bijankhan. 2004. The role of the corpus in writing a grammar: An introduction to a software. Iranian Journal of Linguistics, 19(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bernd Bohnet</author>
<author>Joakim Nivre</author>
</authors>
<title>A transitionbased system for joint part-of-speech tagging and labeled non-projective dependency parsing. In EMNLPCoNLL,</title>
<date>2012</date>
<pages>1455--1465</pages>
<contexts>
<context position="9893" citStr="Bohnet and Nivre, 2012" startWordPosition="1616" endWordPosition="1619">re written from right to left. There are several reasons for the preference of dependency grammar to grammars such as phrasebased structure grammars. Although in both of the representations, one can show the syntactic analysis of a sentence, dependency representation has the power to account for the free word order of many languages such as Turkish (Oflazer et al., 2003) and Czech (Hajic, 1998) and also Persian. As an example, a sample non-projective dependency tree for the Persian language is shown in Figure 1(b). The recent advances in very fast dependency parsing models (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)), has made the syntactic processing task very popular in the recent decade. In the Persian language, in addition to the abundance of crossings of the arcs, another problem occurs with compound verbs and verbs in the progressive aspect: compound and progressive verbs are multi-word expressions that may be separated depending on the context. Persian compound verbs consist of a light verb and a non-verbal element and the non-verbal element can be a noun, an adjective (in rare cases) or a sequence of a preposition and a noun (Dabir-Moghaddam, 1997). In addition, the nonverbal elements can also be</context>
</contexts>
<marker>Bohnet, Nivre, 2012</marker>
<rawString>Bernd Bohnet and Joakim Nivre. 2012. A transitionbased system for joint part-of-speech tagging and labeled non-projective dependency parsing. In EMNLPCoNLL, pages 1455–1465.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sabine Buchholz</author>
<author>Erwin Marsi</author>
</authors>
<title>CoNLL-X shared task on multilingual dependency parsing.</title>
<date>2006</date>
<booktitle>In Proceeding of the Tenth Conforence on Computational Natural Language Learning (CoNLL).</booktitle>
<contexts>
<context position="11882" citStr="Buchholz and Marsi, 2006" startWordPosition="1954" endWordPosition="1957">the simple past or the simple present form derived from the infinitive �IUƒ@X /daStæn/ (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main verb. The sample trees with compound verbs and progressive auxiliary verbs are shown in Figures 3(a) and 3(b) respectively. 3.2 Representation and Dependency Relation In this treebank, we followed the format of the CoNLL tab-separated format for dependency parsing (Buchholz and Marsi, 2006). In addition to the lemma, we annotated part of speech tags (both coarse and fine grained) and person, number and tense-mood-aspect (only for verbs) of words in sentences. The details of the part of speech tags and other morphosyntactic features and dependency relations are shown in Tables 1 and 2, respectively. The part of speech tag set in this treebank is not the same as that of Bijankhan (Peykare) corpus (Bijankhan et al., 2011) and it is essential to convert the tagset in Peykare corpus to the tagset in this treebank, in order to use both datasets2. We also tried to use the writing stand</context>
</contexts>
<marker>Buchholz, Marsi, 2006</marker>
<rawString>Sabine Buchholz and Erwin Marsi. 2006. CoNLL-X shared task on multilingual dependency parsing. In Proceeding of the Tenth Conforence on Computational Natural Language Learning (CoNLL).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jacob Cohen</author>
</authors>
<title>A coefficient of agreement for nominal scales.</title>
<date>1960</date>
<booktitle>Educational and psychological measurement,</booktitle>
<pages>20--1</pages>
<contexts>
<context position="25574" citStr="Cohen, 1960" startWordPosition="4151" endWordPosition="4152">Number of Verb Lemmas 4,782 Average Frequency of Verb Lemmas 12.67 Table 4: Statistics about the frequency of words in the Persian dependency treebank. # Non-Projective 1st Rep. 2nd Rep. Number of Arcs 9639 9091 Percent of Arcs 0.019 0.018 Number of Sentences 5540 5095 Percent of Sentences 1.85 1.70 Table 5: Statistics about non-projective relations in the Persian dependency treebank for both of the representations. tial errors were useful for correcting the errors. 4.1 Annotators Agreement The statistics about the agreement among the annotators is shown in Table 7. We can also use the Kappa (Cohen, 1960) to measure the quality of the annotation based on the agreement among the annotators (pr(a) in Eq. 1) and the expected agreement or probability of chance (pr(e) in Eq. 1). If we consider the accuracy of the parser on the raw text without gold POS tags (approximately 75% labeled and 80% unlabeled accuracy based on our experience during the bootstrapping) and the POS tagger that we used during the annotation process (approximately 94%) as the probability of chance, we see that for all of the tasks in Table 7, the quality of the annotaion is more than 0.81 and is considered as almost perfect acc</context>
</contexts>
<marker>Cohen, 1960</marker>
<rawString>Jacob Cohen. 1960. A coefficient of agreement for nominal scales. Educational and psychological measurement, 20(1):37–46.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohammad Dabir-Moghaddam</author>
</authors>
<date>1997</date>
<booktitle>Compound verbs in Persian. Studies in the Linguistic Sciences,</booktitle>
<volume>27</volume>
<issue>2</issue>
<contexts>
<context position="10444" citStr="Dabir-Moghaddam, 1997" startWordPosition="1711" endWordPosition="1712">t dependency parsing models (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)), has made the syntactic processing task very popular in the recent decade. In the Persian language, in addition to the abundance of crossings of the arcs, another problem occurs with compound verbs and verbs in the progressive aspect: compound and progressive verbs are multi-word expressions that may be separated depending on the context. Persian compound verbs consist of a light verb and a non-verbal element and the non-verbal element can be a noun, an adjective (in rare cases) or a sequence of a preposition and a noun (Dabir-Moghaddam, 1997). In addition, the nonverbal elements can also be inflected. The distance between the nonverbal element and the light NVE NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K @ éK. root barnæxAhæm gæft xAne ?in be return (future, neg., 1st sing.) house this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound</context>
</contexts>
<marker>Dabir-Moghaddam, 1997</marker>
<rawString>Mohammad Dabir-Moghaddam. 1997. Compound verbs in Persian. Studies in the Linguistic Sciences, 27(2):25–59.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dadegan Research Group</author>
</authors>
<title>Persian Dependency Treebank, Annotation manual and user guide.</title>
<date>2012</date>
<booktitle>Supreme Council of Information and Communication Technology (SCICT),</booktitle>
<location>Tehran, Iran.</location>
<marker>Group, 2012</marker>
<rawString>Dadegan Research Group. 2012. Persian Dependency Treebank, Annotation manual and user guide. Supreme Council of Information and Communication Technology (SCICT), Tehran, Iran.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jon Dehdari</author>
<author>Deryle Lonsdale</author>
</authors>
<title>A link grammar parser for Persian.</title>
<date>2008</date>
<journal>Aspects of Iranian Linguistics,</journal>
<volume>1</volume>
<contexts>
<context position="6581" citStr="Dehdari and Lonsdale, 2008" startWordPosition="1042" endWordPosition="1045">ersian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain the Parser Yes Add to the Treebank Dependency Treebank Need to Update the Parsing Model? 307 syntactic processing in the Persian language. root ÐXQ» ñ; AK. øXAK..P� øAë �IJ.m�• root kærdæm to bA zijAdi sohbæthAje did (1st, sing) you with a lot speaking(s) V PR PP A</context>
</contexts>
<marker>Dehdari, Lonsdale, 2008</marker>
<rawString>Jon Dehdari and Deryle Lonsdale. 2008. A link grammar parser for Persian. Aspects of Iranian Linguistics, 1.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dmitriy Dligach</author>
<author>Martha Palmer</author>
</authors>
<title>Reducing the need for double annotation.</title>
<date>2011</date>
<booktitle>In Proceedings of the 5th Linguistic Annotation Workshop,</booktitle>
<pages>65--69</pages>
<contexts>
<context position="23490" citStr="Dligach and Palmer, 2011" startWordPosition="3806" endWordPosition="3809">centration in addition to some of the changes of the linguistic conventions in the annotation. Since all cases of dependency relations in this treebank may be usually either a left-branching relation or a right-branching one and most of the relations are restricted to certain types of parts of speech, it is easy to capture the potential errors in the annotations based on the rules mentioned and to keep track of the changes in the linguistic conventions by searching the cues for those conventions (most of the changed conventions were made to very rare relations in the syntactic structure). In (Dligach and Palmer, 2011), it is concluded that although doubly annotated corpora are more reliable, annotating more sentences only once is more beneficial; i.e. annotating each sentence only once is less time-consuming and more cost-effective. We annotated all the sentences only once (with an additional checking phase) except for the 5% of the sentences in order to estimate the quality of our linguistic conventions and agreement among the annotators. The statistics about the annotators agreement is reported in Section 4.1. 4 Statistics of the TYeebank Finally, 29,982 sentences were manually annotated. The details abo</context>
</contexts>
<marker>Dligach, Palmer, 2011</marker>
<rawString>Dmitriy Dligach and Martha Palmer. 2011. Reducing the need for double annotation. In Proceedings of the 5th Linguistic Annotation Workshop, pages 65–69.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Masood Ghayoomi</author>
</authors>
<title>Bootstrapping the development of an HPSG-based treebank for Persian.</title>
<date>2012</date>
<journal>Linguistic Issues in Language Technology,</journal>
<volume>7</volume>
<issue>1</issue>
<contexts>
<context position="6694" citStr="Ghayoomi, 2012" startWordPosition="1062" endWordPosition="1064">ry “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain the Parser Yes Add to the Treebank Dependency Treebank Need to Update the Parsing Model? 307 syntactic processing in the Persian language. root ÐXQ» ñ; AK. øXAK..P� øAë �IJ.m�• root kærdæm to bA zijAdi sohbæthAje did (1st, sing) you with a lot speaking(s) V PR PP ADJ N (a) A simple dependency tree with compound verb for a Persian sentence: “I spoke with you a lot”. The NVE is</context>
</contexts>
<marker>Ghayoomi, 2012</marker>
<rawString>Masood Ghayoomi. 2012. Bootstrapping the development of an HPSG-based treebank for Persian. Linguistic Issues in Language Technology, 7(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jan Hajic</author>
</authors>
<title>Building a syntactically annotated corpus: The Prague dependency treebank. Issues of valency and meaning,</title>
<date>1998</date>
<pages>106--132</pages>
<contexts>
<context position="9667" citStr="Hajic, 1998" startWordPosition="1579" endWordPosition="1580">rd has one head and the head of the sentence is the dependent of an artificial root word (K¨ubler et al., 2009). A sample dependency tree is shown in Figure 1(a) for a Persian sentence. Note that Persian sentences are written from right to left. There are several reasons for the preference of dependency grammar to grammars such as phrasebased structure grammars. Although in both of the representations, one can show the syntactic analysis of a sentence, dependency representation has the power to account for the free word order of many languages such as Turkish (Oflazer et al., 2003) and Czech (Hajic, 1998) and also Persian. As an example, a sample non-projective dependency tree for the Persian language is shown in Figure 1(b). The recent advances in very fast dependency parsing models (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)), has made the syntactic processing task very popular in the recent decade. In the Persian language, in addition to the abundance of crossings of the arcs, another problem occurs with compound verbs and verbs in the progressive aspect: compound and progressive verbs are multi-word expressions that may be separated depending on the context. Persian compound verbs consist </context>
</contexts>
<marker>Hajic, 1998</marker>
<rawString>Jan Hajic. 1998. Building a syntactically annotated corpus: The Prague dependency treebank. Issues of valency and meaning, pages 106–132.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gholamhossein Karimi-Doostan</author>
</authors>
<date>2011</date>
<booktitle>Lexical categories in Persian. Lingua,</booktitle>
<volume>121</volume>
<issue>2</issue>
<contexts>
<context position="6115" citStr="Karimi-Doostan, 2011" startWordPosition="970" endWordPosition="971">ges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependen</context>
</contexts>
<marker>Karimi-Doostan, 2011</marker>
<rawString>Gholamhossein Karimi-Doostan. 2011a. Lexical categories in Persian. Lingua, 121(2):207–220.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gholamhossein Karimi-Doostan</author>
</authors>
<title>Separability of light verb constructions in Persian.</title>
<date>2011</date>
<journal>Studia Linguistica,</journal>
<volume>65</volume>
<issue>1</issue>
<contexts>
<context position="6115" citStr="Karimi-Doostan, 2011" startWordPosition="970" endWordPosition="971">ges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependen</context>
</contexts>
<marker>Karimi-Doostan, 2011</marker>
<rawString>Gholamhossein Karimi-Doostan. 2011b. Separability of light verb constructions in Persian. Studia Linguistica, 65(1):70–95.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Omid Kashefi</author>
<author>Mitra Nasri</author>
<author>Kamyar Kanani</author>
</authors>
<title>Automatic Spell Checking in Persian Language.</title>
<date>2010</date>
<booktitle>Supreme Council of Information and Communication Technology (SCICT),</booktitle>
<location>Tehran, Iran.</location>
<contexts>
<context position="5474" citStr="Kashefi et al., 2010" startWordPosition="863" endWordPosition="866">ed manually. The remainder of this paper is as follows. In Section 2, we briefly review the challenges in Persian language processing. In Sections 3 and 4, the details about the annotation process, linguistic and statistical information about the data and the annotator agreement are reported. In Section 5, the conclusion and suggestions for future research are presented. 2 Persian Language Processing Challenges Persian is an Indo-European language that is written in Arabic script. There are lots of problems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., 2010). A number of challenges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical c</context>
<context position="8460" citStr="Kashefi et al., 2010" startWordPosition="1378" endWordPosition="1381">ency tree for a Persian sentence with a an inflected form of a prefixed verb “I will not return to this house.”. The word QK. is the prefix, the word Ñë@ñ m~ is the auxiliary for the future and the word I�:Ãis the main verb. Notice that the prefix is attached to the auxiliary without any space and the remaining part of the verb is separated by a space. Figure 3: Examples of Persian sentences with the dependency-based syntactic trees. The format of the representation is the same as Figure 1. 3 Persian Dependency Treebank 3.1 Motivation With the creation of the Virastyar spell checker software (Kashefi et al., 2010), many open-source libraries were released for Persian word processing such as POS tagging, encoding refinement, tokenization, etc. Regarding the need for syntactic analysis of Persian texts, we decided to prepare a valuable linguistic data infrastructure for Persian syntax. In the first step, there was a need for choosing from the existing theories of grammar that best suits Persian. Among grammatical theories, we decided to choose the dependency grammar. In dependency grammar, syntactic relations are shown with dependencies between the words. In computational dependency grammar, each word ha</context>
<context position="21058" citStr="Kashefi et al., 2010" startWordPosition="3400" endWordPosition="3403">ture tense inflection unless we could not find them and were obliged to reduce the number. The sentences were not shortened and were kept with their original length and words. Finally, we manually removed sentences containing colloquial words. However, we did not remove loan words or cases of code-switching between latin-script words and Persian words in the sentences. The raw sentences were fed to the encoding and spell checking module. After spell correction, all sentences were tokenized and tagged with part of speech tags. All of the word processing steps were done using Virastyar library (Kashefi et al., 2010). After tokenization and POS tagging, the tokenized sentences were fed to the Persian verb analyzing tool (Rasooli et al., 2011a). In the next step, the preprocessed sentences were given to the dependency parser. We used MST parser (McDonald et al., 2005) for parsing the sentences. In the final step, annotators corrected the errors of tokenization, POS tagging and parsing. In about every one to two weeks, the parser model was updated by training on the new version of the treebank. This process lasted 9 months and the number of annotators increased by time to speed up the process. In the first </context>
</contexts>
<marker>Kashefi, Nasri, Kanani, 2010</marker>
<rawString>Omid Kashefi, Mitra Nasri, and Kamyar Kanani. 2010. Automatic Spell Checking in Persian Language. Supreme Council of Information and Communication Technology (SCICT), Tehran, Iran.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sandra K¨ubler</author>
<author>Ryan McDonald</author>
<author>Joakim Nivre</author>
</authors>
<title>Dependency Parsing. Synthesis Lectures on Human Language Technologies.</title>
<date>2009</date>
<publisher>Morgan &amp; Claypool Publishers.</publisher>
<marker>K¨ubler, McDonald, Nivre, 2009</marker>
<rawString>Sandra K¨ubler, Ryan McDonald, and Joakim Nivre. 2009. Dependency Parsing. Synthesis Lectures on Human Language Technologies. Morgan &amp; Claypool Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Richard Landis</author>
<author>Gary G Koch</author>
</authors>
<title>The measurement of observer agreement for categorical data.</title>
<date>1977</date>
<journal>Biometrics,</journal>
<pages>159--174</pages>
<contexts>
<context position="26207" citStr="Landis and Koch, 1977" startWordPosition="4260" endWordPosition="4263"> the quality of the annotation based on the agreement among the annotators (pr(a) in Eq. 1) and the expected agreement or probability of chance (pr(e) in Eq. 1). If we consider the accuracy of the parser on the raw text without gold POS tags (approximately 75% labeled and 80% unlabeled accuracy based on our experience during the bootstrapping) and the POS tagger that we used during the annotation process (approximately 94%) as the probability of chance, we see that for all of the tasks in Table 7, the quality of the annotaion is more than 0.81 and is considered as almost perfect according to (Landis and Koch, 1977). k = pr (a) − pr (e) (1) 1 − pr(e) 5 Conclusion As mentioned earlier, Persian is a language with its own challenges. We tried to overcome some of those challenges by preparing valuable linguistic Changes to Unlabeled Relations 4.91% Changes to Labeled Relations 6.29% Changes to POS Tags 4.23% Table 6: Statistics about changes in the treebank after the manual correction of the potential errors. Unlabeled Relations 97.06% Labeled Relations 95.32% POS Tags 98.93% Table 7: Statistics about agreements among the annotators. datasets5. In addition to the preparation of the treebank, we prepared some</context>
</contexts>
<marker>Landis, Koch, 1977</marker>
<rawString>J. Richard Landis and Gary G. Koch. 1977. The measurement of observer agreement for categorical data. Biometrics, pages 159–174.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ryan McDonald</author>
<author>Koby Crammer</author>
<author>Fernando Pereira</author>
</authors>
<title>Online large-margin training of dependency parsers.</title>
<date>2005</date>
<booktitle>In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics (ACL),</booktitle>
<pages>91--98</pages>
<location>Sydney, Australia.</location>
<contexts>
<context position="21313" citStr="McDonald et al., 2005" startWordPosition="3442" endWordPosition="3446">e did not remove loan words or cases of code-switching between latin-script words and Persian words in the sentences. The raw sentences were fed to the encoding and spell checking module. After spell correction, all sentences were tokenized and tagged with part of speech tags. All of the word processing steps were done using Virastyar library (Kashefi et al., 2010). After tokenization and POS tagging, the tokenized sentences were fed to the Persian verb analyzing tool (Rasooli et al., 2011a). In the next step, the preprocessed sentences were given to the dependency parser. We used MST parser (McDonald et al., 2005) for parsing the sentences. In the final step, annotators corrected the errors of tokenization, POS tagging and parsing. In about every one to two weeks, the parser model was updated by training on the new version of the treebank. This process lasted 9 months and the number of annotators increased by time to speed up the process. In the first 6 months, we used 8 annotators and for the next 5 months, we hired 6 more annotators to speed up the process. The annotators and linguistic experts consisted of 1 PhD graduate (linguistics), 4 PhD candidates (linguistics), and 9 MA graduates or graduate s</context>
</contexts>
<marker>McDonald, Crammer, Pereira, 2005</marker>
<rawString>Ryan McDonald, Koby Crammer, and Fernando Pereira. 2005. Online large-margin training of dependency parsers. In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics (ACL), pages 91–98, Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joakim Nivre</author>
</authors>
<title>Non-projective dependency parsing in expected linear time.</title>
<date>2009</date>
<booktitle>In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing,</booktitle>
<pages>351--359</pages>
<contexts>
<context position="9868" citStr="Nivre, 2009" startWordPosition="1614" endWordPosition="1615">n sentences are written from right to left. There are several reasons for the preference of dependency grammar to grammars such as phrasebased structure grammars. Although in both of the representations, one can show the syntactic analysis of a sentence, dependency representation has the power to account for the free word order of many languages such as Turkish (Oflazer et al., 2003) and Czech (Hajic, 1998) and also Persian. As an example, a sample non-projective dependency tree for the Persian language is shown in Figure 1(b). The recent advances in very fast dependency parsing models (e.g. (Nivre, 2009; Bohnet and Nivre, 2012)), has made the syntactic processing task very popular in the recent decade. In the Persian language, in addition to the abundance of crossings of the arcs, another problem occurs with compound verbs and verbs in the progressive aspect: compound and progressive verbs are multi-word expressions that may be separated depending on the context. Persian compound verbs consist of a light verb and a non-verbal element and the non-verbal element can be a noun, an adjective (in rare cases) or a sequence of a preposition and a noun (Dabir-Moghaddam, 1997). In addition, the nonve</context>
</contexts>
<marker>Nivre, 2009</marker>
<rawString>Joakim Nivre. 2009. Non-projective dependency parsing in expected linear time. In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing, pages 351–359.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kemal Oflazer</author>
</authors>
<title>Bilge Say, Dilek Zeynep Hakkani-T¨ur, and G¨okhan T¨ur.</title>
<date>2003</date>
<pages>261--277</pages>
<marker>Oflazer, 2003</marker>
<rawString>Kemal Oflazer, Bilge Say, Dilek Zeynep Hakkani-T¨ur, and G¨okhan T¨ur. 2003. Building a Turkish treebank. Treebanks, pages 261–277.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohammad Sadegh Rasooli</author>
<author>Heshaam Faili</author>
<author>Behrouz Minaei-Bidgoli</author>
</authors>
<title>Unsupervised identification of Persian compound verbs.</title>
<date>2011</date>
<booktitle>In Proceedings of the Mexican international conference on artificial intelligence (MICAI),</booktitle>
<pages>394--406</pages>
<location>Puebla, Mexico.</location>
<contexts>
<context position="3424" citStr="Rasooli et al., 2011" startWordPosition="518" endWordPosition="521"> the development of the syntactic treebank of Persian as its ultimate aim. In this paper, we review the process of creating the Persian syntactic treebank based on dependency grammar. In this treebank, approximately 30,000 sentences from contemporary Persian-language texts are manually tokenized and annotated at morphological and syntactic levels. One valuable aspect of the treebank is its containment of near 5000 distinct verb lemmas in its sentences making it a good resource for educational goals. The dataset is developed after the creation of the syntactic valency lexicon of Persian verbs (Rasooli et al., 2011c). This treebank is developed with a bootstrapping approach by automatically building dependency trees based on the Proceedings of NAACL-HLT 2013, pages 306–314, Atlanta, Georgia, 9–14 June 2013. c�2013 Association for Computational Linguistics Iƒ@�à � @ QK. ú æ:J.Ó áK @ root Raw Sentence Insert Encoding and Spell Correction POSDEP � MOS root SBJ AJPP ?æst ?an bær mobtæni ?in is that on based it V PR PP ADJ PR Tokenization and POS Tagging (a) A simple projective dependency tree for a Persian sentence: “It is based on that”’. Verb Analysis à �@ QK. ~Iƒ@ ú �æ�JJ.Ó áK @root ?an bær ?æst mobtæni </context>
<context position="5982" citStr="Rasooli et al., 2011" startWordPosition="948" endWordPosition="951">ems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., 2010). A number of challenges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008),</context>
<context position="11173" citStr="Rasooli et al., 2011" startWordPosition="1834" endWordPosition="1837">he light NVE NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K @ éK. root barnæxAhæm gæft xAne ?in be return (future, neg., 1st sing.) house this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound verbs are placed away from the light verb for the compound verbs with the light verb OXQ» /kærdæn/ (to do) (Rasooli et al., 2011a). A group of Persian progressive verbs are composed of two words, the first being the simple past or the simple present form derived from the infinitive �IUƒ@X /daStæn/ (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main verb. The sample trees with compound verbs and progressive auxiliary verbs are shown in Figures 3(a) and 3(b) respectively. 3.2 Representation and Dependency Relation In this treeban</context>
<context position="20145" citStr="Rasooli et al., 2011" startWordPosition="3248" endWordPosition="3251">Pñk� /xorde bASæm/ Table 3: Tense/Mood/Aspect Types in Persian verbs 3.3 Annotation Process The annotation process consists of several consecutive steps. In Figure 2, a summary of the bootstrapping approach in the annotation process is shown. At first, a collection of independent sentences have been collected randomly from the web. For the first 5000 sentences, we crawled Persian news texts and randomly sampled the sentences. For the remaining sentences, we first listed the absent verb lemmas in the 5000 sentences based on the verb list ex311 tracted from the valency lexicon of Persian verbs (Rasooli et al., 2011c) and collected random sentences that included the absent verb lemmas in their words. We listed all possible inflections and per each verb lemma, sampled at most 8 sentences from the web. These sentences had to contain at least one present tense, one past tense, one passive voice and one future tense inflection unless we could not find them and were obliged to reduce the number. The sentences were not shortened and were kept with their original length and words. Finally, we manually removed sentences containing colloquial words. However, we did not remove loan words or cases of code-switching</context>
</contexts>
<marker>Rasooli, Faili, Minaei-Bidgoli, 2011</marker>
<rawString>Mohammad Sadegh Rasooli, Heshaam Faili, and Behrouz Minaei-Bidgoli. 2011a. Unsupervised identification of Persian compound verbs. In Proceedings of the Mexican international conference on artificial intelligence (MICAI), pages 394–406, Puebla, Mexico.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohammad Sadegh Rasooli</author>
<author>Omid Kashefi</author>
<author>Behrouz Minaei-Bidgoli</author>
</authors>
<title>Effect of adaptive spell checking in Persian.</title>
<date>2011</date>
<booktitle>In 7th International Conference on Natural Language Processing and Knowledge Engineering (NLP-KE),</booktitle>
<pages>161--164</pages>
<location>Tokushima, Japan.</location>
<contexts>
<context position="3424" citStr="Rasooli et al., 2011" startWordPosition="518" endWordPosition="521"> the development of the syntactic treebank of Persian as its ultimate aim. In this paper, we review the process of creating the Persian syntactic treebank based on dependency grammar. In this treebank, approximately 30,000 sentences from contemporary Persian-language texts are manually tokenized and annotated at morphological and syntactic levels. One valuable aspect of the treebank is its containment of near 5000 distinct verb lemmas in its sentences making it a good resource for educational goals. The dataset is developed after the creation of the syntactic valency lexicon of Persian verbs (Rasooli et al., 2011c). This treebank is developed with a bootstrapping approach by automatically building dependency trees based on the Proceedings of NAACL-HLT 2013, pages 306–314, Atlanta, Georgia, 9–14 June 2013. c�2013 Association for Computational Linguistics Iƒ@�à � @ QK. ú æ:J.Ó áK @ root Raw Sentence Insert Encoding and Spell Correction POSDEP � MOS root SBJ AJPP ?æst ?an bær mobtæni ?in is that on based it V PR PP ADJ PR Tokenization and POS Tagging (a) A simple projective dependency tree for a Persian sentence: “It is based on that”’. Verb Analysis à �@ QK. ~Iƒ@ ú �æ�JJ.Ó áK @root ?an bær ?æst mobtæni </context>
<context position="5982" citStr="Rasooli et al., 2011" startWordPosition="948" endWordPosition="951">ems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., 2010). A number of challenges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008),</context>
<context position="11173" citStr="Rasooli et al., 2011" startWordPosition="1834" endWordPosition="1837">he light NVE NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K @ éK. root barnæxAhæm gæft xAne ?in be return (future, neg., 1st sing.) house this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound verbs are placed away from the light verb for the compound verbs with the light verb OXQ» /kærdæn/ (to do) (Rasooli et al., 2011a). A group of Persian progressive verbs are composed of two words, the first being the simple past or the simple present form derived from the infinitive �IUƒ@X /daStæn/ (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main verb. The sample trees with compound verbs and progressive auxiliary verbs are shown in Figures 3(a) and 3(b) respectively. 3.2 Representation and Dependency Relation In this treeban</context>
<context position="20145" citStr="Rasooli et al., 2011" startWordPosition="3248" endWordPosition="3251">Pñk� /xorde bASæm/ Table 3: Tense/Mood/Aspect Types in Persian verbs 3.3 Annotation Process The annotation process consists of several consecutive steps. In Figure 2, a summary of the bootstrapping approach in the annotation process is shown. At first, a collection of independent sentences have been collected randomly from the web. For the first 5000 sentences, we crawled Persian news texts and randomly sampled the sentences. For the remaining sentences, we first listed the absent verb lemmas in the 5000 sentences based on the verb list ex311 tracted from the valency lexicon of Persian verbs (Rasooli et al., 2011c) and collected random sentences that included the absent verb lemmas in their words. We listed all possible inflections and per each verb lemma, sampled at most 8 sentences from the web. These sentences had to contain at least one present tense, one past tense, one passive voice and one future tense inflection unless we could not find them and were obliged to reduce the number. The sentences were not shortened and were kept with their original length and words. Finally, we manually removed sentences containing colloquial words. However, we did not remove loan words or cases of code-switching</context>
</contexts>
<marker>Rasooli, Kashefi, Minaei-Bidgoli, 2011</marker>
<rawString>Mohammad Sadegh Rasooli, Omid Kashefi, and Behrouz Minaei-Bidgoli. 2011b. Effect of adaptive spell checking in Persian. In 7th International Conference on Natural Language Processing and Knowledge Engineering (NLP-KE), pages 161–164, Tokushima, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mohammad Sadegh Rasooli</author>
<author>Amirsaeid Moloodi</author>
<author>Manouchehr Kouhestani</author>
<author>Behrouz MinaeiBidgoli</author>
</authors>
<title>A syntactic valency lexicon for Persian verbs: The first steps towards Persian dependency treebank.</title>
<date>2011</date>
<booktitle>In 5th Language &amp; Technology Conference (LTC): Human Language Technologies as a Challenge for Computer Science and Linguistics,</booktitle>
<pages>227--231</pages>
<location>Pozna´n,</location>
<contexts>
<context position="3424" citStr="Rasooli et al., 2011" startWordPosition="518" endWordPosition="521"> the development of the syntactic treebank of Persian as its ultimate aim. In this paper, we review the process of creating the Persian syntactic treebank based on dependency grammar. In this treebank, approximately 30,000 sentences from contemporary Persian-language texts are manually tokenized and annotated at morphological and syntactic levels. One valuable aspect of the treebank is its containment of near 5000 distinct verb lemmas in its sentences making it a good resource for educational goals. The dataset is developed after the creation of the syntactic valency lexicon of Persian verbs (Rasooli et al., 2011c). This treebank is developed with a bootstrapping approach by automatically building dependency trees based on the Proceedings of NAACL-HLT 2013, pages 306–314, Atlanta, Georgia, 9–14 June 2013. c�2013 Association for Computational Linguistics Iƒ@�à � @ QK. ú æ:J.Ó áK @ root Raw Sentence Insert Encoding and Spell Correction POSDEP � MOS root SBJ AJPP ?æst ?an bær mobtæni ?in is that on based it V PR PP ADJ PR Tokenization and POS Tagging (a) A simple projective dependency tree for a Persian sentence: “It is based on that”’. Verb Analysis à �@ QK. ~Iƒ@ ú �æ�JJ.Ó áK @root ?an bær ?æst mobtæni </context>
<context position="5982" citStr="Rasooli et al., 2011" startWordPosition="948" endWordPosition="951">ems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., 2010). A number of challenges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008),</context>
<context position="11173" citStr="Rasooli et al., 2011" startWordPosition="1834" endWordPosition="1837">he light NVE NPP NPOSTMOD POSDEP PROG VPP POSDEP NPREMOD VPP POSDEP NPREMOD I� �‚ÃÑë@ñ�m�� QK.é�KAg &amp;K @ éK. root barnæxAhæm gæft xAne ?in be return (future, neg., 1st sing.) house this to V N PREM PP 308 verb on the one hand and the possibility of the nonverbal element being inflected on the other hand have made the task of compound verb identification very difficult. For example, in Bijankhan (Peykare) corpus (Bijankhan et al., 2011), approximately 9% of nonverbal elements of compound verbs are placed away from the light verb for the compound verbs with the light verb OXQ» /kærdæn/ (to do) (Rasooli et al., 2011a). A group of Persian progressive verbs are composed of two words, the first being the simple past or the simple present form derived from the infinitive �IUƒ@X /daStæn/ (to have) and the second being the past continuous or the present continuous form of the main verb. The first verb (an auxiliary) agrees with the second in number and person. The problem is that the progressive auxiliary can be away from the main verb. The sample trees with compound verbs and progressive auxiliary verbs are shown in Figures 3(a) and 3(b) respectively. 3.2 Representation and Dependency Relation In this treeban</context>
<context position="20145" citStr="Rasooli et al., 2011" startWordPosition="3248" endWordPosition="3251">Pñk� /xorde bASæm/ Table 3: Tense/Mood/Aspect Types in Persian verbs 3.3 Annotation Process The annotation process consists of several consecutive steps. In Figure 2, a summary of the bootstrapping approach in the annotation process is shown. At first, a collection of independent sentences have been collected randomly from the web. For the first 5000 sentences, we crawled Persian news texts and randomly sampled the sentences. For the remaining sentences, we first listed the absent verb lemmas in the 5000 sentences based on the verb list ex311 tracted from the valency lexicon of Persian verbs (Rasooli et al., 2011c) and collected random sentences that included the absent verb lemmas in their words. We listed all possible inflections and per each verb lemma, sampled at most 8 sentences from the web. These sentences had to contain at least one present tense, one past tense, one passive voice and one future tense inflection unless we could not find them and were obliged to reduce the number. The sentences were not shortened and were kept with their original length and words. Finally, we manually removed sentences containing colloquial words. However, we did not remove loan words or cases of code-switching</context>
</contexts>
<marker>Rasooli, Moloodi, Kouhestani, MinaeiBidgoli, 2011</marker>
<rawString>Mohammad Sadegh Rasooli, Amirsaeid Moloodi, Manouchehr Kouhestani, and Behrouz MinaeiBidgoli. 2011c. A syntactic valency lexicon for Persian verbs: The first steps towards Persian dependency treebank. In 5th Language &amp; Technology Conference (LTC): Human Language Technologies as a Challenge for Computer Science and Linguistics, pages 227–231, Pozna´n, Poland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mojgan Seraji</author>
<author>Be´ata Magyesi</author>
<author>Joakim Nivre</author>
</authors>
<title>Bootstrapping a Persian dependency treebank.</title>
<date>2012</date>
<journal>Linguistic Issues in Language Technology,</journal>
<volume>7</volume>
<issue>1</issue>
<contexts>
<context position="6748" citStr="Seraji et al., 2012" startWordPosition="1069" endWordPosition="1073">ompound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpus (Bijankhan, 2004) with the annotation of word categories, other kinds of datasets have been created to address the need for Persian language processing. Among them, a Persian parser based on link grammar (Dehdari and Lonsdale, 2008), a computational grammar based on GPSG (Bahrani et al., 2011), syntactic treebank based on HPSG (Ghayoomi, 2012) and Uppsala dependency treebank (Seraji et al., 2012) are the efforts to satisfy the need for AJPP root SBJ POSDEP MOS ~ Dependency Parsing Manual Error Correction (Treebank Annotation) Parsing Model Update Model Retrain the Parser Yes Add to the Treebank Dependency Treebank Need to Update the Parsing Model? 307 syntactic processing in the Persian language. root ÐXQ» ñ; AK. øXAK..P� øAë �IJ.m�• root kærdæm to bA zijAdi sohbæthAje did (1st, sing) you with a lot speaking(s) V PR PP ADJ N (a) A simple dependency tree with compound verb for a Persian sentence: “I spoke with you a lot”. The NVE is a relation between a light verb and its nonverbal ele</context>
<context position="16817" citStr="Seraji et al., 2012" startWordPosition="2759" endWordPosition="2762">cal connectedness of words that are separated into two or more tokens with the values ISO (isolated word), NXT (attached to the next token) and PRV (attached to the previous token). part separately3. In Table 3, possible types of the Persian verb inflections are shown. As seen in Table 3, 6 forms of 14 inflection types of Persian verbs are multi-word tokens and for passive verbs they may be composed of more words than their active counterparts (since for passive verbs an auxiliary form derived from the infinitive v)_U. /Sodæn/ is used). In Figure 3(c), a sample tree with a multi-token pre3In (Seraji et al., 2012), multi-token verbs are considered as separate words. fixed verb is shown. As shown in the case of colored tokens, it seems more beneficial to put all morphemes of the word together before parsing. Furthermore, with the available Persian verb analyzer it is very easy to first preprocess the verbs4. 4If it is needed to respect the exact format of CoNLL, spaces between the verb tokes should be replaced by a character such as underscore. Regarding the special fine-grained morphological tags for the verb such as tense-mood-aspect, it is also straightforward to separate all of the multi-word verbs </context>
</contexts>
<marker>Seraji, Magyesi, Nivre, 2012</marker>
<rawString>Mojgan Seraji, Be´ata Magyesi, and Joakim Nivre. 2012. Bootstrapping a Persian dependency treebank. Linguistic Issues in Language Technology, 7(1).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehrnoosh Shamsfard</author>
</authors>
<title>Challenges and open problems in Persian text processing.</title>
<date>2011</date>
<booktitle>In 5th Language &amp; Technology Conference (LTC): Human Language Technologies as a Challenge for Computer Science and Linguistics,</booktitle>
<pages>65--69</pages>
<location>Pozna´n,</location>
<contexts>
<context position="5747" citStr="Shamsfard, 2011" startWordPosition="910" endWordPosition="911">t are reported. In Section 5, the conclusion and suggestions for future research are presented. 2 Persian Language Processing Challenges Persian is an Indo-European language that is written in Arabic script. There are lots of problems in its orthography such as encoding problems, hidden diacritics and writing standards (Kashefi et al., 2010). A number of challenges such as the free orFigure 2: Diagram of bootstrapping approach in the development of the dependency treebank. der of words, the existence of colloquial texts, the pro-drop nature of the Persian language and its complex inflections (Shamsfard, 2011) in addition to the lack of efficient annotated linguistic data have made the processing of Persian texts very difficult; e.g. there are more than 100 conjugates and 2800 declensions for some word forms in Persian (Rasooli et al., 2011b), some words in the Persian language do not have a clear word category (i.e. the lexical category “mismatch”) (Karimi-Doostan, 2011a) and many compound verbs (complex predicates) can be separable (i.e. the non-verbal element may be separated from the verbal element by one or more other words) (Karimi-Doostan, 2011b). After the development of the Bijankhan corpu</context>
</contexts>
<marker>Shamsfard, 2011</marker>
<rawString>Mehrnoosh Shamsfard. 2011. Challenges and open problems in Persian text processing. In 5th Language &amp; Technology Conference (LTC): Human Language Technologies as a Challenge for Computer Science and Linguistics, pages 65–69, Pozna´n, Poland.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Gernot Windfuhr</author>
</authors>
<title>The Iranian Languages.</title>
<date>2009</date>
<publisher>Routledge.</publisher>
<contexts>
<context position="2470" citStr="Windfuhr, 2009" startWordPosition="368" endWordPosition="369">in tasks such as machine translation. Dependency treebanks are collections of sentences with their corresponding dependency trees. In the last decade, many dependency treebanks have been developed for a large number of languages. There are at least 29 languages for which at least one dependency treebank is available (Zeman et al., 2012). Dependency trees are much more similar to the human understanding of language and can easily represent the free word-order nature of syntactic roles in sentences (K¨ubler et al., 2009). Persian is a language with about 110 million speakers all over the world (Windfuhr, 2009), yet in terms of the availability of teaching materials and annotated data for text processing, it is undoubtedly a low-resourced language. The need for more language teaching materials together with an everincreasing need for Persian-language data processing has been the incentive for the inception of our project which has defined the development of the syntactic treebank of Persian as its ultimate aim. In this paper, we review the process of creating the Persian syntactic treebank based on dependency grammar. In this treebank, approximately 30,000 sentences from contemporary Persian-languag</context>
</contexts>
<marker>Windfuhr, 2009</marker>
<rawString>Gernot Windfuhr. 2009. The Iranian Languages. Routledge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Zeman</author>
<author>David Mareˇcek</author>
<author>Martin Popel</author>
<author>Loganathan Ramasamy</author>
<author>Jan ˇStˇep´anek</author>
<author>Zedn´eck ˇZabokrtsk`y</author>
<author>Jan Hajiˇc</author>
</authors>
<title>Hamledt: To parse or not to parse.</title>
<date>2012</date>
<booktitle>In Proceedings of the Eighth Conference on International Language Resources and Evaluation (LREC’12),</booktitle>
<location>Istanbul, Turkey.</location>
<marker>Zeman, Mareˇcek, Popel, Ramasamy, ˇStˇep´anek, ˇZabokrtsk`y, Hajiˇc, 2012</marker>
<rawString>Daniel Zeman, David Mareˇcek, Martin Popel, Loganathan Ramasamy, Jan ˇStˇep´anek, Zedn´eck ˇZabokrtsk`y, and Jan Hajiˇc. 2012. Hamledt: To parse or not to parse. In Proceedings of the Eighth Conference on International Language Resources and Evaluation (LREC’12), Istanbul, Turkey.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>