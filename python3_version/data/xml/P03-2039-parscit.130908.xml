<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.017265">
<title confidence="0.9966685">
Chinese Unknown Word Identification Using Character-based Tagging and
Chunking
</title>
<author confidence="0.914565">
GOH Chooi Ling, Masayuki ASAHARA, Yuji MATSUMOTO
</author>
<affiliation confidence="0.911739">
Graduate School of Information Science
Nara Institute of Science and Technology
</affiliation>
<email confidence="0.996818">
ling-g,masayu-a,matsu @is.aist-nara.ac.jp
</email>
<sectionHeader confidence="0.995618" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999940416666667">
Since written Chinese has no space to de-
limit words, segmenting Chinese texts be-
comes an essential task. During this task,
the problem of unknown word occurs. It is
impossible to register all words in a dictio-
nary as new words can always be created
by combining characters. We propose a
unified solution to detect unknown words
in Chinese texts. First, a morphological
analysis is done to obtain initial segmen-
tation and POS tags and then a chunker is
used to detect unknown words.
</bodyText>
<sectionHeader confidence="0.99899" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.99993941025641">
Like many other Asian languages (Thai, Japanese,
etc), written Chinese does not delimit words by
spaces and there is no clue to tell where the word
boundaries are. Therefore, it is usually required to
segment Chinese texts prior to further processing.
Previous research has been done for segmentation,
however, the results obtained are not quite satisfac-
tory when unknown words occur in the texts. An
unknown word is defined as a word that is not found
in the dictionary. As for any other language, all pos-
sibilities of derivational morphology cannot be fore-
seen in the form of a dictionary with a fixed number
of entries. Therefore, proper solutions are necessary
for the detection of unknown words.
Along traditional methods, unknown word detec-
tion has been done using rules for guessing their
location. This can ensure a high precision for the
detection of unknown words, but unfortunately the
recall is not quite satisfactory. It is mainly due to
the Chinese language, as new patterns can always
be created, that one can hardly efficiently maintain
the rules by hand. Since the introduction of statis-
tical techniques in NLP, research has been done on
Chinese unknown word detection using such tech-
niques, and the results showed that statistical based
model could be a better solution. The only resource
needed is a large corpus. Fortunately, to date, more
and more Chinese tagged corpora have been created
for research purpose.
We propose an “all-purpose” unknown word de-
tection method which will extract person names, or-
ganization names and low frequency words in the
corpus. We will treat low frequency words as gen-
eral unknown words in our experiments. First, we
segment and assign POS tags to words in the text
using a morphological analyzer. Second, we break
segmented words into characters, and assign each
character its features. At last, we use a SVM-based
chunker to extract the unknown words.
</bodyText>
<sectionHeader confidence="0.980955" genericHeader="method">
2 Proposed Method
</sectionHeader>
<bodyText confidence="0.927336">
We shall now describe the 3 steps successively.
</bodyText>
<subsectionHeader confidence="0.993399">
2.1 Morphological Analysis
</subsectionHeader>
<bodyText confidence="0.999838384615385">
ChaSen is a widely used morphological analyzer for
Japanese texts (Matsumoto et al., 2002). It achieves
over 97% precision for newspaper articles. We as-
sume that Chinese language has similar characteris-
tics with Japanese language to a certain extent, as
both languages share semantically heavily loaded
characters, i.e. kanji for Japanese, hanzi for Chinese.
Based on this assumption, a model for Japanese may
do well enough on Chinese. This morphological an-
alyzer is based on Hidden Markov Models. The tar-
get is to find the word and POS sequence that max-
imize the probability. The details can be found in
(Matsumoto et al., 2002).
</bodyText>
<subsectionHeader confidence="0.999142">
2.2 Character Based Features
</subsectionHeader>
<bodyText confidence="0.997992052631579">
Character based features allow the chunker to detect
unknown words more efficiently. It is especially the
case when unknown words overlap known words.
For example, ChaSen will segment the phrase ”
... ” (Deng Yingchao before death) into
” / / / /... ” (Deng Ying before next life). If
we use word based features, it is impossible to detect
the unknown person name ” ” because it will
not break up the word ” ” (next life). Breaking
words into characters enables the chunker to look at
characters individually and to identify the unknown
person name above.
The POS tag from the output of morphological
analysis is subcategorized to include the position of
the character in the word. The list of positions is
shown in Table 1. For example, if a word contains
three characters, then the first character is POS -B,
the second is POS -I and the third is POS -E. A
single character word is tagged as POS -S.
</bodyText>
<tableCaption confidence="0.992601">
Table 1: Position tags in a word
</tableCaption>
<bodyText confidence="0.999859833333333">
Character types can also be used as features for
chunking. However, the only information at our dis-
posal is the possibility for a character to be a fam-
ily name. The set of characters used for translitera-
tion may also be useful for retrieving transliterated
names.
</bodyText>
<subsectionHeader confidence="0.999651">
2.3 Chunking with Support Vector Machine
</subsectionHeader>
<bodyText confidence="0.99974380952381">
We use a Support Vector Machines-based chunker,
YamCha (Kudo and Matsumoto, 2001), to extract
unknown words from the output of the morphologi-
cal analysis. The chunker uses a polynomial kernel
of degree 2. Please refer to the paper cited for de-
tails.
Basically we would like to classify the characters
into 3 categories, B (beginning of a chunk), I (inside
a chunk) and O (outside a chunk). A chunk is con-
sidered as an unknown word in this case. We can
either parse a sentence forwardly, from the begin-
ning of a sentence, or backwardly, from the end of
a sentence. There are always some relationships be-
tween the unknown words and the their contexts in
the sentence. We will use two characters on each left
and right side as the context window for chunking.
Figure 1 illustrates a snapshot of the chunking
process. During forward parsing, to infer the un-
known word tag “I” at position i, the chunker uses
the features appearing in the solid box. Reverse is
done in backward parsing.
</bodyText>
<sectionHeader confidence="0.999261" genericHeader="method">
3 Experiments
</sectionHeader>
<bodyText confidence="0.999979928571428">
We conducted an open test experiment. A one-
month news of year 1998 from the People’s Daily
was used as the corpus. It contains about 300,000
words (about 1,000,000 characters) with 39 POS
tags. The corpus was divided into 2 parts randomly
with a size ratio for training/testing of 4/1.
All person names and organization names were
deleted from the dictionary for extraction. There
were 4,690 person names and 2,871 organization
names in the corpus. For general unknown word,
all words that occurred only once in the corpus were
deleted from the dictionary, and were treated as un-
known words. 12,730 unknown words were created
under this condition.
</bodyText>
<sectionHeader confidence="0.999973" genericHeader="method">
4 Results
</sectionHeader>
<bodyText confidence="0.99973">
We now present the results of our experiments in re-
call, precision and F-measure, as usual in such ex-
periments.
</bodyText>
<subsectionHeader confidence="0.986108">
4.1 Person Name Extraction
</subsectionHeader>
<bodyText confidence="0.997404">
Table 2 shows the results of person name extraction.
The accuracy for retrieving person names was quite
satisfiable. We could also extract names overlap-
ping with the next known word. For example, for
the sequence “ /Ng /Ag /v /f /v /v
</bodyText>
<figure confidence="0.645229833333333">
Tag
Description
one-character word
first character in a multi-character word
intermediate character in a multi-
character word (for words longer than
two characters)
last character in a multi-character word
S
B
I
E
</figure>
<figureCaption confidence="0.999342">
Figure 1: An illustration of chunking process ‘President Jiang Zemin’
</figureCaption>
<bodyText confidence="0.554738">
Position Char. POS(best) Family Name Chunk
</bodyText>
<equation confidence="0.991829923076923">
i
I
Ng-S N
i - 2
n-S Y B
i - 1
Ag-S N I
O
O
i + 1
i + 2
n-B N
n-E Y
</equation>
<bodyText confidence="0.901518333333333">
/u /n” (The things that Deng Yingchao used
before death), the system was able to correctly re-
trieve the name “ ” although the last character
is part of a known word “ ”. It could also iden-
tify transliterated f i h “ ”
(Filali)1, “ .
</bodyText>
<tableCaption confidence="0.956507">
Table 2: Results for person name extraction
</tableCaption>
<table confidence="0.9983856">
Recall Precision F-measure
For 83.37 86.06 84.69
Back 79.45 86.84 82.98
+FamN/For 85.81 87.52 86.66
+FamN/Back 84.44 89.25 86.78
</table>
<bodyText confidence="0.9800708">
For - forward parsing, Back - backward parsing, +FamN
- add family name as feature
Furthermore, it was proved that if we have the in-
formation that a character is a possible character for
family name, it helps to increase the accuracy of the
system, as the last two rows of Table 2 show.
Some person names that could not be extracted
are such as in the sequence “ /a /q /d /d
/a” (Lao Zhang is still very positive). In this ex-
ample, “ ” was extracted as a person name,
however the right name is “ ” only. This is be-
cause the next character of the unknown ones is a
monosyllabic word, thus there is higher possibility
that it is joined with the unknown word as a chunk.
Another example is “ /q /v /n /n” (The
owner Zhang Baojun), where the family name “ ”
has been joined with the known word “ ” (sug-
gest) before it. Therefore, the person name “
was not extracted (the correct segmentation should
be “ /n /nr”).
</bodyText>
<footnote confidence="0.998948666666667">
1the former Prime Minister of Morocco
2Western Cape Attorney General of South Africa in 1998
3Truth Commission Deputy Chairman in 1998
</footnote>
<subsectionHeader confidence="0.992805">
4.2 Organization Name Extraction
</subsectionHeader>
<bodyText confidence="0.998222">
Table 3 shows the result for organization name ex-
traction. Organization names are best extracted by
using backward parsing. This may be explained by
the fact that, in Chinese, the last section of a word
is usually the keyword showing that it is an orga-
nization name, such as, “ ” (company), “ ”
(group), “ ” (organization), etc. By parsing the
sentence backwardly, these keywords will be first
looked at and will have higher possibility to be iden-
tified.
</bodyText>
<tableCaption confidence="0.989984">
Table 3: Results for organization name extraction
</tableCaption>
<table confidence="0.994041666666667">
Recall Precision F-measure
For 54.66 70.85 61.71
Back 63.25 79.36 70.40
</table>
<bodyText confidence="0.974084666666667">
There are quite a number of organization names
that could not be identified. For example, “
” (Xiangfan City Zhida Car Rental
”
(Shanghai Zhuang Mother Jingcaishe Service Lim-
ited Company). This could be because the names
are too long, and the 2 characters left and right con-
text window is not enough for the system to make a
correct judgement.
</bodyText>
<subsectionHeader confidence="0.998906">
4.3 Unknown Words Extraction in General
</subsectionHeader>
<bodyText confidence="0.997077333333333">
As mentioned above, we deleted all words that occur
only once from the dictionary to artificially create
unknown words. Those “unknown words” included
common nouns, verbs, numbers, etc. The results for
this experiment are shown in Table 4.
In general, around 60% accuracy (F-measure) was
achieved for unknown word detection, and back-
ward parsing seems doing slightly better than for-
ward parsing.
</bodyText>
<figure confidence="0.5509734">
”
(Boraine)3, etc.
” (Frank Kahn)2, “
”
Company), “
</figure>
<tableCaption confidence="0.871752">
Table 4: Results for unknown word extraction in
general
</tableCaption>
<table confidence="0.994435">
Recall Precision F-measure
For 56.77 65.28 60.70
Back 58.43 63.82 61.00
</table>
<sectionHeader confidence="0.902673" genericHeader="method">
5 Comparison with Word Based Chunking
</sectionHeader>
<bodyText confidence="0.999857777777778">
As to ensure that character based chunking is better
than word based chunking, we have carried out an
experiment with word based chunking as well.
The results showed that character based chunking
yields better results than word based chunking. The
f-measure ( word based vs character based )
for person name extraction is (81.28 vs 84.69), for
organization name is (67.88 vs 70.40), and for gen-
eral unknown word is (56.96 vs 61.00) respectively.
</bodyText>
<sectionHeader confidence="0.967402" genericHeader="method">
6 Comparison with Other Works
</sectionHeader>
<bodyText confidence="0.999979567567568">
There are basically two methods to extract unknown
words, statistical and rule based approaches. In this
section, we compare our results with previous re-
ported work.
(Chen and Ma, 2002) present an approach that au-
tomatically generates morphological rules and sta-
tistical rules from a training corpus. They use a very
large corpus to generate the rules, therefore the rules
generated can represent patterns of unknwon words
as well. While we use a different corpus for the
experiment, it is difficult to perform a comparison.
They report a precision of 89% and a recall of 68%
for all unknown word types. This is better than our
system which achieves only 65% for precision and
58% for recall.
In (Shen et al., 1997), local statistics information
are used to identify the location of unknown words.
They assume that the frequency of the occurences of
an unknown word is normally high in a fixed cache
size. They have also investigated on the relationship
between the size of the cache and its performance.
They report that the larger the cache, the higher the
recall, but not the case for precision. They report a
recall of 54.9%, less than the 58.43% we achieved.
(Zhang et al., 2002) suggest a method that is
based on role tagging for unknown words recogni-
tion. Their method is also based on Markov Mod-
els. Our method is closest to the role tagging idea as
this latter is also a sort of character based tagging.
The extension in our method is that we first do mor-
phological analysis and then use chunking based on
SVM for unknown word extraction. In their paper,
they report an F-measure of 79.30% in open test en-
vironment for person name extraction. Our method
seems better with an F-measure of 86.78% for per-
son name extraction (for both Chinese and foreign
names).
</bodyText>
<sectionHeader confidence="0.998901" genericHeader="conclusions">
7 Conclusion
</sectionHeader>
<bodyText confidence="0.99997825">
We proposed an “all-purpose” method for Chinese
unknown word detection. Our method is based on
an morphological analysis that generates segmenta-
tions and POS tags using Markov Models, followed
by a chunking based on character features using
Support Vector Machines. We have also shown that
character based features yields better results than
word based features in the chunking process. Our
experiments showed that the proposed method is
able to detect person names and organization names
quite accurately and is also quite satisfactory even
for low frequency unknown words in the corpus.
</bodyText>
<sectionHeader confidence="0.999258" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998391">
Keh-Jiann Chen and Wei-Yun Ma. 2002. Un-
known Word Extraction for Chinese Documents. In
COLING-2002: The 19th International Conference on
Computational Linguistics Vol. 1, pages 169–175.
Taku Kudo and Yuji Matsumoto. 2001. Chunking with
Support Vector Machines. In Proceedings of NAACL
2001.
Yuji Matsumoto, Akira Kitauchi, Tatsuo Yamashita,
Yoshitaka Hirano, Hiroshi Matsuda, Kazuma Takaoka,
and Masayuki Asahara. 2002. Morphological Analy-
sis System ChaSen version 2.2.9 Manual. Nara Insti-
tute of Science and Technology.
Dayang Shen, Maosong Sun and Changning Huang.
1997. The application &amp; implementation of local
statistics in Chinese unknown word identification. In
COLIPS, Vol. 8. (in Chinese).
Kevin Zhang (Hua-Ping Zhang), Qun Liu, Hao Zhang,
and Xue-Qi Cheng. 2002. Automatic Regcognition
of Chinese Unknown Words Based on Roles Tagging.
In Proceedings of 1st SIGHAN Workshop on Chinese
Language Processing.
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.710103">
<title confidence="0.987889">Chinese Unknown Word Identification Using Character-based Tagging and Chunking</title>
<author confidence="0.884917">GOH Chooi Ling</author>
<author confidence="0.884917">Masayuki ASAHARA</author>
<author confidence="0.884917">Yuji MATSUMOTO</author>
<affiliation confidence="0.997993">Graduate School of Information Science Nara Institute of Science and Technology</affiliation>
<email confidence="0.818459">ling-g,masayu-a,matsu@is.aist-nara.ac.jp</email>
<abstract confidence="0.999186153846154">Since written Chinese has no space to delimit words, segmenting Chinese texts becomes an essential task. During this task, the problem of unknown word occurs. It is impossible to register all words in a dictionary as new words can always be created by combining characters. We propose a unified solution to detect unknown words in Chinese texts. First, a morphological analysis is done to obtain initial segmentation and POS tags and then a chunker is used to detect unknown words.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Keh-Jiann Chen</author>
<author>Wei-Yun Ma</author>
</authors>
<title>Unknown Word Extraction for Chinese Documents. In</title>
<date>2002</date>
<booktitle>COLING-2002: The 19th International Conference on Computational Linguistics</booktitle>
<volume>1</volume>
<pages>169--175</pages>
<contexts>
<context position="10799" citStr="Chen and Ma, 2002" startWordPosition="1849" endWordPosition="1852">is better than word based chunking, we have carried out an experiment with word based chunking as well. The results showed that character based chunking yields better results than word based chunking. The f-measure ( word based vs character based ) for person name extraction is (81.28 vs 84.69), for organization name is (67.88 vs 70.40), and for general unknown word is (56.96 vs 61.00) respectively. 6 Comparison with Other Works There are basically two methods to extract unknown words, statistical and rule based approaches. In this section, we compare our results with previous reported work. (Chen and Ma, 2002) present an approach that automatically generates morphological rules and statistical rules from a training corpus. They use a very large corpus to generate the rules, therefore the rules generated can represent patterns of unknwon words as well. While we use a different corpus for the experiment, it is difficult to perform a comparison. They report a precision of 89% and a recall of 68% for all unknown word types. This is better than our system which achieves only 65% for precision and 58% for recall. In (Shen et al., 1997), local statistics information are used to identify the location of un</context>
</contexts>
<marker>Chen, Ma, 2002</marker>
<rawString>Keh-Jiann Chen and Wei-Yun Ma. 2002. Unknown Word Extraction for Chinese Documents. In COLING-2002: The 19th International Conference on Computational Linguistics Vol. 1, pages 169–175.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Taku Kudo</author>
<author>Yuji Matsumoto</author>
</authors>
<title>Chunking with Support Vector Machines.</title>
<date>2001</date>
<booktitle>In Proceedings of NAACL</booktitle>
<contexts>
<context position="4738" citStr="Kudo and Matsumoto, 2001" startWordPosition="783" endWordPosition="786">sitions is shown in Table 1. For example, if a word contains three characters, then the first character is POS -B, the second is POS -I and the third is POS -E. A single character word is tagged as POS -S. Table 1: Position tags in a word Character types can also be used as features for chunking. However, the only information at our disposal is the possibility for a character to be a family name. The set of characters used for transliteration may also be useful for retrieving transliterated names. 2.3 Chunking with Support Vector Machine We use a Support Vector Machines-based chunker, YamCha (Kudo and Matsumoto, 2001), to extract unknown words from the output of the morphological analysis. The chunker uses a polynomial kernel of degree 2. Please refer to the paper cited for details. Basically we would like to classify the characters into 3 categories, B (beginning of a chunk), I (inside a chunk) and O (outside a chunk). A chunk is considered as an unknown word in this case. We can either parse a sentence forwardly, from the beginning of a sentence, or backwardly, from the end of a sentence. There are always some relationships between the unknown words and the their contexts in the sentence. We will use two</context>
</contexts>
<marker>Kudo, Matsumoto, 2001</marker>
<rawString>Taku Kudo and Yuji Matsumoto. 2001. Chunking with Support Vector Machines. In Proceedings of NAACL 2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yuji Matsumoto</author>
<author>Akira Kitauchi</author>
<author>Tatsuo Yamashita</author>
<author>Yoshitaka Hirano</author>
<author>Hiroshi Matsuda</author>
<author>Kazuma Takaoka</author>
<author>Masayuki Asahara</author>
</authors>
<date>2002</date>
<journal>Morphological Analysis System ChaSen version</journal>
<volume>2</volume>
<institution>Manual. Nara Institute of Science and Technology.</institution>
<contexts>
<context position="2846" citStr="Matsumoto et al., 2002" startWordPosition="455" endWordPosition="458"> word detection method which will extract person names, organization names and low frequency words in the corpus. We will treat low frequency words as general unknown words in our experiments. First, we segment and assign POS tags to words in the text using a morphological analyzer. Second, we break segmented words into characters, and assign each character its features. At last, we use a SVM-based chunker to extract the unknown words. 2 Proposed Method We shall now describe the 3 steps successively. 2.1 Morphological Analysis ChaSen is a widely used morphological analyzer for Japanese texts (Matsumoto et al., 2002). It achieves over 97% precision for newspaper articles. We assume that Chinese language has similar characteristics with Japanese language to a certain extent, as both languages share semantically heavily loaded characters, i.e. kanji for Japanese, hanzi for Chinese. Based on this assumption, a model for Japanese may do well enough on Chinese. This morphological analyzer is based on Hidden Markov Models. The target is to find the word and POS sequence that maximize the probability. The details can be found in (Matsumoto et al., 2002). 2.2 Character Based Features Character based features allo</context>
</contexts>
<marker>Matsumoto, Kitauchi, Yamashita, Hirano, Matsuda, Takaoka, Asahara, 2002</marker>
<rawString>Yuji Matsumoto, Akira Kitauchi, Tatsuo Yamashita, Yoshitaka Hirano, Hiroshi Matsuda, Kazuma Takaoka, and Masayuki Asahara. 2002. Morphological Analysis System ChaSen version 2.2.9 Manual. Nara Institute of Science and Technology.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dayang Shen</author>
</authors>
<title>Maosong Sun and Changning Huang.</title>
<date>1997</date>
<booktitle>In COLIPS,</booktitle>
<volume>8</volume>
<note>(in Chinese).</note>
<marker>Shen, 1997</marker>
<rawString>Dayang Shen, Maosong Sun and Changning Huang. 1997. The application &amp; implementation of local statistics in Chinese unknown word identification. In COLIPS, Vol. 8. (in Chinese).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Qun Liu</author>
<author>Hao Zhang</author>
<author>Xue-Qi Cheng</author>
</authors>
<title>Automatic Regcognition of Chinese Unknown Words Based on Roles Tagging.</title>
<date>2002</date>
<booktitle>In Proceedings of 1st SIGHAN Workshop on Chinese Language Processing.</booktitle>
<marker>Liu, Zhang, Cheng, 2002</marker>
<rawString>Kevin Zhang (Hua-Ping Zhang), Qun Liu, Hao Zhang, and Xue-Qi Cheng. 2002. Automatic Regcognition of Chinese Unknown Words Based on Roles Tagging. In Proceedings of 1st SIGHAN Workshop on Chinese Language Processing.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>