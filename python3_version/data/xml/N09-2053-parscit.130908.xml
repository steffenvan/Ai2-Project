<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001153">
<title confidence="0.996424">
Language Specific Issue and Feature Exploration in
Chinese Event Extraction
</title>
<author confidence="0.999624">
Zheng Chen Heng Ji
</author>
<affiliation confidence="0.994893333333333">
Department of Computer Science
The Graduate Center Queens College and The Graduate Center
The City University of New York
</affiliation>
<address confidence="0.756788">
365 Fifth Avenue, New York, NY 10016, USA
</address>
<email confidence="0.998993">
zchen1@gc.cuny.edu hengji@cs.qc.cuny.edu
</email>
<sectionHeader confidence="0.993889" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.9993146">
In this paper, we present a Chinese event ex-
traction system. We point out a language spe-
cific issue in Chinese trigger labeling, and
then commit to discussing the contributions of
lexical, syntactic and semantic features ap-
plied in trigger labeling and argument labeling.
As a result, we achieved competitive perform-
ance, specifically, F-measure of 59.9 in trigger
labeling and F-measure of 43.8 in argument
labeling.
</bodyText>
<sectionHeader confidence="0.998799" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998009">
In this paper we address the event extraction task
defined in Automatic Content Extraction (ACE)1
program. The ACE program defines the following
terminology for event extraction task:
</bodyText>
<listItem confidence="0.9562835">
• Trigger: the word that most clearly expresses
an event’s occurrence
• Argument: an entity, or a temporal expression
or a value that plays a certain role in the event
instance
• Event mention: a phrase or sentence with a
distinguished trigger and participant argu-
ments
</listItem>
<bodyText confidence="0.999178222222222">
Some English event extraction systems based on
supervised learning have been reported by re-
searchers (Ahn, 2006; Ji and Grishman, 2008). In
this paper we developed a modularized Chinese
event extraction system. We nicely handled the
language specific issue in trigger labeling and ex-
plored effective lexical, syntactic and semantic
features that were applied in trigger labeling and
argument labeling. Tan et al. (2008) addressed the
</bodyText>
<footnote confidence="0.841656">
1 http://www.nist.gov/speech/tests/ace/
</footnote>
<bodyText confidence="0.999254272727273">
same task as we did in this paper. However, to our
knowledge, the language specific issue and feature
contributions for Chinese event extraction have not
been reported by earlier researchers.
The remainder of the paper is organized as fol-
lows. Section 2 points out a language specific issue
in Chinese trigger labeling and discusses two
strategies of trigger labeling: word-based and char-
acter-based. Section 3 presents argument labeling.
Section 4 discusses the experimental results. Sec-
tion 5 concludes the paper.
</bodyText>
<sectionHeader confidence="0.929094" genericHeader="method">
2 Trigger Labeling
</sectionHeader>
<bodyText confidence="0.9989965">
We split trigger labeling into two steps: 1) trigger
identification: to recognize the event trigger 2)
trigger classification: to assign an event type for
the trigger. The two strategies we will discuss in
trigger labeling (word-based and character-based)
only differ in the first step.
</bodyText>
<subsectionHeader confidence="0.997562">
2.1 A Language-Specific Issue
</subsectionHeader>
<bodyText confidence="0.999914058823529">
Chinese, and some other languages, e.g., Japanese
do not have delimiters between words. Thus, seg-
mentation is usually an indispensible step for fur-
ther processing, e.g., Part-of-Speech tagging,
parsing, etc. However, the segmentation may cause
a problem in some tasks, e.g., name entity recogni-
tion (Jing et al., 2003) and event trigger identifica-
tion. For a specific example, “击毙” (shoot and kill)
is segmented as a Chinese word. However, there
are two triggers in the word, one is “击”(shoot)
with the event type of Attack, and the other is
“毙”(kill) with the event type of Die. The trigger
may also cross two or more words, e.g., the trigger
is “ 公 开 信 ” (public letter) which crosses two
words, “公开” (public) and “信”(letter).
In the ACE Chinese corpus, 2902 triggers ex-
actly one-to-one match their corresponding words,
</bodyText>
<page confidence="0.984366">
209
</page>
<note confidence="0.358095">
Proceedings of NAACL HLT 2009: Short Papers, pages 209–212,
Boulder, Colorado, June 2009. c�2009 Association for Computational Linguistics
</note>
<bodyText confidence="0.999871">
meanwhile, 431 triggers are inconsistent with the
words (either within the word, or across words).
The inconsistency rate is as high as 13%.
We then discuss two strategies of trigger label-
ing, one is word-based in which we use a global
errata table to alleviate the inconsistency problem,
and the other is character-based which solves the
inconsistency problem.
</bodyText>
<subsectionHeader confidence="0.999823">
2.2 Word-based Trigger Labeling
</subsectionHeader>
<bodyText confidence="0.999994333333333">
We apply Maximum-Entropy based classifiers for
trigger identification and trigger classification.
The two classifiers share the same set of features:
</bodyText>
<listItem confidence="0.831361052631579">
• Lexical features: word, POS of the word, pre-
vious word + word, word + next word, previous
POS + POS, and POS + next POS.
• Syntactic features: 1) depth: the depth of the
trigger in the parse tree 2) path to root: the path
from the leaf node of the trigger to the root in the
parse tree 3) sub-categorization : the phrase struc-
ture expanded by the father of the trigger 4)
phrase type: the phrase type of the trigger
• Semantic dictionaries: 1) predicate existence:
a boolean value indicating the existence of trigger
in a predicate list which is produced from Chi-
nese Propbank (Xue and Palmer, 2008) 2) syno-
nym entry: the entry number of the trigger in a
Chinese synonym dictionary
• Nearest entity information: 1) the entity type
of the syntactically nearest entity to the trigger in
the parse tree 2) the entity type of the physically
nearest entity to the trigger in the sentence
</listItem>
<bodyText confidence="0.9999605">
To deal with the language-specific issue in trig-
ger identification, we construct a global errata table
to record the inconsistencies existing in the train-
ing set. In the test procedure, if the scanned word
has an entry in the errata table, we select the possi-
ble triggers in the entry as candidate triggers.
</bodyText>
<subsectionHeader confidence="0.999809">
2.3 Character-based Trigger Labeling
</subsectionHeader>
<bodyText confidence="0.999948428571429">
Although the error table significantly helps to re-
duce segmentation inconsistencies, it is not a per-
fect solution since it only recognizes the
inconsistencies existing in the training data.
To take a further step we build a separate char-
acter-based trigger identification classifier for
comparison. We use a MEMM (Maximum En-
tropy Markov Model) to label each character with
a tag indicating whether it is out of the trigger (O),
or is the beginning of the trigger (B) or is a part of
the trigger except the beginning (I). Our MEMM
classifier performs sequential classification by as-
signing each character one of the three tags. We
then apply Viterbi algorithm to decode the tag se-
quence and identify the triggers in the sequence.
Features used in our MEMM classifier include:
the character, previous character, next character,
previous tag and word-based features that the char-
acter carries. We apply the same set of features for
trigger classification as used in word-based trigger
labeling.
</bodyText>
<sectionHeader confidence="0.952739" genericHeader="method">
3 Argument Labeling
</sectionHeader>
<bodyText confidence="0.998557142857143">
We also split argument labeling into two steps: 1)
argument identification: to recognize an entity or a
temporal expression or a value as an argument 2)
role classification: to assign a role to the argument.
We apply Maximum-Entropy based classifiers for
the two steps and they share the same set of fea-
tures:
</bodyText>
<listItem confidence="0.862861125">
• Basic features: trigger, event subtype of the
event mention, type of the ACE entity mention,
head word of the entity mention, combined value
of event subtype and head word, combined value
of event subtype and entity subtype.
• Neighbor words: 1) left neighbor word of the
entity, temporal expression, or value 2) right
neighbor word of the entity, temporal expression,
or value
• Syntactic features: 1) sub-categorization: the
phrase structure expanding the parent of the trig-
ger 2) position: the relative position of the entity
regarding to the trigger (before or after) 3) path:
the minimal path from the entity to the trigger 4)
distance: the shortest length from the entity to the
trigger in the parse tree
</listItem>
<sectionHeader confidence="0.999488" genericHeader="method">
4 Experimental Results
</sectionHeader>
<subsectionHeader confidence="0.998735">
4.1 Data and Scoring Metric
</subsectionHeader>
<bodyText confidence="0.999976090909091">
We used 2005 ACE training corpus for our ex-
periments. The corpus contains 633 Chinese docu-
ments. In this paper we follow the setting of ACE
diagnostic tasks and use the ground truth entities,
times and values for our training and testing.
We randomly selected 558 documents as train-
ing set and 66 documents as test set. For the train-
ing set, we reserved 33 documents as development
set.
We define the following standards to determine
the correctness of an event mention:
</bodyText>
<page confidence="0.993688">
210
</page>
<listItem confidence="0.9925372">
• A trigger is correctly labeled if its event type
and offsets exactly match a reference trigger.
• An argument is correctly labeled if its event
type, offsets, and role match the reference argu-
ment mention.
</listItem>
<subsectionHeader confidence="0.991985">
4.2 Overall System Performance
</subsectionHeader>
<bodyText confidence="0.999924909090909">
Table 1 shows the overall Precision (P), Recall (R)
and F-Measure (F) scores of our baseline system
(word-based system with only lexical features in
trigger labeling and basic features in argument la-
beling), word-based system with full integrated
features and character-based system with full inte-
grated features.
Comparing to the Chinese event extraction sys-
tem reported by (Tan et al., 2008), our scores are
much lower. However, we argue that we apply
much more strict evaluation metrics.
</bodyText>
<subsectionHeader confidence="0.9970495">
4.3 Comparison between Word-based and
Character-based Trigger Labeling
</subsectionHeader>
<bodyText confidence="0.999911">
Table 1 lists the comparison results between char-
acter-based and word-based trigger labeling. It in-
dicates that the character-based method
outperforms the word-based method, mostly due to
the better performance in the step of trigger identi-
fication (3.3% improvement in F-Measure) with
precision as high as 82.4% (14.3% improvement),
and a little loss in recall (2.1%).
</bodyText>
<subsectionHeader confidence="0.453606">
4.4 Feature Contributions for Trigger Label-
ing
</subsectionHeader>
<bodyText confidence="0.9582665">
Table 2 presents the feature contributions for
word-based trigger labeling, and we observe simi-
lar feature contributions for character-based since
it only differs from word-based in trigger identifi-
cation and works similarly in trigger classification
(we omit the results here). Table 2 shows that
maintaining an errata table is an effective strategy
for word-based trigger identification and diction-
ary resources improve the performance.
It is worth noting that the performance drops
when integrating the syntactic features. Our expla-
nation might be that the trigger, unlike the predi-
cate in the semantic role labeling task, can not only
be a verb, but also can be a noun or other types.
Thus the syntactic position for the trigger in the
parse tree is much more flexible than the predicate
in Semantic Role Labeling. For this reason, syntac-
tic features are not so discriminative in trigger la-
beling. Furthermore, the syntactic features cannot
discriminate the word senses of a candidate trigger.
In the following example,
S1:运动员 正在 进入 球场 准备 即将 到来 的 球赛
The players are entering the stadium to prepare for
the coming game.
</bodyText>
<equation confidence="0.658317">
S2:很多 农产品 还 没有 进入 市场 就 腐烂。
</equation>
<bodyText confidence="0.9215918">
Many farm products have been rotted before entering
the market.
The word “进入” (entering) indicates a “Trans-
port” event in sentence 1 but not in sentence 2. The
phrase structures around the word “进入” in both
sentences are exactly the same (VPÆVP-NP).
However, if an entity of “PERSON” appears ahead
of “进入”, the word “进入” is much more likely to
be a trigger. Hence the features of nearby entity
information could be effective.
</bodyText>
<subsectionHeader confidence="0.804584">
4.5 Feature Contributions for Argument La-
beling
</subsectionHeader>
<bodyText confidence="0.9999564">
Table 3 shows feature contributions for argument
labeling after word-based trigger labeling and we
also observe the same feature contributions for ar-
gument labeling after character-based trigger label-
ing (results are omitted). It shows that the two
neighbor word features are fairly effective. We
observe that in some patterns of event description,
the left word is informative to tell the followed
entity mention is an argument. For example, “被
[Entity]打死”(killed by [Entity]) is a common pat-
tern to describe an attack event, and the left
neighbor word of the entity “被” (by) can strongly
imply that the entity is an argument with a role of
“Attacker”. Meanwhile, the right word can help
reduce the spurious arguments. For example, in the
Chinese “的” (of) structure, the word “的” (of)
strongly suggests that the entity on the left side of
“的” is not an argument.
The sub-categorization feature contributes little
since it is a feature shared by all the arguments in
the parse tree. Table 3 also shows that Path and
Distance are two effective features. It is obvious
that in the parse tree, each argument attached to the
trigger is in a certain syntactic configuration. For
example, the path “NP ↑ VP ↓ VV” implies that it
might be a Subject-Verb structure and thus the en-
tity in NP is highly likely to be an argument of the
trigger (VV). The Position feature is helpful to dis-
criminate argument roles in syntactically identical
structure, e.g., “Subject Verb Object” structure.
</bodyText>
<page confidence="0.993758">
211
</page>
<table confidence="0.999281166666667">
Performance Trigger Identification Trigger Labeling Argument Argument Labeling
System Identification
P R F P R F P R F P R F
Baseline 61.0 50.0 54.9 58.7 48.2 52.9 49.5 38.2 43.1 44.6 34.4 38.9
Word-based 68.1 52.7 59.4 65.7 50.9 57.4 56.1 38.2 45.4 53.1 36.2 43.1
Character-based 82.4 50.6 62.7 78.8 48.3 59.9 64.4 36.4 46.5 60.6 34.3 43.8
</table>
<tableCaption confidence="0.990782">
Table 1. Overall system performance (%)
</tableCaption>
<table confidence="0.999701714285714">
Trigger Identification Trigger Labeling
P R F P R F
Lexical features : (1) 61.0 50.0 54.9 58.7 48.2 52.9
(1) + Errata table: (2) 64.0 52.0 57.4 61.3 49.8 54.9
(2) + Dictionaries: (3) 64.9 53.5 58.6 62.7 51.6 56.6
(3)+ Syntactic features: (4) 64.3 51.8 57.4 60.6 48.9 54.1
(3) + Entity information: (5) 68.1 52.7 59.4 65.7 50.9 57.4
</table>
<tableCaption confidence="0.993782">
Table 2. Feature contributions for word-based trigger labeling (%)
</tableCaption>
<table confidence="0.999926916666667">
Argument Identification Argument Labeling
P R F P R F
Basic feature set: (1) 40.5 32.8 36.2 37.7 30.5 33.7
(1)+Left word: (2) 45.2 35.4 39.7 41.6 32.5 36.5
(1)+Right word: (3) 47.7 35.6 40.8 44.1 32.9 37.7
Feature set 2: (2)+(3) 49.0 35.7 41.3 46.1 33.6 38.9
(1)+Sub-categorization: (4) 41.9 33.1 37.0 38.7 30.5 34.1
(1)+Path: (5) 46.6 36.2 40.7 43.4 33.7 38.0
(1)+Distance: (6) 49.5 37.0 42.3 45.0 33.6 38.5
(1)+Position:(7) 43.8 35.3 39.1 41.0 33.1 36.6
Feature set 3 (from 4 to 7) 56.2 36.1 43.9 51.2 32.9 40.0
Total 56.1 38.2 45.4 53.1 36.2 43.1
</table>
<tableCaption confidence="0.999008">
Table 3. Feature contributions for argument labeling after word-based trigger labeling (%)
</tableCaption>
<sectionHeader confidence="0.995988" genericHeader="conclusions">
5 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999954272727273">
In this paper, we took a close look at language spe-
cific issue in Chinese event extraction and ex-
plored effective features for Chinese event
extraction task. All our work contributes to setting
up a high performance Chinese event extraction
system.
For future work, we intend to explore an ap-
proach to conducting cross-lingual event extraction
and investigate whether the cross-lingual inference
can bootstrap either side when running two lan-
guage event extraction systems in parallel.
</bodyText>
<sectionHeader confidence="0.999142" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.7080204">
This material is based upon work supported by the
Defense Advanced Research Projects Agency un-
der Contract No. HR0011-06-C-0023 via 27-
001022, and the CUNY Research Enhancement
Program and GRTI Program.
</bodyText>
<sectionHeader confidence="0.975032" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998504611111111">
D. Ahn. 2006. The stages of event extraction. Proc.
COLING/ACL 2006 Workshop on Annotating and
Reasoning about Time and Events. Sydney, Austra-
lia.
H. Ji and R. Grishman. 2008. Refining Event Extraction
Through Cross-document Inference. Proc. ACL
2008. Ohio, USA.
H. Jing, R. Florian, X. Luo, T. Zhang, and A. Ittyche-
riah. 2003. HowtogetaChineseName(Entity): Seg-
mentation and combination issues. Proc. EMNLP
2003.
H. Tan; T. Zhao; J. Zheng. 2008. Identification of Chi-
nese Event and Their Argument Roles. Proc. of the
2008 IEEE 8th International Conference on Com-
puter and Information Technology Workshops.
N. Xue and M. Palmer. 2008. Adding Semantic Role to
the Chinese Treebank. Natural Language Engineer-
ing. Combridge University Press.
</reference>
<page confidence="0.998498">
212
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.422501">
<title confidence="0.995744">Language Specific Issue and Feature Exploration Chinese Event Extraction</title>
<author confidence="0.999945">Zheng Chen Heng Ji</author>
<affiliation confidence="0.9578815">Department of Computer Science The Graduate Center Queens College and The Graduate</affiliation>
<address confidence="0.7423415">The City University of New York 365 Fifth Avenue, New York, NY 10016, USA</address>
<email confidence="0.998173">zchen1@gc.cuny.eduhengji@cs.qc.cuny.edu</email>
<abstract confidence="0.993064454545455">In this paper, we present a Chinese event extraction system. We point out a language specific issue in Chinese trigger labeling, and then commit to discussing the contributions of lexical, syntactic and semantic features applied in trigger labeling and argument labeling. As a result, we achieved competitive performance, specifically, F-measure of 59.9 in trigger labeling and F-measure of 43.8 in argument labeling.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>D Ahn</author>
</authors>
<title>The stages of event extraction.</title>
<date>2006</date>
<booktitle>Proc. COLING/ACL 2006 Workshop on Annotating and Reasoning about Time and Events.</booktitle>
<location>Sydney, Australia.</location>
<contexts>
<context position="1307" citStr="Ahn, 2006" startWordPosition="200" endWordPosition="201">f 43.8 in argument labeling. 1 Introduction In this paper we address the event extraction task defined in Automatic Content Extraction (ACE)1 program. The ACE program defines the following terminology for event extraction task: • Trigger: the word that most clearly expresses an event’s occurrence • Argument: an entity, or a temporal expression or a value that plays a certain role in the event instance • Event mention: a phrase or sentence with a distinguished trigger and participant arguments Some English event extraction systems based on supervised learning have been reported by researchers (Ahn, 2006; Ji and Grishman, 2008). In this paper we developed a modularized Chinese event extraction system. We nicely handled the language specific issue in trigger labeling and explored effective lexical, syntactic and semantic features that were applied in trigger labeling and argument labeling. Tan et al. (2008) addressed the 1 http://www.nist.gov/speech/tests/ace/ same task as we did in this paper. However, to our knowledge, the language specific issue and feature contributions for Chinese event extraction have not been reported by earlier researchers. The remainder of the paper is organized as fo</context>
</contexts>
<marker>Ahn, 2006</marker>
<rawString>D. Ahn. 2006. The stages of event extraction. Proc. COLING/ACL 2006 Workshop on Annotating and Reasoning about Time and Events. Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Ji</author>
<author>R Grishman</author>
</authors>
<title>Refining Event Extraction Through Cross-document Inference.</title>
<date>2008</date>
<booktitle>Proc. ACL</booktitle>
<location>Ohio, USA.</location>
<contexts>
<context position="1331" citStr="Ji and Grishman, 2008" startWordPosition="202" endWordPosition="205">rgument labeling. 1 Introduction In this paper we address the event extraction task defined in Automatic Content Extraction (ACE)1 program. The ACE program defines the following terminology for event extraction task: • Trigger: the word that most clearly expresses an event’s occurrence • Argument: an entity, or a temporal expression or a value that plays a certain role in the event instance • Event mention: a phrase or sentence with a distinguished trigger and participant arguments Some English event extraction systems based on supervised learning have been reported by researchers (Ahn, 2006; Ji and Grishman, 2008). In this paper we developed a modularized Chinese event extraction system. We nicely handled the language specific issue in trigger labeling and explored effective lexical, syntactic and semantic features that were applied in trigger labeling and argument labeling. Tan et al. (2008) addressed the 1 http://www.nist.gov/speech/tests/ace/ same task as we did in this paper. However, to our knowledge, the language specific issue and feature contributions for Chinese event extraction have not been reported by earlier researchers. The remainder of the paper is organized as follows. Section 2 points </context>
</contexts>
<marker>Ji, Grishman, 2008</marker>
<rawString>H. Ji and R. Grishman. 2008. Refining Event Extraction Through Cross-document Inference. Proc. ACL 2008. Ohio, USA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Jing</author>
<author>R Florian</author>
<author>X Luo</author>
<author>T Zhang</author>
<author>A Ittycheriah</author>
</authors>
<title>HowtogetaChineseName(Entity): Segmentation and combination issues.</title>
<date>2003</date>
<booktitle>Proc. EMNLP</booktitle>
<contexts>
<context position="2840" citStr="Jing et al., 2003" startWordPosition="429" endWordPosition="432">labeling into two steps: 1) trigger identification: to recognize the event trigger 2) trigger classification: to assign an event type for the trigger. The two strategies we will discuss in trigger labeling (word-based and character-based) only differ in the first step. 2.1 A Language-Specific Issue Chinese, and some other languages, e.g., Japanese do not have delimiters between words. Thus, segmentation is usually an indispensible step for further processing, e.g., Part-of-Speech tagging, parsing, etc. However, the segmentation may cause a problem in some tasks, e.g., name entity recognition (Jing et al., 2003) and event trigger identification. For a specific example, “击毙” (shoot and kill) is segmented as a Chinese word. However, there are two triggers in the word, one is “击”(shoot) with the event type of Attack, and the other is “毙”(kill) with the event type of Die. The trigger may also cross two or more words, e.g., the trigger is “ 公 开 信 ” (public letter) which crosses two words, “公开” (public) and “信”(letter). In the ACE Chinese corpus, 2902 triggers exactly one-to-one match their corresponding words, 209 Proceedings of NAACL HLT 2009: Short Papers, pages 209–212, Boulder, Colorado, June 2009. c�</context>
</contexts>
<marker>Jing, Florian, Luo, Zhang, Ittycheriah, 2003</marker>
<rawString>H. Jing, R. Florian, X. Luo, T. Zhang, and A. Ittycheriah. 2003. HowtogetaChineseName(Entity): Segmentation and combination issues. Proc. EMNLP 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Tan</author>
<author>T Zhao</author>
<author>J Zheng</author>
</authors>
<title>Identification of Chinese Event and Their Argument Roles.</title>
<date>2008</date>
<booktitle>Proc. of the 2008 IEEE 8th International Conference on Computer and Information Technology Workshops.</booktitle>
<contexts>
<context position="1615" citStr="Tan et al. (2008)" startWordPosition="245" endWordPosition="248">Argument: an entity, or a temporal expression or a value that plays a certain role in the event instance • Event mention: a phrase or sentence with a distinguished trigger and participant arguments Some English event extraction systems based on supervised learning have been reported by researchers (Ahn, 2006; Ji and Grishman, 2008). In this paper we developed a modularized Chinese event extraction system. We nicely handled the language specific issue in trigger labeling and explored effective lexical, syntactic and semantic features that were applied in trigger labeling and argument labeling. Tan et al. (2008) addressed the 1 http://www.nist.gov/speech/tests/ace/ same task as we did in this paper. However, to our knowledge, the language specific issue and feature contributions for Chinese event extraction have not been reported by earlier researchers. The remainder of the paper is organized as follows. Section 2 points out a language specific issue in Chinese trigger labeling and discusses two strategies of trigger labeling: word-based and character-based. Section 3 presents argument labeling. Section 4 discusses the experimental results. Section 5 concludes the paper. 2 Trigger Labeling We split t</context>
<context position="8454" citStr="Tan et al., 2008" startWordPosition="1367" endWordPosition="1370">correctly labeled if its event type and offsets exactly match a reference trigger. • An argument is correctly labeled if its event type, offsets, and role match the reference argument mention. 4.2 Overall System Performance Table 1 shows the overall Precision (P), Recall (R) and F-Measure (F) scores of our baseline system (word-based system with only lexical features in trigger labeling and basic features in argument labeling), word-based system with full integrated features and character-based system with full integrated features. Comparing to the Chinese event extraction system reported by (Tan et al., 2008), our scores are much lower. However, we argue that we apply much more strict evaluation metrics. 4.3 Comparison between Word-based and Character-based Trigger Labeling Table 1 lists the comparison results between character-based and word-based trigger labeling. It indicates that the character-based method outperforms the word-based method, mostly due to the better performance in the step of trigger identification (3.3% improvement in F-Measure) with precision as high as 82.4% (14.3% improvement), and a little loss in recall (2.1%). 4.4 Feature Contributions for Trigger Labeling Table 2 presen</context>
</contexts>
<marker>Tan, Zhao, Zheng, 2008</marker>
<rawString>H. Tan; T. Zhao; J. Zheng. 2008. Identification of Chinese Event and Their Argument Roles. Proc. of the 2008 IEEE 8th International Conference on Computer and Information Technology Workshops.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Xue</author>
<author>M Palmer</author>
</authors>
<title>Adding Semantic Role to the Chinese Treebank. Natural Language Engineering.</title>
<date>2008</date>
<publisher>Combridge University Press.</publisher>
<contexts>
<context position="4632" citStr="Xue and Palmer, 2008" startWordPosition="731" endWordPosition="734">me set of features: • Lexical features: word, POS of the word, previous word + word, word + next word, previous POS + POS, and POS + next POS. • Syntactic features: 1) depth: the depth of the trigger in the parse tree 2) path to root: the path from the leaf node of the trigger to the root in the parse tree 3) sub-categorization : the phrase structure expanded by the father of the trigger 4) phrase type: the phrase type of the trigger • Semantic dictionaries: 1) predicate existence: a boolean value indicating the existence of trigger in a predicate list which is produced from Chinese Propbank (Xue and Palmer, 2008) 2) synonym entry: the entry number of the trigger in a Chinese synonym dictionary • Nearest entity information: 1) the entity type of the syntactically nearest entity to the trigger in the parse tree 2) the entity type of the physically nearest entity to the trigger in the sentence To deal with the language-specific issue in trigger identification, we construct a global errata table to record the inconsistencies existing in the training set. In the test procedure, if the scanned word has an entry in the errata table, we select the possible triggers in the entry as candidate triggers. 2.3 Char</context>
</contexts>
<marker>Xue, Palmer, 2008</marker>
<rawString>N. Xue and M. Palmer. 2008. Adding Semantic Role to the Chinese Treebank. Natural Language Engineering. Combridge University Press.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>