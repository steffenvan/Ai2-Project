<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000002">
<sectionHeader confidence="0.904926" genericHeader="abstract">
INDEXING AND REFERENTIAL DEPENDENCIES WITHIN BINDING THEORY: A
COMPUTATIONAL FRAMEWORK
</sectionHeader>
<bodyText confidence="0.908257214285714">
Fabio Pianesi
Istituto per la Ricerca Scientifica e Tecnologica
38050, Pante&apos; di Povo - Trento - Italy
pianesi@irst.it
ABSTRACT
This work is concerned with the development of
instruments for GB parsing. An alternative to the
well known indexation system of (Chomsky,
1981) will be proposed and then used to formalize
the view of Binding Theory in terms of the
generation of constraints on the referential
properties of the NPs of a sentence. Finally the
problems of verification and satisfiability of BT
will be addressed within the proposed framework.
</bodyText>
<sectionHeader confidence="0.993078" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999973310344828">
This work is concerned with the development of
instruments for GB parsing (see Barton, (1984);
Berwick (1987); Kolb &amp; Tiersch, (1990)); in
particular, our attention will be focused on the
Binding Theory (henceforth, BT) a module of the
theory of Government and Binding (henceforth,
GB; see Chomsky (1981; 1986)). It has been
pointed out (eg. in Kolb &amp; Tiersch, (1990)) that
the lack of a complete and coherent formalization
of a linguistic theory like GB can be a major
obstacle in addressing the issue of principle-based
parsing; this is true of BT too, in particular with
respect to the indexing system of Chomsky (1981),
the shortcomings of which have often been pointed
out in the literature. A formalism for the treatment
of the referential relationships among the NPs of a
sentence will be presented that is more expressive
than indexation and more effective as a
computational tool.
In Section 2 the indexing system and the role it
plays within BT will be discussed; in Section 3, an
alternative will be developed that overcomes some
of the shortcomings of indexing. Such a system
will, then, be used to formalize the view of BT as a
device that generates (syntactic) constraints on
reference. In Section 4, it will be shown how our
proposal could be applied to some computational
problems, i.e. the problems of verification and
satisfiability within BT.
</bodyText>
<sectionHeader confidence="0.931759" genericHeader="method">
2 Preliminaries
</sectionHeader>
<bodyText confidence="0.993268715789474">
Since Chomsky (1981), it has become
commonplace to denote the interpretative relations
among the NPs of a sentence by means of indices,
i.e. integers attached to NPs in such a way that
elements bearing the same index are taken to denote
the same object(s), while different indices
correspond to different denotations; most of the
statements of BT have been laid down in terms of
this system (Chomsky, 1981, 1986). In a number
of works (see Chomsky (1981), Higginbotham
(1983) and Lasnik &amp; Uriagereka (1988)), however,
it has been pointed out that the indexing device is
not adequate to capture certain referential relations;
this is true for the relation between pronouns and
split antecedents, i.e. antecedents composed of two
or more arguments bearing different thematic
roles.I Furthermore, indices blur the distinction
between coindexing under c-command and
coindexing without c-command, thereby making it
difficult to capture the dependence of an element,
behaving like a variable, upon its antecedent (see
Reinhart, (1983)).2 The replacement of indices with
index sets has been proposed as a way to address
the first problem (see Higginbotham, (1983)): an
ordinary index is substituted by a singleton; when
there are pluralities, e.g. when an NP is coindexed
with a split antecedent, it is annotated with the
(set) union of the index sets of each component of
the plurality; therefore, coindexing amounts to
equating index sets. In this view, the ordinary
conditions on disjoint reference (Principles B and C
of BT) must be extended to avoid not only identical
reference but, more generally, reference
intersection. It has also been argued
(Higginbotham, 1983) that indices should be
abandoned and substituted by the non symmetric
relation of linking; when the antecedent is split, a
plurality of links should be used. This way,
however, two different situations are collapsed
together: the one in which an item is coindexed
with a plurality of elements all of which share the
same index, and the case of true split antecedents,
where the elements composing the antecedent do
not have the same index. Furthermore, the
asymmetric behaviour of linking has no clear
correlate at the structural level; it will be suggested
below that c-command should continue to play a
role here.
Computational works about BT have been
mainly concerned with providing lists of possible
or impossible antecedents for the NPs of a sentence
(see Correa (1988); Ingria &amp; Stallard (1989));
additional procedures select actual antecedents
IR-expressions can take split antecedents too, at least in
certain cases (epithets); however, we will not explicitly
address this point here. Anaphors, instead, can never take
split antecedents.
4There is a full range of phenomena for which such a
distinction seems crucial, eg. weak crossover and sloppy
reading of pronouns (Reinhart, 1983); donkey sentences and
the so called indirect binding (Haik, 1984; Reinhart, 1987).
However, only few of them will be addressed here.
- 39 -
among the potential ones. Berwick (1989)
considers only R-expressions and a device (actually,
a Turing machine) assigning the same index to
multiple occurences of the same R-expression
(names); furthermore, a set of disjoint indices is
associated with each item. Finally, Fong (1990)
performs a combinatorial analysis of the paradigm
of free indexation, as proposed in (Chomsky,
1981); he shows that free indexation gives rise to
an exponential number of alternatives and argues
for the necessity of interleaving indexing and
structure computation. In any case, indexing has
been either explicitly or implicitly assumed, so
that most of the computational approaches to BT
suffer the same shortcomings pointed out above. In
particular, given that both split antecedents and the
distinction between binding and coreference cannot
be easily accounted for, this results in an
impoverished input being provided to the semantic
(intepretative) routine.
In the following section a formal system will be
discussed that tries to address such problems by
explicitly distinguishing between binding and
coreference; at the same time, BT will be seen as a
theory that states very general constraints
(constraint schemata), which are then (at least in
part) instantiated according to the structural
properties of the sentence at hand. These
instantiated constraints are then used to test sets of
positive specifications (indexations) which
constitute the input to further semantic
processing.3
</bodyText>
<sectionHeader confidence="0.929659" genericHeader="method">
3 The formal apparatus
</sectionHeader>
<bodyText confidence="0.99825175">
For a given sentence w, let N=(ni, n2, ..., nm) be
the set of its NPs; furthermore let us indicate with
A, P and R the subset of N whose members are
anaphors, pronouns and R-expressions,
respectively. Sets A, P. R, constitute a partition of
set N. Finally, Q denotes the set of quantified
expressions and syntactic variables. Split
antecedents will be considered as members of the
power set of N, P(N); for the sake of uniformity,
single NPs will be denoted by members of P(N)
with cardinality equal to one, i.e. by singletons.
Definition 1 A relation s C(P(N)xP(N)) is
defined such that (0 111)E s iff 0=(m), vf=fni, ,
npl,p&gt;1 and ME ty.
For any 0=(n), neN, sets 91(n), B(n) and an) will
denote the set of elements that c-command n and lie
</bodyText>
<subsectionHeader confidence="0.517139">
3Disjoint reference constraints arising from Principles B and
</subsectionHeader>
<bodyText confidence="0.977265307692308">
C of BT are not carried over to semantic routines but are
resolved at an earlier stage. Furthermore, it is assumed that,
whatever processing the semantic routines perform, their
default behaviour consists of assigning non-sharing semantic
import to different NPs, unless otherwise stated in the input
constraint set.
inside its binding domain whenever, respectively,
ne A, neP or neR; finally, if n is a pronoun D(n)
will denote the set of NPs c-commanding it and
lying outside its binding domain. 4
Definition 2 Given a sentence w, a relation
b c (P(N)xP(N)) is defined, such that (0 w)eb iff
one of the following conditions obtains:
</bodyText>
<listItem confidence="0.9128085">
(i) 0=inj,nieA , ty=ini) and nieNni);
(ii) nieP, , and nieD(ny.
</listItem>
<bodyText confidence="0.962234208333334">
Definition 3 Given a sentence w, a relation
dc (PN) x P(N)) is defined, such that (0 w)ed iff
4= (n1), tif=01j1 and either njE BOO or niE and,
depending on whether nieP or nieR.
In the following, b(..) and s(.), the inverse
relations, will be used as well.
Definition 4 Given a sentence w and a phrase
structure tree representation for it, •rw, the set of
binding constraints for rn, is the set 91.,--= (0 r ty) I
0, P(N), r is a symbol, rE (d, b, b(.) H, such
that (0 r ty)e9in, iff (0 t,v)er, where r is the
corresponding relation.5
Given sentence w and a phrase structure
representation, a binding constraint set states
disjoint reference constraints (essentially, the
consequencies of Principle B and C of BT) and the
range of the binding relation (see below) for each
NP. The meaning of the formers is that whenever
(a d 13)e 9in„ the intersection of the references of a
and (3 is empty. Note that 91n, does not exhaust the
range of possible constraints on reference; for
instance, those preventing weak crossover
violations or circular readings are not included in
91n, but will be discussed later on; furthermore,
split antecedents are not mentioned in 91n,
Let us, now, focus the attention on how to
represent positive referential relationships. To this
purpose, two fundamental relations on P(N),
coreference and binding (more precisely, the bound
variable reading, in the terminology of Reinhart
(1983)) are introduced. The former is a trail/skive,
symmetric and reflexive relation, therefore an
equivalence relation; the latter is irreflexive,
intransitive and non symmetric, it only obtains
under c-command and denotes the dependence of an
item upon another one for its interpretation.6 An
4The relevant notion of c-command, is the following: node a
c-commands node ft in the tree iff a does not dominates
and every node y dominating a also dominates ft. In a sense,
A(n), B(ni) and C(n1) are partial encodings of, respectively,
Principles A, B and C of BT; see Giorgi, Pianesi, Satta (1990)
for algorithms that compute these sets.
5Here, it is assumed that c has been built according to all the
modules of the theory, a part BT.
6Both binding and coreference are formal relations in that
- 40
item can be bound by, at most, one other element;
on the contrary, an NP can corefer more than once
and even with itself. Split antecedents cannot be
bound and, finally, it is not possible for an item,
a, to be bound and, at the same time, to corefer;
on the other hand, a can be a binder and, at the
same time, corefer. The binding relation will be
denoted by the symbol /.
The differences between binding and coreference
are at both the structural and the interpretative
level. Binding can only obtain under c-command
while this is not a prerequisite for coreference; at
the interpretative level, the reference of the binder
can be accessed to form the reference of the bindee.
Instead, coreference corresponds to a sort of
extensional identity and simply amounts to
equating independent references; of course, items
that do not refer (e.g., quantified expressions and
anaphors) cannot corefer.7 Bound items behave
similarly, i.e. even a pronoun, when bound, loses
the capability of autonomously referring and,
therefore, of coreferring. Transitivity has not been
assumed for binding, in order to avoid reducing the
interpretation of a sequence of elements an,
such that each ai is bound by a1+1, upon that of the
last element; consider the following sentence:
</bodyText>
<listItem confidence="0.9486475">
(1) John and Mary told each other PRO to leave.
and the two readings:
(2) (i) John told Mary that Mary should
leave and Mary told John that
John should leave.
(ii)* John told Mary that John should
leave and Mary told John that
Mary should leave.
</listItem>
<bodyText confidence="0.886107809523809">
Because of obligatory control, PRO is bound by
the reciprocal, which, in its turn, is bound by the
matrix&apos;s subject. If binding were transitive, we
should conclude that the interpretation of PRO is
entirely dependent upon that of John and Mary (in
this being on a par with the reciprocal) and the
relevant reading would be (2.ii). However, (1) has
only the first of the two readings in (2) and this
requires that PRO inherits reciprocality from each
other; therefore, the correct dependencies are
between PRO and each other and between the latter
and the matrix subject.8 Note that a sentence like
they are largely determined by structural properties. No
pragmatic import is assumed for coreference, as is done by
Reinhart (1983).
7See Haik (1984) for a discussion about the distinction
between referring and non referring NPs.
8Here, it is assumed that a VP coniaining a reciprocal, e.g.
told each other, is true of each element a such that a is in the
interpretation of each other and told(a, b) is true, where b is
also in the interpretation of each other and a*b; see
</bodyText>
<listItem confidence="0.9546195">
(3) John and Mary told each other that they
should leave.
</listItem>
<bodyText confidence="0.9811542">
admits both readings, given that the subject of the
dependent clause can be bound either by the
reciprocal or by the matrix subject. In this work,
then, binding has a functional nature which may
well reflect properties of semantic processing; even
in this case, however, the point is that syntax only
addresses an abstract property, i.e. functionality.
Since coreference is an equivalence, the
representation could be simplified by considering a
minimal relation corresponding to coreference. The
connected parts of the graph of the coreference
relation are complete subgraphs; for each of them,
E), choose an arbitrary vertex, a, and
consider the graph An,in=(V, (I3 a)I 13#1a, (13
a)EE)). By iterating the procedure and then taking
the union of the results, a (directed) graph is
obtained that represents the minimal relation
corresponding to coreference.9 We will denote such
a minimal relation with the symbol c and call it
&apos;coreference&apos; tout court. The inverses of both I and
c, 4.) and c(.,) will be used as well.
At this point, the notion of indexation set can be
defined.
Definition 5 A indexation set for a sentence w
is the set 3 r I (t), lifE T(N), r is a symbol
and rE (c, c(_) , I, l(). s, s(.)) ) such that (0 r
iff ((t) yl)E r, where r is now interpreted as
the corresponding relation.
Note that split antecedents (relation s) are seen as
part of the indexation set of the sentence since they
do not have any independent status within syntax;
furthermore, this move permits us to only consider
a limited number of them every time, instead of the
exponential number of possible split antecedents
arising by free combinatorics.
</bodyText>
<subsectionHeader confidence="0.908914">
3.1 Compatibility of an indexation set
with BT
</subsectionHeader>
<bodyText confidence="0.9208051">
An indexation set is composed of positive
specifications that interpretative procedures process
in order to assign actual references. Before this
could happen, however, it must be verified that
each of such specifications does not contradict the
sentence particular constraints of 91 and general
BT restrictions. In other words, a way is needed to
enforce the overall compatibility of 3 w.r.6 BT.
A path in is a sequence of elements p.(00 r
01) (Øj r2 02)... (0m-1 rm Om), n2.-?-1; if Øo= Om
</bodyText>
<footnote confidence="0.919452333333333">
Higginbotham (1981, 1985).
9No information is lost in the passage from coreference to its
minimal counterpart; the original graph can, in fact, be easily
recovered by reintroducing transitivity, symmetricity and
reflexivity. Of course, the choice of a does not affect the
result.
</footnote>
<equation confidence="0.347156">
- 41 -
</equation>
<bodyText confidence="0.963804">
then p is a circular path. Furthermore, the string
wp=ri r2 r,„ is called the path string associated
with p. Path strings may be used to define the
following regular languages that will be useful to
state many of the conditions about index sets in a
</bodyText>
<equation confidence="0.730281666666667">
compact form: Li=/*(c+c(_)+cco+cHc+/+4.))/(.)*,
L2= {s) + (s)Li +Li (s)+LitsILI, L3 =(s(.)) 4-(S(.
+Li[S(4/ +Li (S(.j)Li . Let us briefly discuss
</equation>
<bodyText confidence="0.987062583333333">
their meaning. The paths from an element, 4), to
another one, yr, with strings in Li encode all the
possible ways in which 4) and w can be related by a
combination of binding and coreference relations
(in such a way, of course, that their definitory
properties are respected). In this respect, L1 replaces
the traditional notion of coindexation (although we
will continue to use this (improper) term to denote
the existence of a path with string in L1).
Therefore, given a sentence like the following one
(where subscripts are only used to single out
constituents):
</bodyText>
<listItem confidence="0.8975165">
(4) Hisi mother told John2 that he3 should
leave
</listItem>
<bodyText confidence="0.965484666666667">
a possible indexation set may contain the
following elements: (3 / 2), (2 c 1) and the string
lc for the path from 3 to 1, may be taken to
substitute the old notion of coindexation. Consider,
now, the notion of referential contribution; the
basic case is given by the configuration (0 s
yr)E3,,, (i.e., an element contributing to a split
antecedent); by extension, language L2 encodes all
the cases in which an element contributes to the
reference of another one. For instance, a possible
indexation set for the following sentence
(5) Johni told Mary2 that they3 should leave
is RI s 4), (2 s 4), (3 / 4)); in this case, 1 and 2
are both contributing to the reference of 4 (the split
antecedent) and of 3. On the other hand, language
L3 encodes all the cases in which an element 0
receives a referential contribution from Nr. Finally,
consider overlapping reference between two items;
the basic instance is given by two split antecedents
some component of which are either shared or
coindexed; the general configuration gives rise to
paths with strings in the language L3L2, the
concatenation of L3 with L2.10 An example is the
following sentence:
1°In the linguistic literature, the term overlapping reference
is used for all cases in which the reference of two items is not
disjoint; of course, this implies that at least one of them
denotes a plurality. However, the present use of this term, and
that of referential contribution as well, is restricted to split
antecedents, seen as the means, available to syntax, to
compose pluralities and does not generalize to all the
possible different varieties of plurals, such as those
considered in (Lasnik (1976) and Higginbotham (1983)).
</bodyText>
<listItem confidence="0.960479">
(6) Johni told Mary2 that they3 should avoid
telling Henry,&apos; that theys had been
discovered
</listItem>
<bodyText confidence="0.9947644375">
with the following indexation set: ((I s 6), (2 s 6),
(1 s7), (4 s7), (3 / 6), (51 7)). In this case, two
split antecedents (6 and 7) are introduced that share
the component 1; therefore, overlapping reference
obtains between 6 and 7 and between 3 and 5.
The BT version considered here consistes of
Principles A, B and C, as given by Chomsky
(1986), weak crossover (see Reinhart (1983)) and
some restrictions on circular readings. Now we can
state the following:
Theorem 1 - Conditions for the
compatibility of an index set with BT
Given a sentence w, a tree representation .rw and the
binding constraint set, 9i an index set,
complies with BT iff the following statements
hold:
</bodyText>
<listItem confidence="0.987688375">
(i) for any pair 0=lnil,yr--.{nii, ..., nip), 1.5p, if
(01 yr)e3,,, then (Øb yik)E9?„, , 1.g.Sp, where
yik=(nild; i.e. binding relations cannot be
arbitrarily introduced in 3„„ but must be derived
from the relation b in
(ii) for any 0=02) there is no circular path in $3,,
from 0, with string in /+ ; i.e. there are no
circular dependencies;
(iii) for any 0={n}, no circular path in 3„, gives
rise to strings in L2; i.e. an element is never
coindexed with another one and, at the same
time, contributes to its reference;
(iv) for any 0=[n), if ne A then there is a yr such
that (01 yr)e3„, and hyl=1; i.e. each anaphor is
bound in %and never takes a split antecedent;
(v) for any 0= { n} , if ne Q then there is no
</listItem>
<bodyText confidence="0.910501571428571">
element Nr such that (0 c 1)E3t or (yr c
; i.e, quantifiers and syntactic variables
cannot corefer; therefore, they can only function
as binders;11
(vi) if (0 d ig),E9in, then there are no paths, in 3 w.
from 0 to yr with strings either in L1 or in L2
or in L3L2; i.e. if two elements are in a
principle B or principle C configuration then:
they cannot be coindexed; no one of them can
contribute to the reference of the other and,
finally, their references do not overlap.
This theorem states the conditions for the
compatibility of an indexation set for a sentence w
with BT. Note, that certain constraints, expecially
those in (vi), make crucial use of the set 9c; other
constraints, instead, directly apply to 3„„ e.g. that
I 1(v) together with (i) enforces the ban against weak
crossover in that (v) checks that no quantifier corefers and (i)
only admits binding under c-command.
- 42 -
preventing weak crossover.
</bodyText>
<sectionHeader confidence="0.519793" genericHeader="evaluation">
4 Applications
</sectionHeader>
<bodyText confidence="0.99993125">
Two applications of the formalism introduced
above are now considered. The discussion will by
no means be exhaustive, the purpose being just to
show the potentiality of the present proposal.
</bodyText>
<subsectionHeader confidence="0.999469">
4.1 Verification
</subsectionHeader>
<bodyText confidence="0.999809566666667">
We define the verification problem for BT as
follows: let w be a phrase structure tree
representation for a sentence w and let 3,, be an
indexation set for w. We want to know if 3 ,, is
compatible with the constraints imposed by BT on
&apos;Su,. In essence, this is the same problem as that
discussed in the last section. A polynomial time
algorithmic method that solves it will be briefly
discussed. The problem at hand can be reduced to
the following one: let R be a set of symbols and
GR=(V, E) be a graph whose edges are triples (01 r
02) where TER; given a regular language LR g R* ,
is there any path p in GR with string in LR? An
algorithm can be given, based on a dynamic
programming method presented in Aho et al.
(1974), which takes as input one such graph GR, a
finite state non deterministic automaton for LR and
computes a IVI x IVI boolean matrix such that its
ij-th entry is set to 1 just in case there is a path,
from node ni to node nj, with string in LR.
The verification problem for BT can, then, be
solved by the following algorithmic schema: first,
compute relations d and b; then check condition (i)
of Theorem 1 for every element in 3,, . If the test
is successful, build the directed labelled graph
Gv=(V, E) where V=iv I ye T(N) and either (v r
0)e 3„, or (0 r v)e , for some r in {c, 1,1N, S.
S(.)) I and E=3,„ . Now, check conditions (ii)
through (v) of Theorem 1, by means of successive
runs of the algorithm previously sketched.
</bodyText>
<subsectionHeader confidence="0.999295">
4.2 Satisfiability
</subsectionHeader>
<bodyText confidence="0.980150234042553">
Satisfiability for BT can be stated as follows:
given a sentence w and a phrase structure tree
representation for it, •rw , does there exist at least
one indexation set which is BT compatible ?
Observe that, addressing the problem of BT
satisfiability can prove useful in actual parsing
systems, since it provides a means to weed out
ungrammatical analysis of the input string.
According to the version of BT considered here,
only anaphors need to be considered; in fact, from
the point of view of the syntactic theory, it is
always possible to assign every R-expression and
every pronoun an independent reference so that no
interactions arise. In other words, a sentence like
She loves her is perfectly grammatical, provided
that the two pronouns are neither in the binding
nor in the coreference relation, even if uttered
without any context from which references can be
drawn; in this case the only BT compatible index
set is the empty set, i.e. the one that does not
specify any mutual dependency between the two
elements. On the side of the interpretative
processes, this corresponds to (possibly infinitely)
many non overlapping reference assignments to the
two pronouns.12
Anaphors make the real difference, though, since
Principle A requires them to get their reference
from intrasentential items. Our attention will be
focused on L., called the A-restricted binding
constraint set and on 3,„, called the A-restricted
indexation set. 9c,, is defined in such a way that (0
r tv)eltn, iff either Ø={n), ne A or yr=(m), me A
and r is as in 91.w. 5&amp;quot; is defined in a similar way.
The problem, then, is to find out whether an A-
reduced index set verifying (i), (ii) and (iv) of
Theorem 1 exists, for a given pair (w, .
Theorem 2 - Conditions for BT
Satisfiability: Let w be a sentence, T„, one of
its phrase structure tree representations and 9l its
A-restricted binding constraint set; then, w satisfies
BT iff for any 0={n), neA there exists an element,
v&apos;=fm), mEP, R, such that there is a path, p.(0 r1
01) (01 r2 02)... (0m.) rm ty) in with string
web + and (&apos;d 0,-1)091w
An algorithmic solution for the satisfiability
problem can be pursued by means of an approach
similar to the one sketched above for verification.
</bodyText>
<sectionHeader confidence="0.998055" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.976130831168832">
BT is concerned with the relationships among the
references of NPs. Indices, however, tend to
collapse together situations in which more subtle
distinctions seem to be needed or blur the
distinctions between symmetrical relationships
(coreference) and asymmetrical ones (binding).
A formalism has been provided that does not
suffer the shortcomings of indexation. It permits a
relevant number of phenomena to be addressed in a
rather natural way and provides a richer and less
ambiguous input to the semantic routines. The
overall architecture can be depicted as follows:
given a sentence, w, and a phrase structure tree
representation -rw, a set 91 is built which,
essentially, is a partial encoding of Principles A, B
and C of BT as applied to Zw. ¶)ç,together with
general BT compatibility conditions (see Theorem
1), constrains the form and content of any well
12Generalizing, it is easy to see how the empty set is a BT
compatible indexation set whenever anaphors are not
involved.
- 43 -
formed indexation set, 3,4,. As far as the version of
BT considered here (essentially, that of Chomsky,
(1986)) is concerned, the work of syntax ends with
9; any further computation is semantic.
The formalism could be extended to other
phenomena. Consider, for instance, the ban against
circular reference; statements (ii) and (iii) of
Theorem 1 account for the particular cases in which
an item a is bound by itself or contributes to the
reference of another element while being coindexed
with it. More general cases were addressed by the
so called i-within-i condition of Chomsky (1981)
and, more recently, by the condition on circular
chains of Hoeksema and Napoli (1990). The latter
forbids circular chains, where a chain is a sequence
of elements a 1, ..., an such that either a i is
coindexed with af+1 or ai contains ai+1. This
condition could be captured within the framework
proposed here by explicitly introducing dominance,
say, by means of a relation symbol s1 and, then, by
requiring that no circular paths are in 3„, such that
their strings are in the language (siLi). If this
approach is tenable, then a parallelism emerges
between the s and the s1 relations, since both are
involved in statements forbidding some kind of
circularity (for s, the relevant statement is (iii) of
Theorem 1) and both can be seen as estabilishing
some sort of referential dependency between two
items. The relevant dependency for s is set
inclusion while for s1 it is some kind of functional
dependency, under the assumption that the reference
of a constituent is a function of the references of its
subconstituents. This observation accounts for the
fact that disjoint reference constraints affect items
in the s relation (see point (vi) of Theorem 1) but
not those in sl.
This work has been developed as part of a larger
system that uses GB as the reference syntactic
theory. Currently, we are studying two applications
of the formalism presented here: 1) on-line
algorithms for the satisfiability problem addressed
in Section 4.2 in an off-line fashion; the
interleaving of the computation of satisfiability
with structure building would provide a way to rule
out ungrammatical analysis of the input string at
an early stage, i.e. as soon as their incapability of
satisfing BT can be detected; 2) algorithms for the
exhaustive generation of all index sets that are BT
compatible w.r.t. a given Tw,
ACKNOWLEDGMENTS. The author would
like to acknowledge the continuous and fruitful
discussions with Alessandra Giorgi and Giorgio
Satta; many of the ideas in this paper have arisen
during them. Of course, the responsability for any
error is author&apos;s one.
</bodyText>
<sectionHeader confidence="0.993266" genericHeader="references">
REFERENCES
</sectionHeader>
<reference confidence="0.993594409836066">
Aho, A.V., Hoperoft, J.E., Ullman, J.D., (1974),
The Design and Analysis of Computer Algorithms,
Addison-Wesley, Reading, Ma.
Barton, G., (1984), Towards a Principle Based
Parser, MIT Al Memo No.788
Berwick, R., (1987), Principle-Based Parsing,
MIT Al Lab Technical Rept. 972
Berwick, R., (1989), Natural Language
Computational Complexity and Generative
Capacity, to appear in Computers and Artificial
Intelligence
Chomsky, N., (1981) Lectures on Government
and Binding, Foris, Dordrecht
Chomsky, N., (1986) Knowledge of Language,
Praeger, New York
Correa, N., (1988), A Binding Rule for
Government-Binding Parsing, Proceedings of
COLING, Budapest
Fong, S., (1990), Free Indexation: Combinatorial
Analysis and a Compositional Algorithm,
Proceedings of the 28th Annual Meeting of the
Association for Computational Linguistics,
Pittsburgh, Pe.
Giorgi, A, Pianesi, F, Satta, G., (1990), A
Computational Approach to Binding Theory,
Proceedings of COLING, Helsinki
Halk, I., (1984), Indirect Binding, Linguistic
Inquiry, 15, 185-224
Higginbotham, J., (1981), Reciprocal
Interpretation, Journal of Linguistic Research, 1,
97-117.
Higginbotham, J., (1983) Logical Form, Binding
and Nominals, Linguistic Inquiry, 14, 395-420
Higginbotham, J., (1985), On Semantics,
Linguistic Inquiry, 16, 547-594
Hoeksema, J. and D.J. Napoli, (1990), A
Condition on Circular Chains: A restatement of i-
within-i, Journal of Linguistics, 26, 403-424.
Ingria, R.P.J. &amp; D. Stallard, (1989), A
Computational Mechanism for Pronominal
Reference, Proceedings of the 27th Annual Meeting
of the Association for Computational Linguistics,
Vancouver.
Kolb, H.P.&amp; C. Tiersch (1990), Levels and
Empty Categories in a Principles and Parameters
Approach to Parsing, in K. Netter &amp; C. Rohrer
(eds.) Representational and Derivational
Approaches to Generative Grammar, Reidel,
Dordrecht (forthcoming)
Lasnik, H., (1976), Remarks on Coreference,
Linguistic Analysis, 2, 1-23
Lasnik, H. &amp; J. Uriagereka (1988), A Course in
GB Syntax, MIT Press, Cambridge, Ma.
Reinhart, T., (1983), Anaphora and Semantic
Interpretation, University of Chicago Press,
Chicago
Reinhart, T., (1987), Specifier and Operator
Binding, in E.J. Reuland &amp; A.G.B. ter Meulen
(eds) The Representation of (1n)definiteness, MIT
Press, Cambridge, Ma.
- 44 -
</reference>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.924674">
<title confidence="0.9977515">INDEXING AND REFERENTIAL DEPENDENCIES WITHIN BINDING THEORY: A COMPUTATIONAL FRAMEWORK</title>
<author confidence="0.999506">Fabio Pianesi</author>
<affiliation confidence="0.959707">Istituto per la Ricerca Scientifica e Tecnologica</affiliation>
<address confidence="0.999446">38050, Pante&apos; di Povo - Trento - Italy</address>
<email confidence="0.994371">pianesi@irst.it</email>
<abstract confidence="0.9971612">This work is concerned with the development of instruments for GB parsing. An alternative to the well known indexation system of (Chomsky, 1981) will be proposed and then used to formalize the view of Binding Theory in terms of the generation of constraints on the referential properties of the NPs of a sentence. Finally the problems of verification and satisfiability of BT will be addressed within the proposed framework.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A V Aho</author>
<author>J E Hoperoft</author>
<author>J D Ullman</author>
</authors>
<title>The Design and Analysis of Computer Algorithms,</title>
<date>1974</date>
<publisher>Addison-Wesley,</publisher>
<location>Reading, Ma.</location>
<contexts>
<context position="21400" citStr="Aho et al. (1974)" startWordPosition="3597" endWordPosition="3600"> sentence w and let 3,, be an indexation set for w. We want to know if 3 ,, is compatible with the constraints imposed by BT on &apos;Su,. In essence, this is the same problem as that discussed in the last section. A polynomial time algorithmic method that solves it will be briefly discussed. The problem at hand can be reduced to the following one: let R be a set of symbols and GR=(V, E) be a graph whose edges are triples (01 r 02) where TER; given a regular language LR g R* , is there any path p in GR with string in LR? An algorithm can be given, based on a dynamic programming method presented in Aho et al. (1974), which takes as input one such graph GR, a finite state non deterministic automaton for LR and computes a IVI x IVI boolean matrix such that its ij-th entry is set to 1 just in case there is a path, from node ni to node nj, with string in LR. The verification problem for BT can, then, be solved by the following algorithmic schema: first, compute relations d and b; then check condition (i) of Theorem 1 for every element in 3,, . If the test is successful, build the directed labelled graph Gv=(V, E) where V=iv I ye T(N) and either (v r 0)e 3„, or (0 r v)e , for some r in {c, 1,1N, S. S(.)) I an</context>
</contexts>
<marker>Aho, Hoperoft, Ullman, 1974</marker>
<rawString>Aho, A.V., Hoperoft, J.E., Ullman, J.D., (1974), The Design and Analysis of Computer Algorithms, Addison-Wesley, Reading, Ma.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Barton</author>
</authors>
<title>Towards a Principle Based Parser,</title>
<date>1984</date>
<journal>MIT Al Memo No.788</journal>
<contexts>
<context position="748" citStr="Barton, (1984)" startWordPosition="113" endWordPosition="114">ca e Tecnologica 38050, Pante&apos; di Povo - Trento - Italy pianesi@irst.it ABSTRACT This work is concerned with the development of instruments for GB parsing. An alternative to the well known indexation system of (Chomsky, 1981) will be proposed and then used to formalize the view of Binding Theory in terms of the generation of constraints on the referential properties of the NPs of a sentence. Finally the problems of verification and satisfiability of BT will be addressed within the proposed framework. 1 Introduction This work is concerned with the development of instruments for GB parsing (see Barton, (1984); Berwick (1987); Kolb &amp; Tiersch, (1990)); in particular, our attention will be focused on the Binding Theory (henceforth, BT) a module of the theory of Government and Binding (henceforth, GB; see Chomsky (1981; 1986)). It has been pointed out (eg. in Kolb &amp; Tiersch, (1990)) that the lack of a complete and coherent formalization of a linguistic theory like GB can be a major obstacle in addressing the issue of principle-based parsing; this is true of BT too, in particular with respect to the indexing system of Chomsky (1981), the shortcomings of which have often been pointed out in the literatu</context>
</contexts>
<marker>Barton, 1984</marker>
<rawString>Barton, G., (1984), Towards a Principle Based Parser, MIT Al Memo No.788</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Berwick</author>
</authors>
<date>1987</date>
<tech>Technical Rept. 972</tech>
<institution>Principle-Based Parsing, MIT Al Lab</institution>
<contexts>
<context position="764" citStr="Berwick (1987)" startWordPosition="115" endWordPosition="116"> 38050, Pante&apos; di Povo - Trento - Italy pianesi@irst.it ABSTRACT This work is concerned with the development of instruments for GB parsing. An alternative to the well known indexation system of (Chomsky, 1981) will be proposed and then used to formalize the view of Binding Theory in terms of the generation of constraints on the referential properties of the NPs of a sentence. Finally the problems of verification and satisfiability of BT will be addressed within the proposed framework. 1 Introduction This work is concerned with the development of instruments for GB parsing (see Barton, (1984); Berwick (1987); Kolb &amp; Tiersch, (1990)); in particular, our attention will be focused on the Binding Theory (henceforth, BT) a module of the theory of Government and Binding (henceforth, GB; see Chomsky (1981; 1986)). It has been pointed out (eg. in Kolb &amp; Tiersch, (1990)) that the lack of a complete and coherent formalization of a linguistic theory like GB can be a major obstacle in addressing the issue of principle-based parsing; this is true of BT too, in particular with respect to the indexing system of Chomsky (1981), the shortcomings of which have often been pointed out in the literature. A formalism </context>
</contexts>
<marker>Berwick, 1987</marker>
<rawString>Berwick, R., (1987), Principle-Based Parsing, MIT Al Lab Technical Rept. 972</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Berwick</author>
</authors>
<title>Natural Language Computational Complexity and Generative Capacity, to appear in</title>
<date>1989</date>
<journal>Computers and Artificial Intelligence</journal>
<contexts>
<context position="5074" citStr="Berwick (1989)" startWordPosition="807" endWordPosition="808">e Correa (1988); Ingria &amp; Stallard (1989)); additional procedures select actual antecedents IR-expressions can take split antecedents too, at least in certain cases (epithets); however, we will not explicitly address this point here. Anaphors, instead, can never take split antecedents. 4There is a full range of phenomena for which such a distinction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) considers only R-expressions and a device (actually, a Turing machine) assigning the same index to multiple occurences of the same R-expression (names); furthermore, a set of disjoint indices is associated with each item. Finally, Fong (1990) performs a combinatorial analysis of the paradigm of free indexation, as proposed in (Chomsky, 1981); he shows that free indexation gives rise to an exponential number of alternatives and argues for the necessity of interleaving indexing and structure computation. In any case, indexing has been either explicitly or implicitly assumed, so that most of the</context>
</contexts>
<marker>Berwick, 1989</marker>
<rawString>Berwick, R., (1989), Natural Language Computational Complexity and Generative Capacity, to appear in Computers and Artificial Intelligence</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<date>1981</date>
<booktitle>Lectures on Government and Binding,</booktitle>
<location>Foris, Dordrecht</location>
<contexts>
<context position="958" citStr="Chomsky (1981" startWordPosition="146" endWordPosition="147">Chomsky, 1981) will be proposed and then used to formalize the view of Binding Theory in terms of the generation of constraints on the referential properties of the NPs of a sentence. Finally the problems of verification and satisfiability of BT will be addressed within the proposed framework. 1 Introduction This work is concerned with the development of instruments for GB parsing (see Barton, (1984); Berwick (1987); Kolb &amp; Tiersch, (1990)); in particular, our attention will be focused on the Binding Theory (henceforth, BT) a module of the theory of Government and Binding (henceforth, GB; see Chomsky (1981; 1986)). It has been pointed out (eg. in Kolb &amp; Tiersch, (1990)) that the lack of a complete and coherent formalization of a linguistic theory like GB can be a major obstacle in addressing the issue of principle-based parsing; this is true of BT too, in particular with respect to the indexing system of Chomsky (1981), the shortcomings of which have often been pointed out in the literature. A formalism for the treatment of the referential relationships among the NPs of a sentence will be presented that is more expressive than indexation and more effective as a computational tool. In Section 2 </context>
<context position="2438" citStr="Chomsky, 1981" startWordPosition="395" endWordPosition="396">tic) constraints on reference. In Section 4, it will be shown how our proposal could be applied to some computational problems, i.e. the problems of verification and satisfiability within BT. 2 Preliminaries Since Chomsky (1981), it has become commonplace to denote the interpretative relations among the NPs of a sentence by means of indices, i.e. integers attached to NPs in such a way that elements bearing the same index are taken to denote the same object(s), while different indices correspond to different denotations; most of the statements of BT have been laid down in terms of this system (Chomsky, 1981, 1986). In a number of works (see Chomsky (1981), Higginbotham (1983) and Lasnik &amp; Uriagereka (1988)), however, it has been pointed out that the indexing device is not adequate to capture certain referential relations; this is true for the relation between pronouns and split antecedents, i.e. antecedents composed of two or more arguments bearing different thematic roles.I Furthermore, indices blur the distinction between coindexing under c-command and coindexing without c-command, thereby making it difficult to capture the dependence of an element, behaving like a variable, upon its anteceden</context>
<context position="5418" citStr="Chomsky, 1981" startWordPosition="858" endWordPosition="859">inction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) considers only R-expressions and a device (actually, a Turing machine) assigning the same index to multiple occurences of the same R-expression (names); furthermore, a set of disjoint indices is associated with each item. Finally, Fong (1990) performs a combinatorial analysis of the paradigm of free indexation, as proposed in (Chomsky, 1981); he shows that free indexation gives rise to an exponential number of alternatives and argues for the necessity of interleaving indexing and structure computation. In any case, indexing has been either explicitly or implicitly assumed, so that most of the computational approaches to BT suffer the same shortcomings pointed out above. In particular, given that both split antecedents and the distinction between binding and coreference cannot be easily accounted for, this results in an impoverished input being provided to the semantic (intepretative) routine. In the following section a formal sys</context>
<context position="25968" citStr="Chomsky (1981)" startWordPosition="4387" endWordPosition="4388"> are not involved. - 43 - formed indexation set, 3,4,. As far as the version of BT considered here (essentially, that of Chomsky, (1986)) is concerned, the work of syntax ends with 9; any further computation is semantic. The formalism could be extended to other phenomena. Consider, for instance, the ban against circular reference; statements (ii) and (iii) of Theorem 1 account for the particular cases in which an item a is bound by itself or contributes to the reference of another element while being coindexed with it. More general cases were addressed by the so called i-within-i condition of Chomsky (1981) and, more recently, by the condition on circular chains of Hoeksema and Napoli (1990). The latter forbids circular chains, where a chain is a sequence of elements a 1, ..., an such that either a i is coindexed with af+1 or ai contains ai+1. This condition could be captured within the framework proposed here by explicitly introducing dominance, say, by means of a relation symbol s1 and, then, by requiring that no circular paths are in 3„, such that their strings are in the language (siLi). If this approach is tenable, then a parallelism emerges between the s and the s1 relations, since both ar</context>
</contexts>
<marker>Chomsky, 1981</marker>
<rawString>Chomsky, N., (1981) Lectures on Government and Binding, Foris, Dordrecht</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<title>Knowledge of Language, Praeger,</title>
<date>1986</date>
<location>New York</location>
<contexts>
<context position="18488" citStr="Chomsky (1986)" startWordPosition="3067" endWordPosition="3068">ntax, to compose pluralities and does not generalize to all the possible different varieties of plurals, such as those considered in (Lasnik (1976) and Higginbotham (1983)). (6) Johni told Mary2 that they3 should avoid telling Henry,&apos; that theys had been discovered with the following indexation set: ((I s 6), (2 s 6), (1 s7), (4 s7), (3 / 6), (51 7)). In this case, two split antecedents (6 and 7) are introduced that share the component 1; therefore, overlapping reference obtains between 6 and 7 and between 3 and 5. The BT version considered here consistes of Principles A, B and C, as given by Chomsky (1986), weak crossover (see Reinhart (1983)) and some restrictions on circular readings. Now we can state the following: Theorem 1 - Conditions for the compatibility of an index set with BT Given a sentence w, a tree representation .rw and the binding constraint set, 9i an index set, complies with BT iff the following statements hold: (i) for any pair 0=lnil,yr--.{nii, ..., nip), 1.5p, if (01 yr)e3,,, then (Øb yik)E9?„, , 1.g.Sp, where yik=(nild; i.e. binding relations cannot be arbitrarily introduced in 3„„ but must be derived from the relation b in (ii) for any 0=02) there is no circular path in $</context>
<context position="25490" citStr="Chomsky, (1986)" startWordPosition="4309" endWordPosition="4310">put to the semantic routines. The overall architecture can be depicted as follows: given a sentence, w, and a phrase structure tree representation -rw, a set 91 is built which, essentially, is a partial encoding of Principles A, B and C of BT as applied to Zw. ¶)ç,together with general BT compatibility conditions (see Theorem 1), constrains the form and content of any well 12Generalizing, it is easy to see how the empty set is a BT compatible indexation set whenever anaphors are not involved. - 43 - formed indexation set, 3,4,. As far as the version of BT considered here (essentially, that of Chomsky, (1986)) is concerned, the work of syntax ends with 9; any further computation is semantic. The formalism could be extended to other phenomena. Consider, for instance, the ban against circular reference; statements (ii) and (iii) of Theorem 1 account for the particular cases in which an item a is bound by itself or contributes to the reference of another element while being coindexed with it. More general cases were addressed by the so called i-within-i condition of Chomsky (1981) and, more recently, by the condition on circular chains of Hoeksema and Napoli (1990). The latter forbids circular chains</context>
</contexts>
<marker>Chomsky, 1986</marker>
<rawString>Chomsky, N., (1986) Knowledge of Language, Praeger, New York</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Correa</author>
</authors>
<title>A Binding Rule for Government-Binding Parsing,</title>
<date>1988</date>
<booktitle>Proceedings of COLING,</booktitle>
<location>Budapest</location>
<contexts>
<context position="4475" citStr="Correa (1988)" startWordPosition="716" endWordPosition="717"> way, however, two different situations are collapsed together: the one in which an item is coindexed with a plurality of elements all of which share the same index, and the case of true split antecedents, where the elements composing the antecedent do not have the same index. Furthermore, the asymmetric behaviour of linking has no clear correlate at the structural level; it will be suggested below that c-command should continue to play a role here. Computational works about BT have been mainly concerned with providing lists of possible or impossible antecedents for the NPs of a sentence (see Correa (1988); Ingria &amp; Stallard (1989)); additional procedures select actual antecedents IR-expressions can take split antecedents too, at least in certain cases (epithets); however, we will not explicitly address this point here. Anaphors, instead, can never take split antecedents. 4There is a full range of phenomena for which such a distinction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) </context>
</contexts>
<marker>Correa, 1988</marker>
<rawString>Correa, N., (1988), A Binding Rule for Government-Binding Parsing, Proceedings of COLING, Budapest</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Fong</author>
</authors>
<title>Free Indexation: Combinatorial Analysis and a Compositional Algorithm,</title>
<date>1990</date>
<booktitle>Proceedings of the 28th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<location>Pittsburgh, Pe.</location>
<contexts>
<context position="5317" citStr="Fong (1990)" startWordPosition="843" endWordPosition="844">stead, can never take split antecedents. 4There is a full range of phenomena for which such a distinction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) considers only R-expressions and a device (actually, a Turing machine) assigning the same index to multiple occurences of the same R-expression (names); furthermore, a set of disjoint indices is associated with each item. Finally, Fong (1990) performs a combinatorial analysis of the paradigm of free indexation, as proposed in (Chomsky, 1981); he shows that free indexation gives rise to an exponential number of alternatives and argues for the necessity of interleaving indexing and structure computation. In any case, indexing has been either explicitly or implicitly assumed, so that most of the computational approaches to BT suffer the same shortcomings pointed out above. In particular, given that both split antecedents and the distinction between binding and coreference cannot be easily accounted for, this results in an impoverishe</context>
</contexts>
<marker>Fong, 1990</marker>
<rawString>Fong, S., (1990), Free Indexation: Combinatorial Analysis and a Compositional Algorithm, Proceedings of the 28th Annual Meeting of the Association for Computational Linguistics, Pittsburgh, Pe.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Giorgi</author>
<author>F Pianesi</author>
<author>G Satta</author>
</authors>
<title>A Computational Approach to Binding Theory,</title>
<date>1990</date>
<booktitle>Proceedings of COLING,</booktitle>
<location>Helsinki</location>
<marker>Giorgi, Pianesi, Satta, 1990</marker>
<rawString>Giorgi, A, Pianesi, F, Satta, G., (1990), A Computational Approach to Binding Theory, Proceedings of COLING, Helsinki</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Halk</author>
</authors>
<date>1984</date>
<journal>Indirect Binding, Linguistic Inquiry,</journal>
<volume>15</volume>
<pages>185--224</pages>
<marker>Halk, 1984</marker>
<rawString>Halk, I., (1984), Indirect Binding, Linguistic Inquiry, 15, 185-224</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Higginbotham</author>
</authors>
<title>Reciprocal Interpretation,</title>
<date>1981</date>
<journal>Journal of Linguistic Research,</journal>
<volume>1</volume>
<pages>97--117</pages>
<contexts>
<context position="15082" citStr="Higginbotham (1981" startWordPosition="2485" endWordPosition="2486">of possible split antecedents arising by free combinatorics. 3.1 Compatibility of an indexation set with BT An indexation set is composed of positive specifications that interpretative procedures process in order to assign actual references. Before this could happen, however, it must be verified that each of such specifications does not contradict the sentence particular constraints of 91 and general BT restrictions. In other words, a way is needed to enforce the overall compatibility of 3 w.r.6 BT. A path in is a sequence of elements p.(00 r 01) (Øj r2 02)... (0m-1 rm Om), n2.-?-1; if Øo= Om Higginbotham (1981, 1985). 9No information is lost in the passage from coreference to its minimal counterpart; the original graph can, in fact, be easily recovered by reintroducing transitivity, symmetricity and reflexivity. Of course, the choice of a does not affect the result. - 41 - then p is a circular path. Furthermore, the string wp=ri r2 r,„ is called the path string associated with p. Path strings may be used to define the following regular languages that will be useful to state many of the conditions about index sets in a compact form: Li=/*(c+c(_)+cco+cHc+/+4.))/(.)*, L2= {s) + (s)Li +Li (s)+LitsILI, </context>
</contexts>
<marker>Higginbotham, 1981</marker>
<rawString>Higginbotham, J., (1981), Reciprocal Interpretation, Journal of Linguistic Research, 1, 97-117.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Higginbotham</author>
</authors>
<title>Logical Form, Binding and Nominals,</title>
<date>1983</date>
<journal>Linguistic Inquiry,</journal>
<volume>14</volume>
<pages>395--420</pages>
<location>Higginbotham, J.,</location>
<contexts>
<context position="2508" citStr="Higginbotham (1983)" startWordPosition="406" endWordPosition="407">w our proposal could be applied to some computational problems, i.e. the problems of verification and satisfiability within BT. 2 Preliminaries Since Chomsky (1981), it has become commonplace to denote the interpretative relations among the NPs of a sentence by means of indices, i.e. integers attached to NPs in such a way that elements bearing the same index are taken to denote the same object(s), while different indices correspond to different denotations; most of the statements of BT have been laid down in terms of this system (Chomsky, 1981, 1986). In a number of works (see Chomsky (1981), Higginbotham (1983) and Lasnik &amp; Uriagereka (1988)), however, it has been pointed out that the indexing device is not adequate to capture certain referential relations; this is true for the relation between pronouns and split antecedents, i.e. antecedents composed of two or more arguments bearing different thematic roles.I Furthermore, indices blur the distinction between coindexing under c-command and coindexing without c-command, thereby making it difficult to capture the dependence of an element, behaving like a variable, upon its antecedent (see Reinhart, (1983)).2 The replacement of indices with index sets </context>
<context position="18045" citStr="Higginbotham (1983)" startWordPosition="2986" endWordPosition="2987">uage L3L2, the concatenation of L3 with L2.10 An example is the following sentence: 1°In the linguistic literature, the term overlapping reference is used for all cases in which the reference of two items is not disjoint; of course, this implies that at least one of them denotes a plurality. However, the present use of this term, and that of referential contribution as well, is restricted to split antecedents, seen as the means, available to syntax, to compose pluralities and does not generalize to all the possible different varieties of plurals, such as those considered in (Lasnik (1976) and Higginbotham (1983)). (6) Johni told Mary2 that they3 should avoid telling Henry,&apos; that theys had been discovered with the following indexation set: ((I s 6), (2 s 6), (1 s7), (4 s7), (3 / 6), (51 7)). In this case, two split antecedents (6 and 7) are introduced that share the component 1; therefore, overlapping reference obtains between 6 and 7 and between 3 and 5. The BT version considered here consistes of Principles A, B and C, as given by Chomsky (1986), weak crossover (see Reinhart (1983)) and some restrictions on circular readings. Now we can state the following: Theorem 1 - Conditions for the compatibili</context>
</contexts>
<marker>Higginbotham, 1983</marker>
<rawString>Higginbotham, J., (1983) Logical Form, Binding and Nominals, Linguistic Inquiry, 14, 395-420 Higginbotham, J., (1985), On Semantics, Linguistic Inquiry, 16, 547-594</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Hoeksema</author>
<author>D J Napoli</author>
</authors>
<title>A Condition on Circular Chains: A restatement of iwithin-i,</title>
<date>1990</date>
<journal>Journal of Linguistics,</journal>
<booktitle>A Computational Mechanism for Pronominal Reference, Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics,</booktitle>
<volume>26</volume>
<pages>403--424</pages>
<location>Vancouver.</location>
<contexts>
<context position="26054" citStr="Hoeksema and Napoli (1990)" startWordPosition="4399" endWordPosition="4402">on of BT considered here (essentially, that of Chomsky, (1986)) is concerned, the work of syntax ends with 9; any further computation is semantic. The formalism could be extended to other phenomena. Consider, for instance, the ban against circular reference; statements (ii) and (iii) of Theorem 1 account for the particular cases in which an item a is bound by itself or contributes to the reference of another element while being coindexed with it. More general cases were addressed by the so called i-within-i condition of Chomsky (1981) and, more recently, by the condition on circular chains of Hoeksema and Napoli (1990). The latter forbids circular chains, where a chain is a sequence of elements a 1, ..., an such that either a i is coindexed with af+1 or ai contains ai+1. This condition could be captured within the framework proposed here by explicitly introducing dominance, say, by means of a relation symbol s1 and, then, by requiring that no circular paths are in 3„, such that their strings are in the language (siLi). If this approach is tenable, then a parallelism emerges between the s and the s1 relations, since both are involved in statements forbidding some kind of circularity (for s, the relevant stat</context>
</contexts>
<marker>Hoeksema, Napoli, 1990</marker>
<rawString>Hoeksema, J. and D.J. Napoli, (1990), A Condition on Circular Chains: A restatement of iwithin-i, Journal of Linguistics, 26, 403-424. Ingria, R.P.J. &amp; D. Stallard, (1989), A Computational Mechanism for Pronominal Reference, Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics, Vancouver.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H P &amp; C Tiersch Kolb</author>
</authors>
<title>Levels and Empty Categories in a Principles and Parameters Approach to Parsing,</title>
<date>1990</date>
<booktitle>Representational and Derivational Approaches to Generative Grammar,</booktitle>
<editor>in K. Netter &amp; C. Rohrer (eds.)</editor>
<location>Reidel, Dordrecht (forthcoming)</location>
<marker>Kolb, 1990</marker>
<rawString>Kolb, H.P.&amp; C. Tiersch (1990), Levels and Empty Categories in a Principles and Parameters Approach to Parsing, in K. Netter &amp; C. Rohrer (eds.) Representational and Derivational Approaches to Generative Grammar, Reidel, Dordrecht (forthcoming)</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Lasnik</author>
</authors>
<date>1976</date>
<journal>Remarks on Coreference, Linguistic Analysis,</journal>
<volume>2</volume>
<pages>1--23</pages>
<contexts>
<context position="18021" citStr="Lasnik (1976)" startWordPosition="2983" endWordPosition="2984">trings in the language L3L2, the concatenation of L3 with L2.10 An example is the following sentence: 1°In the linguistic literature, the term overlapping reference is used for all cases in which the reference of two items is not disjoint; of course, this implies that at least one of them denotes a plurality. However, the present use of this term, and that of referential contribution as well, is restricted to split antecedents, seen as the means, available to syntax, to compose pluralities and does not generalize to all the possible different varieties of plurals, such as those considered in (Lasnik (1976) and Higginbotham (1983)). (6) Johni told Mary2 that they3 should avoid telling Henry,&apos; that theys had been discovered with the following indexation set: ((I s 6), (2 s 6), (1 s7), (4 s7), (3 / 6), (51 7)). In this case, two split antecedents (6 and 7) are introduced that share the component 1; therefore, overlapping reference obtains between 6 and 7 and between 3 and 5. The BT version considered here consistes of Principles A, B and C, as given by Chomsky (1986), weak crossover (see Reinhart (1983)) and some restrictions on circular readings. Now we can state the following: Theorem 1 - Condit</context>
</contexts>
<marker>Lasnik, 1976</marker>
<rawString>Lasnik, H., (1976), Remarks on Coreference, Linguistic Analysis, 2, 1-23</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Lasnik</author>
<author>J Uriagereka</author>
</authors>
<title>A Course in GB Syntax,</title>
<date>1988</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, Ma.</location>
<contexts>
<context position="2539" citStr="Lasnik &amp; Uriagereka (1988)" startWordPosition="409" endWordPosition="412">applied to some computational problems, i.e. the problems of verification and satisfiability within BT. 2 Preliminaries Since Chomsky (1981), it has become commonplace to denote the interpretative relations among the NPs of a sentence by means of indices, i.e. integers attached to NPs in such a way that elements bearing the same index are taken to denote the same object(s), while different indices correspond to different denotations; most of the statements of BT have been laid down in terms of this system (Chomsky, 1981, 1986). In a number of works (see Chomsky (1981), Higginbotham (1983) and Lasnik &amp; Uriagereka (1988)), however, it has been pointed out that the indexing device is not adequate to capture certain referential relations; this is true for the relation between pronouns and split antecedents, i.e. antecedents composed of two or more arguments bearing different thematic roles.I Furthermore, indices blur the distinction between coindexing under c-command and coindexing without c-command, thereby making it difficult to capture the dependence of an element, behaving like a variable, upon its antecedent (see Reinhart, (1983)).2 The replacement of indices with index sets has been proposed as a way to a</context>
</contexts>
<marker>Lasnik, Uriagereka, 1988</marker>
<rawString>Lasnik, H. &amp; J. Uriagereka (1988), A Course in GB Syntax, MIT Press, Cambridge, Ma.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Reinhart</author>
</authors>
<title>Anaphora and Semantic Interpretation,</title>
<date>1983</date>
<publisher>University of Chicago Press,</publisher>
<location>Chicago</location>
<contexts>
<context position="3061" citStr="Reinhart, (1983)" startWordPosition="486" endWordPosition="487">. In a number of works (see Chomsky (1981), Higginbotham (1983) and Lasnik &amp; Uriagereka (1988)), however, it has been pointed out that the indexing device is not adequate to capture certain referential relations; this is true for the relation between pronouns and split antecedents, i.e. antecedents composed of two or more arguments bearing different thematic roles.I Furthermore, indices blur the distinction between coindexing under c-command and coindexing without c-command, thereby making it difficult to capture the dependence of an element, behaving like a variable, upon its antecedent (see Reinhart, (1983)).2 The replacement of indices with index sets has been proposed as a way to address the first problem (see Higginbotham, (1983)): an ordinary index is substituted by a singleton; when there are pluralities, e.g. when an NP is coindexed with a split antecedent, it is annotated with the (set) union of the index sets of each component of the plurality; therefore, coindexing amounts to equating index sets. In this view, the ordinary conditions on disjoint reference (Principles B and C of BT) must be extended to avoid not only identical reference but, more generally, reference intersection. It has</context>
<context position="4893" citStr="Reinhart, 1983" startWordPosition="777" endWordPosition="778"> should continue to play a role here. Computational works about BT have been mainly concerned with providing lists of possible or impossible antecedents for the NPs of a sentence (see Correa (1988); Ingria &amp; Stallard (1989)); additional procedures select actual antecedents IR-expressions can take split antecedents too, at least in certain cases (epithets); however, we will not explicitly address this point here. Anaphors, instead, can never take split antecedents. 4There is a full range of phenomena for which such a distinction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) considers only R-expressions and a device (actually, a Turing machine) assigning the same index to multiple occurences of the same R-expression (names); furthermore, a set of disjoint indices is associated with each item. Finally, Fong (1990) performs a combinatorial analysis of the paradigm of free indexation, as proposed in (Chomsky, 1981); he shows that free indexation gives rise to an exponential number of alte</context>
<context position="9451" citStr="Reinhart (1983)" startWordPosition="1527" endWordPosition="1528">ormers is that whenever (a d 13)e 9in„ the intersection of the references of a and (3 is empty. Note that 91n, does not exhaust the range of possible constraints on reference; for instance, those preventing weak crossover violations or circular readings are not included in 91n, but will be discussed later on; furthermore, split antecedents are not mentioned in 91n, Let us, now, focus the attention on how to represent positive referential relationships. To this purpose, two fundamental relations on P(N), coreference and binding (more precisely, the bound variable reading, in the terminology of Reinhart (1983)) are introduced. The former is a trail/skive, symmetric and reflexive relation, therefore an equivalence relation; the latter is irreflexive, intransitive and non symmetric, it only obtains under c-command and denotes the dependence of an item upon another one for its interpretation.6 An 4The relevant notion of c-command, is the following: node a c-commands node ft in the tree iff a does not dominates and every node y dominating a also dominates ft. In a sense, A(n), B(ni) and C(n1) are partial encodings of, respectively, Principles A, B and C of BT; see Giorgi, Pianesi, Satta (1990) for algo</context>
<context position="12483" citStr="Reinhart (1983)" startWordPosition="2039" endWordPosition="2040">t. If binding were transitive, we should conclude that the interpretation of PRO is entirely dependent upon that of John and Mary (in this being on a par with the reciprocal) and the relevant reading would be (2.ii). However, (1) has only the first of the two readings in (2) and this requires that PRO inherits reciprocality from each other; therefore, the correct dependencies are between PRO and each other and between the latter and the matrix subject.8 Note that a sentence like they are largely determined by structural properties. No pragmatic import is assumed for coreference, as is done by Reinhart (1983). 7See Haik (1984) for a discussion about the distinction between referring and non referring NPs. 8Here, it is assumed that a VP coniaining a reciprocal, e.g. told each other, is true of each element a such that a is in the interpretation of each other and told(a, b) is true, where b is also in the interpretation of each other and a*b; see (3) John and Mary told each other that they should leave. admits both readings, given that the subject of the dependent clause can be bound either by the reciprocal or by the matrix subject. In this work, then, binding has a functional nature which may well</context>
<context position="18525" citStr="Reinhart (1983)" startWordPosition="3072" endWordPosition="3073">s not generalize to all the possible different varieties of plurals, such as those considered in (Lasnik (1976) and Higginbotham (1983)). (6) Johni told Mary2 that they3 should avoid telling Henry,&apos; that theys had been discovered with the following indexation set: ((I s 6), (2 s 6), (1 s7), (4 s7), (3 / 6), (51 7)). In this case, two split antecedents (6 and 7) are introduced that share the component 1; therefore, overlapping reference obtains between 6 and 7 and between 3 and 5. The BT version considered here consistes of Principles A, B and C, as given by Chomsky (1986), weak crossover (see Reinhart (1983)) and some restrictions on circular readings. Now we can state the following: Theorem 1 - Conditions for the compatibility of an index set with BT Given a sentence w, a tree representation .rw and the binding constraint set, 9i an index set, complies with BT iff the following statements hold: (i) for any pair 0=lnil,yr--.{nii, ..., nip), 1.5p, if (01 yr)e3,,, then (Øb yik)E9?„, , 1.g.Sp, where yik=(nild; i.e. binding relations cannot be arbitrarily introduced in 3„„ but must be derived from the relation b in (ii) for any 0=02) there is no circular path in $3,, from 0, with string in /+ ; i.e. </context>
</contexts>
<marker>Reinhart, 1983</marker>
<rawString>Reinhart, T., (1983), Anaphora and Semantic Interpretation, University of Chicago Press, Chicago</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Reinhart</author>
</authors>
<title>Specifier and Operator Binding,</title>
<date>1987</date>
<booktitle>in E.J. Reuland &amp; A.G.B. ter Meulen (eds) The Representation of (1n)definiteness,</booktitle>
<publisher>MIT Press,</publisher>
<location>Cambridge, Ma.</location>
<contexts>
<context position="4975" citStr="Reinhart, 1987" startWordPosition="789" endWordPosition="790">y concerned with providing lists of possible or impossible antecedents for the NPs of a sentence (see Correa (1988); Ingria &amp; Stallard (1989)); additional procedures select actual antecedents IR-expressions can take split antecedents too, at least in certain cases (epithets); however, we will not explicitly address this point here. Anaphors, instead, can never take split antecedents. 4There is a full range of phenomena for which such a distinction seems crucial, eg. weak crossover and sloppy reading of pronouns (Reinhart, 1983); donkey sentences and the so called indirect binding (Haik, 1984; Reinhart, 1987). However, only few of them will be addressed here. - 39 - among the potential ones. Berwick (1989) considers only R-expressions and a device (actually, a Turing machine) assigning the same index to multiple occurences of the same R-expression (names); furthermore, a set of disjoint indices is associated with each item. Finally, Fong (1990) performs a combinatorial analysis of the paradigm of free indexation, as proposed in (Chomsky, 1981); he shows that free indexation gives rise to an exponential number of alternatives and argues for the necessity of interleaving indexing and structure compu</context>
</contexts>
<marker>Reinhart, 1987</marker>
<rawString>Reinhart, T., (1987), Specifier and Operator Binding, in E.J. Reuland &amp; A.G.B. ter Meulen (eds) The Representation of (1n)definiteness, MIT Press, Cambridge, Ma.</rawString>
</citation>
<citation valid="false">
<pages>44</pages>
<marker></marker>
<rawString>- 44 -</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>