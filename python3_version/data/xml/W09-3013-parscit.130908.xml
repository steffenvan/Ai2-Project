<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.001054">
<title confidence="0.998854">
Annotation of Sentence Structure;
Capturing the Relationship among Clauses in Czech Sentences
</title>
<author confidence="0.965842">
Mark´eta Lopatkov´a and Natalia Klyueva and Petr Homola
</author>
<affiliation confidence="0.939939">
Charles University in Prague, Institute of Formal and Applied Linguistics
</affiliation>
<address confidence="0.75597">
Malostransk´e n´am. 25, 118 00 Prague 1, Czech Republic
</address>
<email confidence="0.997865">
{lopatkova,kljueva,homola}@ufal.mff.cuni.cz
</email>
<sectionHeader confidence="0.99737" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999645647058824">
The goal of the presented project is to as-
sign a structure of clauses to Czech sen-
tences from the Prague Dependency Tree-
bank (PDT) as a new layer of syntactic an-
notation, a layer of clause structure. The
annotation is based on the concept of seg-
ments, linguistically motivated and easily
automatically detectable units. The task
of the annotators is to identify relations
among segments, especially relations of
super/subordination, coordination, apposi-
tion and parenthesis. Then they identify
individual clauses forming complex sen-
tences.
In the pilot phase of the annotation, 2,699
sentences from PDT were annotated with
respect to their sentence structure.
</bodyText>
<sectionHeader confidence="0.993115" genericHeader="keywords">
1 Motivation
</sectionHeader>
<bodyText confidence="0.999936413793104">
Syntactic analysis of natural languages is the
fundamental requirement of many applied tasks.
Parsers providing automatic syntactic analysis are
quite reliable for relatively short and simple sen-
tences. However, their reliability is significantly
lower for long and complex sentences, especially
for languages with free word order; see, e.g., Ze-
man (2004) for results for Czech.
The identification of the overall structure of
a sentence prior to its full syntactic analysis is
a natural step capable to reduce the complex-
ity of full analysis. Such methods brought good
results for typologically different languages, see
e.g. Jones (1994) for English or Ohno et al. (2006)
for Japanese.
The goal of the presented project is to annotate
a structure of clauses to Czech sentences from the
Prague Dependency Treebank. The main idea is to
reuse the already existing language resource and to
enrich it with a new layer of annotation, a layer of
clause structure.
We exploit a concept of segments, easily auto-
matically detectable and linguistically motivated
units, as they were defined by Lopatkov´a and
Holan (2009).1 The annotation captures relation-
ship among segments, especially subordination,
coordination, apposition and parenthesis. Based
on segment annotation, the annotators identify
clauses forming (complex) sentences: they group
the segments constituting individual clauses of
complex sentences.
Contrary to such well known approaches as e.g.
chunking, see Abney (1991) or cascaded parsing,
see Abney (1995) or Ciravegna and Lavelli (1999),
which group individual tokens into more complex
structures as nominal or prepositional phrases, i.e.,
in a bottom-up direction, the proposed approach
aims at determining a hierarchy of sentence parts
in a ‘top-down’ way. Such an approach is quite
novel not only for Czech, it has not been reported
for other Slavic languages.
Prague Dependency Treebank2 (PDT), see Hajiˇc
et al. (2006) is a large and elaborated corpus
with rich syntactic annotation of Czech newspaper
texts. As the dependency-based framework has
been adopted for PDT, the treebank contains ex-
plicit information on mutual relations among in-
dividual tokens (words and punctuation marks).
However, relations among more complex units,
esp. clauses, are not explicitly indicated, see Fig-
ure 1.
Syntactic information stored in PDT can be
used (at least to some extent) for the identification
of individual clauses as well. Let us refer to the
experiments described in the papers by Lopatkov´a
and Holan (2009) and Kr˚uza and Kuboˇn (2009). In
both papers, the authors designed well-developed
procedures for identifying segments and their mu-
</bodyText>
<footnote confidence="0.99130875">
1We adopt the basic idea of segments introduced and used
by Kuboˇn (2001) and Kuboˇn et al. (2007). We slightly modify
it for the purposes of the annotation task.
2http://ufal.mff.cuni.cz/pdt2.0/
</footnote>
<page confidence="0.981698">
74
</page>
<note confidence="0.9800035">
Proceedings of the Third Linguistic Annotation Workshop, ACL-IJCNLP 2009, pages 74–81,
Suntec, Singapore, 6-7 August 2009. c�2009 ACL and AFNLP
</note>
<figureCaption confidence="0.98047">
Figure 1: Analytic tree of the sentence Poˇc´ateˇcninejistota, jak obstoji, zmizela. ‘Initial uncertainty,
how it-will-do, vanished.’
</figureCaption>
<bodyText confidence="0.9997568">
tual relationship from the analytical layer of PDT
(i.e., layer of surface syntax). However, they ei-
ther do not identify individual clauses in the com-
plex sentence at all, or their procedural definition
of clause does not exactly model what a human
would consider as a clause.
The previous experiments brought clear speci-
fication of segmentation charts describing the re-
lation among individual segments. The results
showed that for further research it is necessary to
work with a large set of precisely annotated data.
It has turned out that such data cannot be obtained
without extensive (semi)manual annotation of a
large set of sentences, see Lopatkov´a and Holan
(2009) and Kr˚uza and Kuboˇn (2009).
In this article, we present a project of man-
ual annotation of sentence structure for complex
Czech sentences. In Section 2, we introduce the
basic concepts, esp. boundaries, segments and
segmentation charts. Then we focus on the anno-
tation of basic linguistic phenomena (Section 3).
Section 4 brings specification of a data format and
an editor used for the annotation. Lastly, basic
statistics of the annotated data are presented (Sec-
tion 5).
</bodyText>
<subsectionHeader confidence="0.5212315">
2 Boundaries, Segments and
Segmentation Charts
</subsectionHeader>
<bodyText confidence="0.999825692307692">
The aim of the annotation is to explicitly describe
relations among clauses of (complex) Czech sen-
tences. We focus on the annotation of (part of)
Czech sentences from PDT. We take advantage
of morphological analysis (m-layer) and partially
also surface syntactic analysis (a-layer) stored in
PDT.
All tokens from PDT are disjunctively divided
into two groups – ordinary words and segment
boundaries. Segment boundaries are tokens and
their sequences that divide a sentence into indi-
vidual units referred to as segments. As segment
boundaries, the following tokens are considered:
</bodyText>
<listItem confidence="0.9838865">
• punctuation marks: comma, colon, semi-
colon, question mark, exclamation mark,
dash (all types), opening and closing bracket
(all kinds), and quotation mark (all types);
• coordinating conjunctions: tokens morpho-
logical tag of which starts with the pair J^
(e.g., a ‘and’, ale ‘but’, nebo ‘or’, neboˇt ‘for’,
ani ‘nor’), see Hajiˇc (2004).
</listItem>
<bodyText confidence="0.999907136363636">
After the identification of boundaries, the in-
put sentence is partitioned into individual seg-
ments – a segment is understood as a maximal
non-empty sequence of tokens that does not con-
tain any boundary.
This concept of the linear segment serves as a
good basis for the identification of clauses, basic
linguistically motivated syntactic units. We will
see that a single clause consists of one or more
segments; one or more clauses then create(s) a
complex sentence (see Section 3).
The definition of segments adopted in this
project is based on very strict rules for punctuation
in Czech. Generally, beginning and end of each
clause must be indicated by a boundary, i.e., sen-
tence boundary (usually fullstop, question mark or
exclamation mark), punctuation (mostly comma)
or conjunction. This holds for embedded clauses
as well. In particular, there are only very few ex-
ceptions to a general rule saying that there must be
some kind of a boundary between two finite verb
forms of meaningful verbs.
</bodyText>
<subsectionHeader confidence="0.969671">
Segmentation Charts and Clauses
</subsectionHeader>
<bodyText confidence="0.999761428571429">
Relations between clauses, esp. super- or sub-
ordination, coordination, apposition or parenthe-
sis, are described by so called segmentation charts
(one or more, if we allow for ambiguous annota-
tion) – segmentation chart captures the levels of
embedding for individual segments, as described
below.
</bodyText>
<page confidence="0.993209">
75
</page>
<bodyText confidence="0.998061155555555">
The principal idea of the segmentation chart is
quite clear – it can be described by the follow-
ing basic instructions. (In examples, segments are
marked by square brackets [ and ]k, where k is a
level of embedding. In addition, individual clauses
are marked by brackets { and }j, where j is an in-
dex of a particular clause.)
Main clauses. Segments forming all main
clauses3 of a complex sentence belong to the basic
level (level of embedding 0), as in the following
sentence.
{[O studium byl velk´y z´ajem]0}1, {[v pˇrijimacich
pohovorech bylo vybr´ano 50 uchazeˇc˚u]0}2. ‘There
was a lot of interest in studying, 50 applicants
were selected in admission interviews.’
Dependent clauses. Segments forming clauses
that depend on clauses at the k-th level obtain level
of embedding k + 1 (i.e., the level of embedding
for subordinated segments is higher than the level
of segments forming their governing clause).
{[Potom zjistite]0}1, {[ ˇze v´am nikdo ned´a vstup-
nivizum]1}2. ‘Then you realize that nobody gives
you entrance visa.’
Coordination and apposition. Segments forming
coordinated sentence members and coordinated
clauses occupy the same level. The same holds
for apposition.
{[Hra n´am jde]0}1 a {[forma stoup´a]0}1. ‘We’re
getting on well in game and our form improves.’
Parenthesis. Segments forming parenthesis
(e.g., sequence of wordforms within brackets) ob-
tain the level of embedding k + 1 if the level of
their neighboring segments is k .
{[N´avrh mluvio dvou letech u muˇz˚u]0 ( {[zvyˇsuje
vˇek z 60 na 62]1}1 ) a [o ˇctyˇrech letech u ˇzen]0}2.
‘The proposal mentions two years for men (it
raises the age from 60 to 62) and four years for
women.’
Although this basic idea of segmentation charts
seems simple, it appears that – working with ‘real
data’ from newspaper corpus – detailed annota-
tion guidelines are necessary for good and con-
sistent annotation of specific linguistic phenomena
and especially for their combination. We focus on
some of them in the following section.
</bodyText>
<footnote confidence="0.666755">
3As a main clauses, such clauses are considered that are
syntactically /formally independent, see also Section 3.
</footnote>
<sectionHeader confidence="0.720551" genericHeader="introduction">
3 Annotation of Complex Sentences
</sectionHeader>
<bodyText confidence="0.980317641025641">
Segments can be divided into two main groups,
mutually independent and mutually related seg-
ments.
Mutually independent segments. Mutually
independent segments are, e.g., segments forming
two dependent clauses, each of them modifying
(different) part of the main clause, as segments
do kter´e se zamiloval ‘with whom he felt in love’
and kter´y zazvonil ‘that rang’ in the following
sentence.
{[Marie]0, {[do kter´e se zamiloval]1}1, {[kdyˇz
ji potkal]2}2, [zvedla telefon]0}3, {[kter´y
zazvonil]1}4. ‘Mary, with whom he felt in
love when he met her, answered the phone that
rang.’
Such segments can have the same level of em-
bedding (as the above mentioned segments) or
they can belong to clauses with different levels of
embedding (as segments kdyˇz ji potkal ‘when he
met her’ and kter´y zazvonil ‘that rang’).
Mutually related segments. Mutually related
segments either belong to different levels of em-
bedding – they are super- or subordinated, we fo-
cus on this group in the following Section 3.1, or
they have the same level of embedding – this type
is described in Section 3.2.
Let us stress here that the segment annotation
is based on formally expressed structures rather
than on their semantic interpretation. For exam-
ple, we do not interpret text enclosed in brackets
– whether it is semantically apposition, sentence
member or independent sentence part, see also the
discussion in Kuboˇn et al. (2007). We annotate
such text as parenthetical segment(s) on a lower
level compared to the neighboring segments.
The annotators have been instructed to disam-
biguate annotated sentences – if more readings of
a particular sentence are possible, they should re-
spect the reading rendered in PDT.
</bodyText>
<subsectionHeader confidence="0.99894">
3.1 Subordination and Superordination
</subsectionHeader>
<bodyText confidence="0.983270142857143">
The super- or subordinated mutually related seg-
ments capture primarily relations between gov-
erning and dependent clauses.
Identification of subordinated status of a par-
ticular segment is based on morphological prop-
erties of tokens forming this segment, i.e., on the
presence of a token with ‘subordinating function’.
</bodyText>
<page confidence="0.854948">
76
</page>
<bodyText confidence="0.7636475">
‘Subordinating tokens’ are especially of the fol-
lowing types:
</bodyText>
<listItem confidence="0.992483">
• subordinating conjunctions (e.g., aby ‘in or-
der that’, dokud ‘till’, kdyby ‘if’, protoˇze ‘be-
cause’, pˇrestoˇze ‘although’, ˇze ‘that’);
• relative/interrogative pronouns and some
types of numerals (e.g., kdo ‘who’, co ‘what’,
jak´y ‘which’, kolik ‘how many’);
• pronominal adverbs (e.g., kde ‘where’, kdy
‘when’, jak ‘how’, proˇc ‘why’).
</listItem>
<bodyText confidence="0.912526294117647">
In Czech, a subordinating token is usually at the
beginning of the segment, as in the following sen-
tence (marked pronoun kter´y ‘who’ serves as sub-
ordinating token here).
{[Klejch]0 , {[kter´y dal devˇet ze dvan´acti ligov´ych
g´ol˚u Zl/na]1}1 , [m´a vydatn´e pomocn/ky]0}2. ‘Kle-
jch who scored nine goals out of twelve for Zlfn
has good helpers.’
A particular subordinated segment can precede
or follow its superordinated segment or it can be
placed between two superordinated segments (in
case of a governing clause with embedded depen-
dent clause, as in the previous example).
In addition to governing and dependent clauses,
there are also other constructions that should evi-
dently be captured as subordinated segments, es-
pecially:
</bodyText>
<listItem confidence="0.8783605">
• Segments representing direct speech:
,,{[ Kupˇr´ıkladu z´avod Ejpovice projevil z´ajem
dokonce o 150 pracovn/k˚u]1}1,“{[ uvedl
Ladislav Vltavsk´y]0}2. ‘ “For example
Ejpovice company showed interest in 150
workers,” said Ladislav Vltavsky.’
• Some types of parenthesis, esp. those
marked by brackets:
</listItem>
<subsubsectionHeader confidence="0.587448">
{[Guido Reni]0 ( {[1575 aˇz 1642]1}1 [byl
</subsubsectionHeader>
<bodyText confidence="0.9868188">
vynikaj/c/figuralista]0}2. ‘Guido Reni (1575
to 1642) was an outstanding figural painter.’
In such cases, parenthetical expressions are
captured as separate clauses even if they con-
sist of fragmental expression.
</bodyText>
<subsectionHeader confidence="0.993148">
3.2 Segments on the Same Level and
Identification of Clauses
</subsectionHeader>
<bodyText confidence="0.999839333333333">
We can identify three main groups of structures
where segments are mutually related and they
share the same level of embedding:
</bodyText>
<listItem confidence="0.961590833333333">
• segments forming a clause with embedded
dependent clause, as the attributive depen-
dent clause in the following example.
{[V pˇr´ıpadˇe]0, {[ˇze se nedovol´ate]1}1,
[vytoˇcte ˇc/slo ve veˇcern/ch hodin´ach
znovu]0}2. ‘In case that you will not succeed,
redial the number again in the evening.’
• coordinated segments (see the corresponding
section below);
• others, esp. segments in apposition and some
types of parenthesis (see the corresponding
section below).
</listItem>
<bodyText confidence="0.998805514285714">
In particular, segments on the same level – un-
like the super/subordinated ones – can form a sin-
gle clause. For the annotators, the important task
is to identify individual clauses. They group those
segments that constitute individual clauses of a
complex sentence and thus mark them as a sin-
gle syntactic unit of a higher level, level of clause
structures. (Let us recall that clauses are marked
here by brackets { and }j where j is an index of a
particular clause).
Coordination of sentence members and
coordination of clauses
The relation of coordination may occur between
two (or more) sentence members or between two
(or more) clauses, be they main clauses or depen-
dent ones. The syntactic position of coordinated
units is ‘multiplied’, that is, they share the same
syntactic relations to other sentence members. The
annotators have to identify segments containing
coordinated sentence members and put them to-
gether into a single clause; coordinated clauses are
marked as separate clauses sharing the same level
of embedding,4 as in the following sentence.
{[ ˇCesk´y prezident apeloval na ˇCechy]0 a [na
Nˇemce]0}1, {[aby odpovˇednˇe zach´azeli s min-
ulost/]1}2 a {[aby posouvali vpˇred dialog]1 a
[spolupr´aci.]1}3 ‘Czech president appealed to
Czechs and Germans that they should treat their
history responsibly and improve their mutual di-
alogue and cooperation.’ This complex sentence
consists of five segments (marked by [ and ]),
which form three clauses (marked by { and }),
namely one main clause (on the zero level) and
two coordinated dependent clauses (first embed-
ded level), see also Figure 3.
</bodyText>
<footnote confidence="0.9686285">
4In PDT, coordination of sentence members and coordina-
tion of clauses are not distinguished (at the analytical layer).
</footnote>
<page confidence="0.999163">
77
</page>
<bodyText confidence="0.999865486486487">
Segmentation is purely linear (on segment fol-
lows another); after the identification of segments,
they are grouped into the clauses. As we have
seen, a single clause consists (prototypically) of
one or more segments. This is fully true for se-
mantically and syntactically complete sentences,
i.e. sentences without ellipses of different kinds.
Let us mention one construction where clauses
identified by the annotators (i.e., clauses based on
segments) do not conform with the linguistic intu-
ition, namely the case of coordinated clauses shar-
ing one (or more) sentence member(s) or a syntac-
tic particle. We interpret such cases as cases of el-
lipses, i.e., a shared sentence member or particle is
supposed to belong only to one of the clauses and
to be elided in the second clause. Thus a shared
sentence member or particle is annotated only as a
part of one clause.
{[Neopravuje se]0}1 a {[neinvestuje]0}2, {[pen´ıze
staˇc´ı jen na bˇeˇzn´y provoz]0}1. ‘They do not ren-
ovate nor invest, there is enough money only for
routine operation.’ (The underlined reflexive par-
ticle belongs to both verbs opravovat ‘to reno-
vate’ and investovat ‘to invest’ (reflexive passive
forms of the verbs); in the segmentation chart, it is
marked as a part of the first clause Neopravuje se
and elided in the second clause neinvestuje.)
On the other hand, a basic rule was adopted say-
ing that a single finite verb form indicates a single
clause, i.e., verb constitutes (a core of) a sentence5
(providing that other formal labels as, e.g., brack-
ets do not indicate more levels). This rule implies
that if the shared sentence member is a predicate,
then the particular segments are joined together
into a single clause, as in the following example.
{[Petr pˇriˇsel vˇcera]0 a [babiˇcka dneska]0}1. ‘Petr
came yesterday and my grandma today.’
</bodyText>
<subsectionHeader confidence="0.916403">
Other constructions
</subsectionHeader>
<bodyText confidence="0.987597545454545">
Apposition is a construction where the same
‘idea’ is rendered in different ways (the latter be-
ing an explanatory equivalent of the former), both
having the same syntactic relation to other sen-
tence members (e.g., a name and a function of par-
ticular person, as in the following sentence).
{[Ozn´amil to V´aclav Havel]0, [president ˇCesk´e
republiky]0}1. ‘It was announced by V´aclav
Havel, president of the Czech Republic.’
Following PDT, apposition is treated in the
same way as coordination as the members of an
</bodyText>
<footnote confidence="0.9264565">
5The account for this decision lies in the verb-centric
character of dependency syntax traditionally used for Czech.
</footnote>
<bodyText confidence="0.998098318181818">
apposition are considered to share (multiple) syn-
tactic position in a sentence (like in the case of
coordination).
Contrary to PDT, parenthesis without ex-
plicit/unambiguous formal mark, as e.g. brackets,
is annotated as segment(s) on the same level as
its/their neighboring segments.
{[Pˇred smrt´ı]0, {[nezn´amo proˇc]0}1, [si koupil
tramvajenku]0}2. ‘Before dying, nobody knows
why, he bought a tram pass.’
Again, parenthetical expressions are captured as
separate clauses even if they consist of fragmental
expression.
Semi-direct speech, i.e., direct speech without
quotation marks (or other formal label(s)) is anno-
tated as segment(s) on the same level as the seg-
ment containing a governing verb. The reason is
quite evident – there is no formally expressed indi-
cation of subordination in the segment(s) creating
a semi-direct speech.
{[Pˇrijde pozdˇeji]0}1, {[ohl´asil doma Pavel]0}2. ‘I
will be late, said Pavel.’
</bodyText>
<sectionHeader confidence="0.9936615" genericHeader="method">
4 Data Format and Editor for Segment
Annotation
</sectionHeader>
<subsectionHeader confidence="0.998959">
4.1 PML Data Format
</subsectionHeader>
<bodyText confidence="0.999973818181818">
The Prague Markup Language6 (PML), see Pa-
jas and ˇStˇep´anek (2006) is an XML-based domain
language which has been developed and is used as
primary data format for PDT (version 2.0).
The PDT 2.0 data consist of one non-annotated
word layer (w-layer) and three layers of annota-
tion: morphological (m-layer), analytical (a-layer)
and tectogrammatical (t-layer). In PML, individ-
ual layers of annotation can be stacked one over
another in a stand-off fashion and linked together
as well as with other data resources in a consistent
way.
We use two layers in our annotation editor,
namely the m-layer and the a-layer. The m-layer
provides the word form, lemma and tag for every
token. The a-layer represents syntactic relations
between tokens, resulting in an analytical tree. For
the segment annotation, only information on ana-
lytical functions of tokens is used – it helps the an-
notators in their decisions on the appropriate level
of embedding and in disambiguation if more read-
ings of a particular sentence are possible.
</bodyText>
<footnote confidence="0.997153">
6http://ufal.mff.cuni.cz/pdt2.0/doc/pdt
-guide/en/html/ch03.html#a-data-formats
</footnote>
<page confidence="0.995993">
78
</page>
<figureCaption confidence="0.9882165">
Figure 2: Class hierarchy of SegView annotation
editor.
</figureCaption>
<table confidence="0.974103571428572">
# sentences 2,699
# segments 7,975
# clauses 5,003
max segments in clause 27
max clauses in sentence 11
max levels of embedding 4
Table 1: Basic statistics of the annotated texts.
sentences segments clauses max level
783 1 1 0
298 2 1 0
195 2 2 1
148 3 2 1
123 3 1 0
111 2 2 0
</table>
<bodyText confidence="0.998999">
The output of the segment annotation is stored
as a new layer of annotation, the seg-layer.
</bodyText>
<subsectionHeader confidence="0.947162">
4.2 SegView Annotation Editor
</subsectionHeader>
<bodyText confidence="0.981708944444444">
The SegView annotation editor is implemented
completely in Java because of its cross-platformity
and availability of rich libraries. The presenta-
tion layer is implemented in the class Mainlin-
dow using the standard Swing library. As for the
data layer, the editor works with files in the PML
format (see Section 4.1). The model represent-
ing the core of the implementation comprises three
classes: Sentence, Word and Segment, Figure 2.
After launching the editor, the user has the pos-
sibility to select multiple files to annotate. After
the selection, the program directly reads the files
and creates an internal representation with the in-
stances of the three aforementioned classes. The
manual annotation is saved in files with the exten-
sion .seg.
The screenshot of SegView editor is shown in
Figure 3.
</bodyText>
<sectionHeader confidence="0.848307" genericHeader="method">
5 Basic Statistics and Conclusion
</sectionHeader>
<bodyText confidence="0.999855181818182">
We have described the pilot phase of the segment
annotation, during which 2,699 sentences from
PDT were annotated with respect to their sentence
structure.7 Table 1 summarizes the amount of an-
notated data and gives statistics on number of pro-
cessed segments and clauses.
The most frequent annotation patterns are pre-
sented in Table 2 showing the most common types
of sentences and relation among their clauses
(only patterns with more than 100 sentence in-
stances are listed).
</bodyText>
<footnote confidence="0.6567485">
7We have focused on the sentences from
data/full/amw/train2 portion of the PDT data.
</footnote>
<tableCaption confidence="0.978006">
Table 2: Distribution of segments and clauses.
</tableCaption>
<bodyText confidence="0.996744942857143">
The most frequent type of annotated sentence
consists of one segment only (and thus one
clause), then comes the case where two segments
form a single clause. The third position is for sen-
tences with two segments, each forming an in-
dividual clause, where one of them depends on
the other). The fourth case represents sentences
formed by two clauses, one either depending on
the other or forming a parenthesis. The fifth and
sixth line represent sentences with segments on the
same level, e.i., with sentence members in coordi-
nation or apposition and with coordinated clauses,
respectively. (The most common cases listed in
the table represent 61.5% of the annotated sen-
tences; the rest has more complicated structures.)
Future work
We focus on the inter-annotator agreement on a
reasonable large set of data now to check the con-
sistency between the human annotators. Then the
annotation will continue – the goal is to cover
10% of sentences from PDT with assigned sen-
tence structure.
We expect the use of the manually annotated
data for testing tools and hypotheses on possible
sentence structures. The proposed amount of data
is comparable with the standard PDT testing data.
We do not foreseen the use of this set of segmen-
tation charts for training statistically-based tool(s)
for an automatic identification of sentence struc-
tures.
The set of precisely annotated data allows us
to solidly compare and evaluate the already ex-
isting automatic segmentation tools processing ei-
ther the raw texts or syntactically annotated trees,
see Kr˚uza and Kuboˇn (2009) and Lopatkov´a and
</bodyText>
<page confidence="0.997564">
79
</page>
<figureCaption confidence="0.922955333333333">
Figure 3: SegView editor: The segmentation chart for sentence ‘According to the General-Anzeiger,
Czech president appealed to Czechs and Germans that they should treat their history responsibly and
improve their mutual dialogue and cooperation.’ (clauses marked by ellipses).
</figureCaption>
<bodyText confidence="0.999118666666667">
Holan (2009). These data also allow us to search
for systemic differences between the manual and
automatic sentence structure annotation. Then the
possibility of further improving the tools will be
opened.
The use of data with automatically annotated
sentence structure in machine translation sys-
tem among related languages, as in Homola and
Kubo&amp;quot;n (2008), is also foreseen.
</bodyText>
<sectionHeader confidence="0.998195" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999858833333333">
This paper presents the results of the grant
of the Grant Agency of Czech Republic
No. 405/08/0681. The research is carried
out within the project of the Ministry of Ed-
ucation, Youth and Sports of Czech Republic
No. MSM0021620838.
</bodyText>
<sectionHeader confidence="0.999476" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.99994904">
Steven P. Abney. 1991. Parsing By Chunks. In
R. Berwick, S. Abney, and C. Tenny, editors,
Principle-Based Parsing, pages 257–278. Kluwer
Academic Publishers.
Steven P. Abney. 1995. Partial Parsing via Finite-State
Cascades. Journal of Natural Language Engineer-
ing, 2(4):337–344.
Fabio Ciravegna and Alberto Lavelli. 1999. Full Text
Parsing using Cascades of Rules: An Information
Extraction Procedure. In Proceedings of EACL’99,
pages 102–109. University of Bergen.
Jan Haji&amp;quot;c, Eva Haji&amp;quot;cov´a, Jarmila Panevov´a, Petr Sgall,
Petr Pajas, Jan &amp;quot;St&amp;quot;ep´anek, Ji&amp;quot;riHavelka, and Marie
Mikulov´a. 2006. Prague Dependency Treebank 2.0.
LDC.
Jan Haji&amp;quot;c. 2004. Disambiguation of Rich Inflection
(Computational Morphology of Czech). Karolinum
Press.
Petr Homola and Vladislav Kubo&amp;quot;n. 2008. A hybrid
machine translation system for typologically related
languages. In David Wilson and Chad Lane, editors,
Proceedings of FLAIRS 2008), pages 227–228, Co-
conut Grove, Florida, USA. AAAI Press.
Bernard E. M. Jones. 1994. Exploiting the Role of
Punctuation in Parsing Natural Text. In Proceedings
of the COLING’94, pages 421–425.
Old&amp;quot;rich Kr˚uza and Vladislav Kubo&amp;quot;n. 2009. Automatic
Extraction of Clause Relationships from a Treebank.
In Computational Linguistics and Intelligent Text
Processing - Proceedings of CICLing 2009, volume
5449 of LNCS, pages 195–206. Springer-Verlag.
Vladislav Kubo&amp;quot;n, Mark´eta Lopatkov´a, Martin Pl´atek,
and Patrice Pognan. 2007. A Linguistically-Based
Segmentation of Complex Sentences. In D.C. Wil-
son and G.C.J. Sutcliffe, editors, Proceedings of
FLAIRS Conference, pages 368–374. AAAI Press.
Vladislav Kubo&amp;quot;n. 2001. Problems of Robust Parsing
of Czech. Ph.D. thesis, Faculty of Mathematics and
Physics, Charles University in Prague.
Mark´eta Lopatkov´a and Tom´a&amp;quot;s Holan. 2009. Seg-
mentation Charts for Czech – Relations among Seg-
ments in Complex Sentences. In A. H. Dediu, A. M.
Ionescu, and C. Martin-Vide, editors, Proceedings of
LATA 2009, volume 5457 of LNCS, pages 542–553.
Springer-Verlag.
Tomohiro Ohno, Shigeki Matsubara, Hideki Kashioka,
Takehiko Maruyama, and Yasuyoshi Inagaki. 2006.
Dependency Parsing of Japanese Spoken Mono-
logue Based on Clause Boundaries. In Proceedings
of COLING and ACL, pages 169–176. ACL.
</reference>
<page confidence="0.964074">
80
</page>
<reference confidence="0.99926675">
Petr Pajas and Jan ˇStˇep´anek. 2006. XML-Based Rep-
resentation of Multi-Layered Annotation in the PDT
2.0. In Proceedings of LREC 2006 Workshop on
Merging and Layering Linguistic Information, pages
40–47. ELRA.
Daniel Zeman. 2004. Parsing with a Statistical De-
pendency Model. Ph.D. thesis, Charles University
in Prague, Prague.
</reference>
<page confidence="0.999265">
81
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.000003">
<title confidence="0.9973285">Annotation of Sentence Structure; Capturing the Relationship among Clauses in Czech Sentences</title>
<author confidence="0.907399">Lopatkov´a Klyueva</author>
<affiliation confidence="0.85242">Charles University in Prague, Institute of Formal and Applied</affiliation>
<address confidence="0.753889">Malostransk´e n´am. 25, 118 00 Prague 1, Czech</address>
<abstract confidence="0.989308658759125">The goal of the presented project is to assign a structure of clauses to Czech sentences from the Prague Dependency Treebank (PDT) as a new layer of syntactic annotation, a layer of clause structure. The annotation is based on the concept of segments, linguistically motivated and easily automatically detectable units. The task of the annotators is to identify relations among segments, especially relations of super/subordination, coordination, apposition and parenthesis. Then they identify individual clauses forming complex sentences. In the pilot phase of the annotation, 2,699 sentences from PDT were annotated with respect to their sentence structure. 1 Motivation Syntactic analysis of natural languages is the fundamental requirement of many applied tasks. Parsers providing automatic syntactic analysis are quite reliable for relatively short and simple sentences. However, their reliability is significantly lower for long and complex sentences, especially for languages with free word order; see, e.g., Zeman (2004) for results for Czech. The identification of the overall structure of a sentence prior to its full syntactic analysis is a natural step capable to reduce the complexity of full analysis. Such methods brought good results for typologically different languages, see e.g. Jones (1994) for English or Ohno et al. (2006) for Japanese. The goal of the presented project is to annotate a structure of clauses to Czech sentences from the Prague Dependency Treebank. The main idea is to reuse the already existing language resource and to enrich it with a new layer of annotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Based on segment annotation, the annotators identify clauses forming (complex) sentences: they group the segments constituting individual clauses of complex sentences. Contrary to such well known approaches as e.g. chunking, see Abney (1991) or cascaded parsing, see Abney (1995) or Ciravegna and Lavelli (1999), which group individual tokens into more complex structures as nominal or prepositional phrases, i.e., in a bottom-up direction, the proposed approach aims at determining a hierarchy of sentence parts in a ‘top-down’ way. Such an approach is quite novel not only for Czech, it has not been reported for other Slavic languages. Dependency (PDT), see Hajiˇc et al. (2006) is a large and elaborated corpus with rich syntactic annotation of Czech newspaper texts. As the dependency-based framework has been adopted for PDT, the treebank contains explicit information on mutual relations among individual tokens (words and punctuation marks). However, relations among more complex units, esp. clauses, are not explicitly indicated, see Figure 1. Syntactic information stored in PDT can be used (at least to some extent) for the identification of individual clauses as well. Let us refer to the experiments described in the papers by Lopatkov´a and Holan (2009) and Kr˚uza and Kuboˇn (2009). In both papers, the authors designed well-developed for identifying segments and their muadopt the basic idea of segments introduced and used by Kuboˇn (2001) and Kuboˇn et al. (2007). We slightly modify it for the purposes of the annotation task. 74 of the Third Linguistic Annotation Workshop, ACL-IJCNLP pages Singapore, 6-7 August 2009. ACL and AFNLP 1: Analytic tree of the sentence jak obstoji, zmizela. uncertainty, how it-will-do, vanished.’ tual relationship from the analytical layer of PDT (i.e., layer of surface syntax). However, they either do not identify individual clauses in the complex sentence at all, or their procedural definition of clause does not exactly model what a human would consider as a clause. The previous experiments brought clear specification of segmentation charts describing the relation among individual segments. The results showed that for further research it is necessary to work with a large set of precisely annotated data. It has turned out that such data cannot be obtained without extensive (semi)manual annotation of a large set of sentences, see Lopatkov´a and Holan (2009) and Kr˚uza and Kuboˇn (2009). In this article, we present a project of manual annotation of sentence structure for complex Czech sentences. In Section 2, we introduce the basic concepts, esp. boundaries, segments and segmentation charts. Then we focus on the annotation of basic linguistic phenomena (Section 3). Section 4 brings specification of a data format and an editor used for the annotation. Lastly, basic statistics of the annotated data are presented (Section 5). 2 Boundaries, Segments and Segmentation Charts The aim of the annotation is to explicitly describe among clauses of (complex) Czech sentences. We focus on the annotation of (part of) Czech sentences from PDT. We take advantage of morphological analysis (m-layer) and partially also surface syntactic analysis (a-layer) stored in PDT. All tokens from PDT are disjunctively divided into two groups – ordinary words and segment boundaries tokens and their sequences that divide a sentence into individual units referred to as segments. As segment boundaries, the following tokens are considered: • punctuation marks: comma, colon, semicolon, question mark, exclamation mark, dash (all types), opening and closing bracket (all kinds), and quotation mark (all types); • coordinating conjunctions: tokens morphotag of which starts with the pair see Hajiˇc (2004). After the identification of boundaries, the input sentence is partitioned into individual seg- – a understood as a maximal non-empty sequence of tokens that does not contain any boundary. This concept of the linear segment serves as a good basis for the identification of clauses, basic linguistically motivated syntactic units. We will that a single of one or more segments; one or more clauses then create(s) a sentence Section 3). The definition of segments adopted in this project is based on very strict rules for punctuation in Czech. Generally, beginning and end of each clause must be indicated by a boundary, i.e., sentence boundary (usually fullstop, question mark or exclamation mark), punctuation (mostly comma) or conjunction. This holds for embedded clauses as well. In particular, there are only very few exceptions to a general rule saying that there must be some kind of a boundary between two finite verb forms of meaningful verbs. Segmentation Charts and Clauses Relations between clauses, esp. superor subordination, coordination, apposition or parentheare described by so called charts (one or more, if we allow for ambiguous annotation) – segmentation chart captures the levels of embedding for individual segments, as described below. 75 The principal idea of the segmentation chart is quite clear – it can be described by the following basic instructions. (In examples, segments are by square brackets where a level of embedding. In addition, individual clauses marked by brackets where an index of a particular clause.) clauses. forming all main of a complex sentence belong to the basic level (level of embedding 0), as in the following sentence. studium byl velk´y pˇrijimacich bylo vybr´ano 50 ‘There was a lot of interest in studying, 50 applicants were selected in admission interviews.’ clauses. forming clauses depend on clauses at the level obtain level embedding 1 the level of embedding for subordinated segments is higher than the level of segments forming their governing clause). ˇze v´am nikdo ned´a vstup- ‘Then you realize that nobody gives you entrance visa.’ and apposition. forming coordinated sentence members and coordinated clauses occupy the same level. The same holds for apposition. n´am ‘We’re getting on well in game and our form improves.’ forming parenthesis (e.g., sequence of wordforms within brackets) obthe level of embedding 1 the level of neighboring segments is mluvio dvou letech u z 60 na a [o ˇctyˇrech letech u ‘The proposal mentions two years for men (it raises the age from 60 to 62) and four years for women.’ Although this basic idea of segmentation charts seems simple, it appears that – working with ‘real data’ from newspaper corpus – detailed annotation guidelines are necessary for good and consistent annotation of specific linguistic phenomena and especially for their combination. We focus on some of them in the following section. a main clauses, such clauses are considered that are /formally see also Section 3. 3 Annotation of Complex Sentences Segments can be divided into two main groups, mutually independent and mutually related segments. independent segments. independent segments are, e.g., segments forming two dependent clauses, each of them modifying (different) part of the main clause, as segments kter´e se zamiloval whom he felt in love’ zazvonil rang’ in the following sentence. kter´e se [zvedla with whom he felt love when he met her, answered the phone that rang.’ Such segments can have the same level of embedding (as the above mentioned segments) or they can belong to clauses with different levels of (as segments ji potkal he her’ and zazvonil rang’). related segments. related segments either belong to different levels of embedding – they are superor subordinated, we focus on this group in the following Section 3.1, or they have the same level of embedding – this type is described in Section 3.2. Let us stress here that the segment annotation based on expressed rather than on their semantic interpretation. For example, we do not interpret text enclosed in brackets – whether it is semantically apposition, sentence member or independent sentence part, see also the discussion in Kuboˇn et al. (2007). We annotate such text as parenthetical segment(s) on a lower level compared to the neighboring segments. annotators have been instructed to disamannotated – if more readings of a particular sentence are possible, they should respect the reading rendered in PDT. 3.1 Subordination and Superordination The superor subordinated mutually related segcapture primarily between govand dependent Identification of subordinated status of a particular segment is based on morphological properties of tokens forming this segment, i.e., on the presence of a token with ‘subordinating function’. 76 ‘Subordinating tokens’ are especially of the following types: subordinating conjunctions (e.g., orthat’, ‘be- • relative/interrogative pronouns and some of numerals (e.g., many’); pronominal adverbs (e.g., In Czech, a subordinating token is usually at the beginning of the segment, as in the following sen- (marked pronoun serves as subordinating token here). dal devˇet ze dvan´acti ligov´ych [m´a vydatn´e ‘Klewhoscored nine goals out of twelve for Zlfn has good helpers.’ A particular subordinated segment can precede or follow its superordinated segment or it can be placed between two superordinated segments (in case of a governing clause with embedded dependent clause, as in the previous example). In addition to governing and dependent clauses, there are also other constructions that should evidently be captured as subordinated segments, especially: Segments representing Kupˇr´ıkladu z´avod Ejpovice projevil z´ajem o 150 uvedl “For Ejpovice company showed interest in 150 workers,” said Ladislav Vltavsky.’ Some types of esp. those marked by brackets: aˇz ‘Guido Reni (1575 to 1642) was an outstanding figural painter.’ In such cases, parenthetical expressions are captured as separate clauses even if they consist of fragmental expression. 3.2 Segments on the Same Level and Identification of Clauses We can identify three main groups of structures where segments are mutually related and they share the same level of embedding: • segments forming a clause with embedded as the attributive dependent clause in the following example. se [vytoˇcte ˇc/slo ve veˇcern/ch hodin´ach case that you will not succeed, redial the number again in the evening.’ • coordinated segments (see the corresponding section below); • others, esp. segments in apposition and some types of parenthesis (see the corresponding section below). In particular, segments on the same level – unlike the super/subordinated ones – can form a single clause. For the annotators, the important task to individual They group those segments that constitute individual clauses of a complex sentence and thus mark them as a single syntactic unit of a higher level, level of clause structures. (Let us recall that clauses are marked by brackets an index of a particular clause). Coordination of sentence members and coordination of clauses The relation of coordination may occur between two (or more) sentence members or between two (or more) clauses, be they main clauses or dependent ones. The syntactic position of coordinated units is ‘multiplied’, that is, they share the same syntactic relations to other sentence members. The annotators have to identify segments containing coordinated sentence members and put them together into a single clause; coordinated clauses are marked as separate clauses sharing the same level as in the following sentence. prezident apeloval na [na odpovˇednˇe zach´azeli s minposouvali vpˇred president appealed to Czechs and Germans that they should treat their history responsibly and improve their mutual dialogue and cooperation.’ This complex sentence of five segments (marked by form three clauses (marked by namely one main clause (on the zero level) and two coordinated dependent clauses (first embedded level), see also Figure 3. PDT, coordination of sentence members and coordination of clauses are not distinguished (at the analytical layer). 77 Segmentation is purely linear (on segment follows another); after the identification of segments, they are grouped into the clauses. As we have seen, a single clause consists (prototypically) of one or more segments. This is fully true for semantically and syntactically complete sentences, i.e. sentences without ellipses of different kinds. Let us mention one construction where clauses identified by the annotators (i.e., clauses based on segments) do not conform with the linguistic intuition, namely the case of coordinated clauses sharing one (or more) sentence member(s) or a syntactic particle. We interpret such cases as cases of ellipses, i.e., a shared sentence member or particle is supposed to belong only to one of the clauses and to be elided in the second clause. Thus a shared sentence member or particle is annotated only as a part of one clause. jen na bˇeˇzn´y do not renovate nor invest, there is enough money only for routine operation.’ (The underlined reflexive parbelongs to both verbs renoand invest’ (reflexive passive forms of the verbs); in the segmentation chart, it is as a part of the first clause se elided in the second clause On the other hand, a basic rule was adopted saying that a single finite verb form indicates a single i.e., verb constitutes (a core of) a (providing that other formal labels as, e.g., brackets do not indicate more levels). This rule implies that if the shared sentence member is a predicate, then the particular segments are joined together into a single clause, as in the following example. pˇriˇsel came yesterday and my grandma today.’ Other constructions a construction where the same ‘idea’ is rendered in different ways (the latter being an explanatory equivalent of the former), both having the same syntactic relation to other sentence members (e.g., a name and a function of particular person, as in the following sentence). to V´aclav was announced by V´aclav Havel, president of the Czech Republic.’ Following PDT, apposition is treated in the same way as coordination as the members of an account for this decision lies in the verb-centric character of dependency syntax traditionally used for Czech. apposition are considered to share (multiple) syntactic position in a sentence (like in the case of coordination). to PDT, explicit/unambiguous formal mark, as e.g. brackets, is annotated as segment(s) on the same level as its/their neighboring segments. koupil dying, nobody knows why, he bought a tram pass.’ Again, parenthetical expressions are captured as separate clauses even if they consist of fragmental expression. i.e., direct speech without quotation marks (or other formal label(s)) is annotated as segment(s) on the same level as the segment containing a governing verb. The reason is quite evident – there is no formally expressed indication of subordination in the segment(s) creating a semi-direct speech. doma will be late, said Pavel.’ 4 Data Format and Editor for Segment Annotation 4.1 PML Data Format Markup (PML), see Paand (2006) is an XML-based domain language which has been developed and is used as primary data format for PDT (version 2.0). The PDT 2.0 data consist of one non-annotated word layer (w-layer) and three layers of annotation: morphological (m-layer), analytical (a-layer) and tectogrammatical (t-layer). In PML, individual layers of annotation can be stacked one over another in a stand-off fashion and linked together as well as with other data resources in a consistent way. We use two layers in our annotation editor, namely the m-layer and the a-layer. The m-layer provides the word form, lemma and tag for every token. The a-layer represents syntactic relations between tokens, resulting in an analytical tree. For the segment annotation, only information on analytical functions of tokens is used – it helps the annotators in their decisions on the appropriate level of embedding and in disambiguation if more readings of a particular sentence are possible. -guide/en/html/ch03.html#a-data-formats 78 Figure 2: Class hierarchy of SegView annotation editor. max segments in clause 27 max clauses in sentence 11 max levels of embedding 4 Table 1: Basic statistics of the annotated texts. sentences segments clauses max level 783 1 1 0 298 2 1 0 195 2 2 1 148 3 2 1 123 3 1 0 111 2 2 0 The output of the segment annotation is stored as a new layer of annotation, the seg-layer. 4.2 SegView Annotation Editor The SegView annotation editor is implemented completely in Java because of its cross-platformity and availability of rich libraries. The presentalayer is implemented in the class Mainlinthe standard Swing library. As for the data layer, the editor works with files in the PML format (see Section 4.1). The model representing the core of the implementation comprises three classes: Sentence, Word and Segment, Figure 2. After launching the editor, the user has the possibility to select multiple files to annotate. After the selection, the program directly reads the files and creates an internal representation with the instances of the three aforementioned classes. The manual annotation is saved in files with the exten- The screenshot of SegView editor is shown in Figure 3. 5 Basic Statistics and Conclusion We have described the pilot phase of the segment annotation, during which 2,699 sentences from PDT were annotated with respect to their sentence Table 1 summarizes the amount of annotated data and gives statistics on number of processed segments and clauses. The most frequent annotation patterns are presented in Table 2 showing the most common types of sentences and relation among their clauses (only patterns with more than 100 sentence instances are listed). have focused on the sentences from data/full/amw/train2 portion of the PDT data. Table 2: Distribution of segments and clauses. The most frequent type of annotated sentence consists of one segment only (and thus one clause), then comes the case where two segments form a single clause. The third position is for sentences with two segments, each forming an individual clause, where one of them depends on the other). The fourth case represents sentences formed by two clauses, one either depending on the other or forming a parenthesis. The fifth and sixth line represent sentences with segments on the same level, e.i., with sentence members in coordination or apposition and with coordinated clauses, respectively. (The most common cases listed in the table represent 61.5% of the annotated sentences; the rest has more complicated structures.) Future work We focus on the inter-annotator agreement on a reasonable large set of data now to check the consistency between the human annotators. Then the annotation will continue – the goal is to cover 10% of sentences from PDT with assigned sentence structure. We expect the use of the manually annotated data for testing tools and hypotheses on possible sentence structures. The proposed amount of data is comparable with the standard PDT testing data. We do not foreseen the use of this set of segmentation charts for training statistically-based tool(s) for an automatic identification of sentence structures. The set of precisely annotated data allows us to solidly compare and evaluate the already existing automatic segmentation tools processing either the raw texts or syntactically annotated trees, see Kr˚uza and Kuboˇn (2009) and Lopatkov´a and 79 Figure 3: SegView editor: The segmentation chart for sentence ‘According to the General-Anzeiger, Czech president appealed to Czechs and Germans that they should treat their history responsibly and improve their mutual dialogue and cooperation.’ (clauses marked by ellipses). Holan (2009). These data also allow us to search for systemic differences between the manual and automatic sentence structure annotation. Then the possibility of further improving the tools will be opened. The use of data with automatically annotated sentence structure in machine translation system among related languages, as in Homola and Kubo&amp;quot;n (2008), is also foreseen.</abstract>
<note confidence="0.70598745">Acknowledgements This paper presents the results of the grant of the Grant Agency of Czech Republic No. 405/08/0681. The research is out within the project of the Ministry of Education, Youth and Sports of Czech Republic No. MSM0021620838. References Steven P. Abney. 1991. Parsing By Chunks. In R. Berwick, S. Abney, and C. Tenny, editors, pages 257–278. Kluwer Academic Publishers. Steven P. Abney. 1995. Partial Parsing via Finite-State of Natural Language Engineer- 2(4):337–344. Fabio Ciravegna and Alberto Lavelli. 1999. Full Text Parsing using Cascades of Rules: An Information Procedure. In of pages 102–109. University of Bergen. Jan Haji&amp;quot;c, Eva Haji&amp;quot;cov´a, Jarmila Panevov´a, Petr Sgall, Petr Pajas, Jan &amp;quot;St&amp;quot;ep´anek, Ji&amp;quot;riHavelka, and Marie 2006. Dependency Treebank LDC. Haji&amp;quot;c. 2004. of Rich Inflection Morphology of Karolinum Press. Petr Homola and Vladislav Kubo&amp;quot;n. 2008. A hybrid machine translation system for typologically related languages. In David Wilson and Chad Lane, editors, of FLAIRS pages 227–228, Coconut Grove, Florida, USA. AAAI Press. Bernard E. M. Jones. 1994. Exploiting the Role of in Parsing Natural Text. In the pages 421–425. Old&amp;quot;rich Kr˚uza and Vladislav Kubo&amp;quot;n. 2009. Automatic Extraction of Clause Relationships from a Treebank. Linguistics and Intelligent Text - Proceedings of CICLing volume of pages 195–206. Springer-Verlag. Vladislav Kubo&amp;quot;n, Mark´eta Lopatkov´a, Martin Pl´atek, and Patrice Pognan. 2007. A Linguistically-Based Segmentation of Complex Sentences. In D.C. Wiland G.C.J. Sutcliffe, editors, of pages 368–374. AAAI Press. Kubo&amp;quot;n. 2001. of Robust Parsing Ph.D. thesis, Faculty of Mathematics and Physics, Charles University in Prague. Mark´eta Lopatkov´a and Tom´a&amp;quot;s Holan. 2009. Segmentation Charts for Czech – Relations among Segments in Complex Sentences. In A. H. Dediu, A. M. and C. Martin-Vide, editors, of volume 5457 of pages 542–553. Springer-Verlag. Tomohiro Ohno, Shigeki Matsubara, Hideki Kashioka, Takehiko Maruyama, and Yasuyoshi Inagaki. 2006. Dependency Parsing of Japanese Spoken Mono- Based on Clause Boundaries. In COLING and pages 169–176. ACL. 80 Pajas and Jan 2006. XML-Based Rep-</note>
<abstract confidence="0.8353995">resentation of Multi-Layered Annotation in the PDT In of LREC 2006 Workshop on and Layering Linguistic pages 40–47. ELRA.</abstract>
<note confidence="0.42713975">Zeman. 2004. with a Statistical De- Ph.D. thesis, Charles University in Prague, Prague. 81</note>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Steven P Abney</author>
</authors>
<title>Parsing By Chunks. In</title>
<date>1991</date>
<booktitle>Principle-Based Parsing,</booktitle>
<pages>257--278</pages>
<editor>R. Berwick, S. Abney, and C. Tenny, editors,</editor>
<publisher>Kluwer Academic Publishers.</publisher>
<contexts>
<context position="2481" citStr="Abney (1991)" startWordPosition="365" endWordPosition="366">nguage resource and to enrich it with a new layer of annotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and Holan (2009).1 The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Based on segment annotation, the annotators identify clauses forming (complex) sentences: they group the segments constituting individual clauses of complex sentences. Contrary to such well known approaches as e.g. chunking, see Abney (1991) or cascaded parsing, see Abney (1995) or Ciravegna and Lavelli (1999), which group individual tokens into more complex structures as nominal or prepositional phrases, i.e., in a bottom-up direction, the proposed approach aims at determining a hierarchy of sentence parts in a ‘top-down’ way. Such an approach is quite novel not only for Czech, it has not been reported for other Slavic languages. Prague Dependency Treebank2 (PDT), see Hajiˇc et al. (2006) is a large and elaborated corpus with rich syntactic annotation of Czech newspaper texts. As the dependency-based framework has been adopted f</context>
</contexts>
<marker>Abney, 1991</marker>
<rawString>Steven P. Abney. 1991. Parsing By Chunks. In R. Berwick, S. Abney, and C. Tenny, editors, Principle-Based Parsing, pages 257–278. Kluwer Academic Publishers.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Steven P Abney</author>
</authors>
<title>Partial Parsing via Finite-State Cascades.</title>
<date>1995</date>
<journal>Journal of Natural Language Engineering,</journal>
<volume>2</volume>
<issue>4</issue>
<contexts>
<context position="2519" citStr="Abney (1995)" startWordPosition="371" endWordPosition="372">a new layer of annotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and Holan (2009).1 The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Based on segment annotation, the annotators identify clauses forming (complex) sentences: they group the segments constituting individual clauses of complex sentences. Contrary to such well known approaches as e.g. chunking, see Abney (1991) or cascaded parsing, see Abney (1995) or Ciravegna and Lavelli (1999), which group individual tokens into more complex structures as nominal or prepositional phrases, i.e., in a bottom-up direction, the proposed approach aims at determining a hierarchy of sentence parts in a ‘top-down’ way. Such an approach is quite novel not only for Czech, it has not been reported for other Slavic languages. Prague Dependency Treebank2 (PDT), see Hajiˇc et al. (2006) is a large and elaborated corpus with rich syntactic annotation of Czech newspaper texts. As the dependency-based framework has been adopted for PDT, the treebank contains explicit</context>
</contexts>
<marker>Abney, 1995</marker>
<rawString>Steven P. Abney. 1995. Partial Parsing via Finite-State Cascades. Journal of Natural Language Engineering, 2(4):337–344.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fabio Ciravegna</author>
<author>Alberto Lavelli</author>
</authors>
<title>Full Text Parsing using Cascades of Rules: An Information Extraction Procedure.</title>
<date>1999</date>
<booktitle>In Proceedings of EACL’99,</booktitle>
<pages>102--109</pages>
<institution>University of Bergen.</institution>
<contexts>
<context position="2551" citStr="Ciravegna and Lavelli (1999)" startWordPosition="374" endWordPosition="377">nnotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and Holan (2009).1 The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Based on segment annotation, the annotators identify clauses forming (complex) sentences: they group the segments constituting individual clauses of complex sentences. Contrary to such well known approaches as e.g. chunking, see Abney (1991) or cascaded parsing, see Abney (1995) or Ciravegna and Lavelli (1999), which group individual tokens into more complex structures as nominal or prepositional phrases, i.e., in a bottom-up direction, the proposed approach aims at determining a hierarchy of sentence parts in a ‘top-down’ way. Such an approach is quite novel not only for Czech, it has not been reported for other Slavic languages. Prague Dependency Treebank2 (PDT), see Hajiˇc et al. (2006) is a large and elaborated corpus with rich syntactic annotation of Czech newspaper texts. As the dependency-based framework has been adopted for PDT, the treebank contains explicit information on mutual relations</context>
</contexts>
<marker>Ciravegna, Lavelli, 1999</marker>
<rawString>Fabio Ciravegna and Alberto Lavelli. 1999. Full Text Parsing using Cascades of Rules: An Information Extraction Procedure. In Proceedings of EACL’99, pages 102–109. University of Bergen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jan Hajic</author>
<author>Eva Hajicov´a</author>
<author>Jarmila Panevov´a</author>
<author>Petr Sgall</author>
<author>Petr Pajas</author>
<author>Jan Step´anek</author>
<author>JiriHavelka</author>
<author>Marie Mikulov´a</author>
</authors>
<title>Prague Dependency Treebank 2.0.</title>
<date>2006</date>
<publisher>LDC.</publisher>
<marker>Hajic, Hajicov´a, Panevov´a, Sgall, Pajas, Step´anek, JiriHavelka, Mikulov´a, 2006</marker>
<rawString>Jan Haji&amp;quot;c, Eva Haji&amp;quot;cov´a, Jarmila Panevov´a, Petr Sgall, Petr Pajas, Jan &amp;quot;St&amp;quot;ep´anek, Ji&amp;quot;riHavelka, and Marie Mikulov´a. 2006. Prague Dependency Treebank 2.0. LDC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jan Hajic</author>
</authors>
<title>Disambiguation of Rich Inflection (Computational Morphology of Czech).</title>
<date>2004</date>
<publisher>Karolinum Press.</publisher>
<marker>Hajic, 2004</marker>
<rawString>Jan Haji&amp;quot;c. 2004. Disambiguation of Rich Inflection (Computational Morphology of Czech). Karolinum Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Petr Homola</author>
<author>Vladislav Kubon</author>
</authors>
<title>A hybrid machine translation system for typologically related languages.</title>
<date>2008</date>
<booktitle>In David Wilson and</booktitle>
<pages>227--228</pages>
<editor>Chad Lane, editors,</editor>
<publisher>AAAI Press.</publisher>
<location>Coconut Grove, Florida, USA.</location>
<marker>Homola, Kubon, 2008</marker>
<rawString>Petr Homola and Vladislav Kubo&amp;quot;n. 2008. A hybrid machine translation system for typologically related languages. In David Wilson and Chad Lane, editors, Proceedings of FLAIRS 2008), pages 227–228, Coconut Grove, Florida, USA. AAAI Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bernard E M Jones</author>
</authors>
<title>Exploiting the Role of Punctuation in Parsing Natural Text.</title>
<date>1994</date>
<booktitle>In Proceedings of the COLING’94,</booktitle>
<pages>421--425</pages>
<contexts>
<context position="1643" citStr="Jones (1994)" startWordPosition="240" endWordPosition="241">ural languages is the fundamental requirement of many applied tasks. Parsers providing automatic syntactic analysis are quite reliable for relatively short and simple sentences. However, their reliability is significantly lower for long and complex sentences, especially for languages with free word order; see, e.g., Zeman (2004) for results for Czech. The identification of the overall structure of a sentence prior to its full syntactic analysis is a natural step capable to reduce the complexity of full analysis. Such methods brought good results for typologically different languages, see e.g. Jones (1994) for English or Ohno et al. (2006) for Japanese. The goal of the presented project is to annotate a structure of clauses to Czech sentences from the Prague Dependency Treebank. The main idea is to reuse the already existing language resource and to enrich it with a new layer of annotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and Holan (2009).1 The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Bas</context>
</contexts>
<marker>Jones, 1994</marker>
<rawString>Bernard E. M. Jones. 1994. Exploiting the Role of Punctuation in Parsing Natural Text. In Proceedings of the COLING’94, pages 421–425.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Oldrich Kr˚uza</author>
<author>Vladislav Kubon</author>
</authors>
<title>Automatic Extraction of Clause Relationships from a Treebank.</title>
<date>2009</date>
<booktitle>In Computational Linguistics and Intelligent Text Processing - Proceedings of CICLing 2009,</booktitle>
<volume>5449</volume>
<pages>195--206</pages>
<publisher>Springer-Verlag.</publisher>
<marker>Kr˚uza, Kubon, 2009</marker>
<rawString>Old&amp;quot;rich Kr˚uza and Vladislav Kubo&amp;quot;n. 2009. Automatic Extraction of Clause Relationships from a Treebank. In Computational Linguistics and Intelligent Text Processing - Proceedings of CICLing 2009, volume 5449 of LNCS, pages 195–206. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vladislav Kubon</author>
<author>Mark´eta Lopatkov´a</author>
<author>Martin Pl´atek</author>
<author>Patrice Pognan</author>
</authors>
<title>A Linguistically-Based Segmentation of Complex Sentences.</title>
<date>2007</date>
<booktitle>Proceedings of FLAIRS Conference,</booktitle>
<pages>368--374</pages>
<editor>In D.C. Wilson and G.C.J. Sutcliffe, editors,</editor>
<publisher>AAAI Press.</publisher>
<marker>Kubon, Lopatkov´a, Pl´atek, Pognan, 2007</marker>
<rawString>Vladislav Kubo&amp;quot;n, Mark´eta Lopatkov´a, Martin Pl´atek, and Patrice Pognan. 2007. A Linguistically-Based Segmentation of Complex Sentences. In D.C. Wilson and G.C.J. Sutcliffe, editors, Proceedings of FLAIRS Conference, pages 368–374. AAAI Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vladislav Kubon</author>
</authors>
<title>Problems of Robust Parsing of Czech.</title>
<date>2001</date>
<tech>Ph.D. thesis,</tech>
<institution>Faculty of Mathematics and Physics, Charles University in Prague.</institution>
<marker>Kubon, 2001</marker>
<rawString>Vladislav Kubo&amp;quot;n. 2001. Problems of Robust Parsing of Czech. Ph.D. thesis, Faculty of Mathematics and Physics, Charles University in Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark´eta Lopatkov´a</author>
<author>Tom´as Holan</author>
</authors>
<title>Segmentation Charts for Czech – Relations among Segments in Complex Sentences.</title>
<date>2009</date>
<booktitle>Proceedings of LATA 2009,</booktitle>
<volume>5457</volume>
<pages>542--553</pages>
<editor>In A. H. Dediu, A. M. Ionescu, and C. Martin-Vide, editors,</editor>
<publisher>Springer-Verlag.</publisher>
<marker>Lopatkov´a, Holan, 2009</marker>
<rawString>Mark´eta Lopatkov´a and Tom´a&amp;quot;s Holan. 2009. Segmentation Charts for Czech – Relations among Segments in Complex Sentences. In A. H. Dediu, A. M. Ionescu, and C. Martin-Vide, editors, Proceedings of LATA 2009, volume 5457 of LNCS, pages 542–553. Springer-Verlag.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tomohiro Ohno</author>
<author>Shigeki Matsubara</author>
<author>Hideki Kashioka</author>
<author>Takehiko Maruyama</author>
<author>Yasuyoshi Inagaki</author>
</authors>
<title>Dependency Parsing of Japanese Spoken Monologue Based on Clause Boundaries.</title>
<date>2006</date>
<booktitle>In Proceedings of COLING and ACL,</booktitle>
<pages>169--176</pages>
<publisher>ACL.</publisher>
<contexts>
<context position="1677" citStr="Ohno et al. (2006)" startWordPosition="245" endWordPosition="248">ental requirement of many applied tasks. Parsers providing automatic syntactic analysis are quite reliable for relatively short and simple sentences. However, their reliability is significantly lower for long and complex sentences, especially for languages with free word order; see, e.g., Zeman (2004) for results for Czech. The identification of the overall structure of a sentence prior to its full syntactic analysis is a natural step capable to reduce the complexity of full analysis. Such methods brought good results for typologically different languages, see e.g. Jones (1994) for English or Ohno et al. (2006) for Japanese. The goal of the presented project is to annotate a structure of clauses to Czech sentences from the Prague Dependency Treebank. The main idea is to reuse the already existing language resource and to enrich it with a new layer of annotation, a layer of clause structure. We exploit a concept of segments, easily automatically detectable and linguistically motivated units, as they were defined by Lopatkov´a and Holan (2009).1 The annotation captures relationship among segments, especially subordination, coordination, apposition and parenthesis. Based on segment annotation, the anno</context>
</contexts>
<marker>Ohno, Matsubara, Kashioka, Maruyama, Inagaki, 2006</marker>
<rawString>Tomohiro Ohno, Shigeki Matsubara, Hideki Kashioka, Takehiko Maruyama, and Yasuyoshi Inagaki. 2006. Dependency Parsing of Japanese Spoken Monologue Based on Clause Boundaries. In Proceedings of COLING and ACL, pages 169–176. ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Petr Pajas</author>
<author>Jan ˇStˇep´anek</author>
</authors>
<title>XML-Based Representation of Multi-Layered Annotation in the PDT 2.0. In</title>
<date>2006</date>
<booktitle>Proceedings of LREC 2006 Workshop on Merging and Layering Linguistic Information,</booktitle>
<pages>40--47</pages>
<publisher>ELRA.</publisher>
<marker>Pajas, ˇStˇep´anek, 2006</marker>
<rawString>Petr Pajas and Jan ˇStˇep´anek. 2006. XML-Based Representation of Multi-Layered Annotation in the PDT 2.0. In Proceedings of LREC 2006 Workshop on Merging and Layering Linguistic Information, pages 40–47. ELRA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Daniel Zeman</author>
</authors>
<title>Parsing with a Statistical Dependency Model.</title>
<date>2004</date>
<tech>Ph.D. thesis,</tech>
<institution>Charles University in Prague,</institution>
<location>Prague.</location>
<contexts>
<context position="1361" citStr="Zeman (2004)" startWordPosition="194" endWordPosition="196">r/subordination, coordination, apposition and parenthesis. Then they identify individual clauses forming complex sentences. In the pilot phase of the annotation, 2,699 sentences from PDT were annotated with respect to their sentence structure. 1 Motivation Syntactic analysis of natural languages is the fundamental requirement of many applied tasks. Parsers providing automatic syntactic analysis are quite reliable for relatively short and simple sentences. However, their reliability is significantly lower for long and complex sentences, especially for languages with free word order; see, e.g., Zeman (2004) for results for Czech. The identification of the overall structure of a sentence prior to its full syntactic analysis is a natural step capable to reduce the complexity of full analysis. Such methods brought good results for typologically different languages, see e.g. Jones (1994) for English or Ohno et al. (2006) for Japanese. The goal of the presented project is to annotate a structure of clauses to Czech sentences from the Prague Dependency Treebank. The main idea is to reuse the already existing language resource and to enrich it with a new layer of annotation, a layer of clause structure</context>
</contexts>
<marker>Zeman, 2004</marker>
<rawString>Daniel Zeman. 2004. Parsing with a Statistical Dependency Model. Ph.D. thesis, Charles University in Prague, Prague.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>