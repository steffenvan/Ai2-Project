<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.998145">
Generating Phrasal and Sentential
Paraphrases: A Survey of
Data-Driven Methods
</title>
<author confidence="0.999613">
Nitin Madnani*
</author>
<affiliation confidence="0.999808">
University of Maryland, College Park
</affiliation>
<author confidence="0.991738">
Bonnie J. Dorr**
</author>
<affiliation confidence="0.9983">
University of Maryland, College Park
</affiliation>
<bodyText confidence="0.9839353">
The task of paraphrasing is inherently familiar to speakers of all languages. Moreover, the task of
automatically generating or extracting semantic equivalences for the various units of language—
words, phrases, and sentences—is an important part of natural language processing (NLP)
and is being increasingly employed to improve the performance of several NLP applications.
In this article, we attempt to conduct a comprehensive and application-independent survey of
data-driven phrasal and sentential paraphrase generation methods, while also conveying an
appreciation for the importance and potential use of paraphrases in the field of NLP research.
Recent work done in manual and automatic construction of paraphrase corpora is also examined.
We also discuss the strategies used for evaluating paraphrase generation techniques and briefly
explore some future trends in paraphrase generation.
</bodyText>
<sectionHeader confidence="0.996087" genericHeader="abstract">
1. Introduction
</sectionHeader>
<bodyText confidence="0.9999835">
Although everyone may be familiar with the notion of paraphrase in its most funda-
mental sense, there is still room for elaboration on how paraphrases may be automat-
ically generated or elicited for use in language processing applications. In this survey,
we make an attempt at such an elaboration. An important outcome of this survey is
the discovery that there are a large variety of paraphrase generation methods, each
with widely differing sets of characteristics, in terms of performance as well as ease
of deployment. We also find that although many paraphrase methods are developed
with a particular application in mind, all methods share the potential for more general
applicability. Finally, we observe that the choice of the most appropriate method for
an application depends on proper matching of the characteristics of the produced
paraphrases with an appropriate method.
It could be argued that it is premature to survey an area of research that has shown
promise but has not yet been tested for a long enough period (and in enough systems).
However, we believe this argument actually strengthens the motivation for a survey
</bodyText>
<affiliation confidence="0.99916725">
* Department of Computer Science and Institute for Advanced Computer Studies, A.V. Williams Bldg,
University of Maryland, College Park, MD 20742, USA. E-mail: nmadnani@umiacs.umd.edu.
** Department of Computer Science and Institute for Advanced Computer Studies, A.V. Williams Bldg,
University of Maryland, College Park, MD 20742, USA. E-mail: bonnie@umiacs.umd.edu.
</affiliation>
<note confidence="0.79846275">
Submission received: 16 December 2008; revised submission received: 30 November 2009; accepted for
publication: 7 March 2010.
© 2010 Association for Computational Linguistics
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.999644571428572">
that can encourage the community to use paraphrases by providing an application-
independent, cohesive, and condensed discussion of data-driven paraphrase generation
techniques. We should also acknowledge related work that has been done on furthering
the community’s understanding of paraphrases. Hirst (2003) presents a comprehensive
survey of paraphrasing focused on a deep analysis of the nature of a paraphrase. The
current survey focuses instead on delineating the salient characteristics of the various
paraphrase generation methods with an emphasis on describing how they could be
used in several different NLP applications. Both these treatments provide different but
valuable perspectives on paraphrasing.
The remainder of this section formalizes the concept of a paraphrase, scopes out
the coverage of this survey’s discussion, and provides broader context and motivation
by discussing applications in which paraphrase generation has proven useful, along
with examples. Section 2 briefly describes the tasks of paraphrase recognition and
textual entailment and their relationship to paraphrase generation and extraction. Sec-
tion 3 forms the major contribution of this survey by examining various corpora-based
techniques for paraphrase generation, organized by corpus type. Section 4 examines
recent work done to construct various types of paraphrase corpora and to elicit human
judgments for such corpora. Section 5 considers the task of evaluating the performance
of paraphrase generation and extraction techniques. Finally, Section 6 provides a brief
glimpse of the future trends in paraphrase generation and Section 7 concludes the
survey with a summary.
</bodyText>
<subsectionHeader confidence="0.980989">
1.1 What is a Paraphrase?
</subsectionHeader>
<bodyText confidence="0.998481428571429">
The concept of paraphrasing is most generally defined on the basis of the principle of
semantic equivalence: A paraphrase is an alternative surface form in the same language
expressing the same semantic content as the original form. Paraphrases may occur at
several levels.
Individual lexical items having the same meaning are usually referred to as lexical
paraphrases or, more commonly, synonyms, for example, (hot, warm) and (eat, consume).
However, lexical paraphrasing cannot be restricted strictly to the concept of synonymy.
There are several other forms such as hyperonymy, where one of the words in the
paraphrastic relationship is either more general or more specific than the other, for
example, (reply, say) and (landlady, hostess).
The term phrasal paraphrase refers to phrasal fragments sharing the same semantic
content. Although these fragments most commonly take the form of syntactic phrases
((work on, soften up) and (take over, assume control of)) they may also be patterns with
linked variables, for example, (Y was built by X, X is the creator of Y).
Two sentences that represent the same semantic content are termed sentential
paraphrases, for example, (I finished my work, I completed my assignment). Although it is
possible to generate very simple sentential paraphrases by simply substituting words
and phrases in the original sentence with their respective semantic equivalents, it is
significantly more difficult to generate more interesting ones such as (He needed to make
a quick decision in that situation, The scenario required him to make a split-second judgment).
Culicover (1968) describes some common forms of sentential paraphrases.
</bodyText>
<subsectionHeader confidence="0.986231">
1.2 Scope of Discussion
</subsectionHeader>
<bodyText confidence="0.9965545">
The idea of paraphrasing has been explored in conjunction with, and employed in, a
large number of natural language processing applications. Given the difficulty inherent
</bodyText>
<page confidence="0.985114">
342
</page>
<note confidence="0.967751">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999951136363637">
in surveying such a diverse task, an unfortunate but necessary remedy is to impose
certain limits on the scope of our discussion. In this survey, we will be restricting our
discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic
patterns) and on generation of sentential paraphrases. More specifically, this entails the
exclusion of certain categories of paraphrasing work. However, as a compromise for
the interested reader, we do include a relatively comprehensive list of references in this
section for the work that is excluded from the survey.
For one, we do not discuss paraphrasing techniques that rely primarily on
knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), hand-
written rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999;
Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from dis-
cussing work on purely lexical paraphrasing which usually comprises various ways to
cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira,
Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and
Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing
methods obviously implies that other lexical methods developed just for specific
applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and
Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at
the other end of the spectrum that paraphrase supra-sentential units such as paragraphs
and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami
2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the
notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002).
</bodyText>
<subsectionHeader confidence="0.998851">
1.3 Applications of Paraphrase Generation
</subsectionHeader>
<bodyText confidence="0.98647445">
Before describing the techniques used for paraphrasing, it is essential to examine the
broader context of the application of paraphrases. For some of the applications we
discuss subsequently, the use of paraphrases in the manner described may not yet be
the norm. However, wherever applicable, we cite recent research that promises gains
in performance by using paraphrases for these applications. Also note that we only
discuss those paraphrasing techniques that can generate the types of paraphrases under
examination in this survey: phrasal and sentential.
1.3.1 Query and Pattern Expansion. One of the most common applications of paraphrasing
is the automatic generation of query variants for submission to information retrieval
systems or of patterns for submission to information extraction systems. Culicover
(1968) describes one of the earliest theoretical frameworks for query keyword expansion
using paraphrases. One of the earliest works to implement this approach (Sp¨arck-
Jones and Tait 1984) generates several simple variants for compound nouns in queries
submitted to a technical information retrieval system. For example:
Original : circuit details
Variant 1 : details about the circuit
Variant 2 : the details of circuits
1 Inferring words to be similar based on similar contexts can be thought of as the most common instance
of employing distributional similarity. The concept of distributional similarity also turns out to be quite
important for phrasal paraphrase generation and is discussed in more detail in Section 3.1.
</bodyText>
<page confidence="0.996849">
343
</page>
<note confidence="0.957621">
Computational Linguistics Volume 36, Number 3
In fact, in recent years, the information retrieval community has extensively explored
the task of query expansion by applying paraphrasing techniques to generate similar or
related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006;
Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in
</note>
<bodyText confidence="0.599678818181818">
these techniques is usually effected by utilizing the query log (a log containing the record
of all queries submitted to the system) to determine semantic similarity. Jacquemin
(1999) generates morphological, syntactic, and semantic variants for phrases in the
agricultural domain. For example:
Original: simultaneous measurements
Variant: concurrent measures
Original: development area
Variant: area of growth
Ravichandran and Hovy (2002) use semi-supervised learning to induce several para-
phrastic patterns for each question type and use them in an open-domain question
answering system. For example, for the INVENTOR question type, they generate:
</bodyText>
<equation confidence="0.511162666666667">
Original : X was invented by Y
Variant 1 : Y’s invention of X
Variant 2 : Y, inventor of X
</equation>
<bodyText confidence="0.989150666666667">
Riezler et al. (2007) expand a query by generating n-best paraphrases for the query
(via a pivot-based sentential paraphrasing model employing bilingual parallel corpora,
detailed in Section 3) and then using any new words introduced therein as additional
query terms. For example, for the query how to live with cat allergies, they may generate
the following two paraphrases. The novel words in the two paraphrases are highlighted
in bold and are used to expand the original query:
</bodyText>
<equation confidence="0.6908225">
P1 : ways to live with feline allergy
P2 : how to deal with cat allergens
</equation>
<bodyText confidence="0.9979424">
Finally, paraphrases have also been used to improve the task of relation extraction
(Romano et al. 2006). Most recently, Bhagat and Ravichandran (2008) collect paraphras-
tic patterns for relation extraction by applying semi-supervised paraphrase induction
to a very large monolingual corpus. For example, for the relation of “acquisition,” they
collect:
</bodyText>
<equation confidence="0.617532333333333">
Original : X agreed to buy Y
Variant 1 : X completed its acquisition of Y
Variant 2 : X purchased Y
</equation>
<footnote confidence="0.878067">
1.3.2 Expanding Sparse Human Reference Data for Evaluation. A large percentage of NLP
applications are evaluated by having human annotators or subjects carry out the same
</footnote>
<page confidence="0.98815">
344
</page>
<note confidence="0.967816">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.991119717391304">
task for a given set of data and using the output so created as a reference against which
to measure the performance of the system. The two applications where comparison
against human-authored reference output has become the norm are machine translation
and document summarization.
In machine translation evaluation, the translation hypotheses output by a ma-
chine translation system are evaluated against reference translations created by human
translators by measuring the n-gram overlap between the two (Papineni et al. 2002).
However, it is impossible for a single reference translation to capture all possible
verbalizations that can convey the same semantic content. This may unfairly penalize
translation hypotheses that have the same meaning but use n-grams that are not present
in the reference. For example, the given system output S will not have a high score
against the reference R even though it conveys precisely the same semantic content:
S: We must consider the entire community.
R: We must bear in mind the community as a whole.
One solution is to use multiple reference translations, which is expensive. An alternative
solution, tried in a number of recent approaches, is to address this issue by allowing the
evaluation process to take into account paraphrases of phrases in the reference trans-
lation so as to award credit to parts of the translation hypothesis that are semantically,
even if not lexically, correct (Owczarzak et al. 2006; Zhou, Lin, and Hovy 2006).
In evaluation of document summarization, automatically generated summaries
(peers) are also evaluated against reference summaries created by human authors
(models). Zhou et al. (2006) propose a new metric called ParaEval that leverages an
automatically extracted database of phrasal paraphrases to inform the computation of
n-gram overlap between peer summaries and multiple model summaries.
1.3.3 Machine Translation. Besides being used in evaluation of machine translation sys-
tems, paraphrasing has also been applied to directly improve the translation process.
Callison-Burch, Koehn, and Osborne (2006) use automatically induced paraphrases to
improve a statistical phrase-based machine translation system. Such a system works by
dividing the given sentence into phrases and translating each phrase individually by
looking up its translation in a table. The coverage of the translation system is improved
by allowing any source phrase that does not have a translation in the table to use
the translation of one of its paraphrases. For example, if a given Spanish sentence
contains the phrase presidente de Brazil but the system does not have a translation for
it, another Spanish phrase such as presidente brasile˜no may be automatically detected as
a paraphrase of presidente de Brazil; then if the translation table contains a translation for
the paraphrase, the system can use the same translation for the given phrase. Therefore,
paraphrasing allows the translation system to properly handle phrases that it does not
otherwise know how to translate.
Another important issue for statistical machine translation systems is that of
reference sparsity. The fundamental problem that translation systems have to face is
that there is no such thing as the correct translation for any sentence. In fact, any given
source sentence can often be translated into the target language in many valid ways.
Because there can be many “correct answers,” almost all models employed by SMT
systems require, in addition to a large bitext, a held-out development set comprising
multiple high-quality, human-authored reference translations in the target language in
order to tune their parameters relative to a translation quality metric. However, given
</bodyText>
<page confidence="0.995657">
345
</page>
<note confidence="0.799075">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.99958425">
the time and cost implications of such a process, most such data sets usually have
only a single reference translation. Madnani et al. (2007, 2008b) generate sentential
paraphrases and use them to expand the available reference translations for such sets
so that the machine translation system can learn a better set of system parameters.
</bodyText>
<sectionHeader confidence="0.708769" genericHeader="method">
2. Paraphrase Recognition and Textual Entailment
</sectionHeader>
<bodyText confidence="0.99983119047619">
A problem closely related to, and as important as, generating paraphrases is that of
assigning a quantitative measurement to the semantic similarity of two phrases (Fujita
and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and
Katz 2005). A more complex formulation of the task would be to detect or recognize
which sentences in the two texts are paraphrases of each other (Brockett and Dolan
2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and
Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category
of paraphrase detection or recognition. The latter formulation of the task has become
popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques
that require monolingual parallel or comparable corpora (discussed in Section 3) can
benefit immensely from this task. In general, paraphrase recognition can be very helpful
for several NLP applications. Two examples of such applications are text-to-text gener-
ation and information extraction.
Text-to-text generation applications rely heavily on paraphrase recognition. For a
multi-document summarization system, detecting redundancy is a very important con-
cern because two sentences from different documents may convey the same semantic
content and it is important not to repeat the same information in the summary. On
this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set
of sentences by detecting paraphrastic parts and fusing them into a single coherent
sentence. Recognizing similar semantic content is also critical for text simplification
systems (Marsi and Krahmer 2005b).
Information extraction enables the detection of regularities of information
structure—events which are reported many times, about different individuals and in
different forms—and making them explicit so that they can be processed and used in
other ways. Sekine (2006) shows how to use paraphrase recognition to cluster together
extraction patterns to improve the cohesion of the extracted information.
Another recently proposed natural language processing task is that of recognizing
textual entailment: A piece of text T is said to entail a hypothesis H if humans reading
T will infer that H is most likely true. The observant reader will notice that, in this sense,
the task of paraphrase recognition can simply be formulated as bidirectional entailment
recognition. The task of recognizing entailment is an application-independent task and
has important ramifications for almost all other language processing tasks that can
derive benefit from some form of applied semantic inference. For this reason, the task
has received noticeable attention in the research community and annual community-
wide evaluations of entailment systems have been held in the form of the Recognizing
Textual Entailment (RTE) Challenges (Dagan, Glickman, and Magnini 2006; Bar-Haim
et al. 2007; Sekine et al. 2007; Giampiccolo et al. 2008).
Looking towards the future, Dagan (2008) suggests that the textual entailment task
provides a comprehensive framework for semantic inference and argues for building
a concrete inference engine that not only recognizes entailment but also searches for
all entailing texts given an entailment hypothesis H and, conversely, generates all
entailed statements given a text T. Given such an engine, Dagan claims that paraphrase
</bodyText>
<page confidence="0.994513">
346
</page>
<note confidence="0.967655">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999864">
generation is simply a matter of generating all entailed statements given any sentence.
Although this is a very attractive proposition that defines both paraphrase generation
and recognition in terms of textual entailment, there are some important caveats. For
example, textual entailment cannot guarantee that the entailed hypothesis H captures
all of the same meaning as the given text T. Consider the following example:
</bodyText>
<footnote confidence="0.333441">
T: Yahoo’s buyout of Overture was finalized.
H1: Yahoo bought Overture.
H2: Overture is now owned by Yahoo.
</footnote>
<bodyText confidence="0.999471428571428">
Although both H1 and H2 are entailed by T, they are not strictly paraphrases of T
because some of the semantic content has not been carried over. This must be an
important consideration when building the proposed entailment engine. Of course,
even these approximately semantically equivalent constructions may prove useful in
an appropriate downstream application.
The relationship between paraphrasing and entailment is more tightly entwined
than it might appear. Entailment recognition systems sometimes rely on the use of
paraphrastic templates or patterns as inputs (Iftene 2009) and might even use para-
phrase recognition to improve their performance (Bosma and Callison-Burch 2007).
In fact, examination of some RTE data sets in an attempt to quantitatively determine
the presence of paraphrases has shown that a large percentage of the set consists of
paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has
also been observed that, in the entailment challenges, it is relatively easy for submitted
systems to recognize constructions that partially overlap in meaning (approximately
paraphrastic) from those that are actually bound by an entailment relation. On the
flip side, work has also been done to extend entailment recognition techniques for the
purpose of paraphrase recognition (Rus, McCarthy, and Lintean 2008).
Detection of semantic similarity and, to some extent, that of bidirectional entailment
is usually an implicit part of paraphrase generation. However, given the interesting
and diverse work that has been done in both these areas, we feel that any significant
discussion beyond the treatment above merits a separate, detailed survey.
</bodyText>
<sectionHeader confidence="0.754271" genericHeader="method">
3. Paraphrasing with Corpora
</sectionHeader>
<bodyText confidence="0.9999336">
In this section, we explore in detail the data-driven paraphrase generation approaches
that have emerged and have become extremely popular in the last decade or so. These
corpus-based methods have the potential of covering a much wider range of paraphras-
ing phenomena and the advantage of widespread availability of corpora.
We organize this section by the type of corpora used to generate the paraphrases:
a single monolingual corpus, monolingual comparable corpora, monolingual parallel
corpora, and bilingual parallel corpora. This form of organization, in our opinion, is
the most instructive because most of the algorithmic decisions made for paraphrase
generation will depend heavily on the type of corpus used. For instance, it is reasonable
to assume that a different set of considerations will be paramount when using a large
single monolingual corpus than when using bilingual parallel corpora.
However, before delving into the actual paraphrasing methods, we believe that
it would be very useful to explain the motivation behind distributional similarity, an
extremely popular technique that can be used for paraphrase generation with several
different types of corpora. We devote the following section to such an explanation.
</bodyText>
<page confidence="0.992282">
347
</page>
<figure confidence="0.342745">
Computational Linguistics Volume 36, Number 3
</figure>
<subsectionHeader confidence="0.998204">
3.1 Distributional Similarity
</subsectionHeader>
<bodyText confidence="0.986040444444445">
The idea that a language possesses distributional structure was first discussed at length
by Harris (1954). The term represents the notion that one can describe a language in
terms of relationships between the occurrences of its elements (words, morphemes,
phonemes) relative to the occurrence of other elements. The name for the phenomenon
is derived from an element’s distribution—sets of elements in particular positions that
the element occurs with to produce an utterance or a sentence.
More specifically, Harris presents several empirical observations to support the
hypothesis that such a structure exists naturally for language. Here, we closely quote
these observations:
</bodyText>
<listItem confidence="0.947816266666667">
• Utterances and sentences are not produced by arbitrarily putting together
the elements of the language. In fact, these elements usually occur only in
certain positions relative to certain other elements.
• The empirical restrictions on the co-occurrents of a class are respected for
each and every one of its members and are not disregarded for arbitrary
reasons.
• The occurrence of a member of a class relative to another member of a
different class can be computed as a probabilistic measure, defined in
terms of the frequency of that occurrence in some sample or corpus.
• Not every member of every class can occur with every member of another
class (think nouns and adjectives). This observation can be used as a
measure of difference in meaning. For example, if the pair of words teacher
and instructor is considered to be more semantically equivalent than, say,
the pair teacher and musician, then the distributions of the first pair will
also be more alike than that of the latter pair.
</listItem>
<bodyText confidence="0.99934875">
Given these observations, it is relatively easy to characterize the concept of distrib-
utional similarity: words or phrases that share the same distribution—the same set of
words in the same context in a corpus—tend to have similar meanings.
Figure 1 shows the basic idea behind phrasal paraphrase generation techniques that
leverage distributional similarity. The input corpus is usually a single or set of mono-
lingual corpora (parallel or non-parallel). After preprocessing—which may include
tagging the parts of speech, generating parse trees, and other transformations—the next
step is to extract pairs of words or phrases (or patterns) that occur in the same context in
the corpora and hence may be considered (approximately) semantically equivalent. This
extraction may be accomplished by several means (e.g., by using a classifier employing
contextual features or by finding similar paths in dependency trees). Although it is
possible to stop at this point and consider this list as the final output, the list usually
contains a lot of noise and may require additional filtering based on other criteria,
such as collocations counts from another corpus (or the Web). Finally, some techniques
may go even further and attempt to generalize the filtered list of paraphrase pairs
into templates or rules which may then be applied to other sentences to generate their
paraphrases. Note that generalization as a post-processing step may not be necessary if
the induction process can extract distributionally similar patterns directly.
One potential disadvantage of relying on distributional similarity is that items
that are distributionally similar may not necessarily end up being paraphrastic: Both
</bodyText>
<page confidence="0.997809">
348
</page>
<note confidence="0.879061">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<figureCaption confidence="0.977784">
Figure 1
</figureCaption>
<bodyText confidence="0.96348225">
A general architecture for paraphrasing approaches leveraging the distributional similarity
hypothesis.
elements of the pairs (boys, girls), (cats, dogs), (high, low) can occur in similar contexts
but are not semantically equivalent.
</bodyText>
<subsectionHeader confidence="0.999944">
3.2 Paraphrasing Using a Single Monolingual Corpus
</subsectionHeader>
<bodyText confidence="0.999989222222222">
In this section, we concentrate on paraphrase generation methods that operate on a
single monolingual corpus. Most, if not all, such methods usually perform paraphrase
induction by employing the idea of distributional similarity as outlined in the previous
section. Besides the obvious caveat discussed previously regarding distributional sim-
ilarity, we find that the other most important factor affecting the performance of these
methods is the choice of distributional ingredients—that is, the features used to formu-
late the distribution of the extracted units. We consider three commonly used techniques
that generate phrasal paraphrases (or paraphrastic patterns) from a single monolingual
corpus but use very different distributional features in terms of complexity. The first
uses only surface-level features and the other two use features derived from additional
semantic knowledge. Although the latter two methods are able to generate more so-
phisticated paraphrases by virtue of more specific and more informative ingredients,
we find that doing so usually has an adverse effect on their coverage.
Pas¸ca and Dienes (2005) use as their input corpus a very large collection of Web
documents taken from the repository of documents crawled by Google. Although using
Web documents as input data does require a non-trivial pre-processing phase since such
documents tend to be noisier, there are certainly advantages to the use of Web docu-
ments as the input corpus: It does not require parallel (or even comparable) documents
</bodyText>
<page confidence="0.996473">
349
</page>
<note confidence="0.288953">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.996398538461539">
and can allow leveraging of even larger document collections. In addition, the extracted
paraphrases are not tied to any specific domain and are suitable for general application.
Algorithm 1 shows the details of the induction process. Steps 3–6 extract all n-grams
of a specific kind from each sentence: Each n-gram has Lc words at the beginning,
between M1 to M2 words in the middle, and another Lc words at the end. Steps 7–13
can intuitively be interpreted as constructing a textual anchor A—by concatenating a
fixed number of words from the left and the right—for each candidate paraphrase C
and storing the (anchor, candidate) tuple in H. These anchors are taken to constitute
the distribution of the words and phrases under inspection. Finally, each occurrence of
a pair of potential paraphrases, that is, a pair sharing one or more anchors, is counted.
The final set of phrasal paraphrastic pairs is returned.
This algorithm embodies the spirit of the hypothesis of distributional similarity: It
considers all words and phrases that are distributionally similar—those that occur with
the same sets of anchors (or distributions)—to be paraphrases of each other. Addition-
ally, the larger the set of shared anchors for two candidate phrases, the stronger the like-
lihood that they are paraphrases of each other. After extracting the list of paraphrases,
less likely phrasal paraphrases are filtered out by using an appropriate count threshold.
Pas¸ca and Dienes (2005) attempt to make their anchors even more informative by
attempting variants where they extract the n-grams only from sentences that include
specific additional information to be added to the anchor. For example, in one variant,
they only use sentences where the candidate phrase is surrounded by named entities
Algorithm 1 (Pa¸sca and Dienes 2005). Induce a set of phrasal paraphrase pairs H with
associated counts from a corpus of pre-processed Web documents.
Summary. Extract all n-grams from the corpus longer than a pre-stipulated length.
Compute a lexical anchor for each extracted n-gram. Pairs of n-grams that share lexical
anchors are then construed to be paraphrases.
</bodyText>
<listItem confidence="0.99243645">
1: Let N represent a set of n-grams extracted from the corpus
2: N &lt;-- {φ}, H &lt;-- {φ}
3: for each sentence E in the corpus do
4: Extract the set of n-grams NE = {¯ei s.t (2Lc + M1) &lt; J ¯eiJ &lt; (2Lc + M2)}}, where
M1, M2, and Lc are all preset constants and M1 &lt; M2
5: N &lt; --N U NE
6: end for
7: for each n-gram e¯ in N do
8: Extract the subsequence C, such that Lc &lt; JCJ &lt; (J¯eJ − Lc − 1)
9: Extract the subsequence AL, such that 0 &lt; JALJ &lt; (Lc − 1)
10: Extract the subsequence AR, such that (J¯eJ − Lc) &lt; JARJ &lt; (J¯eJ − 1)
11: A &lt;-- AL + AR
12: Add the pair (A, C) to H
13: end for
14: for each subset of H with the same anchor A do
15: Exhaustively compare each pair of tuples (A, Ci) and (A, Cj) in this subset
16: Update the count of the candidate paraphrase pair (Ci, Cj) by 1
17: Update the count of the candidate paraphrase pair (Cj, Ci) by 1
18: end for
19: Output H containing paraphrastic pairs and their respective counts
</listItem>
<page confidence="0.99455">
350
</page>
<note confidence="0.774854">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999572125">
on both sides and they attach the nearest pair of entities to the anchor. As expected, the
paraphrases do improve in quality as the anchors become more specific. However, they
also report that as anchors are made more specific by attaching additional information,
the likelihood of finding a candidate pair with the same anchor is reduced.
The ingredients for measuring distributional similarity in a single corpus can cer-
tainly be more complex than simple phrases used by Pas¸ca and Dienes. Lin and Pantel
(2001) discuss how to measure distributional similarity over dependency tree paths in
order to induce generalized paraphrase templates such as:2
</bodyText>
<equation confidence="0.869047">
X found answer to Y ⇔ X solved Y
X caused Y ⇔ Y is blamed on X
</equation>
<bodyText confidence="0.999751714285714">
Whereas single links between nodes in a dependency tree represent direct semantic
relationships, a sequence of links, or a path, can be understood to represent an indirect
relationship. Here, a path is named by concatenating the dependency relationships and
lexical items along the way but excluding the lexical items at the end. In this way, a
path can actually be thought of as a pattern with variables at either end. Consider the
first dependency tree in Figure 2. One dependency path that we could extract would be
between the node John and the node problem. We start at John and see that the first item
in the tree is the dependency relation subject that connects a noun to a verb and so we
append that information to the path.3 The next item in the tree is the word found and
we append its lemma (find) to the path. Next is the semantic relation object connecting a
verb to a noun and we append that. The process continues until we reach the other slot
(the word problem) at which point we stop.4 The extracted path is shown below the tree.
Similarly, we can extract a path for the second dependency tree. Let’s briefly mention
the terminology associated with such paths:
</bodyText>
<listItem confidence="0.9918016">
• The relations on either end of a path are referred to as SlotX and SlotY.
• The tuples (SlotX, John) and (SlotY, problem) are known as the two features
of the path.
• The dependency relations inside the path that are not slots are termed
internal relations.
</listItem>
<bodyText confidence="0.999488888888889">
Intuitively, one can imagine a path to be a complex representation of the pattern X finds
answer to Y, where X and Y are variables. This representation for a path is a perfect fit for
an extended version of the distributional similarity hypothesis: If similar sets of words
fill the same variables for two different patterns, then the patterns may be considered to
have similar meaning, which is indeed the case for the paths in Figure 2.
Lin and Pantel (2001) use newspaper text as their input corpus and create depen-
dency parses for all the sentences in the corpus in the pre-processing step. Algorithm 2
provides the details of the rest of the process: Steps 1 and 2 extract the paths and
compute their distributional properties, and Steps 3–14 extract pairs of paths which are
</bodyText>
<footnote confidence="0.980603857142857">
2 Technically, these templates represent inference rules, such that the right-hand side can be inferred from
the left-hand side but is not semantically equivalent to it. This form of inference is closely related to that
exhibited in textual entailment. This work is primarily concerned with inducing such rules rather than
strict paraphrases.
3 Although the first item is the word John, the words at either end are, by definition, considered slots and
not included in the path.
4 Any relations not connecting two content words, such as determiners and auxiliaries, are ignored.
</footnote>
<page confidence="0.992385">
351
</page>
<figure confidence="0.872562">
Computational Linguistics Volume 36, Number 3
</figure>
<figureCaption confidence="0.993483">
Figure 2
</figureCaption>
<bodyText confidence="0.9956746">
Two different dependency tree paths (a and b) that are considered paraphrastic because the same
words (John and problem) are used to fill the corresponding slots (shown co-indexed) in both the
paths. The implied meaning of each dependency path is also shown.
similar, insofar as such properties are concerned.5 At the end, we have sets of paths (or
inference rules) that are considered to have similar meanings by the algorithm.
The performance of their dependency-path based algorithm depends heavily on the
root of the extracted path. For example, whereas verbs frequently tend to have several
modifiers, nouns tend to have no more than one. However, if a word has any fewer than
two modifiers, no path can go through it as the root. Therefore, the algorithm tends to
perform better for paths with verbal roots. Another issue is that this algorithm, despite
the use of more informative distributional features, can generate several incorrect or im-
plausible paraphrase patterns (inference rules). Recent work has shown how to filter out
incorrect inferences when using them in a downstream application (Pantel et al. 2007).
Finally, there is no reason for the distributional features to be in the same language
as the one in which the paraphrases are desired. Wu and Zhou (2003) describe a
</bodyText>
<footnote confidence="0.847856">
5 A demo of the algorithm is available online at http://demo.patrickpantel.com/Content/LexSem/
paraphrase.htm.
</footnote>
<page confidence="0.994353">
352
</page>
<note confidence="0.701102">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<listItem confidence="0.929817290322581">
Algorithm 2 (Lin and Pantel 2001). Produce inference rules from a parsed corpus.
Summary. Adapt Harris’s (1954) hypothesis of distributional similarity for paths in
dependency trees: If two tree paths have similar distributions such that they tend to
link the same set of words, then they likely mean the same thing and together generate
an inference rule.
1: Extract paths of the form described above from the parsed corpus
2: Initialize a hash H that stores, for each tuple of the form (p, s, w)—where p is a path,
s is one of the two slots in p, and w is a word that appears in that slot—the following
two quantities:
(a) A count C(p, s, w) indicating how many times word w appeared in slot
s in path p
(b) The mutual information I(p, s, w) indicating the strength of association
between slot s and word w in path p:
I(p,s,w) = log �C(p,s,w) Ep,,w, C(p&apos;,s,w&apos;)
Ew, C(p,s,w&apos;) Ep, C(p&apos;,s,w)
3: for each extracted path p do
4: Find all instances (p, w1, w2) such that p connects the words w1 and w2
5: for each such instance do
6: Update C(p, SlotX, w1) and I(p, SlotX, w1) in H
7: Update C(p, SlotY, w2) and I(p, SlotY, w2) in H
8: end for
9: end for
10: for each extracted path p do
11: Create a candidate set C of similar paths by extracting all paths from H that share
at least one feature with p
12: Prune candidates from C based on feature overlap with p
13: Compute the similarity between p and the remaining candidates in C. The simi-
larity is defined in terms of the various values of mutual information I between
the paths’ two slots and all the words that appear in those slots
14: Output all paths in C sorted by their similarity to p
15: end for
</listItem>
<bodyText confidence="0.999873888888889">
bilingual approach to extract English relation-based paraphrastic patterns of the form
(w1, R, w2), where w1 and w2 are English words connected by a dependency link with
the semantic relation R. Figure 3 shows a simple example based on their approach. First,
instances of one type of pattern are extracted from a parsed monolingual corpus. In the
figure, for example, a single instance of the pattern (verb, IN, pobj) has been extracted.
Several new, potentially paraphrastic, English candidate patterns are then induced by
replacing each of the English words with its synonyms in WordNet, one at a time. The
figure shows the list of induced patterns for the given example. Next, each of the English
words in each candidate pattern is translated to Chinese, via a bilingual dictionary.6
</bodyText>
<page confidence="0.82154">
6 The semantic relation R is deemed to be invariant under translation.
353
</page>
<figure confidence="0.878134">
Computational Linguistics Volume 36, Number 3
</figure>
<figureCaption confidence="0.832053">
Figure 3
</figureCaption>
<bodyText confidence="0.962660045454546">
Using Chinese translations as the distributional elements to extract a set of English paraphrastic
patterns from a large English corpus.
Given that the bilingual dictionary may contain multiple Chinese translations for a
given English word, several Chinese patterns may be created for each English candidate
pattern. Each Chinese pattern is assigned a probability value via a simple bag-of-words
translation model (built from a small bilingual corpus) and a language model (trained
on a Chinese collocation database); all translated patterns, along with their probability
values, are then considered to be features of the particular English candidate pattern.
Any English pattern can subsequently be compared to another by computing cosine
similarity over their shared features. English collocation pairs whose similarity value
exceeds some threshold are construed to be paraphrastic.
The theme of a trade-off between the precision of the generated paraphrase set—by
virtue of the increased informativeness of the distributional features—and its coverage
is seen in this work as well. When using translations from the bilingual dictionary, a
knowledge-rich resource, the authors report significantly higher precision than compa-
rable methods that rely only on monolingual information to compute the distributional
similarity. Predictably, they also find that recall values obtained with their dictionary-
based method are lower than those obtained by other methods.
Paraphrase generation techniques using a single monolingual corpus have to rely
on some form of distributional similarity because there are no explicit clues available
that indicate semantic equivalence. In the next section, we look at paraphrasing methods
operating over data that does contain such explicit clues.
</bodyText>
<subsectionHeader confidence="0.999829">
3.3 Paraphrasing Using Monolingual Parallel Corpora
</subsectionHeader>
<bodyText confidence="0.9999886">
It is also possible to generate paraphrastic phrase pairs from a parallel corpus where
each component of the corpus is in the same language. Obviously, the biggest advantage
of parallel corpora is that the sentence pairs are paraphrases almost by definition; they
represent different renderings of the same meaning created by different translators
making different lexical choices. In effect, they contain pairs (or sets) of sentences
</bodyText>
<page confidence="0.997811">
354
</page>
<note confidence="0.455071">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.955993607142857">
that are either semantically equivalent (sentential paraphrases) or have significant se-
mantic overlap. Extraction of phrasal paraphrases can then be effected by extracting
phrasal correspondences from a set of sentences that represent the same (or similar)
semantic content. We present four techniques in this section that generate paraphrases
by finding such correspondences. The first two techniques attempt to do so by relying,
again, on the paradigm of distributional similarity: one by positing a bootstrapping
distributional similarity algorithm and the other by simply adapting the previously
described dependency path similarity algorithm to work with a parallel corpus. The
next two techniques rely on more direct, non-distributional methods to compute the
required correspondences.
Barzilay and McKeown (2001) align phrasal correspondences by attempting to
move beyond a single-pass distributional similarity method. They propose a bootstrap-
ping algorithm that allows for the gradual refinement of the features used to determine
similarity and yields improved paraphrase pairs. As their input corpus, they use mul-
tiple human-written English translations of literary texts such as Madame Bovary and
Twenty Thousand Leagues Under the Sea that are expected to be rich in paraphrastic ex-
pressions because different translators would use their own words while still preserving
the meaning of the original text. The parallel components are obtained by performing
sentence alignment (Gale and Church 1991) on the corpora to obtain sets of parallel
sentences that are then lemmatized, part-of-speech tagged and chunked in order to
identify all the verb and noun phrases. The bootstrapping algorithm is then employed
to incrementally learn better and better contextual features that are then leveraged to
generate semantically similar phrasal correspondences.
Figure 4 shows the basic steps of the algorithm. To seed the algorithm, some fake
paraphrase examples are extracted by using identical words from either side of the
aligned sentence pair. For example, given the following sentence pair:
S1: Emma burst into tears and he tried to comfort her.
S2: Emma cried and he tried to console her.
</bodyText>
<figureCaption confidence="0.809432">
Figure 4
</figureCaption>
<bodyText confidence="0.848966">
A bootstrapping algorithm to extract phrasal paraphrase pairs from monolingual parallel corpora.
</bodyText>
<page confidence="0.992987">
355
</page>
<note confidence="0.293366">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.9962801875">
(tried, tried), (her, her) may be extracted as positive examples and (tried, Emma), (tried,
console) may be extracted as negative examples. Once the seeding examples are ex-
tracted, the next step is to extract contextual features for both the positive and the
negative examples. These features take the form of aligned part-of-speech sequences of
a given length from the left and the right of the example. For instance, we can extract the
contextual feature [(L1 : PRP1,R1 : TO1), (L2 : PRP1,R2 : TO1)] of length 1 for the positive
example (tried, tried). This particular contextual feature contains two tuples, one for
each sentence. The first tuple (L1 : PRP1,R1 : TO1) indicates that, in the first sentence, the
POS tag sequence to the left of the word tried is a personal pronoun (he) and the POS
tag sequence to the right of tired is the preposition to. The second tuple is identical for
this case. Note that the tags of identical tokens are indicated as such by subscripts on the
POS tags. All such features are extracted for both the positive and the negative examples
for all lengths less than or equal to some specified length. In addition, a strength value
is calculated for each positive (negative) contextual feature f using maximum likelihood
estimation as follows:
strength(f )Number of positive (negative) examples surrounded by f
_ Total occurrences off
The extracted list of contextual features is thresholded on the basis of this strength
value. The remaining contextual rules are then applied to the corpora to obtain addi-
tional positive and negative paraphrase examples that, in turn, lead to more refined
contextual rules, and so on. The process is repeated for a fixed number of iterations or
until no new paraphrase examples are produced. The list of extracted paraphrases at
the end of the final iteration represents the final output of the algorithm. In total, about
9, 000 phrasal (including lexical) paraphrases are extracted from 11 translations of five
works of classic literature. Furthermore, the extracted paraphrase pairs are also gener-
alized into about 25 patterns by extracting part-of-speech tag sequences corresponding
to the tokens of the paraphrase pairs.
Barzilay and McKeown also perform an interesting comparison with another tech-
nique that was originally developed for compiling translation lexicons from bilingual
parallel corpora (Melamed 2001). This technique first compiles an initial lexicon using
simple co-occurrence statistics and then uses a competitive linking algorithm (Melamed
1997) to improve the quality of the lexicon. The authors apply this technique to their
monolingual parallel data and observe that the extracted paraphrase pairs are of much
lower quality than the pairs extracted by their own method. We present similar obser-
vations in Section 3.5 and highlight that although more recent translation techniques—
specifically ones that use phrases as units of translation—are better suited to the task
of generating paraphrases than the competitive linking approach, they continue to
suffer from the same problem of low precision. On the other hand, such techniques
can take good advantage of large bilingual corpora and capture a much larger variety
of paraphrastic phenomena.
Ibrahim, Katz, and Lin (2003) propose an approach that applies a modified version
of the dependency path distributional similarity algorithm proposed by Lin and Pantel
(2001) to the same monolingual parallel corpus (multiple translations of literary works)
used by Barzilay and McKeown (2001). The authors claim that their technique is more
tractable than Lin and Pantel’s approach since the sentence-aligned nature of the input
parallel corpus obviates the need to compute similarity over tree paths drawn from
sentences that have zero semantic overlap. Furthermore, they also claim that their
technique exploits the parallel nature of a corpus more effectively than Barzilay and
</bodyText>
<page confidence="0.993797">
356
</page>
<note confidence="0.800527">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.994914">
McKeown’s approach simply because their technique uses tree paths and not just lexical
information. Specifically, they propose the following modifications to Lin and Pantel’s
algorithm:
</bodyText>
<listItem confidence="0.9374192">
1. Extracting tree paths with aligned anchors. Rather than using a single
corpus and comparing paths extracted from possibly unrelated sentences,
the authors leverage sentence-aligned monolingual parallel corpora; the
same as used in Barzilay and McKeown (2001). For each sentence in an
aligned pair, anchors are identified. The anchors from both sentences are
brought into alignment. Once anchor pairs on either side have been
identified and aligned, a breadth-first search algorithm is used to find the
shortest path between the anchor nodes in the dependency trees. All paths
found between anchor pairs for a sentence pair are taken to be
distributionally—and, hence, semantically—similar.
2. Using a sliding frequency measure. The original dependency-based
algorithm (Lin and Pantel 2001) weights all subsequent occurrences of the
same paraphrastic pair of tree paths as much as the first one. In this
version, every successive induction of a paraphrastic pair using the same
anchor pair is weighted less than the previous one. Specifically, inducing
the same paraphrase pair using an anchor pair that has already been seen
only counts for 2n1, where n is the number of times the specific anchor pair
has been seen so far. Therefore, induction of a path pair using new anchors
is better evidence that the pair is paraphrastic, as opposed to the repeated
induction of the path pair from the same anchor over and over again.
</listItem>
<bodyText confidence="0.999959208333333">
Despite the authors’ claims, they offer no quantitative evaluation comparing their
paraphrases with those from Lin and Pantel (2001) or from Barzilay and McKeown
(2001).
It is also possible to find correspondences between the parallel sentences using a
more direct approach instead of relying on distributional similarity. Pang, Knight, and
Marcu (2003) propose an algorithm to align sets of parallel sentences driven entirely
by the syntactic representations of the sentences. The alignment algorithm outputs a
merged lattice from which lexical, phrasal, and sentential paraphrases can simply be
read off. More specifically, they use the Multiple-Translation Chinese corpus that was
originally developed for machine translation evaluation and contains 11 human-written
English translations for each sentence in a news document. Using several sentences
explicitly equivalent in semantic content has the advantage of being a richer source
for paraphrase induction.
As a pre-processing step, any group (of 11 sentences) that contains sentences longer
than 45 words is discarded. Next, each sentence in each of the groups is parsed. All
the parse trees are then iteratively merged into a shared forest. The merging algo-
rithm proceeds top-down and continues to recursively merge constituent nodes that
are expanded identically. It stops upon reaching the leaves or upon encountering the
same constituent node expanded using different grammar rules. Figure 5(a) shows
how the merging algorithm would work on two simple parse trees. In the figure, it
is apparent that the leaves of the forest encode paraphrasing information. However,
the merging only allows identical constituents to be considered as paraphrases. In
addition, keyword-based heuristics need to be employed to prevent inaccurate merging
of constituent nodes due to, say, alternations of active and passive voices among the
</bodyText>
<page confidence="0.960481">
357
</page>
<figure confidence="0.884205">
Computational Linguistics Volume 36, Number 3
</figure>
<figureCaption confidence="0.97563">
Figure 5
</figureCaption>
<bodyText confidence="0.99897952">
The merging algorithm. (a) How the merging algorithm works for two simple parse trees to
produce a shared forest. Note that for clarity, not all constituents are expanded fully. Leaf nodes
with two entries represent paraphrases. (b) The word lattice generated by linearizing the forest
in (a).
sentences in the group. Once the forest is created, it is linearized to create the word
lattice by traversing the nodes in the forest top-down and producing an alternative
path in the lattice for each merged node. Figure 5(b) shows the word lattice generated
for the simple two-tree forest. The lattices also require some post-processing to remove
redundant edges and nodes that may have arisen due to parsing errors or limitations in
the merging algorithm. The final output of the paraphrasing algorithm is a set of word
lattices, one for each sentence group.
These lattices can be used as sources of lexical as well as phrasal paraphrases. All
alternative paths between any pair of nodes can be considered to be paraphrases of
each other. For example, besides the obvious lexical paraphrases, the paraphrase pair
(ate at cafe, chowed down at bistro) can also be extracted from the lattice in Figure 5(b).
In addition, each path between the START and the END nodes in the lattice represents a
sentential paraphrase of the original 11 sentences used to create the lattice.
The direct alignment approach is able to leverage the sheer width (number of
parallel alternatives per sentence position; 11 in this case) of the input corpus to do
away entirely with any need for measuring distributional similarity. In general, it has
several advantages. It can capture a very large number of paraphrases: Each lattice has
on the order of hundreds or thousands of paths depending on the average length of
the sentence group that it was generated from. In addition, the paraphrases produced
are of better quality than other approaches employing parallel corpora for paraphrase
induction discussed so far. However, the approach does have a couple of drawbacks:
</bodyText>
<listItem confidence="0.966329">
• No paraphrases for unseen data. The lattices cannot be applied to new
sentences for generating paraphrases because no form of generalization
is performed to convert lattices into patterns.
</listItem>
<page confidence="0.909988">
358
</page>
<note confidence="0.618512">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<listItem confidence="0.840446">
• Requirement of a large number of human-written translations. Each of
</listItem>
<bodyText confidence="0.98057">
the lattices described is built using 11 manually written translations of the
same sentence, each by a different translator. There are very few corpora
that provide such a large number of human translations. In recent years,
most MT corpora have had no more than four references, which would
certainly lead to much sparser word lattices and smaller numbers of
paraphrases that can be extracted. In fact, given the cost and amount of
effort required for humans to translate a relatively large corpus, it is
common to encounter corpora with only a single human translation.
With such a corpus, of course, this technique would be unable to produce
any paraphrases. One solution might be to augment the relatively few
human translations with translations obtained from automatic machine
translation systems. In fact, the corpus used (Huang, Graff, and
Doddington 2002) also contains, besides the 11 human translations,
6 translations of the same sentence by machine translation systems
available on the Internet at the time. However, no experiments are
performed with the automatic translations.
Finally, an even more direct method to align equivalences in parallel sentence pairs
can be effected by building on word alignment techniques from the field of statistical
machine translation (Brown et al. 1990). Current state-of-the-art SMT methods rely on
unsupervised induction of word alignment between two bilingual parallel sentences to
extract translation equivalences that can then be used to translate a given sentence in
one language into another language. The same methods can be applied to monolingual
parallel sentences without any loss of generality. Quirk, Brockett, and Dolan (2004)
use one such method to extract phrasal paraphrase pairs. Furthermore, they use these
extracted phrasal pairs to construct sentential paraphrases for new sentences.
Mathematically, Quirk, Brockett, and Dolan’s approach to sentential paraphrase
generation may be expressed in terms of the typical channel model equation for
statistical machine translation:
</bodyText>
<equation confidence="0.978189">
E* = arg max P(Ep|E) (1)
p Ep
</equation>
<bodyText confidence="0.9588475">
The equation denotes the search for the optimal paraphrase Ep for a given sentence E.
We may use Bayes’ Theorem to rewrite this as:
</bodyText>
<equation confidence="0.795708">
E* = arg max P(Ep) P(E|Ep)
p Ep
</equation>
<bodyText confidence="0.999950272727273">
where P(Ep) is an n-gram language model providing a probabilistic estimate of the
fluency of a hypothesis Ep and P(E|Ep) is the translation model, or more appropriately
for paraphrasing, the replacement model, providing a probabilistic estimate of what is
essentially the semantic adequacy of the hypothesis paraphrase. Therefore, the optimal
sentential paraphrase may loosely be described as one that fluently captures most, if
not all, of the meaning contained in the input sentence.
It is important to provide a brief description of the parallel corpus used here because
unsupervised induction of word alignments typically requires a relatively large number
of parallel sentence pairs. The monolingual parallel corpus (or more accurately, quasi-
parallel, since not all sentence pairs are fully semantically equivalent) is constructed
by scraping on-line news sites for clusters of articles on the same topic. Such clusters
</bodyText>
<page confidence="0.985308">
359
</page>
<note confidence="0.282208">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.999714666666667">
contain the full text of each article and the dates and times of publication. After re-
moving the mark-up, the authors discard any pair of sentences in a cluster where the
difference in the lengths or the edit distance is larger than some stipulated value. This
method yields a corpus containing approximately 140, 000 quasi-parallel sentence pairs
{(E1, E2)}, where E1 = e11e21 ... em1 , E2 = e12e22 ... en2. The following examples show that the
proposed method can work well:
</bodyText>
<listItem confidence="0.911085833333333">
S1: In only 14 days, U.S. researchers have created an artificial bacteria-eating virus
from synthetic genes.
S2: An artificial bacteria-eating virus has been made from synthetic genes in the
record time of just two weeks.
S1: The largest gains were seen in prices, new orders, inventories, and exports.
S2: Sub-indexes measuring prices, new orders, inventories, and exports increased.
</listItem>
<bodyText confidence="0.997223166666667">
For more details on the creation of this corpus, we refer the reader to Dolan, Quirk,
and Brockett (2004) and, more specifically, to Section 4. Algorithm 3 shows how to
Algorithm 3 (Quirk, Dolan, and Brockett 2004). Generate a set M of phrasal para-
phrases with associated likelihood values from a monolingual parallel corpus C.
Summary. Estimate a simple English to English phrase translation model from C using
word alignments. Use this model to create sentential paraphrases as explained later.
</bodyText>
<listItem confidence="0.991936">
1: M ← {φ}
2: Compute lexical replacement probabilities P(e1|e2) from all sentence pairs in C via
IBM Model 1 estimation
3: Compute a set of word alignments {a} such that for each sentence pair (E1, E2)
</listItem>
<equation confidence="0.960254">
a = a1a2 ... am
whereai ∈ {0...n},m = |E1|,n = |E2|
</equation>
<bodyText confidence="0.6708485">
4: for each word-aligned sentence pair (E1, E2)a in C do
5: Extract pairs of contiguous subsequences ( ¯e1, ¯e2) such that:
</bodyText>
<figure confidence="0.99334975">
(a)  |¯e1 |≤ 5,  |¯e2 |≤ 5
a
(b) ∀i ∈ {1,..., |¯e1|} ∃j ∈ {1,...,|¯e2|}, e1,i ∼ e2,j
a
</figure>
<listItem confidence="0.979418125">
(c) ∀i ∈ {1,. .. ,  |¯e2|} ∃j ∈ {1,.. ., |¯e1|}, e2,i ∼ e1,j
6: Add all extracted pairs to M
7: end for
8: for each paraphrase pair ( ¯e1, ¯e2) in M do
�9: Compute P( ¯e1 |¯e2) = � P(ej1|ek2)
ej1∈¯e1 ek2∈ ¯e2
10: end for
11: Output M containing paraphrastic pairs and associated probabilities
</listItem>
<page confidence="0.98808">
360
</page>
<note confidence="0.796297">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999874166666667">
generate a set of phrasal paraphrase pairs and compute a probability value for each
such pair. In Step 2, a simple parameter estimation technique (Brown et al. 1993) is used
to compute, for later use, the probability of replacing any given word with another.
Step 3 computes a word alignment (indicated by a) between each pair of sentences. This
alignment indicates for each word ei in one string that word ej in the other string from
which it was most likely produced (denoted here by ei ∼ ej). Steps 4–7 extract, from each
</bodyText>
<subsectionHeader confidence="0.691412">
a
</subsectionHeader>
<bodyText confidence="0.99984475">
pair of sentences, pairs of short contiguous phrases that are aligned with each other
according to this alignment. Note that each such extracted pair is essentially a phrasal
paraphrase. Finally, a probability value is computed for each such pair by assuming that
each word of the first phrase can be replaced with each word of the second phrase. This
computation uses the lexical replacement probabilities computed in Step 2.
Now that a set of scored phrasal pairs has been extracted, these pairs can be used to
generate paraphrases for any unseen sentence. Generation proceeds by creating a lattice
for the given sentence. Given a sentence E, the lattice is populated as follows:
</bodyText>
<listItem confidence="0.998069111111111">
1. Create |E |+ 1 vertices q0, q1 . . . q|E|.
2. Create N edges between each pair of vertices qj and qk (j &lt; k) such that N =
the number of phrasal paraphrases for the input phrase e(j+1)e(j+2) . . . ek.
Label each edge with the phrasal paraphrase string itself and its
probability value. Each such edge denotes a possible paraphrasing of the
above input phrase by the replacement model.
3. Add the edges {(qj−1, qj)} and label each edge with the token sj and a
constant u. This is necessary to handle words from the sentence that do
not occur anywhere in the set of paraphrases.
</listItem>
<bodyText confidence="0.995647">
Figure 6 shows an example lattice. Once the lattice has been constructed, it is straight-
forward to extract the 1-best paraphrase by using a dynamic programming algorithm
such as Viterbi decoding and extracting the optimal path from the lattice as scored by the
product of an n-gram language model and the replacement model. In addition, as with
SMT decoding, it is also possible to extract a list of n-best paraphrases from the lattice
by using the appropriate algorithms (Soong and Huang 1990; Mohri and Riley 2002).
Quirk, Brockett, and Dolan (2004) borrow from the statistical machine translation
literature so as to align phrasal equivalences as well as to utilize the aligned phrasal
equivalences to rewrite new sentences. The biggest advantage of this method is its
SMT inheritance: It is possible to produce multiple sentential paraphrases for any new
</bodyText>
<figureCaption confidence="0.60137">
Figure 6
</figureCaption>
<bodyText confidence="0.937564666666667">
A paraphrase generation lattice for the sentence He ate lunch at a cafe near Paris. Alternate paths
between various nodes represent phrasal replacements. The probability values associated with
each edge are not shown for the sake of clarity.
</bodyText>
<page confidence="0.97923">
361
</page>
<note confidence="0.28008">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.994539">
sentence, and there is no limit on the number of sentences that can be paraphrased.7
However, there are certain limitations:
</bodyText>
<listItem confidence="0.9803592">
• Monotonic Translation. It is assumed that a phrasal replacement will
occur in the exact same position in the output sentence as that of the
original phrase in the input sentence. In other words, reorderings of
phrasal units are disallowed.
• Naive Parameter Estimation. Using a bag-of-words approach to
parameter estimation results in a relatively uninformative probability
distribution over the phrasal paraphrases.
• Reliance on edit distance. Relying on edit distance to build the training
corpus of quasi-parallel sentences may exclude sentences that do exhibit a
paraphrastic relationship but differ significantly in constituent orderings.
</listItem>
<bodyText confidence="0.997267166666667">
All of these limitations combined lead to paraphrases that, although grammatically
sound, contain very little variety. Most sentential paraphrases that are generated involve
little more than simple substitutions of words and short phrases. In Section 3.5, we will
discuss other approaches that also find inspiration from statistical machine translation
and attempt to circumvent the above limitations by using a bilingual parallel corpus
instead of a monolingual parallel corpus.
</bodyText>
<subsectionHeader confidence="0.998481">
3.4 Paraphrasing Using Monolingual Comparable Corpora
</subsectionHeader>
<bodyText confidence="0.999958095238095">
Whereas it is clearly to our advantage to have monolingual parallel corpora, such
corpora are usually not very readily available. The corpora usually found in the real
world are comparable instead of being truly parallel: Parallelism between sentences is
replaced by just partial semantic and topical overlap at the level of documents. There-
fore, for monolingual comparable corpora, the task of finding phrasal correspondences
becomes harder because the two corpora may only be related by way of describing
events under the same topic. In such a scenario, possible paraphrasing methods either
(a) forgo any attempts at directly finding such correspondences and fall back to the
distributional similarity workhorse or, (b) attempt to directly induce a form of coarse-
grained alignment between the two corpora and leverage this alignment.
In this section, we describe three methods that generate paraphrases from such
comparable corpora. The first method falls under category (a): Here the elements whose
distributional similarity is being measured are paraphrastic patterns and the distri-
butions themselves are the named entities with which the elements occur in various
sentences. In contrast, the next two methods fall under category (b) and attempt to
directly discover correspondences between two comparable corpora by leveraging a
novel alignment algorithm combined with some similarity heuristics. The difference
between the two latter methods lies only in the efficacy of the alignment algorithm.
Shinyama et al. (2002) use two sets of 300 news articles from two different Japanese
newspapers from the same day as their source of paraphrases. The comparable nature of
the articles is ensured because both sets are from the same day. During pre-processing,
</bodyText>
<footnote confidence="0.503562">
7 However, if no word in the input sentence has been observed in the parallel corpus, the paraphraser
simply reproduces the original sentence as the paraphrase.
</footnote>
<page confidence="0.989959">
362
</page>
<note confidence="0.801676">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.998821666666667">
all named entities in each article are tagged and dependency parses are created for each
sentence in each article. The distributional similarity driven algorithm then proceeds as
follows:
</bodyText>
<listItem confidence="0.985093913043478">
1. For each article in the first set, find the most “similar” article from the
other set, based on a similarity measure computed over the named
entities appearing in the two articles.
2. From each sentence in each such pair of articles, extract all dependency
tree paths that contain at least one named entity and generalize them
into patterns wherein the named entities have been replaced with
variables. Each class of named-entity (e.g., Organization, Person,
Location) gets its own variable. For example, the following sentence:8
Vice President Kuroda of Nihon Yamamura Glass Corp. was promoted to
President.
may give us the following two patterns, among others:
(PERSON) of (ORGANIZATION) was promoted
(PERSON) was promoted to (POST)
3. Find all sentences in the two newswire corpora that match these
patterns. When a match is found, attach the pattern to the sentence
and link all variables to the corresponding named entities in the
sentences.
4. Find all sentences that are most similar to each other (above some preset
threshold), again based on the named entities they share.
5. For each pair of similar sentences, compare their respective attached
patterns. If the variables in the patterns link to the same or comparable
named entities (based on the entity text and type), then consider the
patterns to be paraphrases of each other.
</listItem>
<bodyText confidence="0.849415166666667">
At the end, the output is a list of generalized paraphrase patterns with named entity
types as variables. For example, the algorithm may generate the following two patterns
as paraphrases:
(PERSON) is promoted to (POST)
the promotion of (PERSON) to (POST) is decided
As a later refinement, Sekine (2005) makes a similar attempt at using distributional
similarity over named entity pairs in order to produce a list of fully lexicalized phrasal
paraphrases for specific concepts represented by keywords.
The idea of enlisting named entities as proxies for detecting semantic equivalence is
interesting and has certainly been explored before (see the discussion regarding Pas¸ca
and Dienes [2005] in Section 3.2). However, it has some obvious disadvantages. The
authors manually evaluate the technique by generating paraphrases for two specific
</bodyText>
<footnote confidence="0.925802">
8 Although the authors provide motivating examples in Japanese (transliterated into romaji) in their paper,
we choose to use English here for the sake of clarity.
</footnote>
<page confidence="0.991929">
363
</page>
<note confidence="0.480531">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.99790972">
domains (arrest events and personnel hirings) and find that while the precision is
reasonably good, the coverage is very low primarily due to restrictions on the patterns
that may be extracted in Step 2. In addition, if the average number of entities in
sentences is low, the likelihood of creating incorrect paraphrases is confirmed to be
higher.
Let us now consider the altogether separate idea of deriving coarse-grained corre-
spondences by leveraging the comparable nature of the corpora. Barzilay and Lee (2003)
attempt to do so by generating compact sentence clusters in template form (stored as
word lattices with slots) separately from each corpora and then pairing up templates
from one corpus with those from the other. Once the templates are paired up, a new
incoming sentence that matches one member of a template pair gets rendered as the
other member, thereby generating a paraphrase. They use as input a pair of corpora:
the first (C1) consisting of clusters of news articles published by Agence France Presse
(AFP) and the second (C2) consisting of those published by Reuters. The two corpora
may be considered comparable since the articles in each are related to the same topic
and were published during the same time frame.
Algorithm 4 shows some details of how their technique works. Steps 3–18 show
how to cluster topically related sentences, construct a word lattice from such a cluster,
and convert that into a slotted lattice—basically a word lattice with certain nodes recast
as variables or empty slots. The clustering is done so as to bring together sentences
pertaining to the same topics and having similar structure. The word lattice is the prod-
uct of an algorithm that computes a multiple-sequence alignment (MSA) for a cluster
of sentences (Step 6). A very brief outline of such an algorithm, originally developed
to compute an alignment for a set of three or more protein or DNA sequences, is as
follows:9
</bodyText>
<listItem confidence="0.9938332">
1. Find the most similar pair of sentences in the cluster according to a
similarity scoring function. For this approach, a simplified version of
the edit-distance measure (Barzilay and Lee 2002) is used.
2. Align this sentence pair and replace the pair with this single alignment.
3. Repeat until all sentences have been aligned together.
</listItem>
<bodyText confidence="0.999067214285714">
The word lattice so generated now needs to be converted into a slotted lattice to allow
its use as a paraphrase template. Slotting is performed based on the following intuition:
Areas of high variability between backbone nodes, that is, several distinct parallel paths,
may correspond to template arguments and can be collapsed into one slot that can be
filled by these arguments. However, multiple parallel paths may also appear in the
lattice because of simple synonymy and those paths must be retained for paraphrase
generation to be useful. To differentiate between the two cases, a synonymy threshold s
of 30% is used, as shown in Steps 8–14. The basic idea behind the threshold is that as the
number of sentences increases, the number of different arguments will increase faster
than the number of synonyms. Figure 7 shows how a very simple word lattice may be
generalized into a slotted lattice.
Once all the slotted lattices have been constructed for each corpus, Steps 19–24
try to match the slotted lattices extracted from one corpus to those extracted from the
other by referring back to the sentence clusters from which the original lattices were
</bodyText>
<footnote confidence="0.230711">
9 For more details on MSA algorithms, refer to Gusfield (1997) and Durbin et al. (1998).
</footnote>
<page confidence="0.994102">
364
</page>
<note confidence="0.904121">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.9819206">
Algorithm 4 (Barzilay and Lee 2003). Generate set M of matching lattice pairs given a
pair of comparable corpora C1 and C2.
Summary. Gather topically related sentences from C1 into clusters. Do the same for C2.
Convert each sentence cluster into a slotted lattice using a multiple-sequence alignment
(MSA) algorithm. Compare all lattice pairs and output those likely to be paraphrastic.
</bodyText>
<listItem confidence="0.993550161290323">
1: Let WC1 and WC2 represent word lattices obtained from C1 and C2, respectively
2: M ← {0, WC1 ← {0, WC2 ← {0
3: for each input corpus Ci ∈ {C1, C2} do
4: Create a set of clusters GCi _ {GCi,k} of sentences based on n-gram overlap such
that all sentences in a cluster describe the same kinds of events and share similar
structure
5: for each cluster GCi,k do
6: Compute an MSA for all sentences in GCi,k by using a pre-stipulated scoring
function and represent the output as a word lattice WCi,k
7: Compute the set of backbone nodes Bk for WCi,k, that is, the nodes that are
shared by a majority (≥50%) of the sentences in GCi,k
8: for each backbone node b ∈ Bk do
9: if no more than 30% of all the edges from b lead to the same node then
10: Replace all nodes adjacent to b with a single slot
11: else
12: Delete any node with &lt; 30% of the edges from b leading to it and preserve
the rest
13: end if
14: end for
15: Merge any consecutive slot nodes into a single slot
16: WCi ← WCi ∪ {WCi,k}
17: end for
18: end for
19: for each lattice pair (WC1,j, WC2,k) ∈ WC1 × WC2 do
20: Inspect clusters GC1,j and GC2,k and compare slot fillers in the cross-corpus
sentence pairs written on the same day
21: if comparison score &gt; a pre-stipulated threshold b then
22: M ← M ∪ {(WC1,j, WC2,k)}
23: end if
24: end for
25: Output M containing paraphrastic lattice pairs with linked slots
</listItem>
<bodyText confidence="0.9990467">
generated, comparing the sentences that were written on the same day and computing
a comparison score based on overlap between the sets of arguments that fill the slots. If
this computed score is greater than some fixed threshold value b, then the two lattices
(or patterns) are considered to be paraphrases of each other.
Besides generating pairs of paraphrastic patterns, the authors go one step further
and actually use the patterns to generate paraphrases for new sentences. Given such
a sentence S, the first step is to find an existing slotted lattice from either corpus that
aligns best with S, in terms of the previously mentioned alignment scoring function.
If some lattice is found as a match, then all that remains is to take all corresponding
lattices from the other corpus that are paired with this lattice and use them to create
</bodyText>
<page confidence="0.987202">
365
</page>
<figure confidence="0.820047">
Computational Linguistics Volume 36, Number 3
</figure>
<figureCaption confidence="0.999637">
Figure 7
</figureCaption>
<bodyText confidence="0.999811423076923">
An example showing the generalization of the word lattice (a) into a slotted lattice (b). The word
lattice is produced by aligning seven sentences. Nodes having in-degrees &gt; 1 occur in more than
one sentence. Nodes with thick incoming edges occur in all sentences.
multiple rewritings (paraphrases) for S. Rewriting in this context is a simple matter of
substitution: For each slot in the matching lattice, we know not only the argument from
the sentence that fills it but also the slot in the corresponding rewriting lattice.
As far as the quality of acquired paraphrases is concerned, this approach easily out-
performs almost all other sentential paraphrasing approaches surveyed in this article.
However, a paraphrase is produced only if the incoming sentence matches some existing
template, which leads to a strong bias favoring quality over coverage. In addition,
the construction and generalization of lattices may become computationally expensive
when dealing with much larger corpora.
We can also compare and contrast Barzilay and Lee’s work and the work from
Section 3.3 that seems most closely related: that of Pang, Knight, and Marcu (2003).
Both take sentences grouped together in a cluster and align them into a lattice using a
particular algorithm. Pang, Knight, and Marcu have a pre-defined size for all clusters
since the input corpus is an 11-way parallel corpus. However, Barzilay and Lee have to
construct the clusters from scratch because their input corpus has no pre-defined notion
of parallelism at the sentence level. Both approaches use word lattices to represent and
induce paraphrases since a lattice can efficiently and compactly encode n-gram similar-
ities (sets of shared overlapping word sequences) between a large number of sentences.
However, the two approaches are also different in that Pang, Knight, and Marcu use the
parse trees of all sentences in a cluster to compute the alignment (and build the lattice),
whereas Barzilay and Lee use only surface level information. Furthermore, Barzilay
and Lee can use their slotted lattice pairs to generate paraphrases for novel and unseen
sentences, whereas Pang, Knight, and Marcu cannot paraphrase new sentences at all.
</bodyText>
<page confidence="0.995263">
366
</page>
<note confidence="0.907758">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.998879294117647">
Shen et al. (2006) attempt to improve Barzilay and Lee’s technique by trying to
include syntactic constraints in the cluster alignment algorithm. In that way, it is doing
something similar to what Pang, Knight, and Marcu do but with a comparable corpus
instead of a parallel one. More precisely, whereas Barzilay and Lee use a relatively
simple alignment scoring function based on purely lexical features, Shen et al. try to
bring syntactic features into the mix. The motivation is to constrain the relatively free
nature of the alignment generated by the MSA algorithm—which may lead to the gen-
eration of grammatically incorrect sentences—by using informative syntactic features.
In their approach, even if two words are a lexical match—as defined by Barzilay and
Lee (2003)—they are further inspected in terms of certain pre-defined syntactic features.
Therefore, when computing the alignment similarity score, two lexically matched words
across a sentence pair are not considered to fully match unless their score on syntactic
features also exceeds a preset threshold.
The syntactic features constituting the additional constraints are defined in terms
of the output of a chunk parser. Such a parser takes as input the syntactic trees
of the sentences in a topic cluster and provides the following information for each
word:
</bodyText>
<listItem confidence="0.982436111111111">
• Part-of-speech tag
• IOB tag. This is a notation denoting the constituent covering a word
and its relative position in that constituent (Ramshaw and Marcus 1995).
If a word has the tag I-NP, we can infer that the word is covered by an
NP and located inside that NP. Similarly, B denotes that the word is at
the beginning and O denotes that the word is not covered by any
constituent.
• IOB chain. A concatenation of all IOB tags going from the root of the tree
to the word under consideration.
</listItem>
<bodyText confidence="0.9998399">
With this information and a heuristic to compute the similarity between two words
in terms of their POS and IOB tags, the alignment similarity score can be calculated
as the sum of the heuristic similarity value for the given two words and the heuristic
similarity values for each corresponding node in the two IOB chains. If this score is
higher than some threshold and the two words have similar positions in their respective
sentences, then the words are considered to be a match and can be aligned. Given this
alignment algorithm, the word lattice representing the global alignment is constructed
in an iterative manner similar to the MSA approach.
Shen et al. (2006) present evidence from a manual evaluation that sentences sam-
pled from lattices constructed via the syntactically informed alignment method receive
higher grammaticality scores as compared to sentences from the lattices constructed via
the purely lexical method. However, they present no analysis of the actual paraphrasing
capacity of their, presumably better aligned, lattices. Indeed, they explicitly mention that
their primary goal is to measure the correlation between the syntax-augmented scoring
function and the correctness of the sentences being generated from such lattices, even
if the sentences do not bear a paraphrastic relationship to the input. Even if one were
to assume that the syntax-based alignment method would result in better paraphrases,
it still would not address the primary weakness of Barzilay and Lee’s method: Para-
phrases are only generated for new sentences that match an already existing lattice,
leading to lower coverage.
</bodyText>
<page confidence="0.977751">
367
</page>
<note confidence="0.434742">
Computational Linguistics Volume 36, Number 3
</note>
<subsectionHeader confidence="0.98042">
3.5 Paraphrasing Using Bilingual Parallel Corpora
</subsectionHeader>
<bodyText confidence="0.999935558139535">
In the last decade, there has been a resurgence in research on statistical machine transla-
tion. There has also been an accompanying dramatic increase in the number of available
bilingual parallel corpora due to the strong interest in SMT from both the public and
private sectors. Recent research in paraphrase generation has attempted to leverage
these very large bilingual corpora. In this section, we look at such approaches that rely
on the preservation of meaning across languages and try to recover said meaning by
using cues from the second language.
Using bilingual parallel corpora for paraphrasing has the inherent advantage that
sentences in the other language are exactly semantically equivalent to sentences in
the intended paraphrasing language. Therefore, the most common way to generate
paraphrases with such a corpus exploits both its parallel and bilingual natures: Align
phrases across the two languages and consider all co-aligned phrases in the intended
language to be paraphrases. The bilingual phrasal alignments can simply be generated
by using the automatic techniques developed for the same task in the SMT literature.
Therefore, arguably the most important factor affecting the performance of these
techniques is usually the quality of the automatic bilingual phrasal (or word) alignment
techniques.
One of the most popular methods leveraging bilingual parallel corpora is that
proposed by Bannard and Callison-Burch (2005). This technique operates exactly as
described above by attempting to infer semantic equivalence between phrases in the
same language indirectly with the second language as a bridge. Their approach builds
on one of the initial steps used to train a phrase-based statistical machine translation
system (Koehn, Och, and Marcu 2003). Such systems rely on phrase tables—a tabulation
of correspondences between phrases in the source language and phrases in the target
language. These tables are usually extracted by inducing word alignments between
sentence pairs in a training corpus and then incrementally building longer phrasal
correspondences from individual words and shorter phrases. Once such a tabulation of
bilingual phrasal correspondences is available, correspondences between phrases in one
language may be inferred simply by using the phrases in the other language as pivots.
Algorithm 5 shows how monolingual phrasal correspondences are extracted from
a bilingual corpus C by using word alignments. Steps 3–7 extract bilingual phrasal
correspondences from each sentence pair in the corpus by using heuristically induced
bidirectional word alignments. Figure 8 illustrates this extraction process for two exam-
ple sentence pairs. For each pair, a matrix shows the alignment between the Chinese
and the English words. Element (i, j) of the matrix is filled if there is an alignment link
between the ith Chinese word and the jth English word ej. All phrase pairs consistent
with the word alignment are then extracted. A consistent phrase pair can intuitively
be thought of as a sub-matrix where all alignment points for its rows and columns are
inside it and never outside. Next, Steps 8–11 take all English phrases that correspond
to the same foreign phrase and infer them all to be paraphrases of each other.10 For
example, the English paraphrase pair (effectively contained, under control) is obtained
from Figure 8 by pivoting on the Chinese phrase , shown underlined for both
matrices.
</bodyText>
<footnote confidence="0.687359">
10 Note that it would have been equally easy to pivot on the English side and generate paraphrases in the
other language instead.
</footnote>
<page confidence="0.990642">
368
</page>
<note confidence="0.90602">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.9552512">
Algorithm 5 (Bannard and Callison-Burch 2005). Generate set M of monolingual para-
phrase pairs given a bilingual parallel corpus C.
Summary. Extract bilingual phrase pairs from C using word alignments and standard
SMT heuristics. Pivot all pairs of English phrases on any shared foreign phrases and
consider them paraphrases. The alignment notation from Algorithm 3 is employed.
</bodyText>
<listItem confidence="0.9763384">
1: Let B represent the bilingual phrases extracted from C
2: B ← {φ}, M ← {φ}
3: Compute a word alignment a for each sentence pair (E, F) ∈ C
4: for each aligned sentence pair (E, F)a do
5: Extract the set of bilingual phrasal correspondences {(¯e,f¯)} such that:
</listItem>
<figure confidence="0.9190128">
(a) ∀ei ∈ e¯: ei ∼ fj → fj ∈ ¯f, and
a
a
(a) ∀fj ∈ f¯: fj ∼ ei → ei ∈ e¯
6: B ← B ∪ {(¯e,f¯)}
</figure>
<listItem confidence="0.9076381">
7: end for
8: for each member of the set {((¯ej, ¯fk), (¯el, ¯fm)) s.t. (¯ej, ¯fk) ∈ B
∧ (¯el,¯fm) ∈ B
∧ ¯fk = ¯fm} do
9: M ← M ∪ {(¯ej, ¯el)}
10: Compute p(¯ej|¯el) = Ef¯p(¯ej |f¯)p(¯f|¯el)
11: end for
12: Output M containing paraphrastic pairs and associated probabilities
Using the components of a phrase-based SMT system also makes it easy to assign a
probability value to any of the inferred paraphrase pairs as follows:
</listItem>
<equation confidence="0.984573">
�p(¯ej|¯ek) = � p(¯ej |f¯)p(¯f  |¯ek)
f¯ p(¯ej, ¯f |¯ek) ≈
f¯
</equation>
<bodyText confidence="0.766858307692308">
where both p(¯ej |f¯) and p(¯f |¯ek) can be computed using maximum likelihood estimation
as part of the bilingual phrasal extraction process:
number of times f¯ is extracted with ¯ej
number of times f¯ is extracted with any e¯
p( ¯ej |f¯ ) =
Once the probability values are obtained, the most likely paraphrase can be chosen for
any phrase.
Bannard and Callison-Burch (2005) are able to extract millions of phrasal para-
phrases from a bilingual parallel corpus. Such an approach is able to capture a large
variety of paraphrastic phenomena in the inferred paraphrase pairs but is seriously
limited by the bilingual word alignment technique. Even state-of-the-art alignment
methods from SMT are known to be notoriously unreliable when used for aligning
phrase pairs. The authors find via manual evaluation that the quality of the phrasal
</bodyText>
<page confidence="0.973256">
369
</page>
<figure confidence="0.828002">
Computational Linguistics Volume 36, Number 3
</figure>
<figureCaption confidence="0.71726125">
Figure 8
Extracting consistent bilingual phrasal correspondences from the shown sentence pairs.
(i1,j1) x (i2,j2) denotes the correspondence ( fi1 ... fj1, ei2 ... ej2). Not all extracted
correspondences are shown.
</figureCaption>
<bodyText confidence="0.9981708125">
paraphrases obtained via manually constructed word alignments is significantly better
than that of the paraphrases obtained from automatic alignments.
It has been widely reported that the existing bilingual word alignment techniques
are not ideal for use in translation and, furthermore, improving these techniques does
not always lead to an improvement in translation performance. (Callison-Burch, Talbot,
and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu
2007). More details on the relationship between word alignment and SMT can be found
in the comprehensive SMT survey recently published by Lopez (2008) (particularly
Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments
in the same way as a translation system would and, therefore, would be equally
susceptible to the shortcomings of the word alignment techniques. To determine how
noisy automatic word alignments affect paraphrasing done via bilingual corpora, we
inspected a sample of paraphrase pairs that were extracted when using Arabic—a
language significantly different from English—as the pivot language.11 In this study, we
found that the paraphrase pairs in the sample set could be grouped into the following
three broad categories:
</bodyText>
<listItem confidence="0.637914">
(a) Morphological variants. These pairs only differ in the morphological
</listItem>
<bodyText confidence="0.984747">
form of one of the words in the phrases and cannot really be considered
paraphrases. Examples: (ten ton, ten tons), (caused clouds, causing clouds).
</bodyText>
<footnote confidence="0.66199275">
11 The bilingual Arabic–English phrases were extracted from a million sentences of Arabic newswire data
using the freely available and open source Moses SMT toolkit (http://www.statmt.org/moses/). The
default Moses parameters were used. The English paraphrases were generated by simply applying the
pivoting process described herein to the bilingual phrase pairs.
</footnote>
<page confidence="0.991854">
370
</page>
<note confidence="0.466169">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<listItem confidence="0.93829525">
(b) Approximate Phrasal Paraphrases. These are pairs that only share partial
semantic content. Most paraphrases extracted by the pivot method using
automatic alignments fall into this category. Examples: (were exiled, went
abroad), (accounting firms, auditing firms).
(c) Phrasal Paraphrases. Despite unreliable alignments, there were indeed a
large number of truly paraphrastic pairs in the set that were semantically
equivalent. Examples: (army roadblock, military barrier) (staff walked out,
team withdrew).
</listItem>
<bodyText confidence="0.9996569">
Besides there being obvious linguistic differences between Arabic and English, the
primary reason for the generation of phrase pairs that lie in categories (a) and (b)
is incorrectly induced alignments between the English and Arabic words, and hence,
phrases. Therefore, a good portion of subsequent work on paraphrasing using bilingual
corpora, as discussed below focuses on using additional machinery or evidence to cope
with the noisy alignment process. Before we continue, we believe it would be useful
to draw a connection between Bannard and Callison-Burch’s (2005) work and that of
Wu and Zhou (2003) as discussed in Section 3.2. Note that both of these techniques
rely on a secondary language to provide the cues for generating paraphrases in the
primary language. However, Wu and Zhou rely on a pre-compiled bilingual dictionary
to discover these cues whereas Bannard and Callison-Burch have an entirely data-
driven discovery process.
In an attempt to address some of the noisy alignment issues, Callison-Burch (2008)
recently proposed an improvement that places an additional syntactic constraint on the
phrasal paraphrases extracted via the pivot-based method from bilingual corpora and
showed that using such a constraint leads to a significant improvement in the qual-
ity of the extracted paraphrases.12 The syntactic constraint requires that the extracted
paraphrase be of the same syntactic type as the original phrase. With this constraint,
estimating the paraphrase probability now requires the incorporation of syntactic type
into the equation:
</bodyText>
<equation confidence="0.985127">
�p(¯ej|¯ek,s(ek)) � p(¯ej|¯f, s(ek))p( ¯f |¯ek, s(ek))
f¯
</equation>
<bodyText confidence="0.966406181818182">
where s(e) denotes the syntactic type of the English phrase e. As before, maximum
likelihood estimation is employed to compute the two component probabilities:
number of times f¯ is extracted with ¯ej and type s(ek)
number of times f¯ is extracted with any e¯ and type s(ek)
p(¯ej |¯f, s(ek))
If the syntactic types are restricted to be simple constituents (NP, VP, etc.), then
using this constraint will actually exclude some of the paraphrase pairs that could
have been extracted in the unconstrained approach. This leads to the familiar precision-
recall tradeoff: It only extracts paraphrases that are of higher quality, but the approach
has a significantly lower coverage of paraphrastic phenomena that are not necessarily
syntactically motivated. To increase the coverage, complex syntactic types such as those
</bodyText>
<footnote confidence="0.9867115">
12 The software for generating these phrasal paraphrases along with a large collection of already extracted
paraphrases is available at http://www.cs.jhu.edu/—ccb/howto-extract-paraphrases.html.
</footnote>
<page confidence="0.993633">
371
</page>
<note confidence="0.482652">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.998247846153846">
used in Combinatory Categorial Grammars (Steedman 1996) are employed, which can
help denote a syntactic constituent with children missing on the left and/or right hand
sides. An example would be the complex type VP/(NP/NNS) which denotes a verb
phrase missing a noun phrase to its right which, in turn, is missing a plural noun to its
right. The primary benefit of using complex types is that less useful paraphrastic phrase
pairs from different syntactic categories such as (accurately, precise), that would have
been allowed in the unconstrained pivot-based approach, are now disallowed.
The biggest advantage of this approach is the use of syntactic knowledge as one
form of additional evidence in order to filter out phrase pairs from categories (a) and
(b) as defined in the context of our manual inspection of pivot-based paraphrases
above. Indeed, the authors conduct a manual evaluation to show that the syntactically
constrained paraphrase pairs are better than those produced without such constraints.
However, there are two additional benefits of this technique:
</bodyText>
<listItem confidence="0.8033149">
1. The constrained approach might allow induction of some new phrasal
paraphrases in category (c) since now an English phrase only has to
compete with other pivoted phrases of similar syntactic type and not all of
them.
2. The effective partitioning of the probability space for a given paraphrase
pair by syntactic types can be exploited: Overly specific syntactic types
that occur very rarely can be ignored and a less noisy paraphrase
probability estimate can be computed, which may prove more useful
in a downstream application than its counterpart computed via the
unconstrained approach.
</listItem>
<bodyText confidence="0.99968785">
We must also note that requiring syntactic constraints for pivot-based paraphrase ex-
traction restricts the approach to those languages where a reasonably good parser is
available.
An obvious extension of the Callison-Burch style approach is to use the collection
of pivoted English-to-English phrase pairs to generate sentential paraphrases for new
sentences. Madnani et al. (2008a) combine the pivot-based approach to paraphrase
acquisition with a well-defined English-to-English translation model that is then used in
an (unmodified) SMT system, yielding sentential paraphrases by means of “translating”
input English sentences. However, instead of fully lexicalized phrasal correspondences
as in (Bannard and Callison-Burch 2005), the fundamental units of translation (and
paraphrasing) are hierarchical phrase pairs. The latter can be extracted from the former
by replacing aligned sub-phrases with non-terminal symbols. For example, given the
initial phrase pair , growth rate has been effectively contained), the
hierarchical phrase pair (X1 X2, X1 has been X2) can be formed.13 Each hierarchical
phrase pair can also have certain features associated with it that are estimated via
maximum likelihood estimation during the extraction process. Such phrase pairs can
formally be considered the rules of a bilingual synchronous context-free grammar
(SCFG). Translation with SCFGs is equivalent to parsing the string in the source lan-
guage using these rules to generate the highest-scoring tree and then reading off the
tree in target order. For the purposes of this survey, it is sufficient to state that efficient
</bodyText>
<footnote confidence="0.592764333333333">
13 The process of converting an initial phrase into a hierarchical one is subject to several additional
constraints on the lengths of the initial and hierarchical phrases and the number and position of
non-terminals in the hierarchical phrase.
</footnote>
<page confidence="0.992825">
372
</page>
<note confidence="0.90754">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999012020833333">
methods to extract such rules, to estimate their features, and to translate with them are
now well established. For more details on building SCFG-based models and translating
with them, we refer the reader to (Chiang 2006, 2007).
Once a set of bilingual hierarchical rules has been extracted along with associated
features, the pivoting trick can be applied to infer monolingual hierarchical paraphrase
pairs (or paraphrastic patterns). However, the patterns are not the final output and
are actually used as rules from a monolingual SCFG grammar in order to define an
English-to-English translation model. Features for each monolingual rule are estimated
in terms of the features of the bilingual pairs that the rule was inferred from. A sentential
paraphrase can then be generated for any given sentence by using this model along with
an n-gram language model and a regular SMT decoder to paraphrase (or monolingually
translate) any sentence just as one would translate bilingually.
The primary advantage of this approach is the ability to produce good quality
sentential paraphrases by leveraging the SMT machinery to address the noise issue.
However, although the decoder and the language model do serve to counter the noisy
word alignment process, they do so only to a degree and not entirely.
Again, we must draw a connection between this work and that of Quirk, Brockett,
and Dolan (2004) (discussed in Section 3.3) because both treat paraphrasing as
monolingual translation. However, as outlined in the discussion of that work, Quirk,
Brockett, and Dolan use a relatively simplistic translation model and decoder which
leads to paraphrases with little or no lexical variety. In contrast, Madnani et al. use a
more complex translation model and an unmodified state-of-the-art SMT decoder to
produce paraphrases that are much more diverse. Of course, the reliance of the latter
approach on automatic word alignments does inevitably lead to much noisier sentential
paraphrases than those produced by Quirk, Brockett, and Dolan.
Kok and Brockett (2010) present a novel take on generating phrasal paraphrases
with bilingual corpora. As with most approaches based on parallel corpora, they also
start with phrase tables extracted from such corpora along with the corresponding
phrasal translation probabilities. However, instead of performing the usual pivoting
step with the bilingual phrases in the table, they take a graphical approach and represent
each phrase in the table as a node, leading to a bipartite graph. Two nodes in the
graph are connected to each other if they are aligned to each other. In order to extract
paraphrases, they sample random paths in the graph from any English node to another.
Note that the traditional pivot step is equivalent to a path of length two: one English
phrase to the foreign pivot phrase and then to the potentially paraphrastic English
phrase. By allowing paths of lengths longer than two, this graphical approach can find
more paraphrases for any given English phrase.
Furthermore, instead of restricting themselves to a single bilingual phrase table,
they take as input a number of phrase tables, each corresponding to a different pair of
six languages. Similar to the single-table case, each phrase in each table is represented
as a node in a graph that is no longer bipartite in nature. By allowing edges to exist
between nodes of all the languages if they are aligned, the pivot can now even be a set
of nodes rather than a single node in another language. For example, one could easily
find the following path in such a graph:
ate lunch → aßen zu ittag (German) → aten een hapje (Dutch) → had a bite
In general, each edge is associated with a weight corresponding to the bilingual phrase
translation probability. Random walks are then sampled from the graph in such a way
that only paths of high probability end up contributing to the extracted paraphrases.
</bodyText>
<page confidence="0.99683">
373
</page>
<note confidence="0.489602">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.9997375">
Obviously, the alignment errors discussed in the context of simple pivoting will also
have an adverse effect on this approach. In order to prevent this, the authors add special
feature nodes to the graph in addition to regular nodes. These feature nodes represent
domain-specific knowledge of what would make good paraphrases. For example, nodes
representing syntactic equivalence classes of the start and end words of the English
phrases are added. This indicates that phrases that start and end with the same kind of
words (interrogatives or articles) are likely to be paraphrases. Astute readers will make
the following observations about the syntactic feature nodes used by the authors:
</bodyText>
<listItem confidence="0.9502338">
• Such nodes can be seen as an indirect way of incorporating a limited form
of distributional similarity.
• By including such nodes—essentially based on lexical equivalence
classes—the authors are, in a way, imposing weaker forms of syntactic
constraints described in Callison-Burch (2008) without requiring a parser.
</listItem>
<bodyText confidence="0.999692142857143">
The authors extract paraphrases for a small set of input English paraphrases and
show that they are able to generate a larger percentage of correct paraphrases compared
to the syntactically constrained approach proposed by Callison-Burch (2008). They con-
duct no formal evaluation of the coverage of their approach but show that, in a limited
setting, it is higher than that for the syntactically constrained pivot-based approach.
However, they perform no comparisons of their coverage with the original pivot-based
approach (Bannard and Callison-Burch 2005).
</bodyText>
<sectionHeader confidence="0.904377" genericHeader="method">
4. Building Paraphrase Corpora
</sectionHeader>
<bodyText confidence="0.976150958333334">
Before we present some specific techniques from the literature that have been employed
to evaluate paraphrase generation methods, it is important to examine some recent
work that has been done on constructing paraphrase corpora. As part of this work, hu-
man subjects are generally asked to judge whether two given sentences are paraphrases
of each other. We believe that a detailed examination of this manual evaluation task
provides an illuminating insight into the nature of a paraphrase in a practical, rather
than a theoretical, context. In addition, it has obvious implications for any method,
whether manual or automatic, that is used to evaluate the performance of a paraphrase
generator.
Dolan and Brockett (2005) were the first to attempt to build a paraphrase corpus
on a large scale. The Microsoft Research Paraphrase (MSRP) Corpus is a collection of
5,801 sentence pairs, each manually labeled with a binary judgment as to whether it
constitutes a paraphrase or not. As a first step, the corpus was created using a heuristic
extraction method in conjunction with an SVM-based classifier that was trained to
select likely sentential paraphrases from a large monolingual corpus containing news
article clusters. However, the more interesting aspects of the task were the subsequent
evaluation of these extracted sentence pairs by human annotators and the set of issues
encountered when defining the evaluation guidelines for these annotators.
It was observed that if the human annotators were instructed to mark only the
sentence pairs that were strictly semantically equivalent or that exhibited bidirectional
entailment as paraphrases, then the results were limited to uninteresting sentence pairs
such as the following:
S1: The euro rose above US$1.18, the highest price since its January 1999 launch.
S2: The euro rose above $1.18, the highest level since its launch in January 1999.
</bodyText>
<page confidence="0.996429">
374
</page>
<note confidence="0.415581">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.974835285714286">
S1: However, without a carefully controlled study, there was little clear proof that
the operation actually improves people’s lives.
S2: But without a carefully controlled study, there was little clear proof that the
operation improves people’s lives.
Instead, they discovered that most of the complex paraphrases—ones with alter-
nations more interesting than simple lexical synonymy and local syntactic changes—
exhibited varying degrees of semantic divergence. For example:
</bodyText>
<listItem confidence="0.960210833333333">
S1: Charles O. Prince, 53, was named as Mr. Weill’s successor.
S2: Mr. Weill’s longtime confidant, Charles O. Prince, 53, was named as his successor.
S1: David Gest has sued his estranged wife Liza Minelli for beating him when she was
drunk.
S2: Liza Minelli’s estranged husband is taking her to court after saying she threw a
lamp at him and beat him in drunken rages.
</listItem>
<bodyText confidence="0.999976962962963">
Therefore, in order to be able to create a richer paraphrase corpus, one with many
complex alternations, the instructions to the annotators had to be relaxed; the degree of
mismatch accepted before a sentence pair was judged to be fully semantically divergent
(or “non-equivalent”) was left to the human subjects. It is also reported that, given the
idiosyncratic nature of each sentence pair, only a few formal guidelines were generaliz-
able enough to take precedence over the subjective judgments of the human annotators.
Despite the somewhat loosely defined guidelines, the inter-annotator agreement for the
task was 84%. However, a kappa score of 62 indicated that the task was overall a difficult
one (Cohen 1960). At the end, 67% of the sentence pairs were judged to be paraphrases
of each other and the rest were judged to be non-equivalent.14
Although the MSRP Corpus is a valuable resource and its creation provided valu-
able insight into what constitutes a paraphrase in the practical sense, it does have some
shortcomings. For example, one of the heuristics used in the extraction process was
that the two sentences in a pair must share at least three words. Using this constraint
rules out any paraphrase pairs that are fully lexically divergent but still semantically
equivalent. The small size of the corpus, when combined with this and other such
constraints, precludes the use of the corpus as training data for a paraphrase generation
or extraction system. However, it is fairly useful as a freely available test set to evaluate
paraphrase recognition methods.
On a related note, Fujita and Inui (2005) take a more knowledge-intensive ap-
proach to building a Japanese corpus containing sentence pairs with binary paraphrase
judgments and attempt to focus on variety and on minimizing the human annotation
cost. The corpus contains 2,031 sentence pairs each with a human judgment indicating
whether the paraphrase is correct or not. To build the corpus, they first stipulate a
typology of paraphrastic phenomena (rewriting light-verb constructions, for example)
and then manually create a set of morpho-syntactic paraphrasing rules and patterns
describing each type of paraphrasing phenomenon. A paraphrase generation system
</bodyText>
<footnote confidence="0.5187715">
14 The MSR paraphrase corpus is available at http://research.microsoft.com/en-us/downloads/
607d14d9-20cd-47e3-85bc-a2f65cd28042.
</footnote>
<page confidence="0.994822">
375
</page>
<note confidence="0.489142">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.9996918">
using these rules (Fujita et al. 2004) is then applied to a corpus containing Japanese
news articles, and example paraphrases are generated for the sentences in the corpus.
These paraphrase pairs are then handed to two human annotators who create binary
judgments for each pair indicating whether or not the paraphrase is correct. Using a
class-oriented approach is claimed to have a two-fold advantage:
</bodyText>
<listItem confidence="0.991494625">
1. Exhaustive Collection of Paraphrases. Creating specific paraphrasing
rules for each class manually is likely to increase the chance of the
collected examples accurately reflecting the distribution of occurrences
in the real world.
2. Low Annotation Cost. Partitioning the annotation task into classes is
expected to make it easier (and faster) to arrive at a binary judgment given
that an annotator is only concerned with a specific type of paraphrasing
when creating said judgment.
</listItem>
<bodyText confidence="0.99997764516129">
The biggest disadvantage of this approach is that only two types of paraphrastic phe-
nomena are used: light-verb constructions and transitivity alternations (using intransi-
tive verbs in place of transitive verbs). The corpus indeed captures almost all examples
of both types of paraphrastic phenomena and any that are absent can be easily covered
by adding one or two more patterns to the class. The claim of reduced annotation cost is
not necessarily borne out by the observations. Despite partitioning the annotation task
by types, it was still difficult to provide accurate annotation guidelines. This led to a
significant difference in annotation time—with some annotations taking almost twice
as long as others. Given the small size of the corpus, it is unlikely that it may be used
as training data for corpus-based paraphrase generation methods and, like the MSRP
corpus, would be best suited to the evaluation of paraphrase recognition techniques.
Most recently, Cohn, Callison-Burch, and Lapata (2008) describe a different take
on the creation of a monolingual parallel corpus containing 900 sentence pairs with
paraphrase annotations that can be used for both development and evaluation of para-
phrase systems. These paraphrase annotations take the form of alignments between the
words and sequences of words in each sentence pair; these alignments are analogous
to the word- and phrasal-alignments induced in SMT systems that were illustrated in
Section 3.5. As is the case with SMT alignments, the paraphrase annotations can be
of different forms: one-word-to-one-word, one-word-to-many-words, as well as fully
phrasal alignments.15
The authors start from a sentence-aligned paraphrase corpus compiled from three
corpora that we have already described elsewhere in this survey: (1) the sentence
pairs judged equivalent from the MSRP Corpus: (2) the Multiple Translation Chinese
(MTC) corpus of multiple human-written translations of Chinese news stories used
by Pang, Knight, and Marcu (2003); and (3) two English translations of the French novel
Twenty Thousand Leagues Under the Sea, a subset of the monolingual parallel corpus used
by Barzilay and McKeown (2001). The words in each sentence pair from this corpus
are then aligned automatically to produce the initial paraphrase annotations that are
then refined by two human annotators. The annotation guidelines required that the
annotators judge which parts of a given sentence pair were in correspondence and to in-
dicate this by creating an alignment between those parts (or correcting already existing
</bodyText>
<footnote confidence="0.956253">
15 The paraphrase-annotated corpus can be found at http://www.dcs.shef.ac.uk/∼tcohn/
paraphrase corpus.html.
</footnote>
<page confidence="0.996407">
376
</page>
<note confidence="0.90742">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.976411666666667">
alignments, if present). Two parts were said to correspond if they could be substituted
for each other within the specific context provided by the respective sentence pair. In
addition, the annotators were instructed to classify the created alignments as either sure
(the two parts are clearly substitutable) or possible (the two parts are slightly divergent
either in terms of syntax or semantics). For example, given the following paraphrastic
sentence pair:
</bodyText>
<listItem confidence="0.5947915">
S1: He stated the convention was of profound significance.
S2: He said that the meeting could have very long-term effects.
</listItem>
<bodyText confidence="0.999802304347826">
the phrase pair (the convention, the meeting) will be aligned as a sure correspondence
whereas the phrase pair (was of profound significance, could have very long-term effects) will
be aligned as a possible correspondence. Other examples of possible correspondences
could include the same stem expressed as different parts-of-speech (such as (significance,
significantly)) or two non-synonymous verbs (such as (this is also, this also marks)). For
more details on the alignment guidelines that were provided to the annotators, we refer
the reader to (Callison-Burch, Cohn, and Lapata 2006).
Extensive experiments are conducted to measure inter-annotator agreements and
obtain good agreement values but they are still low enough to confirm that it is difficult
for humans to recognize paraphrases even when the task is formulated differently.
Overall, such a paraphrase corpus with detailed paraphrase annotations is much more
informative than a corpus containing binary judgments at the sentence level such as
the MSRP corpus. As an example, because the corpus contains paraphrase annotations
at the word as well as phrasal levels, it can be used to build systems that can learn
from these annotations and generate not only fully lexicalized phrasal paraphrases but
also syntactically motivated paraphrastic patterns. To demonstrate the viability of the
corpus for this purpose, a grammar induction algorithm (Cohn and Lapata 2007) is
applied—originally developed for sentence compression—to the parsed version of their
paraphrase corpus and the authors show that they can learn paraphrastic patterns such
as those shown in Figure 9.
In general, building paraphrase corpora, whether it is done at the sentence level or
at the sub-sentential level, is extremely useful for the fostering of further research and
development in the area of paraphrase generation.
</bodyText>
<sectionHeader confidence="0.69202" genericHeader="method">
5. Evaluation of Paraphrase Generation
</sectionHeader>
<bodyText confidence="0.978118">
Whereas other language processing tasks such as machine translation and docu-
ment summarization usually have multiple annual community-wide evaluations using
</bodyText>
<figureCaption confidence="0.744156">
Figure 9
</figureCaption>
<bodyText confidence="0.8572405">
An example of syntactically motivated paraphrastic patterns that can be extracted from the
paraphrase corpus constructed by Cohn, Callison-Burch, and Lapata (2008).
</bodyText>
<page confidence="0.990143">
377
</page>
<note confidence="0.591117">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.99832606">
standard test sets and manual as well as automated metrics, the task of automated
paraphrasing does not. An obvious reason for this disparity could be that paraphrasing
is not an application in and of itself. However, the existence of similar evaluations for
other tasks that are not applications, such as dependency parsing (Buchholz and Marsi
2006; Nivre et al. 2007) and word sense disambiguation (Senseval), suggests otherwise.
We believe that the primary reason is that, over the years, paraphrasing has been em-
ployed in an extremely fragmented fashion. Paraphrase extraction and generation are
used in different forms and with different names in the context of different applications
(for example: synonymous collocation extraction, query expansion). This usage pattern
does not allow researchers in one community to share the lessons learned with those
from other communities. In fact, it may even lead to research being duplicated across
communities.
However, more recent work—some of it discussed in this survey—on extracting
phrasal paraphrases (or patterns) does include direct evaluation of the paraphrasing
itself: The original phrase and its paraphrase are presented to multiple human judges,
along with the contexts in which the phrase occurs in the original sentence, who
are asked to determine whether the relationship between the two phrases is indeed
paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and
Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the
paraphrase in place of the original phrase in its sentence and present both sentences
to judges who are then asked to judge not only their semantic equivalence but also
the grammaticality of the new sentence (Bannard and Callison-Burch 2005; Callison-
Burch 2008). Motivation for such substitution-based evaluation is discussed in Callison-
Burch (2007): the basic idea being that items deemed to be paraphrases may behave as
such only in some contexts and not others. Szpektor, Shnarch, and Dagan (2007) posit
a similar form of evaluation for textual entailment wherein the human judges are not
only presented with the entailment rule but also with a sample of sentences that match
its left-hand side (called instances), and then asked to assess whether the rule holds
under each specific instance.
Sentential paraphrases may be evaluated in a similar fashion without the need for
any surrounding context (Quirk, Brockett, and Dolan 2004). An intrinsic evaluation of
this form must employ the usual methods for avoiding any bias and for maximizing
inter-judge agreement. In addition, we believe that, given the difficulty of this task even
for human annotators, adherence to strict semantic equivalence may not always be a
suitable guideline and intrinsic evaluations must be very carefully designed. A number
of these approaches also perform extrinsic evaluations, in addition to the intrinsic
one, by utilizing the extracted or generated paraphrases to improve other applications
such as machine translation (Callison-Burch, Koehn, and Osborne 2006) and others as
described in Section 1.
Another option when evaluating the quality of a paraphrase generation method is
that of using automatic measures. The traditional automatic evaluation measures of pre-
cision and recall are not particularly suited to this task because, in order to use them, a
list of reference paraphrases has to be constructed against which these measures may be
computed. Given that it is extremely unlikely that any such list will be exhaustive, any
precision and recall measurements will not be accurate. Therefore, other alternatives
are needed. Since the evaluation of paraphrases is essentially the task of measuring
semantic similarity or of paraphrase recognition, all of those metrics, including the ones
discussed in Section 2, can be employed here.
Most recently, Callison-Burch, Cohn, and Lapata (2008) discuss ParaMetric, another
automatic measure that may be used to evaluate paraphrase extraction methods. This
</bodyText>
<page confidence="0.99711">
378
</page>
<note confidence="0.93724">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.999831">
work follows directly from the work done by the authors to create the paraphrase-
annotated corpus described in the previous section. Recall that this corpus contains
paraphrastic sentence pairs with annotations in the form of alignments between their
respective words and phrases. It is posited that to evaluate any paraphrase generation
method, one could simply have it produce its own set of alignments for the sentence
pairs in the corpus and precision and recall could then be computed over alignments
instead of phrase pairs. These alignment-oriented precision (Palign) and recall (Ralign)
measures are computed as follows:
</bodyText>
<equation confidence="0.999537">
Palign �s1,s2�|NP(s1,s2)|
E
(s1,s2) |NP(s1,s2) n NM(s1,s2)|
E
(s1,s2) |NP(s1, s2) n NM(s1, s2)|
Ralign — E(s1,s2) |NM(s1,s2)|
</equation>
<bodyText confidence="0.999975566666667">
where (s1,s2) denotes a sentence pair, NM(s1,s2) denotes the phrases extracted via the
manual alignments for the pair (s1, s2), and NP(s1,s2) denotes the phrases extracted via
the automatic alignments induced using the paraphrase method P that is to be evalu-
ated. The phrase extraction heuristic used to compute NP and NM from the respective
alignments is the same as that employed by Bannard and Callison-Burch (2005) and
illustrated in Figure 8.
Although using alignments as the basis for computing precision and recall is a
clever trick, it does require that the paraphrase generation method be capable of produc-
ing alignments between sentence pairs. For example, the methods proposed by Pang,
Knight, and Marcu (2003) and Quirk, Brockett, and Dolan (2004) for generating sen-
tential paraphrases from monolingual parallel corpora and described in Section 3.3 do
produce alignments as part of their respective algorithms. Indeed, Callison-Burch et al.
provide a comparison of their pivot-based approach—operating on bilingual parallel
corpora—with the two monolingual approaches just mentioned in terms of ParaMetric,
since all three methods are capable of producing alignments.
However, for other approaches that do not necessarily operate at the level of
sentences and cannot produce any alignments, falling back on estimates of traditional
formulations of precision and recall is suggested.
There has also been some preliminary progress toward using standardized test sets
for intrinsic evaluations. A test set containing 20 AFP articles (484 sentences) about
violence in the Middle East that was used for evaluating the lattice-based paraphrase
technique in (Barzilay and Lee 2003) has been made freely available.16 In addition to
the original sentences for which the paraphrases were generated, the set also contains
the paraphrases themselves and the judgments assigned by human judges to these
paraphrases. The paraphrase-annotated corpus discussed in the previous section would
also fall under this category of resources.
As with many other fields in NLP, paraphrase generation also lacks serious extrinsic
evaluation (Belz 2009). As described herein, many paraphrase generation techniques
are developed in the context of a host NLP application and this application usually
serves as one form of extrinsic evaluation for the quality of the paraphrases generated
</bodyText>
<note confidence="0.385356">
16 The corpus is available at http://www.cs.cornell.edu/Info/Projects/NLP/statpar.html.
</note>
<page confidence="0.994605">
379
</page>
<note confidence="0.592375">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.999737666666667">
by that technique. However, as yet there is no widely agreed-upon method of extrinsi-
cally evaluating paraphrase generation. Addressing this deficiency should be a crucial
consideration for any future community-wide evaluation effort.
An important dimension for any area of research is the availability of fora where
members of the community may share their ideas with their colleagues and receive
valuable feedback. In recent years, a number of such fora have been made available to
the automatic paraphrasing community (Inui and Hermjakob 2003; Tanaka et al. 2004;
Dras and Yamamoto 2005; Sekine et al. 2007), which represents an extremely important
step toward countering the fragmented usage pattern described previously.
</bodyText>
<sectionHeader confidence="0.97832" genericHeader="method">
6. Future Trends
</sectionHeader>
<bodyText confidence="0.999984052631579">
It is important for any survey to provide a look to the future of the surveyed task and
general trends for the corresponding research methods. We identify several such trends
in the area of paraphrase generation that are gathering momentum.
The Influence of the Web. The Web is rapidly becoming one of the most important
sources of data for natural language processing applications, which should not be sur-
prising given its phenomenal rate of growth. The (relatively) freely available Web data,
massive in scale, has already had a definite influence over data-intensive techniques
such as those employed for paraphrase generation (Pas¸ca and Dienes 2005). However,
the availability of such massive amounts of Web data comes with serious concerns for
efficiency and has led to the development of efficient methods that can cope with such
large amounts of data. Bhagat and Ravichandran (2008) extract phrasal paraphrases by
measuring distributional similarity over a 150GB monolingual corpus (25 billion words)
via locality sensitive hashing, a randomized algorithm that involves the creation of
fingerprints for vectors in space (Broder 1997). Because vectors that are more similar
are more likely to have similar fingerprints, vectors (or distributions) can simply be
compared by comparing their fingerprints, leading to a more efficient distributional
similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also
believe that the influence of the Web will extend to other avenues of paraphrase genera-
tion such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita
and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated
from a monolingual corpus, by querying the Web for snippets related to the pairs and
using them as features to compute the pair’s paraphrasability.
Combining Multiple Sources of Information. Another important trend in para-
phrase generation is that of leveraging multiple sources of information to determine
whether two units are paraphrastic. For example, Zhao et al. (2008) improve the sen-
tential paraphrases that can be generated via the pivot method by leveraging five other
sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries
similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual par-
allel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed
thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and
then combined in a log-linear paraphrasing-as-translation model proposed by Madnani
et al. (2007). A manual inspection reveals that using multiple sources of information
yields paraphrases with much higher accuracy. We believe that such exploitation of
multiple types of resources and their combinations is an important development. Zhao
et al. (2009) further increase the utility of this combination approach by incorporating
application specific constraints on the pivoted paraphrases. For example, if the output
paraphrases need to be simplified versions of the input sentences, then only those
phrasal paraphrase pairs are used where the output is shorter than the input.
</bodyText>
<page confidence="0.996028">
380
</page>
<note confidence="0.936419">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<bodyText confidence="0.9995666875">
Use of SMT Machinery. In theory, statistical machine translation is very closely
related to paraphrase generation since the former also relies on finding semantic equiv-
alence, albeit in a second language. Hence, there have been numerous paraphrasing ap-
proaches that have relied on different components of an SMT pipeline (word alignment,
phrase extraction, decoding/search) as we saw in the preceding pages of this survey.
Despite the obvious convenience of using SMT components for the purpose of mono-
lingual translation, we must consider that doing so usually requires additional work to
deal with the added noise due to the nature of such components. We believe that SMT
research will continue to influence research in paraphrasing; both by providing ready-
to-use building blocks and by necessitating development of methods to effectively use
such components for the unintended task of paraphrase generation.
Domain-Specific Paraphrasing. Recently, work has been done to generate phrasal
paraphrases in specialized domains. For example, in the field of health literacy, it
is well known that documents for health consumers are not very well-targeted to
their purported audience. Recent research has shown how to generate a lexicon of
semantically equivalent phrasal (and lexical) pairs of technical and lay medical terms
from monolingual parallel corpora (Elhadad and Sutaria 2007) as well as monolingual
comparable corpora (Del´eger and Zweigenbaum 2009). Examples include pairs such as
(myocardial infarction, heart attack) and (leucospermia, increased white cells in the sperm).
In another domain, Max (2008) proposes an adaptation of the pivot-based method to
generate rephrasings of short text spans that could help a writer revise a text. Because
the goal is to assist a writer in making revisions, the rephrasings do not always need
to bear a perfect paraphrastic relationship to the original, a scenario suited for the
pivot-based method. Several variants of such adaptations are developed that generate
candidate rephrasings driven by fluency, semantic equivalence, and authoring value,
respectively.
We also believe that a large-scale annual community-wide evaluation should be-
come a trend since it is required to foster further research in, and use of, paraphrase
extraction and generation. Although there have been recent workshops and tasks on
paraphrasing and entailment as discussed in Section 5, this evaluation would be much
more focused, providing sets of shared guidelines and resources, in the spirit of the
recent NIST MT Evaluation Workshops (NIST 2009).
</bodyText>
<sectionHeader confidence="0.835164" genericHeader="conclusions">
7. Summary
</sectionHeader>
<bodyText confidence="0.999967071428571">
Over the last two decades, there has been much research on paraphrase extraction and
generation within a number of research communities in natural language processing,
in order to improve the specific application with which that community is concerned.
However, a large portion of this research can be easily adapted for more widespread use
outside its particular host and can provide significant benefits to the whole field. Only
recently have there been serious efforts to conduct research on the topic of paraphrasing
by treating it as an important natural language processing task independent of a host
application.
In this article, we have presented a comprehensive survey of the task of paraphrase
extraction and generation motivated by the fact that paraphrases can help in a multi-
tude of applications such as machine translation, text summarization, and information
extraction. The aim was to provide an application-independent overview of paraphrase
generation, while also conveying an appreciation for the importance and potential use
of paraphrasing in the field of NLP research. We show that there are a large variety
</bodyText>
<page confidence="0.993887">
381
</page>
<note confidence="0.591552">
Computational Linguistics Volume 36, Number 3
</note>
<bodyText confidence="0.999764">
of paraphrase generation methods and each such method has a very different set of
characteristics, in terms of both its performance and its ease of deployment. We also
observe that whereas most of the methods in this survey can be used in multiple
applications, the choice of the most appropriate method depends on how well the
characteristics of the produced paraphrases match the requirements of the downstream
application in which the paraphrases are being utilized.
</bodyText>
<sectionHeader confidence="0.992007" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.993759777777778">
Ayan, Necip Fazil and Bonnie Dorr. 2006.
Going beyond AER: An extensive analysis
of word alignments and their impact on
MT. In Proceedings of ACL/COLING,
pages 9–16, Sydney.
Bangalore, Srinivas and Owen Rambow.
2000. Corpus-based lexical choice in
natural language generation. In
Proceedings of ACL, pages 464–471,
Hong Kong.
Bannard, Colin and Chris Callison-Burch.
2005. Paraphrasing with bilingual
parallel corpora. In Proceedings of ACL,
pages 597–604, Ann Arbor, MI.
Bar-Haim, Roy, Ido Dagan, Bill Dolan, Lisa
Ferro, Danilo Giampiccolo, Bernardo
Magnini, and Idan Szpektor, editors. 2007.
Proceedings of the Second PASCAL Challenges
Workshop on Recognizing Textual Entailment,
Venice.
Barzilay, Regina and Lillian Lee. 2002.
Bootstrapping lexical choice via
multiple-sequence alignment. In
Proceedings of EMNLP, pages 164–171,
Philadelphia, PA.
Barzilay, Regina and Lillian Lee. 2003.
Learning to paraphrase: An unsupervised
approach using multiple-sequence
alignment. In Proceedings of HLT-NAACL
2003, pages 16–23, Edmonton.
Barzilay, Regina and Kathleen McKeown.
2001. Extracting paraphrases from a
parallel corpus. In Proceedings of ACL,
pages 50–57, Toulouse.
Barzilay, Regina and Kathleen R. McKeown.
2005. Sentence fusion for multidocument
news summarization. Computational
Linguistics, 31(3):297–328.
Bayer, Samuel, John Burger, Lisa Ferro, John
Henderson, and Alexander Yeh. 2005.
MITREs submissions to the EU Pascal
RTE Challenge. In Proceedings of the
PASCAL Challenges Workshop on
Recognizing Textual Entailment,
pages 41–44, Southampton, U.K.
Beeferman, Doug and Adam Berger. 2000.
Agglomerative clustering of a search
engine query log. In Proceedings of the ACM
SIGKDD International Conference on
Knowledge Discovery and Data mining,
pages 407–416, Boston, MA.
Belz, Anja. 2009. That’s nice...what can you
do with it? Computational Linguistics,
35(1):111–118.
Bhagat, Rahul and Deepak Ravichandran.
2008. Large scale acquisition of
paraphrases for learning surface
patterns. In Proceedings of ACL,
pages 674–682, Columbus, OH.
Bosma, Wauter and Chris Callison-Burch.
2007. Paraphrase substitution for
recognizing textual entailment.
In Evaluation of Multilingual and
Multimodal Information Retrieval,
Lecture Notes in Computer Science,
Volume 4730, Springer-Verlag,
pages 502–509.
Brockett, Chris and William B. Dolan. 2005.
Support vector machines for paraphrase
identification and corpus construction. In
Proceedings of the Third International
Workshop on Paraphrasing, pages 1–8,
Jeju Island.
Broder, Andrei. 1997. On the resemblance
and containment of documents. In
Proceedings of the Compression and
Complexity of Sequences, pages 21–29,
Salemo.
Brown, Peter F., John Cocke, Stephen Della
Pietra, Vincent J. Della Pietra, Frederick
Jelinek, John D. Lafferty, Robert L. Mercer,
and Paul S. Roossin. 1990. A Statistical
Approach to Machine Translation.
Computational Linguistics, 16(2):79–85.
Brown, Peter F., Stephen A. Della Pietra,
Vincent J. Della Pietra, and Robert L.
Mercer. 1993. The mathematics of
statistical machine translation: Parameter
estimation. Computational Linguistics,
19(2):263–311.
Buchholz, Sabine and Erwin Marsi. 2006.
CoNLL-X shared task on multilingual
dependency parsing. In Proceedings of the
Conference on Computational Natural
Language Learning (CoNLL-X),
pages 149–164, New York, NY.
Callison-Burch, Chris. 2007. Paraphrasing and
Translation. Ph.D. thesis, School of
Informatics, University of Edinburgh.
</reference>
<page confidence="0.9957">
382
</page>
<note confidence="0.93386">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<reference confidence="0.993510474576271">
Callison-Burch, Chris. 2008. Syntactic
constraints on paraphrases extracted from
parallel corpora. In Proceedings of EMNLP,
pages 196–205, Waikiki, HI.
Callison-Burch, Chris, Trevor Cohn, and
Mirella Lapata. 2006. Annotation
guidelines for paraphrase alignment.
Technical report, University of Edinburgh.
http://www.dcs.shef.ac.uk/∼tcohn/
paraphrase guidelines.pdf.
Callison-Burch, Chris, Trevor Cohn, and
Mirella Lapata. 2008. ParaMetric: An
automatic evaluation metric for
paraphrasing. In Proceedings of COLING,
pages 97–104, Manchester.
Callison-Burch, Chris, Philipp Koehn, and
Miles Osborne. 2006. Improved statistical
machine translation using paraphrases. In
Proceedings of NAACL, pages 17–24,
New York, NY.
Callison-Burch, Chris, David Talbot,
and Miles Osborne. 2004. Statistical
machine translation with word- and
sentence-aligned parallel corpora. In
Proceedings of ACL, pages 176–183,
Barcelona.
Charikar, Moses. 2002. Similarity estimation
techniques from rounding algorithms. In
Proceedings of the 34th Annual ACM
Symposium on Theory of Computing,
pages 380–388, Montr´eal.
Chiang, David. 2006. An Introduction to
Synchronous Grammars. Part of a tutorial
given at ACL. Sydney, Australia.
Chiang, David. 2007. Hierarchical
phrase-based translation. Computational
Linguistics, 33(2):201–228.
Cohen, J. 1960. A coefficient of agreement for
nominal scales. Educational and
Psychological Measurement, 20:3746.
Cohn, Trevor, Chris Callison-Burch, and
Mirella Lapata. 2008. Constructing corpora
for the development and evaluation of
paraphrase systems. Computational
Linguistics, 34:597–614.
Cohn, Trevor and Mirella Lapata. 2007. Large
margin synchronous generation and its
application to sentence compression. In
Proceedings of EMNLP-CoNLL, pages 73–82,
Prague.
Corley, Courtney and Rada Mihalcea.
2005. Measuring the semantic similarity
of texts. In Proceedings of the ACL Workshop
on Empirical Modeling of Semantic
Equivalence and Entailment, pages 13–18,
Ann Arbor, MI.
Crouch, Carolyn J. and Bokyung Yang.
1992. Experiments in automatic statistical
thesaurus construction. In Proceedings
of the ACM SIGIR conference on Research
and Development in Information
Retrieval, pages 77–88, Copenhagen,
Denmark.
Culicover, P. W. 1968. Paraphrase generation
and information retrieval from stored text.
Mechanical Translation and Computational
Linguistics, 11(1–2):78–88.
Dagan, Ido. 2008. Invited Talk: It’s time for
a semantic engine! In Proceedings of the
NSF Symposium on Semantic Knowledge
Discovery, Organization and Use,
pages 20–28, New York, NY.
Dagan, Ido, Oren Glickman, and Bernardo
Magnini. 2006. The PASCAL Recognising
Textual Entailment Challenge. In Machine
Learning Challenges, Lecture Notes in
Computer Science, Volume 3944,
Springer-Verlag, pages 177–190.
Das, Dipanjan and Noah A. Smith. 2009.
Paraphrase identification as probabilistic
quasi-synchronous recognition. In
Proceedings of ACL/IJCNLP, pages 468–476,
Singapore.
Del´eger, Louise and Pierre Zweigenbaum.
2009. Extracting lay paraphrases of
specialized expressions from monolingual
comparable medical corpora. In
Proceedings of the ACL Workshop on Building
and Using Comparable Corpora, pages 2–10,
Singapore.
Dolan, Bill and Ido Dagan, editors. 2005.
Proceedings of the ACL Workshop on
Empirical Modeling of Semantic Equivalence
and Entailment, Ann Arbor, MI.
Dolan, William, Chris Quirk, and Chris
Brockett. 2004. Unsupervised construction
of large paraphrase corpora: Exploiting
massively parallel news sources. In
Proceedings of COLING, pages 350–356,
Geneva.
Dolan, William B. and Chris Brockett. 2005.
Automatically constructing a corpus of
sentential paraphrases. In Proceedings
of the Third International Workshop on
Paraphrasing, pages 9–16, Jeju Island.
Dras, Mark. 1999. A Meta-level grammar:
Redefining synchronous TAG for
translation and paraphrase. In Proceedings
of ACL, pages 80–88, College Park, MD.
Dras, Mark and Kazuhide Yamamoto,
editors. 2005. Proceedings of the Third
International Workshop on Paraphrasing,
Jeju Island.
Duclaye, Florence, Franc¸ois Yvon, and
Olivier Collin. 2003. Learning paraphrases
to improve a question-answering system.
In Proceedings of the EACL Workshop on
Natural Language Processing for
</reference>
<page confidence="0.995938">
383
</page>
<note confidence="0.520194">
Computational Linguistics Volume 36, Number 3
</note>
<reference confidence="0.994958923728814">
Question-Answering, pages 35–41,
Budapest.
Durbin, Richard, Sean R. Eddy, Anders
Krogh, and Graeme Mitchison. 1998.
Biological Sequence Analysis: Probabilistic
Models of Proteins and Nucleic Acids.
Cambridge University Press, Cambridge.
Edmonds, Philip and Graeme Hirst. 2002.
Near-synonymy and lexical choice.
Computational Linguistics, 28(2):105–144.
Elhadad, Noemie and Komal Sutaria. 2007.
Mining a lexicon of technical terms and lay
equivalents. In Proceedings of the ACL
BioNLP Workshop, pages 49–56, Prague.
Fraser, Alexander and Daniel Marcu. 2007.
Measuring word alignment quality for
statistical machine translation.
Computational Linguistics, 33(3):293–303.
Fujita, Atsushi, Kentaro Furihata, Kentaro
Inui, Yuji Matsumoto, and Koichi
Takeuchi. 2004. Paraphrasing of Japanese
light-verb constructions based on lexical
conceptual structure. In Proceedings of the
ACL Workshop on Multiword Expressions:
Integrating Processing, pages 9–16,
Barcelona.
Fujita, Atsushi and Kentaro Inui. 2005. A
Class-oriented approach to building
a paraphrase corpus. In Proceedings
of the Third International Workshop on
Paraphrasing, pages 25–32, Jeju Island.
Fujita, Atsushi, Shuhei Kato, Naoki Kato,
and Satoshi Sato. 2007. A compositional
approach toward dynamic phrasal
thesaurus. In Proceedings of the
ACL-PASCAL Workshop on Textual
Entailment and Paraphrasing,
pages 151–158, Prague.
Fujita, Atsushi and Satoshi Sato. 2008a. A
probabilistic model for measuring
grammaticality and similarity of
automatically generated paraphrases of
predicate phrases. In Proceedings of
COLING, pages 225–232, Manchester.
Fujita, Atsushi and Satoshi Sato. 2008b.
Computing paraphrasability of syntactic
variants using Web snippets. In Proceedings
of IJCNLP, pages 537–544, Hyderabad.
Gale, William A. and Kenneth W. Church.
1991. A program for aligning sentences in
bilingual corpora. In Proceedings of ACL,
pages 177–184, Berkeley, CA.
Gardent, Claire, Marilisa Amoia, and
Evelyne Jacquey. 2004. Paraphrastic
grammars. In Proceedings of the Second
Workshop on Text Meaning and
Interpretation, pages 73–80, Barcelona.
Gardent, Claire and Eric Kow. 2005.
Generating and selecting grammatical
paraphrases. In Proceedings of the European
Workshop on Natural Language Generation,
pages 49–57, Abderdeen.
Garoufi, Konstantina. 2007. Towards a Better
Understanding of Applied Textual Entailment:
Annotation and Evaluation of the RTE-2
Dataset. Master’s thesis, Language Science
and Technology, Saarland University.
Gasperin, Caroline, P. Gamallo, A. Agustini,
G. Lopes, and Vera de Lima. 2001.
Using syntactic contexts for measuring
word similarity. In Proceedings of the
Workshop on Knowledge Acquisition and
Categorization, ESSLLI, pages 18–23,
Helsinki.
Giampiccolo, Danilo, Hoa Dang, Ido Dagan,
Bill Dolan, and Bernardo Magnini, editors.
2008. Proceedings of the Text Analysis
Conference (TAC): Recognizing Textual
Entailment Track, Gaithersburg, MD.
Glickman, Oren and Ido Dagan. 2003.
Identifying lexical paraphrases from a
single corpus: A case study for verbs. In
Recent Advantages in Natural Language
Processing (RANLP’03), pages 81–90,
Borovets.
Grefenstette, G. 1994. Explorations in
Automatic Thesaurus Discovery. Kluwer
Academic Press, Dordrecht.
Gusfield, D. 1997. Algorithms on Strings, Trees,
and Sequences: Computational Science and
Computational Biology. Cambridge
University Press, Cambridge.
Hallett, Catalina and Donia Scott. 2005.
Structural variation in generated health
reports. In Proceedings of the Third
International Workshop on Paraphrasing,
pages 33–40, Jeju Island.
Harris, Zellig. 1954. Distributional structure.
Word, 10(2):3.146–162.
Hearst, Graeme. 1995. Near-synonymy and
the structure of lexical knowledge. In
Working notes of the AAAI Spring
Symposium on Representation and Acquisition
of Lexical Knowledge, Stanford, CA.
Hirst, Graeme. 2003. Paraphrasing
paraphrased. Unpublished invited talk at
the ACL International Workshop on
Paraphrasing, Sapporo, Japan.
Hovy, Eduard H. 1988. Generating Natural
Language under Pragmatic Constraints.
Lawrence Erlbaum Associates, Inc.,
Mahwah, NJ.
Huang, Shudong, David Graff, and George
Doddington. 2002. Multiple-translation
chinese corpus. Linguistic Data
Consortium. http://www.ldc.upenn.edu/
Catalog/CatalogEntry.jsp?catalogId=
LDC2002T01
</reference>
<page confidence="0.99772">
384
</page>
<note confidence="0.933178">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<reference confidence="0.999717923728813">
Ibrahim, Ali, Boris Katz, and Jimmy Lin.
2003. Extracting structural paraphrases
from aligned monolingual corpora. In
Proceedings of the International Workshop on
Paraphrasing, pages 57–64, Sapporo.
Iftene, Adrian. 2009. Textual Entailment. Ph.D.
thesis, Faculty of Computer Science,
University of Ias¸i.
Inoue, Naomi. 1991. Automatic noun
classification by using Japanese-English
word pairs. In Proceedings of ACL,
pages 201–208, Berkeley, CA.
Inui, Kentaro and Ulf Hermjakob, editors.
2003. Proceedings of the Second International
Workshop on Paraphrasing. Association for
Computational Linguistics, Sapporo.
Inui, Kentaro and Masaru Nogami. 2001. A
paraphrase-based exploration of
cohesiveness criteria. In Proceedings of the
European Workshop on Natural Language
Generation (ENLG’01), pages 1–10,
Toulouse.
Jacquemin, Christian. 1999. Syntagmatic and
paradigmatic representations of term
variation. In Proceedings of ACL,
pages 341–348, College Park, MD.
Jo˜ao, Cordeiro, Ga¨el Dias, and Brazdil Pavel.
2007a. A metric for paraphrase detection.
In Proceedings of the Second International
Multi-Conference on Computing in the
Global Information Technology, page 7,
Guadeloupe.
Jo˜ao, Cordeiro, Ga¨el Dias, and Brazdil Pavel.
2007b. New functions for unsupervised
asymmetrical paraphrase detection.
Journal of Software, 2(4):12–23.
Jones, Rosie, Benjamin Rey, Omid Madani,
and Wile Greiner. 2006. Generating query
substitutions. In Proceedings of the World
Wide Web Conference, pages 387–396,
Edinburgh.
Kauchak, David and Regina Barzilay. 2006.
Paraphrasing for automatic evaluation. In
Proceedings of HLT-NAACL, pages 455–462,
New York, NY.
Koehn, Philipp, Franz Josef Och, and Daniel
Marcu. 2003. Statistical phrase-based
translation. In Proceedings of HLT-NAACL,
pages 48–54, Edmonton.
Kok, Stanley and Chris Brockett. 2010.
Hitting the right paraphrases in good
time. In Proceedings of NAACL, Los
Angeles, CA.
Lin, Dekang. 1998. Automatic Retrieval and
Clustering of Similar Words. In Proceedings
of ACL-COLING, pages 768–774, Montr´eal.
Lin, Dekang and Lin Pantel. 2001. DIRT -
Discovery of Inference Rules from Text. In
Proceedings of ACM SIGKDD Conference on
Knowledge Discovery and Data Mining,
pages 323–328, San Francisco, CA.
Lopez, Adam. 2008. Statistical machine
translation. ACM Computing Surveys,
40(3):1–49.
Lopez, Adam and Philip Resnik. 2006.
Word-based alignment, phrase-based
translation: What’s the link? In Proceedings
of AMTA, pages 90–99, Boston, MA.
Madnani, Nitin, Necip Fazil Ayan, Philip
Resnik, and Bonnie J. Dorr. 2007. Using
paraphrases for parameter tuning in
statistical machine translation. In
Proceedings of the Workshop on Statistical
Machine Translation, pages 120–127, Prague.
Madnani, Nitin, Philip Resnik, Bonnie J.
Dorr, and Richard Schwartz. 2008a.
Applying automatically generated
semantic knowledge: A case study in
machine translation. In Proceedings
of the NSF Symposium on Semantic
Knowledge Discovery, Organization and Use,
pages 60–61, New York, NY.
Madnani, Nitin, Philip Resnik, Bonnie J.
Dorr, and Richard Schwartz. 2008b. Are
multiple reference translations necessary?
Investigating the value of paraphrased
reference translations in parameter
optimization. In Proceedings of the Eighth
Conference of the Association for Machine
Translation in the Americas (AMTA),
pages 143–152, Waikiki, HI.
Malakasiotis, Prodromos. 2009. Paraphrase
recognition using machine learning to
combine similarity measures. In
Proceedings of the ACL-IJCNLP 2009 Student
Research Workshop, pages 27–35, Singapore.
Marsi, Erwin and Emiel Krahmer. 2005a.
Classification of semantic relations by
humans and machines. In Proceedings of the
ACL Workshop on Empirical Modeling of
Semantic Equivalence and Entailment,
pages 1–6, Ann Arbor, MI.
Marsi, Erwin and Emiel Krahmer. 2005b.
Explorations in sentence fusion.
In Proceedings of the European Workshop
on Natural Language Generation,
pages 109–117, Aberdeen.
Max, Aur´elien. 2008. Local rephrasing
suggestions for supporting the work of
writers. In Proceedings of GoTAL,
pages 324–335, Gothenburg.
McKeown, Kathleen R. 1979. Paraphrasing
using given and new information in a
question-answer system. In Proceedings of
ACL, pages 67–72, San Diego, CA.
Melamed, Dan. 2001. Empirical Methods for
Exploiting Parallel Texts. MIT Press,
Cambridge, MA.
</reference>
<page confidence="0.967882">
385
</page>
<reference confidence="0.994928075630252">
Computational Linguistics Volume 36, Number 3
Melamed, I. Dan. 1997. A word-to-word
model of translational equivalence. In
Proceedings of ACL, pages 490–497, Madrid.
Metzler, Donald, Susan Dumais, and
Christopher Meek. 2007. Similarity
measures for short segments of text. In
Proceedings of the European Conference on
Information Retrieval (ECIR), pages 16–27,
Rome.
Mohri, Mehryar and Michael Riley. 2002. An
efficient algorithm for the n-best-strings
problem. In Proceedings of the 7th
International Conference on Spoken Language
Processing (ICSLP’02), pages 1313–1316,
Denver, CO.
Murakami, Akiko and Tetsuya Nasukawa.
2004. Term aggregation: Mining
synonymous expressions using personal
stylistic variations. In Proceedings of
COLING, pages 806–812, Geneva.
NIST. 2009. NIST Open Machine Translation
(MT) Evaluation. Information Access
Division. http://www.nist.gov/
speech/tests/mt/.
Nivre, Joakim, Johan Hall, Sandra K¨ubler,
Ryan McDonald, Jens Nilsson, Sebastian
Riedel, and Deniz Yuret. 2007. The
CoNLL 2007 shared task on dependency
parsing. In Proceedings of the CoNLL
Shared Task Session of EMNLP-CoNLL 2007,
pages 915–932, Prague.
Owczarzak, Karolina, Declan Groves, Josef
Van Genabith, and Andy Way. 2006.
Contextual bitext-derived paraphrases in
automatic MT evaluation. In Proceedings on
the Workshop on Statistical Machine
Translation, pages 86–93, New York, NY.
Pang, Bo, Kevin Knight, and Daniel Marcu.
2003. Syntax-based alignment of multiple
translations: Extracting paraphrases
and generating new sentences. In
Proceedings of HLT-NAACL, pages 102–109,
Edmonton.
Pantel, Patrick, Rahul Bhagat, Bonaventura
Coppola, Timothy Chklovski, and Eduard
Hovy. 2007. ISP: Learning inferential
selectional preferences. In Proceedings of
NAACL, pages 564–571, Rochester, NY.
Papineni, K., S. Roukos, T. Ward, and W.-J.
Zhu. 2002. BLEU: A method for automatic
evaluation of machine translation. In
Proceedings of ACL, pages 311–318,
Philadelphia, PA.
Pas¸ca, Marius and P´eter Dienes. 2005.
Aligning needles in a haystack: Paraphrase
acquisition across the Web. In Proceedings
of IJCNLP, pages 119—130, Jeju Island.
Pereira, Fernando, Naftali Tishby, and Lillian
Lee. 1993. Distributional clustering of
English words. In Proceedings of ACL,
pages 183–190, Columbus, OH.
Power, Richard and Donia Scott. 2005.
Automatic generation of large-scale
paraphrases. In Proceedings of the Third
International Workshop on Paraphrasing,
pages 57–64, Jeju Island.
Quirk, Chris, Chris Brockett, and William
Dolan. 2004. Monolingual machine
translation for paraphrase generation. In
Proceedings of EMNLP, pages 142–149,
Barcelona.
Ramshaw, Lance and Mitch Marcus. 1995.
Text chunking using transformation-based
learning. In Proceedings of the Third
Workshop on Very Large Corpora,
pages 82–94, Cambridge, MA.
Ravichandran, Deepak and Eduard Hovy.
2002. Learning surface text patterns for a
question answering system. In Proceedings
of ACL, pages 41–47, Philadelphia, PA.
Ravichandran, Deepak, Patrick Pantel, and
Eduard H. Hovy. 2005. Randomized
algorithms and NLP: Using locality
sensitive hash function for high speed
noun clustering. In Proceedings of ACL,
pages 622–629, Ann Arbor, MI.
Riezler, Stefan, Alexander Vasserman,
Ioannis Tsochantaridis, Vibhu O. Mittal,
and Yi Liu. 2007. Statistical machine
translation for query expansion in
answer retrieval. In Proceedings of ACL,
pages 464–471, Prague.
Romano, Lorenza, Milen Kouylekov,
Idan Szpektor, Ido Dagan, and Alberto
Lavelli. 2006. Investigating a generic
paraphrase-based approach for relation
extraction. In Proceedings of EACL,
pages 409–416, Trento.
Rus, Vasile, Philip M. McCarthy, and
Mihai C. Lintean. 2008. Paraphrase
identification with lexico-syntactic graph
subsumption. In Proceedings of the 21st
International FLAIRS Conference,
pages 201–206, Coconut Grove, FL.
Sahami, Mehran and Timothy D. Heilman.
2006. A Web-based kernel function for
measuring the similarity of short text
snippets. In Proceedings of the World
Wide Web Conference, pages 377–386,
Edinburgh.
Sekine, Satoshi. 2005. Automatic paraphrase
discovery based on context and keywords
between NE pairs. In Proceedings of the
International Workshop on Paraphrasing,
pages 80–87, Jeju Island, South Korea.
Sekine, Satoshi. 2006. On-demand
information extraction. In Proceedings of
COLING-ACL, pages 731–738, Sydney.
</reference>
<page confidence="0.994418">
386
</page>
<note confidence="0.794132">
Madnani and Dorr Generating Phrasal and Sentential Paraphrases
</note>
<reference confidence="0.999905041666667">
Sekine, Satoshi, Kentaro Inui, Ido Dagan,
Bill Dolan, Danilo Giampiccolo, and
Bernardo Magnini, editors. 2007.
Proceedings of the ACL-PASCAL Workshop
on Textual Entailment and Paraphrasing.
Association for Computational
Linguistics, Prague.
Shen, Siwei, Dragomir R. Radev, Agam
Patel, and G¨unes¸ Erkan. 2006. Adding
syntax to dynamic programming for
aligning comparable texts for the
generation of paraphrases. In Proceedings
of ACL-COLING, pages 747–754,
Sydney.
Shi, Xiaodong and Christopher C. Yang.
2007. Mining related queries from Web
search engine query logs using an
improved association rule mining model.
JASIST, 58(12):1871–1883.
Shimohata, Mitsuo and Eiichiro Sumita.
2005. Acquiring synonyms from
monolingual comparable texts. In
Proceedings of IJCNLP, pages 233–244,
Jeju Island.
Shinyama, Y., S. Sekine, K. Sudo, and
R. Grishman. 2002. Automatic paraphrase
acquisition from news articles. In
Proceedings of HLT, pages 313–318,
San Diego, CA.
Soong, Frank K. and Eng-Fong Huang.
1990. A tree-trellis based fast search for
finding the n-best sentence hypotheses in
continuous speech recognition. In
Proceedings of the HLT workshop on Speech
and Natural Language, pages 12–19,
Hidden Valley, PA.
Sp¨arck-Jones, Karen and J. I. Tait. 1984.
Automatic search term variant
generation. Journal of Documentation,
40(1):50–66.
Steedman, Mark, editor. 1996. Surface
Structure and Interpretation (Linguistic
Inquiry Monograph No. 30). MIT Press,
Cambridge, MA.
Szpektor, Idan, Eyal Shnarch, and Ido Dagan.
2007. Instance-based evaluation of
entailment rule acquisition. In Proceedings
of ACL, pages 456–463, Prague.
Tanaka, Takaaki, Aline Villavicencio, Francis
Bond, and Anna Korhonen, editors. 2004.
Proceedings of the Workshop on Multiword
Expressions: Integrating Processing.
Association for Computational Linguistics,
Barcelona.
Uzuner, ¨Ozlem and Boris Katz. 2005.
Capturing expression using linguistic
information. In Proceedings of AAAI,
pages 1124–1129, Pittsburgh, PA.
Wallis, Peter. 1993. Information retrieval
based on paraphrase. In Proceedings of the
3rd Conference of the Pacific Association for
Computational Linguistics (PACLING),
pages 118–126, Vancouver.
Wu, Dekai. 2005. Recognizing paraphrases
and textual entailment using inversion
transduction grammars. In Proceedings of
the ACL Workshop on Empirical Modeling of
Semantic Equivalence and Entailment,
pages 25–30, Ann Arbor, MI.
Wu, Hua and Ming Zhou. 2003. Synonymous
collocation extraction using translation
information. In Proceedings of the ACL
Workshop on Multiword Expressions:
Integrating Processing, pages 120–127,
Sapporo.
Zhao, Shiqi, Xiang Lan, Ting Liu, and Sheng
Li. 2009. Application-driven statistical
paraphrase generation. In Proceedings of
ACL/AFNLP, pages 834–842, Singapore.
Zhao, Shiqi, Cheng Niu, Ming Zhou, Ting
Liu, and Sheng Li. 2008. Combining
multiple resources to improve SMT-based
paraphrasing model. In Proceedings of
ACL-08: HLT, pages 1021–1029,
Columbus, OH.
Zhou, Liang, Chin-Yew Lin, and Eduard
Hovy. 2006. Re-evaluating machine
translation results with paraphrase
support. In Proceedings of EMNLP,
pages 77–84, Sydney.
Zhou, Liang, Chin-Yew Lin, Dragos Stefan
Muntenau, and Eduard Hovy. 2006.
ParaEval: Using paraphrases to
evaluate summaries automatically. In
Proceedings of HLT-NAACL, pages 447–454,
New York, NY.
</reference>
<page confidence="0.99835">
387
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.402663">
<title confidence="0.997683">Generating Phrasal and Sentential Paraphrases: A Survey of</title>
<author confidence="0.516523">Data-Driven Methods</author>
<affiliation confidence="0.865666666666667">University of Maryland, College Park J. University of Maryland, College Park</affiliation>
<abstract confidence="0.9818845">The task of paraphrasing is inherently familiar to speakers of all languages. Moreover, the task of automatically generating or extracting semantic equivalences for the various units of language— words, phrases, and sentences—is an important part of natural language processing (NLP) and is being increasingly employed to improve the performance of several NLP applications. In this article, we attempt to conduct a comprehensive and application-independent survey of data-driven phrasal and sentential paraphrase generation methods, while also conveying an appreciation for the importance and potential use of paraphrases in the field of NLP research. Recent work done in manual and automatic construction of paraphrase corpora is also examined. We also discuss the strategies used for evaluating paraphrase generation techniques and briefly explore some future trends in paraphrase generation.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Necip Fazil Ayan</author>
<author>Bonnie Dorr</author>
</authors>
<title>Going beyond AER: An extensive analysis of word alignments and their impact on MT.</title>
<date>2006</date>
<booktitle>In Proceedings of ACL/COLING,</booktitle>
<pages>9--16</pages>
<location>Sydney.</location>
<contexts>
<context position="86831" citStr="Ayan and Dorr 2006" startWordPosition="13736" endWordPosition="13739"> phrasal correspondences from the shown sentence pairs. (i1,j1) x (i2,j2) denotes the correspondence ( fi1 ... fj1, ei2 ... ej2). Not all extracted correspondences are shown. paraphrases obtained via manually constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments. It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance. (Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007). More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques. To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when </context>
</contexts>
<marker>Ayan, Dorr, 2006</marker>
<rawString>Ayan, Necip Fazil and Bonnie Dorr. 2006. Going beyond AER: An extensive analysis of word alignments and their impact on MT. In Proceedings of ACL/COLING, pages 9–16, Sydney.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Srinivas Bangalore</author>
<author>Owen Rambow</author>
</authors>
<title>Corpus-based lexical choice in natural language generation.</title>
<date>2000</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>464--471</pages>
<location>Hong Kong.</location>
<contexts>
<context position="7829" citStr="Bangalore and Rambow 2000" startWordPosition="1155" endWordPosition="1158">jita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases</context>
</contexts>
<marker>Bangalore, Rambow, 2000</marker>
<rawString>Bangalore, Srinivas and Owen Rambow. 2000. Corpus-based lexical choice in natural language generation. In Proceedings of ACL, pages 464–471, Hong Kong.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Colin Bannard</author>
<author>Chris Callison-Burch</author>
</authors>
<title>Paraphrasing with bilingual parallel corpora.</title>
<date>2005</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>597--604</pages>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="81870" citStr="Bannard and Callison-Burch (2005)" startWordPosition="12929" endWordPosition="12932">th such a corpus exploits both its parallel and bilingual natures: Align phrases across the two languages and consider all co-aligned phrases in the intended language to be paraphrases. The bilingual phrasal alignments can simply be generated by using the automatic techniques developed for the same task in the SMT literature. Therefore, arguably the most important factor affecting the performance of these techniques is usually the quality of the automatic bilingual phrasal (or word) alignment techniques. One of the most popular methods leveraging bilingual parallel corpora is that proposed by Bannard and Callison-Burch (2005). This technique operates exactly as described above by attempting to infer semantic equivalence between phrases in the same language indirectly with the second language as a bridge. Their approach builds on one of the initial steps used to train a phrase-based statistical machine translation system (Koehn, Och, and Marcu 2003). Such systems rely on phrase tables—a tabulation of correspondences between phrases in the source language and phrases in the target language. These tables are usually extracted by inducing word alignments between sentence pairs in a training corpus and then incremental</context>
<context position="84109" citStr="Bannard and Callison-Burch 2005" startWordPosition="13276" endWordPosition="13279">ignment points for its rows and columns are inside it and never outside. Next, Steps 8–11 take all English phrases that correspond to the same foreign phrase and infer them all to be paraphrases of each other.10 For example, the English paraphrase pair (effectively contained, under control) is obtained from Figure 8 by pivoting on the Chinese phrase , shown underlined for both matrices. 10 Note that it would have been equally easy to pivot on the English side and generate paraphrases in the other language instead. 368 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 5 (Bannard and Callison-Burch 2005). Generate set M of monolingual paraphrase pairs given a bilingual parallel corpus C. Summary. Extract bilingual phrase pairs from C using word alignments and standard SMT heuristics. Pivot all pairs of English phrases on any shared foreign phrases and consider them paraphrases. The alignment notation from Algorithm 3 is employed. 1: Let B represent the bilingual phrases extracted from C 2: B ← {φ}, M ← {φ} 3: Compute a word alignment a for each sentence pair (E, F) ∈ C 4: for each aligned sentence pair (E, F)a do 5: Extract the set of bilingual phrasal correspondences {(¯e,f¯)} such that: (a)</context>
<context position="85661" citStr="Bannard and Callison-Burch (2005)" startWordPosition="13564" endWordPosition="13567">araphrastic pairs and associated probabilities Using the components of a phrase-based SMT system also makes it easy to assign a probability value to any of the inferred paraphrase pairs as follows: �p(¯ej|¯ek) = � p(¯ej |f¯)p(¯f |¯ek) f¯ p(¯ej, ¯f |¯ek) ≈ f¯ where both p(¯ej |f¯) and p(¯f |¯ek) can be computed using maximum likelihood estimation as part of the bilingual phrasal extraction process: number of times f¯ is extracted with ¯ej number of times f¯ is extracted with any e¯ p( ¯ej |f¯ ) = Once the probability values are obtained, the most likely paraphrase can be chosen for any phrase. Bannard and Callison-Burch (2005) are able to extract millions of phrasal paraphrases from a bilingual parallel corpus. Such an approach is able to capture a large variety of paraphrastic phenomena in the inferred paraphrase pairs but is seriously limited by the bilingual word alignment technique. Even state-of-the-art alignment methods from SMT are known to be notoriously unreliable when used for aligning phrase pairs. The authors find via manual evaluation that the quality of the phrasal 369 Computational Linguistics Volume 36, Number 3 Figure 8 Extracting consistent bilingual phrasal correspondences from the shown sentence</context>
<context position="93888" citStr="Bannard and Callison-Burch 2005" startWordPosition="14782" endWordPosition="14785">ts the approach to those languages where a reasonably good parser is available. An obvious extension of the Callison-Burch style approach is to use the collection of pivoted English-to-English phrase pairs to generate sentential paraphrases for new sentences. Madnani et al. (2008a) combine the pivot-based approach to paraphrase acquisition with a well-defined English-to-English translation model that is then used in an (unmodified) SMT system, yielding sentential paraphrases by means of “translating” input English sentences. However, instead of fully lexicalized phrasal correspondences as in (Bannard and Callison-Burch 2005), the fundamental units of translation (and paraphrasing) are hierarchical phrase pairs. The latter can be extracted from the former by replacing aligned sub-phrases with non-terminal symbols. For example, given the initial phrase pair , growth rate has been effectively contained), the hierarchical phrase pair (X1 X2, X1 has been X2) can be formed.13 Each hierarchical phrase pair can also have certain features associated with it that are estimated via maximum likelihood estimation during the extraction process. Such phrase pairs can formally be considered the rules of a bilingual synchronous c</context>
<context position="100613" citStr="Bannard and Callison-Burch 2005" startWordPosition="15845" endWordPosition="15848">constraints described in Callison-Burch (2008) without requiring a parser. The authors extract paraphrases for a small set of input English paraphrases and show that they are able to generate a larger percentage of correct paraphrases compared to the syntactically constrained approach proposed by Callison-Burch (2008). They conduct no formal evaluation of the coverage of their approach but show that, in a limited setting, it is higher than that for the syntactically constrained pivot-based approach. However, they perform no comparisons of their coverage with the original pivot-based approach (Bannard and Callison-Burch 2005). 4. Building Paraphrase Corpora Before we present some specific techniques from the literature that have been employed to evaluate paraphrase generation methods, it is important to examine some recent work that has been done on constructing paraphrase corpora. As part of this work, human subjects are generally asked to judge whether two given sentences are paraphrases of each other. We believe that a detailed examination of this manual evaluation task provides an illuminating insight into the nature of a paraphrase in a practical, rather than a theoretical, context. In addition, it has obviou</context>
<context position="114150" citStr="Bannard and Callison-Burch 2005" startWordPosition="17905" endWordPosition="17908"> and its paraphrase are presented to multiple human judges, along with the contexts in which the phrase occurs in the original sentence, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008). Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others. Szpektor, Shnarch, and Dagan (2007) posit a similar form of evaluation for textual entailment wherein the human judges are not only presented with the entailment rule but also with a sample of sentences that match its left-hand side (called instances), and then asked to assess whether the rule holds under each specific instance. Sentential paraphrases may be evaluated in a</context>
<context position="117645" citStr="Bannard and Callison-Burch (2005)" startWordPosition="18438" endWordPosition="18441">gnment-oriented precision (Palign) and recall (Ralign) measures are computed as follows: Palign �s1,s2�|NP(s1,s2)| E (s1,s2) |NP(s1,s2) n NM(s1,s2)| E (s1,s2) |NP(s1, s2) n NM(s1, s2)| Ralign — E(s1,s2) |NM(s1,s2)| where (s1,s2) denotes a sentence pair, NM(s1,s2) denotes the phrases extracted via the manual alignments for the pair (s1, s2), and NP(s1,s2) denotes the phrases extracted via the automatic alignments induced using the paraphrase method P that is to be evaluated. The phrase extraction heuristic used to compute NP and NM from the respective alignments is the same as that employed by Bannard and Callison-Burch (2005) and illustrated in Figure 8. Although using alignments as the basis for computing precision and recall is a clever trick, it does require that the paraphrase generation method be capable of producing alignments between sentence pairs. For example, the methods proposed by Pang, Knight, and Marcu (2003) and Quirk, Brockett, and Dolan (2004) for generating sentential paraphrases from monolingual parallel corpora and described in Section 3.3 do produce alignments as part of their respective algorithms. Indeed, Callison-Burch et al. provide a comparison of their pivot-based approach—operating on b</context>
</contexts>
<marker>Bannard, Callison-Burch, 2005</marker>
<rawString>Bannard, Colin and Chris Callison-Burch. 2005. Paraphrasing with bilingual parallel corpora. In Proceedings of ACL, pages 597–604, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<date>2007</date>
<booktitle>Proceedings of the Second PASCAL Challenges Workshop on Recognizing Textual Entailment,</booktitle>
<editor>Bar-Haim, Roy, Ido Dagan, Bill Dolan, Lisa Ferro, Danilo Giampiccolo, Bernardo Magnini, and Idan Szpektor, editors.</editor>
<location>Venice.</location>
<contexts>
<context position="10994" citStr="(2007)" startWordPosition="1636" endWordPosition="1636">imilarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system. For example, for the INVENTOR question type, they generate: Original : X was invented by Y Variant 1 : Y’s invention of X Variant 2 : Y, inventor of X Riezler et al. (2007) expand a query by generating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of </context>
<context position="114259" citStr="(2007)" startWordPosition="17922" endWordPosition="17922">e, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008). Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others. Szpektor, Shnarch, and Dagan (2007) posit a similar form of evaluation for textual entailment wherein the human judges are not only presented with the entailment rule but also with a sample of sentences that match its left-hand side (called instances), and then asked to assess whether the rule holds under each specific instance. Sentential paraphrases may be evaluated in a similar fashion without the need for any surrounding context (Quirk, Brockett, and Dolan 2004). An intrinsic</context>
<context position="123103" citStr="(2007)" startWordPosition="19249" endWordPosition="19249">nits are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007). A manual inspection reveals that using multiple sources of information yields paraphrases with much higher accuracy. We believe that such exploitation of multiple types of resources and their combinations is an important development. Zhao et al. (2009) further increase the utility of this combination approach by incorporating application specific constraints on the pivoted paraphrases. For example, if the output paraphrases need to be simplified versions of the input sentences, then only those phrasal paraphrase pairs are used where the output is shorter than the input. 380 Madnani and Dorr </context>
</contexts>
<marker>2007</marker>
<rawString>Bar-Haim, Roy, Ido Dagan, Bill Dolan, Lisa Ferro, Danilo Giampiccolo, Bernardo Magnini, and Idan Szpektor, editors. 2007. Proceedings of the Second PASCAL Challenges Workshop on Recognizing Textual Entailment, Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Regina Barzilay</author>
<author>Lillian Lee</author>
</authors>
<title>Bootstrapping lexical choice via multiple-sequence alignment.</title>
<date>2002</date>
<booktitle>In Proceedings of EMNLP,</booktitle>
<pages>164--171</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="70478" citStr="Barzilay and Lee 2002" startWordPosition="11059" endWordPosition="11062">es or empty slots. The clustering is done so as to bring together sentences pertaining to the same topics and having similar structure. The word lattice is the product of an algorithm that computes a multiple-sequence alignment (MSA) for a cluster of sentences (Step 6). A very brief outline of such an algorithm, originally developed to compute an alignment for a set of three or more protein or DNA sequences, is as follows:9 1. Find the most similar pair of sentences in the cluster according to a similarity scoring function. For this approach, a simplified version of the edit-distance measure (Barzilay and Lee 2002) is used. 2. Align this sentence pair and replace the pair with this single alignment. 3. Repeat until all sentences have been aligned together. The word lattice so generated now needs to be converted into a slotted lattice to allow its use as a paraphrase template. Slotting is performed based on the following intuition: Areas of high variability between backbone nodes, that is, several distinct parallel paths, may correspond to template arguments and can be collapsed into one slot that can be filled by these arguments. However, multiple parallel paths may also appear in the lattice because of</context>
</contexts>
<marker>Barzilay, Lee, 2002</marker>
<rawString>Barzilay, Regina and Lillian Lee. 2002. Bootstrapping lexical choice via multiple-sequence alignment. In Proceedings of EMNLP, pages 164–171, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Regina Barzilay</author>
<author>Lillian Lee</author>
</authors>
<title>Learning to paraphrase: An unsupervised approach using multiple-sequence alignment.</title>
<date>2003</date>
<booktitle>In Proceedings of HLT-NAACL 2003,</booktitle>
<pages>16--23</pages>
<location>Edmonton.</location>
<contexts>
<context position="68862" citStr="Barzilay and Lee (2003)" startWordPosition="10790" endWordPosition="10793">r, we choose to use English here for the sake of clarity. 363 Computational Linguistics Volume 36, Number 3 domains (arrest events and personnel hirings) and find that while the precision is reasonably good, the coverage is very low primarily due to restrictions on the patterns that may be extracted in Step 2. In addition, if the average number of entities in sentences is low, the likelihood of creating incorrect paraphrases is confirmed to be higher. Let us now consider the altogether separate idea of deriving coarse-grained correspondences by leveraging the comparable nature of the corpora. Barzilay and Lee (2003) attempt to do so by generating compact sentence clusters in template form (stored as word lattices with slots) separately from each corpora and then pairing up templates from one corpus with those from the other. Once the templates are paired up, a new incoming sentence that matches one member of a template pair gets rendered as the other member, thereby generating a paraphrase. They use as input a pair of corpora: the first (C1) consisting of clusters of news articles published by Agence France Presse (AFP) and the second (C2) consisting of those published by Reuters. The two corpora may be </context>
<context position="71973" citStr="Barzilay and Lee 2003" startWordPosition="11306" endWordPosition="11309">, the number of different arguments will increase faster than the number of synonyms. Figure 7 shows how a very simple word lattice may be generalized into a slotted lattice. Once all the slotted lattices have been constructed for each corpus, Steps 19–24 try to match the slotted lattices extracted from one corpus to those extracted from the other by referring back to the sentence clusters from which the original lattices were 9 For more details on MSA algorithms, refer to Gusfield (1997) and Durbin et al. (1998). 364 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 4 (Barzilay and Lee 2003). Generate set M of matching lattice pairs given a pair of comparable corpora C1 and C2. Summary. Gather topically related sentences from C1 into clusters. Do the same for C2. Convert each sentence cluster into a slotted lattice using a multiple-sequence alignment (MSA) algorithm. Compare all lattice pairs and output those likely to be paraphrastic. 1: Let WC1 and WC2 represent word lattices obtained from C1 and C2, respectively 2: M ← {0, WC1 ← {0, WC2 ← {0 3: for each input corpus Ci ∈ {C1, C2} do 4: Create a set of clusters GCi _ {GCi,k} of sentences based on n-gram overlap such that all se</context>
<context position="77644" citStr="Barzilay and Lee (2003)" startWordPosition="12266" endWordPosition="12269">t way, it is doing something similar to what Pang, Knight, and Marcu do but with a comparable corpus instead of a parallel one. More precisely, whereas Barzilay and Lee use a relatively simple alignment scoring function based on purely lexical features, Shen et al. try to bring syntactic features into the mix. The motivation is to constrain the relatively free nature of the alignment generated by the MSA algorithm—which may lead to the generation of grammatically incorrect sentences—by using informative syntactic features. In their approach, even if two words are a lexical match—as defined by Barzilay and Lee (2003)—they are further inspected in terms of certain pre-defined syntactic features. Therefore, when computing the alignment similarity score, two lexically matched words across a sentence pair are not considered to fully match unless their score on syntactic features also exceeds a preset threshold. The syntactic features constituting the additional constraints are defined in terms of the output of a chunk parser. Such a parser takes as input the syntactic trees of the sentences in a topic cluster and provides the following information for each word: • Part-of-speech tag • IOB tag. This is a notat</context>
<context position="113804" citStr="Barzilay and Lee 2003" startWordPosition="17848" endWordPosition="17851">ommunity to share the lessons learned with those from other communities. In fact, it may even lead to research being duplicated across communities. However, more recent work—some of it discussed in this survey—on extracting phrasal paraphrases (or patterns) does include direct evaluation of the paraphrasing itself: The original phrase and its paraphrase are presented to multiple human judges, along with the contexts in which the phrase occurs in the original sentence, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008). Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others. Szpektor, Shnarch, and Dagan </context>
<context position="118913" citStr="Barzilay and Lee 2003" startWordPosition="18625" endWordPosition="18628">gual approaches just mentioned in terms of ParaMetric, since all three methods are capable of producing alignments. However, for other approaches that do not necessarily operate at the level of sentences and cannot produce any alignments, falling back on estimates of traditional formulations of precision and recall is suggested. There has also been some preliminary progress toward using standardized test sets for intrinsic evaluations. A test set containing 20 AFP articles (484 sentences) about violence in the Middle East that was used for evaluating the lattice-based paraphrase technique in (Barzilay and Lee 2003) has been made freely available.16 In addition to the original sentences for which the paraphrases were generated, the set also contains the paraphrases themselves and the judgments assigned by human judges to these paraphrases. The paraphrase-annotated corpus discussed in the previous section would also fall under this category of resources. As with many other fields in NLP, paraphrase generation also lacks serious extrinsic evaluation (Belz 2009). As described herein, many paraphrase generation techniques are developed in the context of a host NLP application and this application usually ser</context>
</contexts>
<marker>Barzilay, Lee, 2003</marker>
<rawString>Barzilay, Regina and Lillian Lee. 2003. Learning to paraphrase: An unsupervised approach using multiple-sequence alignment. In Proceedings of HLT-NAACL 2003, pages 16–23, Edmonton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Regina Barzilay</author>
<author>Kathleen McKeown</author>
</authors>
<title>Extracting paraphrases from a parallel corpus.</title>
<date>2001</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>50--57</pages>
<location>Toulouse.</location>
<contexts>
<context position="42669" citStr="Barzilay and McKeown (2001)" startWordPosition="6657" endWordPosition="6660">ces from a set of sentences that represent the same (or similar) semantic content. We present four techniques in this section that generate paraphrases by finding such correspondences. The first two techniques attempt to do so by relying, again, on the paradigm of distributional similarity: one by positing a bootstrapping distributional similarity algorithm and the other by simply adapting the previously described dependency path similarity algorithm to work with a parallel corpus. The next two techniques rely on more direct, non-distributional methods to compute the required correspondences. Barzilay and McKeown (2001) align phrasal correspondences by attempting to move beyond a single-pass distributional similarity method. They propose a bootstrapping algorithm that allows for the gradual refinement of the features used to determine similarity and yields improved paraphrase pairs. As their input corpus, they use multiple human-written English translations of literary texts such as Madame Bovary and Twenty Thousand Leagues Under the Sea that are expected to be rich in paraphrastic expressions because different translators would use their own words while still preserving the meaning of the original text. The</context>
<context position="47735" citStr="Barzilay and McKeown (2001)" startWordPosition="7446" endWordPosition="7449">ases as units of translation—are better suited to the task of generating paraphrases than the competitive linking approach, they continue to suffer from the same problem of low precision. On the other hand, such techniques can take good advantage of large bilingual corpora and capture a much larger variety of paraphrastic phenomena. Ibrahim, Katz, and Lin (2003) propose an approach that applies a modified version of the dependency path distributional similarity algorithm proposed by Lin and Pantel (2001) to the same monolingual parallel corpus (multiple translations of literary works) used by Barzilay and McKeown (2001). The authors claim that their technique is more tractable than Lin and Pantel’s approach since the sentence-aligned nature of the input parallel corpus obviates the need to compute similarity over tree paths drawn from sentences that have zero semantic overlap. Furthermore, they also claim that their technique exploits the parallel nature of a corpus more effectively than Barzilay and 356 Madnani and Dorr Generating Phrasal and Sentential Paraphrases McKeown’s approach simply because their technique uses tree paths and not just lexical information. Specifically, they propose the following mod</context>
<context position="49972" citStr="Barzilay and McKeown (2001)" startWordPosition="7791" endWordPosition="7794">ng the same anchor pair is weighted less than the previous one. Specifically, inducing the same paraphrase pair using an anchor pair that has already been seen only counts for 2n1, where n is the number of times the specific anchor pair has been seen so far. Therefore, induction of a path pair using new anchors is better evidence that the pair is paraphrastic, as opposed to the repeated induction of the path pair from the same anchor over and over again. Despite the authors’ claims, they offer no quantitative evaluation comparing their paraphrases with those from Lin and Pantel (2001) or from Barzilay and McKeown (2001). It is also possible to find correspondences between the parallel sentences using a more direct approach instead of relying on distributional similarity. Pang, Knight, and Marcu (2003) propose an algorithm to align sets of parallel sentences driven entirely by the syntactic representations of the sentences. The alignment algorithm outputs a merged lattice from which lexical, phrasal, and sentential paraphrases can simply be read off. More specifically, they use the Multiple-Translation Chinese corpus that was originally developed for machine translation evaluation and contains 11 human-writte</context>
<context position="108938" citStr="Barzilay and McKeown (2001)" startWordPosition="17125" endWordPosition="17128">nt forms: one-word-to-one-word, one-word-to-many-words, as well as fully phrasal alignments.15 The authors start from a sentence-aligned paraphrase corpus compiled from three corpora that we have already described elsewhere in this survey: (1) the sentence pairs judged equivalent from the MSRP Corpus: (2) the Multiple Translation Chinese (MTC) corpus of multiple human-written translations of Chinese news stories used by Pang, Knight, and Marcu (2003); and (3) two English translations of the French novel Twenty Thousand Leagues Under the Sea, a subset of the monolingual parallel corpus used by Barzilay and McKeown (2001). The words in each sentence pair from this corpus are then aligned automatically to produce the initial paraphrase annotations that are then refined by two human annotators. The annotation guidelines required that the annotators judge which parts of a given sentence pair were in correspondence and to indicate this by creating an alignment between those parts (or correcting already existing 15 The paraphrase-annotated corpus can be found at http://www.dcs.shef.ac.uk/∼tcohn/ paraphrase corpus.html. 376 Madnani and Dorr Generating Phrasal and Sentential Paraphrases alignments, if present). Two p</context>
<context position="113781" citStr="Barzilay and McKeown 2001" startWordPosition="17844" endWordPosition="17847"> allow researchers in one community to share the lessons learned with those from other communities. In fact, it may even lead to research being duplicated across communities. However, more recent work—some of it discussed in this survey—on extracting phrasal paraphrases (or patterns) does include direct evaluation of the paraphrasing itself: The original phrase and its paraphrase are presented to multiple human judges, along with the contexts in which the phrase occurs in the original sentence, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008). Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others. Szpekt</context>
</contexts>
<marker>Barzilay, McKeown, 2001</marker>
<rawString>Barzilay, Regina and Kathleen McKeown. 2001. Extracting paraphrases from a parallel corpus. In Proceedings of ACL, pages 50–57, Toulouse.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Regina Barzilay</author>
<author>Kathleen R McKeown</author>
</authors>
<title>Sentence fusion for multidocument news summarization.</title>
<date>2005</date>
<journal>Computational Linguistics,</journal>
<volume>31</volume>
<issue>3</issue>
<contexts>
<context position="17809" citStr="Barzilay and McKeown (2005)" startWordPosition="2684" endWordPosition="2687">l or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extraction. Text-to-text generation applications rely heavily on paraphrase recognition. For a multi-document summarization system, detecting redundancy is a very important concern because two sentences from different documents may convey the same semantic content and it is important not to repeat the same information in the summary. On this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set of sentences by detecting paraphrastic parts and fusing them into a single coherent sentence. Recognizing similar semantic content is also critical for text simplification systems (Marsi and Krahmer 2005b). Information extraction enables the detection of regularities of information structure—events which are reported many times, about different individuals and in different forms—and making them explicit so that they can be processed and used in other ways. Sekine (2006) shows how to use paraphrase recognition to cluster together extraction pattern</context>
</contexts>
<marker>Barzilay, McKeown, 2005</marker>
<rawString>Barzilay, Regina and Kathleen R. McKeown. 2005. Sentence fusion for multidocument news summarization. Computational Linguistics, 31(3):297–328.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Samuel Bayer</author>
<author>John Burger</author>
<author>Lisa Ferro</author>
<author>John Henderson</author>
<author>Alexander Yeh</author>
</authors>
<title>MITREs submissions to the EU Pascal RTE Challenge.</title>
<date>2005</date>
<booktitle>In Proceedings of the PASCAL Challenges Workshop on Recognizing Textual Entailment,</booktitle>
<pages>41--44</pages>
<location>Southampton, U.K.</location>
<contexts>
<context position="21322" citStr="Bayer et al. 2005" startWordPosition="3210" endWordPosition="3213">ns may prove useful in an appropriate downstream application. The relationship between paraphrasing and entailment is more tightly entwined than it might appear. Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007). In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailment relation. On the flip side, work has also been done to extend entailment recognition techniques for the purpose of paraphrase recognition (Rus, McCarthy, and Lintean 2008). Detection of semantic similarity and, to some extent, that of bidirectional entailment is usually an implicit part of paraphrase generation. However, given the in</context>
</contexts>
<marker>Bayer, Burger, Ferro, Henderson, Yeh, 2005</marker>
<rawString>Bayer, Samuel, John Burger, Lisa Ferro, John Henderson, and Alexander Yeh. 2005. MITREs submissions to the EU Pascal RTE Challenge. In Proceedings of the PASCAL Challenges Workshop on Recognizing Textual Entailment, pages 41–44, Southampton, U.K.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Doug Beeferman</author>
<author>Adam Berger</author>
</authors>
<title>Agglomerative clustering of a search engine query log.</title>
<date>2000</date>
<booktitle>In Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data mining,</booktitle>
<pages>407--416</pages>
<location>Boston, MA.</location>
<contexts>
<context position="10101" citStr="Beeferman and Berger 2000" startWordPosition="1496" endWordPosition="1499"> about the circuit Variant 2 : the details of circuits 1 Inferring words to be similar based on similar contexts can be thought of as the most common instance of employing distributional similarity. The concept of distributional similarity also turns out to be quite important for phrasal paraphrase generation and is discussed in more detail in Section 3.1. 343 Computational Linguistics Volume 36, Number 3 In fact, in recent years, the information retrieval community has extensively explored the task of query expansion by applying paraphrasing techniques to generate similar or related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006; Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning </context>
</contexts>
<marker>Beeferman, Berger, 2000</marker>
<rawString>Beeferman, Doug and Adam Berger. 2000. Agglomerative clustering of a search engine query log. In Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data mining, pages 407–416, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Anja Belz</author>
</authors>
<title>That’s nice...what can you do with it?</title>
<date>2009</date>
<journal>Computational Linguistics,</journal>
<volume>35</volume>
<issue>1</issue>
<contexts>
<context position="119365" citStr="Belz 2009" startWordPosition="18693" endWordPosition="18694"> AFP articles (484 sentences) about violence in the Middle East that was used for evaluating the lattice-based paraphrase technique in (Barzilay and Lee 2003) has been made freely available.16 In addition to the original sentences for which the paraphrases were generated, the set also contains the paraphrases themselves and the judgments assigned by human judges to these paraphrases. The paraphrase-annotated corpus discussed in the previous section would also fall under this category of resources. As with many other fields in NLP, paraphrase generation also lacks serious extrinsic evaluation (Belz 2009). As described herein, many paraphrase generation techniques are developed in the context of a host NLP application and this application usually serves as one form of extrinsic evaluation for the quality of the paraphrases generated 16 The corpus is available at http://www.cs.cornell.edu/Info/Projects/NLP/statpar.html. 379 Computational Linguistics Volume 36, Number 3 by that technique. However, as yet there is no widely agreed-upon method of extrinsically evaluating paraphrase generation. Addressing this deficiency should be a crucial consideration for any future community-wide evaluation eff</context>
</contexts>
<marker>Belz, 2009</marker>
<rawString>Belz, Anja. 2009. That’s nice...what can you do with it? Computational Linguistics, 35(1):111–118.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rahul Bhagat</author>
<author>Deepak Ravichandran</author>
</authors>
<title>Large scale acquisition of paraphrases for learning surface patterns.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>674--682</pages>
<location>Columbus, OH.</location>
<contexts>
<context position="11681" citStr="Bhagat and Ravichandran (2008)" startWordPosition="1745" endWordPosition="1748">query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of relation extraction (Romano et al. 2006). Most recently, Bhagat and Ravichandran (2008) collect paraphrastic patterns for relation extraction by applying semi-supervised paraphrase induction to a very large monolingual corpus. For example, for the relation of “acquisition,” they collect: Original : X agreed to buy Y Variant 1 : X completed its acquisition of Y Variant 2 : X purchased Y 1.3.2 Expanding Sparse Human Reference Data for Evaluation. A large percentage of NLP applications are evaluated by having human annotators or subjects carry out the same 344 Madnani and Dorr Generating Phrasal and Sentential Paraphrases task for a given set of data and using the output so created</context>
<context position="121368" citStr="Bhagat and Ravichandran (2008)" startWordPosition="18993" endWordPosition="18996">e Web. The Web is rapidly becoming one of the most important sources of data for natural language processing applications, which should not be surprising given its phenomenal rate of growth. The (relatively) freely available Web data, massive in scale, has already had a definite influence over data-intensive techniques such as those employed for paraphrase generation (Pas¸ca and Dienes 2005). However, the availability of such massive amounts of Web data comes with serious concerns for efficiency and has led to the development of efficient methods that can cope with such large amounts of data. Bhagat and Ravichandran (2008) extract phrasal paraphrases by measuring distributional similarity over a 150GB monolingual corpus (25 billion words) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to o</context>
</contexts>
<marker>Bhagat, Ravichandran, 2008</marker>
<rawString>Bhagat, Rahul and Deepak Ravichandran. 2008. Large scale acquisition of paraphrases for learning surface patterns. In Proceedings of ACL, pages 674–682, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Wauter Bosma</author>
<author>Chris Callison-Burch</author>
</authors>
<title>Paraphrase substitution for recognizing textual entailment.</title>
<date>2007</date>
<booktitle>In Evaluation of Multilingual and Multimodal Information Retrieval, Lecture Notes in Computer Science,</booktitle>
<volume>4730</volume>
<pages>502--509</pages>
<publisher>Springer-Verlag,</publisher>
<contexts>
<context position="21088" citStr="Bosma and Callison-Burch 2007" startWordPosition="3172" endWordPosition="3175">strictly paraphrases of T because some of the semantic content has not been carried over. This must be an important consideration when building the proposed entailment engine. Of course, even these approximately semantically equivalent constructions may prove useful in an appropriate downstream application. The relationship between paraphrasing and entailment is more tightly entwined than it might appear. Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007). In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailment relation. On the flip side, work has also been done to extend entailment recognition techniques for t</context>
</contexts>
<marker>Bosma, Callison-Burch, 2007</marker>
<rawString>Bosma, Wauter and Chris Callison-Burch. 2007. Paraphrase substitution for recognizing textual entailment. In Evaluation of Multilingual and Multimodal Information Retrieval, Lecture Notes in Computer Science, Volume 4730, Springer-Verlag, pages 502–509.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Brockett</author>
<author>William B Dolan</author>
</authors>
<title>Support vector machines for paraphrase identification and corpus construction.</title>
<date>2005</date>
<booktitle>In Proceedings of the Third International Workshop on Paraphrasing,</booktitle>
<pages>1--8</pages>
<location>Jeju Island.</location>
<contexts>
<context position="16812" citStr="Brockett and Dolan 2005" startWordPosition="2538" endWordPosition="2541">to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generat</context>
</contexts>
<marker>Brockett, Dolan, 2005</marker>
<rawString>Brockett, Chris and William B. Dolan. 2005. Support vector machines for paraphrase identification and corpus construction. In Proceedings of the Third International Workshop on Paraphrasing, pages 1–8, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Andrei Broder</author>
</authors>
<title>On the resemblance and containment of documents.</title>
<date>1997</date>
<booktitle>In Proceedings of the Compression and Complexity of Sequences,</booktitle>
<pages>21--29</pages>
<contexts>
<context position="121619" citStr="Broder 1997" startWordPosition="19029" endWordPosition="19030">a definite influence over data-intensive techniques such as those employed for paraphrase generation (Pas¸ca and Dienes 2005). However, the availability of such massive amounts of Web data comes with serious concerns for efficiency and has led to the development of efficient methods that can cope with such large amounts of data. Bhagat and Ravichandran (2008) extract phrasal paraphrases by measuring distributional similarity over a 150GB monolingual corpus (25 billion words) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the</context>
</contexts>
<marker>Broder, 1997</marker>
<rawString>Broder, Andrei. 1997. On the resemblance and containment of documents. In Proceedings of the Compression and Complexity of Sequences, pages 21–29, Salemo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>John Cocke</author>
<author>Stephen Della Pietra</author>
<author>Vincent J Della Pietra</author>
<author>Frederick Jelinek</author>
<author>John D Lafferty</author>
<author>Robert L Mercer</author>
<author>Paul S Roossin</author>
</authors>
<title>A Statistical Approach to Machine Translation.</title>
<date>1990</date>
<journal>Computational Linguistics,</journal>
<volume>16</volume>
<issue>2</issue>
<contexts>
<context position="55422" citStr="Brown et al. 1990" startWordPosition="8641" endWordPosition="8644">o augment the relatively few human translations with translations obtained from automatic machine translation systems. In fact, the corpus used (Huang, Graff, and Doddington 2002) also contains, besides the 11 human translations, 6 translations of the same sentence by machine translation systems available on the Internet at the time. However, no experiments are performed with the automatic translations. Finally, an even more direct method to align equivalences in parallel sentence pairs can be effected by building on word alignment techniques from the field of statistical machine translation (Brown et al. 1990). Current state-of-the-art SMT methods rely on unsupervised induction of word alignment between two bilingual parallel sentences to extract translation equivalences that can then be used to translate a given sentence in one language into another language. The same methods can be applied to monolingual parallel sentences without any loss of generality. Quirk, Brockett, and Dolan (2004) use one such method to extract phrasal paraphrase pairs. Furthermore, they use these extracted phrasal pairs to construct sentential paraphrases for new sentences. Mathematically, Quirk, Brockett, and Dolan’s app</context>
</contexts>
<marker>Brown, Cocke, Pietra, Pietra, Jelinek, Lafferty, Mercer, Roossin, 1990</marker>
<rawString>Brown, Peter F., John Cocke, Stephen Della Pietra, Vincent J. Della Pietra, Frederick Jelinek, John D. Lafferty, Robert L. Mercer, and Paul S. Roossin. 1990. A Statistical Approach to Machine Translation. Computational Linguistics, 16(2):79–85.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter F Brown</author>
<author>Stephen A Della Pietra</author>
<author>Vincent J Della Pietra</author>
<author>Robert L Mercer</author>
</authors>
<title>The mathematics of statistical machine translation: Parameter estimation.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<volume>19</volume>
<issue>2</issue>
<contexts>
<context position="59681" citStr="Brown et al. 1993" startWordPosition="9337" endWordPosition="9340">ch that: (a) |¯e1 |≤ 5, |¯e2 |≤ 5 a (b) ∀i ∈ {1,..., |¯e1|} ∃j ∈ {1,...,|¯e2|}, e1,i ∼ e2,j a (c) ∀i ∈ {1,. .. , |¯e2|} ∃j ∈ {1,.. ., |¯e1|}, e2,i ∼ e1,j 6: Add all extracted pairs to M 7: end for 8: for each paraphrase pair ( ¯e1, ¯e2) in M do �9: Compute P( ¯e1 |¯e2) = � P(ej1|ek2) ej1∈¯e1 ek2∈ ¯e2 10: end for 11: Output M containing paraphrastic pairs and associated probabilities 360 Madnani and Dorr Generating Phrasal and Sentential Paraphrases generate a set of phrasal paraphrase pairs and compute a probability value for each such pair. In Step 2, a simple parameter estimation technique (Brown et al. 1993) is used to compute, for later use, the probability of replacing any given word with another. Step 3 computes a word alignment (indicated by a) between each pair of sentences. This alignment indicates for each word ei in one string that word ej in the other string from which it was most likely produced (denoted here by ei ∼ ej). Steps 4–7 extract, from each a pair of sentences, pairs of short contiguous phrases that are aligned with each other according to this alignment. Note that each such extracted pair is essentially a phrasal paraphrase. Finally, a probability value is computed for each s</context>
</contexts>
<marker>Brown, Pietra, Pietra, Mercer, 1993</marker>
<rawString>Brown, Peter F., Stephen A. Della Pietra, Vincent J. Della Pietra, and Robert L. Mercer. 1993. The mathematics of statistical machine translation: Parameter estimation. Computational Linguistics, 19(2):263–311.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Sabine Buchholz</author>
<author>Erwin Marsi</author>
</authors>
<title>CoNLL-X shared task on multilingual dependency parsing.</title>
<date>2006</date>
<booktitle>In Proceedings of the Conference on Computational Natural Language Learning (CoNLL-X),</booktitle>
<pages>149--164</pages>
<location>New York, NY.</location>
<contexts>
<context position="112721" citStr="Buchholz and Marsi 2006" startWordPosition="17687" endWordPosition="17690"> multiple annual community-wide evaluations using Figure 9 An example of syntactically motivated paraphrastic patterns that can be extracted from the paraphrase corpus constructed by Cohn, Callison-Burch, and Lapata (2008). 377 Computational Linguistics Volume 36, Number 3 standard test sets and manual as well as automated metrics, the task of automated paraphrasing does not. An obvious reason for this disparity could be that paraphrasing is not an application in and of itself. However, the existence of similar evaluations for other tasks that are not applications, such as dependency parsing (Buchholz and Marsi 2006; Nivre et al. 2007) and word sense disambiguation (Senseval), suggests otherwise. We believe that the primary reason is that, over the years, paraphrasing has been employed in an extremely fragmented fashion. Paraphrase extraction and generation are used in different forms and with different names in the context of different applications (for example: synonymous collocation extraction, query expansion). This usage pattern does not allow researchers in one community to share the lessons learned with those from other communities. In fact, it may even lead to research being duplicated across com</context>
</contexts>
<marker>Buchholz, Marsi, 2006</marker>
<rawString>Buchholz, Sabine and Erwin Marsi. 2006. CoNLL-X shared task on multilingual dependency parsing. In Proceedings of the Conference on Computational Natural Language Learning (CoNLL-X), pages 149–164, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
</authors>
<title>Paraphrasing and Translation.</title>
<date>2007</date>
<tech>Ph.D. thesis,</tech>
<institution>School of Informatics, University of Edinburgh.</institution>
<contexts>
<context position="21088" citStr="Callison-Burch 2007" startWordPosition="3174" endWordPosition="3175">araphrases of T because some of the semantic content has not been carried over. This must be an important consideration when building the proposed entailment engine. Of course, even these approximately semantically equivalent constructions may prove useful in an appropriate downstream application. The relationship between paraphrasing and entailment is more tightly entwined than it might appear. Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007). In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailment relation. On the flip side, work has also been done to extend entailment recognition techniques for t</context>
</contexts>
<marker>Callison-Burch, 2007</marker>
<rawString>Callison-Burch, Chris. 2007. Paraphrasing and Translation. Ph.D. thesis, School of Informatics, University of Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
</authors>
<title>Syntactic constraints on paraphrases extracted from parallel corpora.</title>
<date>2008</date>
<booktitle>In Proceedings of EMNLP,</booktitle>
<pages>196--205</pages>
<location>Waikiki, HI.</location>
<contexts>
<context position="89834" citStr="Callison-Burch (2008)" startWordPosition="14182" endWordPosition="14183">r evidence to cope with the noisy alignment process. Before we continue, we believe it would be useful to draw a connection between Bannard and Callison-Burch’s (2005) work and that of Wu and Zhou (2003) as discussed in Section 3.2. Note that both of these techniques rely on a secondary language to provide the cues for generating paraphrases in the primary language. However, Wu and Zhou rely on a pre-compiled bilingual dictionary to discover these cues whereas Bannard and Callison-Burch have an entirely datadriven discovery process. In an attempt to address some of the noisy alignment issues, Callison-Burch (2008) recently proposed an improvement that places an additional syntactic constraint on the phrasal paraphrases extracted via the pivot-based method from bilingual corpora and showed that using such a constraint leads to a significant improvement in the quality of the extracted paraphrases.12 The syntactic constraint requires that the extracted paraphrase be of the same syntactic type as the original phrase. With this constraint, estimating the paraphrase probability now requires the incorporation of syntactic type into the equation: �p(¯ej|¯ek,s(ek)) � p(¯ej|¯f, s(ek))p( ¯f |¯ek, s(ek)) f¯ where </context>
<context position="100027" citStr="Callison-Burch (2008)" startWordPosition="15760" endWordPosition="15761">syntactic equivalence classes of the start and end words of the English phrases are added. This indicates that phrases that start and end with the same kind of words (interrogatives or articles) are likely to be paraphrases. Astute readers will make the following observations about the syntactic feature nodes used by the authors: • Such nodes can be seen as an indirect way of incorporating a limited form of distributional similarity. • By including such nodes—essentially based on lexical equivalence classes—the authors are, in a way, imposing weaker forms of syntactic constraints described in Callison-Burch (2008) without requiring a parser. The authors extract paraphrases for a small set of input English paraphrases and show that they are able to generate a larger percentage of correct paraphrases compared to the syntactically constrained approach proposed by Callison-Burch (2008). They conduct no formal evaluation of the coverage of their approach but show that, in a limited setting, it is higher than that for the syntactically constrained pivot-based approach. However, they perform no comparisons of their coverage with the original pivot-based approach (Bannard and Callison-Burch 2005). 4. Building </context>
</contexts>
<marker>Callison-Burch, 2008</marker>
<rawString>Callison-Burch, Chris. 2008. Syntactic constraints on paraphrases extracted from parallel corpora. In Proceedings of EMNLP, pages 196–205, Waikiki, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
<author>Trevor Cohn</author>
<author>Mirella Lapata</author>
</authors>
<title>Annotation guidelines for paraphrase alignment.</title>
<date>2006</date>
<tech>Technical report,</tech>
<institution>University of Edinburgh.</institution>
<note>http://www.dcs.shef.ac.uk/∼tcohn/ paraphrase guidelines.pdf.</note>
<marker>Callison-Burch, Cohn, Lapata, 2006</marker>
<rawString>Callison-Burch, Chris, Trevor Cohn, and Mirella Lapata. 2006. Annotation guidelines for paraphrase alignment. Technical report, University of Edinburgh. http://www.dcs.shef.ac.uk/∼tcohn/ paraphrase guidelines.pdf.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
<author>Trevor Cohn</author>
<author>Mirella Lapata</author>
</authors>
<title>ParaMetric: An automatic evaluation metric for paraphrasing.</title>
<date>2008</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>97--104</pages>
<location>Manchester.</location>
<marker>Callison-Burch, Cohn, Lapata, 2008</marker>
<rawString>Callison-Burch, Chris, Trevor Cohn, and Mirella Lapata. 2008. ParaMetric: An automatic evaluation metric for paraphrasing. In Proceedings of COLING, pages 97–104, Manchester.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
<author>Philipp Koehn</author>
<author>Miles Osborne</author>
</authors>
<title>Improved statistical machine translation using paraphrases.</title>
<date>2006</date>
<booktitle>In Proceedings of NAACL,</booktitle>
<pages>17--24</pages>
<location>New York, NY.</location>
<marker>Callison-Burch, Koehn, Osborne, 2006</marker>
<rawString>Callison-Burch, Chris, Philipp Koehn, and Miles Osborne. 2006. Improved statistical machine translation using paraphrases. In Proceedings of NAACL, pages 17–24, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Callison-Burch</author>
<author>David Talbot</author>
<author>Miles Osborne</author>
</authors>
<title>Statistical machine translation with word- and sentence-aligned parallel corpora.</title>
<date>2004</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>176--183</pages>
<location>Barcelona.</location>
<marker>Callison-Burch, Talbot, Osborne, 2004</marker>
<rawString>Callison-Burch, Chris, David Talbot, and Miles Osborne. 2004. Statistical machine translation with word- and sentence-aligned parallel corpora. In Proceedings of ACL, pages 176–183, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Moses Charikar</author>
</authors>
<title>Similarity estimation techniques from rounding algorithms.</title>
<date>2002</date>
<booktitle>In Proceedings of the 34th Annual ACM Symposium on Theory of Computing,</booktitle>
<pages>380--388</pages>
<location>Montr´eal.</location>
<contexts>
<context position="121866" citStr="Charikar 2002" startWordPosition="19063" endWordPosition="19064"> the development of efficient methods that can cope with such large amounts of data. Bhagat and Ravichandran (2008) extract phrasal paraphrases by measuring distributional similarity over a 150GB monolingual corpus (25 billion words) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the Web for snippets related to the pairs and using them as features to compute the pair’s paraphrasability. Combining Multiple Sources of Information. Another important trend in paraphrase generation is that of leveraging multiple sources of informa</context>
</contexts>
<marker>Charikar, 2002</marker>
<rawString>Charikar, Moses. 2002. Similarity estimation techniques from rounding algorithms. In Proceedings of the 34th Annual ACM Symposium on Theory of Computing, pages 380–388, Montr´eal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Chiang</author>
</authors>
<title>An Introduction to Synchronous Grammars. Part of a tutorial given at ACL.</title>
<date>2006</date>
<publisher>Sydney, Australia.</publisher>
<contexts>
<context position="95306" citStr="Chiang 2006" startWordPosition="15003" endWordPosition="15004">der. For the purposes of this survey, it is sufficient to state that efficient 13 The process of converting an initial phrase into a hierarchical one is subject to several additional constraints on the lengths of the initial and hierarchical phrases and the number and position of non-terminals in the hierarchical phrase. 372 Madnani and Dorr Generating Phrasal and Sentential Paraphrases methods to extract such rules, to estimate their features, and to translate with them are now well established. For more details on building SCFG-based models and translating with them, we refer the reader to (Chiang 2006, 2007). Once a set of bilingual hierarchical rules has been extracted along with associated features, the pivoting trick can be applied to infer monolingual hierarchical paraphrase pairs (or paraphrastic patterns). However, the patterns are not the final output and are actually used as rules from a monolingual SCFG grammar in order to define an English-to-English translation model. Features for each monolingual rule are estimated in terms of the features of the bilingual pairs that the rule was inferred from. A sentential paraphrase can then be generated for any given sentence by using this m</context>
</contexts>
<marker>Chiang, 2006</marker>
<rawString>Chiang, David. 2006. An Introduction to Synchronous Grammars. Part of a tutorial given at ACL. Sydney, Australia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Chiang</author>
</authors>
<title>Hierarchical phrase-based translation.</title>
<date>2007</date>
<journal>Computational Linguistics,</journal>
<volume>33</volume>
<issue>2</issue>
<marker>Chiang, 2007</marker>
<rawString>Chiang, David. 2007. Hierarchical phrase-based translation. Computational Linguistics, 33(2):201–228.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Cohen</author>
</authors>
<title>A coefficient of agreement for nominal scales.</title>
<date>1960</date>
<booktitle>Educational and Psychological Measurement,</booktitle>
<pages>20--3746</pages>
<contexts>
<context position="104172" citStr="Cohen 1960" startWordPosition="16403" endWordPosition="16404">he instructions to the annotators had to be relaxed; the degree of mismatch accepted before a sentence pair was judged to be fully semantically divergent (or “non-equivalent”) was left to the human subjects. It is also reported that, given the idiosyncratic nature of each sentence pair, only a few formal guidelines were generalizable enough to take precedence over the subjective judgments of the human annotators. Despite the somewhat loosely defined guidelines, the inter-annotator agreement for the task was 84%. However, a kappa score of 62 indicated that the task was overall a difficult one (Cohen 1960). At the end, 67% of the sentence pairs were judged to be paraphrases of each other and the rest were judged to be non-equivalent.14 Although the MSRP Corpus is a valuable resource and its creation provided valuable insight into what constitutes a paraphrase in the practical sense, it does have some shortcomings. For example, one of the heuristics used in the extraction process was that the two sentences in a pair must share at least three words. Using this constraint rules out any paraphrase pairs that are fully lexically divergent but still semantically equivalent. The small size of the corp</context>
</contexts>
<marker>Cohen, 1960</marker>
<rawString>Cohen, J. 1960. A coefficient of agreement for nominal scales. Educational and Psychological Measurement, 20:3746.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Trevor Cohn</author>
<author>Chris Callison-Burch</author>
<author>Mirella Lapata</author>
</authors>
<title>Constructing corpora for the development and evaluation of paraphrase systems.</title>
<date>2008</date>
<journal>Computational Linguistics,</journal>
<pages>34--597</pages>
<marker>Cohn, Callison-Burch, Lapata, 2008</marker>
<rawString>Cohn, Trevor, Chris Callison-Burch, and Mirella Lapata. 2008. Constructing corpora for the development and evaluation of paraphrase systems. Computational Linguistics, 34:597–614.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Trevor Cohn</author>
<author>Mirella Lapata</author>
</authors>
<title>Large margin synchronous generation and its application to sentence compression.</title>
<date>2007</date>
<booktitle>In Proceedings of EMNLP-CoNLL,</booktitle>
<pages>73--82</pages>
<location>Prague.</location>
<contexts>
<context position="111523" citStr="Cohn and Lapata 2007" startWordPosition="17510" endWordPosition="17513">task is formulated differently. Overall, such a paraphrase corpus with detailed paraphrase annotations is much more informative than a corpus containing binary judgments at the sentence level such as the MSRP corpus. As an example, because the corpus contains paraphrase annotations at the word as well as phrasal levels, it can be used to build systems that can learn from these annotations and generate not only fully lexicalized phrasal paraphrases but also syntactically motivated paraphrastic patterns. To demonstrate the viability of the corpus for this purpose, a grammar induction algorithm (Cohn and Lapata 2007) is applied—originally developed for sentence compression—to the parsed version of their paraphrase corpus and the authors show that they can learn paraphrastic patterns such as those shown in Figure 9. In general, building paraphrase corpora, whether it is done at the sentence level or at the sub-sentential level, is extremely useful for the fostering of further research and development in the area of paraphrase generation. 5. Evaluation of Paraphrase Generation Whereas other language processing tasks such as machine translation and document summarization usually have multiple annual communit</context>
</contexts>
<marker>Cohn, Lapata, 2007</marker>
<rawString>Cohn, Trevor and Mirella Lapata. 2007. Large margin synchronous generation and its application to sentence compression. In Proceedings of EMNLP-CoNLL, pages 73–82, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Courtney Corley</author>
<author>Rada Mihalcea</author>
</authors>
<title>Measuring the semantic similarity of texts.</title>
<date>2005</date>
<booktitle>In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment,</booktitle>
<pages>13--18</pages>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="16629" citStr="Corley and Mihalcea 2005" startWordPosition="2506" endWordPosition="2509">nd cost implications of such a process, most such data sets usually have only a single reference translation. Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3</context>
</contexts>
<marker>Corley, Mihalcea, 2005</marker>
<rawString>Corley, Courtney and Rada Mihalcea. 2005. Measuring the semantic similarity of texts. In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment, pages 13–18, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carolyn J Crouch</author>
<author>Bokyung Yang</author>
</authors>
<title>Experiments in automatic statistical thesaurus construction.</title>
<date>1992</date>
<booktitle>In Proceedings of the ACM SIGIR conference on Research and Development in Information Retrieval,</booktitle>
<pages>77--88</pages>
<location>Copenhagen, Denmark.</location>
<contexts>
<context position="7511" citStr="Crouch and Yang 1992" startWordPosition="1110" endWordPosition="1113">sted reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Halle</context>
</contexts>
<marker>Crouch, Yang, 1992</marker>
<rawString>Crouch, Carolyn J. and Bokyung Yang. 1992. Experiments in automatic statistical thesaurus construction. In Proceedings of the ACM SIGIR conference on Research and Development in Information Retrieval, pages 77–88, Copenhagen, Denmark.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P W Culicover</author>
</authors>
<title>Paraphrase generation and information retrieval from stored text.</title>
<date>1968</date>
<booktitle>Mechanical Translation and Computational Linguistics,</booktitle>
<pages>11--1</pages>
<contexts>
<context position="6128" citStr="Culicover (1968)" startWordPosition="904" endWordPosition="905"> linked variables, for example, (Y was built by X, X is the creator of Y). Two sentences that represent the same semantic content are termed sentential paraphrases, for example, (I finished my work, I completed my assignment). Although it is possible to generate very simple sentential paraphrases by simply substituting words and phrases in the original sentence with their respective semantic equivalents, it is significantly more difficult to generate more interesting ones such as (He needed to make a quick decision in that situation, The scenario required him to make a split-second judgment). Culicover (1968) describes some common forms of sentential paraphrases. 1.2 Scope of Discussion The idea of paraphrasing has been explored in conjunction with, and employed in, a large number of natural language processing applications. Given the difficulty inherent 342 Madnani and Dorr Generating Phrasal and Sentential Paraphrases in surveying such a diverse task, an unfortunate but necessary remedy is to impose certain limits on the scope of our discussion. In this survey, we will be restricting our discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic patterns) and on gene</context>
<context position="9115" citStr="Culicover (1968)" startWordPosition="1349" endWordPosition="1350">aphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications. Also note that we only discuss those paraphrasing techniques that can generate the types of paraphrases under examination in this survey: phrasal and sentential. 1.3.1 Query and Pattern Expansion. One of the most common applications of paraphrasing is the automatic generation of query variants for submission to information retrieval systems or of patterns for submission to information extraction systems. Culicover (1968) describes one of the earliest theoretical frameworks for query keyword expansion using paraphrases. One of the earliest works to implement this approach (Sp¨arckJones and Tait 1984) generates several simple variants for compound nouns in queries submitted to a technical information retrieval system. For example: Original : circuit details Variant 1 : details about the circuit Variant 2 : the details of circuits 1 Inferring words to be similar based on similar contexts can be thought of as the most common instance of employing distributional similarity. The concept of distributional similarity</context>
</contexts>
<marker>Culicover, 1968</marker>
<rawString>Culicover, P. W. 1968. Paraphrase generation and information retrieval from stored text. Mechanical Translation and Computational Linguistics, 11(1–2):78–88.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ido Dagan</author>
</authors>
<title>Invited Talk: It’s time for a semantic engine!</title>
<date>2008</date>
<booktitle>In Proceedings of the NSF Symposium on Semantic Knowledge Discovery, Organization and Use,</booktitle>
<pages>20--28</pages>
<location>New York, NY.</location>
<contexts>
<context position="19422" citStr="Dagan (2008)" startWordPosition="2927" endWordPosition="2928">tailment recognition. The task of recognizing entailment is an application-independent task and has important ramifications for almost all other language processing tasks that can derive benefit from some form of applied semantic inference. For this reason, the task has received noticeable attention in the research community and annual communitywide evaluations of entailment systems have been held in the form of the Recognizing Textual Entailment (RTE) Challenges (Dagan, Glickman, and Magnini 2006; Bar-Haim et al. 2007; Sekine et al. 2007; Giampiccolo et al. 2008). Looking towards the future, Dagan (2008) suggests that the textual entailment task provides a comprehensive framework for semantic inference and argues for building a concrete inference engine that not only recognizes entailment but also searches for all entailing texts given an entailment hypothesis H and, conversely, generates all entailed statements given a text T. Given such an engine, Dagan claims that paraphrase 346 Madnani and Dorr Generating Phrasal and Sentential Paraphrases generation is simply a matter of generating all entailed statements given any sentence. Although this is a very attractive proposition that defines bot</context>
</contexts>
<marker>Dagan, 2008</marker>
<rawString>Dagan, Ido. 2008. Invited Talk: It’s time for a semantic engine! In Proceedings of the NSF Symposium on Semantic Knowledge Discovery, Organization and Use, pages 20–28, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ido Dagan</author>
<author>Oren Glickman</author>
<author>Bernardo Magnini</author>
</authors>
<title>The PASCAL Recognising Textual Entailment Challenge.</title>
<date>2006</date>
<booktitle>In Machine Learning Challenges, Lecture Notes in Computer Science, Volume 3944, Springer-Verlag,</booktitle>
<pages>177--190</pages>
<marker>Dagan, Glickman, Magnini, 2006</marker>
<rawString>Dagan, Ido, Oren Glickman, and Bernardo Magnini. 2006. The PASCAL Recognising Textual Entailment Challenge. In Machine Learning Challenges, Lecture Notes in Computer Science, Volume 3944, Springer-Verlag, pages 177–190.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dipanjan Das</author>
<author>Noah A Smith</author>
</authors>
<title>Paraphrase identification as probabilistic quasi-synchronous recognition.</title>
<date>2009</date>
<booktitle>In Proceedings of ACL/IJCNLP,</booktitle>
<pages>468--476</pages>
<contexts>
<context position="16902" citStr="Das and Smith 2009" startWordPosition="2554" endWordPosition="2557">stem can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extraction. Text-to-text generation applications rely heavily on parap</context>
</contexts>
<marker>Das, Smith, 2009</marker>
<rawString>Das, Dipanjan and Noah A. Smith. 2009. Paraphrase identification as probabilistic quasi-synchronous recognition. In Proceedings of ACL/IJCNLP, pages 468–476, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Louise Del´eger</author>
<author>Pierre Zweigenbaum</author>
</authors>
<title>Extracting lay paraphrases of specialized expressions from monolingual comparable medical corpora.</title>
<date>2009</date>
<booktitle>In Proceedings of the ACL Workshop on Building and Using Comparable Corpora,</booktitle>
<pages>2--10</pages>
<marker>Del´eger, Zweigenbaum, 2009</marker>
<rawString>Del´eger, Louise and Pierre Zweigenbaum. 2009. Extracting lay paraphrases of specialized expressions from monolingual comparable medical corpora. In Proceedings of the ACL Workshop on Building and Using Comparable Corpora, pages 2–10, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bill Dolan</author>
<author>Ido Dagan</author>
<author>editors</author>
</authors>
<date>2005</date>
<booktitle>Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment,</booktitle>
<location>Ann Arbor, MI.</location>
<marker>Dolan, Dagan, editors, 2005</marker>
<rawString>Dolan, Bill and Ido Dagan, editors. 2005. Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William Dolan</author>
<author>Chris Quirk</author>
<author>Chris Brockett</author>
</authors>
<title>Unsupervised construction of large paraphrase corpora: Exploiting massively parallel news sources.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>350--356</pages>
<location>Geneva.</location>
<marker>Dolan, Quirk, Brockett, 2004</marker>
<rawString>Dolan, William, Chris Quirk, and Chris Brockett. 2004. Unsupervised construction of large paraphrase corpora: Exploiting massively parallel news sources. In Proceedings of COLING, pages 350–356, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William B Dolan</author>
<author>Chris Brockett</author>
</authors>
<title>Automatically constructing a corpus of sentential paraphrases.</title>
<date>2005</date>
<booktitle>In Proceedings of the Third International Workshop on Paraphrasing,</booktitle>
<pages>9--16</pages>
<location>Jeju Island.</location>
<contexts>
<context position="101366" citStr="Dolan and Brockett (2005)" startWordPosition="15962" endWordPosition="15965">ate paraphrase generation methods, it is important to examine some recent work that has been done on constructing paraphrase corpora. As part of this work, human subjects are generally asked to judge whether two given sentences are paraphrases of each other. We believe that a detailed examination of this manual evaluation task provides an illuminating insight into the nature of a paraphrase in a practical, rather than a theoretical, context. In addition, it has obvious implications for any method, whether manual or automatic, that is used to evaluate the performance of a paraphrase generator. Dolan and Brockett (2005) were the first to attempt to build a paraphrase corpus on a large scale. The Microsoft Research Paraphrase (MSRP) Corpus is a collection of 5,801 sentence pairs, each manually labeled with a binary judgment as to whether it constitutes a paraphrase or not. As a first step, the corpus was created using a heuristic extraction method in conjunction with an SVM-based classifier that was trained to select likely sentential paraphrases from a large monolingual corpus containing news article clusters. However, the more interesting aspects of the task were the subsequent evaluation of these extracted</context>
</contexts>
<marker>Dolan, Brockett, 2005</marker>
<rawString>Dolan, William B. and Chris Brockett. 2005. Automatically constructing a corpus of sentential paraphrases. In Proceedings of the Third International Workshop on Paraphrasing, pages 9–16, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Dras</author>
</authors>
<title>A Meta-level grammar: Redefining synchronous TAG for translation and paraphrase.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>80--88</pages>
<location>College Park, MD.</location>
<contexts>
<context position="7267" citStr="Dras 1999" startWordPosition="1074" endWordPosition="1075">n of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Mura</context>
</contexts>
<marker>Dras, 1999</marker>
<rawString>Dras, Mark. 1999. A Meta-level grammar: Redefining synchronous TAG for translation and paraphrase. In Proceedings of ACL, pages 80–88, College Park, MD.</rawString>
</citation>
<citation valid="true">
<date>2005</date>
<booktitle>Proceedings of the Third International Workshop on Paraphrasing, Jeju Island.</booktitle>
<editor>Dras, Mark and Kazuhide Yamamoto, editors.</editor>
<contexts>
<context position="67985" citStr="[2005]" startWordPosition="10657" endWordPosition="10657">ypes as variables. For example, the algorithm may generate the following two patterns as paraphrases: (PERSON) is promoted to (POST) the promotion of (PERSON) to (POST) is decided As a later refinement, Sekine (2005) makes a similar attempt at using distributional similarity over named entity pairs in order to produce a list of fully lexicalized phrasal paraphrases for specific concepts represented by keywords. The idea of enlisting named entities as proxies for detecting semantic equivalence is interesting and has certainly been explored before (see the discussion regarding Pas¸ca and Dienes [2005] in Section 3.2). However, it has some obvious disadvantages. The authors manually evaluate the technique by generating paraphrases for two specific 8 Although the authors provide motivating examples in Japanese (transliterated into romaji) in their paper, we choose to use English here for the sake of clarity. 363 Computational Linguistics Volume 36, Number 3 domains (arrest events and personnel hirings) and find that while the precision is reasonably good, the coverage is very low primarily due to restrictions on the patterns that may be extracted in Step 2. In addition, if the average number</context>
</contexts>
<marker>2005</marker>
<rawString>Dras, Mark and Kazuhide Yamamoto, editors. 2005. Proceedings of the Third International Workshop on Paraphrasing, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Florence Duclaye</author>
<author>Franc¸ois Yvon</author>
<author>Olivier Collin</author>
</authors>
<title>Learning paraphrases to improve a question-answering system.</title>
<date>2003</date>
<booktitle>In Proceedings of the EACL Workshop on Natural Language Processing for Question-Answering,</booktitle>
<pages>35--41</pages>
<location>Budapest.</location>
<marker>Duclaye, Yvon, Collin, 2003</marker>
<rawString>Duclaye, Florence, Franc¸ois Yvon, and Olivier Collin. 2003. Learning paraphrases to improve a question-answering system. In Proceedings of the EACL Workshop on Natural Language Processing for Question-Answering, pages 35–41, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Durbin</author>
<author>Sean R Eddy</author>
<author>Anders Krogh</author>
<author>Graeme Mitchison</author>
</authors>
<title>Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids.</title>
<date>1998</date>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge.</location>
<contexts>
<context position="71869" citStr="Durbin et al. (1998)" startWordPosition="11291" endWordPosition="11294"> shown in Steps 8–14. The basic idea behind the threshold is that as the number of sentences increases, the number of different arguments will increase faster than the number of synonyms. Figure 7 shows how a very simple word lattice may be generalized into a slotted lattice. Once all the slotted lattices have been constructed for each corpus, Steps 19–24 try to match the slotted lattices extracted from one corpus to those extracted from the other by referring back to the sentence clusters from which the original lattices were 9 For more details on MSA algorithms, refer to Gusfield (1997) and Durbin et al. (1998). 364 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 4 (Barzilay and Lee 2003). Generate set M of matching lattice pairs given a pair of comparable corpora C1 and C2. Summary. Gather topically related sentences from C1 into clusters. Do the same for C2. Convert each sentence cluster into a slotted lattice using a multiple-sequence alignment (MSA) algorithm. Compare all lattice pairs and output those likely to be paraphrastic. 1: Let WC1 and WC2 represent word lattices obtained from C1 and C2, respectively 2: M ← {0, WC1 ← {0, WC2 ← {0 3: for each input corpus Ci ∈ {C1</context>
</contexts>
<marker>Durbin, Eddy, Krogh, Mitchison, 1998</marker>
<rawString>Durbin, Richard, Sean R. Eddy, Anders Krogh, and Graeme Mitchison. 1998. Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids. Cambridge University Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philip Edmonds</author>
<author>Graeme Hirst</author>
</authors>
<title>Near-synonymy and lexical choice.</title>
<date>2002</date>
<journal>Computational Linguistics,</journal>
<volume>28</volume>
<issue>2</issue>
<contexts>
<context position="8249" citStr="Edmonds and Hirst 2002" startWordPosition="1221" endWordPosition="1224">ata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications. Also note that we only discuss those paraphrasing techniques that can generate the types of paraphrases under examination in this survey: phrasal and sententi</context>
</contexts>
<marker>Edmonds, Hirst, 2002</marker>
<rawString>Edmonds, Philip and Graeme Hirst. 2002. Near-synonymy and lexical choice. Computational Linguistics, 28(2):105–144.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Noemie Elhadad</author>
<author>Komal Sutaria</author>
</authors>
<title>Mining a lexicon of technical terms and lay equivalents.</title>
<date>2007</date>
<booktitle>In Proceedings of the ACL BioNLP Workshop,</booktitle>
<pages>49--56</pages>
<location>Prague.</location>
<contexts>
<context position="125132" citStr="Elhadad and Sutaria 2007" startWordPosition="19548" endWordPosition="19551">yto-use building blocks and by necessitating development of methods to effectively use such components for the unintended task of paraphrase generation. Domain-Specific Paraphrasing. Recently, work has been done to generate phrasal paraphrases in specialized domains. For example, in the field of health literacy, it is well known that documents for health consumers are not very well-targeted to their purported audience. Recent research has shown how to generate a lexicon of semantically equivalent phrasal (and lexical) pairs of technical and lay medical terms from monolingual parallel corpora (Elhadad and Sutaria 2007) as well as monolingual comparable corpora (Del´eger and Zweigenbaum 2009). Examples include pairs such as (myocardial infarction, heart attack) and (leucospermia, increased white cells in the sperm). In another domain, Max (2008) proposes an adaptation of the pivot-based method to generate rephrasings of short text spans that could help a writer revise a text. Because the goal is to assist a writer in making revisions, the rephrasings do not always need to bear a perfect paraphrastic relationship to the original, a scenario suited for the pivot-based method. Several variants of such adaptatio</context>
</contexts>
<marker>Elhadad, Sutaria, 2007</marker>
<rawString>Elhadad, Noemie and Komal Sutaria. 2007. Mining a lexicon of technical terms and lay equivalents. In Proceedings of the ACL BioNLP Workshop, pages 49–56, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Alexander Fraser</author>
<author>Daniel Marcu</author>
</authors>
<title>Measuring word alignment quality for statistical machine translation.</title>
<date>2007</date>
<journal>Computational Linguistics,</journal>
<volume>33</volume>
<issue>3</issue>
<contexts>
<context position="86878" citStr="Fraser and Marcu 2007" startWordPosition="13744" endWordPosition="13747">tence pairs. (i1,j1) x (i2,j2) denotes the correspondence ( fi1 ... fj1, ei2 ... ej2). Not all extracted correspondences are shown. paraphrases obtained via manually constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments. It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance. (Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007). More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques. To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when using Arabic—a language significantly different</context>
</contexts>
<marker>Fraser, Marcu, 2007</marker>
<rawString>Fraser, Alexander and Daniel Marcu. 2007. Measuring word alignment quality for statistical machine translation. Computational Linguistics, 33(3):293–303.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Atsushi Fujita</author>
<author>Kentaro Furihata</author>
<author>Kentaro Inui</author>
<author>Yuji Matsumoto</author>
<author>Koichi Takeuchi</author>
</authors>
<title>Paraphrasing of Japanese light-verb constructions based on lexical conceptual structure.</title>
<date>2004</date>
<booktitle>In Proceedings of the ACL Workshop on Multiword Expressions: Integrating Processing,</booktitle>
<pages>9--16</pages>
<location>Barcelona.</location>
<contexts>
<context position="7181" citStr="Fujita et al. 2004" startWordPosition="1058" endWordPosition="1061">r discussion. In this survey, we will be restricting our discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applicati</context>
<context position="105911" citStr="Fujita et al. 2004" startWordPosition="16663" endWordPosition="16666">ontains 2,031 sentence pairs each with a human judgment indicating whether the paraphrase is correct or not. To build the corpus, they first stipulate a typology of paraphrastic phenomena (rewriting light-verb constructions, for example) and then manually create a set of morpho-syntactic paraphrasing rules and patterns describing each type of paraphrasing phenomenon. A paraphrase generation system 14 The MSR paraphrase corpus is available at http://research.microsoft.com/en-us/downloads/ 607d14d9-20cd-47e3-85bc-a2f65cd28042. 375 Computational Linguistics Volume 36, Number 3 using these rules (Fujita et al. 2004) is then applied to a corpus containing Japanese news articles, and example paraphrases are generated for the sentences in the corpus. These paraphrase pairs are then handed to two human annotators who create binary judgments for each pair indicating whether or not the paraphrase is correct. Using a class-oriented approach is claimed to have a two-fold advantage: 1. Exhaustive Collection of Paraphrases. Creating specific paraphrasing rules for each class manually is likely to increase the chance of the collected examples accurately reflecting the distribution of occurrences in the real world. </context>
</contexts>
<marker>Fujita, Furihata, Inui, Matsumoto, Takeuchi, 2004</marker>
<rawString>Fujita, Atsushi, Kentaro Furihata, Kentaro Inui, Yuji Matsumoto, and Koichi Takeuchi. 2004. Paraphrasing of Japanese light-verb constructions based on lexical conceptual structure. In Proceedings of the ACL Workshop on Multiword Expressions: Integrating Processing, pages 9–16, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Atsushi Fujita</author>
<author>Kentaro Inui</author>
</authors>
<title>A Class-oriented approach to building a paraphrase corpus.</title>
<date>2005</date>
<booktitle>In Proceedings of the Third International Workshop on Paraphrasing,</booktitle>
<pages>25--32</pages>
<location>Jeju Island.</location>
<contexts>
<context position="105072" citStr="Fujita and Inui (2005)" startWordPosition="16550" endWordPosition="16553">nse, it does have some shortcomings. For example, one of the heuristics used in the extraction process was that the two sentences in a pair must share at least three words. Using this constraint rules out any paraphrase pairs that are fully lexically divergent but still semantically equivalent. The small size of the corpus, when combined with this and other such constraints, precludes the use of the corpus as training data for a paraphrase generation or extraction system. However, it is fairly useful as a freely available test set to evaluate paraphrase recognition methods. On a related note, Fujita and Inui (2005) take a more knowledge-intensive approach to building a Japanese corpus containing sentence pairs with binary paraphrase judgments and attempt to focus on variety and on minimizing the human annotation cost. The corpus contains 2,031 sentence pairs each with a human judgment indicating whether the paraphrase is correct or not. To build the corpus, they first stipulate a typology of paraphrastic phenomena (rewriting light-verb constructions, for example) and then manually create a set of morpho-syntactic paraphrasing rules and patterns describing each type of paraphrasing phenomenon. A paraphra</context>
</contexts>
<marker>Fujita, Inui, 2005</marker>
<rawString>Fujita, Atsushi and Kentaro Inui. 2005. A Class-oriented approach to building a paraphrase corpus. In Proceedings of the Third International Workshop on Paraphrasing, pages 25–32, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Atsushi Fujita</author>
<author>Shuhei Kato</author>
<author>Naoki Kato</author>
<author>Satoshi Sato</author>
</authors>
<title>A compositional approach toward dynamic phrasal thesaurus.</title>
<date>2007</date>
<booktitle>In Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing,</booktitle>
<pages>151--158</pages>
<location>Prague.</location>
<contexts>
<context position="7221" citStr="Fujita et al. 2007" startWordPosition="1065" endWordPosition="1068"> restricting our discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Ram</context>
</contexts>
<marker>Fujita, Kato, Kato, Sato, 2007</marker>
<rawString>Fujita, Atsushi, Shuhei Kato, Naoki Kato, and Satoshi Sato. 2007. A compositional approach toward dynamic phrasal thesaurus. In Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pages 151–158, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Atsushi Fujita</author>
<author>Satoshi Sato</author>
</authors>
<title>A probabilistic model for measuring grammaticality and similarity of automatically generated paraphrases of predicate phrases.</title>
<date>2008</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>225--232</pages>
<location>Manchester.</location>
<contexts>
<context position="16568" citStr="Fujita and Sato 2008" startWordPosition="2495" endWordPosition="2498"> Computational Linguistics Volume 36, Number 3 the time and cost implications of such a process, most such data sets usually have only a single reference translation. Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monol</context>
<context position="122105" citStr="Fujita and Sato (2008" startWordPosition="19099" endWordPosition="19102">s) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the Web for snippets related to the pairs and using them as features to compute the pair’s paraphrasability. Combining Multiple Sources of Information. Another important trend in paraphrase generation is that of leveraging multiple sources of information to determine whether two units are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corp</context>
</contexts>
<marker>Fujita, Sato, 2008</marker>
<rawString>Fujita, Atsushi and Satoshi Sato. 2008a. A probabilistic model for measuring grammaticality and similarity of automatically generated paraphrases of predicate phrases. In Proceedings of COLING, pages 225–232, Manchester.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Atsushi Fujita</author>
<author>Satoshi Sato</author>
</authors>
<title>Computing paraphrasability of syntactic variants using Web snippets.</title>
<date>2008</date>
<booktitle>In Proceedings of IJCNLP,</booktitle>
<pages>537--544</pages>
<location>Hyderabad.</location>
<contexts>
<context position="16568" citStr="Fujita and Sato 2008" startWordPosition="2495" endWordPosition="2498"> Computational Linguistics Volume 36, Number 3 the time and cost implications of such a process, most such data sets usually have only a single reference translation. Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monol</context>
<context position="122105" citStr="Fujita and Sato (2008" startWordPosition="19099" endWordPosition="19102">s) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the Web for snippets related to the pairs and using them as features to compute the pair’s paraphrasability. Combining Multiple Sources of Information. Another important trend in paraphrase generation is that of leveraging multiple sources of information to determine whether two units are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corp</context>
</contexts>
<marker>Fujita, Sato, 2008</marker>
<rawString>Fujita, Atsushi and Satoshi Sato. 2008b. Computing paraphrasability of syntactic variants using Web snippets. In Proceedings of IJCNLP, pages 537–544, Hyderabad.</rawString>
</citation>
<citation valid="true">
<authors>
<author>William A Gale</author>
<author>Kenneth W Church</author>
</authors>
<title>A program for aligning sentences in bilingual corpora.</title>
<date>1991</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>177--184</pages>
<location>Berkeley, CA.</location>
<contexts>
<context position="43358" citStr="Gale and Church 1991" startWordPosition="6759" endWordPosition="6762">-pass distributional similarity method. They propose a bootstrapping algorithm that allows for the gradual refinement of the features used to determine similarity and yields improved paraphrase pairs. As their input corpus, they use multiple human-written English translations of literary texts such as Madame Bovary and Twenty Thousand Leagues Under the Sea that are expected to be rich in paraphrastic expressions because different translators would use their own words while still preserving the meaning of the original text. The parallel components are obtained by performing sentence alignment (Gale and Church 1991) on the corpora to obtain sets of parallel sentences that are then lemmatized, part-of-speech tagged and chunked in order to identify all the verb and noun phrases. The bootstrapping algorithm is then employed to incrementally learn better and better contextual features that are then leveraged to generate semantically similar phrasal correspondences. Figure 4 shows the basic steps of the algorithm. To seed the algorithm, some fake paraphrase examples are extracted by using identical words from either side of the aligned sentence pair. For example, given the following sentence pair: S1: Emma bu</context>
</contexts>
<marker>Gale, Church, 1991</marker>
<rawString>Gale, William A. and Kenneth W. Church. 1991. A program for aligning sentences in bilingual corpora. In Proceedings of ACL, pages 177–184, Berkeley, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Gardent</author>
<author>Marilisa Amoia</author>
<author>Evelyne Jacquey</author>
</authors>
<title>Paraphrastic grammars.</title>
<date>2004</date>
<booktitle>In Proceedings of the Second Workshop on Text Meaning and Interpretation,</booktitle>
<pages>73--80</pages>
<location>Barcelona.</location>
<marker>Gardent, Amoia, Jacquey, 2004</marker>
<rawString>Gardent, Claire, Marilisa Amoia, and Evelyne Jacquey. 2004. Paraphrastic grammars. In Proceedings of the Second Workshop on Text Meaning and Interpretation, pages 73–80, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Claire Gardent</author>
<author>Eric Kow</author>
</authors>
<title>Generating and selecting grammatical paraphrases.</title>
<date>2005</date>
<booktitle>In Proceedings of the European Workshop on Natural Language Generation,</booktitle>
<pages>49--57</pages>
<contexts>
<context position="7324" citStr="Gardent and Kow 2005" startWordPosition="1081" endWordPosition="1084">tic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Metho</context>
</contexts>
<marker>Gardent, Kow, 2005</marker>
<rawString>Gardent, Claire and Eric Kow. 2005. Generating and selecting grammatical paraphrases. In Proceedings of the European Workshop on Natural Language Generation, pages 49–57, Abderdeen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Konstantina Garoufi</author>
</authors>
<title>Towards a Better Understanding of Applied Textual Entailment: Annotation and Evaluation of the RTE-2 Dataset.</title>
<date>2007</date>
<tech>Master’s thesis,</tech>
<institution>Language Science and Technology, Saarland University.</institution>
<contexts>
<context position="21337" citStr="Garoufi 2007" startWordPosition="3214" endWordPosition="3215"> in an appropriate downstream application. The relationship between paraphrasing and entailment is more tightly entwined than it might appear. Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007). In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailment relation. On the flip side, work has also been done to extend entailment recognition techniques for the purpose of paraphrase recognition (Rus, McCarthy, and Lintean 2008). Detection of semantic similarity and, to some extent, that of bidirectional entailment is usually an implicit part of paraphrase generation. However, given the interesting and d</context>
</contexts>
<marker>Garoufi, 2007</marker>
<rawString>Garoufi, Konstantina. 2007. Towards a Better Understanding of Applied Textual Entailment: Annotation and Evaluation of the RTE-2 Dataset. Master’s thesis, Language Science and Technology, Saarland University.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Caroline Gasperin</author>
<author>P Gamallo</author>
<author>A Agustini</author>
<author>G Lopes</author>
<author>Vera de Lima</author>
</authors>
<date>2001</date>
<marker>Gasperin, Gamallo, Agustini, Lopes, de Lima, 2001</marker>
<rawString>Gasperin, Caroline, P. Gamallo, A. Agustini, G. Lopes, and Vera de Lima. 2001.</rawString>
</citation>
<citation valid="false">
<title>Using syntactic contexts for measuring word similarity.</title>
<booktitle>In Proceedings of the Workshop on Knowledge Acquisition and Categorization, ESSLLI,</booktitle>
<pages>18--23</pages>
<location>Helsinki.</location>
<marker></marker>
<rawString>Using syntactic contexts for measuring word similarity. In Proceedings of the Workshop on Knowledge Acquisition and Categorization, ESSLLI, pages 18–23, Helsinki.</rawString>
</citation>
<citation valid="true">
<date>2008</date>
<booktitle>Proceedings of the Text Analysis Conference (TAC): Recognizing Textual Entailment Track,</booktitle>
<editor>Giampiccolo, Danilo, Hoa Dang, Ido Dagan, Bill Dolan, and Bernardo Magnini, editors.</editor>
<location>Gaithersburg, MD.</location>
<contexts>
<context position="11681" citStr="(2008)" startWordPosition="1748" endWordPosition="1748"> sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of relation extraction (Romano et al. 2006). Most recently, Bhagat and Ravichandran (2008) collect paraphrastic patterns for relation extraction by applying semi-supervised paraphrase induction to a very large monolingual corpus. For example, for the relation of “acquisition,” they collect: Original : X agreed to buy Y Variant 1 : X completed its acquisition of Y Variant 2 : X purchased Y 1.3.2 Expanding Sparse Human Reference Data for Evaluation. A large percentage of NLP applications are evaluated by having human annotators or subjects carry out the same 344 Madnani and Dorr Generating Phrasal and Sentential Paraphrases task for a given set of data and using the output so created</context>
<context position="19422" citStr="(2008)" startWordPosition="2928" endWordPosition="2928">nt recognition. The task of recognizing entailment is an application-independent task and has important ramifications for almost all other language processing tasks that can derive benefit from some form of applied semantic inference. For this reason, the task has received noticeable attention in the research community and annual communitywide evaluations of entailment systems have been held in the form of the Recognizing Textual Entailment (RTE) Challenges (Dagan, Glickman, and Magnini 2006; Bar-Haim et al. 2007; Sekine et al. 2007; Giampiccolo et al. 2008). Looking towards the future, Dagan (2008) suggests that the textual entailment task provides a comprehensive framework for semantic inference and argues for building a concrete inference engine that not only recognizes entailment but also searches for all entailing texts given an entailment hypothesis H and, conversely, generates all entailed statements given a text T. Given such an engine, Dagan claims that paraphrase 346 Madnani and Dorr Generating Phrasal and Sentential Paraphrases generation is simply a matter of generating all entailed statements given any sentence. Although this is a very attractive proposition that defines bot</context>
<context position="87023" citStr="(2008)" startWordPosition="13770" endWordPosition="13770">ally constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments. It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance. (Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007). More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques. To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when using Arabic—a language significantly different from English—as the pivot language.11 In this study, we found that the paraphrase pairs in the sample set could be grouped into the following th</context>
<context position="89834" citStr="(2008)" startWordPosition="14183" endWordPosition="14183">ope with the noisy alignment process. Before we continue, we believe it would be useful to draw a connection between Bannard and Callison-Burch’s (2005) work and that of Wu and Zhou (2003) as discussed in Section 3.2. Note that both of these techniques rely on a secondary language to provide the cues for generating paraphrases in the primary language. However, Wu and Zhou rely on a pre-compiled bilingual dictionary to discover these cues whereas Bannard and Callison-Burch have an entirely datadriven discovery process. In an attempt to address some of the noisy alignment issues, Callison-Burch (2008) recently proposed an improvement that places an additional syntactic constraint on the phrasal paraphrases extracted via the pivot-based method from bilingual corpora and showed that using such a constraint leads to a significant improvement in the quality of the extracted paraphrases.12 The syntactic constraint requires that the extracted paraphrase be of the same syntactic type as the original phrase. With this constraint, estimating the paraphrase probability now requires the incorporation of syntactic type into the equation: �p(¯ej|¯ek,s(ek)) � p(¯ej|¯f, s(ek))p( ¯f |¯ek, s(ek)) f¯ where </context>
<context position="100027" citStr="(2008)" startWordPosition="15761" endWordPosition="15761">alence classes of the start and end words of the English phrases are added. This indicates that phrases that start and end with the same kind of words (interrogatives or articles) are likely to be paraphrases. Astute readers will make the following observations about the syntactic feature nodes used by the authors: • Such nodes can be seen as an indirect way of incorporating a limited form of distributional similarity. • By including such nodes—essentially based on lexical equivalence classes—the authors are, in a way, imposing weaker forms of syntactic constraints described in Callison-Burch (2008) without requiring a parser. The authors extract paraphrases for a small set of input English paraphrases and show that they are able to generate a larger percentage of correct paraphrases compared to the syntactically constrained approach proposed by Callison-Burch (2008). They conduct no formal evaluation of the coverage of their approach but show that, in a limited setting, it is higher than that for the syntactically constrained pivot-based approach. However, they perform no comparisons of their coverage with the original pivot-based approach (Bannard and Callison-Burch 2005). 4. Building </context>
<context position="107772" citStr="(2008)" startWordPosition="16954" endWordPosition="16954">m of reduced annotation cost is not necessarily borne out by the observations. Despite partitioning the annotation task by types, it was still difficult to provide accurate annotation guidelines. This led to a significant difference in annotation time—with some annotations taking almost twice as long as others. Given the small size of the corpus, it is unlikely that it may be used as training data for corpus-based paraphrase generation methods and, like the MSRP corpus, would be best suited to the evaluation of paraphrase recognition techniques. Most recently, Cohn, Callison-Burch, and Lapata (2008) describe a different take on the creation of a monolingual parallel corpus containing 900 sentence pairs with paraphrase annotations that can be used for both development and evaluation of paraphrase systems. These paraphrase annotations take the form of alignments between the words and sequences of words in each sentence pair; these alignments are analogous to the word- and phrasal-alignments induced in SMT systems that were illustrated in Section 3.5. As is the case with SMT alignments, the paraphrase annotations can be of different forms: one-word-to-one-word, one-word-to-many-words, as we</context>
<context position="112320" citStr="(2008)" startWordPosition="17627" endWordPosition="17627">n Figure 9. In general, building paraphrase corpora, whether it is done at the sentence level or at the sub-sentential level, is extremely useful for the fostering of further research and development in the area of paraphrase generation. 5. Evaluation of Paraphrase Generation Whereas other language processing tasks such as machine translation and document summarization usually have multiple annual community-wide evaluations using Figure 9 An example of syntactically motivated paraphrastic patterns that can be extracted from the paraphrase corpus constructed by Cohn, Callison-Burch, and Lapata (2008). 377 Computational Linguistics Volume 36, Number 3 standard test sets and manual as well as automated metrics, the task of automated paraphrasing does not. An obvious reason for this disparity could be that paraphrasing is not an application in and of itself. However, the existence of similar evaluations for other tasks that are not applications, such as dependency parsing (Buchholz and Marsi 2006; Nivre et al. 2007) and word sense disambiguation (Senseval), suggests otherwise. We believe that the primary reason is that, over the years, paraphrasing has been employed in an extremely fragmente</context>
<context position="116294" citStr="(2008)" startWordPosition="18236" endWordPosition="18236"> particularly suited to this task because, in order to use them, a list of reference paraphrases has to be constructed against which these measures may be computed. Given that it is extremely unlikely that any such list will be exhaustive, any precision and recall measurements will not be accurate. Therefore, other alternatives are needed. Since the evaluation of paraphrases is essentially the task of measuring semantic similarity or of paraphrase recognition, all of those metrics, including the ones discussed in Section 2, can be employed here. Most recently, Callison-Burch, Cohn, and Lapata (2008) discuss ParaMetric, another automatic measure that may be used to evaluate paraphrase extraction methods. This 378 Madnani and Dorr Generating Phrasal and Sentential Paraphrases work follows directly from the work done by the authors to create the paraphraseannotated corpus described in the previous section. Recall that this corpus contains paraphrastic sentence pairs with annotations in the form of alignments between their respective words and phrases. It is posited that to evaluate any paraphrase generation method, one could simply have it produce its own set of alignments for the sentence </context>
<context position="121368" citStr="(2008)" startWordPosition="18996" endWordPosition="18996">y becoming one of the most important sources of data for natural language processing applications, which should not be surprising given its phenomenal rate of growth. The (relatively) freely available Web data, massive in scale, has already had a definite influence over data-intensive techniques such as those employed for paraphrase generation (Pas¸ca and Dienes 2005). However, the availability of such massive amounts of Web data comes with serious concerns for efficiency and has led to the development of efficient methods that can cope with such large amounts of data. Bhagat and Ravichandran (2008) extract phrasal paraphrases by measuring distributional similarity over a 150GB monolingual corpus (25 billion words) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997). Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005). We also believe that the influence of the Web will extend to o</context>
<context position="125362" citStr="(2008)" startWordPosition="19583" endWordPosition="19583">ecialized domains. For example, in the field of health literacy, it is well known that documents for health consumers are not very well-targeted to their purported audience. Recent research has shown how to generate a lexicon of semantically equivalent phrasal (and lexical) pairs of technical and lay medical terms from monolingual parallel corpora (Elhadad and Sutaria 2007) as well as monolingual comparable corpora (Del´eger and Zweigenbaum 2009). Examples include pairs such as (myocardial infarction, heart attack) and (leucospermia, increased white cells in the sperm). In another domain, Max (2008) proposes an adaptation of the pivot-based method to generate rephrasings of short text spans that could help a writer revise a text. Because the goal is to assist a writer in making revisions, the rephrasings do not always need to bear a perfect paraphrastic relationship to the original, a scenario suited for the pivot-based method. Several variants of such adaptations are developed that generate candidate rephrasings driven by fluency, semantic equivalence, and authoring value, respectively. We also believe that a large-scale annual community-wide evaluation should become a trend since it is</context>
</contexts>
<marker>2008</marker>
<rawString>Giampiccolo, Danilo, Hoa Dang, Ido Dagan, Bill Dolan, and Bernardo Magnini, editors. 2008. Proceedings of the Text Analysis Conference (TAC): Recognizing Textual Entailment Track, Gaithersburg, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Oren Glickman</author>
<author>Ido Dagan</author>
</authors>
<title>Identifying lexical paraphrases from a single corpus: A case study for verbs.</title>
<date>2003</date>
<booktitle>In Recent Advantages in Natural Language Processing (RANLP’03),</booktitle>
<pages>81--90</pages>
<location>Borovets.</location>
<marker>Glickman, Dagan, 2003</marker>
<rawString>Glickman, Oren and Ido Dagan. 2003. Identifying lexical paraphrases from a single corpus: A case study for verbs. In Recent Advantages in Natural Language Processing (RANLP’03), pages 81–90, Borovets.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Grefenstette</author>
</authors>
<title>Explorations in Automatic Thesaurus Discovery.</title>
<date>1994</date>
<publisher>Kluwer Academic Press,</publisher>
<location>Dordrecht.</location>
<contexts>
<context position="7561" citStr="Grefenstette 1994" startWordPosition="1119" endWordPosition="1120"> list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally,</context>
</contexts>
<marker>Grefenstette, 1994</marker>
<rawString>Grefenstette, G. 1994. Explorations in Automatic Thesaurus Discovery. Kluwer Academic Press, Dordrecht.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Gusfield</author>
</authors>
<date>1997</date>
<booktitle>Algorithms on Strings, Trees, and Sequences: Computational Science and Computational Biology.</booktitle>
<publisher>Cambridge University Press,</publisher>
<location>Cambridge.</location>
<contexts>
<context position="71844" citStr="Gusfield (1997)" startWordPosition="11288" endWordPosition="11289">s of 30% is used, as shown in Steps 8–14. The basic idea behind the threshold is that as the number of sentences increases, the number of different arguments will increase faster than the number of synonyms. Figure 7 shows how a very simple word lattice may be generalized into a slotted lattice. Once all the slotted lattices have been constructed for each corpus, Steps 19–24 try to match the slotted lattices extracted from one corpus to those extracted from the other by referring back to the sentence clusters from which the original lattices were 9 For more details on MSA algorithms, refer to Gusfield (1997) and Durbin et al. (1998). 364 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 4 (Barzilay and Lee 2003). Generate set M of matching lattice pairs given a pair of comparable corpora C1 and C2. Summary. Gather topically related sentences from C1 into clusters. Do the same for C2. Convert each sentence cluster into a slotted lattice using a multiple-sequence alignment (MSA) algorithm. Compare all lattice pairs and output those likely to be paraphrastic. 1: Let WC1 and WC2 represent word lattices obtained from C1 and C2, respectively 2: M ← {0, WC1 ← {0, WC2 ← {0 3: for e</context>
</contexts>
<marker>Gusfield, 1997</marker>
<rawString>Gusfield, D. 1997. Algorithms on Strings, Trees, and Sequences: Computational Science and Computational Biology. Cambridge University Press, Cambridge.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Catalina Hallett</author>
<author>Donia Scott</author>
</authors>
<title>Structural variation in generated health reports.</title>
<date>2005</date>
<booktitle>In Proceedings of the Third International Workshop on Paraphrasing,</booktitle>
<pages>33--40</pages>
<location>Jeju Island.</location>
<contexts>
<context position="8128" citStr="Hallett and Scott 2005" startWordPosition="1201" endWordPosition="1204"> 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications. Also note that we only discuss those </context>
</contexts>
<marker>Hallett, Scott, 2005</marker>
<rawString>Hallett, Catalina and Donia Scott. 2005. Structural variation in generated health reports. In Proceedings of the Third International Workshop on Paraphrasing, pages 33–40, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Zellig Harris</author>
</authors>
<date>1954</date>
<journal>Distributional structure. Word,</journal>
<volume>10</volume>
<issue>2</issue>
<contexts>
<context position="23545" citStr="Harris (1954)" startWordPosition="3542" endWordPosition="3543">ount when using a large single monolingual corpus than when using bilingual parallel corpora. However, before delving into the actual paraphrasing methods, we believe that it would be very useful to explain the motivation behind distributional similarity, an extremely popular technique that can be used for paraphrase generation with several different types of corpora. We devote the following section to such an explanation. 347 Computational Linguistics Volume 36, Number 3 3.1 Distributional Similarity The idea that a language possesses distributional structure was first discussed at length by Harris (1954). The term represents the notion that one can describe a language in terms of relationships between the occurrences of its elements (words, morphemes, phonemes) relative to the occurrence of other elements. The name for the phenomenon is derived from an element’s distribution—sets of elements in particular positions that the element occurs with to produce an utterance or a sentence. More specifically, Harris presents several empirical observations to support the hypothesis that such a structure exists naturally for language. Here, we closely quote these observations: • Utterances and sentences</context>
</contexts>
<marker>Harris, 1954</marker>
<rawString>Harris, Zellig. 1954. Distributional structure. Word, 10(2):3.146–162.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Graeme Hearst</author>
</authors>
<title>Near-synonymy and the structure of lexical knowledge.</title>
<date>1995</date>
<booktitle>In Working notes of the AAAI Spring Symposium on Representation and Acquisition of Lexical Knowledge,</booktitle>
<location>Stanford, CA.</location>
<marker>Hearst, 1995</marker>
<rawString>Hearst, Graeme. 1995. Near-synonymy and the structure of lexical knowledge. In Working notes of the AAAI Spring Symposium on Representation and Acquisition of Lexical Knowledge, Stanford, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Graeme Hirst</author>
</authors>
<title>Paraphrasing paraphrased. Unpublished invited talk at</title>
<date>2003</date>
<booktitle>the ACL International Workshop on Paraphrasing,</booktitle>
<location>Sapporo, Japan.</location>
<contexts>
<context position="3128" citStr="Hirst (2003)" startWordPosition="453" endWordPosition="454">University of Maryland, College Park, MD 20742, USA. E-mail: bonnie@umiacs.umd.edu. Submission received: 16 December 2008; revised submission received: 30 November 2009; accepted for publication: 7 March 2010. © 2010 Association for Computational Linguistics Computational Linguistics Volume 36, Number 3 that can encourage the community to use paraphrases by providing an applicationindependent, cohesive, and condensed discussion of data-driven paraphrase generation techniques. We should also acknowledge related work that has been done on furthering the community’s understanding of paraphrases. Hirst (2003) presents a comprehensive survey of paraphrasing focused on a deep analysis of the nature of a paraphrase. The current survey focuses instead on delineating the salient characteristics of the various paraphrase generation methods with an emphasis on describing how they could be used in several different NLP applications. Both these treatments provide different but valuable perspectives on paraphrasing. The remainder of this section formalizes the concept of a paraphrase, scopes out the coverage of this survey’s discussion, and provides broader context and motivation by discussing applications </context>
</contexts>
<marker>Hirst, 2003</marker>
<rawString>Hirst, Graeme. 2003. Paraphrasing paraphrased. Unpublished invited talk at the ACL International Workshop on Paraphrasing, Sapporo, Japan.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Eduard H Hovy</author>
</authors>
<title>Generating Natural Language under Pragmatic Constraints. Lawrence Erlbaum Associates, Inc.,</title>
<date>1988</date>
<location>Mahwah, NJ.</location>
<contexts>
<context position="8082" citStr="Hovy 1988" startWordPosition="1195" endWordPosition="1196">exts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these appli</context>
</contexts>
<marker>Hovy, 1988</marker>
<rawString>Hovy, Eduard H. 1988. Generating Natural Language under Pragmatic Constraints. Lawrence Erlbaum Associates, Inc., Mahwah, NJ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shudong Huang</author>
<author>David Graff</author>
<author>George Doddington</author>
</authors>
<title>Multiple-translation chinese corpus. Linguistic Data Consortium.</title>
<date>2002</date>
<note>http://www.ldc.upenn.edu/ Catalog/CatalogEntry.jsp?catalogId= LDC2002T01</note>
<marker>Huang, Graff, Doddington, 2002</marker>
<rawString>Huang, Shudong, David Graff, and George Doddington. 2002. Multiple-translation chinese corpus. Linguistic Data Consortium. http://www.ldc.upenn.edu/ Catalog/CatalogEntry.jsp?catalogId= LDC2002T01</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ali Ibrahim</author>
<author>Boris Katz</author>
<author>Jimmy Lin</author>
</authors>
<title>Extracting structural paraphrases from aligned monolingual corpora.</title>
<date>2003</date>
<booktitle>In Proceedings of the International Workshop on Paraphrasing,</booktitle>
<pages>57--64</pages>
<location>Sapporo.</location>
<marker>Ibrahim, Katz, Lin, 2003</marker>
<rawString>Ibrahim, Ali, Boris Katz, and Jimmy Lin. 2003. Extracting structural paraphrases from aligned monolingual corpora. In Proceedings of the International Workshop on Paraphrasing, pages 57–64, Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adrian Iftene</author>
</authors>
<title>Textual Entailment.</title>
<date>2009</date>
<tech>Ph.D. thesis,</tech>
<institution>Faculty of Computer Science, University of Ias¸i.</institution>
<contexts>
<context position="20985" citStr="Iftene 2009" startWordPosition="3159" endWordPosition="3160">rture is now owned by Yahoo. Although both H1 and H2 are entailed by T, they are not strictly paraphrases of T because some of the semantic content has not been carried over. This must be an important consideration when building the proposed entailment engine. Of course, even these approximately semantically equivalent constructions may prove useful in an appropriate downstream application. The relationship between paraphrasing and entailment is more tightly entwined than it might appear. Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007). In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007). It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailmen</context>
</contexts>
<marker>Iftene, 2009</marker>
<rawString>Iftene, Adrian. 2009. Textual Entailment. Ph.D. thesis, Faculty of Computer Science, University of Ias¸i.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Naomi Inoue</author>
</authors>
<title>Automatic noun classification by using Japanese-English word pairs.</title>
<date>1991</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>201--208</pages>
<location>Berkeley, CA.</location>
<contexts>
<context position="7489" citStr="Inoue 1991" startWordPosition="1108" endWordPosition="1109">r the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui </context>
</contexts>
<marker>Inoue, 1991</marker>
<rawString>Inoue, Naomi. 1991. Automatic noun classification by using Japanese-English word pairs. In Proceedings of ACL, pages 201–208, Berkeley, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Inui</author>
</authors>
<title>Kentaro and Ulf Hermjakob, editors.</title>
<date>2003</date>
<booktitle>Proceedings of the Second International Workshop on Paraphrasing. Association for Computational Linguistics,</booktitle>
<location>Sapporo.</location>
<marker>Inui, 2003</marker>
<rawString>Inui, Kentaro and Ulf Hermjakob, editors. 2003. Proceedings of the Second International Workshop on Paraphrasing. Association for Computational Linguistics, Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kentaro Inui</author>
<author>Masaru Nogami</author>
</authors>
<title>A paraphrase-based exploration of cohesiveness criteria.</title>
<date>2001</date>
<booktitle>In Proceedings of the European Workshop on Natural Language Generation (ENLG’01),</booktitle>
<pages>1--10</pages>
<location>Toulouse.</location>
<contexts>
<context position="8104" citStr="Inui and Nogami 2001" startWordPosition="1197" endWordPosition="1200"> 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications. Also note tha</context>
</contexts>
<marker>Inui, Nogami, 2001</marker>
<rawString>Inui, Kentaro and Masaru Nogami. 2001. A paraphrase-based exploration of cohesiveness criteria. In Proceedings of the European Workshop on Natural Language Generation (ENLG’01), pages 1–10, Toulouse.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Christian Jacquemin</author>
</authors>
<title>Syntagmatic and paradigmatic representations of term variation.</title>
<date>1999</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>341--348</pages>
<location>College Park, MD.</location>
<contexts>
<context position="10415" citStr="Jacquemin (1999)" startWordPosition="1548" endWordPosition="1549">ssed in more detail in Section 3.1. 343 Computational Linguistics Volume 36, Number 3 In fact, in recent years, the information retrieval community has extensively explored the task of query expansion by applying paraphrasing techniques to generate similar or related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006; Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system. For example, for the INVENTOR question type, they generate: Original : X was invented by Y Variant 1 : Y’s invention of X Variant 2 : Y, inventor of X Riezler et al. (2007) expand a query by ge</context>
</contexts>
<marker>Jacquemin, 1999</marker>
<rawString>Jacquemin, Christian. 1999. Syntagmatic and paradigmatic representations of term variation. In Proceedings of ACL, pages 341–348, College Park, MD.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cordeiro Jo˜ao</author>
<author>Ga¨el Dias</author>
<author>Brazdil Pavel</author>
</authors>
<title>A metric for paraphrase detection.</title>
<date>2007</date>
<booktitle>In Proceedings of the Second International Multi-Conference on Computing in the Global Information Technology,</booktitle>
<pages>7</pages>
<location>Guadeloupe.</location>
<marker>Jo˜ao, Ga¨el Dias, Pavel, 2007</marker>
<rawString>Jo˜ao, Cordeiro, Ga¨el Dias, and Brazdil Pavel. 2007a. A metric for paraphrase detection. In Proceedings of the Second International Multi-Conference on Computing in the Global Information Technology, page 7, Guadeloupe.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Cordeiro Jo˜ao</author>
<author>Ga¨el Dias</author>
<author>Brazdil Pavel</author>
</authors>
<title>New functions for unsupervised asymmetrical paraphrase detection.</title>
<date>2007</date>
<journal>Journal of Software,</journal>
<volume>2</volume>
<issue>4</issue>
<marker>Jo˜ao, Ga¨el Dias, Pavel, 2007</marker>
<rawString>Jo˜ao, Cordeiro, Ga¨el Dias, and Brazdil Pavel. 2007b. New functions for unsupervised asymmetrical paraphrase detection. Journal of Software, 2(4):12–23.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Rosie Jones</author>
<author>Benjamin Rey</author>
<author>Omid Madani</author>
<author>Wile Greiner</author>
</authors>
<title>Generating query substitutions.</title>
<date>2006</date>
<booktitle>In Proceedings of the World Wide Web Conference,</booktitle>
<pages>387--396</pages>
<location>Edinburgh.</location>
<contexts>
<context position="10120" citStr="Jones et al. 2006" startWordPosition="1500" endWordPosition="1503">2 : the details of circuits 1 Inferring words to be similar based on similar contexts can be thought of as the most common instance of employing distributional similarity. The concept of distributional similarity also turns out to be quite important for phrasal paraphrase generation and is discussed in more detail in Section 3.1. 343 Computational Linguistics Volume 36, Number 3 In fact, in recent years, the information retrieval community has extensively explored the task of query expansion by applying paraphrasing techniques to generate similar or related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006; Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several p</context>
</contexts>
<marker>Jones, Rey, Madani, Greiner, 2006</marker>
<rawString>Jones, Rosie, Benjamin Rey, Omid Madani, and Wile Greiner. 2006. Generating query substitutions. In Proceedings of the World Wide Web Conference, pages 387–396, Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Kauchak</author>
<author>Regina Barzilay</author>
</authors>
<title>Paraphrasing for automatic evaluation.</title>
<date>2006</date>
<booktitle>In Proceedings of HLT-NAACL,</booktitle>
<pages>455--462</pages>
<location>New York, NY.</location>
<contexts>
<context position="7917" citStr="Kauchak and Barzilay 2006" startWordPosition="1168" endWordPosition="1171">cquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the ma</context>
</contexts>
<marker>Kauchak, Barzilay, 2006</marker>
<rawString>Kauchak, David and Regina Barzilay. 2006. Paraphrasing for automatic evaluation. In Proceedings of HLT-NAACL, pages 455–462, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Philipp Koehn</author>
<author>Franz Josef Och</author>
<author>Daniel Marcu</author>
</authors>
<title>Statistical phrase-based translation.</title>
<date>2003</date>
<booktitle>In Proceedings of HLT-NAACL,</booktitle>
<pages>48--54</pages>
<location>Edmonton.</location>
<marker>Koehn, Och, Marcu, 2003</marker>
<rawString>Koehn, Philipp, Franz Josef Och, and Daniel Marcu. 2003. Statistical phrase-based translation. In Proceedings of HLT-NAACL, pages 48–54, Edmonton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stanley Kok</author>
<author>Chris Brockett</author>
</authors>
<title>Hitting the right paraphrases in good time.</title>
<date>2010</date>
<booktitle>In Proceedings of NAACL,</booktitle>
<location>Los Angeles, CA.</location>
<contexts>
<context position="97141" citStr="Kok and Brockett (2010)" startWordPosition="15287" endWordPosition="15290">th treat paraphrasing as monolingual translation. However, as outlined in the discussion of that work, Quirk, Brockett, and Dolan use a relatively simplistic translation model and decoder which leads to paraphrases with little or no lexical variety. In contrast, Madnani et al. use a more complex translation model and an unmodified state-of-the-art SMT decoder to produce paraphrases that are much more diverse. Of course, the reliance of the latter approach on automatic word alignments does inevitably lead to much noisier sentential paraphrases than those produced by Quirk, Brockett, and Dolan. Kok and Brockett (2010) present a novel take on generating phrasal paraphrases with bilingual corpora. As with most approaches based on parallel corpora, they also start with phrase tables extracted from such corpora along with the corresponding phrasal translation probabilities. However, instead of performing the usual pivoting step with the bilingual phrases in the table, they take a graphical approach and represent each phrase in the table as a node, leading to a bipartite graph. Two nodes in the graph are connected to each other if they are aligned to each other. In order to extract paraphrases, they sample rand</context>
</contexts>
<marker>Kok, Brockett, 2010</marker>
<rawString>Kok, Stanley and Chris Brockett. 2010. Hitting the right paraphrases in good time. In Proceedings of NAACL, Los Angeles, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
</authors>
<title>Automatic Retrieval and Clustering of Similar Words.</title>
<date>1998</date>
<booktitle>In Proceedings of ACL-COLING,</booktitle>
<pages>768--774</pages>
<location>Montr´eal.</location>
<contexts>
<context position="7571" citStr="Lin 1998" startWordPosition="1121" endWordPosition="1122"> in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also d</context>
</contexts>
<marker>Lin, 1998</marker>
<rawString>Lin, Dekang. 1998. Automatic Retrieval and Clustering of Similar Words. In Proceedings of ACL-COLING, pages 768–774, Montr´eal.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekang Lin</author>
<author>Lin Pantel</author>
</authors>
<title>DIRT -Discovery of Inference Rules from Text.</title>
<date>2001</date>
<booktitle>In Proceedings of ACM SIGKDD Conference on Knowledge Discovery and Data Mining,</booktitle>
<pages>323--328</pages>
<location>San Francisco, CA.</location>
<contexts>
<context position="32416" citStr="Lin and Pantel (2001)" startWordPosition="4978" endWordPosition="4981">rastic pairs and their respective counts 350 Madnani and Dorr Generating Phrasal and Sentential Paraphrases on both sides and they attach the nearest pair of entities to the anchor. As expected, the paraphrases do improve in quality as the anchors become more specific. However, they also report that as anchors are made more specific by attaching additional information, the likelihood of finding a candidate pair with the same anchor is reduced. The ingredients for measuring distributional similarity in a single corpus can certainly be more complex than simple phrases used by Pas¸ca and Dienes. Lin and Pantel (2001) discuss how to measure distributional similarity over dependency tree paths in order to induce generalized paraphrase templates such as:2 X found answer to Y ⇔ X solved Y X caused Y ⇔ Y is blamed on X Whereas single links between nodes in a dependency tree represent direct semantic relationships, a sequence of links, or a path, can be understood to represent an indirect relationship. Here, a path is named by concatenating the dependency relationships and lexical items along the way but excluding the lexical items at the end. In this way, a path can actually be thought of as a pattern with var</context>
<context position="34516" citStr="Lin and Pantel (2001)" startWordPosition="5353" endWordPosition="5356">hn) and (SlotY, problem) are known as the two features of the path. • The dependency relations inside the path that are not slots are termed internal relations. Intuitively, one can imagine a path to be a complex representation of the pattern X finds answer to Y, where X and Y are variables. This representation for a path is a perfect fit for an extended version of the distributional similarity hypothesis: If similar sets of words fill the same variables for two different patterns, then the patterns may be considered to have similar meaning, which is indeed the case for the paths in Figure 2. Lin and Pantel (2001) use newspaper text as their input corpus and create dependency parses for all the sentences in the corpus in the pre-processing step. Algorithm 2 provides the details of the rest of the process: Steps 1 and 2 extract the paths and compute their distributional properties, and Steps 3–14 extract pairs of paths which are 2 Technically, these templates represent inference rules, such that the right-hand side can be inferred from the left-hand side but is not semantically equivalent to it. This form of inference is closely related to that exhibited in textual entailment. This work is primarily con</context>
<context position="36976" citStr="Lin and Pantel 2001" startWordPosition="5747" endWordPosition="5750">ative distributional features, can generate several incorrect or implausible paraphrase patterns (inference rules). Recent work has shown how to filter out incorrect inferences when using them in a downstream application (Pantel et al. 2007). Finally, there is no reason for the distributional features to be in the same language as the one in which the paraphrases are desired. Wu and Zhou (2003) describe a 5 A demo of the algorithm is available online at http://demo.patrickpantel.com/Content/LexSem/ paraphrase.htm. 352 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 2 (Lin and Pantel 2001). Produce inference rules from a parsed corpus. Summary. Adapt Harris’s (1954) hypothesis of distributional similarity for paths in dependency trees: If two tree paths have similar distributions such that they tend to link the same set of words, then they likely mean the same thing and together generate an inference rule. 1: Extract paths of the form described above from the parsed corpus 2: Initialize a hash H that stores, for each tuple of the form (p, s, w)—where p is a path, s is one of the two slots in p, and w is a word that appears in that slot—the following two quantities: (a) A count </context>
<context position="47617" citStr="Lin and Pantel (2001)" startWordPosition="7429" endWordPosition="7432">ns in Section 3.5 and highlight that although more recent translation techniques— specifically ones that use phrases as units of translation—are better suited to the task of generating paraphrases than the competitive linking approach, they continue to suffer from the same problem of low precision. On the other hand, such techniques can take good advantage of large bilingual corpora and capture a much larger variety of paraphrastic phenomena. Ibrahim, Katz, and Lin (2003) propose an approach that applies a modified version of the dependency path distributional similarity algorithm proposed by Lin and Pantel (2001) to the same monolingual parallel corpus (multiple translations of literary works) used by Barzilay and McKeown (2001). The authors claim that their technique is more tractable than Lin and Pantel’s approach since the sentence-aligned nature of the input parallel corpus obviates the need to compute similarity over tree paths drawn from sentences that have zero semantic overlap. Furthermore, they also claim that their technique exploits the parallel nature of a corpus more effectively than Barzilay and 356 Madnani and Dorr Generating Phrasal and Sentential Paraphrases McKeown’s approach simply </context>
<context position="49169" citStr="Lin and Pantel 2001" startWordPosition="7656" endWordPosition="7659">nce-aligned monolingual parallel corpora; the same as used in Barzilay and McKeown (2001). For each sentence in an aligned pair, anchors are identified. The anchors from both sentences are brought into alignment. Once anchor pairs on either side have been identified and aligned, a breadth-first search algorithm is used to find the shortest path between the anchor nodes in the dependency trees. All paths found between anchor pairs for a sentence pair are taken to be distributionally—and, hence, semantically—similar. 2. Using a sliding frequency measure. The original dependency-based algorithm (Lin and Pantel 2001) weights all subsequent occurrences of the same paraphrastic pair of tree paths as much as the first one. In this version, every successive induction of a paraphrastic pair using the same anchor pair is weighted less than the previous one. Specifically, inducing the same paraphrase pair using an anchor pair that has already been seen only counts for 2n1, where n is the number of times the specific anchor pair has been seen so far. Therefore, induction of a path pair using new anchors is better evidence that the pair is paraphrastic, as opposed to the repeated induction of the path pair from th</context>
</contexts>
<marker>Lin, Pantel, 2001</marker>
<rawString>Lin, Dekang and Lin Pantel. 2001. DIRT -Discovery of Inference Rules from Text. In Proceedings of ACM SIGKDD Conference on Knowledge Discovery and Data Mining, pages 323–328, San Francisco, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Lopez</author>
</authors>
<title>Statistical machine translation.</title>
<date>2008</date>
<journal>ACM Computing Surveys,</journal>
<volume>40</volume>
<issue>3</issue>
<contexts>
<context position="87023" citStr="Lopez (2008)" startWordPosition="13769" endWordPosition="13770">a manually constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments. It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance. (Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007). More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques. To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when using Arabic—a language significantly different from English—as the pivot language.11 In this study, we found that the paraphrase pairs in the sample set could be grouped into the following th</context>
</contexts>
<marker>Lopez, 2008</marker>
<rawString>Lopez, Adam. 2008. Statistical machine translation. ACM Computing Surveys, 40(3):1–49.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adam Lopez</author>
<author>Philip Resnik</author>
</authors>
<title>Word-based alignment, phrase-based translation: What’s the link?</title>
<date>2006</date>
<booktitle>In Proceedings of AMTA,</booktitle>
<pages>90--99</pages>
<location>Boston, MA.</location>
<contexts>
<context position="86854" citStr="Lopez and Resnik 2006" startWordPosition="13740" endWordPosition="13743">nces from the shown sentence pairs. (i1,j1) x (i2,j2) denotes the correspondence ( fi1 ... fj1, ei2 ... ej2). Not all extracted correspondences are shown. paraphrases obtained via manually constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments. It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance. (Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007). More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2). Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques. To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when using Arabic—a language</context>
</contexts>
<marker>Lopez, Resnik, 2006</marker>
<rawString>Lopez, Adam and Philip Resnik. 2006. Word-based alignment, phrase-based translation: What’s the link? In Proceedings of AMTA, pages 90–99, Boston, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nitin Madnani</author>
<author>Necip Fazil Ayan</author>
<author>Philip Resnik</author>
<author>Bonnie J Dorr</author>
</authors>
<title>Using paraphrases for parameter tuning in statistical machine translation.</title>
<date>2007</date>
<booktitle>In Proceedings of the Workshop on Statistical Machine Translation,</booktitle>
<pages>120--127</pages>
<location>Prague.</location>
<contexts>
<context position="16135" citStr="Madnani et al. (2007" startWordPosition="2430" endWordPosition="2433">iven source sentence can often be translated into the target language in many valid ways. Because there can be many “correct answers,” almost all models employed by SMT systems require, in addition to a large bitext, a held-out development set comprising multiple high-quality, human-authored reference translations in the target language in order to tune their parameters relative to a translation quality metric. However, given 345 Computational Linguistics Volume 36, Number 3 the time and cost implications of such a process, most such data sets usually have only a single reference translation. Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sent</context>
<context position="123103" citStr="Madnani et al. (2007)" startWordPosition="19246" endWordPosition="19249">e whether two units are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007). A manual inspection reveals that using multiple sources of information yields paraphrases with much higher accuracy. We believe that such exploitation of multiple types of resources and their combinations is an important development. Zhao et al. (2009) further increase the utility of this combination approach by incorporating application specific constraints on the pivoted paraphrases. For example, if the output paraphrases need to be simplified versions of the input sentences, then only those phrasal paraphrase pairs are used where the output is shorter than the input. 380 Madnani and Dorr </context>
</contexts>
<marker>Madnani, Ayan, Resnik, Dorr, 2007</marker>
<rawString>Madnani, Nitin, Necip Fazil Ayan, Philip Resnik, and Bonnie J. Dorr. 2007. Using paraphrases for parameter tuning in statistical machine translation. In Proceedings of the Workshop on Statistical Machine Translation, pages 120–127, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nitin Madnani</author>
<author>Philip Resnik</author>
<author>Bonnie J Dorr</author>
<author>Richard Schwartz</author>
</authors>
<title>Applying automatically generated semantic knowledge: A case study in machine translation.</title>
<date>2008</date>
<booktitle>In Proceedings of the NSF Symposium on Semantic Knowledge Discovery, Organization and Use,</booktitle>
<pages>60--61</pages>
<location>New York, NY.</location>
<contexts>
<context position="93536" citStr="Madnani et al. (2008" startWordPosition="14737" endWordPosition="14740">c syntactic types that occur very rarely can be ignored and a less noisy paraphrase probability estimate can be computed, which may prove more useful in a downstream application than its counterpart computed via the unconstrained approach. We must also note that requiring syntactic constraints for pivot-based paraphrase extraction restricts the approach to those languages where a reasonably good parser is available. An obvious extension of the Callison-Burch style approach is to use the collection of pivoted English-to-English phrase pairs to generate sentential paraphrases for new sentences. Madnani et al. (2008a) combine the pivot-based approach to paraphrase acquisition with a well-defined English-to-English translation model that is then used in an (unmodified) SMT system, yielding sentential paraphrases by means of “translating” input English sentences. However, instead of fully lexicalized phrasal correspondences as in (Bannard and Callison-Burch 2005), the fundamental units of translation (and paraphrasing) are hierarchical phrase pairs. The latter can be extracted from the former by replacing aligned sub-phrases with non-terminal symbols. For example, given the initial phrase pair , growth rat</context>
</contexts>
<marker>Madnani, Resnik, Dorr, Schwartz, 2008</marker>
<rawString>Madnani, Nitin, Philip Resnik, Bonnie J. Dorr, and Richard Schwartz. 2008a. Applying automatically generated semantic knowledge: A case study in machine translation. In Proceedings of the NSF Symposium on Semantic Knowledge Discovery, Organization and Use, pages 60–61, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Nitin Madnani</author>
<author>Philip Resnik</author>
<author>Bonnie J Dorr</author>
<author>Richard Schwartz</author>
</authors>
<title>Are multiple reference translations necessary? Investigating the value of paraphrased reference translations in parameter optimization.</title>
<date>2008</date>
<booktitle>In Proceedings of the Eighth Conference of the Association for Machine Translation in the Americas (AMTA),</booktitle>
<pages>143--152</pages>
<location>Waikiki, HI.</location>
<contexts>
<context position="93536" citStr="Madnani et al. (2008" startWordPosition="14737" endWordPosition="14740">c syntactic types that occur very rarely can be ignored and a less noisy paraphrase probability estimate can be computed, which may prove more useful in a downstream application than its counterpart computed via the unconstrained approach. We must also note that requiring syntactic constraints for pivot-based paraphrase extraction restricts the approach to those languages where a reasonably good parser is available. An obvious extension of the Callison-Burch style approach is to use the collection of pivoted English-to-English phrase pairs to generate sentential paraphrases for new sentences. Madnani et al. (2008a) combine the pivot-based approach to paraphrase acquisition with a well-defined English-to-English translation model that is then used in an (unmodified) SMT system, yielding sentential paraphrases by means of “translating” input English sentences. However, instead of fully lexicalized phrasal correspondences as in (Bannard and Callison-Burch 2005), the fundamental units of translation (and paraphrasing) are hierarchical phrase pairs. The latter can be extracted from the former by replacing aligned sub-phrases with non-terminal symbols. For example, given the initial phrase pair , growth rat</context>
</contexts>
<marker>Madnani, Resnik, Dorr, Schwartz, 2008</marker>
<rawString>Madnani, Nitin, Philip Resnik, Bonnie J. Dorr, and Richard Schwartz. 2008b. Are multiple reference translations necessary? Investigating the value of paraphrased reference translations in parameter optimization. In Proceedings of the Eighth Conference of the Association for Machine Translation in the Americas (AMTA), pages 143–152, Waikiki, HI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Prodromos Malakasiotis</author>
</authors>
<title>Paraphrase recognition using machine learning to combine similarity measures.</title>
<date>2009</date>
<booktitle>In Proceedings of the ACL-IJCNLP 2009 Student Research Workshop,</booktitle>
<pages>27--35</pages>
<contexts>
<context position="16922" citStr="Malakasiotis 2009" startWordPosition="2558" endWordPosition="2559">ter set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extraction. Text-to-text generation applications rely heavily on paraphrase recognition. F</context>
</contexts>
<marker>Malakasiotis, 2009</marker>
<rawString>Malakasiotis, Prodromos. 2009. Paraphrase recognition using machine learning to combine similarity measures. In Proceedings of the ACL-IJCNLP 2009 Student Research Workshop, pages 27–35, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erwin Marsi</author>
<author>Emiel Krahmer</author>
</authors>
<title>Classification of semantic relations by humans and machines.</title>
<date>2005</date>
<booktitle>In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment,</booktitle>
<pages>1--6</pages>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="16836" citStr="Marsi and Krahmer 2005" startWordPosition="2542" endWordPosition="2545">eference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extr</context>
<context position="18059" citStr="Marsi and Krahmer 2005" startWordPosition="2721" endWordPosition="2724">ction. Text-to-text generation applications rely heavily on paraphrase recognition. For a multi-document summarization system, detecting redundancy is a very important concern because two sentences from different documents may convey the same semantic content and it is important not to repeat the same information in the summary. On this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set of sentences by detecting paraphrastic parts and fusing them into a single coherent sentence. Recognizing similar semantic content is also critical for text simplification systems (Marsi and Krahmer 2005b). Information extraction enables the detection of regularities of information structure—events which are reported many times, about different individuals and in different forms—and making them explicit so that they can be processed and used in other ways. Sekine (2006) shows how to use paraphrase recognition to cluster together extraction patterns to improve the cohesion of the extracted information. Another recently proposed natural language processing task is that of recognizing textual entailment: A piece of text T is said to entail a hypothesis H if humans reading T will infer that H is </context>
</contexts>
<marker>Marsi, Krahmer, 2005</marker>
<rawString>Marsi, Erwin and Emiel Krahmer. 2005a. Classification of semantic relations by humans and machines. In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment, pages 1–6, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Erwin Marsi</author>
<author>Emiel Krahmer</author>
</authors>
<title>Explorations in sentence fusion.</title>
<date>2005</date>
<booktitle>In Proceedings of the European Workshop on Natural Language Generation,</booktitle>
<pages>109--117</pages>
<location>Aberdeen.</location>
<contexts>
<context position="16836" citStr="Marsi and Krahmer 2005" startWordPosition="2542" endWordPosition="2545">eference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extr</context>
<context position="18059" citStr="Marsi and Krahmer 2005" startWordPosition="2721" endWordPosition="2724">ction. Text-to-text generation applications rely heavily on paraphrase recognition. For a multi-document summarization system, detecting redundancy is a very important concern because two sentences from different documents may convey the same semantic content and it is important not to repeat the same information in the summary. On this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set of sentences by detecting paraphrastic parts and fusing them into a single coherent sentence. Recognizing similar semantic content is also critical for text simplification systems (Marsi and Krahmer 2005b). Information extraction enables the detection of regularities of information structure—events which are reported many times, about different individuals and in different forms—and making them explicit so that they can be processed and used in other ways. Sekine (2006) shows how to use paraphrase recognition to cluster together extraction patterns to improve the cohesion of the extracted information. Another recently proposed natural language processing task is that of recognizing textual entailment: A piece of text T is said to entail a hypothesis H if humans reading T will infer that H is </context>
</contexts>
<marker>Marsi, Krahmer, 2005</marker>
<rawString>Marsi, Erwin and Emiel Krahmer. 2005b. Explorations in sentence fusion. In Proceedings of the European Workshop on Natural Language Generation, pages 109–117, Aberdeen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aur´elien Max</author>
</authors>
<title>Local rephrasing suggestions for supporting the work of writers.</title>
<date>2008</date>
<booktitle>In Proceedings of GoTAL,</booktitle>
<pages>324--335</pages>
<contexts>
<context position="125362" citStr="Max (2008)" startWordPosition="19582" endWordPosition="19583">n specialized domains. For example, in the field of health literacy, it is well known that documents for health consumers are not very well-targeted to their purported audience. Recent research has shown how to generate a lexicon of semantically equivalent phrasal (and lexical) pairs of technical and lay medical terms from monolingual parallel corpora (Elhadad and Sutaria 2007) as well as monolingual comparable corpora (Del´eger and Zweigenbaum 2009). Examples include pairs such as (myocardial infarction, heart attack) and (leucospermia, increased white cells in the sperm). In another domain, Max (2008) proposes an adaptation of the pivot-based method to generate rephrasings of short text spans that could help a writer revise a text. Because the goal is to assist a writer in making revisions, the rephrasings do not always need to bear a perfect paraphrastic relationship to the original, a scenario suited for the pivot-based method. Several variants of such adaptations are developed that generate candidate rephrasings driven by fluency, semantic equivalence, and authoring value, respectively. We also believe that a large-scale annual community-wide evaluation should become a trend since it is</context>
</contexts>
<marker>Max, 2008</marker>
<rawString>Max, Aur´elien. 2008. Local rephrasing suggestions for supporting the work of writers. In Proceedings of GoTAL, pages 324–335, Gothenburg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kathleen R McKeown</author>
</authors>
<title>Paraphrasing using given and new information in a question-answer system.</title>
<date>1979</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>67--72</pages>
<location>San Diego, CA.</location>
<contexts>
<context position="7256" citStr="McKeown 1979" startWordPosition="1072" endWordPosition="1073">tic acquisition of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin</context>
</contexts>
<marker>McKeown, 1979</marker>
<rawString>McKeown, Kathleen R. 1979. Paraphrasing using given and new information in a question-answer system. In Proceedings of ACL, pages 67–72, San Diego, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dan Melamed</author>
</authors>
<title>Empirical Methods for Exploiting Parallel Texts.</title>
<date>2001</date>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<contexts>
<context position="46590" citStr="Melamed 2001" startWordPosition="7276" endWordPosition="7277">tracted paraphrases at the end of the final iteration represents the final output of the algorithm. In total, about 9, 000 phrasal (including lexical) paraphrases are extracted from 11 translations of five works of classic literature. Furthermore, the extracted paraphrase pairs are also generalized into about 25 patterns by extracting part-of-speech tag sequences corresponding to the tokens of the paraphrase pairs. Barzilay and McKeown also perform an interesting comparison with another technique that was originally developed for compiling translation lexicons from bilingual parallel corpora (Melamed 2001). This technique first compiles an initial lexicon using simple co-occurrence statistics and then uses a competitive linking algorithm (Melamed 1997) to improve the quality of the lexicon. The authors apply this technique to their monolingual parallel data and observe that the extracted paraphrase pairs are of much lower quality than the pairs extracted by their own method. We present similar observations in Section 3.5 and highlight that although more recent translation techniques— specifically ones that use phrases as units of translation—are better suited to the task of generating paraphras</context>
</contexts>
<marker>Melamed, 2001</marker>
<rawString>Melamed, Dan. 2001. Empirical Methods for Exploiting Parallel Texts. MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Dan Melamed</author>
</authors>
<title>A word-to-word model of translational equivalence.</title>
<date>1997</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>490--497</pages>
<location>Madrid.</location>
<contexts>
<context position="46739" citStr="Melamed 1997" startWordPosition="7296" endWordPosition="7297">) paraphrases are extracted from 11 translations of five works of classic literature. Furthermore, the extracted paraphrase pairs are also generalized into about 25 patterns by extracting part-of-speech tag sequences corresponding to the tokens of the paraphrase pairs. Barzilay and McKeown also perform an interesting comparison with another technique that was originally developed for compiling translation lexicons from bilingual parallel corpora (Melamed 2001). This technique first compiles an initial lexicon using simple co-occurrence statistics and then uses a competitive linking algorithm (Melamed 1997) to improve the quality of the lexicon. The authors apply this technique to their monolingual parallel data and observe that the extracted paraphrase pairs are of much lower quality than the pairs extracted by their own method. We present similar observations in Section 3.5 and highlight that although more recent translation techniques— specifically ones that use phrases as units of translation—are better suited to the task of generating paraphrases than the competitive linking approach, they continue to suffer from the same problem of low precision. On the other hand, such techniques can take</context>
</contexts>
<marker>Melamed, 1997</marker>
<rawString>Melamed, I. Dan. 1997. A word-to-word model of translational equivalence. In Proceedings of ACL, pages 490–497, Madrid.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Donald Metzler</author>
<author>Susan Dumais</author>
<author>Christopher Meek</author>
</authors>
<title>Similarity measures for short segments of text.</title>
<date>2007</date>
<booktitle>In Proceedings of the European Conference on Information Retrieval (ECIR),</booktitle>
<pages>16--27</pages>
<location>Rome.</location>
<marker>Metzler, Dumais, Meek, 2007</marker>
<rawString>Metzler, Donald, Susan Dumais, and Christopher Meek. 2007. Similarity measures for short segments of text. In Proceedings of the European Conference on Information Retrieval (ECIR), pages 16–27, Rome.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehryar Mohri</author>
<author>Michael Riley</author>
</authors>
<title>An efficient algorithm for the n-best-strings problem.</title>
<date>2002</date>
<booktitle>In Proceedings of the 7th International Conference on Spoken Language Processing (ICSLP’02),</booktitle>
<pages>1313--1316</pages>
<location>Denver, CO.</location>
<contexts>
<context position="61821" citStr="Mohri and Riley 2002" startWordPosition="9712" endWordPosition="9715">his is necessary to handle words from the sentence that do not occur anywhere in the set of paraphrases. Figure 6 shows an example lattice. Once the lattice has been constructed, it is straightforward to extract the 1-best paraphrase by using a dynamic programming algorithm such as Viterbi decoding and extracting the optimal path from the lattice as scored by the product of an n-gram language model and the replacement model. In addition, as with SMT decoding, it is also possible to extract a list of n-best paraphrases from the lattice by using the appropriate algorithms (Soong and Huang 1990; Mohri and Riley 2002). Quirk, Brockett, and Dolan (2004) borrow from the statistical machine translation literature so as to align phrasal equivalences as well as to utilize the aligned phrasal equivalences to rewrite new sentences. The biggest advantage of this method is its SMT inheritance: It is possible to produce multiple sentential paraphrases for any new Figure 6 A paraphrase generation lattice for the sentence He ate lunch at a cafe near Paris. Alternate paths between various nodes represent phrasal replacements. The probability values associated with each edge are not shown for the sake of clarity. 361 Co</context>
</contexts>
<marker>Mohri, Riley, 2002</marker>
<rawString>Mohri, Mehryar and Michael Riley. 2002. An efficient algorithm for the n-best-strings problem. In Proceedings of the 7th International Conference on Spoken Language Processing (ICSLP’02), pages 1313–1316, Denver, CO.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Akiko Murakami</author>
<author>Tetsuya Nasukawa</author>
</authors>
<title>Term aggregation: Mining synonymous expressions using personal stylistic variations.</title>
<date>2004</date>
<booktitle>In Proceedings of COLING,</booktitle>
<pages>806--812</pages>
<location>Geneva.</location>
<contexts>
<context position="7889" citStr="Murakami and Nasukawa 2004" startWordPosition="1164" endWordPosition="1167">1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the </context>
</contexts>
<marker>Murakami, Nasukawa, 2004</marker>
<rawString>Murakami, Akiko and Tetsuya Nasukawa. 2004. Term aggregation: Mining synonymous expressions using personal stylistic variations. In Proceedings of COLING, pages 806–812, Geneva.</rawString>
</citation>
<citation valid="true">
<authors>
<author>NIST</author>
</authors>
<title>NIST Open Machine Translation (MT) Evaluation. Information Access Division.</title>
<date>2009</date>
<note>http://www.nist.gov/ speech/tests/mt/.</note>
<contexts>
<context position="126326" citStr="NIST 2009" startWordPosition="19730" endWordPosition="19731">f such adaptations are developed that generate candidate rephrasings driven by fluency, semantic equivalence, and authoring value, respectively. We also believe that a large-scale annual community-wide evaluation should become a trend since it is required to foster further research in, and use of, paraphrase extraction and generation. Although there have been recent workshops and tasks on paraphrasing and entailment as discussed in Section 5, this evaluation would be much more focused, providing sets of shared guidelines and resources, in the spirit of the recent NIST MT Evaluation Workshops (NIST 2009). 7. Summary Over the last two decades, there has been much research on paraphrase extraction and generation within a number of research communities in natural language processing, in order to improve the specific application with which that community is concerned. However, a large portion of this research can be easily adapted for more widespread use outside its particular host and can provide significant benefits to the whole field. Only recently have there been serious efforts to conduct research on the topic of paraphrasing by treating it as an important natural language processing task in</context>
</contexts>
<marker>NIST, 2009</marker>
<rawString>NIST. 2009. NIST Open Machine Translation (MT) Evaluation. Information Access Division. http://www.nist.gov/ speech/tests/mt/.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Joakim Nivre</author>
<author>Johan Hall</author>
<author>Sandra K¨ubler</author>
<author>Ryan McDonald</author>
<author>Jens Nilsson</author>
<author>Sebastian Riedel</author>
<author>Deniz Yuret</author>
</authors>
<title>The CoNLL</title>
<date>2007</date>
<booktitle>In Proceedings of the CoNLL Shared Task Session of EMNLP-CoNLL 2007,</booktitle>
<pages>915--932</pages>
<location>Prague.</location>
<marker>Nivre, Hall, K¨ubler, McDonald, Nilsson, Riedel, Yuret, 2007</marker>
<rawString>Nivre, Joakim, Johan Hall, Sandra K¨ubler, Ryan McDonald, Jens Nilsson, Sebastian Riedel, and Deniz Yuret. 2007. The CoNLL 2007 shared task on dependency parsing. In Proceedings of the CoNLL Shared Task Session of EMNLP-CoNLL 2007, pages 915–932, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karolina Owczarzak</author>
<author>Declan Groves</author>
<author>Josef Van Genabith</author>
<author>Andy Way</author>
</authors>
<title>Contextual bitext-derived paraphrases in automatic MT evaluation.</title>
<date>2006</date>
<booktitle>In Proceedings on the Workshop on Statistical Machine Translation,</booktitle>
<pages>86--93</pages>
<location>New York, NY.</location>
<marker>Owczarzak, Groves, Van Genabith, Way, 2006</marker>
<rawString>Owczarzak, Karolina, Declan Groves, Josef Van Genabith, and Andy Way. 2006. Contextual bitext-derived paraphrases in automatic MT evaluation. In Proceedings on the Workshop on Statistical Machine Translation, pages 86–93, New York, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Kevin Knight</author>
<author>Daniel Marcu</author>
</authors>
<title>Syntax-based alignment of multiple translations: Extracting paraphrases and generating new sentences.</title>
<date>2003</date>
<booktitle>In Proceedings of HLT-NAACL,</booktitle>
<pages>102--109</pages>
<location>Edmonton.</location>
<marker>Pang, Knight, Marcu, 2003</marker>
<rawString>Pang, Bo, Kevin Knight, and Daniel Marcu. 2003. Syntax-based alignment of multiple translations: Extracting paraphrases and generating new sentences. In Proceedings of HLT-NAACL, pages 102–109, Edmonton.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Patrick Pantel</author>
<author>Rahul Bhagat</author>
<author>Bonaventura Coppola</author>
<author>Timothy Chklovski</author>
<author>Eduard Hovy</author>
</authors>
<title>ISP: Learning inferential selectional preferences.</title>
<date>2007</date>
<booktitle>In Proceedings of NAACL,</booktitle>
<pages>564--571</pages>
<location>Rochester, NY.</location>
<contexts>
<context position="36597" citStr="Pantel et al. 2007" startWordPosition="5690" endWordPosition="5693"> the root of the extracted path. For example, whereas verbs frequently tend to have several modifiers, nouns tend to have no more than one. However, if a word has any fewer than two modifiers, no path can go through it as the root. Therefore, the algorithm tends to perform better for paths with verbal roots. Another issue is that this algorithm, despite the use of more informative distributional features, can generate several incorrect or implausible paraphrase patterns (inference rules). Recent work has shown how to filter out incorrect inferences when using them in a downstream application (Pantel et al. 2007). Finally, there is no reason for the distributional features to be in the same language as the one in which the paraphrases are desired. Wu and Zhou (2003) describe a 5 A demo of the algorithm is available online at http://demo.patrickpantel.com/Content/LexSem/ paraphrase.htm. 352 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 2 (Lin and Pantel 2001). Produce inference rules from a parsed corpus. Summary. Adapt Harris’s (1954) hypothesis of distributional similarity for paths in dependency trees: If two tree paths have similar distributions such that they tend to lin</context>
</contexts>
<marker>Pantel, Bhagat, Coppola, Chklovski, Hovy, 2007</marker>
<rawString>Pantel, Patrick, Rahul Bhagat, Bonaventura Coppola, Timothy Chklovski, and Eduard Hovy. 2007. ISP: Learning inferential selectional preferences. In Proceedings of NAACL, pages 564–571, Rochester, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Papineni</author>
<author>S Roukos</author>
<author>T Ward</author>
<author>W-J Zhu</author>
</authors>
<title>BLEU: A method for automatic evaluation of machine translation.</title>
<date>2002</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>311--318</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="12748" citStr="Papineni et al. 2002" startWordPosition="1908" endWordPosition="1911">ubjects carry out the same 344 Madnani and Dorr Generating Phrasal and Sentential Paraphrases task for a given set of data and using the output so created as a reference against which to measure the performance of the system. The two applications where comparison against human-authored reference output has become the norm are machine translation and document summarization. In machine translation evaluation, the translation hypotheses output by a machine translation system are evaluated against reference translations created by human translators by measuring the n-gram overlap between the two (Papineni et al. 2002). However, it is impossible for a single reference translation to capture all possible verbalizations that can convey the same semantic content. This may unfairly penalize translation hypotheses that have the same meaning but use n-grams that are not present in the reference. For example, the given system output S will not have a high score against the reference R even though it conveys precisely the same semantic content: S: We must consider the entire community. R: We must bear in mind the community as a whole. One solution is to use multiple reference translations, which is expensive. An al</context>
</contexts>
<marker>Papineni, Roukos, Ward, Zhu, 2002</marker>
<rawString>Papineni, K., S. Roukos, T. Ward, and W.-J. Zhu. 2002. BLEU: A method for automatic evaluation of machine translation. In Proceedings of ACL, pages 311–318, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Marius Pas¸ca</author>
<author>P´eter Dienes</author>
</authors>
<title>Aligning needles in a haystack: Paraphrase acquisition across the Web. In</title>
<date>2005</date>
<booktitle>Proceedings of IJCNLP,</booktitle>
<pages>119--130</pages>
<location>Jeju Island.</location>
<marker>Pas¸ca, Dienes, 2005</marker>
<rawString>Pas¸ca, Marius and P´eter Dienes. 2005. Aligning needles in a haystack: Paraphrase acquisition across the Web. In Proceedings of IJCNLP, pages 119—130, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Fernando Pereira</author>
<author>Naftali Tishby</author>
<author>Lillian Lee</author>
</authors>
<title>Distributional clustering of English words.</title>
<date>1993</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>183--190</pages>
<location>Columbus, OH.</location>
<marker>Pereira, Tishby, Lee, 1993</marker>
<rawString>Pereira, Fernando, Naftali Tishby, and Lillian Lee. 1993. Distributional clustering of English words. In Proceedings of ACL, pages 183–190, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Richard Power</author>
<author>Donia Scott</author>
</authors>
<title>Automatic generation of large-scale paraphrases.</title>
<date>2005</date>
<booktitle>In Proceedings of the Third International Workshop on Paraphrasing,</booktitle>
<pages>57--64</pages>
<location>Jeju Island.</location>
<contexts>
<context position="8151" citStr="Power and Scott 2005" startWordPosition="1205" endWordPosition="1208">and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002). 1.3 Applications of Paraphrase Generation Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases. For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm. However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications. Also note that we only discuss those paraphrasing techniques</context>
</contexts>
<marker>Power, Scott, 2005</marker>
<rawString>Power, Richard and Donia Scott. 2005. Automatic generation of large-scale paraphrases. In Proceedings of the Third International Workshop on Paraphrasing, pages 57–64, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chris Quirk</author>
<author>Chris Brockett</author>
<author>William Dolan</author>
</authors>
<title>Monolingual machine translation for paraphrase generation.</title>
<date>2004</date>
<booktitle>In Proceedings of EMNLP,</booktitle>
<pages>142--149</pages>
<location>Barcelona.</location>
<marker>Quirk, Brockett, Dolan, 2004</marker>
<rawString>Quirk, Chris, Chris Brockett, and William Dolan. 2004. Monolingual machine translation for paraphrase generation. In Proceedings of EMNLP, pages 142–149, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lance Ramshaw</author>
<author>Mitch Marcus</author>
</authors>
<title>Text chunking using transformation-based learning.</title>
<date>1995</date>
<booktitle>In Proceedings of the Third Workshop on Very Large Corpora,</booktitle>
<pages>82--94</pages>
<location>Cambridge, MA.</location>
<contexts>
<context position="78360" citStr="Ramshaw and Marcus 1995" startWordPosition="12377" endWordPosition="12380">hen computing the alignment similarity score, two lexically matched words across a sentence pair are not considered to fully match unless their score on syntactic features also exceeds a preset threshold. The syntactic features constituting the additional constraints are defined in terms of the output of a chunk parser. Such a parser takes as input the syntactic trees of the sentences in a topic cluster and provides the following information for each word: • Part-of-speech tag • IOB tag. This is a notation denoting the constituent covering a word and its relative position in that constituent (Ramshaw and Marcus 1995). If a word has the tag I-NP, we can infer that the word is covered by an NP and located inside that NP. Similarly, B denotes that the word is at the beginning and O denotes that the word is not covered by any constituent. • IOB chain. A concatenation of all IOB tags going from the root of the tree to the word under consideration. With this information and a heuristic to compute the similarity between two words in terms of their POS and IOB tags, the alignment similarity score can be calculated as the sum of the heuristic similarity value for the given two words and the heuristic similarity va</context>
</contexts>
<marker>Ramshaw, Marcus, 1995</marker>
<rawString>Ramshaw, Lance and Mitch Marcus. 1995. Text chunking using transformation-based learning. In Proceedings of the Third Workshop on Very Large Corpora, pages 82–94, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Deepak Ravichandran</author>
<author>Eduard Hovy</author>
</authors>
<title>Learning surface text patterns for a question answering system.</title>
<date>2002</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>41--47</pages>
<location>Philadelphia, PA.</location>
<contexts>
<context position="10671" citStr="Ravichandran and Hovy (2002)" startWordPosition="1577" endWordPosition="1580">rate similar or related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006; Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system. For example, for the INVENTOR question type, they generate: Original : X was invented by Y Variant 1 : Y’s invention of X Variant 2 : Y, inventor of X Riezler et al. (2007) expand a query by generating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query ho</context>
</contexts>
<marker>Ravichandran, Hovy, 2002</marker>
<rawString>Ravichandran, Deepak and Eduard Hovy. 2002. Learning surface text patterns for a question answering system. In Proceedings of ACL, pages 41–47, Philadelphia, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Deepak Ravichandran</author>
<author>Patrick Pantel</author>
<author>Eduard H Hovy</author>
</authors>
<title>Randomized algorithms and NLP: Using locality sensitive hash function for high speed noun clustering.</title>
<date>2005</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>622--629</pages>
<location>Ann Arbor, MI.</location>
<marker>Ravichandran, Pantel, Hovy, 2005</marker>
<rawString>Ravichandran, Deepak, Patrick Pantel, and Eduard H. Hovy. 2005. Randomized algorithms and NLP: Using locality sensitive hash function for high speed noun clustering. In Proceedings of ACL, pages 622–629, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Stefan Riezler</author>
<author>Alexander Vasserman</author>
<author>Ioannis Tsochantaridis</author>
<author>Vibhu O Mittal</author>
<author>Yi Liu</author>
</authors>
<title>Statistical machine translation for query expansion in answer retrieval.</title>
<date>2007</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>464--471</pages>
<location>Prague.</location>
<contexts>
<context position="10994" citStr="Riezler et al. (2007)" startWordPosition="1633" endWordPosition="1636">mine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system. For example, for the INVENTOR question type, they generate: Original : X was invented by Y Variant 1 : Y’s invention of X Variant 2 : Y, inventor of X Riezler et al. (2007) expand a query by generating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of </context>
</contexts>
<marker>Riezler, Vasserman, Tsochantaridis, Mittal, Liu, 2007</marker>
<rawString>Riezler, Stefan, Alexander Vasserman, Ioannis Tsochantaridis, Vibhu O. Mittal, and Yi Liu. 2007. Statistical machine translation for query expansion in answer retrieval. In Proceedings of ACL, pages 464–471, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Lorenza Romano</author>
<author>Milen Kouylekov</author>
<author>Idan Szpektor</author>
<author>Ido Dagan</author>
<author>Alberto Lavelli</author>
</authors>
<title>Investigating a generic paraphrase-based approach for relation extraction.</title>
<date>2006</date>
<booktitle>In Proceedings of EACL,</booktitle>
<pages>409--416</pages>
<location>Trento.</location>
<contexts>
<context position="11634" citStr="Romano et al. 2006" startWordPosition="1739" endWordPosition="1742">nerating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of relation extraction (Romano et al. 2006). Most recently, Bhagat and Ravichandran (2008) collect paraphrastic patterns for relation extraction by applying semi-supervised paraphrase induction to a very large monolingual corpus. For example, for the relation of “acquisition,” they collect: Original : X agreed to buy Y Variant 1 : X completed its acquisition of Y Variant 2 : X purchased Y 1.3.2 Expanding Sparse Human Reference Data for Evaluation. A large percentage of NLP applications are evaluated by having human annotators or subjects carry out the same 344 Madnani and Dorr Generating Phrasal and Sentential Paraphrases task for a gi</context>
</contexts>
<marker>Romano, Kouylekov, Szpektor, Dagan, Lavelli, 2006</marker>
<rawString>Romano, Lorenza, Milen Kouylekov, Idan Szpektor, Ido Dagan, and Alberto Lavelli. 2006. Investigating a generic paraphrase-based approach for relation extraction. In Proceedings of EACL, pages 409–416, Trento.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Vasile Rus</author>
<author>Philip M McCarthy</author>
<author>Mihai C Lintean</author>
</authors>
<title>Paraphrase identification with lexico-syntactic graph subsumption.</title>
<date>2008</date>
<booktitle>In Proceedings of the 21st International FLAIRS Conference,</booktitle>
<pages>201--206</pages>
<location>Coconut Grove, FL.</location>
<marker>Rus, McCarthy, Lintean, 2008</marker>
<rawString>Rus, Vasile, Philip M. McCarthy, and Mihai C. Lintean. 2008. Paraphrase identification with lexico-syntactic graph subsumption. In Proceedings of the 21st International FLAIRS Conference, pages 201–206, Coconut Grove, FL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mehran Sahami</author>
<author>Timothy D Heilman</author>
</authors>
<title>A Web-based kernel function for measuring the similarity of short text snippets.</title>
<date>2006</date>
<booktitle>In Proceedings of the World Wide Web Conference,</booktitle>
<pages>377--386</pages>
<location>Edinburgh.</location>
<marker>Sahami, Heilman, 2006</marker>
<rawString>Sahami, Mehran and Timothy D. Heilman. 2006. A Web-based kernel function for measuring the similarity of short text snippets. In Proceedings of the World Wide Web Conference, pages 377–386, Edinburgh.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Satoshi Sekine</author>
</authors>
<title>Automatic paraphrase discovery based on context and keywords between NE pairs.</title>
<date>2005</date>
<booktitle>In Proceedings of the International Workshop on Paraphrasing,</booktitle>
<pages>80--87</pages>
<location>Jeju Island, South</location>
<contexts>
<context position="67595" citStr="Sekine (2005)" startWordPosition="10599" endWordPosition="10600">ld), again based on the named entities they share. 5. For each pair of similar sentences, compare their respective attached patterns. If the variables in the patterns link to the same or comparable named entities (based on the entity text and type), then consider the patterns to be paraphrases of each other. At the end, the output is a list of generalized paraphrase patterns with named entity types as variables. For example, the algorithm may generate the following two patterns as paraphrases: (PERSON) is promoted to (POST) the promotion of (PERSON) to (POST) is decided As a later refinement, Sekine (2005) makes a similar attempt at using distributional similarity over named entity pairs in order to produce a list of fully lexicalized phrasal paraphrases for specific concepts represented by keywords. The idea of enlisting named entities as proxies for detecting semantic equivalence is interesting and has certainly been explored before (see the discussion regarding Pas¸ca and Dienes [2005] in Section 3.2). However, it has some obvious disadvantages. The authors manually evaluate the technique by generating paraphrases for two specific 8 Although the authors provide motivating examples in Japanes</context>
</contexts>
<marker>Sekine, 2005</marker>
<rawString>Sekine, Satoshi. 2005. Automatic paraphrase discovery based on context and keywords between NE pairs. In Proceedings of the International Workshop on Paraphrasing, pages 80–87, Jeju Island, South Korea.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Satoshi Sekine</author>
</authors>
<title>On-demand information extraction.</title>
<date>2006</date>
<booktitle>In Proceedings of COLING-ACL,</booktitle>
<pages>731--738</pages>
<location>Sydney.</location>
<contexts>
<context position="18330" citStr="Sekine (2006)" startWordPosition="2761" endWordPosition="2762">not to repeat the same information in the summary. On this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set of sentences by detecting paraphrastic parts and fusing them into a single coherent sentence. Recognizing similar semantic content is also critical for text simplification systems (Marsi and Krahmer 2005b). Information extraction enables the detection of regularities of information structure—events which are reported many times, about different individuals and in different forms—and making them explicit so that they can be processed and used in other ways. Sekine (2006) shows how to use paraphrase recognition to cluster together extraction patterns to improve the cohesion of the extracted information. Another recently proposed natural language processing task is that of recognizing textual entailment: A piece of text T is said to entail a hypothesis H if humans reading T will infer that H is most likely true. The observant reader will notice that, in this sense, the task of paraphrase recognition can simply be formulated as bidirectional entailment recognition. The task of recognizing entailment is an application-independent task and has important ramificati</context>
</contexts>
<marker>Sekine, 2006</marker>
<rawString>Sekine, Satoshi. 2006. On-demand information extraction. In Proceedings of COLING-ACL, pages 731–738, Sydney.</rawString>
</citation>
<citation valid="true">
<date>2007</date>
<booktitle>Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing. Association for Computational Linguistics,</booktitle>
<editor>Sekine, Satoshi, Kentaro Inui, Ido Dagan, Bill Dolan, Danilo Giampiccolo, and Bernardo Magnini, editors.</editor>
<location>Prague.</location>
<contexts>
<context position="10994" citStr="(2007)" startWordPosition="1636" endWordPosition="1636">imilarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system. For example, for the INVENTOR question type, they generate: Original : X was invented by Y Variant 1 : Y’s invention of X Variant 2 : Y, inventor of X Riezler et al. (2007) expand a query by generating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms. For example, for the query how to live with cat allergies, they may generate the following two paraphrases. The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: P1 : ways to live with feline allergy P2 : how to deal with cat allergens Finally, paraphrases have also been used to improve the task of </context>
<context position="114259" citStr="(2007)" startWordPosition="17922" endWordPosition="17922">e, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003). A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008). Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others. Szpektor, Shnarch, and Dagan (2007) posit a similar form of evaluation for textual entailment wherein the human judges are not only presented with the entailment rule but also with a sample of sentences that match its left-hand side (called instances), and then asked to assess whether the rule holds under each specific instance. Sentential paraphrases may be evaluated in a similar fashion without the need for any surrounding context (Quirk, Brockett, and Dolan 2004). An intrinsic</context>
<context position="123103" citStr="(2007)" startWordPosition="19249" endWordPosition="19249">nits are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007). A manual inspection reveals that using multiple sources of information yields paraphrases with much higher accuracy. We believe that such exploitation of multiple types of resources and their combinations is an important development. Zhao et al. (2009) further increase the utility of this combination approach by incorporating application specific constraints on the pivoted paraphrases. For example, if the output paraphrases need to be simplified versions of the input sentences, then only those phrasal paraphrase pairs are used where the output is shorter than the input. 380 Madnani and Dorr </context>
</contexts>
<marker>2007</marker>
<rawString>Sekine, Satoshi, Kentaro Inui, Ido Dagan, Bill Dolan, Danilo Giampiccolo, and Bernardo Magnini, editors. 2007. Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing. Association for Computational Linguistics, Prague.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Siwei Shen</author>
<author>Dragomir R Radev</author>
<author>Agam Patel</author>
<author>G¨unes¸ Erkan</author>
</authors>
<title>Adding syntax to dynamic programming for aligning comparable texts for the generation of paraphrases.</title>
<date>2006</date>
<booktitle>In Proceedings of ACL-COLING,</booktitle>
<pages>747--754</pages>
<location>Sydney.</location>
<contexts>
<context position="76887" citStr="Shen et al. (2006)" startWordPosition="12146" endWordPosition="12149">gram similarities (sets of shared overlapping word sequences) between a large number of sentences. However, the two approaches are also different in that Pang, Knight, and Marcu use the parse trees of all sentences in a cluster to compute the alignment (and build the lattice), whereas Barzilay and Lee use only surface level information. Furthermore, Barzilay and Lee can use their slotted lattice pairs to generate paraphrases for novel and unseen sentences, whereas Pang, Knight, and Marcu cannot paraphrase new sentences at all. 366 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Shen et al. (2006) attempt to improve Barzilay and Lee’s technique by trying to include syntactic constraints in the cluster alignment algorithm. In that way, it is doing something similar to what Pang, Knight, and Marcu do but with a comparable corpus instead of a parallel one. More precisely, whereas Barzilay and Lee use a relatively simple alignment scoring function based on purely lexical features, Shen et al. try to bring syntactic features into the mix. The motivation is to constrain the relatively free nature of the alignment generated by the MSA algorithm—which may lead to the generation of grammaticall</context>
<context position="79364" citStr="Shen et al. (2006)" startWordPosition="12556" endWordPosition="12559">similarity between two words in terms of their POS and IOB tags, the alignment similarity score can be calculated as the sum of the heuristic similarity value for the given two words and the heuristic similarity values for each corresponding node in the two IOB chains. If this score is higher than some threshold and the two words have similar positions in their respective sentences, then the words are considered to be a match and can be aligned. Given this alignment algorithm, the word lattice representing the global alignment is constructed in an iterative manner similar to the MSA approach. Shen et al. (2006) present evidence from a manual evaluation that sentences sampled from lattices constructed via the syntactically informed alignment method receive higher grammaticality scores as compared to sentences from the lattices constructed via the purely lexical method. However, they present no analysis of the actual paraphrasing capacity of their, presumably better aligned, lattices. Indeed, they explicitly mention that their primary goal is to measure the correlation between the syntax-augmented scoring function and the correctness of the sentences being generated from such lattices, even if the sen</context>
</contexts>
<marker>Shen, Radev, Patel, Erkan, 2006</marker>
<rawString>Shen, Siwei, Dragomir R. Radev, Agam Patel, and G¨unes¸ Erkan. 2006. Adding syntax to dynamic programming for aligning comparable texts for the generation of paraphrases. In Proceedings of ACL-COLING, pages 747–754, Sydney.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Xiaodong Shi</author>
<author>Christopher C Yang</author>
</authors>
<title>Mining related queries from Web search engine query logs using an improved association rule mining model.</title>
<date>2007</date>
<journal>JASIST,</journal>
<volume>58</volume>
<issue>12</issue>
<contexts>
<context position="10197" citStr="Shi and Yang 2007" startWordPosition="1513" endWordPosition="1516"> contexts can be thought of as the most common instance of employing distributional similarity. The concept of distributional similarity also turns out to be quite important for phrasal paraphrase generation and is discussed in more detail in Section 3.1. 343 Computational Linguistics Volume 36, Number 3 In fact, in recent years, the information retrieval community has extensively explored the task of query expansion by applying paraphrasing techniques to generate similar or related queries (Beeferman and Berger 2000; Jones et al. 2006; Sahami and Hellman 2006; Metzler, Dumais, and Meek 2007; Shi and Yang 2007). The generation of paraphrases in these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity. Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain. For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain qu</context>
</contexts>
<marker>Shi, Yang, 2007</marker>
<rawString>Shi, Xiaodong and Christopher C. Yang. 2007. Mining related queries from Web search engine query logs using an improved association rule mining model. JASIST, 58(12):1871–1883.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitsuo Shimohata</author>
<author>Eiichiro Sumita</author>
</authors>
<title>Acquiring synonyms from monolingual comparable texts.</title>
<date>2005</date>
<booktitle>In Proceedings of IJCNLP,</booktitle>
<pages>233--244</pages>
<location>Jeju Island.</location>
<contexts>
<context position="7646" citStr="Shimohata and Sumita 2005" startWordPosition="1131" endWordPosition="1134">urvey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006). Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005). Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 20</context>
</contexts>
<marker>Shimohata, Sumita, 2005</marker>
<rawString>Shimohata, Mitsuo and Eiichiro Sumita. 2005. Acquiring synonyms from monolingual comparable texts. In Proceedings of IJCNLP, pages 233–244, Jeju Island.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Shinyama</author>
<author>S Sekine</author>
<author>K Sudo</author>
<author>R Grishman</author>
</authors>
<title>Automatic paraphrase acquisition from news articles.</title>
<date>2002</date>
<booktitle>In Proceedings of HLT,</booktitle>
<pages>313--318</pages>
<location>San Diego, CA.</location>
<contexts>
<context position="65295" citStr="Shinyama et al. (2002)" startWordPosition="10228" endWordPosition="10231">es from such comparable corpora. The first method falls under category (a): Here the elements whose distributional similarity is being measured are paraphrastic patterns and the distributions themselves are the named entities with which the elements occur in various sentences. In contrast, the next two methods fall under category (b) and attempt to directly discover correspondences between two comparable corpora by leveraging a novel alignment algorithm combined with some similarity heuristics. The difference between the two latter methods lies only in the efficacy of the alignment algorithm. Shinyama et al. (2002) use two sets of 300 news articles from two different Japanese newspapers from the same day as their source of paraphrases. The comparable nature of the articles is ensured because both sets are from the same day. During pre-processing, 7 However, if no word in the input sentence has been observed in the parallel corpus, the paraphraser simply reproduces the original sentence as the paraphrase. 362 Madnani and Dorr Generating Phrasal and Sentential Paraphrases all named entities in each article are tagged and dependency parses are created for each sentence in each article. The distributional s</context>
</contexts>
<marker>Shinyama, Sekine, Sudo, Grishman, 2002</marker>
<rawString>Shinyama, Y., S. Sekine, K. Sudo, and R. Grishman. 2002. Automatic paraphrase acquisition from news articles. In Proceedings of HLT, pages 313–318, San Diego, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Frank K Soong</author>
<author>Eng-Fong Huang</author>
</authors>
<title>A tree-trellis based fast search for finding the n-best sentence hypotheses in continuous speech recognition.</title>
<date>1990</date>
<booktitle>In Proceedings of the HLT workshop on Speech and Natural Language,</booktitle>
<pages>12--19</pages>
<location>Hidden Valley, PA.</location>
<contexts>
<context position="61798" citStr="Soong and Huang 1990" startWordPosition="9708" endWordPosition="9711">sj and a constant u. This is necessary to handle words from the sentence that do not occur anywhere in the set of paraphrases. Figure 6 shows an example lattice. Once the lattice has been constructed, it is straightforward to extract the 1-best paraphrase by using a dynamic programming algorithm such as Viterbi decoding and extracting the optimal path from the lattice as scored by the product of an n-gram language model and the replacement model. In addition, as with SMT decoding, it is also possible to extract a list of n-best paraphrases from the lattice by using the appropriate algorithms (Soong and Huang 1990; Mohri and Riley 2002). Quirk, Brockett, and Dolan (2004) borrow from the statistical machine translation literature so as to align phrasal equivalences as well as to utilize the aligned phrasal equivalences to rewrite new sentences. The biggest advantage of this method is its SMT inheritance: It is possible to produce multiple sentential paraphrases for any new Figure 6 A paraphrase generation lattice for the sentence He ate lunch at a cafe near Paris. Alternate paths between various nodes represent phrasal replacements. The probability values associated with each edge are not shown for the </context>
</contexts>
<marker>Soong, Huang, 1990</marker>
<rawString>Soong, Frank K. and Eng-Fong Huang. 1990. A tree-trellis based fast search for finding the n-best sentence hypotheses in continuous speech recognition. In Proceedings of the HLT workshop on Speech and Natural Language, pages 12–19, Hidden Valley, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Karen Sp¨arck-Jones</author>
<author>J I Tait</author>
</authors>
<title>Automatic search term variant generation.</title>
<date>1984</date>
<journal>Journal of Documentation,</journal>
<volume>40</volume>
<issue>1</issue>
<marker>Sp¨arck-Jones, Tait, 1984</marker>
<rawString>Sp¨arck-Jones, Karen and J. I. Tait. 1984. Automatic search term variant generation. Journal of Documentation, 40(1):50–66.</rawString>
</citation>
<citation valid="true">
<date>1996</date>
<booktitle>Surface Structure and Interpretation (Linguistic Inquiry Monograph No. 30).</booktitle>
<editor>Steedman, Mark, editor.</editor>
<publisher>MIT Press,</publisher>
<location>Cambridge, MA.</location>
<marker>1996</marker>
<rawString>Steedman, Mark, editor. 1996. Surface Structure and Interpretation (Linguistic Inquiry Monograph No. 30). MIT Press, Cambridge, MA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Idan Szpektor</author>
<author>Eyal Shnarch</author>
<author>Ido Dagan</author>
</authors>
<title>Instance-based evaluation of entailment rule acquisition.</title>
<date>2007</date>
<booktitle>In Proceedings of ACL,</booktitle>
<pages>456--463</pages>
<location>Prague.</location>
<marker>Szpektor, Shnarch, Dagan, 2007</marker>
<rawString>Szpektor, Idan, Eyal Shnarch, and Ido Dagan. 2007. Instance-based evaluation of entailment rule acquisition. In Proceedings of ACL, pages 456–463, Prague.</rawString>
</citation>
<citation valid="true">
<date>2004</date>
<booktitle>Proceedings of the Workshop on Multiword Expressions: Integrating Processing. Association for Computational Linguistics,</booktitle>
<editor>Tanaka, Takaaki, Aline Villavicencio, Francis Bond, and Anna Korhonen, editors.</editor>
<location>Barcelona.</location>
<contexts>
<context position="55809" citStr="(2004)" startWordPosition="8700" endWordPosition="8700">ations. Finally, an even more direct method to align equivalences in parallel sentence pairs can be effected by building on word alignment techniques from the field of statistical machine translation (Brown et al. 1990). Current state-of-the-art SMT methods rely on unsupervised induction of word alignment between two bilingual parallel sentences to extract translation equivalences that can then be used to translate a given sentence in one language into another language. The same methods can be applied to monolingual parallel sentences without any loss of generality. Quirk, Brockett, and Dolan (2004) use one such method to extract phrasal paraphrase pairs. Furthermore, they use these extracted phrasal pairs to construct sentential paraphrases for new sentences. Mathematically, Quirk, Brockett, and Dolan’s approach to sentential paraphrase generation may be expressed in terms of the typical channel model equation for statistical machine translation: E* = arg max P(Ep|E) (1) p Ep The equation denotes the search for the optimal paraphrase Ep for a given sentence E. We may use Bayes’ Theorem to rewrite this as: E* = arg max P(Ep) P(E|Ep) p Ep where P(Ep) is an n-gram language model providing </context>
<context position="58301" citStr="(2004)" startWordPosition="9092" endWordPosition="9092">here E1 = e11e21 ... em1 , E2 = e12e22 ... en2. The following examples show that the proposed method can work well: S1: In only 14 days, U.S. researchers have created an artificial bacteria-eating virus from synthetic genes. S2: An artificial bacteria-eating virus has been made from synthetic genes in the record time of just two weeks. S1: The largest gains were seen in prices, new orders, inventories, and exports. S2: Sub-indexes measuring prices, new orders, inventories, and exports increased. For more details on the creation of this corpus, we refer the reader to Dolan, Quirk, and Brockett (2004) and, more specifically, to Section 4. Algorithm 3 shows how to Algorithm 3 (Quirk, Dolan, and Brockett 2004). Generate a set M of phrasal paraphrases with associated likelihood values from a monolingual parallel corpus C. Summary. Estimate a simple English to English phrase translation model from C using word alignments. Use this model to create sentential paraphrases as explained later. 1: M ← {φ} 2: Compute lexical replacement probabilities P(e1|e2) from all sentence pairs in C via IBM Model 1 estimation 3: Compute a set of word alignments {a} such that for each sentence pair (E1, E2) a = a</context>
<context position="61856" citStr="(2004)" startWordPosition="9720" endWordPosition="9720"> that do not occur anywhere in the set of paraphrases. Figure 6 shows an example lattice. Once the lattice has been constructed, it is straightforward to extract the 1-best paraphrase by using a dynamic programming algorithm such as Viterbi decoding and extracting the optimal path from the lattice as scored by the product of an n-gram language model and the replacement model. In addition, as with SMT decoding, it is also possible to extract a list of n-best paraphrases from the lattice by using the appropriate algorithms (Soong and Huang 1990; Mohri and Riley 2002). Quirk, Brockett, and Dolan (2004) borrow from the statistical machine translation literature so as to align phrasal equivalences as well as to utilize the aligned phrasal equivalences to rewrite new sentences. The biggest advantage of this method is its SMT inheritance: It is possible to produce multiple sentential paraphrases for any new Figure 6 A paraphrase generation lattice for the sentence He ate lunch at a cafe near Paris. Alternate paths between various nodes represent phrasal replacements. The probability values associated with each edge are not shown for the sake of clarity. 361 Computational Linguistics Volume 36, </context>
<context position="96480" citStr="(2004)" startWordPosition="15191" endWordPosition="15191">y given sentence by using this model along with an n-gram language model and a regular SMT decoder to paraphrase (or monolingually translate) any sentence just as one would translate bilingually. The primary advantage of this approach is the ability to produce good quality sentential paraphrases by leveraging the SMT machinery to address the noise issue. However, although the decoder and the language model do serve to counter the noisy word alignment process, they do so only to a degree and not entirely. Again, we must draw a connection between this work and that of Quirk, Brockett, and Dolan (2004) (discussed in Section 3.3) because both treat paraphrasing as monolingual translation. However, as outlined in the discussion of that work, Quirk, Brockett, and Dolan use a relatively simplistic translation model and decoder which leads to paraphrases with little or no lexical variety. In contrast, Madnani et al. use a more complex translation model and an unmodified state-of-the-art SMT decoder to produce paraphrases that are much more diverse. Of course, the reliance of the latter approach on automatic word alignments does inevitably lead to much noisier sentential paraphrases than those pr</context>
<context position="117986" citStr="(2004)" startWordPosition="18495" endWordPosition="18495"> phrases extracted via the automatic alignments induced using the paraphrase method P that is to be evaluated. The phrase extraction heuristic used to compute NP and NM from the respective alignments is the same as that employed by Bannard and Callison-Burch (2005) and illustrated in Figure 8. Although using alignments as the basis for computing precision and recall is a clever trick, it does require that the paraphrase generation method be capable of producing alignments between sentence pairs. For example, the methods proposed by Pang, Knight, and Marcu (2003) and Quirk, Brockett, and Dolan (2004) for generating sentential paraphrases from monolingual parallel corpora and described in Section 3.3 do produce alignments as part of their respective algorithms. Indeed, Callison-Burch et al. provide a comparison of their pivot-based approach—operating on bilingual parallel corpora—with the two monolingual approaches just mentioned in terms of ParaMetric, since all three methods are capable of producing alignments. However, for other approaches that do not necessarily operate at the level of sentences and cannot produce any alignments, falling back on estimates of traditional formulations of</context>
</contexts>
<marker>2004</marker>
<rawString>Tanaka, Takaaki, Aline Villavicencio, Francis Bond, and Anna Korhonen, editors. 2004. Proceedings of the Workshop on Multiword Expressions: Integrating Processing. Association for Computational Linguistics, Barcelona.</rawString>
</citation>
<citation valid="true">
<authors>
<author>¨Ozlem Uzuner</author>
<author>Boris Katz</author>
</authors>
<title>Capturing expression using linguistic information.</title>
<date>2005</date>
<booktitle>In Proceedings of AAAI,</booktitle>
<pages>1124--1129</pages>
<location>Pittsburgh, PA.</location>
<contexts>
<context position="16652" citStr="Uzuner and Katz 2005" startWordPosition="2510" endWordPosition="2513">ch a process, most such data sets usually have only a single reference translation. Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely</context>
</contexts>
<marker>Uzuner, Katz, 2005</marker>
<rawString>Uzuner, ¨Ozlem and Boris Katz. 2005. Capturing expression using linguistic information. In Proceedings of AAAI, pages 1124–1129, Pittsburgh, PA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Peter Wallis</author>
</authors>
<title>Information retrieval based on paraphrase.</title>
<date>1993</date>
<booktitle>In Proceedings of the 3rd Conference of the Pacific Association for Computational Linguistics (PACLING),</booktitle>
<pages>118--126</pages>
<location>Vancouver.</location>
<contexts>
<context position="7160" citStr="Wallis 1993" startWordPosition="1056" endWordPosition="1057">e scope of our discussion. In this survey, we will be restricting our discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases. More specifically, this entails the exclusion of certain categories of paraphrasing work. However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey. For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al. 2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005). We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just f</context>
</contexts>
<marker>Wallis, 1993</marker>
<rawString>Wallis, Peter. 1993. Information retrieval based on paraphrase. In Proceedings of the 3rd Conference of the Pacific Association for Computational Linguistics (PACLING), pages 118–126, Vancouver.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Dekai Wu</author>
</authors>
<title>Recognizing paraphrases and textual entailment using inversion transduction grammars.</title>
<date>2005</date>
<booktitle>In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment,</booktitle>
<pages>25--30</pages>
<location>Ann Arbor, MI.</location>
<contexts>
<context position="16846" citStr="Wu 2005" startWordPosition="2546" endWordPosition="2547"> such sets so that the machine translation system can learn a better set of system parameters. 2. Paraphrase Recognition and Textual Entailment A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005). A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009). Both of these task formulations fall under the category of paraphrase detection or recognition. The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task. In general, paraphrase recognition can be very helpful for several NLP applications. Two examples of such applications are text-to-text generation and information extraction. Te</context>
</contexts>
<marker>Wu, 2005</marker>
<rawString>Wu, Dekai. 2005. Recognizing paraphrases and textual entailment using inversion transduction grammars. In Proceedings of the ACL Workshop on Empirical Modeling of Semantic Equivalence and Entailment, pages 25–30, Ann Arbor, MI.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Hua Wu</author>
<author>Ming Zhou</author>
</authors>
<title>Synonymous collocation extraction using translation information.</title>
<date>2003</date>
<booktitle>In Proceedings of the ACL Workshop on Multiword Expressions: Integrating Processing,</booktitle>
<pages>120--127</pages>
<location>Sapporo.</location>
<contexts>
<context position="36753" citStr="Wu and Zhou (2003)" startWordPosition="5718" endWordPosition="5721">d has any fewer than two modifiers, no path can go through it as the root. Therefore, the algorithm tends to perform better for paths with verbal roots. Another issue is that this algorithm, despite the use of more informative distributional features, can generate several incorrect or implausible paraphrase patterns (inference rules). Recent work has shown how to filter out incorrect inferences when using them in a downstream application (Pantel et al. 2007). Finally, there is no reason for the distributional features to be in the same language as the one in which the paraphrases are desired. Wu and Zhou (2003) describe a 5 A demo of the algorithm is available online at http://demo.patrickpantel.com/Content/LexSem/ paraphrase.htm. 352 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Algorithm 2 (Lin and Pantel 2001). Produce inference rules from a parsed corpus. Summary. Adapt Harris’s (1954) hypothesis of distributional similarity for paths in dependency trees: If two tree paths have similar distributions such that they tend to link the same set of words, then they likely mean the same thing and together generate an inference rule. 1: Extract paths of the form described above from the</context>
<context position="89416" citStr="Wu and Zhou (2003)" startWordPosition="14115" endWordPosition="14118">withdrew). Besides there being obvious linguistic differences between Arabic and English, the primary reason for the generation of phrase pairs that lie in categories (a) and (b) is incorrectly induced alignments between the English and Arabic words, and hence, phrases. Therefore, a good portion of subsequent work on paraphrasing using bilingual corpora, as discussed below focuses on using additional machinery or evidence to cope with the noisy alignment process. Before we continue, we believe it would be useful to draw a connection between Bannard and Callison-Burch’s (2005) work and that of Wu and Zhou (2003) as discussed in Section 3.2. Note that both of these techniques rely on a secondary language to provide the cues for generating paraphrases in the primary language. However, Wu and Zhou rely on a pre-compiled bilingual dictionary to discover these cues whereas Bannard and Callison-Burch have an entirely datadriven discovery process. In an attempt to address some of the noisy alignment issues, Callison-Burch (2008) recently proposed an improvement that places an additional syntactic constraint on the phrasal paraphrases extracted via the pivot-based method from bilingual corpora and showed tha</context>
</contexts>
<marker>Wu, Zhou, 2003</marker>
<rawString>Wu, Hua and Ming Zhou. 2003. Synonymous collocation extraction using translation information. In Proceedings of the ACL Workshop on Multiword Expressions: Integrating Processing, pages 120–127, Sapporo.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shiqi Zhao</author>
<author>Xiang Lan</author>
<author>Ting Liu</author>
<author>Sheng Li</author>
</authors>
<title>Application-driven statistical paraphrase generation.</title>
<date>2009</date>
<booktitle>In Proceedings of ACL/AFNLP,</booktitle>
<pages>834--842</pages>
<contexts>
<context position="123357" citStr="Zhao et al. (2009)" startWordPosition="19283" endWordPosition="19286">ries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007). A manual inspection reveals that using multiple sources of information yields paraphrases with much higher accuracy. We believe that such exploitation of multiple types of resources and their combinations is an important development. Zhao et al. (2009) further increase the utility of this combination approach by incorporating application specific constraints on the pivoted paraphrases. For example, if the output paraphrases need to be simplified versions of the input sentences, then only those phrasal paraphrase pairs are used where the output is shorter than the input. 380 Madnani and Dorr Generating Phrasal and Sentential Paraphrases Use of SMT Machinery. In theory, statistical machine translation is very closely related to paraphrase generation since the former also relies on finding semantic equivalence, albeit in a second language. Hen</context>
</contexts>
<marker>Zhao, Lan, Liu, Li, 2009</marker>
<rawString>Zhao, Shiqi, Xiang Lan, Ting Liu, and Sheng Li. 2009. Application-driven statistical paraphrase generation. In Proceedings of ACL/AFNLP, pages 834–842, Singapore.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Shiqi Zhao</author>
<author>Cheng Niu</author>
<author>Ming Zhou</author>
<author>Ting Liu</author>
<author>Sheng Li</author>
</authors>
<title>Combining multiple resources to improve SMT-based paraphrasing model.</title>
<date>2008</date>
<booktitle>In Proceedings of ACL-08: HLT,</booktitle>
<pages>1021--1029</pages>
<location>Columbus, OH.</location>
<contexts>
<context position="122551" citStr="Zhao et al. (2008)" startWordPosition="19163" endWordPosition="19166">fluence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof. For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the Web for snippets related to the pairs and using them as features to compute the pair’s paraphrasability. Combining Multiple Sources of Information. Another important trend in paraphrase generation is that of leveraging multiple sources of information to determine whether two units are paraphrastic. For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus. Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007). A manual inspection reveals that using multipl</context>
</contexts>
<marker>Zhao, Niu, Zhou, Liu, Li, 2008</marker>
<rawString>Zhao, Shiqi, Cheng Niu, Ming Zhou, Ting Liu, and Sheng Li. 2008. Combining multiple resources to improve SMT-based paraphrasing model. In Proceedings of ACL-08: HLT, pages 1021–1029, Columbus, OH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Liang Zhou</author>
<author>Chin-Yew Lin</author>
<author>Eduard Hovy</author>
</authors>
<title>Re-evaluating machine translation results with paraphrase support.</title>
<date>2006</date>
<booktitle>In Proceedings of EMNLP,</booktitle>
<pages>77--84</pages>
<location>Sydney.</location>
<contexts>
<context position="13890" citStr="Zhou et al. (2006)" startWordPosition="2089" endWordPosition="2092">olution is to use multiple reference translations, which is expensive. An alternative solution, tried in a number of recent approaches, is to address this issue by allowing the evaluation process to take into account paraphrases of phrases in the reference translation so as to award credit to parts of the translation hypothesis that are semantically, even if not lexically, correct (Owczarzak et al. 2006; Zhou, Lin, and Hovy 2006). In evaluation of document summarization, automatically generated summaries (peers) are also evaluated against reference summaries created by human authors (models). Zhou et al. (2006) propose a new metric called ParaEval that leverages an automatically extracted database of phrasal paraphrases to inform the computation of n-gram overlap between peer summaries and multiple model summaries. 1.3.3 Machine Translation. Besides being used in evaluation of machine translation systems, paraphrasing has also been applied to directly improve the translation process. Callison-Burch, Koehn, and Osborne (2006) use automatically induced paraphrases to improve a statistical phrase-based machine translation system. Such a system works by dividing the given sentence into phrases and trans</context>
</contexts>
<marker>Zhou, Lin, Hovy, 2006</marker>
<rawString>Zhou, Liang, Chin-Yew Lin, and Eduard Hovy. 2006. Re-evaluating machine translation results with paraphrase support. In Proceedings of EMNLP, pages 77–84, Sydney.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Liang Zhou</author>
<author>Chin-Yew Lin</author>
<author>Dragos Stefan Muntenau</author>
<author>Eduard Hovy</author>
</authors>
<title>ParaEval: Using paraphrases to evaluate summaries automatically.</title>
<date>2006</date>
<booktitle>In Proceedings of HLT-NAACL,</booktitle>
<pages>447--454</pages>
<location>New York, NY.</location>
<contexts>
<context position="13890" citStr="Zhou et al. (2006)" startWordPosition="2089" endWordPosition="2092">olution is to use multiple reference translations, which is expensive. An alternative solution, tried in a number of recent approaches, is to address this issue by allowing the evaluation process to take into account paraphrases of phrases in the reference translation so as to award credit to parts of the translation hypothesis that are semantically, even if not lexically, correct (Owczarzak et al. 2006; Zhou, Lin, and Hovy 2006). In evaluation of document summarization, automatically generated summaries (peers) are also evaluated against reference summaries created by human authors (models). Zhou et al. (2006) propose a new metric called ParaEval that leverages an automatically extracted database of phrasal paraphrases to inform the computation of n-gram overlap between peer summaries and multiple model summaries. 1.3.3 Machine Translation. Besides being used in evaluation of machine translation systems, paraphrasing has also been applied to directly improve the translation process. Callison-Burch, Koehn, and Osborne (2006) use automatically induced paraphrases to improve a statistical phrase-based machine translation system. Such a system works by dividing the given sentence into phrases and trans</context>
</contexts>
<marker>Zhou, Lin, Muntenau, Hovy, 2006</marker>
<rawString>Zhou, Liang, Chin-Yew Lin, Dragos Stefan Muntenau, and Eduard Hovy. 2006. ParaEval: Using paraphrases to evaluate summaries automatically. In Proceedings of HLT-NAACL, pages 447–454, New York, NY.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>