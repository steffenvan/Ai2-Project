<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000086">
<title confidence="0.9982065">
ConText: An Algorithm for Identifying Contextual Features
from Clinical Text
</title>
<author confidence="0.99434">
Wendy W. Chapman, David Chu, John N. Dowling
</author>
<affiliation confidence="0.9983615">
Department of Biomedical Informatics
University of Pittsburgh
</affiliation>
<address confidence="0.599651">
Pittsburgh, PA
</address>
<email confidence="0.99933">
chapman@cbmi.pitt.edu
</email>
<sectionHeader confidence="0.993909" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999782235294118">
Applications using automatically indexed
clinical conditions must account for con-
textual features such as whether a condition
is negated, historical or hypothetical, or
experienced by someone other than the pa-
tient. We developed and evaluated an algo-
rithm called ConText, an extension of the
NegEx negation algorithm, which relies on
trigger terms, pseudo-trigger terms, and
termination terms for identifying the values
of three contextual features. In spite of its
simplicity, ConText performed well at
identifying negation and hypothetical status.
ConText performed moderately at identify-
ing whether a condition was experienced
by someone other than the patient and
whether the condition occurred historically.
</bodyText>
<sectionHeader confidence="0.998992" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999933038461538">
Natural language processing (NLP) techniques can
extract variables from free-text clinical records
important for medical informatics applications per-
forming decision support, quality assurance, and
biosurveillance [1-6]. Many applications have fo-
cused on identifying individual clinical conditions
in textual records, which is the first step in making
the conditions available to computerized applica-
tions. However, identifying individual instances of
clinical conditions is not sufficient for many medi-
cal informatics tasks—the context surrounding the
condition is crucial for integrating the information
within the text to determine the clinical state of a
patient.
For instance, it is important to understand
whether a condition is affirmed or negated, acute
or chronic, or mentioned hypothetically. We refer
to these as contextual features, because the infor-
mation is not usually contained in the lexical repre-
sentation of the clinical condition itself but in the
context surrounding the clinical condition. We de-
veloped an algorithm called ConText for identify-
ing three contextual features relevant for biosur-
veillance from emergency department (ED) reports
and evaluated its performance compared to physi-
cian annotation of the features.
</bodyText>
<sectionHeader confidence="0.995217" genericHeader="introduction">
2 Background
</sectionHeader>
<subsectionHeader confidence="0.997362">
2.1 Encoding Contextual Information from-
Clinical Texts
</subsectionHeader>
<bodyText confidence="0.999912625">
NLP systems designed to encode detailed informa-
tion from clinical reports, such as MedLEE [1],
MPLUS [7], and MedSyndikate [4], encode con-
textual features such as negation, uncertainty,
change over time, and severity. Over the last ten
years, several negation algorithms have been de-
scribed in the literature [8-12]. Recently, research-
ers at Columbia University have categorized tem-
poral expressions in clinical narrative text and
evaluated a temporal constraint structure designed
to model the temporal information for discharge
summaries [13, 14].
ConText differs from most other work in this
area by providing a stand-alone algorithm that can
be integrated with any application that indexes
clinical conditions from text.
</bodyText>
<subsectionHeader confidence="0.994899">
2.2 Biosurveillance from ED Data
</subsectionHeader>
<bodyText confidence="0.999821">
Biosurveillance and situational awareness are im-
perative research issues in today’s world. State-of-
the-art surveillance systems rely on chief com-
plaints and ICD-9 codes, which provide limited
clinical information and have been shown to per-
form with only fair to moderate sensitivity [15-18].
ED reports are a timely source of clinical informa-
</bodyText>
<page confidence="0.987004">
81
</page>
<note confidence="0.74056">
BioNLP 2007: Biological, translational, and clinical language processing, pages 81–88,
Prague, June 2007. c�2007 Association for Computational Linguistics
</note>
<bodyText confidence="0.999872666666667">
tion that may be useful for syndromic surveillance.
We are developing NLP-based methods for identi-
fying clinical conditions from ED reports.
</bodyText>
<subsectionHeader confidence="0.97552">
2.3 SySTR
</subsectionHeader>
<bodyText confidence="0.999801461538462">
We are developing an NLP application called
SySTR (Syndromic Surveillance from Textual Re-
cords). It currently uses free-text descriptions of
clinical conditions in ED reports to determine
whether the patient has an acute lower respiratory
syndrome. We previously identified 55 clinical
conditions (e.g. cough, pneumonia, oxygen desatu-
ration, wheezing) relevant for determining whether
a patient has an acute lower respiratory condition
[19]. SySTR identifies instances of these 55 clini-
cal conditions in ED reports to determine if a pa-
tient has an acute lower respiratory syndrome.
SySTR has four modules:
</bodyText>
<listItem confidence="0.9966638">
(1) Index each instance of the 55 clinical condi-
tions in an ED report;
(2) For each indexed instance of a clinical condi-
tion, assign values to three contextual features;
(3) Integrate the information from indexed in-
stances to determine whether each of the 55
conditions are acute, chronic, or absent;
(4) Use the values of the 55 conditions to deter-
mine whether a patient has an acute lower res-
piratory syndrome.
</listItem>
<bodyText confidence="0.998763214285714">
We built SySTR on top of an application
called caTIES [20], which comprises a GATE
pipeline of processing resources (http://gate.ac.uk/).
Module 1 uses MetaMap [5] to index UMLS con-
cepts in the text and then maps the UMLS concepts
to the 55 clinical conditions. For instance, Module
1 would identify the clinical condition Dyspnea in
the sentence “Patient presents with a 3 day history
of shortness of breath.” For each instance of the 55
conditions identified by Module 1, Module 2 as-
signs values to three contextual features: Negation
(negated, affirmed); Temporality (historical, re-
cent, hypothetical); and Experiencer (patient,
other). For the sentence above, Module 2 would
assign Dyspnea the following contextual features
and their values: Negation—affirmed; Temporal-
ity—recent; Experiencer—patient. Module 3, as
described in Chu and colleagues [21], resolves
contradictions among multiple instances of clinical
conditions, removes conditions not experienced by
the patient, and assigns a final value of acute,
chronic, or absent to each of the 55 conditions.
Module 4 uses machine learning models to deter-
mine whether a patient has acute lower respiratory
syndrome based on values of the conditions.
The objective of this study was to evaluate an
algorithm for identifying the contextual informa-
tion generated by Module 2.
</bodyText>
<sectionHeader confidence="0.997593" genericHeader="method">
3 Methods
</sectionHeader>
<bodyText confidence="0.999994230769231">
We developed an algorithm called ConText for
determining the values for three contextual features
of a clinical condition: Negation, Temporality, and
Experiencer. The same algorithm is applied to all
three contextual features and is largely based on a
regular expression algorithm for determining
whether a condition is negated or not (NegEx [9]).
ConText relies on trigger terms, pseudo-trigger
terms, and scope termination terms that are specific
to the type of contextual feature being identified.
Below we describe the three contextual features
addressed by the algorithm, details of how Con-
Text works, and our evaluation of ConText.
</bodyText>
<subsectionHeader confidence="0.998701">
3.1 Three Contextual Features
</subsectionHeader>
<bodyText confidence="0.999795875">
Determining whether a patient had an acute epi-
sode of a clinical condition, such as cough, poten-
tially involves information described in the context
of the clinical condition in the text. We performed
a pilot study to learn which contextual features af-
fected classification of 55 clinical conditions as
acute, chronic, or absent [21]. The pilot study
identified which contextual features were critical
for our task and reduced the number of values we
initially used.
The contextual features for each indexed clinical
condition are assigned default values. ConText
changes the values if the condition falls within the
scope of a relevant trigger term. Below, we de-
scribe the contextual features (default values are in
parentheses).
</bodyText>
<listItem confidence="0.971739">
(1) Negation (affirmed): ConText determines
whether a condition is negated, as in “No fe-
ver.”
(2) Temporality (recent): ConText can change
Temporality to historical or hypothetical. In its
current implementation, historical is defined as
beginning at least 14 days before the visit to
the ED, but the algorithm can easily be modi-
fied to change the length of time. ConText
would mark Fever in “Patient should return if
she develops fever” as hypothetical.
</listItem>
<page confidence="0.99784">
82
</page>
<bodyText confidence="0.999902545454546">
term should be negated. Pseudo-trigger terms, such
as “no increase,” contain a negation trigger term
but do not indicate negation of a clinical concept.
A termination term such as “but” can terminate the
scope of the negation before the end of the win-
dow, as in “She denies headache but complains of
dizziness.”
ConText is an expansion of NegEx. It relies on
the same basic algorithm but applies different term
lists and different windows of scope depending on
the contextual feature being annotated.
</bodyText>
<subsectionHeader confidence="0.999845">
3.3 ConText Term Lists
</subsectionHeader>
<bodyText confidence="0.999748">
Each contextual feature has a unique set of trigger
terms and pseudo-trigger terms, as shown in Table
1. The complete list of terms can be found at
http://web.cbmi.pitt.edu/chapman/ConText.html.
Most of the triggers apply to RE1, but a few
(marked in table) apply to RE2. ConText assigns a
default value to each feature, then changes that
value if a clinical condition falls within the scope
of a relevant trigger term.
Although trigger terms are unique to the contex-
tual feature being identified, termination terms
</bodyText>
<tableCaption confidence="0.899297">
Table 1. Examples of trigger and pseudo-trigger terms for the three contextual features. If all terms are not
represented in the table, we indicate the number of terms used by ConText in parentheses.
</tableCaption>
<subsectionHeader confidence="0.230433">
Temporality (default = recent)
</subsectionHeader>
<bodyText confidence="0.565818">
(3) Experiencer (patient): ConText assigns condi-
tions ascribed to someone other than the pa-
tient an Experiencer of other, as in “The pa-
tient’s father has a history of CHF.”
</bodyText>
<subsectionHeader confidence="0.958916">
3.2 Contextual Feature Algorithm
</subsectionHeader>
<bodyText confidence="0.94458316">
As we examined how the contextual features were
manifested in ED reports, we discovered similar
patterns for all features and hypothesized that an
existing negation algorithm, NegEx [9], may be
applicable for all three features.
NegEx uses two regular expressions (RE) to de-
termine whether an indexed condition is negated:
RE1: &lt;trigger term&gt; &lt;5w&gt; &lt;indexed term&gt;
RE2: &lt;indexed term&gt; &lt;5w&gt; &lt;trigger term&gt;
&lt;5w&gt; represents five words (a word can be a sin-
gle word or a UMLS concept), and the text
matched by this pattern is called the scope. NegEx
relies on three types of terms to determine whether
a condition is negated: trigger terms, pseudo-
trigger terms, and termination terms. Trigger terms
such as “no” and “denies” indicate that the clinical
conditions that fall within the scope of the trigger
Trigger terms for
hypothetical
if
return
should [he|she]
should there
should the patient
as needed
</bodyText>
<figure confidence="0.901392714285714">
come back [for|to]
Pseudo-trigger Trigger terms for historical Pseudo-trigger terms (10)
terms
if negative General triggers history, physical
history history taking
previous^ poor history
History Section title^^ history and examination
Temporal Measurement triggers^^^ history of present illness
&lt;time&gt; of social history
[for|over] the [last|past] &lt;time&gt; family history
since (last) [day-of-week|week|month |sudden onset of
season|year]
Experiencer (default = patient) Negation (default = affirmed)
Trigger terms
for other (12)
Pseudo-trigger Trigger terms for negated (125) Pseudo-trigger terms (16)
terms
father(’s)
mother(’s)
aunt(’s)
no
</figure>
<construct confidence="0.545197833333333">
not
denies
without
no increase
not extend
gram negative
^ the scope for “previous” only extends one term forward (e.g., “for previous headache”)
^^Currently the only history section title we use is PAST MEDICAL HISTORY.
^^^ &lt;time&gt; includes the following regular expression indicating a temporal quantification: x[-|space]
[day(s)|hour(s)|week(s)|month(s)|year(s)]. x = any digit; words in brackets are disjunctions; items in parentheses are
optional. The first two temporal measurement triggers are used with RE1; the third is used with RE2. For our
current application, a condition lasting 14 days or more is considered historical.
</construct>
<page confidence="0.995014">
83
</page>
<bodyText confidence="0.999985277777778">
may be common to multiple contextual features.
For instance, a termination term indicating that the
physician is speaking about the patient can indicate
termination of scope for the features Temporality
and Experiencer. In the sentence “History of
COPD, presenting with shortness of breath,” the
trigger term “history” indicates that COPD is his-
torical, but the term “presenting” terminates the
scope of the temporality trigger term, because the
physician is now describing the current patient
visit. Therefore, the condition Dyspnea (“shortness
of breath”) should be classified as recent. Simi-
larly, in the sentence “Mother has CHF and patient
presents with chest pain,” Experiencer for CHF
should be other, but Experiencer for Chest Pain
should be patient.
We compiled termination terms into conceptual
groups, as shown in Table 2.
</bodyText>
<tableCaption confidence="0.814277">
Table 2. ConText’s termination terms. Column 1 lists
the type of termination term, the number of terms used
by Context, and the contextual feature values using that
type of termination term. Column 2 gives examples of
the terms.
</tableCaption>
<table confidence="0.9629413125">
Type of Term Examples
Patient (5)
Temporal (hypothetical)
Experiencer (other)
Presentation (12) Presents, presenting, com-
Temporal (historical) plains, was found, states,
Experiencer (other) reports, currently, today
Because (2)
Temporal (hypothetical) Since, because
Which (1) Which
Experiencer (other)
ED (2)
Emergency department, ED
Temporal (historical)
But (8)
Negation (negated)
</table>
<subsectionHeader confidence="0.956673">
3.4 ConText Algorithm
</subsectionHeader>
<bodyText confidence="0.999911">
The input to ConText is an ED report with in-
stances of the 55 clinical concepts already indexed.
For each clinical condition, ConText assigns val-
ues to the three contextual features. ConText’s al-
gorithm is as follows1:
</bodyText>
<footnote confidence="0.994918666666667">
1 This algorithm applies to RE1. The algorithm for RE2
is the same, except that it works backwards from the
trigger term and does not look for pseudo-trigger terms.
</footnote>
<bodyText confidence="0.99956624">
Go to first trigger term in sentence
If term is a pseudo-trigger term,
Skip to next trigger term
Determine scope of trigger term
If termination term within scope,
Terminate scope before termination term
Assign appropriate contextual feature value to
all indexed clinical concepts within scope.
The scope of a trigger term depends on the con-
textual feature being classified. The default scope
includes all text following the indexed condition
until the end of the sentence. Thus, in the sentence
“He should return for fever” the scope of the Tem-
porality (hypothetical) trigger term “return” in-
cludes the segment “for fever,” which includes an
indexed condition Fever. The default scope is over-
ridden in a few circumstances. First, as described
above, the scope can be terminated by a relevant
termination term. Second, if the trigger term is a
&lt;section title&gt;, the scope extends throughout the
entire section, which is defined previous to Con-
Text’s processing. Third, a trigger term itself can
require a different scope. The Temporality (histori-
cal) term “previous” only extends one term for-
ward in the sentence.
</bodyText>
<subsectionHeader confidence="0.624864">
3.5 Evaluation
</subsectionHeader>
<bodyText confidence="0.899702615384615">
We evaluated ConText’s ability to assign correct
values to the three contextual features by compar-
ing ConText’s annotations with annotations made
by a physician.
Setting and Subjects. The study was conducted on
reports for patients presenting to the University of
Pittsburgh Medical Center Presbyterian Hospital
ED during 2002. The study was approved by the
University of Pittsburgh’s Institutional Review
Board. We randomly selected 120 reports for pa-
tients with respiratory-related ICD-9 discharge di-
agnoses for manual annotation. For this study, we
used 30 reports as a development set and 90 re-
ports as a test set. In addition to the annotated de-
velopment set, we used a separate set of 100 unan-
notated ED reports to informally validate our term
lists.
Reference Standard. A physician board-certified
in internal medicine and infectious diseases with
30 years of experience generated manual annota-
tions for the development and test reports. He used
GATE (http://gate.ac.uk/) to highlight every indi-
Patient, who, his, her, pa-
tient’s
But, however, yet, though,
although, aside from
</bodyText>
<page confidence="0.93291">
84
</page>
<bodyText confidence="0.9993249">
vidual annotation in the text referring to any of the
55 clinical conditions. For every annotation, he
assigned values to the three contextual features, as
shown in Figure 1.
Previous experience in annotating the 55 condi-
tions showed that a single physician was inade-
quate for generating a reliable reference standard
[19]. The main mistake made by a single physician
was not marking a concept that existed in the text.
We used NLP-assisted review to improve physi-
cian annotations by comparing the single physi-
cian’s annotations to those made by SySTR. The
physician reviewed disagreements and made
changes to his original annotations if he felt his
original annotation was incorrect. A study by Mey-
stre and Haug [22] used a similar NLP-assisted
review methodology and showed that compared to
a reference standard not using NLP-assisted re-
view, their system had higher recall and the same
precision.
</bodyText>
<figureCaption confidence="0.99939575">
Figure 1. When the physician highlights text,
GATE provides a drop-down menu to select the
Clinical Condition and the values of the Contex-
tual Features.
</figureCaption>
<bodyText confidence="0.904342722222222">
Outcome Measures. For each contextual feature
assigned to an annotation, we compared ConText’s
value to the value assigned by the reference stan-
dard. We classified the feature as a true positive
(TP) if ConText correctly changed the condition’s
default value and a true negative (TN) if ConText
correctly left the default value. We then calculated
recall and precision using the following formulas:
number of TP
(number of TP number of FN
+ )
number of TP
(number of TP number of FP
+ )
For the Temporality feature, we calculated recall
and precision separately for the values historical
and hypothetical. We calculated the 95% confi-
dence intervals (CI) for all outcome measures.
</bodyText>
<sectionHeader confidence="0.999893" genericHeader="evaluation">
4 Results
</sectionHeader>
<bodyText confidence="0.99993672">
Using NLP-assisted review, the reference standard
physician made several changes to his initial anno-
tations. He indexed an additional 82 clinical condi-
tions and changed the title of the clinical condition
for 48 conditions, resulting in a total of 1,620 in-
dexed clinical conditions in the 90 test reports. The
reference standard physician also made 35 changes
to Temporality values and 4 changes to Negation.
The majority of Temporality changes were from
historical to recent (17) and from hypothetical to
recent (12).
Table 3 shows ConText’s recall and precision
values compared to the reference standard annota-
tions. About half of the conditions were negated
(773/1620). Fewer conditions were historical
(95/1620), hypothetical (40/1620), or experienced
by someone other than the patient (8/1620). In
spite of low frequency for these contextual feature
values, identifying them is critical to understanding
a patient’s current state. ConText performed best
on Negation, with recall and precision above 97%.
ConText performed well at assigning the Tempo-
rality value hypothetical, but less well on the Tem-
porality value historical. Experiencer had a small
sample size, making results difficult to interpret.
</bodyText>
<tableCaption confidence="0.944203">
Table 3. Outcome measures for ConText on test set of 90 ED reports.
</tableCaption>
<equation confidence="0.955916642857143">
TP TN FP FN Recall
Feature
95% CI
750 824 23 23 97.0 97.0
Negation
96-98 96-98
Temporality 74.2
(historical) 66 1499 23 32 67.4
58-76 64-82
Temporality 94.3
(hypothetical) 33 1578 2 7 82.5
68-91 81-98
Experiencer 4 1612 0 4 50.00 100
22-78 51-100
</equation>
<sectionHeader confidence="0.998787" genericHeader="conclusions">
5 Discussion
</sectionHeader>
<bodyText confidence="0.999958">
We evaluated an extension of the NegEx algorithm
for determining the values of two additional con-
textual features—Temporality and Experiencer.
ConText performed with very high recall and pre-
cision when determining whether a condition was
negated, and demonstrated moderate to high per-
formance on the other features.
</bodyText>
<figure confidence="0.808678">
Recall:
Precision :
Precision
95% CI
</figure>
<page confidence="0.998034">
85
</page>
<bodyText confidence="0.99995175">
We performed an informal error analysis, which
not only isolates ConText’s errors but also points
out future research directions in contextual feature
identification.
</bodyText>
<subsectionHeader confidence="0.960305">
5.1 Negation
</subsectionHeader>
<bodyText confidence="0.999972085106383">
ConText’s negation identification performed sub-
stantially better than NegEx’s published results [9],
even though ConText is very similar to NegEx and
uses the same trigger terms. Several possible ex-
planations exist for this boost in performance. First,
our study evaluated negation identification in ED
reports, whereas the referenced study on NegEx
applied to discharge summaries. Second, ConText
only applied to 55 clinical conditions, rather than
the large set of UMLS concepts in the NegEx
study. Third, the conditions indexed by SySTR that
act as input to ConText are sometimes negated or
affirmed before ConText sees them. For some con-
ditions, SySTR addresses internal negation in a
word (e.g., “afebrile” is classified as Fever with the
Negation value negated). Also, SySTR assigns
Negation values to some conditions with numeric
values, such as negating Tachycardia from “pulse
rate 75.” Fourth, ConText does not use NegEx’s
original scope of five words, but extends the scope
to the end of the sentence. It would be useful to
compare ConText’s scope difference directly
against NegEx to determine which scope assign-
ment works better, but our results suggest the in-
creased scope may work well for ED reports.
ConText’s errors in assigning the Negation
value were equally distributed between FN’s and
FP’s (23 errors each). Some false negatives re-
sulted from missing trigger terms (e.g., “denying”).
Several false negatives resulted from the interac-
tion between ConText and SySTR’s mapping rules.
For example, in the sentence “chest wall is without
tenderness,” SySTR maps the UMLS concepts for
“chest wall” and “tenderness” to the condition
Chest Wall Tenderness. In such a case, the nega-
tion trigger term “without” is caught between the
two UMLS concepts. Therefore, RE1 does not
match, and ConText does not change the default
from affirmed. False positive negations resulted
from our not integrating the rule described in
NegEx that a concept preceded by a definite article
should not be negated [23] (e.g., “has not been on
steroids for his asthma”) and from descriptions in
the text whose Negation status is even difficult for
humans to determine, such as “no vomiting with-
out having the cough” and “patient does not know
if she has a fever.”
</bodyText>
<subsectionHeader confidence="0.998062">
5.2 Temporality
</subsectionHeader>
<bodyText confidence="0.999986659574468">
Historical. ConText identified historical condi-
tions with 67% sensitivity and 74% precision.
Identifying historical conditions appears simple on
the surface, but is a complex problem. The single
trigger term “history” is used for many of the his-
torical conditions, but the word “history” is a rela-
tive term that can indicate a history of years (as in
“history of COPD”) or of only a few days (as in
“ENT: No history of nasal congestion”). The error
analysis showed that ConText is missing trigger
terms that act equivalently to the word “history”
such as “in the past” (“has not been on steroids in
the past for his asthma”) and “pre-existing” (“pre-
existing shortness of breath”).
Some conditions that the reference standard
classified as historical had no explicit trigger in the
text, as in the sentence “When he sits up in bed, he
develops pain in the chest.” It may be useful to
implement rules involving verb tense for these
cases.
The most difficult cases for ConText were those
with temporal measurement triggers. The few tem-
poral quantifier patterns we used were fairly suc-
cessful, but the test set contained multiple varia-
tions on those quantifiers, and a new dataset would
probably introduce even more variations. For in-
stance, ConText falsely classified Non-pleuritic
Chest Pain as historical in “awoken at approxi-
mately 2:45 with chest pressure,” because Con-
Text’s temporal quantifiers do not account for time
of the day. Also, even though ConText’s temporal
quantifiers include the pattern “last x weeks,” x
represents a digit and thus didn’t match the phrase
“intermittent cough the last couple of weeks.”
We were hoping that identifying historical con-
ditions would not require detailed modeling of
temporal information, but our results suggest oth-
erwise. We will explore the temporal categories
derived by Hripcsak and Zhou [13] for discharge
summaries to expand ConText’s ability to identify
temporal measurement triggers.
Hypothetical. ConText demonstrated 83% recall
and 94% precision when classifying a condition as
hypothetical rather than recent. Again, missing
trigger terms (e.g., “returning” and “look out for”)
and termination terms (e.g., “diagnosis”) caused
errors. The chief cause of false negatives was ter-
</bodyText>
<page confidence="0.992235">
86
</page>
<bodyText confidence="0.999985888888889">
minating the scope of a trigger term too early. For
instance, in the sentence “She knows to return to
the ED if she has anginal type chest discomfort
which was discussed with her, shortness of breath,
and peripheral edema” the scope of the trigger “re-
turn” was terminated by “her.” The major limita-
tion of regular expressions is evident in this exam-
ple in which “her” is part of a relative clause modi-
fying “chest discomfort,” not “shortness of breath.”
</bodyText>
<subsectionHeader confidence="0.981718">
5.3 Experiencer
</subsectionHeader>
<bodyText confidence="0.999981333333333">
ConText’s ability to identify an experiencer other
than the patient suffered from low prevalence. In
the test set of 90 reports, only 8 of the 1620 condi-
tions were experienced by someone other than the
patient, and ConText missed half of them. Two of
the false negatives came from not including the
trigger term “family history.” A more difficult er-
ror to address is recognizing that bronchitis is ex-
perienced by someone other than the patient in
“...due to the type of bronchitis that is currently
being seen in the community.” ConText made no
false positive classifications for Experiencer.
</bodyText>
<subsectionHeader confidence="0.976553">
5.4 Limitations and Future Work
</subsectionHeader>
<bodyText confidence="0.999824555555556">
Some of ConText’s errors can be resolved by refin-
ing the trigger and termination terms. However,
many of the erroneous classifications are due to
complex syntax and semantics that cannot be han-
dled by simple regular expressions. Determining
the scope of trigger terms in sentences with relative
clauses and coordinated conjunctions is especially
difficult. We believe ConText’s approach involv-
ing trigger terms, scope, and termination terms is
still a reasonable model for this problem and hope
to improve ConText’s ability to identify scope with
syntactic information.
A main limitation of our evaluation was the ref-
erence standard, which was comprised of a single
physician. We used NLP-assisted review to in-
crease the identification of clinical conditions and
decrease noise in his classifications. It is possible
that the NLP-assisted review biased the reference
standard toward ConText’s classifications, but the
majority of changes made after NLP-assisted re-
view involved indexing the clinical conditions,
rather than changing the values of the contextual
features. Moreover, most of the changes to contex-
tual feature values involved a change in our anno-
tation schema after the physician had completed
his first round of annotations. Specifically, we al-
lowed the physician to use the entire report to de-
termine whether a condition was historical, which
caused him to mark recent exacerbations of his-
torical conditions as historical. A second physician
is in the process of annotating the test set. The two
physicians will come to consensus on their classi-
fications in generating a new reference standard.
How good contextual feature identification has
to be depends largely on the intended application.
We tested SySTR’s ability to determine whether
the 55 clinical conditions were acute, chronic, or
absent on a subset of 30 test reports [24]. SySTR
made 51 classification errors, 22 of which were
due to ConText’s mistakes. In spite of the errors,
SySTR demonstrated a kappa of 0.85 when com-
pared to physician classifications, suggesting that
because of redundancy in clinical reports, Con-
Text’s mistakes may not have a substantial adverse
effect on SySTR’s final output.
</bodyText>
<subsectionHeader confidence="0.719809">
5.5 Conclusion
</subsectionHeader>
<bodyText confidence="0.999961206896552">
We evaluated a regular-expression-based algorithm
for determining the status of three contextual fea-
tures in ED reports and found that ConText per-
formed very well at identifying negated conditions,
fairly well at determining whether conditions were
hypothetical or historical, and moderately well at
determining whether a condition was experienced
by someone other than the patient. ConText’s algo-
rithm is based on the negation algorithm NegEx,
which is a frequently applied negation algorithm in
biomedical informatics applications due to its sim-
plicity, availability, and generalizability to various
NLP applications. Simple algorithms for identify-
ing contextual features of indexed conditions is
important in medical language processing for im-
proving the accuracy of information retrieval and
extraction applications and for providing a baseline
comparison for more sophisticated algorithms.
ConText accepts any indexed clinical conditions as
input and thus may be applicable to other NLP ap-
plications. We do not know how well ConText will
perform on other report types, but see similar con-
textual features in discharge summaries, progress
notes, and history and physical exams. Currently,
ConText only identifies three contextual features,
but we hope to extend the algorithm to other fea-
tures in the future, such as whether a condition is
mentioned as a radiology finding or as a diagnosis
(e.g., Pneumonia).
</bodyText>
<page confidence="0.996284">
87
</page>
<bodyText confidence="0.999856153846154">
Over and above negation identification, which
can be addressed by NegEx or other algorithms,
ConText could be useful for a variety of NLP tasks,
including flagging historical findings and eliminat-
ing indexed conditions that are hypothetical or
were not experienced by the patient. Ability to
modify indexed conditions based on their contex-
tual features can potentially improve precision in
biosurveillance, real-time decision support, and
information retrieval.
Acknowledgments. This work was supported by
NLM grant K22 LM008301, “Natural language
processing for respiratory surveillance.”
</bodyText>
<sectionHeader confidence="0.99944" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999447989361703">
1. Friedman C. A broad-coverage natural language
processing system. Proc AMIA Symp 2000:270-4.
2. Fiszman M, Chapman WW, Aronsky D, Evans RS,
Haug PJ. Automatic detection of acute bacterial pneu-
monia from chest X-ray reports. J Am Med Inform
Assoc 2000;7(6):593-604.
3. Taira R, Bashyam V, Kangarloo H. A field theory
approach to medical natural language processing. IEEE
Transactions in Inform Techn in Biomedicine
2007;11(2).
4. Hahn U, Romacker M, Schulz S. MEDSYNDI-
KATE-a natural language system for the extraction of
medical information from findings reports. Int J Med Inf
2002;67(1-3):63-74.
5. Aronson AR. Effective mapping of biomedical text to
the UMLS Metathesaurus: the MetaMap program. Proc
AMIA Symp 2001:17-21.
6. Hazlehurst B, Frost HR, Sittig DF, Stevens VJ.
MediClass: A system for detecting and classifying en-
counter-based clinical events in any electronic medical
record. J Am Med Inform Assoc 2005;12(5):517-29.
7. Christensen L, Haug PJ, Fiszman M. MPLUS: a
probabilistic medical language understanding system.
Proc Workshop on Natural Language Processing in the
Biomedical Domain 2002:29-36.
8. Mutalik PG, Deshpande A, Nadkarni PM. Use of
general-purpose negation detection to augment concept
indexing of medical documents: a quantitative study
using the UMLS. J Am Med Inform Assoc
2001;8(6):598-609.
9. Chapman WW, Bridewell W, Hanbury P, Cooper GF,
Buchanan BG. A simple algorithm for identifying ne-
gated findings and diseases in discharge summaries. J
Biomed Inform 2001;34(5):301-10.
10. Elkin PL, Brown SH, Bauer BA, Husser CS, Carruth
W, Bergstrom LR, et al. A controlled trial of automated
classification of negation from clinical notes. BMC Med
Inform Decis Mak 2005;5(1):13.
11. Herman T, Matters M, Walop W, Law B, Tong W,
Liu F, et al. Concept negation in free text components of
vaccine safety reports. AMIA Annu Symp Proc
2006:1122.
12. Huang Y, Lowe HJ. A Novel Hybrid Approach to
Automated Negation Detection in Clinical Radiology
Reports. J Am Med Inform Assoc 2007.
13. Hripcsak G, Zhou L, Parsons S, Das AK, Johnson
SB. Modeling electronic discharge summaries as a sim-
ple temporal constraint satisfaction problem. J Am Med
Inform Assoc 2005;12(1):55-63.
14. Zhou L, Melton GB, Parsons S, Hripcsak G. A tem-
poral constraint structure for extracting temporal infor-
mation from clinical narrative. J Biomed Inform 2005.
15. Chapman WW, Dowling JN, Wagner MM. Classifi-
cation of emergency department chief complaints into
seven syndromes: a retrospective analysis of 527,228
patients. Ann Emerg Med 2005;46(5):445-455.
16. Ivanov O, Wagner MM, Chapman WW, Olszewski
RT. Accuracy of three classifiers of acute gastrointesti-
nal syndrome for syndromic surveillance. Proc AMIA
Symp 2002:345-9.
17. Chang HG, Cochrane DG, Tserenpuntsag B, Allegra
JR, Smith PF. ICD9 as a surrogate for chart review in
the validation of a chief complaint syndromic surveil-
lance system. In: Syndromic Surveillance Conference
Seattle, Washington; 2005.
18. Beitel AJ, Olson KL, Reis BY, Mandl KD. Use of
emergency department chief complaint and diagnostic
codes for identifying respiratory illness in a pediatric
population. Pediatr Emerg Care 2004;20(6):355-60.
19. Chapman WW, Fiszman M, Dowling JN, Chapman
BE, Rindflesch TC. Identifying respiratory findings in
emergency department reports for biosurveillance using
MetaMap. Medinfo 2004;2004:487-91.
20. Mitchell KJ, Becich MJ, Berman JJ, Chapman WW,
Gilbertson J, Gupta D, et al. Implementation and
evaluation of a negation tagger in a pipeline-based sys-
tem for information extraction from pathology reports.
Medinfo 2004;2004:663-7.
21. Chu D, Dowling JN, Chapman WW. Evaluating the
effectiveness of four contextual features in classifying
annotated clinical conditions in emergency department
reports. AMIA Annu Symp Proc 2006:141-5.
22. Meystre S, Haug PJ. Natural language processing to
extract medical problems from electronic clinical docu-
ments: performance evaluation. J Biomed Inform
2006;39(6):589-99.
23. Goldin I, Chapman WW. Learning to detect nega-
tion with &apos;not&apos; in medical texts. In: Proc Workshop on
Text Analysis and Search for Bioinformatics at the 26th
Annual International ACM SIGIR Conference (SIGIR-
2003); 2003.
24. Chu D. Clinical feature extraction from emergency
department reports for biosurveillance [Master&apos;s Thesis].
Pittsburgh: University of Pittsburgh; 2007.
</reference>
<page confidence="0.999418">
88
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.681669">
<title confidence="0.9417555">ConText: An Algorithm for Identifying Contextual from Clinical Text</title>
<author confidence="0.999911">Wendy W Chapman</author>
<author confidence="0.999911">David Chu</author>
<author confidence="0.999911">John N Dowling</author>
<affiliation confidence="0.999915">Department of Biomedical University of</affiliation>
<address confidence="0.785217">Pittsburgh, PA</address>
<email confidence="0.999259">chapman@cbmi.pitt.edu</email>
<abstract confidence="0.998962166666667">Applications using automatically indexed clinical conditions must account for contextual features such as whether a condition is negated, historical or hypothetical, or experienced by someone other than the patient. We developed and evaluated an algorithm called ConText, an extension of the NegEx negation algorithm, which relies on trigger terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>C Friedman</author>
</authors>
<title>A broad-coverage natural language processing system.</title>
<booktitle>Proc AMIA Symp</booktitle>
<pages>2000--270</pages>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
</contexts>
<marker>1.</marker>
<rawString>Friedman C. A broad-coverage natural language processing system. Proc AMIA Symp 2000:270-4.</rawString>
</citation>
<citation valid="false">
<authors>
<author>M Fiszman</author>
<author>Chapman WW</author>
<author>D Aronsky</author>
<author>Evans RS</author>
<author>Haug PJ</author>
</authors>
<title>Automatic detection of acute bacterial pneumonia from chest X-ray reports.</title>
<journal>J Am Med Inform Assoc</journal>
<pages>2000--7</pages>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
</contexts>
<marker>2.</marker>
<rawString>Fiszman M, Chapman WW, Aronsky D, Evans RS, Haug PJ. Automatic detection of acute bacterial pneumonia from chest X-ray reports. J Am Med Inform Assoc 2000;7(6):593-604.</rawString>
</citation>
<citation valid="false">
<authors>
<author>R Taira</author>
<author>V Bashyam</author>
<author>H Kangarloo</author>
</authors>
<title>A field theory approach to medical natural language processing.</title>
<journal>IEEE Transactions in Inform Techn in Biomedicine</journal>
<volume>11</volume>
<issue>2</issue>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
</contexts>
<marker>3.</marker>
<rawString>Taira R, Bashyam V, Kangarloo H. A field theory approach to medical natural language processing. IEEE Transactions in Inform Techn in Biomedicine 2007;11(2).</rawString>
</citation>
<citation valid="false">
<authors>
<author>U Hahn</author>
<author>M Romacker</author>
<author>S Schulz</author>
</authors>
<title>MEDSYNDIKATE-a natural language system for the extraction of medical information from findings reports.</title>
<journal>Int J Med Inf</journal>
<pages>2002--67</pages>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
<context position="2408" citStr="[4]" startWordPosition="338" endWordPosition="338"> features, because the information is not usually contained in the lexical representation of the clinical condition itself but in the context surrounding the clinical condition. We developed an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions </context>
</contexts>
<marker>4.</marker>
<rawString>Hahn U, Romacker M, Schulz S. MEDSYNDIKATE-a natural language system for the extraction of medical information from findings reports. Int J Med Inf 2002;67(1-3):63-74.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Aronson AR</author>
</authors>
<title>Effective mapping of biomedical text to the UMLS Metathesaurus: the MetaMap program.</title>
<booktitle>Proc AMIA Symp</booktitle>
<pages>2001--17</pages>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
<context position="4894" citStr="[5]" startWordPosition="712" endWordPosition="712">e. SySTR has four modules: (1) Index each instance of the 55 clinical conditions in an ED report; (2) For each indexed instance of a clinical condition, assign values to three contextual features; (3) Integrate the information from indexed instances to determine whether each of the 55 conditions are acute, chronic, or absent; (4) Use the values of the 55 conditions to determine whether a patient has an acute lower respiratory syndrome. We built SySTR on top of an application called caTIES [20], which comprises a GATE pipeline of processing resources (http://gate.ac.uk/). Module 1 uses MetaMap [5] to index UMLS concepts in the text and then maps the UMLS concepts to the 55 clinical conditions. For instance, Module 1 would identify the clinical condition Dyspnea in the sentence “Patient presents with a 3 day history of shortness of breath.” For each instance of the 55 conditions identified by Module 1, Module 2 assigns values to three contextual features: Negation (negated, affirmed); Temporality (historical, recent, hypothetical); and Experiencer (patient, other). For the sentence above, Module 2 would assign Dyspnea the following contextual features and their values: Negation—affirmed</context>
</contexts>
<marker>5.</marker>
<rawString>Aronson AR. Effective mapping of biomedical text to the UMLS Metathesaurus: the MetaMap program. Proc AMIA Symp 2001:17-21.</rawString>
</citation>
<citation valid="false">
<authors>
<author>B Hazlehurst</author>
<author>Frost HR</author>
<author>Sittig DF</author>
<author>Stevens VJ</author>
</authors>
<title>MediClass: A system for detecting and classifying encounter-based clinical events in any electronic medical record.</title>
<journal>J Am Med Inform Assoc</journal>
<pages>2005--12</pages>
<contexts>
<context position="1190" citStr="[1, 2, 3, 4, 5, 6]" startWordPosition="158" endWordPosition="158">terms, pseudo-trigger terms, and termination terms for identifying the values of three contextual features. In spite of its simplicity, ConText performed well at identifying negation and hypothetical status. ConText performed moderately at identifying whether a condition was experienced by someone other than the patient and whether the condition occurred historically. 1 Introduction Natural language processing (NLP) techniques can extract variables from free-text clinical records important for medical informatics applications performing decision support, quality assurance, and biosurveillance [1, 2, 3, 4, 5, 6]. Many applications have focused on identifying individual clinical conditions in textual records, which is the first step in making the conditions available to computerized applications. However, identifying individual instances of clinical conditions is not sufficient for many medical informatics tasks—the context surrounding the condition is crucial for integrating the information within the text to determine the clinical state of a patient. For instance, it is important to understand whether a condition is affirmed or negated, acute or chronic, or mentioned hypothetically. We refer to thes</context>
</contexts>
<marker>6.</marker>
<rawString>Hazlehurst B, Frost HR, Sittig DF, Stevens VJ. MediClass: A system for detecting and classifying encounter-based clinical events in any electronic medical record. J Am Med Inform Assoc 2005;12(5):517-29.</rawString>
</citation>
<citation valid="false">
<authors>
<author>L Christensen</author>
<author>Haug PJ</author>
<author>M Fiszman</author>
</authors>
<title>MPLUS: a probabilistic medical language understanding system.</title>
<booktitle>Proc Workshop on Natural Language Processing in the Biomedical Domain</booktitle>
<pages>2002--29</pages>
<contexts>
<context position="2386" citStr="[7]" startWordPosition="335" endWordPosition="335">to these as contextual features, because the information is not usually contained in the lexical representation of the clinical condition itself but in the context surrounding the clinical condition. We developed an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexe</context>
</contexts>
<marker>7.</marker>
<rawString>Christensen L, Haug PJ, Fiszman M. MPLUS: a probabilistic medical language understanding system. Proc Workshop on Natural Language Processing in the Biomedical Domain 2002:29-36.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Mutalik PG</author>
<author>A Deshpande</author>
<author>Nadkarni PM</author>
</authors>
<title>Use of general-purpose negation detection to augment concept indexing of medical documents: a quantitative study using the UMLS.</title>
<journal>J Am Med Inform Assoc</journal>
<pages>2001--8</pages>
<contexts>
<context position="2609" citStr="[8, 9, 10, 11, 12]" startWordPosition="367" endWordPosition="367">oped an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and </context>
</contexts>
<marker>8.</marker>
<rawString>Mutalik PG, Deshpande A, Nadkarni PM. Use of general-purpose negation detection to augment concept indexing of medical documents: a quantitative study using the UMLS. J Am Med Inform Assoc 2001;8(6):598-609.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Chapman WW</author>
<author>W Bridewell</author>
<author>P Hanbury</author>
<author>Cooper GF</author>
<author>Buchanan BG</author>
</authors>
<title>A simple algorithm for identifying negated findings and diseases in discharge summaries.</title>
<journal>J Biomed Inform</journal>
<pages>2001--34</pages>
<contexts>
<context position="2609" citStr="[8, 9, 10, 11, 12]" startWordPosition="367" endWordPosition="367">oped an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and </context>
<context position="6416" citStr="[9]" startWordPosition="944" endWordPosition="944">chine learning models to determine whether a patient has acute lower respiratory syndrome based on values of the conditions. The objective of this study was to evaluate an algorithm for identifying the contextual information generated by Module 2. 3 Methods We developed an algorithm called ConText for determining the values for three contextual features of a clinical condition: Negation, Temporality, and Experiencer. The same algorithm is applied to all three contextual features and is largely based on a regular expression algorithm for determining whether a condition is negated or not (NegEx [9]). ConText relies on trigger terms, pseudo-trigger terms, and scope termination terms that are specific to the type of contextual feature being identified. Below we describe the three contextual features addressed by the algorithm, details of how ConText works, and our evaluation of ConText. 3.1 Three Contextual Features Determining whether a patient had an acute episode of a clinical condition, such as cough, potentially involves information described in the context of the clinical condition in the text. We performed a pilot study to learn which contextual features affected classification of </context>
<context position="9590" citStr="[9]" startWordPosition="1450" endWordPosition="1450">f trigger and pseudo-trigger terms for the three contextual features. If all terms are not represented in the table, we indicate the number of terms used by ConText in parentheses. Temporality (default = recent) (3) Experiencer (patient): ConText assigns conditions ascribed to someone other than the patient an Experiencer of other, as in “The patient’s father has a history of CHF.” 3.2 Contextual Feature Algorithm As we examined how the contextual features were manifested in ED reports, we discovered similar patterns for all features and hypothesized that an existing negation algorithm, NegEx [9], may be applicable for all three features. NegEx uses two regular expressions (RE) to determine whether an indexed condition is negated: RE1: &lt;trigger term&gt; &lt;5w&gt; &lt;indexed term&gt; RE2: &lt;indexed term&gt; &lt;5w&gt; &lt;trigger term&gt; &lt;5w&gt; represents five words (a word can be a single word or a UMLS concept), and the text matched by this pattern is called the scope. NegEx relies on three types of terms to determine whether a condition is negated: trigger terms, pseudotrigger terms, and termination terms. Trigger terms such as “no” and “denies” indicate that the clinical conditions that fall within the scope of</context>
<context position="19560" citStr="[9]" startWordPosition="2993" endWordPosition="2993"> NegEx algorithm for determining the values of two additional contextual features—Temporality and Experiencer. ConText performed with very high recall and precision when determining whether a condition was negated, and demonstrated moderate to high performance on the other features. Recall: Precision : Precision 95% CI 85 We performed an informal error analysis, which not only isolates ConText’s errors but also points out future research directions in contextual feature identification. 5.1 Negation ConText’s negation identification performed substantially better than NegEx’s published results [9], even though ConText is very similar to NegEx and uses the same trigger terms. Several possible explanations exist for this boost in performance. First, our study evaluated negation identification in ED reports, whereas the referenced study on NegEx applied to discharge summaries. Second, ConText only applied to 55 clinical conditions, rather than the large set of UMLS concepts in the NegEx study. Third, the conditions indexed by SySTR that act as input to ConText are sometimes negated or affirmed before ConText sees them. For some conditions, SySTR addresses internal negation in a word (e.g.</context>
</contexts>
<marker>9.</marker>
<rawString>Chapman WW, Bridewell W, Hanbury P, Cooper GF, Buchanan BG. A simple algorithm for identifying negated findings and diseases in discharge summaries. J Biomed Inform 2001;34(5):301-10.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Elkin PL</author>
<author>Brown SH</author>
<author>Bauer BA</author>
<author>Husser CS</author>
<author>W Carruth</author>
<author>Bergstrom LR</author>
</authors>
<title>A controlled trial of automated classification of negation from clinical notes.</title>
<journal>BMC Med Inform Decis Mak</journal>
<volume>5</volume>
<issue>1</issue>
<contexts>
<context position="2609" citStr="[8, 9, 10, 11, 12]" startWordPosition="367" endWordPosition="367">oped an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and </context>
</contexts>
<marker>10.</marker>
<rawString>Elkin PL, Brown SH, Bauer BA, Husser CS, Carruth W, Bergstrom LR, et al. A controlled trial of automated classification of negation from clinical notes. BMC Med Inform Decis Mak 2005;5(1):13.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Herman</author>
<author>M Matters</author>
<author>W Walop</author>
<author>B Law</author>
<author>W Tong</author>
<author>F Liu</author>
</authors>
<title>Concept negation in free text components of vaccine safety reports. AMIA Annu Symp Proc</title>
<date>2006</date>
<contexts>
<context position="2609" citStr="[8, 9, 10, 11, 12]" startWordPosition="367" endWordPosition="367">oped an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and </context>
</contexts>
<marker>11.</marker>
<rawString>Herman T, Matters M, Walop W, Law B, Tong W, Liu F, et al. Concept negation in free text components of vaccine safety reports. AMIA Annu Symp Proc 2006:1122.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Huang</author>
<author>Lowe HJ</author>
</authors>
<title>A Novel Hybrid Approach to Automated Negation Detection in Clinical Radiology Reports.</title>
<date>2007</date>
<journal>J Am Med Inform Assoc</journal>
<contexts>
<context position="2609" citStr="[8, 9, 10, 11, 12]" startWordPosition="367" endWordPosition="367">oped an algorithm called ConText for identifying three contextual features relevant for biosurveillance from emergency department (ED) reports and evaluated its performance compared to physician annotation of the features. 2 Background 2.1 Encoding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and </context>
</contexts>
<marker>12.</marker>
<rawString>Huang Y, Lowe HJ. A Novel Hybrid Approach to Automated Negation Detection in Clinical Radiology Reports. J Am Med Inform Assoc 2007.</rawString>
</citation>
<citation valid="false">
<authors>
<author>G Hripcsak</author>
<author>L Zhou</author>
<author>S Parsons</author>
<author>Das AK</author>
<author>Johnson SB</author>
</authors>
<title>Modeling electronic discharge summaries as a simple temporal constraint satisfaction problem.</title>
<journal>J Am Med Inform Assoc</journal>
<pages>2005--12</pages>
<contexts>
<context position="2842" citStr="[13, 14]" startWordPosition="398" endWordPosition="399">oding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translation</context>
<context position="23575" citStr="[13]" startWordPosition="3644" endWordPosition="3644">onText falsely classified Non-pleuritic Chest Pain as historical in “awoken at approximately 2:45 with chest pressure,” because ConText’s temporal quantifiers do not account for time of the day. Also, even though ConText’s temporal quantifiers include the pattern “last x weeks,” x represents a digit and thus didn’t match the phrase “intermittent cough the last couple of weeks.” We were hoping that identifying historical conditions would not require detailed modeling of temporal information, but our results suggest otherwise. We will explore the temporal categories derived by Hripcsak and Zhou [13] for discharge summaries to expand ConText’s ability to identify temporal measurement triggers. Hypothetical. ConText demonstrated 83% recall and 94% precision when classifying a condition as hypothetical rather than recent. Again, missing trigger terms (e.g., “returning” and “look out for”) and termination terms (e.g., “diagnosis”) caused errors. The chief cause of false negatives was ter86 minating the scope of a trigger term too early. For instance, in the sentence “She knows to return to the ED if she has anginal type chest discomfort which was discussed with her, shortness of breath, and </context>
</contexts>
<marker>13.</marker>
<rawString>Hripcsak G, Zhou L, Parsons S, Das AK, Johnson SB. Modeling electronic discharge summaries as a simple temporal constraint satisfaction problem. J Am Med Inform Assoc 2005;12(1):55-63.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Zhou</author>
<author>Melton GB</author>
<author>S Parsons</author>
<author>G Hripcsak</author>
</authors>
<title>A temporal constraint structure for extracting temporal information from clinical narrative.</title>
<date>2005</date>
<journal>J Biomed Inform</journal>
<contexts>
<context position="2842" citStr="[13, 14]" startWordPosition="398" endWordPosition="399">oding Contextual Information fromClinical Texts NLP systems designed to encode detailed information from clinical reports, such as MedLEE [1], MPLUS [7], and MedSyndikate [4], encode contextual features such as negation, uncertainty, change over time, and severity. Over the last ten years, several negation algorithms have been described in the literature [8, 9, 10, 11, 12]. Recently, researchers at Columbia University have categorized temporal expressions in clinical narrative text and evaluated a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translation</context>
</contexts>
<marker>14.</marker>
<rawString>Zhou L, Melton GB, Parsons S, Hripcsak G. A temporal constraint structure for extracting temporal information from clinical narrative. J Biomed Inform 2005.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Chapman WW</author>
<author>Dowling JN</author>
<author>Wagner MM</author>
</authors>
<title>Classification of emergency department chief complaints into seven syndromes: a retrospective analysis of 527,228 patients.</title>
<journal>Ann Emerg Med</journal>
<pages>2005--46</pages>
<contexts>
<context position="3351" citStr="[15, 16, 17, 18]" startWordPosition="474" endWordPosition="474">a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translational, and clinical language processing, pages 81–88, Prague, June 2007. c�2007 Association for Computational Linguistics tion that may be useful for syndromic surveillance. We are developing NLP-based methods for identifying clinical conditions from ED reports. 2.3 SySTR We are developing an NLP application called SySTR (Syndromic Surveillance from Textual Records). It currently uses free-text descriptions of clinical conditions in ED reports to determine whether the patient has an acute lower respiratory </context>
</contexts>
<marker>15.</marker>
<rawString>Chapman WW, Dowling JN, Wagner MM. Classification of emergency department chief complaints into seven syndromes: a retrospective analysis of 527,228 patients. Ann Emerg Med 2005;46(5):445-455.</rawString>
</citation>
<citation valid="false">
<authors>
<author>O Ivanov</author>
<author>Wagner MM</author>
<author>Chapman WW</author>
<author>Olszewski RT</author>
</authors>
<title>Accuracy of three classifiers of acute gastrointestinal syndrome for syndromic surveillance.</title>
<booktitle>Proc AMIA Symp</booktitle>
<pages>2002--345</pages>
<contexts>
<context position="3351" citStr="[15, 16, 17, 18]" startWordPosition="474" endWordPosition="474">a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translational, and clinical language processing, pages 81–88, Prague, June 2007. c�2007 Association for Computational Linguistics tion that may be useful for syndromic surveillance. We are developing NLP-based methods for identifying clinical conditions from ED reports. 2.3 SySTR We are developing an NLP application called SySTR (Syndromic Surveillance from Textual Records). It currently uses free-text descriptions of clinical conditions in ED reports to determine whether the patient has an acute lower respiratory </context>
</contexts>
<marker>16.</marker>
<rawString>Ivanov O, Wagner MM, Chapman WW, Olszewski RT. Accuracy of three classifiers of acute gastrointestinal syndrome for syndromic surveillance. Proc AMIA Symp 2002:345-9.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chang HG</author>
<author>Cochrane DG</author>
<author>B Tserenpuntsag</author>
<author>Allegra JR</author>
<author>Smith PF</author>
</authors>
<title>ICD9 as a surrogate for chart review in the validation of a chief complaint syndromic surveillance system. In:</title>
<date>2005</date>
<booktitle>Syndromic Surveillance Conference</booktitle>
<location>Seattle, Washington;</location>
<contexts>
<context position="3351" citStr="[15, 16, 17, 18]" startWordPosition="474" endWordPosition="474">a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translational, and clinical language processing, pages 81–88, Prague, June 2007. c�2007 Association for Computational Linguistics tion that may be useful for syndromic surveillance. We are developing NLP-based methods for identifying clinical conditions from ED reports. 2.3 SySTR We are developing an NLP application called SySTR (Syndromic Surveillance from Textual Records). It currently uses free-text descriptions of clinical conditions in ED reports to determine whether the patient has an acute lower respiratory </context>
</contexts>
<marker>17.</marker>
<rawString>Chang HG, Cochrane DG, Tserenpuntsag B, Allegra JR, Smith PF. ICD9 as a surrogate for chart review in the validation of a chief complaint syndromic surveillance system. In: Syndromic Surveillance Conference Seattle, Washington; 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Beitel AJ</author>
<author>Olson KL</author>
<author>Reis BY</author>
<author>Mandl KD</author>
</authors>
<title>Use of emergency department chief complaint and diagnostic codes for identifying respiratory illness in a pediatric population. Pediatr Emerg Care</title>
<date>2004</date>
<contexts>
<context position="3351" citStr="[15, 16, 17, 18]" startWordPosition="474" endWordPosition="474">a temporal constraint structure designed to model the temporal information for discharge summaries [13, 14]. ConText differs from most other work in this area by providing a stand-alone algorithm that can be integrated with any application that indexes clinical conditions from text. 2.2 Biosurveillance from ED Data Biosurveillance and situational awareness are imperative research issues in today’s world. State-ofthe-art surveillance systems rely on chief complaints and ICD-9 codes, which provide limited clinical information and have been shown to perform with only fair to moderate sensitivity [15, 16, 17, 18]. ED reports are a timely source of clinical informa81 BioNLP 2007: Biological, translational, and clinical language processing, pages 81–88, Prague, June 2007. c�2007 Association for Computational Linguistics tion that may be useful for syndromic surveillance. We are developing NLP-based methods for identifying clinical conditions from ED reports. 2.3 SySTR We are developing an NLP application called SySTR (Syndromic Surveillance from Textual Records). It currently uses free-text descriptions of clinical conditions in ED reports to determine whether the patient has an acute lower respiratory </context>
</contexts>
<marker>18.</marker>
<rawString>Beitel AJ, Olson KL, Reis BY, Mandl KD. Use of emergency department chief complaint and diagnostic codes for identifying respiratory illness in a pediatric population. Pediatr Emerg Care 2004;20(6):355-60.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Chapman WW</author>
<author>M Fiszman</author>
<author>Dowling JN</author>
<author>Chapman BE</author>
<author>Rindflesch TC</author>
</authors>
<title>Identifying respiratory findings in emergency department reports for biosurveillance using MetaMap. Medinfo</title>
<date>2004</date>
<contexts>
<context position="4152" citStr="[19]" startWordPosition="587" endWordPosition="587"> Linguistics tion that may be useful for syndromic surveillance. We are developing NLP-based methods for identifying clinical conditions from ED reports. 2.3 SySTR We are developing an NLP application called SySTR (Syndromic Surveillance from Textual Records). It currently uses free-text descriptions of clinical conditions in ED reports to determine whether the patient has an acute lower respiratory syndrome. We previously identified 55 clinical conditions (e.g. cough, pneumonia, oxygen desaturation, wheezing) relevant for determining whether a patient has an acute lower respiratory condition [19]. SySTR identifies instances of these 55 clinical conditions in ED reports to determine if a patient has an acute lower respiratory syndrome. SySTR has four modules: (1) Index each instance of the 55 clinical conditions in an ED report; (2) For each indexed instance of a clinical condition, assign values to three contextual features; (3) Integrate the information from indexed instances to determine whether each of the 55 conditions are acute, chronic, or absent; (4) Use the values of the 55 conditions to determine whether a patient has an acute lower respiratory syndrome. We built SySTR on top</context>
<context position="15968" citStr="[19]" startWordPosition="2426" endWordPosition="2426">in internal medicine and infectious diseases with 30 years of experience generated manual annotations for the development and test reports. He used GATE (http://gate.ac.uk/) to highlight every indiPatient, who, his, her, patient’s But, however, yet, though, although, aside from 84 vidual annotation in the text referring to any of the 55 clinical conditions. For every annotation, he assigned values to the three contextual features, as shown in Figure 1. Previous experience in annotating the 55 conditions showed that a single physician was inadequate for generating a reliable reference standard [19]. The main mistake made by a single physician was not marking a concept that existed in the text. We used NLP-assisted review to improve physician annotations by comparing the single physician’s annotations to those made by SySTR. The physician reviewed disagreements and made changes to his original annotations if he felt his original annotation was incorrect. A study by Meystre and Haug [22] used a similar NLP-assisted review methodology and showed that compared to a reference standard not using NLP-assisted review, their system had higher recall and the same precision. Figure 1. When the phy</context>
</contexts>
<marker>19.</marker>
<rawString>Chapman WW, Fiszman M, Dowling JN, Chapman BE, Rindflesch TC. Identifying respiratory findings in emergency department reports for biosurveillance using MetaMap. Medinfo 2004;2004:487-91.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Mitchell KJ</author>
<author>Becich MJ</author>
<author>Berman JJ</author>
<author>Chapman WW</author>
<author>J Gilbertson</author>
<author>D Gupta</author>
</authors>
<title>Implementation and evaluation of a negation tagger in a pipeline-based system for information extraction from pathology reports.</title>
<journal>Medinfo</journal>
<pages>2004--2004</pages>
<contexts>
<context position="4789" citStr="[20]" startWordPosition="698" endWordPosition="698">hese 55 clinical conditions in ED reports to determine if a patient has an acute lower respiratory syndrome. SySTR has four modules: (1) Index each instance of the 55 clinical conditions in an ED report; (2) For each indexed instance of a clinical condition, assign values to three contextual features; (3) Integrate the information from indexed instances to determine whether each of the 55 conditions are acute, chronic, or absent; (4) Use the values of the 55 conditions to determine whether a patient has an acute lower respiratory syndrome. We built SySTR on top of an application called caTIES [20], which comprises a GATE pipeline of processing resources (http://gate.ac.uk/). Module 1 uses MetaMap [5] to index UMLS concepts in the text and then maps the UMLS concepts to the 55 clinical conditions. For instance, Module 1 would identify the clinical condition Dyspnea in the sentence “Patient presents with a 3 day history of shortness of breath.” For each instance of the 55 conditions identified by Module 1, Module 2 assigns values to three contextual features: Negation (negated, affirmed); Temporality (historical, recent, hypothetical); and Experiencer (patient, other). For the sentence a</context>
</contexts>
<marker>20.</marker>
<rawString>Mitchell KJ, Becich MJ, Berman JJ, Chapman WW, Gilbertson J, Gupta D, et al. Implementation and evaluation of a negation tagger in a pipeline-based system for information extraction from pathology reports. Medinfo 2004;2004:663-7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Chu</author>
<author>Dowling JN</author>
<author>Chapman WW</author>
</authors>
<title>Evaluating the effectiveness of four contextual features in classifying annotated clinical conditions in emergency department reports. AMIA Annu Symp Proc</title>
<date>2006</date>
<contexts>
<context position="5586" citStr="[21]" startWordPosition="816" endWordPosition="816">onditions. For instance, Module 1 would identify the clinical condition Dyspnea in the sentence “Patient presents with a 3 day history of shortness of breath.” For each instance of the 55 conditions identified by Module 1, Module 2 assigns values to three contextual features: Negation (negated, affirmed); Temporality (historical, recent, hypothetical); and Experiencer (patient, other). For the sentence above, Module 2 would assign Dyspnea the following contextual features and their values: Negation—affirmed; Temporality—recent; Experiencer—patient. Module 3, as described in Chu and colleagues [21], resolves contradictions among multiple instances of clinical conditions, removes conditions not experienced by the patient, and assigns a final value of acute, chronic, or absent to each of the 55 conditions. Module 4 uses machine learning models to determine whether a patient has acute lower respiratory syndrome based on values of the conditions. The objective of this study was to evaluate an algorithm for identifying the contextual information generated by Module 2. 3 Methods We developed an algorithm called ConText for determining the values for three contextual features of a clinical con</context>
<context position="7072" citStr="[21]" startWordPosition="1046" endWordPosition="1046">erms, and scope termination terms that are specific to the type of contextual feature being identified. Below we describe the three contextual features addressed by the algorithm, details of how ConText works, and our evaluation of ConText. 3.1 Three Contextual Features Determining whether a patient had an acute episode of a clinical condition, such as cough, potentially involves information described in the context of the clinical condition in the text. We performed a pilot study to learn which contextual features affected classification of 55 clinical conditions as acute, chronic, or absent [21]. The pilot study identified which contextual features were critical for our task and reduced the number of values we initially used. The contextual features for each indexed clinical condition are assigned default values. ConText changes the values if the condition falls within the scope of a relevant trigger term. Below, we describe the contextual features (default values are in parentheses). (1) Negation (affirmed): ConText determines whether a condition is negated, as in “No fever.” (2) Temporality (recent): ConText can change Temporality to historical or hypothetical. In its current imple</context>
</contexts>
<marker>21.</marker>
<rawString>Chu D, Dowling JN, Chapman WW. Evaluating the effectiveness of four contextual features in classifying annotated clinical conditions in emergency department reports. AMIA Annu Symp Proc 2006:141-5.</rawString>
</citation>
<citation valid="false">
<authors>
<author>S Meystre</author>
<author>Haug PJ</author>
</authors>
<title>Natural language processing to extract medical problems from electronic clinical documents: performance evaluation.</title>
<journal>J Biomed Inform</journal>
<pages>2006--39</pages>
<contexts>
<context position="16363" citStr="[22]" startWordPosition="2492" endWordPosition="2492">alues to the three contextual features, as shown in Figure 1. Previous experience in annotating the 55 conditions showed that a single physician was inadequate for generating a reliable reference standard [19]. The main mistake made by a single physician was not marking a concept that existed in the text. We used NLP-assisted review to improve physician annotations by comparing the single physician’s annotations to those made by SySTR. The physician reviewed disagreements and made changes to his original annotations if he felt his original annotation was incorrect. A study by Meystre and Haug [22] used a similar NLP-assisted review methodology and showed that compared to a reference standard not using NLP-assisted review, their system had higher recall and the same precision. Figure 1. When the physician highlights text, GATE provides a drop-down menu to select the Clinical Condition and the values of the Contextual Features. Outcome Measures. For each contextual feature assigned to an annotation, we compared ConText’s value to the value assigned by the reference standard. We classified the feature as a true positive (TP) if ConText correctly changed the condition’s default value and a</context>
</contexts>
<marker>22.</marker>
<rawString>Meystre S, Haug PJ. Natural language processing to extract medical problems from electronic clinical documents: performance evaluation. J Biomed Inform 2006;39(6):589-99.</rawString>
</citation>
<citation valid="true">
<authors>
<author>I Goldin</author>
<author>Chapman WW</author>
</authors>
<title>Learning to detect negation with &apos;not&apos; in medical texts. In:</title>
<date>2003</date>
<booktitle>Proc Workshop on Text Analysis and Search for Bioinformatics at the 26th Annual International ACM SIGIR Conference (SIGIR2003);</booktitle>
<contexts>
<context position="21471" citStr="[23]" startWordPosition="3298" endWordPosition="3298"> Several false negatives resulted from the interaction between ConText and SySTR’s mapping rules. For example, in the sentence “chest wall is without tenderness,” SySTR maps the UMLS concepts for “chest wall” and “tenderness” to the condition Chest Wall Tenderness. In such a case, the negation trigger term “without” is caught between the two UMLS concepts. Therefore, RE1 does not match, and ConText does not change the default from affirmed. False positive negations resulted from our not integrating the rule described in NegEx that a concept preceded by a definite article should not be negated [23] (e.g., “has not been on steroids for his asthma”) and from descriptions in the text whose Negation status is even difficult for humans to determine, such as “no vomiting without having the cough” and “patient does not know if she has a fever.” 5.2 Temporality Historical. ConText identified historical conditions with 67% sensitivity and 74% precision. Identifying historical conditions appears simple on the surface, but is a complex problem. The single trigger term “history” is used for many of the historical conditions, but the word “history” is a relative term that can indicate a history of y</context>
</contexts>
<marker>23.</marker>
<rawString>Goldin I, Chapman WW. Learning to detect negation with &apos;not&apos; in medical texts. In: Proc Workshop on Text Analysis and Search for Bioinformatics at the 26th Annual International ACM SIGIR Conference (SIGIR2003); 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Chu</author>
</authors>
<title>Clinical feature extraction from emergency department reports for biosurveillance [Master&apos;s Thesis].</title>
<date>2007</date>
<institution>University of Pittsburgh;</institution>
<location>Pittsburgh:</location>
<contexts>
<context position="26914" citStr="[24]" startWordPosition="4172" endWordPosition="4172">fically, we allowed the physician to use the entire report to determine whether a condition was historical, which caused him to mark recent exacerbations of historical conditions as historical. A second physician is in the process of annotating the test set. The two physicians will come to consensus on their classifications in generating a new reference standard. How good contextual feature identification has to be depends largely on the intended application. We tested SySTR’s ability to determine whether the 55 clinical conditions were acute, chronic, or absent on a subset of 30 test reports [24]. SySTR made 51 classification errors, 22 of which were due to ConText’s mistakes. In spite of the errors, SySTR demonstrated a kappa of 0.85 when compared to physician classifications, suggesting that because of redundancy in clinical reports, ConText’s mistakes may not have a substantial adverse effect on SySTR’s final output. 5.5 Conclusion We evaluated a regular-expression-based algorithm for determining the status of three contextual features in ED reports and found that ConText performed very well at identifying negated conditions, fairly well at determining whether conditions were hypot</context>
</contexts>
<marker>24.</marker>
<rawString>Chu D. Clinical feature extraction from emergency department reports for biosurveillance [Master&apos;s Thesis]. Pittsburgh: University of Pittsburgh; 2007.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>