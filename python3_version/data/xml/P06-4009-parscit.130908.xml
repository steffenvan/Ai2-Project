<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.003706">
<title confidence="0.9996955">
An Intermediate Representation for
the Interpretation of Temporal Expressions
</title>
<author confidence="0.994968">
Paweł Mazur and Robert Dale
</author>
<affiliation confidence="0.9937385">
Centre for Language Technology
Macquarie University
</affiliation>
<address confidence="0.72586">
NSW 2109 Sydney Australia
</address>
<email confidence="0.99881">
{mpawel,rdale}@ics.mq.edu.au
</email>
<sectionHeader confidence="0.993895" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999909666666667">
The interpretation of temporal expressions
in text is an important constituent task for
many practical natural language process-
ing tasks, including question-answering,
information extraction and text summari-
sation. Although temporal expressions
have long been studied in the research
literature, it is only more recently, with
the impetus provided by exercises like
the ACE Program, that attention has been
directed to broad-coverage, implemented
systems. In this paper, we describe our
approach to intermediate semantic repre-
sentations in the interpretation of temporal
expressions.
</bodyText>
<sectionHeader confidence="0.998993" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.998974333333333">
In this paper, we are concerned with the interpreta-
tion of temporal expressions in text: that is, given
an occurrence in a text of an expression like that
marked in italics in the following example, we
want to determine what point in time is referred
to by that expression.
</bodyText>
<listItem confidence="0.510001">
(1) We agreed that we would meet at 3pm on
</listItem>
<bodyText confidence="0.992999888888889">
the first Tuesday in November.
In this particular case, we need to make use of the
context of utterance to determine which November
is being referred to; this might be derived on the
basis of the date stamp of the document contain-
ing this sentence. Then we need to compute the
full time and date the expression corresponds to.
If the utterance in (1) was produced, say, in July
2006, then we might expect the interpretation to be
equivalent to the ISO-format expression 2006-11-
07T15:00.1 The derivation of such interpretation
was the focus of the TERN evaluations held under
the ACE program. Several teams have developed
systems which attempt to interpret both simple and
much more complex temporal expressions; how-
ever, there is very little literature that describes in
any detail the approaches taken. This may be due
to a perception that such expressions are relatively
easy to identify and interpret using simple pat-
terns, but a detailed analysis of the range of tem-
poral expressions that are covered by the TIDES
annotation guidelines demonstrates that this is not
the case. In fact, the proper treatment of some tem-
poral expressions requires semantic and pragmatic
processing that is considerably beyond the state of
the art.
Our view is that it is important to keep in mind
a clear distinction between, on the one hand, the
conceptual model of temporal entities that a partic-
ular approach adopts; and, on the other hand, the
specific implementation of that model that might
be developed for a particular purpose. In this pa-
per, we describe both our underlying framework,
and an implementation of that framework. We be-
lieve the framework provides a basis for further
development, being independent of any particular
implementation, and able to underpin many dif-
ferent implementations. By clearly separating the
underlying model and its implementation, this also
opens the door to clearer comparisons between
different approaches.
We begin by summarising existing work in the
area in Section 2; then, in Section 3, we describe
our underlying model; in Section 4, we describe
how this model is implemented in the DANTE
</bodyText>
<footnote confidence="0.562021">
1Clearly, other aspects of the document context might
suggest a different year is intended; and we might also add
the time zone to this value.
</footnote>
<page confidence="0.990843">
33
</page>
<bodyText confidence="0.580856">
Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 33–36,
Sydney, July 2006. c�2006 Association for Computational Linguistics
system.2
</bodyText>
<sectionHeader confidence="0.918234" genericHeader="method">
2 Relation to Existing Work
</sectionHeader>
<bodyText confidence="0.99990785">
The most detailed system description in the pub-
lished literature is that of the Chronos system from
ITC-IRST (Negri and Marseglia, 2005). This sys-
tem uses a large set of hand-crafted rules, and
separates the recognition of temporal expressions
from their interpretation. The ATEL system de-
veloped by the Center for Spoken Language Re-
search (CSLR) at University of Colorado (see (Ha-
cioglu et al., 2005)) uses SVM classifiers to detect
temporal expressions. Alias-i’s LingPipe also re-
ported results for extraction, but not interpretation,
of temporal expressions at TERN 2004.
In contrast to this collection of work, which
comes at the problem from a now-traditional in-
formation extraction perspective, there is also of
course an extensive prior literature on the semantic
of temporal expressions. Some more recent work
attempts to bridge the gap between these two re-
lated enterprises; see, for example, Hobbs and Pan
(2004).
</bodyText>
<sectionHeader confidence="0.995574" genericHeader="method">
3 The Underlying Model
</sectionHeader>
<bodyText confidence="0.999881666666667">
We describe briefly here our underlying concep-
tual model; a more detailed description is provided
in (Dale and Mazur, 2006).
</bodyText>
<subsectionHeader confidence="0.993777">
3.1 Processes
</subsectionHeader>
<bodyText confidence="0.999363235294118">
We take the ultimate goal of the interpretation of
temporal expressions to be that of computing, for
each temporal expression in a text, the point in
time or duration that is referred to by that expres-
sion. We distinguish two stages of processing:
Recognition: the process of identifying a tempo-
ral expression in text, and determining its ex-
tent.
Interpretation: given a recognised temporal ex-
pression, the process of computing the value
of the point in time or duration referred to by
that expression.
In practice, the processes involved in determining
the extent of a temporal expression are likely to
make use of lexical and phrasal knowledge that
mean that some of the semantics of the expres-
sion can already be computed. For example, in
</bodyText>
<footnote confidence="0.929891">
2DANTE stands for Detection and Normalisation of Tem-
poral Expressions.
</footnote>
<bodyText confidence="0.999916818181818">
order to identify that an expression refers to a day
of the week, we will in many circumstances need
to recognize whether one of the specific expres-
sions {Monday, Tuesday, ... Sunday} has been
used; but once we have recognised that a specific
form has been used, we have effectively computed
the semantics of that part of the expression.
To maintain a strong separation between recog-
nition and interpretation, one could simply recom-
pute this partial information in the interpretation
phase; this would, of course, involve redundancy.
However, we take the view that the computation
of partial semantics in the first step should not be
seen as violating the strong separation; rather, we
distinguish the two steps of the process in terms of
the extent to which they make use of contextual in-
formation in computing values. Then, recognition
is that phase which makes use only of expression-
internal information and preposition which pre-
cedes the expression in question; and interpreta-
tion is that phase which makes use of arbitrarily
more complex knowledge sources and wider doc-
ument context. In this way, we motivate an in-
termediate form of representation that represents a
‘context-free’ semantics of the expression.
The role of the recognition process is then to
compute as much of the semantic content of a tem-
poral expression as can be determined on the basis
of the expression itself, producing an intermediate
partial representation of the semantics. The role of
the interpretation process is to ‘fill in’ any gaps in
this representation by making use of information
derived from the context.
</bodyText>
<subsectionHeader confidence="0.998619">
3.2 Data Types
</subsectionHeader>
<bodyText confidence="0.9999336">
We view the temporal world as consisting of two
basic types of entities, these being points in time
and durations; each of these has an internal hi-
erarchical structure. It is convenient to represent
these as feature structures like the following:3
</bodyText>
<equation confidence="0.951507333333333">
(2) ⎡ ⎤
point ⎡ ⎤
⎢ ⎥
⎢DAY 11 ⎥
⎢ ⎣ ⎦ ⎥
⎢MONTH 6
DATE ⎥
⎢ ⎥
⎢YEAR 2005 ⎥
⎢ ⎡ ⎤ ⎥
⎢HOUR 3 ⎥
⎢ ⎥
⎣ ⎣
TIME MINUTE 00 ⎦ ⎦
AMPM pm
</equation>
<footnote confidence="0.99274">
3For reasons of limitations of space, we will ignore dura-
tions in the present discussion; their representation is similar
in spirit to the examples provided here.
</footnote>
<page confidence="0.997449">
34
</page>
<bodyText confidence="0.999937777777778">
Our choice of attribute–value matrices is not ac-
cidental; in particular, some of the operations we
want to carry out on the interpretations of both
partial and complete temporal expressions can be
conveniently expressed via unification, and this
representation is a very natural one for such op-
erations.
This same representation can be used to indi-
cate the interpretation of a temporal expression at
various stages of processing, as outlined below. In
particular, note that temporal expressions differ in
their explicitness, i.e. the extent to which the in-
terpretation of the expression is explicitly encoded
in the temporal expression; they also differ in their
granularity, i.e. the smallest temporal unit used
in defining that point in time or duration. So, for
example, in a temporal reference like November
11th, interpretation requires us to make explicit
some information that is not present (that is, the
year); but it does not require us to provide a time,
since this is not required for the granularity of the
expression.
In our attribute–value matrix representation, we
use a special NULL value to indicate granularities
that are not required in providing a full interpre-
tation; information that is not explicitly provided,
on the other hand, is simply absent from the rep-
resentation, but may be added to the structure dur-
ing later stages of interpretation. So, in the case
of an expression like November 11th, the recogni-
tion process may construct a partial interpretation
of the following form:
The interpretation process may then monotoni-
cally augment this structure with information from
the context that allows the interpretation to be
made fully explicit:
</bodyText>
<equation confidence="0.84880825">
(4) ⎡point ⎡
⎢ ⎢ ⎢ ⎣
⎢DATE
⎣
</equation>
<bodyText confidence="0.9999452">
The representation thus very easily accommodates
relative underspecification, and the potential for
further specification by means of unification, al-
though our implementation also makes use of
other operations applied to these structures.
</bodyText>
<sectionHeader confidence="0.99628" genericHeader="method">
4 Implementation
</sectionHeader>
<subsectionHeader confidence="0.994282">
4.1 Data Structures
</subsectionHeader>
<bodyText confidence="0.999940041666667">
We could implement the model above directly in
terms of recursive attribute–value structures; how-
ever, for our present purposes, it turns out to
be simpler to implement these structures using a
string-based notation that is deliberately consis-
tent with the representations for values used in the
TIMEX2 standard (Ferro et al., 2005). In that no-
tation, a time and date value is expressed using the
ISO standard; uppercase Xs are used to indicate
parts of the expression for which interpretation is
not available, and elements that should not receive
a value are left null (in the same sense as our NULL
value above). So, for example, in a context where
we have no way of ascertaining the century be-
ing referred to, the TIMEX2 representation of the
value of the underlined temporal expression in the
sentence We all had a great time in the ’60s is sim-
ply VAL=&amp;quot;XX6&amp;quot;.
We augment this representation in a number
of ways to allow us to represent intermediate
values generated during the recognition process;
these extensions to the representation then serve
as means of indicating to the interpretation process
what operations need to be carried out.
</bodyText>
<subsectionHeader confidence="0.944428">
4.1.1 Representing Partial Specification
</subsectionHeader>
<bodyText confidence="0.9996974">
We use lowercase xs to indicate values that the
interpretation process is required to seek a value
for; and by analogy, we use a lowercase t rather
than an uppercase T as the date–time delimiter in
the structure to indicate when the recogniser is not
able to determine whether the time is am or pm.
This is demonstrated in the following examples;
T-VAL is the attribute we use for intermediate
TIMEX values produced by the recognition pro-
cess.
</bodyText>
<listItem confidence="0.999905">
(5) a. We’ll see you in November.
b. T-VAL=&amp;quot;xxxx-11&amp;quot;
(6) a. I expect to see you at halfpast eight.
b. T-VAL=&amp;quot;xxxx-xx-xxt08:59&amp;quot;
(7) a. I saw him back in ’69.
b. T-VAL=&amp;quot;xx69&amp;quot;
(8) a. I saw him back in the ’60s.
b. TVAL=&amp;quot;xx6&amp;quot;
</listItem>
<subsectionHeader confidence="0.75718">
4.1.2 Representing Relative Specification
</subsectionHeader>
<bodyText confidence="0.9998705">
To handle the partial interpretation of relative date
and time expressions at the recognition stage, we
</bodyText>
<figure confidence="0.995621642857143">
point
rDAY 11
DATE MONTH 61
TIME NULL
(3) ⎡
⎢⎢
⎤
⎦⎥⎥
TIME NULL
DAY 11
MONTH 6
YEAR 2006
⎤
⎦⎥⎥⎥⎥
</figure>
<page confidence="0.997238">
35
</page>
<bodyText confidence="0.9998855">
use two extensions to the notation. The first pro-
vides for simple arithmetic over interpretations,
when combined with a reference date determined
from the context:
</bodyText>
<listItem confidence="0.99902625">
(9) a. We’ll see you tomorrow.
b. T-VAL=&amp;quot;+0000-00-01&amp;quot;
(10) a. We saw him last year.
b. T-VAL=&amp;quot;-0001&amp;quot;
</listItem>
<bodyText confidence="0.999914">
The second provides for expressions where a more
complex computation is required in order to deter-
mine the specific date or time in question:
</bodyText>
<listItem confidence="0.99902675">
(11) a. We’ll see him next Thursday.
b. T-VAL=&amp;quot;&gt;D4&amp;quot;
(12) a. We saw him last November.
b. T-VAL=&amp;quot;&lt;M11&amp;quot;
</listItem>
<subsectionHeader confidence="0.837214">
4.2 Processes
</subsectionHeader>
<bodyText confidence="0.99717975862069">
For the recognition process, we use a large collec-
tion of rules written in the JAPE pattern-matching
language provided within GATE (see (Cunning-
ham et al., 2002)). These return intermediate val-
ues of the forms described in the previous section.
Obviously other approaches to recognizing tem-
poral expressions and producing their intermedi-
ate values could be used; in DANTE, there is also
a subsequent check carried out by a dependency
parser to ensure that we have captured the full ex-
tent of the temporal expression.
DANTE’s interpretation process then does the
following. First it determines if the candidate tem-
poral expression identified by the recogniser is in-
deed a temporal expression; this is to deal with
cases where a particular word or phrase annotated
by the recognizer (such as time) can have both
temporal or non-temporal interpretations. Then,
for each candidate that really is a temporal expres-
sion, it computes the interpretation of that tempo-
ral expression.
This second step involves different operations
depending on the type of the intermediate value:
• Underspecified values like xxxx-11 are
combined with the reference date derived
from the document context, with temporal di-
rectionality (i.e., is this date in the future or
in the past?) being determined using tense
information from the host clause.
</bodyText>
<listItem confidence="0.950750285714286">
• Relative values like +0001 are combined
with the reference date in the obvious man-
ner.
• Relative values like &gt;D4 and &lt;M11 make
use of special purpose routines that know
about arithmetic for days and months, so that
the correct behaviour is observed.
</listItem>
<sectionHeader confidence="0.998266" genericHeader="conclusions">
5 Conclusions
</sectionHeader>
<bodyText confidence="0.999987416666667">
We have sketched an underlying conceptual model
for temporal expression interpretation, and pre-
sented an intermediate semantic representation
that is consistent with the TIMEX2 standard. We
are making available a corpus of examples tagged
with these intermediate representations; this cor-
pus is derived from the nearly 250 examples in
the TIMEX2 specification, thus demonstrating the
wide coverage of the representation. Our hope is
that this will encourage collaborative development
of tools based on this framework, and further de-
velopment of the conceptual framework itself.
</bodyText>
<sectionHeader confidence="0.999669" genericHeader="acknowledgments">
6 Acknowledgements
</sectionHeader>
<bodyText confidence="0.999844333333333">
We acknowledge the support of DSTO, the Aus-
tralian Defence Science and Technology Organi-
sation, in carrying out the work described here.
</bodyText>
<sectionHeader confidence="0.999107" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999880703703704">
H. Cunningham, D. Maynard, K. Bontcheva, and
V. Tablan. 2002. GATE: A framework and graphical
development environment for robust NLP tools and
applications. In Proceedings of the 40th Anniver-
sary Meeting of the ACL.
R. Dale and P. Mazur. 2006. Local semantics in the
interpretation of temporal expressions. In Proceed-
ings of the Coling/ACL2006 Workshop on Annotat-
ing and Reasoning about Time and Events.
L. Ferro, L. Gerber, I. Mani, B. Sundheim, and G. Wil-
son. 2005. TIDES 2005 Standard for the Anno-
tation of Temporal Expressions. Technical report,
MITRE, September.
K. Hacioglu, Y. Chen, and B. Douglas. 2005. Au-
tomatic Time Expression Labeling for English and
Chinese Text. In Alexander F. Gelbukh, editor,
Computational Linguistics and Intelligent Text Pro-
cessing, 6th International Conference, CICLing’05,
LNCS, pages 548–559. Springer.
Jerry R. Hobbs and Feng Pan. 2004. An ontology
of time for the semantic web. ACM Transactions
on Asian Language Information Processing, 3(1),
March.
M. Negri and L. Marseglia. 2005. Recognition and
Normalization of Time Expressions: ITC-irst at
TERN 2004. Technical Report WP3.7, Information
Society Technologies, February.
</reference>
<page confidence="0.998943">
36
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.960774">
<title confidence="0.99968">An Intermediate Representation for the Interpretation of Temporal Expressions</title>
<author confidence="0.999838">Paweł Mazur</author>
<author confidence="0.999838">Robert Dale</author>
<affiliation confidence="0.998738">Centre for Language Technology Macquarie University</affiliation>
<address confidence="0.988516">NSW 2109 Sydney Australia</address>
<abstract confidence="0.9983501875">The interpretation of temporal expressions in text is an important constituent task for many practical natural language processing tasks, including question-answering, information extraction and text summarisation. Although temporal expressions have long been studied in the research literature, it is only more recently, with the impetus provided by exercises like the ACE Program, that attention has been directed to broad-coverage, implemented systems. In this paper, we describe our approach to intermediate semantic representations in the interpretation of temporal expressions.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>H Cunningham</author>
<author>D Maynard</author>
<author>K Bontcheva</author>
<author>V Tablan</author>
</authors>
<title>GATE: A framework and graphical development environment for robust NLP tools and applications.</title>
<date>2002</date>
<booktitle>In Proceedings of the 40th Anniversary Meeting of the ACL.</booktitle>
<contexts>
<context position="12406" citStr="Cunningham et al., 2002" startWordPosition="2031" endWordPosition="2035">imple arithmetic over interpretations, when combined with a reference date determined from the context: (9) a. We’ll see you tomorrow. b. T-VAL=&amp;quot;+0000-00-01&amp;quot; (10) a. We saw him last year. b. T-VAL=&amp;quot;-0001&amp;quot; The second provides for expressions where a more complex computation is required in order to determine the specific date or time in question: (11) a. We’ll see him next Thursday. b. T-VAL=&amp;quot;&gt;D4&amp;quot; (12) a. We saw him last November. b. T-VAL=&amp;quot;&lt;M11&amp;quot; 4.2 Processes For the recognition process, we use a large collection of rules written in the JAPE pattern-matching language provided within GATE (see (Cunningham et al., 2002)). These return intermediate values of the forms described in the previous section. Obviously other approaches to recognizing temporal expressions and producing their intermediate values could be used; in DANTE, there is also a subsequent check carried out by a dependency parser to ensure that we have captured the full extent of the temporal expression. DANTE’s interpretation process then does the following. First it determines if the candidate temporal expression identified by the recogniser is indeed a temporal expression; this is to deal with cases where a particular word or phrase annotate</context>
</contexts>
<marker>Cunningham, Maynard, Bontcheva, Tablan, 2002</marker>
<rawString>H. Cunningham, D. Maynard, K. Bontcheva, and V. Tablan. 2002. GATE: A framework and graphical development environment for robust NLP tools and applications. In Proceedings of the 40th Anniversary Meeting of the ACL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Dale</author>
<author>P Mazur</author>
</authors>
<title>Local semantics in the interpretation of temporal expressions.</title>
<date>2006</date>
<booktitle>In Proceedings of the Coling/ACL2006 Workshop on Annotating and Reasoning about Time and Events.</booktitle>
<contexts>
<context position="4667" citStr="Dale and Mazur, 2006" startWordPosition="734" endWordPosition="737">sions. Alias-i’s LingPipe also reported results for extraction, but not interpretation, of temporal expressions at TERN 2004. In contrast to this collection of work, which comes at the problem from a now-traditional information extraction perspective, there is also of course an extensive prior literature on the semantic of temporal expressions. Some more recent work attempts to bridge the gap between these two related enterprises; see, for example, Hobbs and Pan (2004). 3 The Underlying Model We describe briefly here our underlying conceptual model; a more detailed description is provided in (Dale and Mazur, 2006). 3.1 Processes We take the ultimate goal of the interpretation of temporal expressions to be that of computing, for each temporal expression in a text, the point in time or duration that is referred to by that expression. We distinguish two stages of processing: Recognition: the process of identifying a temporal expression in text, and determining its extent. Interpretation: given a recognised temporal expression, the process of computing the value of the point in time or duration referred to by that expression. In practice, the processes involved in determining the extent of a temporal expre</context>
</contexts>
<marker>Dale, Mazur, 2006</marker>
<rawString>R. Dale and P. Mazur. 2006. Local semantics in the interpretation of temporal expressions. In Proceedings of the Coling/ACL2006 Workshop on Annotating and Reasoning about Time and Events.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Ferro</author>
<author>L Gerber</author>
<author>I Mani</author>
<author>B Sundheim</author>
<author>G Wilson</author>
</authors>
<title>Standard for the Annotation of Temporal Expressions.</title>
<date>2005</date>
<tech>TIDES</tech>
<contexts>
<context position="9957" citStr="Ferro et al., 2005" startWordPosition="1611" endWordPosition="1614"> ⎣ ⎢DATE ⎣ The representation thus very easily accommodates relative underspecification, and the potential for further specification by means of unification, although our implementation also makes use of other operations applied to these structures. 4 Implementation 4.1 Data Structures We could implement the model above directly in terms of recursive attribute–value structures; however, for our present purposes, it turns out to be simpler to implement these structures using a string-based notation that is deliberately consistent with the representations for values used in the TIMEX2 standard (Ferro et al., 2005). In that notation, a time and date value is expressed using the ISO standard; uppercase Xs are used to indicate parts of the expression for which interpretation is not available, and elements that should not receive a value are left null (in the same sense as our NULL value above). So, for example, in a context where we have no way of ascertaining the century being referred to, the TIMEX2 representation of the value of the underlined temporal expression in the sentence We all had a great time in the ’60s is simply VAL=&amp;quot;XX6&amp;quot;. We augment this representation in a number of ways to allow us to re</context>
</contexts>
<marker>Ferro, Gerber, Mani, Sundheim, Wilson, 2005</marker>
<rawString>L. Ferro, L. Gerber, I. Mani, B. Sundheim, and G. Wilson. 2005. TIDES 2005 Standard for the Annotation of Temporal Expressions. Technical report, MITRE, September.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Hacioglu</author>
<author>Y Chen</author>
<author>B Douglas</author>
</authors>
<title>Automatic Time Expression Labeling for English and Chinese Text.</title>
<date>2005</date>
<booktitle>Computational Linguistics and Intelligent Text Processing, 6th International Conference, CICLing’05, LNCS,</booktitle>
<pages>548--559</pages>
<editor>In Alexander F. Gelbukh, editor,</editor>
<publisher>Springer.</publisher>
<contexts>
<context position="3998" citStr="Hacioglu et al., 2005" startWordPosition="629" endWordPosition="633"> the time zone to this value. 33 Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 33–36, Sydney, July 2006. c�2006 Association for Computational Linguistics system.2 2 Relation to Existing Work The most detailed system description in the published literature is that of the Chronos system from ITC-IRST (Negri and Marseglia, 2005). This system uses a large set of hand-crafted rules, and separates the recognition of temporal expressions from their interpretation. The ATEL system developed by the Center for Spoken Language Research (CSLR) at University of Colorado (see (Hacioglu et al., 2005)) uses SVM classifiers to detect temporal expressions. Alias-i’s LingPipe also reported results for extraction, but not interpretation, of temporal expressions at TERN 2004. In contrast to this collection of work, which comes at the problem from a now-traditional information extraction perspective, there is also of course an extensive prior literature on the semantic of temporal expressions. Some more recent work attempts to bridge the gap between these two related enterprises; see, for example, Hobbs and Pan (2004). 3 The Underlying Model We describe briefly here our underlying conceptual mod</context>
</contexts>
<marker>Hacioglu, Chen, Douglas, 2005</marker>
<rawString>K. Hacioglu, Y. Chen, and B. Douglas. 2005. Automatic Time Expression Labeling for English and Chinese Text. In Alexander F. Gelbukh, editor, Computational Linguistics and Intelligent Text Processing, 6th International Conference, CICLing’05, LNCS, pages 548–559. Springer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Jerry R Hobbs</author>
<author>Feng Pan</author>
</authors>
<title>An ontology of time for the semantic web.</title>
<date>2004</date>
<journal>ACM Transactions on Asian Language Information Processing,</journal>
<volume>3</volume>
<issue>1</issue>
<contexts>
<context position="4519" citStr="Hobbs and Pan (2004)" startWordPosition="710" endWordPosition="713">e Center for Spoken Language Research (CSLR) at University of Colorado (see (Hacioglu et al., 2005)) uses SVM classifiers to detect temporal expressions. Alias-i’s LingPipe also reported results for extraction, but not interpretation, of temporal expressions at TERN 2004. In contrast to this collection of work, which comes at the problem from a now-traditional information extraction perspective, there is also of course an extensive prior literature on the semantic of temporal expressions. Some more recent work attempts to bridge the gap between these two related enterprises; see, for example, Hobbs and Pan (2004). 3 The Underlying Model We describe briefly here our underlying conceptual model; a more detailed description is provided in (Dale and Mazur, 2006). 3.1 Processes We take the ultimate goal of the interpretation of temporal expressions to be that of computing, for each temporal expression in a text, the point in time or duration that is referred to by that expression. We distinguish two stages of processing: Recognition: the process of identifying a temporal expression in text, and determining its extent. Interpretation: given a recognised temporal expression, the process of computing the valu</context>
</contexts>
<marker>Hobbs, Pan, 2004</marker>
<rawString>Jerry R. Hobbs and Feng Pan. 2004. An ontology of time for the semantic web. ACM Transactions on Asian Language Information Processing, 3(1), March.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Negri</author>
<author>L Marseglia</author>
</authors>
<title>Recognition and Normalization of Time Expressions: ITC-irst at TERN</title>
<date>2005</date>
<tech>Technical Report WP3.7,</tech>
<institution>Information Society Technologies,</institution>
<contexts>
<context position="3733" citStr="Negri and Marseglia, 2005" startWordPosition="586" endWordPosition="589">g work in the area in Section 2; then, in Section 3, we describe our underlying model; in Section 4, we describe how this model is implemented in the DANTE 1Clearly, other aspects of the document context might suggest a different year is intended; and we might also add the time zone to this value. 33 Proceedings of the COLING/ACL 2006 Interactive Presentation Sessions, pages 33–36, Sydney, July 2006. c�2006 Association for Computational Linguistics system.2 2 Relation to Existing Work The most detailed system description in the published literature is that of the Chronos system from ITC-IRST (Negri and Marseglia, 2005). This system uses a large set of hand-crafted rules, and separates the recognition of temporal expressions from their interpretation. The ATEL system developed by the Center for Spoken Language Research (CSLR) at University of Colorado (see (Hacioglu et al., 2005)) uses SVM classifiers to detect temporal expressions. Alias-i’s LingPipe also reported results for extraction, but not interpretation, of temporal expressions at TERN 2004. In contrast to this collection of work, which comes at the problem from a now-traditional information extraction perspective, there is also of course an extensiv</context>
</contexts>
<marker>Negri, Marseglia, 2005</marker>
<rawString>M. Negri and L. Marseglia. 2005. Recognition and Normalization of Time Expressions: ITC-irst at TERN 2004. Technical Report WP3.7, Information Society Technologies, February.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>