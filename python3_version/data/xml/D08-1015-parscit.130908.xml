<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<title confidence="0.970094">
Ranking Reader Emotions Using Pairwise Loss Minimization and
Emotional Distribution Regression
</title>
<author confidence="0.998122">
Kevin Hsin-Yih Lin and Hsin-Hsi Chen
</author>
<affiliation confidence="0.99619">
Department of Computer Science and Information Engineering
National Taiwan University
</affiliation>
<address confidence="0.939438">
No. 1 Roosevelt Rd. Sec. 4, Taipei, Taiwan
</address>
<email confidence="0.99295">
{f93141, hhchen}@csie.ntu.edu.tw
</email>
<sectionHeader confidence="0.998552" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999939">
This paper presents two approaches to ranking
reader emotions of documents. Past studies
assign a document to a single emotion cate-
gory, so their methods cannot be applied di-
rectly to the emotion ranking problem.
Furthermore, whereas previous research ana-
lyzes emotions from the writer’s perspective,
this work examines readers’ emotional states.
The first approach proposed in this paper
minimizes pairwise ranking errors. In the sec-
ond approach, regression is used to model
emotional distributions. Experiment results
show that the regression method is more ef-
fective at identifying the most popular emo-
tion, but the pairwise loss minimization
method produces ranked lists of emotions that
have better correlations with the correct lists.
</bodyText>
<sectionHeader confidence="0.999471" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.995039">
Emotion analysis is an increasingly popular re-
search topic due to the emergence of large-scale
emotion data on the web. Previous work primarily
studies emotional contents of texts from the
writer&apos;s perspective, where it is typically assumed
that a writer expresses only a single emotion in a
document. Unfortunately, this premise does not
hold when analyzing a document from the reader&apos;s
perspective, because readers rarely agree unani-
mously on the emotion that a document instills.
Figure 1 illustrates this phenomenon. In the figure,
</bodyText>
<figure confidence="0.985847">
40%
30%
20%
10%
0%
Emotion
</figure>
<figureCaption confidence="0.5887512">
Figure 1. Emotional responses of 626 people after read-
ing a Yahoo! News article about an Iranian refugee
mother and her two children who finally reunited with
their family in the March of 2007 after been stranded in
a Moscow airport for 10 months due to false passports.
</figureCaption>
<bodyText confidence="0.9977554">
readers’ responses are distributed among different
emotion categories. In fact, none of the emotions in
Figure 1 has a majority (i.e., more than 50%) of the
votes. Intuitively, it is better to provide a ranking
of emotions according to their popularity rather
than associating a single reader emotion with a
document. As a result, current writer-emotion
analysis techniques for classifying a document into
a single emotion category are not suitable for ana-
lyzing reader emotions. New methods capable of
ranking emotions are required.
Reader-emotion analysis has potential applica-
tions that differ from those of writer-emotion
analysis. For example, by integrating emotion
ranking into information retrieval, users will be
able to retrieve documents that contain relevant
contents and at the same time produce desired feel-
ings. In addition, reader-emotion analysis can as-
sist writers in foreseeing how their work will
influence readers emotionally.
</bodyText>
<figure confidence="0.3368545">
% of Readers
Heartwarming Happy Sad Surprising Angry Boring Awesome Useful
</figure>
<page confidence="0.982343">
136
</page>
<note confidence="0.962082">
Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 136–144,
Honolulu, October 2008.c�2008 Association for Computational Linguistics
</note>
<bodyText confidence="0.999930380952381">
In this paper, we present two approaches to
ranking reader emotions. The first approach is in-
spired by the success of the pairwise loss minimi-
zation framework used in information retrieval to
rank documents. Along a similar line, we devise a
novel scheme to minimize the number of incor-
rectly-ordered emotion pairs in a document. In the
second approach, regression is used to model
reader-emotion distributions directly. Experiment
results show that the regression method is more
effective at identifying the most popular emotion,
but the pairwise loss minimization method pro-
duces ordered lists of emotions that have better
correlations with the correct lists.
The rest of this paper is organized as follows.
Section 2 describes related work. In Section 3, de-
tails about the two proposed approaches are pro-
vided. Section 4 introduces the corpus and Section
5 presents how features are extracted from the cor-
pus. Section 6 shows the experiment procedures
and results. Section 7 concludes the paper.
</bodyText>
<sectionHeader confidence="0.999926" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.999913235294118">
Only a few studies in the past deal with the reader
aspect of emotion analysis. For example, Lin et al.
(2007; 2008) classify documents into reader-
emotion categories. Most previous work focuses
on the writer’s perspective. Pang et al. (2002) de-
sign an algorithm to determine whether a docu-
ment’s author expresses a positive or negative
sentiment. They discover that using Support Vec-
tor Machines (SVM) with word unigram features
results in the best performance. Since then, more
work has been done to find features better than
unigrams. In (Hu et al., 2005), word sentiment in-
formation is exploited to achieve better classifica-
tion accuracy.
Experiments have been done to extract emo-
tional information from texts at granularities finer
than documents. Wiebe (2000) investigates the
subjectivity of words, whereas Aman and Szpako-
wicz (2007) manually label phrases with emotional
categories. In 2007, the SemEval-2007 workshop
organized a task on the unsupervised annotation of
news headlines with emotions (Strapparava and
Mihalcea, 2007).
As for the task of ranking, many machine-
learning algorithms have been proposed in infor-
mation retrieval. These techniques generate rank-
ing functions which predict the relevance of a
document. One class of algorithms minimizes the
errors resulting from ordering document pairs in-
correctly. Examples include (Joachims, 2002),
(Freund et al., 2003) and (Qin et al., 2007). In par-
ticular, the training phase of the Joachims’ Rank-
ing SVM (Joachims, 2002) is formulated as the
following SVM optimization problem:
</bodyText>
<equation confidence="0.978575307692308">
min w,ξ, , w w
1 T +C ∑ i j k
ξ
, ,
i j k 2
subject to:
∈V S
I kJ &gt; sk,j
w (Φ(qk,di)−Φ(qk,dj))≥1−ξi,j,k (1)
∀ ∀ ∀
i j k : ξ ≥
i j k
, ,
</equation>
<bodyText confidence="0.636111">
where
the training corpus,
is the fea-
ture vector of document
with respect to query qk,
is the relevance score of
with respect to qk, w
is a weight vector, C is the SVM cost parameter,
and
are slack variables. The set of constraints
</bodyText>
<equation confidence="0.68646">
at (1) means that document pairwise orders should
be preserved.
</equation>
<bodyText confidence="0.983479714285714">
Unfortunately, the above scheme for exploiting
pairwise order information cannot be applied di-
rectly to the emotion ranking task, because the task
requires us to rank emotions within a document
rather than provide a ranking of documents. In par-
ticular, the definitions of
and
</bodyText>
<equation confidence="0.933218571428571">
V is
Φ(qk,di)
di
sk,i
di
ξi,j,k
Φ(qk,di),Φ(qk,dj),sk,i
</equation>
<bodyText confidence="0.998465666666667">
sk,j do not apply to emotion ranking. In the next
section, we will show how the pairwise loss mini-
mization concept is adapted for emotion ranking.
</bodyText>
<sectionHeader confidence="0.959807" genericHeader="method">
3 Ranking Reader Emotions
</sectionHeader>
<bodyText confidence="0.75529">
approach and the emotional distri
bution regression
(EDR) approach to ranking emotions.
</bodyText>
<equation confidence="0.766875">
0
</equation>
<bodyText confidence="0.991551666666667">
In this section, we provide the formal description
of the reader-emotion ranking problem. Then we
describe the pairwise loss minimization (PLM)
</bodyText>
<subsectionHeader confidence="0.999551">
3.1 Problem Specification
</subsectionHeader>
<bodyText confidence="0.9864875">
The reader emotion ranking problem is defined as
follows. Let D =
</bodyText>
<equation confidence="0.6562231">
..., dN} be the document
space, and E
e2, ...,
be the emotion
space. Let
: E
be the emotional probability
function of
That is,
outputs the fraction
</equation>
<bodyText confidence="0.841063">
of readers who experience emotion
</bodyText>
<footnote confidence="0.633740333333333">
after reading
document
Our goal is to find a function
</footnote>
<page confidence="0.407235">
D
</page>
<bodyText confidence="0.896322666666667">
such that
...,
where
</bodyText>
<equation confidence="0.995891684210526">
{d1,d2,
={e1,
eM}
fi
→ℜ
di∈D.
fi(ej)
ej
di.
r :
→EM
r(di)=(eπ(1),eπ(2),
eπ(M))
π is
,
)
dj
∀ (qk,di ), (qk
T
</equation>
<page confidence="0.968973">
137
</page>
<bodyText confidence="0.8010595">
a permutation on {1, 2, ..., M}, and fi(eπ(1)) ≥ fi(eπ(2))
≥ ... ≥ fi(eπ(M)).
</bodyText>
<subsectionHeader confidence="0.999449">
3.2 Pairwise Loss Minimization
</subsectionHeader>
<bodyText confidence="0.999607">
As explained in Section 2, the information retrieval
framework for exploiting pairwise order informa-
tion cannot be applied directly to the emotion rank-
ing problem. Hence, we introduce a novel
formulation of the emotion ranking problem into
an SVM optimization problem with constraints
based on pairwise loss minimization.
Whereas Ranking SVM generates only a single
ranking function, our method creates a pairwise
ranking function gjk : D → ℜ for each pair of emo-
tions ej and ek, aiming at satisfying the maximum
number of the inequalities:
</bodyText>
<equation confidence="0.9994765">
∀di∈D  |fi(ej) &gt; fi(ek) : gjk(di) &gt; 0
∀di∈D  |fi(ej) &lt; fi(ek) : gjk(di) &lt; 0
</equation>
<bodyText confidence="0.999635727272727">
In other words, we want to minimize the number of
incorrectly-ordered emotion pairs. We further re-
quire gjk(di) to have the linear form wTΩ(di) + b,
where w is a weight vector, b is a constant, and
Ω(di) is the feature vector of di. Details of feature
extraction will be presented in Section 5.
As Joachims (2002) points out, the above type
of problem is NP-Hard. However, an approximate
solution to finding gik can be obtained by solving
the following SVM optimization problem:
min b
</bodyText>
<equation confidence="0.933861333333333">
w , ξ i1 2wT w+C∑ξi
subject to:
∈ Q f e f e
 |( ) ( ) :
&gt;
i j i k
Q f e f e
 |( ) ( ) : ( ( ) )
T
∈ &lt; w
− Ω + ≥
d b
i j i k i
∀ ≥
i : ξ i
</equation>
<bodyText confidence="0.99954">
where C is the SVM cost parameter, ξi are slack
variables, and Q is the training corpus. We assume
each document di∈Q is labeled with fi(ej) for every
emotion ej∈E.
When formulated as an SVM optimization prob-
lem, finding gjk is equivalent to training an SVM
classifier for classifying a document into the ej or
ek category. Hence, we use LIBSVM, which is an
SVM implementation, to obtain the solution.1
</bodyText>
<footnote confidence="0.845744">
1 http://www.csie.ntu.edu.tw/~cjlin/libsvm/
</footnote>
<bodyText confidence="0.48536">
Input: Set of emotion ordered pairs P
</bodyText>
<listItem confidence="0.999126571428571">
1. G ← a graph with emotions as vertices and no edge
2. while (P ≠ ∅)
3. remove (ej,ek) with the highest confidence from P
4. if adding edge (ej,ek) to G produces a loop
5. then add (ek,ej) to G
6. else add (ej,ek) to G
7. return topological sort of G
</listItem>
<construct confidence="0.507939">
Algorithm 1. Merge Pairwise Orders.
</construct>
<bodyText confidence="0.999907631578947">
We now describe how we rank the emotions of a
previously unseen document using the M(M – 1)/2
pairwise ranking functions gjk created during the
training phase. First, all of the pairwise ranking
functions are applied to the unseen document,
which generates the relative orders of every pair of
emotions. These pairwise orders need to be com-
bined together to produce a ranked list of all the
emotions. Algorithm 1 does exactly this.
In Algorithm 1, the confidence of an emotion
ordered pair at Line 3 is the probability value re-
turned by a LIBSVM classifier for predicting the
order. LIBSVM’s method for generating this prob-
ability is described in (Wu et al., 2003). Lines 4
and 5 resolve the problem of conflicting emotion
ordered pairs forming a loop in the ordering of
emotions. The ordered list of emotions returned by
Algorithm 1 at Line 7 is the final output of the
PLM method.
</bodyText>
<subsectionHeader confidence="0.995769">
3.3 Emotional Distribution Regression
</subsectionHeader>
<bodyText confidence="0.9992494">
In the second approach to ranking emotions, we
use regression to model fi directly. A regression
function hj : D → ℜ is generated for each ej∈E by
learning from the examples (Ω(di), fi(ej)) for all
documents di in the training corpus.
Vector Regression (SVR), which is a regression
analysis technique based on SVM (Schölkopf et al.,
2000). We require hj to have the form wTΩ(di) + b.
Finding hj is equivalent to solving the following
optimization problem:
</bodyText>
<equation confidence="0.965055414634147">
1
min w w+ ∑ +
T C i
( ,1
ξ ξ ,2)
w , ξ ξ
b , ,1 , , 2 2 i
i i
subject to:
∀ ∈
d i
f e
( ) ( ( ) )
− Ω + ≥ −
wT d b ε ξ
i j i i,
( ( ) ) ( )
wTΩ + −
d b f e
i i j
∀ i: , 0
ξ ξ ≥
i , 1 i , 2
∀
di
∀
di
1
−
ξi
0
wTΩ + ≥ −
( ) 1
d b ξ The regression framework we adopt is Support
i i
:
Q
−
≥ε
ξi,
1
</equation>
<page confidence="0.9564575">
2
138
</page>
<figure confidence="0.963005833333333">
Number of News Articles 8000
6000
4000
2000
0
Percentage of Votes Received by Most Popular Emotion
</figure>
<figureCaption confidence="0.999059666666667">
Figure 2. News articles in the entire corpus grouped by
the percentage of votes received by the most popular
emotion.
</figureCaption>
<bodyText confidence="0.999896333333333">
where C is the cost parameter, s is the maximum
difference between the predicted and actual values
we wish to maintain, ξij and ξi,2 are slack variables,
and Q is the training corpus. To solve the above
optimization problem, we use SVMlight’s SVR im-
plementation.2
When ranking the emotions of a previously un-
seen document dk, we sort the emotions ejEE in
descending order of hj(dk).
</bodyText>
<sectionHeader confidence="0.983492" genericHeader="method">
4 Constructing the Corpus
</sectionHeader>
<bodyText confidence="0.99978904">
The training and test corpora used in this study
comprise Chinese news articles from Yahoo! Kimo
News3, which allows a user to cast a vote for one
of eight emotions to express how a news article
makes her feel. Each Yahoo! news article contains
a list of eight emotions at the bottom of the web-
page. A reader may select one of the emotions and
click on a submit button to submit the emotion. As
with many websites which collect user responses,
such as the Internet Movie Database, users are not
forced to submit their responses. After submitting a
response, the user can view a distribution of emo-
tions indicating how other readers feel about the
same article. Figure 1 shows the voting results of a
Yahoo! news article.
The eight available emotions are happy, sad,
angry, surprising, boring, heartwarming, awesome,
and useful. Useful is not a true emotion. Rather, it
means that a news article contains practical infor-
mation. The value fi(ej) is derived by normalizing
the number of votes for emotion ej in document di
by the total number votes in di.
The entire corpus consists of 37,416 news arti-
cles dating from January 24, 2007 to August 7,
2007. News articles prior to June 1, 2007 form the
</bodyText>
<footnote confidence="0.996807">
2 http://svmlight.joachims.org/
3 http://tw.news.yahoo.com
</footnote>
<bodyText confidence="0.999863111111111">
training corpus (25,975 articles), and the remaining
ones form the test corpus (11,441 articles). We
collect articles a week after their publication dates
to ensure that the vote counts have stabilized.
As mentioned earlier, readers rarely agree
unanimously on the emotion of a document. Figure
2 illustrates this. In 41% of all the news articles in
the entire corpus, the most popular emotion re-
ceives less than 60% of the votes.
</bodyText>
<sectionHeader confidence="0.984049" genericHeader="method">
5 Extracting Features
</sectionHeader>
<bodyText confidence="0.999949675675675">
After obtaining news articles, the next step is to
determine how to convert them into feature vectors
for SVM and SVR. That is, we want to instantiate
fl. For this purpose, three types of features are ex-
tracted.
The first feature type consists of Chinese charac-
ter bigrams, which are taken from the headline and
content of each news article. The presence of a bi-
gram is indicated by a binary feature value.
Chinese words form the second type of features.
Unlike English words, consecutive Chinese words
in a sentence are not separated by spaces. To deal
with this problem, we utilize Stanford NLP
Group’s Chinese word segmenter to split a sen-
tence into words.4 As in the case of bigrams, bi-
nary feature values are used.
We use character bigram features in addition to
word features to increase the coverage of Chinese
words. A Chinese word is formed by one or more
contiguous Chinese characters. As mentioned ear-
lier, Chinese words in a sentence are not separated
by any boundary symbol (e.g., a space), so a Chi-
nese word segmentation tool is always required to
extract words from a sentence. However, a word
segmenter may identify word boundaries errone-
ously, resulting in the loss of correct Chinese
words. This problem is particularly severe if there
are a lot of out-of-vocabulary words in a dataset. In
Chinese, around 70% of all Chinese words are
Chinese character bigrams (Chen et al., 1997).
Thus, using Chinese character bigrams as features
will allow us to identify a lot of Chinese words,
which when combined with the words extracted by
the word segmenter, will give us a wider coverage
of Chinese words.
The third feature type is extracted from news
metadata. A news article’s metadata are its news
</bodyText>
<figure confidence="0.958428333333333">
4 http://nlp.stanford.edu/software/segmenter.shtml
[20%,30%)
[40%,50%)
[60%,70%)
[80%,90%)
[90%,100%]
[50%,60%)
[70%,80%)
[30%,40%)
</figure>
<page confidence="0.988623">
139
</page>
<bodyText confidence="0.9993648">
category, agency, hour of publication, reporter, and
event location. Examples of news categories in-
clude sports and political. Again, we use binary
feature values. News metadata are used because
they may contain implicit emotional information.
</bodyText>
<sectionHeader confidence="0.999592" genericHeader="evaluation">
6 Experiments
</sectionHeader>
<bodyText confidence="0.999914444444444">
The experiments are designed to achieve the fol-
lowing four goals: (i) to compare the ranking per-
formance of different methods, (ii) to analyze the
pairwise ranking quality of PLM, (iii) to analyze
the distribution estimation quality of EDR, and (iv)
to compare the ranking performance of different
feature sets. The Yahoo! News training and test
corpora presented in Section 4 are used in all ex-
periments.
</bodyText>
<subsectionHeader confidence="0.983608">
6.1 Evaluation Metrics for Ranking
</subsectionHeader>
<bodyText confidence="0.999904117647059">
We employ three metrics as indicators of ranking
quality: ACC@k, NDCG@k and SACC@k.
ACC@k stands for accuracy at position k. Ac-
cording to ACC@k, a predicted ranked list is cor-
rect if the list’s first k items are identical (i.e., same
items in the same order) to the true ranked list’s
first k items. If two emotions in a list have the
same number of votes, then their positions are in-
terchangeable. ACC@k is computed by dividing
the number of correctly-predicted instances by the
total number of instances.
NDCG@k, or normalized discounted cumulative
gain at position k (Järvelin and Kekäläinen, 2002),
is a metric frequently used in information retrieval
to judge the quality of a ranked list when multiple
levels of relevance are considered. This metric is
defined as
</bodyText>
<equation confidence="0.9940628">
k reli
@ k z
= k ∑ =
i 1 log2 ( 1)
i +
</equation>
<bodyText confidence="0.999984757575758">
where reli is the relevance score of the predicted
item at position i, and zk is a normalizing factor
which ensures that a correct ranked list has an
NDCG@k value of 1. In the emotion ranking prob-
lem, reli is the percentage of reader votes received
by the emotion at position i. Note that the log2(i+1)
value in the denominator is a discount factor which
decreases the weights of items ranked later in a list.
NDCG@k has the range [0, 1], where 1 is the best.
In the experiment results, NDCG@k values are
averaged over all instances in the test corpus.
NDCG@k is used because ACC@k has the dis-
advantage of not taking emotional distributions
into account. Take Figure 1 as an example. In the
figure, heartwarming and happy have 31.3% and
30.7% of the votes, respectively. Since the two
percentages are very close, it is reasonable to say
that predicting happy as the first item in a ranked
list may also be acceptable. However, doing so
would be completely incorrect according to
ACC@k. In contrast, NDCG@k would consider it
to be partially correct, and the extent of correctness
depends on how much heartwarming and happy’s
percentages of votes differ. To be exact, if happy is
predicted as the first item, then the corresponding
NDCG@1 would be 30.7% / 31.3% = 0.98.
The third metric is SACC@k, or set accuracy at
k. It is a variant of ACC@k. According to
SACC@k, a predicted ranked list is correct if the
set of its first k items is the same as the true ranked
list’s set of first k items. In effect, SACC@k evalu-
ates a ranking method’s ability to place the top k
most important items in the first k positions.
</bodyText>
<subsectionHeader confidence="0.999926">
6.2 Tuning SVM and SVR Parameters
</subsectionHeader>
<bodyText confidence="0.9989509">
SVM and SVR are employed in PLM and EDR,
respectively. Both SVM and SVR have the adjust-
able C cost parameter, and SVR has an additional ε
parameter. To estimate the optimal C value for a
combination of SVM and features, we perform 4-
fold cross-validation on the Yahoo! News training
corpus, and select the C value which results in the
highest binary classification accuracy during cross-
validation. The same procedure is used to estimate
the best C and ε values for a combination of SVR
and features. The C-ε pair which results in the
lowest mean squared error during cross-validation
is chosen. The candidate C values for both SVM
and SVR are 2-10, 2-9, ..., 2-6. The candidate ε val-
ues for SVR are 10-2 and 10-1. All cross-validations
are performed solely on the training data. The test
data are not used to tune the parameters. Also,
SVM and SVR allow users to specify the type of
kernel to use. Linear kernel is selected for both
SVM and SVR.
</bodyText>
<subsectionHeader confidence="0.998485">
6.3 Nearest Neighbor Baseline
</subsectionHeader>
<bodyText confidence="0.839415">
The nearest neighbor (NN) method is used as the
baseline. The ranked emotion list of a news article
in the test corpus is predicted as follows. First, the
NDCG
</bodyText>
<page confidence="0.957535">
140
</page>
<table confidence="0.946107875">
0.8 NDCG Value 1.0 1.0
0.6 0.9 0.8
Accuracy 0.4 NN 0.8 NN Accuracy 0.6 NN
0.2 EDR 0.7 EDR 0.4 EDR
0.0 PLM 0.6 PLM 0.2 PLM
0.5 0.0
1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8
ACC@ NDCG@ SACC@
</table>
<figureCaption confidence="0.997699">
Figure 3. ACC@k Figure 4. NDCG@k Figure 5. SACC@k
</figureCaption>
<figure confidence="0.999452875">
100%
80%
60%
40%
20%
0%
1 2 3 4 5 6 7 8
ACC@
</figure>
<figureCaption confidence="0.999947">
Figure 6. Performance of PLM and EDR.
</figureCaption>
<bodyText confidence="0.999647625">
test news article is compared to every training
news article using cosine similarity, which is de-
fined as
where di and dj are two news articles, and Di and Dj
are sets of Chinese character bigrams in di and dj,
respectively. The ranked emotion list of the train-
ing article having the highest cosine similarity with
the test article is used as the predicted ranked list.
</bodyText>
<subsectionHeader confidence="0.999299">
6.4 Comparison of Methods
</subsectionHeader>
<bodyText confidence="0.999959839285714">
Figures 3 to 5 show the performance of different
ranking methods on the test corpus. For both PLM
and EDR, all of the bigram, word, and news meta-
data features are used.
In Figure 3, EDR’s ACC@1 (0.751) is higher
than those of PLM and NN, and the differences are
statistically significant with p-value &lt; 0.01. So,
EDR is the best method at predicting the most
popular emotion. However, PLM has the best
ACC@k for k &gt;_ 2, and the differences from the
other two methods are all significant with p-value
&lt; 0.01. This means that PLM’s predicted ranked
lists better resemble the true ranked lists.
Figure 3 displays a sharp decrease in ACC@k
values as k increases. This trend indicates the hard-
ness of predicting a ranked list correctly. Looking
from a different angle, the ranking task under the
ACC@k metric is equivalent to the classification
of news articles into one of 8!/(8 – k)! classes,
where we regard each unique emotion sequence of
length k as a class. In fact, computing ACC@8 for
a ranking method is the same as evaluating the
method’s ability to classify a news article into one
of 8! = 40,320 classes. So, producing a completely-
correct ranked list is a difficult task.
In Figure 4, all of PLM and EDR’s NDCG@k
improvements over NN are statistically significant
with p-value &lt; 0.01. For some values of k, the dif-
ference in NDCG@k between PLM and EDR is
not significant. The high NDCG@k values (i.e.,
greater than 0.8) of PLM and EDR imply that al-
though it is difficult for PLM and EDR to generate
completely-correct ranked lists, these two methods
are effective at placing highly popular emotions to
the beginning of ranked lists.
In Figure 5, PLM outperforms the other two
methods for 2 &lt;_ k &lt;_ 7, and the differences are all
statistically significant with p-value &lt; 0.01. For
small values of k (e.g., 2 &lt;_ k &lt;_ 3), PLM’s higher
SACC@k values mean that PLM is better at plac-
ing the highly popular emotions in the top posi-
tions of a ranked list.
To further compare PLM and EDR, we examine
their performance on individual test instances. Fig-
ure 6 shows the percentage of test instances where
both PLM and EDR give incorrect lists, only PLM
gives correct lists, only EDR gives ranked lists,
and both methods give correct lists. The “Only
PLM Correct” and “Only EDR Correct” categories
are nonzero, so neither PLM nor EDR is always
better than the other.
In summary, EDR is the best at predicting the
most popular emotion according to ACC@1,
NDCG@1 and SACC@1. However, PLM gener-
ates ranked lists that better resemble the correct
ranked lists according to ACC@k and SACC@k
</bodyText>
<figure confidence="0.958852">
( , )
dd
i j
|Di |x|D� -
cos
|
n
Dj
|Di
% of Test Instances
Both
Incorrect
Only PLM
Correct
Only EDR
Correct
Both
Correct
</figure>
<page confidence="0.973727">
141
</page>
<table confidence="0.9572285">
Method Average Tb Average p-value
PLM 0.584 0.068
EDR 0.474 0.114
NN 0.392 0.155
</table>
<tableCaption confidence="0.991849">
Table 1. Kendall’s Tb statistics.
</tableCaption>
<table confidence="0.998555375">
He Su Sa Us Ha Bo An
Aw 0.80 0.75 0.78 0.77 0.82 0.76 0.79
He 0.79 0.81 0.78 0.81 0.89 0.81
Su 0.82 0.78 0.80 0.82 0.82
Sa 0.78 0.80 0.84 0.82
Us 0.82 0.91 0.82
Ha 0.83 0.79
Bo 0.80
</table>
<tableCaption confidence="0.95547725">
Table 2. Classification accuracies of SVM pairwise
emotion classifiers on the test corpus. He = heartwarm-
ing, Su = surprising, Sa = sad, Us = useful, Ha = happy,
Bo = boring, and An = angry.
</tableCaption>
<figure confidence="0.997381">
0.73
0.68
0.63
0.58
0.53
0.75 0.8 0.85 0.9
Accuracy of Pairwise Emotion Classification
</figure>
<figureCaption confidence="0.9915235">
Figure 7. Accuracy of pairwise emotion classification
and the corresponding average discrimination value.
</figureCaption>
<bodyText confidence="0.9951145">
for k &gt;_ 2. Further analysis shows that neither
method is always better than the other.
</bodyText>
<subsectionHeader confidence="0.99633">
6.5 Pairwise Ranking Quality of PLM
</subsectionHeader>
<bodyText confidence="0.999993666666667">
In this subsection, we evaluate the performance of
PLM in predicting pairwise orders.
We first examine the quality of ranked lists gen-
erated by PLM in terms of pairwise orders. To do
this, we use Kendall’s Tb correlation coefficient,
which is a statistical measure for determining the
correlation between two ranked lists when there
may be ties between two items in a list (Liebetrau,
1983). The value of Tb is determined based on the
number of concordant pairwise orders and the
number of discordant pairwise orders between two
ranked lists. Therefore, this measure is appropriate
for evaluating the effectiveness of PLM at predict-
ing pairwise orders correctly. Tb has the range [-1,
1], where 1 means a perfect positive correlation,
and -1 means two lists are the reverse of each other.
When computing Tb of two ranked lists, we also
calculate a p-value to indicate whether the correla-
tion is statistically significant.
We compute Tb statistics between a predicted
ranked list and the corresponding true ranked list.
Table 1 shows the results. In Table 1, numbers in
the “Average Tb” and “Average p-value” columns
are averaged over all test instances. The statistics
for EDR and NN are also included for comparison.
From the table, we see that PLM has the highest
average Tb value and the lowest average p-value, so
PLM is better at preserving pairwise orders than
EDR and NN methods. This observation verifies
that PLM’s minimization of pairwise loss leads to
better prediction of pairwise orders.
We now look at the individual performance of
the 28 pairwise emotion rankers gjk. As mentioned
in Section 3.2, each pairwise emotion ranker gjk is
equivalent to a binary classifier for classifying a
document into the ej or ek category. So, we look at
their classification accuracies in Table 2. In the
table, accuracy ranges from 0.75 for the awesome-
surprising pair to 0.91 for the useful-boring pair.
From the psychological perspective, the rela-
tively low accuracy of the awesome-surprising pair
is expected, because awesome is surprising in a
positive sense. So, readers should have a hard time
distinguishing between these two emotions. And
the SVM classifier, which models reader responses,
should also find it difficult to discern these two
emotions. Based on this observation, we suspect
that the pairwise classification performance actu-
ally reflects the underlying emotional ambiguity
experienced by readers. To verify this, we quantify
the degree of ambiguity between two emotions,
and compare the result to pairwise classification
accuracy.
To quantify emotional ambiguity, we introduce
the concept of discrimination value between two
emotions ej and ek in a document di, which is de-
fined as follows:
</bodyText>
<equation confidence="0.956216428571429">
f e f
i j
( )− i
f e f e
i j
( ) ( )
+ i k
</equation>
<bodyText confidence="0.999412">
where fi is the emotional probability function de-
fined in Section 3.1. Intuitively, the larger the dis-
crimination value is, the smaller the degree of
ambiguity between two emotions is.
</bodyText>
<figureCaption confidence="0.997167666666667">
Figure 7 shows the relationship between pair-
wise classification accuracy and the average dis-
crimination value of the corresponding emotion
</figureCaption>
<figure confidence="0.969711916666667">
Average Discrimination
Value of Emotion Pair
( )
ek
142
Mean Squared Error
0.08
0.06
0.04
0.02
0.00
Emotion
</figure>
<figureCaption confidence="0.995622">
Figure 8. Mean squared error of NN and EDR for esti-
mating the emotional distributions of the test corpus.
</figureCaption>
<figure confidence="0.99936">
0.8
Metadata
Words
Bigrams
All
0.0
1 2 3 4 5 6 7 8
ACC@
</figure>
<figureCaption confidence="0.999978">
Figure 9. PLM performance using different features.
</figureCaption>
<bodyText confidence="0.999992692307692">
pair. The general pattern is that as accuracy in-
creases, the discrimination value also increases. To
provide concrete evidence, we use Pearson’s prod-
uct-moment correlation coefficient, which has the
range of [-1, 1], where 1 means a perfect positive
correlation (Moore, 2006). The coefficient for the
data in Figure 7 is 0.726 with p-value &lt; 0.01. Thus,
pairwise emotion classification accuracy reflects
the emotional ambiguity experienced by readers.
In summary, PLM’s pairwise loss minimization
leads to better pairwise order predictions than EDR
and NN. Also, the pairwise classification results
reveal the inherent ambiguity between emotions.
</bodyText>
<subsectionHeader confidence="0.965341">
6.6 Distribution Estimation Quality of EDR
</subsectionHeader>
<bodyText confidence="0.999865473684211">
In this subsection, we evaluate EDR’s performance
in estimating the emotional probability function fi.
With the prior knowledge that a news article’s fi
values sum to 1 over all emotions, and fi is between
0 and 1, we adjust EDR’s fi predictions to produce
proper distributions. It is done as follows. A pre-
dicted fi value greater than 1 or less than 0 is set to
1 and 0, respectively. Then the predicted fi values
are normalized to sum to 1 over all emotions.
NN’s distribution estimation performance is in-
cluded for comparison. For NN, the predicted fi
values of a test article are taken from the emotional
distribution of the most similar training article.
Figure 8 shows the mean squared error of EDR
and NN for predicting fi. In the figure, the error
generated by EDR is less than those by NN, and all
the differences are statistically significant with p-
value &lt; 0.01. Thus, EDR’s use of regression leads
to better estimation of fi than the NN.
</bodyText>
<subsectionHeader confidence="0.998058">
6.7 Comparison of Features
</subsectionHeader>
<bodyText confidence="0.999976285714286">
Figure 9 shows each of the three feature type’s
ACC@k for predicting test instances’ ranked lists
when PLM is used. The feature comparison graph
for EDR is not shown, because it exhibits a very
similar trend as PLM. For both PLM and EDR,
bigrams are better than words, which are in turn
better than news metadata. In Figure 9, the combi-
nation of all three feature sets achieves the best
performance. For both PLM and EDR, the im-
provements in ACC@k of using all features over
words and metadata are all significant with p-value
&lt; 0.01, and the improvements over bigrams are
significant for k ≤ 2. Hence, in general, it is better
to use all three feature types together.
</bodyText>
<sectionHeader confidence="0.99878" genericHeader="conclusions">
7 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999994368421053">
This paper presents two methods to ranking reader
emotions. The PLM method minimizes pairwise
loss, and the EDR method estimates emotional dis-
tribution through regression. Experiments with
significant tests show that EDR is better at predict-
ing the most popular emotion, but PLM produces
ranked lists that have higher correlation with the
correct lists. We further verify that PLM has better
pairwise ranking performance than the other two
methods, and EDR has better distribution estima-
tion performance than NN.
As for future work, there are several directions
we can pursue. An observation is that PLM ex-
ploits pairwise order information, whereas EDR
exploits emotional distribution information. We
plan to combine these two methods together. An-
other research direction is to improve EDR by
finding better features. We would also like to inte-
grate emotion ranking into information retrieval.
</bodyText>
<sectionHeader confidence="0.999332" genericHeader="acknowledgments">
Acknowledgments
</sectionHeader>
<bodyText confidence="0.998659">
We are grateful to the Computer and Information
Networking Center, National Taiwan University,
for the support of high-performance computing
facilities. The research in this paper was partially
supported by National Science Council, Taiwan,
under the contract NSC 96-2628-E-002-240-MY3.
</bodyText>
<figure confidence="0.998679142857143">
Awesome
Useful
Sad
Heartwarming
Surprising
Happy
Boring
Angry
NN
EDR
0.6
Accuracy
0.4
0.2
</figure>
<page confidence="0.995703">
143
</page>
<sectionHeader confidence="0.998113" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999941085714286">
Saima Aman and Stan Szpakowicz. 2007. Identifying
Expressions of Emotion in Text. In Proceedings of
10th International Conference on Text, Speech and
Dialogue, Lecture Notes in Computer Science 4629,
196-205. Springer, Plzeň, CZ.
Aitao Chen, Jianzhang He, Liangjie Xu, Frederic Gey,
and Jason Meggs. 1997. Chinese Text Retrieval
wihtout using a Dictionary. In Proceedings of 20th
Annual International ACM SIGIR Conference on
Research and Development in Information Retrieval,
42-49. Association for Computing Machinery, Phila-
delphia, US.
Yoav Freund, Raj D. Iyer, Robert E. Schapire, and
Yoram Singer. 2003. An Efficient Boosting Algorithm
for Combining Preferences. Journal of Machine
Learning Research, 4, 933-969.
Yi Hu, Jianyong Duan, Xiaoming Chen, Bingzhen Pei,
and Ruzhan Lu. 2005. A New Method for Sentiment
Classification in Text Retrieval. In Proceedings of
2nd International Joint Conference on Natural Lan-
guage Processing, 1-9. Jeju Island, KR.
Kalervo Järvelin and Jaana Kekäläinen. Cumulative
Gain-based Evaluation of IR Techniques. 2002.
ACM Transactions on Information Systems, 20(4),
422-446.
Thorsten Joachims. 2002. Optimizing Search Engines
using Clickthrough Data. In Proceedings of 8th
ACM SIGKDD International Conference on Knowl-
edge Discovery and Data Mining. Association for
Computing Machinery, Edmonton, CA.
Albert M. Liebetrau. 1983. Measures of Association.
Sage Publications, Newbury Park, US.
Kevin H. Lin, Changhua Yang, and Hsin-Hsi Chen.
2007. What Emotions do News Articles Trigger in
their Readers? In Proceedings of 30th ACM SIGIR
Conference, 733-734. Association for Computing
Machinery, Amsterdam, NL.
Kevin H. Lin, Changhua Yang, and Hsin-Hsi Chen.
2008. Emotion Classification of Online News Articles
from the Reader’s Perspective. In Proceedings of In-
ternational Conference on Web Intelligence. Institute
of Electrical and Electronics Engineers, Sydney, AU.
David Moore. 2006. The Basic Practice of Statistics.
W.H. Freeman and Company, New York, US.
Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan.
2002. Thumbs up? Sentiment Classification Using
Machine Learning Techniques. In Proceedings of
2002 Conference on Empirical Methods in Natural
Language Processing, 79-86. Association for Com-
putational Linguistics, Philadelphia, US.
Tao Qin, Tie-Yan Liu, Wei Lai, Xu-Dong Zhang, De-
Sheng Wang, and Hang Li. 2007. Ranking with Mul-
tiple Hyperplanes. In Proceedings of 30th ACM
SIGIR Conference, 279-286. Association for Com-
puting Machinery, Amsterdam, NL.
Bernhard Schölkopf, Alex J. Smola, Robert C. William-
son, and Peter L. Barlett. 2000. New Support Vector
Algorithms. Neural Computation, 12(5), 1207-1245.
Carlo Strapparava and Rada Mihalcea. 2007. SemEval-
2007 Task 14: Affective Text. In Proceedings of 4th
International Workshop on Semantic Evaluations.
Prague, CZ.
Janyce M. Wiebe. 2000. Learning Subjective Adjectives
from Corpora. In Proceedings of 17th Conference of
the American Association for Artificial Intelligence,
735-740. AAAI Press, Austin, US.
Ting-Fan Wu, Chih-Jen Lin, and Ruby C. Weng. Prob-
ability Estimates for Multi-class Classification by
Pairwise Coupling. 2004. Journal of Machine Learn-
ing Research, 5, 975-1005.
</reference>
<page confidence="0.998597">
144
</page>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.833687">
<title confidence="0.991119">Ranking Reader Emotions Using Pairwise Loss Minimization Emotional Distribution Regression</title>
<author confidence="0.999141">Hsin-Yih Lin</author>
<affiliation confidence="0.9951505">Department of Computer Science and Information National Taiwan</affiliation>
<address confidence="0.955504">No. 1 Roosevelt Rd. Sec. 4, Taipei,</address>
<email confidence="0.889553">f93141@csie.ntu.edu.tw</email>
<email confidence="0.889553">hhchen@csie.ntu.edu.tw</email>
<abstract confidence="0.999766944444444">This paper presents two approaches to ranking reader emotions of documents. Past studies assign a document to a single emotion category, so their methods cannot be applied directly to the emotion ranking problem. Furthermore, whereas previous research analyzes emotions from the writer’s perspective, this work examines readers’ emotional states. The first approach proposed in this paper minimizes pairwise ranking errors. In the second approach, regression is used to model emotional distributions. Experiment results show that the regression method is more effective at identifying the most popular emotion, but the pairwise loss minimization method produces ranked lists of emotions that have better correlations with the correct lists.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Saima Aman</author>
<author>Stan Szpakowicz</author>
</authors>
<title>Identifying Expressions of Emotion in Text.</title>
<date>2007</date>
<booktitle>In Proceedings of 10th International Conference on Text, Speech and Dialogue, Lecture Notes in Computer Science 4629,</booktitle>
<pages>196--205</pages>
<publisher>Springer,</publisher>
<location>Plzeň, CZ.</location>
<contexts>
<context position="4948" citStr="Aman and Szpakowicz (2007)" startWordPosition="756" endWordPosition="760">spective. Pang et al. (2002) design an algorithm to determine whether a document’s author expresses a positive or negative sentiment. They discover that using Support Vector Machines (SVM) with word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from texts at granularities finer than documents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (Freund et al., 2003) and (Qin et al., 2007). In particular, the training ph</context>
</contexts>
<marker>Aman, Szpakowicz, 2007</marker>
<rawString>Saima Aman and Stan Szpakowicz. 2007. Identifying Expressions of Emotion in Text. In Proceedings of 10th International Conference on Text, Speech and Dialogue, Lecture Notes in Computer Science 4629, 196-205. Springer, Plzeň, CZ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Aitao Chen</author>
<author>Jianzhang He</author>
<author>Liangjie Xu</author>
<author>Frederic Gey</author>
<author>Jason Meggs</author>
</authors>
<title>Chinese Text Retrieval wihtout using a Dictionary.</title>
<date>1997</date>
<booktitle>In Proceedings of 20th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,</booktitle>
<pages>42--49</pages>
<institution>Association for Computing Machinery,</institution>
<location>Philadelphia, US.</location>
<contexts>
<context position="14818" citStr="Chen et al., 1997" startWordPosition="2562" endWordPosition="2565">s to increase the coverage of Chinese words. A Chinese word is formed by one or more contiguous Chinese characters. As mentioned earlier, Chinese words in a sentence are not separated by any boundary symbol (e.g., a space), so a Chinese word segmentation tool is always required to extract words from a sentence. However, a word segmenter may identify word boundaries erroneously, resulting in the loss of correct Chinese words. This problem is particularly severe if there are a lot of out-of-vocabulary words in a dataset. In Chinese, around 70% of all Chinese words are Chinese character bigrams (Chen et al., 1997). Thus, using Chinese character bigrams as features will allow us to identify a lot of Chinese words, which when combined with the words extracted by the word segmenter, will give us a wider coverage of Chinese words. The third feature type is extracted from news metadata. A news article’s metadata are its news 4 http://nlp.stanford.edu/software/segmenter.shtml [20%,30%) [40%,50%) [60%,70%) [80%,90%) [90%,100%] [50%,60%) [70%,80%) [30%,40%) 139 category, agency, hour of publication, reporter, and event location. Examples of news categories include sports and political. Again, we use binary fea</context>
</contexts>
<marker>Chen, He, Xu, Gey, Meggs, 1997</marker>
<rawString>Aitao Chen, Jianzhang He, Liangjie Xu, Frederic Gey, and Jason Meggs. 1997. Chinese Text Retrieval wihtout using a Dictionary. In Proceedings of 20th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 42-49. Association for Computing Machinery, Philadelphia, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yoav Freund</author>
<author>Raj D Iyer</author>
<author>Robert E Schapire</author>
<author>Yoram Singer</author>
</authors>
<title>An Efficient Boosting Algorithm for Combining Preferences.</title>
<date>2003</date>
<journal>Journal of Machine Learning Research,</journal>
<volume>4</volume>
<pages>933--969</pages>
<contexts>
<context position="5493" citStr="Freund et al., 2003" startWordPosition="836" endWordPosition="839"> investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (Freund et al., 2003) and (Qin et al., 2007). In particular, the training phase of the Joachims’ Ranking SVM (Joachims, 2002) is formulated as the following SVM optimization problem: min w,ξ, , w w 1 T +C ∑ i j k ξ , , i j k 2 subject to: ∈V S I kJ &gt; sk,j w (Φ(qk,di)−Φ(qk,dj))≥1−ξi,j,k (1) ∀ ∀ ∀ i j k : ξ ≥ i j k , , where the training corpus, is the feature vector of document with respect to query qk, is the relevance score of with respect to qk, w is a weight vector, C is the SVM cost parameter, and are slack variables. The set of constraints at (1) means that document pairwise orders should be preserved. Unfort</context>
</contexts>
<marker>Freund, Iyer, Schapire, Singer, 2003</marker>
<rawString>Yoav Freund, Raj D. Iyer, Robert E. Schapire, and Yoram Singer. 2003. An Efficient Boosting Algorithm for Combining Preferences. Journal of Machine Learning Research, 4, 933-969.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Yi Hu</author>
<author>Jianyong Duan</author>
<author>Xiaoming Chen</author>
<author>Bingzhen Pei</author>
<author>Ruzhan Lu</author>
</authors>
<title>A New Method for Sentiment Classification in Text Retrieval.</title>
<date>2005</date>
<booktitle>In Proceedings of 2nd International Joint Conference on Natural Language Processing,</booktitle>
<pages>1--9</pages>
<location>Jeju Island, KR.</location>
<contexts>
<context position="4666" citStr="Hu et al., 2005" startWordPosition="716" endWordPosition="719">and results. Section 7 concludes the paper. 2 Related Work Only a few studies in the past deal with the reader aspect of emotion analysis. For example, Lin et al. (2007; 2008) classify documents into readeremotion categories. Most previous work focuses on the writer’s perspective. Pang et al. (2002) design an algorithm to determine whether a document’s author expresses a positive or negative sentiment. They discover that using Support Vector Machines (SVM) with word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from texts at granularities finer than documents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniq</context>
</contexts>
<marker>Hu, Duan, Chen, Pei, Lu, 2005</marker>
<rawString>Yi Hu, Jianyong Duan, Xiaoming Chen, Bingzhen Pei, and Ruzhan Lu. 2005. A New Method for Sentiment Classification in Text Retrieval. In Proceedings of 2nd International Joint Conference on Natural Language Processing, 1-9. Jeju Island, KR.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kalervo Järvelin</author>
<author>Jaana Kekäläinen</author>
</authors>
<title>Cumulative Gain-based Evaluation of IR Techniques.</title>
<date>2002</date>
<journal>ACM Transactions on Information Systems,</journal>
<volume>20</volume>
<issue>4</issue>
<pages>422--446</pages>
<contexts>
<context position="16567" citStr="Järvelin and Kekäläinen, 2002" startWordPosition="2836" endWordPosition="2839">aluation Metrics for Ranking We employ three metrics as indicators of ranking quality: ACC@k, NDCG@k and SACC@k. ACC@k stands for accuracy at position k. According to ACC@k, a predicted ranked list is correct if the list’s first k items are identical (i.e., same items in the same order) to the true ranked list’s first k items. If two emotions in a list have the same number of votes, then their positions are interchangeable. ACC@k is computed by dividing the number of correctly-predicted instances by the total number of instances. NDCG@k, or normalized discounted cumulative gain at position k (Järvelin and Kekäläinen, 2002), is a metric frequently used in information retrieval to judge the quality of a ranked list when multiple levels of relevance are considered. This metric is defined as k reli @ k z = k ∑ = i 1 log2 ( 1) i + where reli is the relevance score of the predicted item at position i, and zk is a normalizing factor which ensures that a correct ranked list has an NDCG@k value of 1. In the emotion ranking problem, reli is the percentage of reader votes received by the emotion at position i. Note that the log2(i+1) value in the denominator is a discount factor which decreases the weights of items ranked</context>
</contexts>
<marker>Järvelin, Kekäläinen, 2002</marker>
<rawString>Kalervo Järvelin and Jaana Kekäläinen. Cumulative Gain-based Evaluation of IR Techniques. 2002. ACM Transactions on Information Systems, 20(4), 422-446.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Thorsten Joachims</author>
</authors>
<title>Optimizing Search Engines using Clickthrough Data.</title>
<date>2002</date>
<booktitle>In Proceedings of 8th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. Association for Computing Machinery,</booktitle>
<location>Edmonton, CA.</location>
<contexts>
<context position="5470" citStr="Joachims, 2002" startWordPosition="834" endWordPosition="835">ents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (Freund et al., 2003) and (Qin et al., 2007). In particular, the training phase of the Joachims’ Ranking SVM (Joachims, 2002) is formulated as the following SVM optimization problem: min w,ξ, , w w 1 T +C ∑ i j k ξ , , i j k 2 subject to: ∈V S I kJ &gt; sk,j w (Φ(qk,di)−Φ(qk,dj))≥1−ξi,j,k (1) ∀ ∀ ∀ i j k : ξ ≥ i j k , , where the training corpus, is the feature vector of document with respect to query qk, is the relevance score of with respect to qk, w is a weight vector, C is the SVM cost parameter, and are slack variables. The set of constraints at (1) means that document pairwise orders shou</context>
<context position="8326" citStr="Joachims (2002)" startWordPosition="1346" endWordPosition="1347">ization. Whereas Ranking SVM generates only a single ranking function, our method creates a pairwise ranking function gjk : D → ℜ for each pair of emotions ej and ek, aiming at satisfying the maximum number of the inequalities: ∀di∈D |fi(ej) &gt; fi(ek) : gjk(di) &gt; 0 ∀di∈D |fi(ej) &lt; fi(ek) : gjk(di) &lt; 0 In other words, we want to minimize the number of incorrectly-ordered emotion pairs. We further require gjk(di) to have the linear form wTΩ(di) + b, where w is a weight vector, b is a constant, and Ω(di) is the feature vector of di. Details of feature extraction will be presented in Section 5. As Joachims (2002) points out, the above type of problem is NP-Hard. However, an approximate solution to finding gik can be obtained by solving the following SVM optimization problem: min b w , ξ i1 2wT w+C∑ξi subject to: ∈ Q f e f e |( ) ( ) : &gt; i j i k Q f e f e |( ) ( ) : ( ( ) ) T ∈ &lt; w − Ω + ≥ d b i j i k i ∀ ≥ i : ξ i where C is the SVM cost parameter, ξi are slack variables, and Q is the training corpus. We assume each document di∈Q is labeled with fi(ej) for every emotion ej∈E. When formulated as an SVM optimization problem, finding gjk is equivalent to training an SVM classifier for classifying a docum</context>
</contexts>
<marker>Joachims, 2002</marker>
<rawString>Thorsten Joachims. 2002. Optimizing Search Engines using Clickthrough Data. In Proceedings of 8th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. Association for Computing Machinery, Edmonton, CA.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Albert M Liebetrau</author>
</authors>
<title>Measures of Association.</title>
<date>1983</date>
<publisher>Sage Publications,</publisher>
<location>Newbury Park, US.</location>
<contexts>
<context position="24187" citStr="Liebetrau, 1983" startWordPosition="4236" endWordPosition="4237">re 7. Accuracy of pairwise emotion classification and the corresponding average discrimination value. for k &gt;_ 2. Further analysis shows that neither method is always better than the other. 6.5 Pairwise Ranking Quality of PLM In this subsection, we evaluate the performance of PLM in predicting pairwise orders. We first examine the quality of ranked lists generated by PLM in terms of pairwise orders. To do this, we use Kendall’s Tb correlation coefficient, which is a statistical measure for determining the correlation between two ranked lists when there may be ties between two items in a list (Liebetrau, 1983). The value of Tb is determined based on the number of concordant pairwise orders and the number of discordant pairwise orders between two ranked lists. Therefore, this measure is appropriate for evaluating the effectiveness of PLM at predicting pairwise orders correctly. Tb has the range [-1, 1], where 1 means a perfect positive correlation, and -1 means two lists are the reverse of each other. When computing Tb of two ranked lists, we also calculate a p-value to indicate whether the correlation is statistically significant. We compute Tb statistics between a predicted ranked list and the cor</context>
</contexts>
<marker>Liebetrau, 1983</marker>
<rawString>Albert M. Liebetrau. 1983. Measures of Association. Sage Publications, Newbury Park, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin H Lin</author>
<author>Changhua Yang</author>
<author>Hsin-Hsi Chen</author>
</authors>
<title>What Emotions do News Articles Trigger in their Readers?</title>
<date>2007</date>
<booktitle>In Proceedings of 30th ACM SIGIR Conference,</booktitle>
<pages>733--734</pages>
<location>Amsterdam, NL.</location>
<contexts>
<context position="4218" citStr="Lin et al. (2007" startWordPosition="644" endWordPosition="647">e most popular emotion, but the pairwise loss minimization method produces ordered lists of emotions that have better correlations with the correct lists. The rest of this paper is organized as follows. Section 2 describes related work. In Section 3, details about the two proposed approaches are provided. Section 4 introduces the corpus and Section 5 presents how features are extracted from the corpus. Section 6 shows the experiment procedures and results. Section 7 concludes the paper. 2 Related Work Only a few studies in the past deal with the reader aspect of emotion analysis. For example, Lin et al. (2007; 2008) classify documents into readeremotion categories. Most previous work focuses on the writer’s perspective. Pang et al. (2002) design an algorithm to determine whether a document’s author expresses a positive or negative sentiment. They discover that using Support Vector Machines (SVM) with word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from te</context>
</contexts>
<marker>Lin, Yang, Chen, 2007</marker>
<rawString>Kevin H. Lin, Changhua Yang, and Hsin-Hsi Chen. 2007. What Emotions do News Articles Trigger in their Readers? In Proceedings of 30th ACM SIGIR Conference, 733-734. Association for Computing Machinery, Amsterdam, NL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Kevin H Lin</author>
<author>Changhua Yang</author>
<author>Hsin-Hsi Chen</author>
</authors>
<title>Emotion Classification of Online News Articles from the Reader’s Perspective.</title>
<date>2008</date>
<booktitle>In Proceedings of International Conference on Web Intelligence. Institute of Electrical and Electronics Engineers,</booktitle>
<location>Sydney, AU.</location>
<marker>Lin, Yang, Chen, 2008</marker>
<rawString>Kevin H. Lin, Changhua Yang, and Hsin-Hsi Chen. 2008. Emotion Classification of Online News Articles from the Reader’s Perspective. In Proceedings of International Conference on Web Intelligence. Institute of Electrical and Electronics Engineers, Sydney, AU.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David Moore</author>
</authors>
<title>The Basic Practice of Statistics.</title>
<date>2006</date>
<publisher>W.H. Freeman and Company,</publisher>
<location>New York, US.</location>
<contexts>
<context position="27472" citStr="Moore, 2006" startWordPosition="4781" endWordPosition="4782">onding emotion Average Discrimination Value of Emotion Pair ( ) ek 142 Mean Squared Error 0.08 0.06 0.04 0.02 0.00 Emotion Figure 8. Mean squared error of NN and EDR for estimating the emotional distributions of the test corpus. 0.8 Metadata Words Bigrams All 0.0 1 2 3 4 5 6 7 8 ACC@ Figure 9. PLM performance using different features. pair. The general pattern is that as accuracy increases, the discrimination value also increases. To provide concrete evidence, we use Pearson’s product-moment correlation coefficient, which has the range of [-1, 1], where 1 means a perfect positive correlation (Moore, 2006). The coefficient for the data in Figure 7 is 0.726 with p-value &lt; 0.01. Thus, pairwise emotion classification accuracy reflects the emotional ambiguity experienced by readers. In summary, PLM’s pairwise loss minimization leads to better pairwise order predictions than EDR and NN. Also, the pairwise classification results reveal the inherent ambiguity between emotions. 6.6 Distribution Estimation Quality of EDR In this subsection, we evaluate EDR’s performance in estimating the emotional probability function fi. With the prior knowledge that a news article’s fi values sum to 1 over all emotion</context>
</contexts>
<marker>Moore, 2006</marker>
<rawString>David Moore. 2006. The Basic Practice of Statistics. W.H. Freeman and Company, New York, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bo Pang</author>
<author>Lillian Lee</author>
<author>Shivakumar Vaithyanathan</author>
</authors>
<title>Thumbs up? Sentiment Classification Using Machine Learning Techniques.</title>
<date>2002</date>
<booktitle>In Proceedings of 2002 Conference on Empirical Methods in Natural Language Processing, 79-86. Association for Computational Linguistics,</booktitle>
<location>Philadelphia, US.</location>
<contexts>
<context position="4350" citStr="Pang et al. (2002)" startWordPosition="663" endWordPosition="666"> with the correct lists. The rest of this paper is organized as follows. Section 2 describes related work. In Section 3, details about the two proposed approaches are provided. Section 4 introduces the corpus and Section 5 presents how features are extracted from the corpus. Section 6 shows the experiment procedures and results. Section 7 concludes the paper. 2 Related Work Only a few studies in the past deal with the reader aspect of emotion analysis. For example, Lin et al. (2007; 2008) classify documents into readeremotion categories. Most previous work focuses on the writer’s perspective. Pang et al. (2002) design an algorithm to determine whether a document’s author expresses a positive or negative sentiment. They discover that using Support Vector Machines (SVM) with word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from texts at granularities finer than documents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) m</context>
</contexts>
<marker>Pang, Lee, Vaithyanathan, 2002</marker>
<rawString>Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan. 2002. Thumbs up? Sentiment Classification Using Machine Learning Techniques. In Proceedings of 2002 Conference on Empirical Methods in Natural Language Processing, 79-86. Association for Computational Linguistics, Philadelphia, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Tao Qin</author>
<author>Tie-Yan Liu</author>
<author>Wei Lai</author>
<author>Xu-Dong Zhang</author>
<author>DeSheng Wang</author>
<author>Hang Li</author>
</authors>
<title>Ranking with Multiple Hyperplanes.</title>
<date>2007</date>
<booktitle>In Proceedings of 30th ACM SIGIR Conference,</booktitle>
<pages>279--286</pages>
<location>Amsterdam, NL.</location>
<contexts>
<context position="5516" citStr="Qin et al., 2007" startWordPosition="841" endWordPosition="844">vity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (Freund et al., 2003) and (Qin et al., 2007). In particular, the training phase of the Joachims’ Ranking SVM (Joachims, 2002) is formulated as the following SVM optimization problem: min w,ξ, , w w 1 T +C ∑ i j k ξ , , i j k 2 subject to: ∈V S I kJ &gt; sk,j w (Φ(qk,di)−Φ(qk,dj))≥1−ξi,j,k (1) ∀ ∀ ∀ i j k : ξ ≥ i j k , , where the training corpus, is the feature vector of document with respect to query qk, is the relevance score of with respect to qk, w is a weight vector, C is the SVM cost parameter, and are slack variables. The set of constraints at (1) means that document pairwise orders should be preserved. Unfortunately, the above sche</context>
</contexts>
<marker>Qin, Liu, Lai, Zhang, Wang, Li, 2007</marker>
<rawString>Tao Qin, Tie-Yan Liu, Wei Lai, Xu-Dong Zhang, DeSheng Wang, and Hang Li. 2007. Ranking with Multiple Hyperplanes. In Proceedings of 30th ACM SIGIR Conference, 279-286. Association for Computing Machinery, Amsterdam, NL.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Bernhard Schölkopf</author>
<author>Alex J Smola</author>
<author>Robert C Williamson</author>
<author>Peter L Barlett</author>
</authors>
<title>New Support Vector Algorithms.</title>
<date>2000</date>
<journal>Neural Computation,</journal>
<volume>12</volume>
<issue>5</issue>
<pages>1207--1245</pages>
<contexts>
<context position="10666" citStr="Schölkopf et al., 2000" startWordPosition="1785" endWordPosition="1788">scribed in (Wu et al., 2003). Lines 4 and 5 resolve the problem of conflicting emotion ordered pairs forming a loop in the ordering of emotions. The ordered list of emotions returned by Algorithm 1 at Line 7 is the final output of the PLM method. 3.3 Emotional Distribution Regression In the second approach to ranking emotions, we use regression to model fi directly. A regression function hj : D → ℜ is generated for each ej∈E by learning from the examples (Ω(di), fi(ej)) for all documents di in the training corpus. Vector Regression (SVR), which is a regression analysis technique based on SVM (Schölkopf et al., 2000). We require hj to have the form wTΩ(di) + b. Finding hj is equivalent to solving the following optimization problem: 1 min w w+ ∑ + T C i ( ,1 ξ ξ ,2) w , ξ ξ b , ,1 , , 2 2 i i i subject to: ∀ ∈ d i f e ( ) ( ( ) ) − Ω + ≥ − wT d b ε ξ i j i i, ( ( ) ) ( ) wTΩ + − d b f e i i j ∀ i: , 0 ξ ξ ≥ i , 1 i , 2 ∀ di ∀ di 1 − ξi 0 wTΩ + ≥ − ( ) 1 d b ξ The regression framework we adopt is Support i i : Q − ≥ε ξi, 1 2 138 Number of News Articles 8000 6000 4000 2000 0 Percentage of Votes Received by Most Popular Emotion Figure 2. News articles in the entire corpus grouped by the percentage of votes re</context>
</contexts>
<marker>Schölkopf, Smola, Williamson, Barlett, 2000</marker>
<rawString>Bernhard Schölkopf, Alex J. Smola, Robert C. Williamson, and Peter L. Barlett. 2000. New Support Vector Algorithms. Neural Computation, 12(5), 1207-1245.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Carlo Strapparava</author>
<author>Rada Mihalcea</author>
</authors>
<title>SemEval2007 Task 14: Affective Text.</title>
<date>2007</date>
<booktitle>In Proceedings of 4th International Workshop on Semantic Evaluations.</booktitle>
<location>Prague, CZ.</location>
<contexts>
<context position="5146" citStr="Strapparava and Mihalcea, 2007" startWordPosition="784" endWordPosition="787"> word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from texts at granularities finer than documents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (Freund et al., 2003) and (Qin et al., 2007). In particular, the training phase of the Joachims’ Ranking SVM (Joachims, 2002) is formulated as the following SVM optimization problem: min w,ξ, , w w 1 T +C ∑ i j k ξ , , i j k 2 subject to: ∈V S I kJ &gt; sk,j w (Φ(qk,di)−Φ(qk,d</context>
</contexts>
<marker>Strapparava, Mihalcea, 2007</marker>
<rawString>Carlo Strapparava and Rada Mihalcea. 2007. SemEval2007 Task 14: Affective Text. In Proceedings of 4th International Workshop on Semantic Evaluations. Prague, CZ.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Janyce M Wiebe</author>
</authors>
<title>Learning Subjective Adjectives from Corpora.</title>
<date>2000</date>
<booktitle>In Proceedings of 17th Conference of the American Association for Artificial Intelligence,</booktitle>
<pages>735--740</pages>
<publisher>AAAI Press,</publisher>
<location>Austin, US.</location>
<contexts>
<context position="4873" citStr="Wiebe (2000)" startWordPosition="748" endWordPosition="749">on categories. Most previous work focuses on the writer’s perspective. Pang et al. (2002) design an algorithm to determine whether a document’s author expresses a positive or negative sentiment. They discover that using Support Vector Machines (SVM) with word unigram features results in the best performance. Since then, more work has been done to find features better than unigrams. In (Hu et al., 2005), word sentiment information is exploited to achieve better classification accuracy. Experiments have been done to extract emotional information from texts at granularities finer than documents. Wiebe (2000) investigates the subjectivity of words, whereas Aman and Szpakowicz (2007) manually label phrases with emotional categories. In 2007, the SemEval-2007 workshop organized a task on the unsupervised annotation of news headlines with emotions (Strapparava and Mihalcea, 2007). As for the task of ranking, many machinelearning algorithms have been proposed in information retrieval. These techniques generate ranking functions which predict the relevance of a document. One class of algorithms minimizes the errors resulting from ordering document pairs incorrectly. Examples include (Joachims, 2002), (</context>
</contexts>
<marker>Wiebe, 2000</marker>
<rawString>Janyce M. Wiebe. 2000. Learning Subjective Adjectives from Corpora. In Proceedings of 17th Conference of the American Association for Artificial Intelligence, 735-740. AAAI Press, Austin, US.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Ting-Fan Wu</author>
<author>Chih-Jen Lin</author>
<author>Ruby C Weng</author>
</authors>
<title>Probability Estimates for Multi-class Classification by Pairwise Coupling.</title>
<date>2004</date>
<journal>Journal of Machine Learning Research,</journal>
<volume>5</volume>
<pages>975--1005</pages>
<marker>Wu, Lin, Weng, 2004</marker>
<rawString>Ting-Fan Wu, Chih-Jen Lin, and Ruby C. Weng. Probability Estimates for Multi-class Classification by Pairwise Coupling. 2004. Journal of Machine Learning Research, 5, 975-1005.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>